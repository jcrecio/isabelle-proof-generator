{"file_name": "/home/qj213/afp-2021-10-22/thys/Gauss_Jordan/Gauss_Jordan_PA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gauss_Jordan", "problem_names": ["lemma Gauss_Jordan_wrapper_code[code abstract]:\n  \"vec_nth (Gauss_Jordan_wrapper i j A B) = (%s. if s=i then A $ s else (row_add A s i (-(B$s$j))) $ s)\"", "lemma Gauss_Jordan_in_ij_PA_def'[code]:\n   \"Gauss_Jordan_in_ij_PA A' i j = (let P=fst A'; A=snd A';\n                                        n = (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n);\n                                        interchange_A = (interchange_rows A i n);\n                                        A' = mult_row interchange_A i (1/interchange_A$i$j);\n                                        interchange_P = (interchange_rows P i n);\n                                        P' = mult_row interchange_P i (1/interchange_A$i$j)\n                                        in                                       \n                                       (Gauss_Jordan_wrapper i j P' interchange_A, \n                                        Gauss_Jordan_wrapper i j A' interchange_A))\"", "lemma snd_Gauss_Jordan_in_ij_PA_eq[code_unfold]: \"snd (Gauss_Jordan_in_ij_PA (P,A) i j) = Gauss_Jordan_in_ij A i j\"", "lemma fst_Gauss_Jordan_in_ij_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nassumes PB_A: \"P ** B = A\"\nshows \"fst (Gauss_Jordan_in_ij_PA (P,A) i j) ** B = snd (Gauss_Jordan_in_ij_PA (P,A) i j)\"", "lemma fst_Gauss_Jordan_column_k: \nassumes \"i\\<le>nrows A\"\nshows \"fst (Gauss_Jordan_column_k (i, A) k) \\<le> nrows A\"", "lemma fst_Gauss_Jordan_column_k_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nassumes PB_A: \"P ** B = A\"\nshows \"fst (Gauss_Jordan_column_k_PA (P,i,A) k) ** B = snd (snd (Gauss_Jordan_column_k_PA (P,i,A) k))\"", "lemma snd_snd_Gauss_Jordan_column_k_PA_eq: \nshows \"snd (snd (Gauss_Jordan_column_k_PA (P,i,A) k)) = snd (Gauss_Jordan_column_k (i,A) k)\"", "lemma fst_snd_Gauss_Jordan_column_k_PA_eq: \nshows \"fst (snd (Gauss_Jordan_column_k_PA (P,i,A) k)) = fst (Gauss_Jordan_column_k (i,A) k)\"", "lemma fst_Gauss_Jordan_upt_k_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nshows \"fst (Gauss_Jordan_upt_k_PA A k) ** A = snd (Gauss_Jordan_upt_k_PA A k)\"", "lemma snd_foldl_Gauss_Jordan_column_k_eq:\n\"snd (foldl Gauss_Jordan_column_k_PA (mat 1, 0, A) [0..<k]) = foldl Gauss_Jordan_column_k (0, A) [0..<k]\"", "lemma snd_Gauss_Jordan_upt_k_PA:\nshows \"snd (Gauss_Jordan_upt_k_PA A k) = (Gauss_Jordan_upt_k A k)\"", "lemma fst_Gauss_Jordan_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nshows \"fst (Gauss_Jordan_PA A) ** A = snd (Gauss_Jordan_PA A)\"", "lemma Gauss_Jordan_PA_eq:\nshows \"snd (Gauss_Jordan_PA A)= (Gauss_Jordan A)\"", "lemma fst_row_add_iterate_PA_preserves_greater_than_n:\n  assumes n: \"n<nrows A\"\n  and a: \"to_nat a > n\"\n  shows \"fst (row_add_iterate_PA (P,A) n i j) $ a $ b = P $ a $ b\"", "lemma snd_row_add_iterate_PA_eq_row_add_iterate:\nshows \"snd (row_add_iterate_PA (P,A) n i j)  = row_add_iterate A n i j\"", "lemma row_add_iterate_PA_preserves_pivot_row:\n  assumes n: \"n<nrows A\"\n  and a: \"to_nat i \\<le> n\"\n  shows \"fst (row_add_iterate_PA (P,A) n i j) $ i $ b = P $ i $ b\"", "lemma fst_row_add_iterate_PA_eq_row_add:\n  fixes A::\"'a::{ring_1}^'n^'m::{mod_type}\"\n  assumes a_not_i: \"a \\<noteq> i\"\n  and n: \"n<nrows A\"\n  and \"to_nat a \\<le> n\"\n  shows \"fst (row_add_iterate_PA (P,A) n i j) $ a $ b = (row_add P a i (- A $ a $ j)) $ a $ b\"", "lemma fst_row_add_iterate_PA_eq_fst_Gauss_Jordan_in_ij_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nand i::\"'rows\" and j::\"'cols\"\nand P::\"'a::{field}^'rows::{mod_type}^'rows::{mod_type}\"\ndefines A': \"A'== mult_row (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) $ i $ j)\"\ndefines P': \"P'== mult_row (interchange_rows P i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) $ i $ j)\"\nshows \"fst (row_add_iterate_PA (P',A') (nrows A - 1) i j)  = fst (Gauss_Jordan_in_ij_PA (P,A) i j)\"", "lemma invertible_fst_row_add_iterate_PA:\n  fixes A::\"'a::{ring_1}^'n^'m::{mod_type}\"\n  assumes n: \"n<nrows A\"\n  and inv_P: \"invertible P\"\n  shows \"invertible (fst (row_add_iterate_PA (P,A) n i j))\"", "lemma invertible_fst_Gauss_Jordan_in_ij_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nassumes inv_P: \"invertible P\"\nand not_all_zero: \"\\<not> (\\<forall>m\\<ge>i. A $ m $ j = 0)\"\nshows \"invertible (fst (Gauss_Jordan_in_ij_PA (P,A) i j))\"", "lemma invertible_fst_Gauss_Jordan_column_k_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nassumes inv_P: \"invertible P\"\nshows \"invertible (fst (Gauss_Jordan_column_k_PA (P,i,A) k))\"", "lemma invertible_fst_Gauss_Jordan_upt_k_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nshows \"invertible (fst (Gauss_Jordan_upt_k_PA A k))\"", "lemma invertible_fst_Gauss_Jordan_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nshows \"invertible (fst (Gauss_Jordan_PA A))\""], "translations": [["", "lemma Gauss_Jordan_wrapper_code[code abstract]:\n  \"vec_nth (Gauss_Jordan_wrapper i j A B) = (%s. if s=i then A $ s else (row_add A s i (-(B$s$j))) $ s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (Gauss_Jordan_wrapper i j A B) =\n    (\\<lambda>s. if s = i then A $ s else row_add A s i (- B $ s $ j) $ s)", "unfolding Gauss_Jordan_wrapper_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>s.\n            if s = i then A $ s else row_add A s i (- B $ s $ j) $ s) =\n    (\\<lambda>s. if s = i then A $ s else row_add A s i (- B $ s $ j) $ s)", "by force"], ["", "lemma Gauss_Jordan_in_ij_PA_def'[code]:\n   \"Gauss_Jordan_in_ij_PA A' i j = (let P=fst A'; A=snd A';\n                                        n = (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n);\n                                        interchange_A = (interchange_rows A i n);\n                                        A' = mult_row interchange_A i (1/interchange_A$i$j);\n                                        interchange_P = (interchange_rows P i n);\n                                        P' = mult_row interchange_P i (1/interchange_A$i$j)\n                                        in                                       \n                                       (Gauss_Jordan_wrapper i j P' interchange_A, \n                                        Gauss_Jordan_wrapper i j A' interchange_A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gauss_Jordan_in_ij_PA A' i j =\n    (let P = fst A'; A = snd A';\n         n = LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n;\n         interchange_A = interchange_rows A i n;\n         A' = mult_row interchange_A i ((1::'a) / interchange_A $ i $ j);\n         interchange_P = interchange_rows P i n;\n         P' = mult_row interchange_P i ((1::'a) / interchange_A $ i $ j)\n     in (Gauss_Jordan_wrapper i j P' interchange_A,\n         Gauss_Jordan_wrapper i j A' interchange_A))", "unfolding Gauss_Jordan_in_ij_PA_def Gauss_Jordan_in_ij_def Let_def Gauss_Jordan_wrapper_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>s.\n        if s = i\n        then mult_row\n              (interchange_rows (fst A') i\n                (LEAST n. snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n              i ((1::'a) /\n                 interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 i $\n                 j) $\n             s\n        else row_add\n              (mult_row\n                (interchange_rows (fst A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n                i ((1::'a) /\n                   interchange_rows (snd A') i\n                    (LEAST n.\n                        snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                   i $\n                   j))\n              s i\n              (- interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 s $\n                 j) $\n             s,\n     \\<chi>s.\n        if s = i\n        then mult_row\n              (interchange_rows (snd A') i\n                (LEAST n. snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n              i ((1::'a) /\n                 interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 i $\n                 j) $\n             s\n        else row_add\n              (mult_row\n                (interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n                i ((1::'a) /\n                   interchange_rows (snd A') i\n                    (LEAST n.\n                        snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                   i $\n                   j))\n              s i\n              (- interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 s $\n                 j) $\n             s) =\n    (\\<chi>s.\n        if s = i\n        then mult_row\n              (interchange_rows (fst A') i\n                (LEAST n. snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n              i ((1::'a) /\n                 interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 i $\n                 j) $\n             s\n        else row_add\n              (mult_row\n                (interchange_rows (fst A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n                i ((1::'a) /\n                   interchange_rows (snd A') i\n                    (LEAST n.\n                        snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                   i $\n                   j))\n              s i\n              (- interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 s $\n                 j) $\n             s,\n     \\<chi>s.\n        if s = i\n        then mult_row\n              (interchange_rows (snd A') i\n                (LEAST n. snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n              i ((1::'a) /\n                 interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 i $\n                 j) $\n             s\n        else row_add\n              (mult_row\n                (interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n                i ((1::'a) /\n                   interchange_rows (snd A') i\n                    (LEAST n.\n                        snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                   i $\n                   j))\n              s i\n              (- interchange_rows (snd A') i\n                  (LEAST n.\n                      snd A' $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 s $\n                 j) $\n             s)", "by auto"], ["", "text\\<open>The second component is equal to @{term \"Gauss_Jordan_in_ij\"}\\<close>"], ["", "lemma snd_Gauss_Jordan_in_ij_PA_eq[code_unfold]: \"snd (Gauss_Jordan_in_ij_PA (P,A) i j) = Gauss_Jordan_in_ij A i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Gauss_Jordan_in_ij_PA (P, A) i j) = Gauss_Jordan_in_ij A i j", "unfolding Gauss_Jordan_in_ij_PA_def Let_def snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. Gauss_Jordan_in_ij A i j = Gauss_Jordan_in_ij A i j", ".."], ["", "lemma fst_Gauss_Jordan_in_ij_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nassumes PB_A: \"P ** B = A\"\nshows \"fst (Gauss_Jordan_in_ij_PA (P,A) i j) ** B = snd (Gauss_Jordan_in_ij_PA (P,A) i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_in_ij_PA (P, A) i j) ** B =\n    snd (Gauss_Jordan_in_ij_PA (P, A) i j)", "proof (unfold Gauss_Jordan_in_ij_PA_def' Gauss_Jordan_wrapper_def Let_def fst_conv snd_conv, subst (1 2 3 4 5 6 7 8 9 10) interchange_rows_mat_1[symmetric], subst vec_eq_iff, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<chi>s.\n         if s = i\n         then mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j) $\n              s\n         else row_add\n               (mult_row\n                 (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                  P)\n                 i ((1::'a) /\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     A) $\n                    i $\n                    j))\n               s i\n               (- (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  s $\n                  j) $\n              s) **\n     B) $\n    i =\n    mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) $\n    i\n 2. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "show \"((\\<chi> s. if s = i then mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j) $ s\n              else row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) s i\n              (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ s $ j) $ s) ** B) $ i =\n              mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<chi>s.\n         if s = i\n         then mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j) $\n              s\n         else row_add\n               (mult_row\n                 (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                  P)\n                 i ((1::'a) /\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     A) $\n                    i $\n                    j))\n               s i\n               (- (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  s $\n                  j) $\n              s) **\n     B) $\n    i =\n    mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) $\n    i", "proof (unfold matrix_matrix_mult_def, vector, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          mult_row\n           (\\<chi>ia ja.\n               \\<Sum>k\\<in>UNIV.\n                 interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 ia $\n                 k *\n                 P $ k $ ja)\n           i ((1::'a) /\n              (\\<Sum>k\\<in>UNIV.\n                 mat (1::'a) $\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 k *\n                 A $ k $ j)) $\n          i $\n          k *\n          B $ k $ ia) =\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              A $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          mult_row\n           (\\<chi>ia ja.\n               \\<Sum>k\\<in>UNIV.\n                 interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 ia $\n                 k *\n                 P $ k $ ja)\n           i ((1::'a) /\n              (\\<Sum>k\\<in>UNIV.\n                 mat (1::'a) $\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 k *\n                 A $ k $ j)) $\n          i $\n          k *\n          B $ k $ ia) =\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              A $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       ia", "have \"mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)\n** B = mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) **\n    B =\n    mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j)", "by(subst (5) PB_A[symmetric], subst (1 2) mult_row_mat_1[symmetric], unfold matrix_mul_assoc, rule refl)"], ["proof (state)\nthis:\n  mult_row\n   (interchange_rows (mat (1::'a)) i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n    P)\n   i ((1::'a) /\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      i $\n      j) **\n  B =\n  mult_row\n   (interchange_rows (mat (1::'a)) i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n    A)\n   i ((1::'a) /\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      i $\n      j)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          mult_row\n           (\\<chi>ia ja.\n               \\<Sum>k\\<in>UNIV.\n                 interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 ia $\n                 k *\n                 P $ k $ ja)\n           i ((1::'a) /\n              (\\<Sum>k\\<in>UNIV.\n                 mat (1::'a) $\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                 k *\n                 A $ k $ j)) $\n          i $\n          k *\n          B $ k $ ia) =\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              A $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       ia", "thus \"(\\<Sum>k\\<in>UNIV. mult_row (\\<chi> ia ja. \\<Sum>k\\<in>UNIV. interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ ia $ k * P $ k $ ja) i\n                     (1 / (\\<Sum>k\\<in>UNIV. mat 1 $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ k * A $ k $ j)) $ i $ k * B $ k $ ia) =\n                     mult_row (\\<chi> ia ja. \\<Sum>k\\<in>UNIV. interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ ia $ k * A $ k $ ja) i\n                     (1 / (\\<Sum>k\\<in>UNIV. mat 1 $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ k * A $ k $ j)) $ i $ ia\""], ["proof (prove)\nusing this:\n  mult_row\n   (interchange_rows (mat (1::'a)) i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n    P)\n   i ((1::'a) /\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      i $\n      j) **\n  B =\n  mult_row\n   (interchange_rows (mat (1::'a)) i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n    A)\n   i ((1::'a) /\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      i $\n      j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              P $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       k *\n       B $ k $ ia) =\n    mult_row\n     (\\<chi>ia ja.\n         \\<Sum>k\\<in>UNIV.\n           interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           k *\n           A $ k $ ja)\n     i ((1::'a) /\n        (\\<Sum>k\\<in>UNIV.\n           mat (1::'a) $\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           k *\n           A $ k $ j)) $\n    i $\n    ia", "unfolding matrix_matrix_mult_def"], ["proof (prove)\nusing this:\n  (\\<chi>ia ja.\n      \\<Sum>k\\<in>UNIV.\n        mult_row\n         (\\<chi>ia ja.\n             \\<Sum>k\\<in>UNIV.\n               interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               ia $\n               k *\n               P $ k $ ja)\n         i ((1::'a) /\n            (\\<chi>ia ja.\n                \\<Sum>k\\<in>UNIV.\n                  interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                  ia $\n                  k *\n                  A $ k $ ja) $\n            i $\n            j) $\n        ia $\n        k *\n        B $ k $ ja) =\n  mult_row\n   (\\<chi>ia ja.\n       \\<Sum>k\\<in>UNIV.\n         interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         ia $\n         k *\n         A $ k $ ja)\n   i ((1::'a) /\n      (\\<chi>ia ja.\n          \\<Sum>k\\<in>UNIV.\n            interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n            ia $\n            k *\n            A $ k $ ja) $\n      i $\n      j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              P $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       k *\n       B $ k $ ia) =\n    mult_row\n     (\\<chi>ia ja.\n         \\<Sum>k\\<in>UNIV.\n           interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           k *\n           A $ k $ ja)\n     i ((1::'a) /\n        (\\<Sum>k\\<in>UNIV.\n           mat (1::'a) $\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           k *\n           A $ k $ j)) $\n    i $\n    ia", "unfolding vec_lambda_beta"], ["proof (prove)\nusing this:\n  (\\<chi>ia ja.\n      \\<Sum>k\\<in>UNIV.\n        mult_row\n         (\\<chi>ia ja.\n             \\<Sum>k\\<in>UNIV.\n               interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               ia $\n               k *\n               P $ k $ ja)\n         i ((1::'a) /\n            (\\<Sum>k\\<in>UNIV.\n               interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i $\n               k *\n               A $ k $ j)) $\n        ia $\n        k *\n        B $ k $ ja) =\n  mult_row\n   (\\<chi>ia ja.\n       \\<Sum>k\\<in>UNIV.\n         interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         ia $\n         k *\n         A $ k $ ja)\n   i ((1::'a) /\n      (\\<Sum>k\\<in>UNIV.\n         interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         i $\n         k *\n         A $ k $ j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              P $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       k *\n       B $ k $ ia) =\n    mult_row\n     (\\<chi>ia ja.\n         \\<Sum>k\\<in>UNIV.\n           interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           k *\n           A $ k $ ja)\n     i ((1::'a) /\n        (\\<Sum>k\\<in>UNIV.\n           mat (1::'a) $\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           k *\n           A $ k $ j)) $\n    i $\n    ia", "unfolding interchange_rows_i"], ["proof (prove)\nusing this:\n  (\\<chi>ia ja.\n      \\<Sum>k\\<in>UNIV.\n        mult_row\n         (\\<chi>ia ja.\n             \\<Sum>k\\<in>UNIV.\n               interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               ia $\n               k *\n               P $ k $ ja)\n         i ((1::'a) /\n            (\\<Sum>k\\<in>UNIV.\n               mat (1::'a) $\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               k *\n               A $ k $ j)) $\n        ia $\n        k *\n        B $ k $ ja) =\n  mult_row\n   (\\<chi>ia ja.\n       \\<Sum>k\\<in>UNIV.\n         interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         ia $\n         k *\n         A $ k $ ja)\n   i ((1::'a) /\n      (\\<Sum>k\\<in>UNIV.\n         mat (1::'a) $\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         k *\n         A $ k $ j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              P $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       k *\n       B $ k $ ia) =\n    mult_row\n     (\\<chi>ia ja.\n         \\<Sum>k\\<in>UNIV.\n           interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           k *\n           A $ k $ ja)\n     i ((1::'a) /\n        (\\<Sum>k\\<in>UNIV.\n           mat (1::'a) $\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           k *\n           A $ k $ j)) $\n    i $\n    ia", "using sum.cong"], ["proof (prove)\nusing this:\n  (\\<chi>ia ja.\n      \\<Sum>k\\<in>UNIV.\n        mult_row\n         (\\<chi>ia ja.\n             \\<Sum>k\\<in>UNIV.\n               interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               ia $\n               k *\n               P $ k $ ja)\n         i ((1::'a) /\n            (\\<Sum>k\\<in>UNIV.\n               mat (1::'a) $\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               k *\n               A $ k $ j)) $\n        ia $\n        k *\n        B $ k $ ja) =\n  mult_row\n   (\\<chi>ia ja.\n       \\<Sum>k\\<in>UNIV.\n         interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         ia $\n         k *\n         A $ k $ ja)\n   i ((1::'a) /\n      (\\<Sum>k\\<in>UNIV.\n         mat (1::'a) $\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         k *\n         A $ k $ j))\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       mult_row\n        (\\<chi>ia ja.\n            \\<Sum>k\\<in>UNIV.\n              interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              ia $\n              k *\n              P $ k $ ja)\n        i ((1::'a) /\n           (\\<Sum>k\\<in>UNIV.\n              mat (1::'a) $\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n              k *\n              A $ k $ j)) $\n       i $\n       k *\n       B $ k $ ia) =\n    mult_row\n     (\\<chi>ia ja.\n         \\<Sum>k\\<in>UNIV.\n           interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           k *\n           A $ k $ ja)\n     i ((1::'a) /\n        (\\<Sum>k\\<in>UNIV.\n           mat (1::'a) $\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           k *\n           A $ k $ j)) $\n    i $\n    ia", "by (metis (lifting, no_types) vec_lambda_beta)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     mult_row\n      (\\<chi>ia ja.\n          \\<Sum>k\\<in>UNIV.\n            interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n            ia $\n            k *\n            P $ k $ ja)\n      i ((1::'a) /\n         (\\<Sum>k\\<in>UNIV.\n            mat (1::'a) $\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n            k *\n            A $ k $ j)) $\n     i $\n     k *\n     B $ k $ ia) =\n  mult_row\n   (\\<chi>ia ja.\n       \\<Sum>k\\<in>UNIV.\n         interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         ia $\n         k *\n         A $ k $ ja)\n   i ((1::'a) /\n      (\\<Sum>k\\<in>UNIV.\n         mat (1::'a) $\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n         k *\n         A $ k $ j)) $\n  i $\n  ia\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<chi>s.\n       if s = i\n       then mult_row\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              P)\n             i ((1::'a) /\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                i $\n                j) $\n            s\n       else row_add\n             (mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j))\n             s i\n             (- (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                s $\n                j) $\n            s) **\n   B) $\n  i =\n  mult_row\n   (interchange_rows (mat (1::'a)) i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n    A)\n   i ((1::'a) /\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      i $\n      j) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "assume ia_not_i: \"ia \\<noteq> i\""], ["proof (state)\nthis:\n  ia \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "have \"((\\<chi> s. if s = i then mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j) $\n             s else row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) s\n             i (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ s $ j) $ s) ** B) $ ia =\n((\\<chi> s. row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) s\n             i (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ s $ j) $ s) ** B) $ ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<chi>s.\n         if s = i\n         then mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j) $\n              s\n         else row_add\n               (mult_row\n                 (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                  P)\n                 i ((1::'a) /\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     A) $\n                    i $\n                    j))\n               s i\n               (- (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  s $\n                  j) $\n              s) **\n     B) $\n    ia =\n    ((\\<chi>s.\n         row_add\n          (mult_row\n            (interchange_rows (mat (1::'a)) i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n             P)\n            i ((1::'a) /\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                A) $\n               i $\n               j))\n          s i\n          (- (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             s $\n             j) $\n         s) **\n     B) $\n    ia", "unfolding row_matrix_matrix_mult[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>s.\n        if s = i\n        then mult_row\n              (interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n               P)\n              i ((1::'a) /\n                 (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                  i v*\n                  A) $\n                 j) $\n             s\n        else row_add\n              (mult_row\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 P)\n                i ((1::'a) /\n                   (interchange_rows (mat (1::'a)) i\n                     (LEAST n.\n                         A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                    i v*\n                    A) $\n                   j))\n              s i\n              (- (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                  s v*\n                  A) $\n                 j) $\n             s) $\n    ia v*\n    B =\n    (\\<chi>s.\n        row_add\n         (mult_row\n           (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            P)\n           i ((1::'a) /\n              (interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i v*\n               A) $\n              j))\n         s i\n         (- (interchange_rows (mat (1::'a)) i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             s v*\n             A) $\n            j) $\n        s) $\n    ia v*\n    B", "using ia_not_i"], ["proof (prove)\nusing this:\n  ia \\<noteq> i\n\ngoal (1 subgoal):\n 1. (\\<chi>s.\n        if s = i\n        then mult_row\n              (interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n               P)\n              i ((1::'a) /\n                 (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                  i v*\n                  A) $\n                 j) $\n             s\n        else row_add\n              (mult_row\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 P)\n                i ((1::'a) /\n                   (interchange_rows (mat (1::'a)) i\n                     (LEAST n.\n                         A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                    i v*\n                    A) $\n                   j))\n              s i\n              (- (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                  s v*\n                  A) $\n                 j) $\n             s) $\n    ia v*\n    B =\n    (\\<chi>s.\n        row_add\n         (mult_row\n           (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            P)\n           i ((1::'a) /\n              (interchange_rows (mat (1::'a)) i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i v*\n               A) $\n              j))\n         s i\n         (- (interchange_rows (mat (1::'a)) i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             s v*\n             A) $\n            j) $\n        s) $\n    ia v*\n    B", "by auto"], ["proof (state)\nthis:\n  ((\\<chi>s.\n       if s = i\n       then mult_row\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              P)\n             i ((1::'a) /\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                i $\n                j) $\n            s\n       else row_add\n             (mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j))\n             s i\n             (- (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                s $\n                j) $\n            s) **\n   B) $\n  ia =\n  ((\\<chi>s.\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           P)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        s i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           s $\n           j) $\n       s) **\n   B) $\n  ia\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "also"], ["proof (state)\nthis:\n  ((\\<chi>s.\n       if s = i\n       then mult_row\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              P)\n             i ((1::'a) /\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                i $\n                j) $\n            s\n       else row_add\n             (mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j))\n             s i\n             (- (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                s $\n                j) $\n            s) **\n   B) $\n  ia =\n  ((\\<chi>s.\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           P)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        s i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           s $\n           j) $\n       s) **\n   B) $\n  ia\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "have \"... = row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) ia i\n     (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ ia $ j) $ ia v* B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<chi>s.\n         row_add\n          (mult_row\n            (interchange_rows (mat (1::'a)) i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n             P)\n            i ((1::'a) /\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                A) $\n               i $\n               j))\n          s i\n          (- (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             s $\n             j) $\n         s) **\n     B) $\n    ia =\n    row_add\n     (mult_row\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        P)\n       i ((1::'a) /\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A) $\n          i $\n          j))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia v*\n    B", "by (subst (3) row_matrix_matrix_mult[symmetric], simp)"], ["proof (state)\nthis:\n  ((\\<chi>s.\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           P)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        s i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           s $\n           j) $\n       s) **\n   B) $\n  ia =\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia v*\n  B\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "also"], ["proof (state)\nthis:\n  ((\\<chi>s.\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           P)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        s i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           s $\n           j) $\n       s) **\n   B) $\n  ia =\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia v*\n  B\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "have \"... = row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) ia i\n             (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ ia $ j) $ ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add\n     (mult_row\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        P)\n       i ((1::'a) /\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A) $\n          i $\n          j))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia v*\n    B =\n    row_add\n     (mult_row\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        A)\n       i ((1::'a) /\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A) $\n          i $\n          j))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia", "apply (subst (7) PB_A[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add\n     (mult_row\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        P)\n       i ((1::'a) /\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A) $\n          i $\n          j))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia v*\n    B =\n    row_add\n     (mult_row\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        (P ** B))\n       i ((1::'a) /\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A) $\n          i $\n          j))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia", "apply (subst (1 2) mult_row_mat_1[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add\n     (mult_row (mat (1::'a)) i\n       ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) **\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       P))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia v*\n    B =\n    row_add\n     (mult_row (mat (1::'a)) i\n       ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) **\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       (P ** B)))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia", "apply (subst (1 2) row_add_mat_1[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (row_add (mat (1::'a)) ia i\n      (- (interchange_rows (mat (1::'a)) i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n          A) $\n         ia $\n         j) **\n     (mult_row (mat (1::'a)) i\n       ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) **\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       P))) $\n    ia v*\n    B =\n    (row_add (mat (1::'a)) ia i\n      (- (interchange_rows (mat (1::'a)) i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n          A) $\n         ia $\n         j) **\n     (mult_row (mat (1::'a)) i\n       ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j) **\n      (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       (P ** B)))) $\n    ia", "unfolding matrix_mul_assoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (row_add (mat (1::'a)) ia i\n      (- (interchange_rows (mat (1::'a)) i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n          A) $\n         ia $\n         j) **\n     mult_row (mat (1::'a)) i\n      ((1::'a) /\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        A) $\n       i $\n       j) **\n     interchange_rows (mat (1::'a)) i\n      (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n     P) $\n    ia v*\n    B =\n    (row_add (mat (1::'a)) ia i\n      (- (interchange_rows (mat (1::'a)) i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n          A) $\n         ia $\n         j) **\n     mult_row (mat (1::'a)) i\n      ((1::'a) /\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        A) $\n       i $\n       j) **\n     interchange_rows (mat (1::'a)) i\n      (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n     P **\n     B) $\n    ia", "unfolding row_matrix_matrix_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. (row_add (mat (1::'a)) ia i\n      (- (interchange_rows (mat (1::'a)) i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n          A) $\n         ia $\n         j) **\n     mult_row (mat (1::'a)) i\n      ((1::'a) /\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        A) $\n       i $\n       j) **\n     interchange_rows (mat (1::'a)) i\n      (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n     P **\n     B) $\n    ia =\n    (row_add (mat (1::'a)) ia i\n      (- (interchange_rows (mat (1::'a)) i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n          A) $\n         ia $\n         j) **\n     mult_row (mat (1::'a)) i\n      ((1::'a) /\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        A) $\n       i $\n       j) **\n     interchange_rows (mat (1::'a)) i\n      (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n     P **\n     B) $\n    ia", ".."], ["proof (state)\nthis:\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia v*\n  B =\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia \\<noteq> i \\<Longrightarrow>\n       ((\\<chi>s.\n            if s = i\n            then mult_row\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   P)\n                  i ((1::'a) /\n                     (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     i $\n                     j) $\n                 s\n            else row_add\n                  (mult_row\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     P)\n                    i ((1::'a) /\n                       (interchange_rows (mat (1::'a)) i\n                         (LEAST n.\n                             A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                        A) $\n                       i $\n                       j))\n                  s i\n                  (- (interchange_rows (mat (1::'a)) i\n                       (LEAST n.\n                           A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                      A) $\n                     s $\n                     j) $\n                 s) **\n        B) $\n       ia =\n       row_add\n        (mult_row\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A)\n          i ((1::'a) /\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              A) $\n             i $\n             j))\n        ia i\n        (- (interchange_rows (mat (1::'a)) i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n            A) $\n           ia $\n           j) $\n       ia", "finally"], ["proof (chain)\npicking this:\n  ((\\<chi>s.\n       if s = i\n       then mult_row\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              P)\n             i ((1::'a) /\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                i $\n                j) $\n            s\n       else row_add\n             (mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j))\n             s i\n             (- (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                s $\n                j) $\n            s) **\n   B) $\n  ia =\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia", "show \"((\\<chi> s. if s = i then mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j) $ s\n        else row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) s i\n              (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ s $ j) $ s) ** B) $ ia =\n  row_add (mult_row (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) i (1 / (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ i $ j)) ia i\n   (- (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** A) $ ia $ j) $ ia\""], ["proof (prove)\nusing this:\n  ((\\<chi>s.\n       if s = i\n       then mult_row\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              P)\n             i ((1::'a) /\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                i $\n                j) $\n            s\n       else row_add\n             (mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j))\n             s i\n             (- (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                s $\n                j) $\n            s) **\n   B) $\n  ia =\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia\n\ngoal (1 subgoal):\n 1. ((\\<chi>s.\n         if s = i\n         then mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j) $\n              s\n         else row_add\n               (mult_row\n                 (interchange_rows (mat (1::'a)) i\n                   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                  P)\n                 i ((1::'a) /\n                    (interchange_rows (mat (1::'a)) i\n                      (LEAST n.\n                          A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                     A) $\n                    i $\n                    j))\n               s i\n               (- (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  s $\n                  j) $\n              s) **\n     B) $\n    ia =\n    row_add\n     (mult_row\n       (interchange_rows (mat (1::'a)) i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n        A)\n       i ((1::'a) /\n          (interchange_rows (mat (1::'a)) i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n           A) $\n          i $\n          j))\n     ia i\n     (- (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        ia $\n        j) $\n    ia", "."], ["proof (state)\nthis:\n  ((\\<chi>s.\n       if s = i\n       then mult_row\n             (interchange_rows (mat (1::'a)) i\n               (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n              P)\n             i ((1::'a) /\n                (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                i $\n                j) $\n            s\n       else row_add\n             (mult_row\n               (interchange_rows (mat (1::'a)) i\n                 (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                P)\n               i ((1::'a) /\n                  (interchange_rows (mat (1::'a)) i\n                    (LEAST n.\n                        A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                   A) $\n                  i $\n                  j))\n             s i\n             (- (interchange_rows (mat (1::'a)) i\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n                 A) $\n                s $\n                j) $\n            s) **\n   B) $\n  ia =\n  row_add\n   (mult_row\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      A)\n     i ((1::'a) /\n        (interchange_rows (mat (1::'a)) i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n         A) $\n        i $\n        j))\n   ia i\n   (- (interchange_rows (mat (1::'a)) i\n        (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n       A) $\n      ia $\n      j) $\n  ia\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Properties about @{term \"Gauss_Jordan_column_k_PA\"}\\<close>"], ["", "lemma fst_Gauss_Jordan_column_k: \nassumes \"i\\<le>nrows A\"\nshows \"fst (Gauss_Jordan_column_k (i, A) k) \\<le> nrows A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k (i, A) k) \\<le> nrows A", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> nrows A\n\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k (i, A) k) \\<le> nrows A", "unfolding Gauss_Jordan_column_k_def Let_def"], ["proof (prove)\nusing this:\n  i \\<le> nrows A\n\ngoal (1 subgoal):\n 1. fst (if (\\<forall>m\\<ge>mod_type_class.from_nat (fst (i, A)).\n                snd (i, A) $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n            fst (i, A) = nrows (snd (i, A))\n         then (fst (i, A), snd (i, A))\n         else (fst (i, A) + 1,\n               Gauss_Jordan_in_ij (snd (i, A))\n                (mod_type_class.from_nat (fst (i, A)))\n                (mod_type_class.from_nat k)))\n    \\<le> nrows A", "by auto"], ["", "lemma fst_Gauss_Jordan_column_k_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nassumes PB_A: \"P ** B = A\"\nshows \"fst (Gauss_Jordan_column_k_PA (P,i,A) k) ** B = snd (snd (Gauss_Jordan_column_k_PA (P,i,A) k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k_PA (P, i, A) k) ** B =\n    snd (snd (Gauss_Jordan_column_k_PA (P, i, A) k))", "unfolding Gauss_Jordan_column_k_PA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (let Pa = fst (P, i, A); ia = fst (snd (P, i, A));\n             A = snd (snd (P, i, A));\n             from_nat_i = mod_type_class.from_nat ia;\n             from_nat_k = mod_type_class.from_nat k\n         in if (\\<forall>m\\<ge>from_nat_i.\n                   A $ m $ from_nat_k = (0::'a)) \\<or>\n               ia = nrows A\n            then (Pa, ia, A)\n            else let Gauss =\n                       Gauss_Jordan_in_ij_PA (Pa, A) from_nat_i from_nat_k\n                 in (fst Gauss, ia + 1, snd Gauss)) **\n    B =\n    snd (snd (let Pa = fst (P, i, A); ia = fst (snd (P, i, A));\n                  A = snd (snd (P, i, A));\n                  from_nat_i = mod_type_class.from_nat ia;\n                  from_nat_k = mod_type_class.from_nat k\n              in if (\\<forall>m\\<ge>from_nat_i.\n                        A $ m $ from_nat_k = (0::'a)) \\<or>\n                    ia = nrows A\n                 then (Pa, ia, A)\n                 else let Gauss =\n                            Gauss_Jordan_in_ij_PA (Pa, A) from_nat_i\n                             from_nat_k\n                      in (fst Gauss, ia + 1, snd Gauss)))", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (if (\\<forall>m\\<ge>mod_type_class.from_nat (fst (snd (P, i, A))).\n                snd (snd (P, i, A)) $ m $ mod_type_class.from_nat k =\n                (0::'a)) \\<or>\n            fst (snd (P, i, A)) = nrows (snd (snd (P, i, A)))\n         then (fst (P, i, A), fst (snd (P, i, A)), snd (snd (P, i, A)))\n         else (fst (Gauss_Jordan_in_ij_PA\n                     (fst (P, i, A), snd (snd (P, i, A)))\n                     (mod_type_class.from_nat (fst (snd (P, i, A))))\n                     (mod_type_class.from_nat k)),\n               fst (snd (P, i, A)) + 1,\n               snd (Gauss_Jordan_in_ij_PA\n                     (fst (P, i, A), snd (snd (P, i, A)))\n                     (mod_type_class.from_nat (fst (snd (P, i, A))))\n                     (mod_type_class.from_nat k)))) **\n    B =\n    snd (snd (if (\\<forall>m\\<ge>mod_type_class.from_nat\n                                  (fst (snd (P, i, A))).\n                     snd (snd (P, i, A)) $ m $ mod_type_class.from_nat k =\n                     (0::'a)) \\<or>\n                 fst (snd (P, i, A)) = nrows (snd (snd (P, i, A)))\n              then (fst (P, i, A), fst (snd (P, i, A)), snd (snd (P, i, A)))\n              else (fst (Gauss_Jordan_in_ij_PA\n                          (fst (P, i, A), snd (snd (P, i, A)))\n                          (mod_type_class.from_nat (fst (snd (P, i, A))))\n                          (mod_type_class.from_nat k)),\n                    fst (snd (P, i, A)) + 1,\n                    snd (Gauss_Jordan_in_ij_PA\n                          (fst (P, i, A), snd (snd (P, i, A)))\n                          (mod_type_class.from_nat (fst (snd (P, i, A))))\n                          (mod_type_class.from_nat k)))))", "unfolding fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n            i = nrows A\n         then (P, i, A)\n         else (fst (Gauss_Jordan_in_ij_PA (P, A) (mod_type_class.from_nat i)\n                     (mod_type_class.from_nat k)),\n               i + 1,\n               snd (Gauss_Jordan_in_ij_PA (P, A) (mod_type_class.from_nat i)\n                     (mod_type_class.from_nat k)))) **\n    B =\n    snd (snd (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                     A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n                 i = nrows A\n              then (P, i, A)\n              else (fst (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k)),\n                    i + 1,\n                    snd (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k)))))", "by (auto intro: assms fst_Gauss_Jordan_in_ij_PA)"], ["", "lemma snd_snd_Gauss_Jordan_column_k_PA_eq: \nshows \"snd (snd (Gauss_Jordan_column_k_PA (P,i,A) k)) = snd (Gauss_Jordan_column_k (i,A) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (Gauss_Jordan_column_k_PA (P, i, A) k)) =\n    snd (Gauss_Jordan_column_k (i, A) k)", "unfolding Gauss_Jordan_column_k_PA_def Gauss_Jordan_column_k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (let Pa = fst (P, i, A); ia = fst (snd (P, i, A));\n                  A = snd (snd (P, i, A));\n                  from_nat_i = mod_type_class.from_nat ia;\n                  from_nat_k = mod_type_class.from_nat k\n              in if (\\<forall>m\\<ge>from_nat_i.\n                        A $ m $ from_nat_k = (0::'a)) \\<or>\n                    ia = nrows A\n                 then (Pa, ia, A)\n                 else let Gauss =\n                            Gauss_Jordan_in_ij_PA (Pa, A) from_nat_i\n                             from_nat_k\n                      in (fst Gauss, ia + 1, snd Gauss))) =\n    snd (let ia = fst (i, A); A = snd (i, A);\n             from_nat_i = mod_type_class.from_nat ia;\n             from_nat_k = mod_type_class.from_nat k\n         in if (\\<forall>m\\<ge>from_nat_i.\n                   A $ m $ from_nat_k = (0::'a)) \\<or>\n               ia = nrows A\n            then (ia, A)\n            else (ia + 1, Gauss_Jordan_in_ij A from_nat_i from_nat_k))", "unfolding Let_def snd_conv fst_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                     A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n                 i = nrows A\n              then (P, i, A)\n              else (fst (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k)),\n                    i + 1,\n                    snd (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k))))) =\n    snd (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n            i = nrows A\n         then (i, A)\n         else (i + 1,\n               Gauss_Jordan_in_ij A (mod_type_class.from_nat i)\n                (mod_type_class.from_nat k)))", "unfolding snd_Gauss_Jordan_in_ij_PA_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                     A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n                 i = nrows A\n              then (P, i, A)\n              else (fst (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k)),\n                    i + 1,\n                    Gauss_Jordan_in_ij A (mod_type_class.from_nat i)\n                     (mod_type_class.from_nat k)))) =\n    snd (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n            i = nrows A\n         then (i, A)\n         else (i + 1,\n               Gauss_Jordan_in_ij A (mod_type_class.from_nat i)\n                (mod_type_class.from_nat k)))", "by auto"], ["", "lemma fst_snd_Gauss_Jordan_column_k_PA_eq: \nshows \"fst (snd (Gauss_Jordan_column_k_PA (P,i,A) k)) = fst (Gauss_Jordan_column_k (i,A) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (Gauss_Jordan_column_k_PA (P, i, A) k)) =\n    fst (Gauss_Jordan_column_k (i, A) k)", "unfolding Gauss_Jordan_column_k_PA_def Gauss_Jordan_column_k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (let Pa = fst (P, i, A); ia = fst (snd (P, i, A));\n                  A = snd (snd (P, i, A));\n                  from_nat_i = mod_type_class.from_nat ia;\n                  from_nat_k = mod_type_class.from_nat k\n              in if (\\<forall>m\\<ge>from_nat_i.\n                        A $ m $ from_nat_k = (0::'a)) \\<or>\n                    ia = nrows A\n                 then (Pa, ia, A)\n                 else let Gauss =\n                            Gauss_Jordan_in_ij_PA (Pa, A) from_nat_i\n                             from_nat_k\n                      in (fst Gauss, ia + 1, snd Gauss))) =\n    fst (let ia = fst (i, A); A = snd (i, A);\n             from_nat_i = mod_type_class.from_nat ia;\n             from_nat_k = mod_type_class.from_nat k\n         in if (\\<forall>m\\<ge>from_nat_i.\n                   A $ m $ from_nat_k = (0::'a)) \\<or>\n               ia = nrows A\n            then (ia, A)\n            else (ia + 1, Gauss_Jordan_in_ij A from_nat_i from_nat_k))", "unfolding Let_def snd_conv fst_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                     A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n                 i = nrows A\n              then (P, i, A)\n              else (fst (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k)),\n                    i + 1,\n                    snd (Gauss_Jordan_in_ij_PA (P, A)\n                          (mod_type_class.from_nat i)\n                          (mod_type_class.from_nat k))))) =\n    fst (if (\\<forall>m\\<ge>mod_type_class.from_nat i.\n                A $ m $ mod_type_class.from_nat k = (0::'a)) \\<or>\n            i = nrows A\n         then (i, A)\n         else (i + 1,\n               Gauss_Jordan_in_ij A (mod_type_class.from_nat i)\n                (mod_type_class.from_nat k)))", "by auto"], ["", "subsubsection\\<open>Properties about @{term \"Gauss_Jordan_upt_k_PA\"}\\<close>"], ["", "lemma fst_Gauss_Jordan_upt_k_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nshows \"fst (Gauss_Jordan_upt_k_PA A k) ** A = snd (Gauss_Jordan_upt_k_PA A k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_upt_k_PA A k) ** A = snd (Gauss_Jordan_upt_k_PA A k)", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. fst (Gauss_Jordan_upt_k_PA A 0) ** A = snd (Gauss_Jordan_upt_k_PA A 0)\n 2. \\<And>k.\n       fst (Gauss_Jordan_upt_k_PA A k) ** A =\n       snd (Gauss_Jordan_upt_k_PA A k) \\<Longrightarrow>\n       fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n       snd (Gauss_Jordan_upt_k_PA A (Suc k))", "show \"fst (Gauss_Jordan_upt_k_PA A 0) ** A = snd (Gauss_Jordan_upt_k_PA A 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_upt_k_PA A 0) ** A = snd (Gauss_Jordan_upt_k_PA A 0)", "unfolding Gauss_Jordan_upt_k_PA_def Let_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc 0]) **\n    A =\n    snd (snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n               [0..<Suc 0]))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) 0) ** A =\n    snd (snd (Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) 0))", "unfolding snd_snd_Gauss_Jordan_column_k_PA_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) 0) ** A =\n    snd (Gauss_Jordan_column_k (0, A) 0)", "by (metis fst_Gauss_Jordan_column_k_PA matrix_mul_lid snd_snd_Gauss_Jordan_column_k_PA_eq)"], ["proof (state)\nthis:\n  fst (Gauss_Jordan_upt_k_PA A 0) ** A = snd (Gauss_Jordan_upt_k_PA A 0)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       fst (Gauss_Jordan_upt_k_PA A k) ** A =\n       snd (Gauss_Jordan_upt_k_PA A k) \\<Longrightarrow>\n       fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n       snd (Gauss_Jordan_upt_k_PA A (Suc k))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       fst (Gauss_Jordan_upt_k_PA A k) ** A =\n       snd (Gauss_Jordan_upt_k_PA A k) \\<Longrightarrow>\n       fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n       snd (Gauss_Jordan_upt_k_PA A (Suc k))", "case (Suc k)"], ["proof (state)\nthis:\n  fst (Gauss_Jordan_upt_k_PA A k) ** A = snd (Gauss_Jordan_upt_k_PA A k)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       fst (Gauss_Jordan_upt_k_PA A k) ** A =\n       snd (Gauss_Jordan_upt_k_PA A k) \\<Longrightarrow>\n       fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n       snd (Gauss_Jordan_upt_k_PA A (Suc k))", "have suc_rw: \"[0..<Suc (Suc k)] = [0..<Suc k] @ [Suc k]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0..<Suc (Suc k)] = [0..<Suc k] @ [Suc k]", "by simp"], ["proof (state)\nthis:\n  [0..<Suc (Suc k)] = [0..<Suc k] @ [Suc k]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       fst (Gauss_Jordan_upt_k_PA A k) ** A =\n       snd (Gauss_Jordan_upt_k_PA A k) \\<Longrightarrow>\n       fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n       snd (Gauss_Jordan_upt_k_PA A (Suc k))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n    snd (Gauss_Jordan_upt_k_PA A (Suc k))", "unfolding Gauss_Jordan_upt_k_PA_def Let_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n          [0..<Suc (Suc k)]) **\n    A =\n    snd (snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n               [0..<Suc (Suc k)]))", "unfolding suc_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n          ([0..<Suc k] @ [Suc k])) **\n    A =\n    snd (snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n               ([0..<Suc k] @ [Suc k])))", "unfolding foldl_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (foldl Gauss_Jordan_column_k_PA\n          (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k])\n          [Suc k]) **\n    A =\n    snd (snd (foldl Gauss_Jordan_column_k_PA\n               (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n                 [0..<Suc k])\n               [Suc k]))", "unfolding List.foldl.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k_PA\n          (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k])\n          (Suc k)) **\n    A =\n    snd (snd (Gauss_Jordan_column_k_PA\n               (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n                 [0..<Suc k])\n               (Suc k)))", "using Suc.hyps[unfolded Gauss_Jordan_upt_k_PA_def Let_def fst_conv snd_conv]"], ["proof (prove)\nusing this:\n  fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k]) **\n  A =\n  snd (snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k]))\n\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_column_k_PA\n          (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k])\n          (Suc k)) **\n    A =\n    snd (snd (Gauss_Jordan_column_k_PA\n               (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n                 [0..<Suc k])\n               (Suc k)))", "by (metis fst_Gauss_Jordan_column_k_PA prod.collapse)"], ["proof (state)\nthis:\n  fst (Gauss_Jordan_upt_k_PA A (Suc k)) ** A =\n  snd (Gauss_Jordan_upt_k_PA A (Suc k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma snd_foldl_Gauss_Jordan_column_k_eq:\n\"snd (foldl Gauss_Jordan_column_k_PA (mat 1, 0, A) [0..<k]) = foldl Gauss_Jordan_column_k (0, A) [0..<k]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n    foldl Gauss_Jordan_column_k (0, A) [0..<k]", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<0]) =\n    foldl Gauss_Jordan_column_k (0, A) [0..<0]\n 2. \\<And>k.\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<k] \\<Longrightarrow>\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n             [0..<Suc k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<0]) =\n    foldl Gauss_Jordan_column_k (0, A) [0..<0]\n 2. \\<And>k.\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<k] \\<Longrightarrow>\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n             [0..<Suc k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<0]) =\n    foldl Gauss_Jordan_column_k (0, A) [0..<0]", "by simp"], ["proof (state)\nthis:\n  snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<0]) =\n  foldl Gauss_Jordan_column_k (0, A) [0..<0]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<k] \\<Longrightarrow>\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n             [0..<Suc k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]", "case (Suc k)"], ["proof (state)\nthis:\n  snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n  foldl Gauss_Jordan_column_k (0, A) [0..<k]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<k] \\<Longrightarrow>\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n             [0..<Suc k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]", "have suc_rw: \"[0..<Suc k] = [0..<k] @ [k]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0..<Suc k] = [0..<k] @ [k]", "by simp"], ["proof (state)\nthis:\n  [0..<Suc k] = [0..<k] @ [k]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<k] \\<Longrightarrow>\n       snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n             [0..<Suc k]) =\n       foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k]) =\n    foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]", "unfolding suc_rw foldl_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (foldl Gauss_Jordan_column_k_PA\n          (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k])\n          [k]) =\n    foldl Gauss_Jordan_column_k (foldl Gauss_Jordan_column_k (0, A) [0..<k])\n     [k]", "unfolding List.foldl.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Gauss_Jordan_column_k_PA\n          (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<k]) k) =\n    Gauss_Jordan_column_k (foldl Gauss_Jordan_column_k (0, A) [0..<k]) k", "by (metis Suc.hyps fst_snd_Gauss_Jordan_column_k_PA_eq snd_snd_Gauss_Jordan_column_k_PA_eq surjective_pairing)"], ["proof (state)\nthis:\n  snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k]) =\n  foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma snd_Gauss_Jordan_upt_k_PA:\nshows \"snd (Gauss_Jordan_upt_k_PA A k) = (Gauss_Jordan_upt_k A k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Gauss_Jordan_upt_k_PA A k) = Gauss_Jordan_upt_k A k", "unfolding Gauss_Jordan_upt_k_PA_def Gauss_Jordan_upt_k_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n               [0..<Suc k]),\n         snd (snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n                    [0..<Suc k]))) =\n    snd (foldl Gauss_Jordan_column_k (0, A) [0..<Suc k])", "using snd_foldl_Gauss_Jordan_column_k_eq[of A \"Suc k\"]"], ["proof (prove)\nusing this:\n  snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k]) =\n  foldl Gauss_Jordan_column_k (0, A) [0..<Suc k]\n\ngoal (1 subgoal):\n 1. snd (fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n               [0..<Suc k]),\n         snd (snd (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n                    [0..<Suc k]))) =\n    snd (foldl Gauss_Jordan_column_k (0, A) [0..<Suc k])", "by simp"], ["", "subsubsection\\<open>Properties about @{term \"Gauss_Jordan_PA\"}\\<close>"], ["", "lemma fst_Gauss_Jordan_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nshows \"fst (Gauss_Jordan_PA A) ** A = snd (Gauss_Jordan_PA A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_PA A) ** A = snd (Gauss_Jordan_PA A)", "unfolding Gauss_Jordan_PA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_upt_k_PA A (ncols A - 1)) ** A =\n    snd (Gauss_Jordan_upt_k_PA A (ncols A - 1))", "using fst_Gauss_Jordan_upt_k_PA"], ["proof (prove)\nusing this:\n  fst (Gauss_Jordan_upt_k_PA ?A ?k) ** ?A =\n  snd (Gauss_Jordan_upt_k_PA ?A ?k)\n\ngoal (1 subgoal):\n 1. fst (Gauss_Jordan_upt_k_PA A (ncols A - 1)) ** A =\n    snd (Gauss_Jordan_upt_k_PA A (ncols A - 1))", "by simp"], ["", "lemma Gauss_Jordan_PA_eq:\nshows \"snd (Gauss_Jordan_PA A)= (Gauss_Jordan A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Gauss_Jordan_PA A) = Gauss_Jordan A", "by (metis Gauss_Jordan_PA_def Gauss_Jordan_def snd_Gauss_Jordan_upt_k_PA)"], ["", "subsubsection\\<open>Proving that the transformation has been carried out by means of elementary operations\\<close>"], ["", "text\\<open>This function is very similar to @{term \"row_add_iterate\"} one. It allows us to prove that @{term \"fst (Gauss_Jordan_PA A)\"} is an invertible matrix.\nConcretly, it has been defined to demonstrate that @{term \"fst (Gauss_Jordan_PA A)\"} has been obtained by means of elementary operations applied to the identity matrix\\<close>"], ["", "fun row_add_iterate_PA :: \"(('a::{semiring_1, uminus}^'m::{mod_type} ^'m::{mod_type}) \\<times> ('a^'n^'m::{mod_type}))=> nat => 'm => 'n => \n    (('a^'m::{mod_type} ^'m::{mod_type}) \\<times> ('a^'n^'m::{mod_type}))\"\n    where \"row_add_iterate_PA (P,A) 0 i j = (if i=0 then (P,A) else (row_add P 0 i (-A $ 0 $ j), row_add A 0 i (-A $ 0 $ j)))\"\n         | \"row_add_iterate_PA (P,A) (Suc n) i j = (if (Suc n = to_nat i) then row_add_iterate_PA (P,A) n i j\n                  else row_add_iterate_PA ((row_add P (from_nat (Suc n)) i (- A $ (from_nat (Suc n)) $ j)), (row_add A (from_nat (Suc n)) i (- A $ (from_nat (Suc n)) $ j))) n i j)\""], ["", "lemma fst_row_add_iterate_PA_preserves_greater_than_n:\n  assumes n: \"n<nrows A\"\n  and a: \"to_nat a > n\"\n  shows \"fst (row_add_iterate_PA (P,A) n i j) $ a $ b = P $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b", "using assms"], ["proof (prove)\nusing this:\n  n < nrows A\n  n < mod_type_class.to_nat a\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b", "proof (induct n arbitrary: A P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A P.\n       \\<lbrakk>0 < nrows A; 0 < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b =\n                         P $ a $ b\n 2. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A;\n                    n < mod_type_class.to_nat a\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     P $ a $ b;\n        Suc n < nrows A; Suc n < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         P $ a $ b", "case 0"], ["proof (state)\nthis:\n  0 < nrows A\n  0 < mod_type_class.to_nat a\n\ngoal (2 subgoals):\n 1. \\<And>A P.\n       \\<lbrakk>0 < nrows A; 0 < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b =\n                         P $ a $ b\n 2. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A;\n                    n < mod_type_class.to_nat a\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     P $ a $ b;\n        Suc n < nrows A; Suc n < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         P $ a $ b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b = P $ a $ b", "unfolding row_add_iterate.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b = P $ a $ b", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> (0::'c) \\<Longrightarrow>\n    row_add P (0::'c) i (- A $ (0::'c) $ j) $ a $ b = P $ a $ b", "assume \"i \\<noteq> 0\""], ["proof (state)\nthis:\n  i \\<noteq> (0::'c)\n\ngoal (1 subgoal):\n 1. i \\<noteq> (0::'c) \\<Longrightarrow>\n    row_add P (0::'c) i (- A $ (0::'c) $ j) $ a $ b = P $ a $ b", "hence \"a \\<noteq> 0\""], ["proof (prove)\nusing this:\n  i \\<noteq> (0::'c)\n\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'c)", "by (metis \"0.prems\"(2) less_numeral_extra(3) to_nat_0)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'c)\n\ngoal (1 subgoal):\n 1. i \\<noteq> (0::'c) \\<Longrightarrow>\n    row_add P (0::'c) i (- A $ (0::'c) $ j) $ a $ b = P $ a $ b", "thus \"row_add P 0 i (- A $ 0 $ j) $ a $ b = P $ a $ b\""], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'c)\n\ngoal (1 subgoal):\n 1. row_add P (0::'c) i (- A $ (0::'c) $ j) $ a $ b = P $ a $ b", "unfolding row_add_def"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = (0::'c)\n        then P $ (0::'c) $ ja + - A $ (0::'c) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b =\n    P $ a $ b", "by auto"], ["proof (state)\nthis:\n  row_add P (0::'c) i (- A $ (0::'c) $ j) $ a $ b = P $ a $ b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b = P $ a $ b\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A;\n                    n < mod_type_class.to_nat a\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     P $ a $ b;\n        Suc n < nrows A; Suc n < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         P $ a $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A;\n                    n < mod_type_class.to_nat a\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     P $ a $ b;\n        Suc n < nrows A; Suc n < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         P $ a $ b", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n < nrows ?A; n < mod_type_class.to_nat a\\<rbrakk>\n  \\<Longrightarrow> fst (row_add_iterate_PA (?P, ?A) n i j) $ a $ b =\n                    ?P $ a $ b\n  Suc n < nrows A\n  Suc n < mod_type_class.to_nat a\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A;\n                    n < mod_type_class.to_nat a\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     P $ a $ b;\n        Suc n < nrows A; Suc n < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         P $ a $ b", "have row_add_iterate_A: \"fst (row_add_iterate_PA (P,A) n i j) $ a $ b = P $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b", "using Suc.hyps Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>n < nrows ?A; n < mod_type_class.to_nat a\\<rbrakk>\n  \\<Longrightarrow> fst (row_add_iterate_PA (?P, ?A) n i j) $ a $ b =\n                    ?P $ a $ b\n  Suc n < nrows A\n  Suc n < mod_type_class.to_nat a\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b", "by auto"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A;\n                    n < mod_type_class.to_nat a\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     P $ a $ b;\n        Suc n < nrows A; Suc n < mod_type_class.to_nat a\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         P $ a $ b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "proof (cases \"Suc n = to_nat i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "case True"], ["proof (state)\nthis:\n  Suc n = mod_type_class.to_nat i\n\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "show \"fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "unfolding row_add_iterate_PA.simps if_P[OF True]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b", "using row_add_iterate_A"], ["proof (prove)\nusing this:\n  fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b = P $ a $ b", "."], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "case False"], ["proof (state)\nthis:\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "define A' where \"A' = row_add A (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j)\""], ["proof (state)\nthis:\n  A' =\n  row_add A (mod_type_class.from_nat (Suc n)) i\n   (- A $ mod_type_class.from_nat (Suc n) $ j)\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "define P' where \"P' = row_add P (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j)\""], ["proof (state)\nthis:\n  P' =\n  row_add P (mod_type_class.from_nat (Suc n)) i\n   (- A $ mod_type_class.from_nat (Suc n) $ j)\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "have row_add_iterate_A': \"fst (row_add_iterate_PA (P',A') n i j) $ a $ b = P' $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') n i j) $ a $ b = P' $ a $ b", "using Suc.hyps Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>n < nrows ?A; n < mod_type_class.to_nat a\\<rbrakk>\n  \\<Longrightarrow> fst (row_add_iterate_PA (?P, ?A) n i j) $ a $ b =\n                    ?P $ a $ b\n  Suc n < nrows A\n  Suc n < mod_type_class.to_nat a\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') n i j) $ a $ b = P' $ a $ b", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>n < CARD('c); n < mod_type_class.to_nat a\\<rbrakk>\n  \\<Longrightarrow> fst (row_add_iterate_PA (?P, ?A) n i j) $ a $ b =\n                    ?P $ a $ b\n  Suc n < CARD('c)\n  Suc n < mod_type_class.to_nat a\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') n i j) $ a $ b = P' $ a $ b", "by auto"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P', A') n i j) $ a $ b = P' $ a $ b\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "have from_nat_not_a: \"from_nat (Suc n) \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> a", "by (metis less_not_refl Suc.prems to_nat_from_nat_id nrows_def)"], ["proof (state)\nthis:\n  mod_type_class.from_nat (Suc n) \\<noteq> a\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "show \"fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b", "unfolding row_add_iterate_PA.simps if_not_P[OF False] row_add_iterate_A'[unfolded A'_def P'_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add P (mod_type_class.from_nat (Suc n)) i\n     (- A $ mod_type_class.from_nat (Suc n) $ j) $\n    a $\n    b =\n    P $ a $ b", "unfolding row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b =\n    P $ a $ b", "using from_nat_not_a"], ["proof (prove)\nusing this:\n  mod_type_class.from_nat (Suc n) \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b =\n    P $ a $ b", "by simp"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = P $ a $ b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma snd_row_add_iterate_PA_eq_row_add_iterate:\nshows \"snd (row_add_iterate_PA (P,A) n i j)  = row_add_iterate A n i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (row_add_iterate_PA (P, A) n i j) = row_add_iterate A n i j", "proof (induct n arbitrary: P A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P A.\n       snd (row_add_iterate_PA (P, A) 0 i j) = row_add_iterate A 0 i j\n 2. \\<And>n P A.\n       (\\<And>P A.\n           snd (row_add_iterate_PA (P, A) n i j) =\n           row_add_iterate A n i j) \\<Longrightarrow>\n       snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n       row_add_iterate A (Suc n) i j", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>P A.\n       snd (row_add_iterate_PA (P, A) 0 i j) = row_add_iterate A 0 i j\n 2. \\<And>n P A.\n       (\\<And>P A.\n           snd (row_add_iterate_PA (P, A) n i j) =\n           row_add_iterate A n i j) \\<Longrightarrow>\n       snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n       row_add_iterate A (Suc n) i j", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (row_add_iterate_PA (P, A) 0 i j) = row_add_iterate A 0 i j", "unfolding row_add_iterate_PA.simps row_add_iterate.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (if i = (0::'c) then (P, A)\n         else (row_add P (0::'c) i (- A $ (0::'c) $ j),\n               row_add A (0::'c) i (- A $ (0::'c) $ j))) =\n    (if i = (0::'c) then A else row_add A (0::'c) i (- A $ (0::'c) $ j))", "by simp"], ["proof (state)\nthis:\n  snd (row_add_iterate_PA (P, A) 0 i j) = row_add_iterate A 0 i j\n\ngoal (1 subgoal):\n 1. \\<And>n P A.\n       (\\<And>P A.\n           snd (row_add_iterate_PA (P, A) n i j) =\n           row_add_iterate A n i j) \\<Longrightarrow>\n       snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n       row_add_iterate A (Suc n) i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n P A.\n       (\\<And>P A.\n           snd (row_add_iterate_PA (P, A) n i j) =\n           row_add_iterate A n i j) \\<Longrightarrow>\n       snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n       row_add_iterate A (Suc n) i j", "case (Suc n)"], ["proof (state)\nthis:\n  snd (row_add_iterate_PA (?P, ?A) n i j) = row_add_iterate ?A n i j\n\ngoal (1 subgoal):\n 1. \\<And>n P A.\n       (\\<And>P A.\n           snd (row_add_iterate_PA (P, A) n i j) =\n           row_add_iterate A n i j) \\<Longrightarrow>\n       snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n       row_add_iterate A (Suc n) i j", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n    row_add_iterate A (Suc n) i j", "unfolding row_add_iterate_PA.simps row_add_iterate.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (if Suc n = mod_type_class.to_nat i\n         then row_add_iterate_PA (P, A) n i j\n         else row_add_iterate_PA\n               (row_add P (mod_type_class.from_nat (Suc n)) i\n                 (- A $ mod_type_class.from_nat (Suc n) $ j),\n                row_add A (mod_type_class.from_nat (Suc n)) i\n                 (- A $ mod_type_class.from_nat (Suc n) $ j))\n               n i j) =\n    (if Suc n = mod_type_class.to_nat i then row_add_iterate A n i j\n     else row_add_iterate\n           (row_add A (mod_type_class.from_nat (Suc n)) i\n             (- A $ mod_type_class.from_nat (Suc n) $ j))\n           n i j)", "by (simp add: Suc.hyps)"], ["proof (state)\nthis:\n  snd (row_add_iterate_PA (P, A) (Suc n) i j) =\n  row_add_iterate A (Suc n) i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma row_add_iterate_PA_preserves_pivot_row:\n  assumes n: \"n<nrows A\"\n  and a: \"to_nat i \\<le> n\"\n  shows \"fst (row_add_iterate_PA (P,A) n i j) $ i $ b = P $ i $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ i $ b = P $ i $ b", "using assms"], ["proof (prove)\nusing this:\n  n < nrows A\n  mod_type_class.to_nat i \\<le> n\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ i $ b = P $ i $ b", "proof (induct n arbitrary: P A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P A.\n       \\<lbrakk>0 < nrows A; mod_type_class.to_nat i \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) 0 i j) $ i $ b =\n                         P $ i $ b\n 2. \\<And>n P A.\n       \\<lbrakk>\\<And>P A.\n                   \\<lbrakk>n < nrows A;\n                    mod_type_class.to_nat i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     i $\n                                     b =\n                                     P $ i $ b;\n        Suc n < nrows A; mod_type_class.to_nat i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $\n                         b =\n                         P $ i $ b", "case 0"], ["proof (state)\nthis:\n  0 < nrows A\n  mod_type_class.to_nat i \\<le> 0\n\ngoal (2 subgoals):\n 1. \\<And>P A.\n       \\<lbrakk>0 < nrows A; mod_type_class.to_nat i \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) 0 i j) $ i $ b =\n                         P $ i $ b\n 2. \\<And>n P A.\n       \\<lbrakk>\\<And>P A.\n                   \\<lbrakk>n < nrows A;\n                    mod_type_class.to_nat i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     i $\n                                     b =\n                                     P $ i $ b;\n        Suc n < nrows A; mod_type_class.to_nat i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $\n                         b =\n                         P $ i $ b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) 0 i j) $ i $ b = P $ i $ b", "by (metis \"0.prems\"(2) fst_conv le_0_eq row_add_iterate_PA.simps(1) to_nat_eq_0)"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) 0 i j) $ i $ b = P $ i $ b\n\ngoal (1 subgoal):\n 1. \\<And>n P A.\n       \\<lbrakk>\\<And>P A.\n                   \\<lbrakk>n < nrows A;\n                    mod_type_class.to_nat i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     i $\n                                     b =\n                                     P $ i $ b;\n        Suc n < nrows A; mod_type_class.to_nat i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $\n                         b =\n                         P $ i $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n P A.\n       \\<lbrakk>\\<And>P A.\n                   \\<lbrakk>n < nrows A;\n                    mod_type_class.to_nat i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     i $\n                                     b =\n                                     P $ i $ b;\n        Suc n < nrows A; mod_type_class.to_nat i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $\n                         b =\n                         P $ i $ b", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n < nrows ?A; mod_type_class.to_nat i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fst (row_add_iterate_PA (?P, ?A) n i j) $ i $ b =\n                    ?P $ i $ b\n  Suc n < nrows A\n  mod_type_class.to_nat i \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n P A.\n       \\<lbrakk>\\<And>P A.\n                   \\<lbrakk>n < nrows A;\n                    mod_type_class.to_nat i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     i $\n                                     b =\n                                     P $ i $ b;\n        Suc n < nrows A; mod_type_class.to_nat i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $\n                         b =\n                         P $ i $ b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "proof (cases \"Suc n = to_nat i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "case True"], ["proof (state)\nthis:\n  Suc n = mod_type_class.to_nat i\n\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "unfolding row_add_iterate_PA.simps if_P[OF True]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ i $ b = P $ i $ b", "proof (rule fst_row_add_iterate_PA_preserves_greater_than_n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n < nrows A\n 2. n < mod_type_class.to_nat i", "show \"n < nrows A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < nrows A", "by (metis Suc.prems(1) Suc_lessD)"], ["proof (state)\nthis:\n  n < nrows A\n\ngoal (1 subgoal):\n 1. n < mod_type_class.to_nat i", "show \"n < to_nat i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < mod_type_class.to_nat i", "by (metis True lessI)"], ["proof (state)\nthis:\n  n < mod_type_class.to_nat i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "case False"], ["proof (state)\nthis:\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "define P' where \"P' = row_add P (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j)\""], ["proof (state)\nthis:\n  P' =\n  row_add P (mod_type_class.from_nat (Suc n)) i\n   (- A $ mod_type_class.from_nat (Suc n) $ j)\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "define A' where \"A' = row_add A (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j)\""], ["proof (state)\nthis:\n  A' =\n  row_add A (mod_type_class.from_nat (Suc n)) i\n   (- A $ mod_type_class.from_nat (Suc n) $ j)\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "have from_nat_noteq_i: \"from_nat (Suc n) \\<noteq> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i", "using False Suc.prems(1) from_nat_not_eq"], ["proof (prove)\nusing this:\n  Suc n \\<noteq> mod_type_class.to_nat i\n  Suc n < nrows A\n  \\<lbrakk>?a \\<noteq> mod_type_class.to_nat ?b; ?a < CARD(?'a)\\<rbrakk>\n  \\<Longrightarrow> mod_type_class.from_nat ?a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  Suc n \\<noteq> mod_type_class.to_nat i\n  Suc n < CARD('c)\n  \\<lbrakk>?a \\<noteq> mod_type_class.to_nat ?b; ?a < CARD(?'a)\\<rbrakk>\n  \\<Longrightarrow> mod_type_class.from_nat ?a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i", "by blast"], ["proof (state)\nthis:\n  mod_type_class.from_nat (Suc n) \\<noteq> i\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "have hyp: \"fst (row_add_iterate_PA (P', A') n i j) $ i $ b = P' $ i $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') n i j) $ i $ b = P' $ i $ b", "proof (rule Suc.hyps)"], ["proof (state)\ngoal (2 subgoals):\n 1. n < nrows A'\n 2. mod_type_class.to_nat i \\<le> n", "show \"n < nrows A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < nrows A'", "using Suc.prems(1)"], ["proof (prove)\nusing this:\n  Suc n < nrows A\n\ngoal (1 subgoal):\n 1. n < nrows A'", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  Suc n < CARD('c)\n\ngoal (1 subgoal):\n 1. n < CARD('c)", "by simp"], ["proof (state)\nthis:\n  n < nrows A'\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i \\<le> n", "show \"to_nat i \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i \\<le> n", "using Suc.prems(2) False"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat i \\<le> Suc n\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i \\<le> n", "by simp"], ["proof (state)\nthis:\n  mod_type_class.to_nat i \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P', A') n i j) $ i $ b = P' $ i $ b\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b", "unfolding row_add_iterate_PA.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (if Suc n = mod_type_class.to_nat i\n         then row_add_iterate_PA (P, A) n i j\n         else row_add_iterate_PA\n               (row_add P (mod_type_class.from_nat (Suc n)) i\n                 (- A $ mod_type_class.from_nat (Suc n) $ j),\n                row_add A (mod_type_class.from_nat (Suc n)) i\n                 (- A $ mod_type_class.from_nat (Suc n) $ j))\n               n i j) $\n    i $\n    b =\n    P $ i $ b", "unfolding if_not_P[OF False]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA\n          (row_add P (mod_type_class.from_nat (Suc n)) i\n            (- A $ mod_type_class.from_nat (Suc n) $ j),\n           row_add A (mod_type_class.from_nat (Suc n)) i\n            (- A $ mod_type_class.from_nat (Suc n) $ j))\n          n i j) $\n    i $\n    b =\n    P $ i $ b", "unfolding hyp[unfolded A'_def P'_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add P (mod_type_class.from_nat (Suc n)) i\n     (- A $ mod_type_class.from_nat (Suc n) $ j) $\n    i $\n    b =\n    P $ i $ b", "unfolding row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    i $\n    b =\n    P $ i $ b", "using from_nat_noteq_i"], ["proof (prove)\nusing this:\n  mod_type_class.from_nat (Suc n) \\<noteq> i\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    i $\n    b =\n    P $ i $ b", "by auto"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ i $ b = P $ i $ b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fst_row_add_iterate_PA_eq_row_add:\n  fixes A::\"'a::{ring_1}^'n^'m::{mod_type}\"\n  assumes a_not_i: \"a \\<noteq> i\"\n  and n: \"n<nrows A\"\n  and \"to_nat a \\<le> n\"\n  shows \"fst (row_add_iterate_PA (P,A) n i j) $ a $ b = (row_add P a i (- A $ a $ j)) $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> i\n  n < nrows A\n  mod_type_class.to_nat a \\<le> n\n\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "proof (induct n arbitrary: A P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A P.\n       \\<lbrakk>a \\<noteq> i; 0 < nrows A;\n        mod_type_class.to_nat a \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b =\n                         row_add P a i (- A $ a $ j) $ a $ b\n 2. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>a \\<noteq> i; n < nrows A;\n                    mod_type_class.to_nat a \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     row_add P a i (- A $ a $ j) $ a $ b;\n        a \\<noteq> i; Suc n < nrows A;\n        mod_type_class.to_nat a \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         row_add P a i (- A $ a $ j) $ a $ b", "case 0"], ["proof (state)\nthis:\n  a \\<noteq> i\n  0 < nrows A\n  mod_type_class.to_nat a \\<le> 0\n\ngoal (2 subgoals):\n 1. \\<And>A P.\n       \\<lbrakk>a \\<noteq> i; 0 < nrows A;\n        mod_type_class.to_nat a \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b =\n                         row_add P a i (- A $ a $ j) $ a $ b\n 2. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>a \\<noteq> i; n < nrows A;\n                    mod_type_class.to_nat a \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     row_add P a i (- A $ a $ j) $ a $ b;\n        a \\<noteq> i; Suc n < nrows A;\n        mod_type_class.to_nat a \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         row_add P a i (- A $ a $ j) $ a $ b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "by (metis \"0.prems\"(3) a_not_i fst_conv le_0_eq row_add_iterate_PA.simps(1) to_nat_eq_0)"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) 0 i j) $ a $ b =\n  row_add P a i (- A $ a $ j) $ a $ b\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>a \\<noteq> i; n < nrows A;\n                    mod_type_class.to_nat a \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     row_add P a i (- A $ a $ j) $ a $ b;\n        a \\<noteq> i; Suc n < nrows A;\n        mod_type_class.to_nat a \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         row_add P a i (- A $ a $ j) $ a $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>a \\<noteq> i; n < nrows A;\n                    mod_type_class.to_nat a \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     row_add P a i (- A $ a $ j) $ a $ b;\n        a \\<noteq> i; Suc n < nrows A;\n        mod_type_class.to_nat a \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         row_add P a i (- A $ a $ j) $ a $ b", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<noteq> i; n < nrows ?A;\n   mod_type_class.to_nat a \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fst (row_add_iterate_PA (?P, ?A) n i j) $ a $ b =\n                    row_add ?P a i (- ?A $ a $ j) $ a $ b\n  a \\<noteq> i\n  Suc n < nrows A\n  mod_type_class.to_nat a \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>a \\<noteq> i; n < nrows A;\n                    mod_type_class.to_nat a \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fst (row_add_iterate_PA (P, A) n i j) $\n                                     a $\n                                     b =\n                                     row_add P a i (- A $ a $ j) $ a $ b;\n        a \\<noteq> i; Suc n < nrows A;\n        mod_type_class.to_nat a \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $\n                         b =\n                         row_add P a i (- A $ a $ j) $ a $ b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "proof (cases \" Suc n = to_nat i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "case True"], ["proof (state)\nthis:\n  Suc n = mod_type_class.to_nat i\n\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "unfolding row_add_iterate_PA.simps if_P[OF True]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) n i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "proof (rule Suc.hyps[OF a_not_i])"], ["proof (state)\ngoal (2 subgoals):\n 1. n < nrows A\n 2. mod_type_class.to_nat a \\<le> n", "show \"n < nrows A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < nrows A", "by (metis Suc.prems(2) Suc_lessD)"], ["proof (state)\nthis:\n  n < nrows A\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<le> n", "show \"to_nat a \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<le> n", "by (metis Suc.prems(3) True a_not_i le_SucE to_nat_eq)"], ["proof (state)\nthis:\n  mod_type_class.to_nat a \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n  row_add P a i (- A $ a $ j) $ a $ b\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "case False"], ["proof (state)\nthis:\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "note Suc_n_not_i=False"], ["proof (state)\nthis:\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "proof (cases \"to_nat a = Suc n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. mod_type_class.to_nat a = Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b\n 2. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "case True"], ["proof (state)\nthis:\n  mod_type_class.to_nat a = Suc n\n\ngoal (2 subgoals):\n 1. mod_type_class.to_nat a = Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b\n 2. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "show \"fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = row_add P a i (- A $ a $ j) $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "unfolding row_add_iterate_PA.simps if_not_P[OF False]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA\n          (row_add P (mod_type_class.from_nat (Suc n)) i\n            (- A $ mod_type_class.from_nat (Suc n) $ j),\n           row_add A (mod_type_class.from_nat (Suc n)) i\n            (- A $ mod_type_class.from_nat (Suc n) $ j))\n          n i j) $\n    a $\n    b =\n    row_add P a i (- A $ a $ j) $ a $ b", "by (metis Suc_le_lessD True order_refl less_imp_le fst_row_add_iterate_PA_preserves_greater_than_n Suc.prems(2) to_nat_from_nat nrows_def)"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n  row_add P a i (- A $ a $ j) $ a $ b\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "case False"], ["proof (state)\nthis:\n  mod_type_class.to_nat a \\<noteq> Suc n\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "define A' where \"A' = row_add A (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j)\""], ["proof (state)\nthis:\n  A' =\n  row_add A (mod_type_class.from_nat (Suc n)) i\n   (- A $ mod_type_class.from_nat (Suc n) $ j)\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "define P' where \"P' = row_add P (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j)\""], ["proof (state)\nthis:\n  P' =\n  row_add P (mod_type_class.from_nat (Suc n)) i\n   (- A $ mod_type_class.from_nat (Suc n) $ j)\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "have rw: \"fst (row_add_iterate_PA (P',A') n i j) $ a $ b = row_add P' a i (- A' $ a $ j) $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') n i j) $ a $ b =\n    row_add P' a i (- A' $ a $ j) $ a $ b", "proof (rule Suc.hyps)"], ["proof (state)\ngoal (3 subgoals):\n 1. a \\<noteq> i\n 2. n < nrows A'\n 3. mod_type_class.to_nat a \\<le> n", "show \"a \\<noteq> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> i", "using Suc.prems(1)"], ["proof (prove)\nusing this:\n  a \\<noteq> i\n\ngoal (1 subgoal):\n 1. a \\<noteq> i", "by simp"], ["proof (state)\nthis:\n  a \\<noteq> i\n\ngoal (2 subgoals):\n 1. n < nrows A'\n 2. mod_type_class.to_nat a \\<le> n", "show \"n < nrows A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < nrows A'", "using Suc.prems(2)"], ["proof (prove)\nusing this:\n  Suc n < nrows A\n\ngoal (1 subgoal):\n 1. n < nrows A'", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  Suc n < CARD('m)\n\ngoal (1 subgoal):\n 1. n < CARD('m)", "by auto"], ["proof (state)\nthis:\n  n < nrows A'\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<le> n", "show \"to_nat a \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<le> n", "using False Suc.prems(3)"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  mod_type_class.to_nat a \\<le> Suc n\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<le> n", "by simp"], ["proof (state)\nthis:\n  mod_type_class.to_nat a \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P', A') n i j) $ a $ b =\n  row_add P' a i (- A' $ a $ j) $ a $ b\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "have rw1: \"P' $ a $ b = P $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' $ a $ b = P $ a $ b", "unfolding P'_def row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b =\n    P $ a $ b", "using False Suc.prems"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  a \\<noteq> i\n  Suc n < nrows A\n  mod_type_class.to_nat a \\<le> Suc n\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b =\n    P $ a $ b", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  a \\<noteq> i\n  Suc n < CARD('m)\n  mod_type_class.to_nat a \\<le> Suc n\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b =\n    P $ a $ b", "by (auto simp add: to_nat_from_nat_id)"], ["proof (state)\nthis:\n  P' $ a $ b = P $ a $ b\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "have rw2: \"A' $ a $ j = A $ a $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A' $ a $ j = A $ a $ j", "unfolding A'_def row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then A $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * A $ i $ ja\n        else A $ ia $ ja) $\n    a $\n    j =\n    A $ a $ j", "using False Suc.prems"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  a \\<noteq> i\n  Suc n < nrows A\n  mod_type_class.to_nat a \\<le> Suc n\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then A $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * A $ i $ ja\n        else A $ ia $ ja) $\n    a $\n    j =\n    A $ a $ j", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  a \\<noteq> i\n  Suc n < CARD('m)\n  mod_type_class.to_nat a \\<le> Suc n\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then A $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * A $ i $ ja\n        else A $ ia $ ja) $\n    a $\n    j =\n    A $ a $ j", "by (auto simp add: to_nat_from_nat_id)"], ["proof (state)\nthis:\n  A' $ a $ j = A $ a $ j\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "have rw3: \"P' $ i $ b = P $ i $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' $ i $ b = P $ i $ b", "unfolding P'_def row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    i $\n    b =\n    P $ i $ b", "using False Suc.prems Suc_n_not_i"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  a \\<noteq> i\n  Suc n < nrows A\n  mod_type_class.to_nat a \\<le> Suc n\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    i $\n    b =\n    P $ i $ b", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat a \\<noteq> Suc n\n  a \\<noteq> i\n  Suc n < CARD('m)\n  mod_type_class.to_nat a \\<le> Suc n\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = mod_type_class.from_nat (Suc n)\n        then P $ mod_type_class.from_nat (Suc n) $ ja +\n             - A $ mod_type_class.from_nat (Suc n) $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    i $\n    b =\n    P $ i $ b", "by (auto simp add: to_nat_from_nat_id)"], ["proof (state)\nthis:\n  P' $ i $ b = P $ i $ b\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat a \\<noteq> Suc n \\<Longrightarrow>\n    fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "show \"fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b = row_add P a i (- A $ a $ j) $ a $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "unfolding row_add_iterate_PA.simps if_not_P[OF Suc_n_not_i]"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA\n          (row_add P (mod_type_class.from_nat (Suc n)) i\n            (- A $ mod_type_class.from_nat (Suc n) $ j),\n           row_add A (mod_type_class.from_nat (Suc n)) i\n            (- A $ mod_type_class.from_nat (Suc n) $ j))\n          n i j) $\n    a $\n    b =\n    row_add P a i (- A $ a $ j) $ a $ b", "unfolding rw[unfolded P'_def A'_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add\n     (row_add P (mod_type_class.from_nat (Suc n)) i\n       (- A $ mod_type_class.from_nat (Suc n) $ j))\n     a i\n     (- row_add A (mod_type_class.from_nat (Suc n)) i\n         (- A $ mod_type_class.from_nat (Suc n) $ j) $\n        a $\n        j) $\n    a $\n    b =\n    row_add P a i (- A $ a $ j) $ a $ b", "unfolding A'_def[symmetric] P'_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add P' a i (- A' $ a $ j) $ a $ b =\n    row_add P a i (- A $ a $ j) $ a $ b", "unfolding row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = a then P' $ a $ ja + - A' $ a $ j * P' $ i $ ja\n        else P' $ ia $ ja) $\n    a $\n    b =\n    (\\<chi>ia ja.\n        if ia = a then P $ a $ ja + - A $ a $ j * P $ i $ ja\n        else P $ ia $ ja) $\n    a $\n    b", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. P' $ a $ b - A' $ a $ j * P' $ i $ b = P $ a $ b - A $ a $ j * P $ i $ b", "unfolding rw1 rw2 rw3"], ["proof (prove)\ngoal (1 subgoal):\n 1. P $ a $ b - A $ a $ j * P $ i $ b = P $ a $ b - A $ a $ j * P $ i $ b", ".."], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n  row_add P a i (- A $ a $ j) $ a $ b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n  row_add P a i (- A $ a $ j) $ a $ b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P, A) (Suc n) i j) $ a $ b =\n  row_add P a i (- A $ a $ j) $ a $ b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fst_row_add_iterate_PA_eq_fst_Gauss_Jordan_in_ij_PA:\nfixes A::\"'a::{field}^'cols::{mod_type}^'rows::{mod_type}\"\nand i::\"'rows\" and j::\"'cols\"\nand P::\"'a::{field}^'rows::{mod_type}^'rows::{mod_type}\"\ndefines A': \"A'== mult_row (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) $ i $ j)\"\ndefines P': \"P'== mult_row (interchange_rows P i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) $ i $ j)\"\nshows \"fst (row_add_iterate_PA (P',A') (nrows A - 1) i j)  = fst (Gauss_Jordan_in_ij_PA (P,A) i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') (nrows A - 1) i j) =\n    fst (Gauss_Jordan_in_ij_PA (P, A) i j)", "proof (unfold Gauss_Jordan_in_ij_PA_def Let_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ i $ ia =\n       mult_row\n        (interchange_rows P i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n        i ((1::'a) /\n           A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j) $\n       i $\n       ia\n 2. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "fix ia"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ i $ ia =\n       mult_row\n        (interchange_rows P i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n        i ((1::'a) /\n           A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j) $\n       i $\n       ia\n 2. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "have interchange_rw: \"interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ i $ j = A $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j =\n    A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j", "using interchange_rows_j[symmetric, of A \"(LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)\"]"], ["proof (prove)\nusing this:\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) =\n  interchange_rows A (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n   ?j $\n  ?j\n\ngoal (1 subgoal):\n 1. interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j =\n    A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j", "by auto"], ["proof (state)\nthis:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j =\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ i $ ia =\n       mult_row\n        (interchange_rows P i\n          (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n        i ((1::'a) /\n           A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j) $\n       i $\n       ia\n 2. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "show \"fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ i $ ia =\n         mult_row (interchange_rows P i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / A $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ j) $ i $ ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ i $ ia =\n    mult_row\n     (interchange_rows P i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n     i ((1::'a) /\n        A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j) $\n    i $\n    ia", "unfolding A' P' interchange_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA\n          (mult_row\n            (interchange_rows P i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n            i ((1::'a) /\n               A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               j),\n           mult_row\n            (interchange_rows A i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n            i ((1::'a) /\n               A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               j))\n          (nrows A - Suc 0) i j) $\n    i $\n    ia =\n    mult_row\n     (interchange_rows P i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n     i ((1::'a) /\n        A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j) $\n    i $\n    ia", "proof (rule row_add_iterate_PA_preserves_pivot_row, unfold nrows_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. CARD('rows) - Suc 0 < CARD('rows)\n 2. mod_type_class.to_nat i \\<le> CARD('rows) - Suc 0", "show \"CARD('rows) - Suc 0 < CARD('rows)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('rows) - Suc 0 < CARD('rows)", "by auto"], ["proof (state)\nthis:\n  CARD('rows) - Suc 0 < CARD('rows)\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i \\<le> CARD('rows) - Suc 0", "show \"to_nat i \\<le> CARD('rows) - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i \\<le> CARD('rows) - Suc 0", "by (metis Suc_pred leD not_less_eq_eq to_nat_less_card zero_less_card_finite)"], ["proof (state)\nthis:\n  mod_type_class.to_nat i \\<le> CARD('rows) - Suc 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ i $ ia =\n  mult_row\n   (interchange_rows P i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n   i ((1::'a) /\n      A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j) $\n  i $\n  ia\n\ngoal (1 subgoal):\n 1. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "fix ia iaa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "have interchange_rw: \"A $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ j = interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j =\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j", "using interchange_rows_j[symmetric, of A \"(LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)\"]"], ["proof (prove)\nusing this:\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) =\n  interchange_rows A (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n   ?j $\n  ?j\n\ngoal (1 subgoal):\n 1. A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j =\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j", "by auto"], ["proof (state)\nthis:\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j =\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j\n\ngoal (1 subgoal):\n 1. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "assume ia_not_i: \"ia \\<noteq> i\""], ["proof (state)\nthis:\n  ia \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "have rw: \"(- interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ ia $ j) \n    = - mult_row (interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ i $ j) $ ia $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - interchange_rows A i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n      ia $\n      j =\n    - mult_row\n       (interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n       i ((1::'a) /\n          interchange_rows A i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n          i $\n          j) $\n      ia $\n      j", "unfolding interchange_rows_def mult_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (\\<chi>ia ja.\n          if ia = i\n          then A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               ja\n          else if ia =\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n               then A $ i $ ja else A $ ia $ ja) $\n      ia $\n      j =\n    - (\\<chi>ia ja.\n          if ia = i\n          then (1::'a) /\n               (\\<chi>ia ja.\n                   if ia = i\n                   then A $\n                        (LEAST n.\n                            A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                        ja\n                   else if ia =\n                           (LEAST n.\n                               A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n                        then A $ i $ ja else A $ ia $ ja) $\n               i $\n               j *\n               (\\<chi>ia ja.\n                   if ia = i\n                   then A $\n                        (LEAST n.\n                            A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                        ja\n                   else if ia =\n                           (LEAST n.\n                               A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n                        then A $ i $ ja else A $ ia $ ja) $\n               i $\n               ja\n          else (\\<chi>ia ja.\n                   if ia = i\n                   then A $\n                        (LEAST n.\n                            A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                        ja\n                   else if ia =\n                           (LEAST n.\n                               A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n                        then A $ i $ ja else A $ ia $ ja) $\n               ia $\n               ja) $\n      ia $\n      j", "using ia_not_i"], ["proof (prove)\nusing this:\n  ia \\<noteq> i\n\ngoal (1 subgoal):\n 1. - (\\<chi>ia ja.\n          if ia = i\n          then A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               ja\n          else if ia =\n                  (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n               then A $ i $ ja else A $ ia $ ja) $\n      ia $\n      j =\n    - (\\<chi>ia ja.\n          if ia = i\n          then (1::'a) /\n               (\\<chi>ia ja.\n                   if ia = i\n                   then A $\n                        (LEAST n.\n                            A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                        ja\n                   else if ia =\n                           (LEAST n.\n                               A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n                        then A $ i $ ja else A $ ia $ ja) $\n               i $\n               j *\n               (\\<chi>ia ja.\n                   if ia = i\n                   then A $\n                        (LEAST n.\n                            A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                        ja\n                   else if ia =\n                           (LEAST n.\n                               A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n                        then A $ i $ ja else A $ ia $ ja) $\n               i $\n               ja\n          else (\\<chi>ia ja.\n                   if ia = i\n                   then A $\n                        (LEAST n.\n                            A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n                        ja\n                   else if ia =\n                           (LEAST n.\n                               A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n)\n                        then A $ i $ ja else A $ ia $ ja) $\n               ia $\n               ja) $\n      ia $\n      j", "by auto"], ["proof (state)\nthis:\n  - interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    ia $\n    j =\n  - mult_row\n     (interchange_rows A i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n     i ((1::'a) /\n        interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n        i $\n        j) $\n    ia $\n    j\n\ngoal (1 subgoal):\n 1. \\<And>ia iaa.\n       ia \\<noteq> i \\<Longrightarrow>\n       fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n       row_add\n        (mult_row\n          (interchange_rows P i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n          i ((1::'a) /\n             A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n             j))\n        ia i\n        (- interchange_rows A i\n            (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n           ia $\n           j) $\n       ia $\n       iaa", "show \"fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa \n    = row_add (mult_row (interchange_rows P i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n)) i (1 / A $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ j)) ia i\n    (- interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ ia $ j) $ ia $ iaa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n    row_add\n     (mult_row\n       (interchange_rows P i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n       i ((1::'a) /\n          A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j))\n     ia i\n     (- interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n        ia $\n        j) $\n    ia $\n    iaa", "unfolding interchange_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n    row_add\n     (mult_row\n       (interchange_rows P i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n       i ((1::'a) /\n          interchange_rows A i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n          i $\n          j))\n     ia i\n     (- interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n        ia $\n        j) $\n    ia $\n    iaa", "unfolding A' P'"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA\n          (mult_row\n            (interchange_rows P i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n            i ((1::'a) /\n               interchange_rows A i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i $\n               j),\n           mult_row\n            (interchange_rows A i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n            i ((1::'a) /\n               interchange_rows A i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i $\n               j))\n          (nrows A - Suc 0) i j) $\n    ia $\n    iaa =\n    row_add\n     (mult_row\n       (interchange_rows P i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n       i ((1::'a) /\n          interchange_rows A i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n          i $\n          j))\n     ia i\n     (- interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n        ia $\n        j) $\n    ia $\n    iaa", "unfolding rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (row_add_iterate_PA\n          (mult_row\n            (interchange_rows P i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n            i ((1::'a) /\n               interchange_rows A i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i $\n               j),\n           mult_row\n            (interchange_rows A i\n              (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n            i ((1::'a) /\n               interchange_rows A i\n                (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n               i $\n               j))\n          (nrows A - Suc 0) i j) $\n    ia $\n    iaa =\n    row_add\n     (mult_row\n       (interchange_rows P i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n       i ((1::'a) /\n          interchange_rows A i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n          i $\n          j))\n     ia i\n     (- mult_row\n         (interchange_rows A i\n           (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n         i ((1::'a) /\n            interchange_rows A i\n             (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n            i $\n            j) $\n        ia $\n        j) $\n    ia $\n    iaa", "proof (rule fst_row_add_iterate_PA_eq_row_add, unfold nrows_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. ia \\<noteq> i\n 2. CARD('rows) - Suc 0 < CARD('rows)\n 3. mod_type_class.to_nat ia \\<le> CARD('rows) - Suc 0", "show \"ia \\<noteq> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ia \\<noteq> i", "using ia_not_i"], ["proof (prove)\nusing this:\n  ia \\<noteq> i\n\ngoal (1 subgoal):\n 1. ia \\<noteq> i", "."], ["proof (state)\nthis:\n  ia \\<noteq> i\n\ngoal (2 subgoals):\n 1. CARD('rows) - Suc 0 < CARD('rows)\n 2. mod_type_class.to_nat ia \\<le> CARD('rows) - Suc 0", "show \"CARD('rows) - Suc 0 < CARD('rows)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('rows) - Suc 0 < CARD('rows)", "using zero_less_card_finite"], ["proof (prove)\nusing this:\n  0 < CARD(?'a)\n\ngoal (1 subgoal):\n 1. CARD('rows) - Suc 0 < CARD('rows)", "by auto"], ["proof (state)\nthis:\n  CARD('rows) - Suc 0 < CARD('rows)\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat ia \\<le> CARD('rows) - Suc 0", "show \"to_nat ia \\<le> CARD('rows) - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat ia \\<le> CARD('rows) - Suc 0", "by (metis Suc_pred leD not_less_eq_eq to_nat_less_card zero_less_card_finite)"], ["proof (state)\nthis:\n  mod_type_class.to_nat ia \\<le> CARD('rows) - Suc 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (row_add_iterate_PA (P', A') (nrows A - Suc 0) i j) $ ia $ iaa =\n  row_add\n   (mult_row\n     (interchange_rows P i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n))\n     i ((1::'a) /\n        A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j))\n   ia i\n   (- interchange_rows A i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n      ia $\n      j) $\n  ia $\n  iaa\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_fst_row_add_iterate_PA:\n  fixes A::\"'a::{ring_1}^'n^'m::{mod_type}\"\n  assumes n: \"n<nrows A\"\n  and inv_P: \"invertible P\"\n  shows \"invertible (fst (row_add_iterate_PA (P,A) n i j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) n i j))", "using n inv_P"], ["proof (prove)\nusing this:\n  n < nrows A\n  invertible P\n\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) n i j))", "proof (induct n arbitrary: A P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A P.\n       \\<lbrakk>0 < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible (fst (row_add_iterate_PA (P, A) 0 i j))\n 2. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A; invertible P\\<rbrakk>\n                   \\<Longrightarrow> invertible\n(fst (row_add_iterate_PA (P, A) n i j));\n        Suc n < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "case 0"], ["proof (state)\nthis:\n  0 < nrows A\n  invertible P\n\ngoal (2 subgoals):\n 1. \\<And>A P.\n       \\<lbrakk>0 < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible (fst (row_add_iterate_PA (P, A) 0 i j))\n 2. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A; invertible P\\<rbrakk>\n                   \\<Longrightarrow> invertible\n(fst (row_add_iterate_PA (P, A) n i j));\n        Suc n < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) 0 i j))", "proof (unfold row_add_iterate_PA.simps, auto simp add: \"0.prems\")"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> (0::'m) \\<Longrightarrow>\n    invertible (row_add P (0::'m) i (- A $ (0::'m) $ j))", "assume i_not_0: \"i \\<noteq> 0\""], ["proof (state)\nthis:\n  i \\<noteq> (0::'m)\n\ngoal (1 subgoal):\n 1. i \\<noteq> (0::'m) \\<Longrightarrow>\n    invertible (row_add P (0::'m) i (- A $ (0::'m) $ j))", "have \"row_add P 0 i (- A $ 0 $ j) = row_add (mat 1) 0 i (- A $ 0 $ j) ** P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add P (0::'m) i (- A $ (0::'m) $ j) =\n    row_add (mat (1::'a)) (0::'m) i (- A $ (0::'m) $ j) ** P", "unfolding row_add_mat_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add P (0::'m) i (- A $ (0::'m) $ j) =\n    row_add P (0::'m) i (- A $ (0::'m) $ j)", ".."], ["proof (state)\nthis:\n  row_add P (0::'m) i (- A $ (0::'m) $ j) =\n  row_add (mat (1::'a)) (0::'m) i (- A $ (0::'m) $ j) ** P\n\ngoal (1 subgoal):\n 1. i \\<noteq> (0::'m) \\<Longrightarrow>\n    invertible (row_add P (0::'m) i (- A $ (0::'m) $ j))", "show \"invertible (row_add P 0 i (- A $ 0 $ j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (row_add P (0::'m) i (- A $ (0::'m) $ j))", "by (subst row_add_mat_1[symmetric], rule invertible_mult, auto simp add: invertible_row_add[of 0 i \"(- A $ 0 $ j)\"] i_not_0 \"0.prems\")"], ["proof (state)\nthis:\n  invertible (row_add P (0::'m) i (- A $ (0::'m) $ j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  invertible (fst (row_add_iterate_PA (P, A) 0 i j))\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A; invertible P\\<rbrakk>\n                   \\<Longrightarrow> invertible\n(fst (row_add_iterate_PA (P, A) n i j));\n        Suc n < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A; invertible P\\<rbrakk>\n                   \\<Longrightarrow> invertible\n(fst (row_add_iterate_PA (P, A) n i j));\n        Suc n < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n < nrows ?A; invertible ?P\\<rbrakk>\n  \\<Longrightarrow> invertible (fst (row_add_iterate_PA (?P, ?A) n i j))\n  Suc n < nrows A\n  invertible P\n\ngoal (1 subgoal):\n 1. \\<And>n A P.\n       \\<lbrakk>\\<And>A P.\n                   \\<lbrakk>n < nrows A; invertible P\\<rbrakk>\n                   \\<Longrightarrow> invertible\n(fst (row_add_iterate_PA (P, A) n i j));\n        Suc n < nrows A; invertible P\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "proof (cases \"Suc n = to_nat i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "case True"], ["proof (state)\nthis:\n  Suc n = mod_type_class.to_nat i\n\ngoal (2 subgoals):\n 1. Suc n = mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))\n 2. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "unfolding row_add_iterate_PA.simps if_P[OF True]"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) n i j))", "using Suc.hyps Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>n < nrows ?A; invertible ?P\\<rbrakk>\n  \\<Longrightarrow> invertible (fst (row_add_iterate_PA (?P, ?A) n i j))\n  Suc n < nrows A\n  invertible P\n\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) n i j))", "by simp"], ["proof (state)\nthis:\n  invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "case False"], ["proof (state)\nthis:\n  Suc n \\<noteq> mod_type_class.to_nat i\n\ngoal (1 subgoal):\n 1. Suc n \\<noteq> mod_type_class.to_nat i \\<Longrightarrow>\n    invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))", "proof (unfold row_add_iterate_PA.simps if_not_P[OF False], rule Suc.hyps, unfold nrows_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. n < CARD('m)\n 2. invertible\n     (row_add P (mod_type_class.from_nat (Suc n)) i\n       (- A $ mod_type_class.from_nat (Suc n) $ j))", "show \"n < CARD('m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < CARD('m)", "using Suc.prems(1)"], ["proof (prove)\nusing this:\n  Suc n < nrows A\n\ngoal (1 subgoal):\n 1. n < CARD('m)", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  Suc n < CARD('m)\n\ngoal (1 subgoal):\n 1. n < CARD('m)", "by simp"], ["proof (state)\nthis:\n  n < CARD('m)\n\ngoal (1 subgoal):\n 1. invertible\n     (row_add P (mod_type_class.from_nat (Suc n)) i\n       (- A $ mod_type_class.from_nat (Suc n) $ j))", "show \"invertible (row_add P (from_nat (Suc n)) i (- A $ from_nat (Suc n) $ j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (row_add P (mod_type_class.from_nat (Suc n)) i\n       (- A $ mod_type_class.from_nat (Suc n) $ j))", "proof (subst row_add_mat_1[symmetric], rule invertible_mult, rule invertible_row_add)"], ["proof (state)\ngoal (2 subgoals):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i\n 2. invertible P", "show \"from_nat (Suc n) \\<noteq> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i", "using False Suc.prems(1) from_nat_not_eq"], ["proof (prove)\nusing this:\n  Suc n \\<noteq> mod_type_class.to_nat i\n  Suc n < nrows A\n  \\<lbrakk>?a \\<noteq> mod_type_class.to_nat ?b; ?a < CARD(?'a)\\<rbrakk>\n  \\<Longrightarrow> mod_type_class.from_nat ?a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i", "unfolding nrows_def"], ["proof (prove)\nusing this:\n  Suc n \\<noteq> mod_type_class.to_nat i\n  Suc n < CARD('m)\n  \\<lbrakk>?a \\<noteq> mod_type_class.to_nat ?b; ?a < CARD(?'a)\\<rbrakk>\n  \\<Longrightarrow> mod_type_class.from_nat ?a \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. mod_type_class.from_nat (Suc n) \\<noteq> i", "by blast"], ["proof (state)\nthis:\n  mod_type_class.from_nat (Suc n) \\<noteq> i\n\ngoal (1 subgoal):\n 1. invertible P", "show \"invertible P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible P", "using Suc.prems(2)"], ["proof (prove)\nusing this:\n  invertible P\n\ngoal (1 subgoal):\n 1. invertible P", "."], ["proof (state)\nthis:\n  invertible P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  invertible\n   (row_add P (mod_type_class.from_nat (Suc n)) i\n     (- A $ mod_type_class.from_nat (Suc n) $ j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  invertible (fst (row_add_iterate_PA (P, A) (Suc n) i j))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_fst_Gauss_Jordan_in_ij_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nassumes inv_P: \"invertible P\"\nand not_all_zero: \"\\<not> (\\<forall>m\\<ge>i. A $ m $ j = 0)\"\nshows \"invertible (fst (Gauss_Jordan_in_ij_PA (P,A) i j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (Gauss_Jordan_in_ij_PA (P, A) i j))", "proof (unfold fst_row_add_iterate_PA_eq_fst_Gauss_Jordan_in_ij_PA[symmetric], rule invertible_fst_row_add_iterate_PA, simp add: nrows_def, \nsubst interchange_rows_mat_1[symmetric], subst mult_row_mat_1[symmetric], rule invertible_mult)"], ["proof (state)\ngoal (2 subgoals):\n 1. invertible\n     (mult_row (mat (1::'a)) i\n       ((1::'a) /\n        interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n        i $\n        j))\n 2. invertible\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)", "show \"invertible (mult_row (mat 1) i (1 / interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ i $ j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (mult_row (mat (1::'a)) i\n       ((1::'a) /\n        interchange_rows A i\n         (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n        i $\n        j))", "proof (rule invertible_mult_row')"], ["proof (state)\ngoal (1 subgoal):\n 1. (1::'a) /\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j \\<noteq>\n    (0::'a)", "have \"interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ i $ j = A $ (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j =\n    A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j", "by simp"], ["proof (state)\nthis:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j =\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j\n\ngoal (1 subgoal):\n 1. (1::'a) /\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j \\<noteq>\n    (0::'a)", "also"], ["proof (state)\nthis:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j =\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j\n\ngoal (1 subgoal):\n 1. (1::'a) /\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j \\<noteq>\n    (0::'a)", "have \"... \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j \\<noteq>\n    (0::'a)", "by (metis (lifting, mono_tags) LeastI_ex not_all_zero)"], ["proof (state)\nthis:\n  A $ (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $ j \\<noteq>\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (1::'a) /\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j \\<noteq>\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j \\<noteq>\n  (0::'a)", "show \"1 / interchange_rows A i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) $ i $ j \\<noteq> 0\""], ["proof (prove)\nusing this:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j \\<noteq>\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (1::'a) /\n    interchange_rows A i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n    i $\n    j \\<noteq>\n    (0::'a)", "unfolding inverse_eq_divide[symmetric]"], ["proof (prove)\nusing this:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j \\<noteq>\n  (0::'a)\n\ngoal (1 subgoal):\n 1. inverse\n     (interchange_rows A i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n      i $\n      j) \\<noteq>\n    (0::'a)", "using nonzero_imp_inverse_nonzero"], ["proof (prove)\nusing this:\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j \\<noteq>\n  (0::'a)\n  ?a \\<noteq> (0::?'a) \\<Longrightarrow> inverse ?a \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. inverse\n     (interchange_rows A i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n      i $\n      j) \\<noteq>\n    (0::'a)", "by blast"], ["proof (state)\nthis:\n  (1::'a) /\n  interchange_rows A i\n   (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n  i $\n  j \\<noteq>\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  invertible\n   (mult_row (mat (1::'a)) i\n     ((1::'a) /\n      interchange_rows A i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) $\n      i $\n      j))\n\ngoal (1 subgoal):\n 1. invertible\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)", "show \"invertible (interchange_rows (mat 1) i (LEAST n. A $ n $ j \\<noteq> 0 \\<and> i \\<le> n) ** P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (interchange_rows (mat (1::'a)) i\n       (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n      P)", "by (rule invertible_mult, rule invertible_interchange_rows, rule inv_P)"], ["proof (state)\nthis:\n  invertible\n   (interchange_rows (mat (1::'a)) i\n     (LEAST n. A $ n $ j \\<noteq> (0::'a) \\<and> i \\<le> n) **\n    P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_fst_Gauss_Jordan_column_k_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nassumes inv_P: \"invertible P\"\nshows \"invertible (fst (Gauss_Jordan_column_k_PA (P,i,A) k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (Gauss_Jordan_column_k_PA (P, i, A) k))", "proof (unfold Gauss_Jordan_column_k_PA_def Let_def snd_conv fst_conv, auto simp add: inv_P)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>i \\<noteq> nrows A; mod_type_class.from_nat i \\<le> m;\n        A $ m $ mod_type_class.from_nat k \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (Gauss_Jordan_in_ij_PA (P, A)\n                                 (mod_type_class.from_nat i)\n                                 (mod_type_class.from_nat k)))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>i \\<noteq> nrows A; mod_type_class.from_nat i \\<le> m;\n        A $ m $ mod_type_class.from_nat k \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (Gauss_Jordan_in_ij_PA (P, A)\n                                 (mod_type_class.from_nat i)\n                                 (mod_type_class.from_nat k)))", "assume i_less_m: \"from_nat i \\<le> m\" and Amk_not_0: \"A $ m $ from_nat k \\<noteq> 0\""], ["proof (state)\nthis:\n  mod_type_class.from_nat i \\<le> m\n  A $ m $ mod_type_class.from_nat k \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>i \\<noteq> nrows A; mod_type_class.from_nat i \\<le> m;\n        A $ m $ mod_type_class.from_nat k \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> invertible\n                          (fst (Gauss_Jordan_in_ij_PA (P, A)\n                                 (mod_type_class.from_nat i)\n                                 (mod_type_class.from_nat k)))", "show \"invertible (fst (Gauss_Jordan_in_ij_PA (P, A) (from_nat i) (from_nat k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (fst (Gauss_Jordan_in_ij_PA (P, A) (mod_type_class.from_nat i)\n            (mod_type_class.from_nat k)))", "by (rule invertible_fst_Gauss_Jordan_in_ij_PA[OF inv_P], auto intro!: i_less_m Amk_not_0)"], ["proof (state)\nthis:\n  invertible\n   (fst (Gauss_Jordan_in_ij_PA (P, A) (mod_type_class.from_nat i)\n          (mod_type_class.from_nat k)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_fst_Gauss_Jordan_upt_k_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nshows \"invertible (fst (Gauss_Jordan_upt_k_PA A k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (Gauss_Jordan_upt_k_PA A k))", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. invertible (fst (Gauss_Jordan_upt_k_PA A 0))\n 2. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. invertible (fst (Gauss_Jordan_upt_k_PA A 0))\n 2. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (Gauss_Jordan_upt_k_PA A 0))", "unfolding Gauss_Jordan_upt_k_PA_def Let_def fst_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc 0]))", "by (simp add: invertible_fst_Gauss_Jordan_column_k_PA invertible_mat_1)"], ["proof (state)\nthis:\n  invertible (fst (Gauss_Jordan_upt_k_PA A 0))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "case (Suc k)"], ["proof (state)\nthis:\n  invertible (fst (Gauss_Jordan_upt_k_PA A k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "have list_rw: \"[0..<Suc (Suc k)] = [0..<Suc k] @ [Suc k]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0..<Suc (Suc k)] = [0..<Suc k] @ [Suc k]", "by simp"], ["proof (state)\nthis:\n  [0..<Suc (Suc k)] = [0..<Suc k] @ [Suc k]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "define f where \"f = foldl Gauss_Jordan_column_k_PA (mat 1, 0, A) [0..<Suc k]\""], ["proof (state)\nthis:\n  f = foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k]\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "have f_rw: \"f = (fst f, fst (snd f), snd (snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (fst f, fst (snd f), snd (snd f))", "by simp"], ["proof (state)\nthis:\n  f = (fst f, fst (snd f), snd (snd f))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       invertible (fst (Gauss_Jordan_upt_k_PA A k)) \\<Longrightarrow>\n       invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))", "unfolding Gauss_Jordan_upt_k_PA_def Let_def fst_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n            [0..<Suc (Suc k)]))", "unfolding list_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (fst (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A)\n            ([0..<Suc k] @ [Suc k])))", "unfolding foldl_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (fst (foldl Gauss_Jordan_column_k_PA\n            (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k])\n            [Suc k]))", "unfolding List.foldl.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible\n     (fst (Gauss_Jordan_column_k_PA\n            (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k])\n            (Suc k)))", "using invertible_fst_Gauss_Jordan_column_k_PA"], ["proof (prove)\nusing this:\n  invertible ?P \\<Longrightarrow>\n  invertible (fst (Gauss_Jordan_column_k_PA (?P, ?i, ?A) ?k))\n\ngoal (1 subgoal):\n 1. invertible\n     (fst (Gauss_Jordan_column_k_PA\n            (foldl Gauss_Jordan_column_k_PA (mat (1::'a), 0, A) [0..<Suc k])\n            (Suc k)))", "by (metis (mono_tags) Gauss_Jordan_upt_k_PA_def Suc.hyps fst_conv prod.collapse)"], ["proof (state)\nthis:\n  invertible (fst (Gauss_Jordan_upt_k_PA A (Suc k)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_fst_Gauss_Jordan_PA:\nfixes A::\"'a::{field}^'n::{mod_type}^'m::{mod_type}\"\nshows \"invertible (fst (Gauss_Jordan_PA A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (fst (Gauss_Jordan_PA A))", "by (unfold Gauss_Jordan_PA_def, rule invertible_fst_Gauss_Jordan_upt_k_PA)"], ["", "definition \"P_Gauss_Jordan A = fst (Gauss_Jordan_PA A)\""], ["", "end"]]}