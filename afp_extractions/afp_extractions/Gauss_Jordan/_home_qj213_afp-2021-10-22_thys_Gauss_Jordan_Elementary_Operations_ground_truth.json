{"file_name": "/home/qj213/afp-2021-10-22/thys/Gauss_Jordan/Elementary_Operations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gauss_Jordan", "problem_names": ["lemma mat_1_fun: \"mat 1 $ a $ b = (\\<lambda>i j. if i=j then 1 else 0) a b\"", "lemma mat1_sum_eq:\n  shows \"(\\<Sum>k\\<in>UNIV. mat (1::'a::{semiring_1}) $ s $ k * mat 1 $ k $ t) = mat 1 $ s $ t\"", "lemma invertible_mat_n:\n  fixes n::\"'a::{field}\"\n  assumes n: \"n \\<noteq> 0\"\n  shows \"invertible ((mat n)::'a^'n^'n)\"", "lemma interchange_same_rows: \"interchange_rows A a a = A\"", "lemma interchange_rows_i[simp]: \"interchange_rows A i j $ i = A $ j\"", "lemma interchange_rows_j[simp]: \"interchange_rows A i j $ j = A $ i\"", "lemma interchange_rows_preserves:\n  assumes \"i \\<noteq> a\" and \"j \\<noteq> a\"\n  shows \"interchange_rows A i j $ a = A $ a\"", "lemma interchange_rows_mat_1:\n  shows \"interchange_rows (mat 1) a b ** A = interchange_rows A a b\"", "lemma invertible_interchange_rows: \"invertible (interchange_rows (mat 1) a b)\"", "lemma mult_row_mat_1: \"mult_row (mat 1) a q ** A = mult_row A a q\"", "lemma invertible_mult_row:\n  assumes qk: \"q * k = 1\" and kq: \"k*q=1\"\n  shows \"invertible (mult_row (mat 1) a q)\"", "lemma row_add_mat_1: \"row_add (mat 1) a b q ** A = row_add A a b q\"", "lemma invertible_row_add:\n  assumes a_noteq_b: \"a\\<noteq>b\"\n  shows \"invertible (row_add (mat (1::'a::{ring_1})) a b q)\"", "lemma interchange_columns_mat_1: \"A ** interchange_columns (mat 1) a b = interchange_columns A a b\"", "lemma invertible_interchange_columns: \"invertible (interchange_columns (mat 1) a b)\"", "lemma mult_column_mat_1: \"A ** mult_column (mat 1) a q = mult_column A a q\"", "lemma invertible_mult_column:\n  assumes qk: \"q * k = 1\" and kq: \"k * q = 1\"\n  shows \"invertible (mult_column (mat 1) a q)\"", "lemma column_add_mat_1: \"A ** column_add (mat 1) a b q = column_add A a b q\"", "lemma invertible_column_add:\n  assumes a_noteq_b: \"a\\<noteq>b\"\n  shows \"invertible (column_add (mat (1::'a::{ring_1})) a b q)\"", "lemma interchange_rows_transpose:\n  shows \"interchange_rows (transpose A) a b = transpose (interchange_columns A a b)\"", "lemma interchange_rows_transpose':\n  shows \"interchange_rows A a b = transpose (interchange_columns (transpose A) a b)\"", "lemma interchange_columns_transpose:\n  shows \"interchange_columns (transpose A) a b = transpose (interchange_rows A a b)\"", "lemma interchange_columns_transpose':\n  shows \"interchange_columns A a b = transpose (interchange_rows (transpose A) a b)\"", "lemma interchange_rows_code [code abstract]:\n  \"vec_nth (interchange_rows_row A a b i) = (%j. if i = a then A $ b $ j else if i = b then A $ a $ j else A $ i $ j)\"", "lemma interchange_rows_code_nth [code abstract]: \"vec_nth (interchange_rows A a b) = interchange_rows_row A a b\"", "lemma interchange_columns_code [code abstract]:\n  \"vec_nth (interchange_columns_row A n m i) = (%j.  if j = n then A $ i $ m else if j = m then A $ i $ n else A $ i $ j)\"", "lemma interchange_columns_code_nth [code abstract]: \"vec_nth (interchange_columns A a b) = interchange_columns_row A a b\"", "lemma row_add_code [code abstract]:\n  \"vec_nth (row_add_row A a b q i) =  (%j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j)\"", "lemma row_add_code_nth [code abstract]: \"vec_nth (row_add A a b q) = row_add_row A a b q\"", "lemma column_add_code [code abstract]:\n  \"vec_nth (column_add_row A n m q i) =  (%j. if j = n then A $ i $ n + A $ i $ m * q else A $ i $ j)\"", "lemma column_add_code_nth [code abstract]: \"vec_nth (column_add A a b q) = column_add_row A a b q\"", "lemma mult_row_code [code abstract]:\n  \"vec_nth (mult_row_row A a q i) = (%j. if i = a then q * A $ a $ j else A $ i $ j)\"", "lemma mult_row_code_nth [code abstract]: \"vec_nth (mult_row A a q) = mult_row_row A a q\"", "lemma mult_column_code [code abstract]:\n  \"vec_nth (mult_column_row A n q i) = (%j. if j = n then A $ i $ j * q else A $ i $ j)\"", "lemma mult_column_code_nth [code abstract]: \"vec_nth (mult_column A a q) = mult_column_row A a q\""], "translations": [["", "lemma mat_1_fun: \"mat 1 $ a $ b = (\\<lambda>i j. if i=j then 1 else 0) a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat (1::'a) $ a $ b = (if a = b then 1::'a else (0::'a))", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ b =\n    (if a = b then 1::'a else (0::'a))", "by auto"], ["", "lemma mat1_sum_eq:\n  shows \"(\\<Sum>k\\<in>UNIV. mat (1::'a::{semiring_1}) $ s $ k * mat 1 $ k $ t) = mat 1 $ s $ t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ s $ k * mat (1::'a) $ k $ t) =\n    mat (1::'a) $ s $ t", "proof (unfold mat_def, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "let ?f=\"\\<lambda>k. (if t = k then 1::'a else (0::'a)) * (if k = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have univ_eq: \"UNIV = (UNIV - {t}) \\<union> {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by fast"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 0 + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)\n 2. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show \"sum ?f UNIV = 1\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "assume s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "let ?g=\"\\<lambda>k. (if s = k then 1::'a else 0) * (if k = t then 1 else 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"sum ?g UNIV = sum (\\<lambda>k. 0::'a) (UNIV::'b set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV. (0::'a))", "by (rule sum.cong, auto simp add: s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV. (0::'a))\n\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV. (0::'a))\n\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. (0::'a)) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. s \\<noteq> t \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (0::'a)", "show \"sum ?g UNIV = 0\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mat_n:\n  fixes n::\"'a::{field}\"\n  assumes n: \"n \\<noteq> 0\"\n  shows \"invertible ((mat n)::'a^'n^'n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (mat n)", "proof (unfold invertible_def, rule exI[of _ \"mat (inverse n)\"], rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. mat n ** mat (inverse n) = mat (1::'a)\n 2. mat (inverse n) ** mat n = mat (1::'a)", "show \"mat n ** mat (inverse n) = (mat 1::'a^'n^'n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat n ** mat (inverse n) = mat (1::'a)", "proof (unfold matrix_matrix_mult_def mat_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "fix ia::'n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "let ?f=\"(\\<lambda>k. (if ia = k then n else 0) * (if k = ia then inverse n else 0))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "have UNIV_rw: \"(UNIV::'n set) = insert ia (UNIV-{ia})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = insert ia (UNIV - {ia})", "by auto"], ["proof (state)\nthis:\n  UNIV = insert ia (UNIV - {ia})\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "have \"(\\<Sum>k\\<in>(UNIV::'n set). (if ia = k then n else 0) * (if k = ia then inverse n else 0)) = \n      (\\<Sum>k\\<in>insert ia (UNIV-{ia}). (if ia = k then n else 0) * (if k = ia then inverse n else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a)))", "using UNIV_rw"], ["proof (prove)\nusing this:\n  UNIV = insert ia (UNIV - {ia})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "have \"... = ?f ia + sum ?f (UNIV-{ia})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (if ia = ia then n else (0::'a)) *\n    (if ia = ia then inverse n else (0::'a)) +\n    (\\<Sum>k\\<in>UNIV - {ia}.\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a)))", "proof (rule sum.insert)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (UNIV - {ia})\n 2. ia \\<notin> UNIV - {ia}", "show \"finite (UNIV - {ia})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV - {ia})", "using finite_UNIV"], ["proof (prove)\nusing this:\n  finite_UNIV = Phantom(?'a) (finite UNIV)\n\ngoal (1 subgoal):\n 1. finite (UNIV - {ia})", "by fastforce"], ["proof (state)\nthis:\n  finite (UNIV - {ia})\n\ngoal (1 subgoal):\n 1. ia \\<notin> UNIV - {ia}", "show \"ia \\<notin> UNIV - {ia}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ia \\<notin> UNIV - {ia}", "by fast"], ["proof (state)\nthis:\n  ia \\<notin> UNIV - {ia}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (if ia = ia then n else (0::'a)) *\n  (if ia = ia then inverse n else (0::'a)) +\n  (\\<Sum>k\\<in>UNIV - {ia}.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (if ia = ia then n else (0::'a)) *\n  (if ia = ia then inverse n else (0::'a)) +\n  (\\<Sum>k\\<in>UNIV - {ia}.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if ia = ia then n else (0::'a)) *\n    (if ia = ia then inverse n else (0::'a)) +\n    (\\<Sum>k\\<in>UNIV - {ia}.\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (1::'a)", "using right_inverse[OF n]"], ["proof (prove)\nusing this:\n  n * inverse n = (1::'a)\n\ngoal (1 subgoal):\n 1. (if ia = ia then n else (0::'a)) *\n    (if ia = ia then inverse n else (0::'a)) +\n    (\\<Sum>k\\<in>UNIV - {ia}.\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (if ia = ia then n else (0::'a)) *\n  (if ia = ia then inverse n else (0::'a)) +\n  (\\<Sum>k\\<in>UNIV - {ia}.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (1::'a)", "show \" (\\<Sum>k\\<in>(UNIV::'n set). (if ia = k then n else 0) * (if k = ia then inverse n else 0)) = (1::'a)\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if ia = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "fix i::'n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "assume i_not_ia: \"i \\<noteq> ia\""], ["proof (state)\nthis:\n  i \\<noteq> ia\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then n else (0::'a)) *\n          (if k = ia then inverse n else (0::'a))) =\n       (0::'a)", "show \"(\\<Sum>k\\<in>(UNIV::'n set). (if i = k then n else 0) * (if k = ia then inverse n else 0)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if i = k then n else (0::'a)) *\n       (if k = ia then inverse n else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: i_not_ia)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if i = k then n else (0::'a)) *\n     (if k = ia then inverse n else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat n ** mat (inverse n) = mat (1::'a)\n\ngoal (1 subgoal):\n 1. mat (inverse n) ** mat n = mat (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mat (inverse n) ** mat n = mat (1::'a)", "show \"mat (inverse n) ** mat n = ((mat 1)::'a^'n^'n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat (inverse n) ** mat n = mat (1::'a)", "proof (unfold matrix_matrix_mult_def mat_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "fix ia::'n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "let ?f=\" (\\<lambda>k. (if ia = k then inverse n else 0) * (if k = ia then n else 0))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "have UNIV_rw: \"(UNIV::'n set) = insert ia (UNIV-{ia})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = insert ia (UNIV - {ia})", "by auto"], ["proof (state)\nthis:\n  UNIV = insert ia (UNIV - {ia})\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "have \"(\\<Sum>k\\<in>(UNIV::'n set). (if ia = k then inverse n else 0) * (if k = ia then n else 0)) = \n      (\\<Sum>k\\<in>insert ia (UNIV-{ia}). (if ia = k then inverse n else 0) * (if k = ia then n else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a)))", "using UNIV_rw"], ["proof (prove)\nusing this:\n  UNIV = insert ia (UNIV - {ia})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "have \"... = ?f ia + sum ?f (UNIV-{ia})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (if ia = ia then inverse n else (0::'a)) *\n    (if ia = ia then n else (0::'a)) +\n    (\\<Sum>k\\<in>UNIV - {ia}.\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a)))", "proof (rule sum.insert)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (UNIV - {ia})\n 2. ia \\<notin> UNIV - {ia}", "show \"finite (UNIV - {ia})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV - {ia})", "using finite_UNIV"], ["proof (prove)\nusing this:\n  finite_UNIV = Phantom(?'a) (finite UNIV)\n\ngoal (1 subgoal):\n 1. finite (UNIV - {ia})", "by fastforce"], ["proof (state)\nthis:\n  finite (UNIV - {ia})\n\ngoal (1 subgoal):\n 1. ia \\<notin> UNIV - {ia}", "show \"ia \\<notin> UNIV - {ia}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ia \\<notin> UNIV - {ia}", "by fast"], ["proof (state)\nthis:\n  ia \\<notin> UNIV - {ia}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (if ia = ia then inverse n else (0::'a)) *\n  (if ia = ia then n else (0::'a)) +\n  (\\<Sum>k\\<in>UNIV - {ia}.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>insert ia (UNIV - {ia}).\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (if ia = ia then inverse n else (0::'a)) *\n  (if ia = ia then n else (0::'a)) +\n  (\\<Sum>k\\<in>UNIV - {ia}.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if ia = ia then inverse n else (0::'a)) *\n    (if ia = ia then n else (0::'a)) +\n    (\\<Sum>k\\<in>UNIV - {ia}.\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (1::'a)", "using left_inverse[OF n]"], ["proof (prove)\nusing this:\n  inverse n * n = (1::'a)\n\ngoal (1 subgoal):\n 1. (if ia = ia then inverse n else (0::'a)) *\n    (if ia = ia then n else (0::'a)) +\n    (\\<Sum>k\\<in>UNIV - {ia}.\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (if ia = ia then inverse n else (0::'a)) *\n  (if ia = ia then n else (0::'a)) +\n  (\\<Sum>k\\<in>UNIV - {ia}.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (1::'a)", "show \" (\\<Sum>k\\<in>(UNIV::'n set). (if ia = k then inverse n else 0) * (if k = ia then n else 0)) = (1::'a)\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if ia = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if ia = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "fix i::'n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "assume i_not_ia: \"i \\<noteq> ia\""], ["proof (state)\nthis:\n  i \\<noteq> ia\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then inverse n else (0::'a)) *\n          (if k = ia then n else (0::'a))) =\n       (0::'a)", "show \"(\\<Sum>k\\<in>(UNIV::'n set). (if i = k then inverse n else 0) * (if k = ia then n else 0)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if i = k then inverse n else (0::'a)) *\n       (if k = ia then n else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: i_not_ia)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if i = k then inverse n else (0::'a)) *\n     (if k = ia then n else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat (inverse n) ** mat n = mat (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary invertible_mat_1:\n  shows \"invertible (mat (1::'a::{field}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (mat (1::'a))", "by (metis invertible_mat_n zero_neq_one)"], ["", "subsection\\<open>Definitions of elementary row and column operations\\<close>"], ["", "text\\<open>Definitions of elementary row operations\\<close>"], ["", "definition interchange_rows :: \"'a ^'n^'m => 'm => 'm \\<Rightarrow> 'a ^'n^'m\"\n  where \"interchange_rows A a b = (\\<chi> i j. if i=a then A $ b $ j else if i=b then A $ a $ j else A $ i $ j)\""], ["", "definition mult_row :: \"('a::times) ^'n^'m => 'm => 'a \\<Rightarrow> 'a ^'n^'m\"\n  where \"mult_row A a q = (\\<chi> i j. if i=a then q*(A $ a $ j) else A $ i $ j)\""], ["", "definition row_add :: \"('a::{plus, times}) ^'n^'m => 'm => 'm \\<Rightarrow> 'a \\<Rightarrow> 'a ^'n^'m\"\n  where \"row_add A a b q = (\\<chi> i j. if i=a then (A $ a $ j) + q*(A $ b $ j) else A $ i $ j)\""], ["", "text\\<open>Definitions of elementary column operations\\<close>"], ["", "definition interchange_columns :: \"'a ^'n^'m => 'n => 'n \\<Rightarrow> 'a ^'n^'m\"\n  where \"interchange_columns A n m = (\\<chi> i j. if j=n then A $ i $ m else if j=m then A $ i $ n else A $ i $ j)\""], ["", "definition mult_column :: \"('a::times) ^'n^'m => 'n => 'a \\<Rightarrow> 'a ^'n^'m\"\n  where \" mult_column A n q = (\\<chi> i j. if j=n then (A $ i $ j)*q else A $ i $ j)\""], ["", "definition column_add :: \"('a::{plus, times}) ^'n^'m => 'n => 'n \\<Rightarrow> 'a \\<Rightarrow> 'a ^'n^'m\"\n  where \"column_add A n m q = (\\<chi> i j. if j=n then ((A $ i $ n) + (A $ i $ m)*q) else A $ i $ j)\""], ["", "subsection\\<open>Properties about elementary row operations\\<close>"], ["", "subsubsection\\<open>Properties about interchanging rows\\<close>"], ["", "text\\<open>Properties about @{term \"interchange_rows\"}\\<close>"], ["", "lemma interchange_same_rows: \"interchange_rows A a a = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A a a = A", "unfolding interchange_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        if i = a then A $ a $ j\n        else if i = a then A $ a $ j else A $ i $ j) =\n    A", "by vector"], ["", "lemma interchange_rows_i[simp]: \"interchange_rows A i j $ i = A $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A i j $ i = A $ j", "unfolding interchange_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = i then A $ j $ ja\n        else if ia = j then A $ i $ ja else A $ ia $ ja) $\n    i =\n    A $ j", "by vector"], ["", "lemma interchange_rows_j[simp]: \"interchange_rows A i j $ j = A $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A i j $ j = A $ i", "unfolding interchange_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = i then A $ j $ ja\n        else if ia = j then A $ i $ ja else A $ ia $ ja) $\n    j =\n    A $ i", "by vector"], ["", "lemma interchange_rows_preserves:\n  assumes \"i \\<noteq> a\" and \"j \\<noteq> a\"\n  shows \"interchange_rows A i j $ a = A $ a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A i j $ a = A $ a", "using assms"], ["proof (prove)\nusing this:\n  i \\<noteq> a\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. interchange_rows A i j $ a = A $ a", "unfolding interchange_rows_def"], ["proof (prove)\nusing this:\n  i \\<noteq> a\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<chi>ia ja.\n        if ia = i then A $ j $ ja\n        else if ia = j then A $ i $ ja else A $ ia $ ja) $\n    a =\n    A $ a", "by vector"], ["", "lemma interchange_rows_mat_1:\n  shows \"interchange_rows (mat 1) a b ** A = interchange_rows A a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows (mat (1::'a)) a b ** A = interchange_rows A a b", "proof (unfold matrix_matrix_mult_def interchange_rows_def, vector, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "fix ia"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "let ?f=\"(\\<lambda>k. mat (1::'a) $ a $ k * A $ k $ ia)\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. mat (1::'a) $ a $ k * A $ k $ ia)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. mat (1::'a) $ a $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {a}. mat (1::'a) $ a $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia)", "proof (rule sum.union_disjoint)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (UNIV - {a})\n 2. finite {a}\n 3. (UNIV - {a}) \\<inter> {a} = {}", "show \"finite (UNIV - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (UNIV - {a})", "by (metis finite_code)"], ["proof (state)\nthis:\n  finite (UNIV - {a})\n\ngoal (2 subgoals):\n 1. finite {a}\n 2. (UNIV - {a}) \\<inter> {a} = {}", "show \"finite {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a}", "by simp"], ["proof (state)\nthis:\n  finite {a}\n\ngoal (1 subgoal):\n 1. (UNIV - {a}) \\<inter> {a} = {}", "show \"(UNIV - {a}) \\<inter> {a} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (UNIV - {a}) \\<inter> {a} = {}", "by simp"], ["proof (state)\nthis:\n  (UNIV - {a}) \\<inter> {a} = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a}. mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a}. mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}. mat (1::'a) $ a $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{a}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{a}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = ?f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n    mat (1::'a) $ a $ a * A $ a $ ia", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n  mat (1::'a) $ a $ a * A $ a $ ia\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}. mat (1::'a) $ a $ k * A $ k $ ia) =\n  mat (1::'a) $ a $ a * A $ a $ ia\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = A $ a $ ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat (1::'a) $ a $ a * A $ a $ ia = A $ a $ ia", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ a * A $ a $ ia =\n    A $ a $ ia", "by auto"], ["proof (state)\nthis:\n  mat (1::'a) $ a $ a * A $ a $ ia = A $ a $ ia\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n 2. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia", "show \"(\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ a $ k * A $ k $ ia) = A $ a $ ia\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "assume i: \" a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "let ?g= \"\\<lambda>k. mat (1::'a) $ b $ k * A $ k $ ia\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have univ_rw':\"UNIV = (UNIV-{b}) \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"sum ?g UNIV = sum ?g ((UNIV-{b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. mat (1::'a) $ b $ k * A $ k $ ia)", "using univ_rw'"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. mat (1::'a) $ b $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. mat (1::'a) $ b $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. mat (1::'a) $ b $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = sum ?g (UNIV-{b}) + sum ?g {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       mat (1::'a) $ b $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {b}. mat (1::'a) $ b $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {b}. mat (1::'a) $ b $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {b}. mat (1::'a) $ b $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = sum ?g {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}. mat (1::'a) $ b $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{b}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{b}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}. mat (1::'a) $ b $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}. mat (1::'a) $ b $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = ?g b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n    mat (1::'a) $ b $ b * A $ b $ ia", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}. mat (1::'a) $ b $ k * A $ k $ ia) =\n  mat (1::'a) $ b $ b * A $ b $ ia\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) =\n  mat (1::'a) $ b $ b * A $ b $ ia", "show \"(\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) =\n  mat (1::'a) $ b $ b * A $ b $ ia\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia", "unfolding mat_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k * A $ k $ ia) =\n  (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ b * A $ b $ ia\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k * A $ k $ ia) =\n    A $ b $ ia", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ b $ k * A $ k $ ia) = A $ b $ ia\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "assume ib: \"i \\<noteq> b\" and ia:\"i \\<noteq> a\""], ["proof (state)\nthis:\n  i \\<noteq> b\n  i \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "let ?h=\"\\<lambda>k. mat (1::'a) $ i $ k * A $ k $ j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have univ_rw'':\"UNIV = (UNIV-{i}) \\<union> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {i} \\<union> {i}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {i} \\<union> {i}\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"sum ?h UNIV = sum ?h ((UNIV-{i}) \\<union> {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j)", "using univ_rw''"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {i} \\<union> {i}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = sum ?h (UNIV-{i}) + sum ?h {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... =  sum ?h {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>{i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "have \"... = ?h i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    mat (1::'a) $ i $ i * A $ i $ j", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  mat (1::'a) $ i $ i * A $ i $ j\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> b; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            mat (1::'a) $ i $ k * A $ k $ ia) =\n                         A $ i $ ia", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n  mat (1::'a) $ i $ i * A $ i $ j", "show \" (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n  mat (1::'a) $ i $ i * A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j", "unfolding mat_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j) =\n  (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ i * A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j) =\n    A $ i $ j", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_interchange_rows: \"invertible (interchange_rows (mat 1) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (interchange_rows (mat (1::'a)) a b)", "proof (unfold invertible_def, rule exI[of _ \"interchange_rows (mat 1) a b\"], simp, unfold matrix_matrix_mult_def, vector, clarify, \n    unfold interchange_rows_def, vector, unfold mat_1_fun, auto+)"], ["proof (state)\ngoal (8 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       \\<lbrakk>b = a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = a then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = b then if a = k then 1::'a else (0::'a)\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 6. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 7. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 8. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s t::\"'b\""], ["proof (state)\ngoal (8 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       \\<lbrakk>b = a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = a then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = b then if a = k then 1::'a else (0::'a)\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 6. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 7. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 8. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (8 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       \\<lbrakk>b = a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = a then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = b then if a = k then 1::'a else (0::'a)\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 6. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 7. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 8. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \" (\\<Sum>k::'b\\<in>UNIV. (if s = k then 1::'a else (0::'a)) * (if k = t then 1::'a else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (7 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = b then if a = k then 1::'a else (0::'a)\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 5. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 6. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 7. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_t: \"b \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n\ngoal (7 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = b then if a = k then 1::'a else (0::'a)\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 5. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 6. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 7. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if s = b then if t = k then 1::'a else (0::'a) else if s = k then 1::'a else (0::'a)) *\n    (if k = t then 0::'a else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = b then if t = k then 1::'a else (0::'a)\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = b then if t = k then 1::'a else (0::'a)\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (6 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume a_not_t: \"a \\<noteq> t\""], ["proof (state)\nthis:\n  a \\<noteq> t\n\ngoal (6 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if s = a then if b = k then 1::'a else (0::'a) else if s = b then if a = k then 1::'a else (0::'a) else if s = k then 1::'a else (0::'a)) *\n    (if k = a then 0::'a else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a then if b = k then 1::'a else (0::'a)\n        else if s = b then if a = k then 1::'a else (0::'a)\n             else if s = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a then if b = k then 1::'a else (0::'a)\n      else if s = b then if a = k then 1::'a else (0::'a)\n           else if s = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (5 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "fix s t::\"'b\""], ["proof (state)\ngoal (5 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "assume a_noteq_t: \"a\\<noteq>t\" and s_noteq_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  a \\<noteq> t\n  s \\<noteq> t\n\ngoal (5 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a then if b = k then 1::'a else (0::'a)\n                             else if i = b\n                                  then if a = k then 1::'a else (0::'a)\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if s = a then if t = k then 1::'a else (0::'a) else if s = t then if a = k then 1::'a else (0::'a) else if s = k then 1::'a else (0::'a)) *\n    (if k = a then 1::'a else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a then if t = k then 1::'a else (0::'a)\n        else if s = t then if a = k then 1::'a else (0::'a)\n             else if s = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if s = a then if t = x then 1::'a else (0::'a)\n        else if s = t then if a = x then 1::'a else (0::'a)\n             else if s = x then 1::'a else (0::'a)) *\n       (if x = a then 1::'a\n        else if x = t then 0::'a else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "using s_noteq_t"], ["proof (prove)\nusing this:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if s = a then if t = x then 1::'a else (0::'a)\n        else if s = t then if a = x then 1::'a else (0::'a)\n             else if s = x then 1::'a else (0::'a)) *\n       (if x = a then 1::'a\n        else if x = t then 0::'a else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a then if t = k then 1::'a else (0::'a)\n      else if s = t then if a = k then 1::'a else (0::'a)\n           else if s = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (4 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "fix s t::\"'b\""], ["proof (state)\ngoal (4 subgoals):\n 1. b = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = a then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if t = k then 1::'a else (0::'a)) * (if k = t then 1::'a else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"(\\<lambda>k. (if t = k then 1::'a else (0::'a)) * (if k = t then 1::'a else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a\n        else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a\n      else if k = t then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "fix s t::\"'b\""], ["proof (state)\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "assume b_noteq_t: \"b \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if b = k then 1::'a else (0::'a)) * (if k = t then 0::'a else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"(\\<lambda>k. (if b = k then 1::'a else (0::'a)) * (if k = t then 0::'a else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {b}) \\<union> {b}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using b_noteq_t"], ["proof (prove)\nusing this:\n  b \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = t then 0::'a\n        else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = t then 0::'a\n      else if k = b then 1::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "assume a_noteq_t: \"a\\<noteq>t\""], ["proof (state)\nthis:\n  a \\<noteq> t\n\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> ia; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if t = k then 1::'a else (0::'a)) * (if k = a then 0::'a else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"(\\<lambda>k.  (if t = k then 1::'a else (0::'a)) * (if k = a then 0::'a else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using b_noteq_t a_noteq_t"], ["proof (prove)\nusing this:\n  b \\<noteq> t\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "fix s t::\"'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "assume a_noteq_t: \"a\\<noteq>t\""], ["proof (state)\nthis:\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if a = k then 1::'a else (0::'a)) * (if k = a then 1::'a else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k.  (if a = k then 1::'a else (0::'a)) * (if k = a then 1::'a else if k = t then 0::'a else if k = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}) \\<union> {a}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_t"], ["proof (prove)\nusing this:\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if a = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a\n        else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if a = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a\n      else if k = t then 0::'a else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Properties about multiplying a row by a constant\\<close>"], ["", "text\\<open>Properties about @{term \"mult_row\"}\\<close>"], ["", "lemma mult_row_mat_1: \"mult_row (mat 1) a q ** A = mult_row A a q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_row (mat (1::'a)) a q ** A = mult_row A a q", "proof (unfold matrix_matrix_mult_def mult_row_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "fix ia"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "let ?f=\"\\<lambda>k. q * mat (1::'a) $ a $ k * A $ k $ ia\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       q * mat (1::'a) $ a $ k * A $ k $ ia)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       q * mat (1::'a) $ a $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     q * mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     q * mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       q * mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {a}. q * mat (1::'a) $ a $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a}. q * mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {a}. q * mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}. q * mat (1::'a) $ a $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k *\n       A $ k $ ia) +\n    (\\<Sum>k\\<in>{a}.\n       q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k *\n       A $ k $ ia) =\n    (\\<Sum>k\\<in>{a}.\n       q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k *\n       A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. q * mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. q * mat (1::'a) $ a $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = ?f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n    q * mat (1::'a) $ a $ a * A $ a $ ia", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  q * mat (1::'a) $ a $ a * A $ a $ ia\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n  q * mat (1::'a) $ a $ a * A $ a $ ia\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = q * A $ a $ ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * mat (1::'a) $ a $ a * A $ a $ ia = q * A $ a $ ia", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ a * A $ a $ ia =\n    q * A $ a $ ia", "by auto"], ["proof (state)\nthis:\n  q * mat (1::'a) $ a $ a * A $ a $ ia = q * A $ a $ ia\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n       q * A $ a $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) = q * A $ a $ ia", "show  \"(\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) = q * A $ a $ ia\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) = q * A $ a $ ia\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) =\n    q * A $ a $ ia", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. q * mat (1::'a) $ a $ k * A $ k $ ia) = q * A $ a $ ia\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "assume i: \"i \\<noteq> a\""], ["proof (state)\nthis:\n  i \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "let ?g=\"\\<lambda>k. mat (1::'a) $ i $ k * A $ k $ ia\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have univ_rw'':\"UNIV = (UNIV-{i}) \\<union> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {i} \\<union> {i}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {i} \\<union> {i}\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"sum ?g UNIV = sum ?g ((UNIV-{i}) \\<union> {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ ia)", "using univ_rw''"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {i} \\<union> {i}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = sum ?g (UNIV-{i}) + sum ?g {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}.\n       mat (1::'a) $ i $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i} \\<union> {i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... =  sum ?g {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ ia) +\n    (\\<Sum>k\\<in>{i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ ia) =\n    (\\<Sum>k\\<in>{i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ ia)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ ia) +\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = ?g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n    mat (1::'a) $ i $ i * A $ i $ ia", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ ia) =\n  mat (1::'a) $ i $ i * A $ i $ ia\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) =\n  mat (1::'a) $ i $ i * A $ i $ ia", "show \"(\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) =\n  mat (1::'a) $ i $ i * A $ i $ ia\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "unfolding mat_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ ia) =\n  (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ i * A $ i $ ia\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ ia) =\n    A $ i $ ia", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mult_row:\n  assumes qk: \"q * k = 1\" and kq: \"k*q=1\"\n  shows \"invertible (mult_row (mat 1) a q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (mult_row (mat (1::'a)) a q)", "proof (unfold invertible_def, rule exI[of _ \"mult_row (mat 1) a k\"],rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. mult_row (mat (1::'a)) a q ** mult_row (mat (1::'a)) a k = mat (1::'a)\n 2. mult_row (mat (1::'a)) a k ** mult_row (mat (1::'a)) a q = mat (1::'a)", "show \"mult_row (mat (1::'a)) a q ** mult_row (mat (1::'a)) a k = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_row (mat (1::'a)) a q ** mult_row (mat (1::'a)) a k = mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold mult_row_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if i = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (1::'a)\n           else if ka = a then 1::'a else (0::'a))) =\n       (0::'a)\n 3. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. q * (if a = ka then 1::'a else (0::'a)) * (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>ka. q * (if a = ka then 1::'a else (0::'a)) * (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)) \""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}) \\<union> {a}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "using qk"], ["proof (prove)\nusing this:\n  q * k = (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{a}.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>{a}.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>ka\\<in>UNIV.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ka\\<in>UNIV.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       q * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     q * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if i = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (1::'a)\n           else if ka = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if i = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (1::'a)\n           else if ka = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if i = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (1::'a)\n           else if ka = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_noteq_a: \"s\\<noteq>a\""], ["proof (state)\nthis:\n  s \\<noteq> a\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if i = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (1::'a)\n           else if ka = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if s = ka then 1::'a else (0::'a)) * (if ka = a then k * (1::'a) else if ka = a then 1::'a else 0)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if s = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: s_noteq_a)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if s = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume a_noteq_t: \"a\\<noteq>t\""], ["proof (state)\nthis:\n  a \\<noteq> t\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ia = ka then 1::'a else (0::'a)) *\n          (if ka = a then k * (0::'a)\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if t = ka then 1::'a else (0::'a)) * (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>ka. (if t = ka then 1::'a else (0::'a)) * (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)) \""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>{t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_t"], ["proof (prove)\nusing this:\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{t}.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>{t}.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>ka\\<in>UNIV.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ka\\<in>UNIV.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if t = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if t = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_t: \"s\\<noteq>t\""], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then q * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then k * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if s = a then q * (if a = ka then 1::'a else (0::'a)) else if s = ka then 1::'a else (0::'a)) *\n      (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if s = a then q * (if a = ka then 1::'a else (0::'a))\n        else if s = ka then 1::'a else (0::'a)) *\n       (if ka = a then k * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: s_not_t a_noteq_t)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if s = a then q * (if a = ka then 1::'a else (0::'a))\n      else if s = ka then 1::'a else (0::'a)) *\n     (if ka = a then k * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mult_row (mat (1::'a)) a q ** mult_row (mat (1::'a)) a k = mat (1::'a)\n\ngoal (1 subgoal):\n 1. mult_row (mat (1::'a)) a k ** mult_row (mat (1::'a)) a q = mat (1::'a)", "show \"mult_row (mat (1::'a)) a k ** mult_row (mat (1::'a)) a q = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_row (mat (1::'a)) a k ** mult_row (mat (1::'a)) a q = mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold mult_row_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then 1::'a else (0::'a)) *\n          (if k = a then q * (1::'a)\n           else if k = a then 1::'a else (0::'a))) =\n       (0::'a)\n 3. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. k * (if a = ka then 1::'a else (0::'a)) * (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>ka. k * (if a = ka then 1::'a else (0::'a)) * (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)) \""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}) \\<union> {a}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a} \\<union> {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "using kq"], ["proof (prove)\nusing this:\n  k * q = (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{a}.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>{a}.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>ka\\<in>UNIV.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ka\\<in>UNIV.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       k * (if a = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (1::'a)\n        else if ka = a then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     k * (if a = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (1::'a) else if ka = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then 1::'a else (0::'a)) *\n          (if k = a then q * (1::'a)\n           else if k = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then 1::'a else (0::'a)) *\n          (if k = a then q * (1::'a)\n           else if k = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then 1::'a else (0::'a)) *\n          (if k = a then q * (1::'a)\n           else if k = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_a: \"s\\<noteq>a\""], ["proof (state)\nthis:\n  s \\<noteq> a\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if i = k then 1::'a else (0::'a)) *\n          (if k = a then q * (1::'a)\n           else if k = a then 1::'a else (0::'a))) =\n       (0::'a)\n 2. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if s = k then 1::'a else (0::'a)) * (if k = a then q * (1::'a) else if k = a then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = a then q * (1::'a) else if k = a then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: s_not_a)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = a then q * (1::'a) else if k = a then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume a_not_t: \"a\\<noteq>t\""], ["proof (state)\nthis:\n  a \\<noteq> t\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       a \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV.\n          (if ia = k then 1::'a else (0::'a)) *\n          (if k = a then q * (0::'a)\n           else if k = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if t = k then 1::'a else (0::'a)) * (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if t = k then 1::'a else (0::'a)) * (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using a_not_t"], ["proof (prove)\nusing this:\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then q * (0::'a) else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_t: \"s\\<noteq>t\""], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> ia; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>ka\\<in>UNIV.\n                            (if i = a\n                             then k * (if a = ka then 1::'a else (0::'a))\n                             else if i = ka then 1::'a else (0::'a)) *\n                            (if ka = a then q * (0::'a)\n                             else if ka = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \" (\\<Sum>ka\\<in>UNIV. (if s = a then k * (if a = ka then 1::'a else (0::'a)) else if s = ka then 1::'a else (0::'a)) *\n      (if ka = a then q * (0::'a) else if ka = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if s = a then k * (if a = ka then 1::'a else (0::'a))\n        else if s = ka then 1::'a else (0::'a)) *\n       (if ka = a then q * (0::'a)\n        else if ka = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, simp add: s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if s = a then k * (if a = ka then 1::'a else (0::'a))\n      else if s = ka then 1::'a else (0::'a)) *\n     (if ka = a then q * (0::'a) else if ka = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mult_row (mat (1::'a)) a k ** mult_row (mat (1::'a)) a q = mat (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary invertible_mult_row':\n  assumes q_not_zero: \"q \\<noteq> 0\"\n  shows \"invertible (mult_row (mat (1::'a::{field})) a q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (mult_row (mat (1::'a)) a q)", "by (simp add: invertible_mult_row[of q \"inverse q\"] q_not_zero)"], ["", "subsubsection\\<open>Properties about adding a row multiplied by a constant to another row\\<close>"], ["", "text\\<open>Properties about @{term \"row_add\"}\\<close>"], ["", "lemma row_add_mat_1: \"row_add (mat 1) a b q ** A = row_add A a b q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b q ** A = row_add A a b q", "proof (unfold matrix_matrix_mult_def row_add_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ ia) =\n       A $ a $ ia + q * A $ b $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ ia) =\n       A $ a $ ia + q * A $ b $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "let ?f=\" (\\<lambda>k. (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>k\\<in>UNIV.\n          (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ ia) =\n       A $ a $ ia + q * A $ b $ ia\n 2. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "show \"sum ?f UNIV = A $ a $ j + q * A $ b $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "proof (cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have univ_rw: \"UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))", "by auto"], ["proof (state)\nthis:\n  UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have sum_rw: \"sum ?f ({b} \\<union> (UNIV - {a} - {b})) = sum ?f {b} + sum ?f (UNIV - {a} - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by (rule sum.union_disjoint, auto simp add: False)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"sum ?f UNIV = sum ?f ({a} \\<union> ({b} \\<union> (UNIV - {a} - {b})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = sum ?f {a} + sum ?f ({b} \\<union> (UNIV - {a} - {b}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by (rule sum.union_disjoint, auto simp add: False)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = sum ?f {a} + sum ?f {b} + sum ?f (UNIV - {a} - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "unfolding sum_rw add.assoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    ((\\<Sum>k\\<in>{b}.\n        (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n     (\\<Sum>k\\<in>UNIV - {a} - {b}.\n        (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    ((\\<Sum>k\\<in>{b}.\n        (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n     (\\<Sum>k\\<in>UNIV - {a} - {b}.\n        (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j))", ".."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = sum ?f {a} + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "have \"sum ?f (UNIV - {a} - {b}) = sum (\\<lambda>k. 0) (UNIV - {a} - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}. (0::'a))", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k +\n        q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k) *\n       A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}. (0::'a))", "by (rule sum.cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}. (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}. (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}. (0::'a)) = (0::'a)", "unfolding sum.neutral_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) = (0::'a)", ".."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}. (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = A $ a $ j + q * A $ b $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "using False"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "unfolding mat_def"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k +\n        q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k) *\n       A $ k $ j) +\n    (\\<Sum>k\\<in>{b}.\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k +\n        q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k) *\n       A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have univ_rw: \"UNIV = {b} \\<union> (UNIV - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {b} \\<union> (UNIV - {b})", "by auto"], ["proof (state)\nthis:\n  UNIV = {b} \\<union> (UNIV - {b})\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"sum ?f UNIV = sum ?f ({b} \\<union> (UNIV - {b}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = {b} \\<union> (UNIV - {b})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = sum ?f {b} + sum ?f (UNIV  - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {b}).\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "have \"sum ?f (UNIV - {b}) = sum (\\<lambda>k. 0) (UNIV - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {b}. (0::'a))", "using True"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {b}. (0::'a))", "unfolding mat_def"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ a $ k +\n        q * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ b $ k) *\n       A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {b}. (0::'a))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {b}. (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {b}. (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}. (0::'a)) = (0::'a)", "unfolding sum.neutral_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) = (0::'a)", ".."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}. (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j)\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "have \"... = A $ a $ j + q * A $ b $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "by (unfold True mat_def, simp, metis (hide_lams, no_types) vector_add_component vector_sadd_rdistrib vector_smult_component vector_smult_lid)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n    A $ a $ j + q * A $ b $ j", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (mat (1::'a) $ a $ k + q * mat (1::'a) $ b $ k) * A $ k $ j) =\n  A $ a $ j + q * A $ b $ j\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "assume i: \"i\\<noteq>a\""], ["proof (state)\nthis:\n  i \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "let ?g=\"\\<lambda>k.  mat (1::'a) $ i $ k * A $ k $ j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have univ_rw: \"UNIV = {i} \\<union> (UNIV - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {i} \\<union> (UNIV - {i})", "by auto"], ["proof (state)\nthis:\n  UNIV = {i} \\<union> (UNIV - {i})\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"sum ?g UNIV = sum ?g ({i} \\<union> (UNIV - {i}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}). mat (1::'a) $ i $ k * A $ k $ j)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = {i} \\<union> (UNIV - {i})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}). mat (1::'a) $ i $ k * A $ k $ j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}). mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}). mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = sum ?g {i} + sum ?g (UNIV - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}).\n       mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}). mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i} \\<union> (UNIV - {i}). mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... = sum ?g {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "have \"sum ?g (UNIV - {i}) = sum (\\<lambda>k. 0) (UNIV - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {i}. (0::'a))", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {i}. (0::'a))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {i}. (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {i}. (0::'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {i}. (0::'a)) = (0::'a)", "unfolding sum.neutral_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) = (0::'a)", ".."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {i}. (0::'a)) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n    (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n    (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) +\n  (\\<Sum>k\\<in>UNIV - {i}. mat (1::'a) $ i $ k * A $ k $ j) =\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "have \"... =  A $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{i}.\n       (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ i $ k * A $ k $ j) =\n    A $ i $ j", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{i}. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ ia) = A $ i $ ia", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j", "show \"(\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j\""], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. mat (1::'a) $ i $ k * A $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_row_add:\n  assumes a_noteq_b: \"a\\<noteq>b\"\n  shows \"invertible (row_add (mat (1::'a::{ring_1})) a b q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (row_add (mat (1::'a)) a b q)", "proof (unfold invertible_def, rule exI[of _ \"(row_add (mat 1) a b (-q))\"], rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. row_add (mat (1::'a)) a b q ** row_add (mat (1::'a)) a b (- q) =\n    mat (1::'a)\n 2. row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q =\n    mat (1::'a)", "show \"row_add (mat (1::'a)) a b q ** row_add (mat (1::'a)) a b (- q) = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b q ** row_add (mat (1::'a)) a b (- q) =\n    mat (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b q ** row_add (mat (1::'a)) a b (- q) =\n    mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold row_add_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (6 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + - q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \" (\\<Sum>k::'b\\<in>UNIV. (if b = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + - q * (1::'a) else if k = b then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if b = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + - q * (1::'a) else if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {b}) \\<union> {b}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (5 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + - q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k::'b\\<in>UNIV. ((if a = k then 1::'a else (0::'a)) + q * (if b = k then 1::'a else (0::'a))) * (if k = a then (1::'a) + - \n      q * (0::'a) else if k = a then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k.  ((if a = k then 1::'a else (0::'a)) + q * (if b = k then 1::'a else (0::'a))) * (if k = a then (1::'a) + - \n        q * (0::'a) else if k = a then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}) \\<union> {a}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + - q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + - q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + - q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_a: \"s \\<noteq> a\""], ["proof (state)\nthis:\n  s \\<noteq> a\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + - q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k::'b\\<in>UNIV. (if s = k then 1::'a else (0::'a)) * (if k = a then (1::'a) + - q * (0::'a) else if k = a then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = a then (1::'a) + - q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: s_not_a)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = a then (1::'a) + - q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_t: \"b \\<noteq> t\" and a_not_t: \"a \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n  a \\<noteq> t\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if t = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + - q * (0::'a) else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if t = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + - q * (0::'a) else if k = t then 1::'a else (0::'a)) \""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using b_not_t a_not_t"], ["proof (prove)\nusing this:\n  b \\<noteq> t\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume  b_not_t: \"b \\<noteq> t\" and a_not_t: \"a \\<noteq> t\" and  s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n  a \\<noteq> t\n  s \\<noteq> t\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if s = a then (if a = k then 1::'a else (0::'a)) + q * (if b = k then 1::'a else (0::'a)) else if s = k then 1::'a else (0::'a)) *\n      (if k = a then (0::'a) + - q * (0::'a) else if k = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: b_not_t a_not_t s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_b: \"s\\<noteq>b\""], ["proof (state)\nthis:\n  s \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "let ?f=\"\\<lambda>k. (if s = a then (if a = k then 1::'a else (0::'a)) + q * (if b = k then 1::'a else (0::'a)) else if s = k then 1::'a else (0::'a)) *\n      (if k = a then (0::'a) + - q * (1::'a) else if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + - q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"sum ?f UNIV = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "proof (cases \"s=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)\n 2. s \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "case False"], ["proof (state)\nthis:\n  s \\<noteq> a\n\ngoal (2 subgoals):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)\n 2. s \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: False s_not_b a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "case True \\<comment> \\<open>This case is different from the other cases\\<close>"], ["proof (state)\nthis:\n  s = a\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_a: \"sum ?f {a} = -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "using s_not_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  - q\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_b: \"sum ?f {b} = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "using s_not_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  q\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_rest: \"sum ?f (UNIV - {a} - {b}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: True s_not_b a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f ({b} \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f {b} + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by (auto simp add: sum.union_disjoint a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "unfolding sum_a sum_b sum_rest"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) + q + - q = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + - q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + - q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  row_add (mat (1::'a)) a b q ** row_add (mat (1::'a)) a b (- q) =\n  mat (1::'a)\n\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q =\n    mat (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q =\n    mat (1::'a)", "show \"row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q =\n    mat (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q =\n    mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold row_add_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (6 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if b = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + q * (1::'a) else if k = b then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if b = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + q * (1::'a) else if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {b}) \\<union> {b}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if b = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if b = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (5 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. ((if a = k then 1 else 0) - q * (if b = k then 1 else 0)) * (if k = a then 1 + q * 0 else if k = a then 1 else 0)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. ((if a = k then 1::'a else (0::'a)) + - (q * (if b = k then 1::'a else (0::'a)))) * (if k = a then (1::'a) + q * (0::'a) else if k = a then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}) \\<union> {a}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       ((if a = k then 1::'a else (0::'a)) +\n        - (q * (if b = k then 1::'a else (0::'a)))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) +\n      - (q * (if b = k then 1::'a else (0::'a)))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       ((if a = k then 1::'a else (0::'a)) -\n        q * (if b = k then 1::'a else (0::'a))) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) -\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     ((if a = k then 1::'a else (0::'a)) -\n      q * (if b = k then 1::'a else (0::'a))) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_a: \"s\\<noteq>a\""], ["proof (state)\nthis:\n  s \\<noteq> a\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i.\n       \\<lbrakk>b \\<noteq> a; i \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (1::'a) + q * (0::'a)\n                             else if k = a then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if s = k then 1::'a else (0::'a)) * (if k = a then (1::'a) + q * (0::'a) else if k = a then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = k then 1::'a else (0::'a)) *\n       (if k = a then (1::'a) + q * (0::'a)\n        else if k = a then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: s_not_a)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = k then 1::'a else (0::'a)) *\n     (if k = a then (1::'a) + q * (0::'a)\n      else if k = a then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_t: \"b \\<noteq> t\" and a_not_t: \"a \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n  a \\<noteq> t\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if ia = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if t = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + q * (0::'a) else if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if t = k then 1::'a else (0::'a)) * (if k = a then (0::'a) + q * (0::'a) else if k = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_eq: \"UNIV = ((UNIV - {t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {t}) \\<union> {t}) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV - {t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 0 + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) +\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (0::'a) +\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using b_not_t a_not_t"], ["proof (prove)\nusing this:\n  b \\<noteq> t\n  a \\<noteq> t\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if t = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if t = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_t: \"b \\<noteq> t\" and a_not_t: \"a \\<noteq> t\" and s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n  a \\<noteq> t\n  s \\<noteq> t\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia; a \\<noteq> ia;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if s = a then (if a = k then 1::'a else (0::'a)) + - q * (if b = k then 1::'a else (0::'a)) else if s = k then 1::'a else (0::'a)) *\n      (if k = a then (0::'a) + q * (0::'a) else if k = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: b_not_t a_not_t s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_b: \"s\\<noteq>b\""], ["proof (state)\nthis:\n  s \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "let ?f=\"\\<lambda>k.(if s = a then (if a = k then 1::'a else (0::'a)) + - q * (if b = k then 1::'a else (0::'a)) else if s = k then 1::'a else (0::'a)) \n      * (if k = a then (0::'a) + q * (1::'a) else if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if i = a\n                             then (if a = k then 1::'a else (0::'a)) +\n                                  - q * (if b = k then 1::'a else (0::'a))\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if k = a then (0::'a) + q * (1::'a)\n                             else if k = b then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"sum ?f UNIV = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "proof (cases \"s=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)\n 2. s \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "case False"], ["proof (state)\nthis:\n  s \\<noteq> a\n\ngoal (2 subgoals):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)\n 2. s \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: False s_not_b a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "case True \\<comment> \\<open>This case is different from the other cases\\<close>"], ["proof (state)\nthis:\n  s = a\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_a: \"sum ?f {a} = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "using s_not_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  q\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_b: \"sum ?f {b} = -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "using s_not_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  s \\<noteq> b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if a = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    - q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  - q\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_rest: \"sum ?f (UNIV - {a} - {b}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: True s_not_b a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f ({b} \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f {b} + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a)))", "by (auto simp add: sum.union_disjoint a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "unfolding sum_a sum_b sum_rest"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) + - q + q = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. s = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if s = a\n        then (if a = k then 1::'a else (0::'a)) +\n             - q * (if b = k then 1::'a else (0::'a))\n        else if s = k then 1::'a else (0::'a)) *\n       (if k = a then (0::'a) + q * (1::'a)\n        else if k = b then 1::'a else (0::'a))) =\n    (0::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if s = a\n      then (if a = k then 1::'a else (0::'a)) +\n           - q * (if b = k then 1::'a else (0::'a))\n      else if s = k then 1::'a else (0::'a)) *\n     (if k = a then (0::'a) + q * (1::'a)\n      else if k = b then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  row_add (mat (1::'a)) a b (- q) ** row_add (mat (1::'a)) a b q =\n  mat (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Properties about elementary column operations\\<close>"], ["", "subsubsection\\<open>Properties about interchanging columns\\<close>"], ["", "text\\<open>Properties about @{term \"interchange_columns\"}\\<close>"], ["", "lemma interchange_columns_mat_1: \"A ** interchange_columns (mat 1) a b = interchange_columns A a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ** interchange_columns (mat (1::'a)) a b = interchange_columns A a b", "proof (unfold matrix_matrix_mult_def, unfold interchange_columns_def, vector, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a\n 2. \\<And>i.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\n 3. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "fix i"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a\n 2. \\<And>i.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\n 3. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "show \"(\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "let ?f=\"(\\<lambda>k. A $ i $ k * mat (1::'a) $ k $ a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a) =\n    (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * mat (1::'a) $ k $ a) +\n    (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * mat (1::'a) $ k $ a) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * mat (1::'a) $ k $ a) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * mat (1::'a) $ k $ a) +\n    (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a) =\n    (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a) +\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * mat (1::'a) $ k $ a) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) =\n  (\\<Sum>k\\<in>{a}. A $ i $ k * mat (1::'a) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a", "unfolding mat_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a) =\n    A $ i $ a", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ a) = A $ i $ a\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\n 2. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "assume a_not_b: \"a\\<noteq>b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       a \\<noteq> b \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\n 2. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "show \" (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "let ?f=\"(\\<lambda>k. A $ i $ k * mat (1::'a) $ k $ b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "have univ_rw:\"UNIV = (UNIV-{b}) \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "have \"sum ?f UNIV = sum ?f ((UNIV-{b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "have \"... = sum ?f (UNIV-{b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b) =\n    (\\<Sum>k\\<in>UNIV - {b}. A $ i $ k * mat (1::'a) $ k $ b) +\n    (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>UNIV - {b}. A $ i $ k * mat (1::'a) $ k $ b) +\n  (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>UNIV - {b}. A $ i $ k * mat (1::'a) $ k $ b) +\n  (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}. A $ i $ k * mat (1::'a) $ k $ b) +\n    (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b) =\n    (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b) =\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}. A $ i $ k * mat (1::'a) $ k $ b) +\n  (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) =\n  (\\<Sum>k\\<in>{b}. A $ i $ k * mat (1::'a) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b", "unfolding mat_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b) =\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b) =\n    A $ i $ b", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ b) = A $ i $ b\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "assume j_not_b: \"j \\<noteq> b\" and j_not_a: \"j \\<noteq> a\""], ["proof (state)\nthis:\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            A $ i $ k * mat (1::'a) $ k $ ia) =\n                         A $ i $ ia", "show \"(\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "let ?f=\"(\\<lambda>k. A $ i $ k * mat (1::'a) $ k $ j)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have univ_rw:\"UNIV = (UNIV-{j}) \\<union> {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {j} \\<union> {j}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"sum ?f UNIV = sum ?f ((UNIV-{j}) \\<union> {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = sum ?f (UNIV-{j}) + sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) +\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j)", "using j_not_b j_not_a"], ["proof (prove)\nusing this:\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) +\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "unfolding mat_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n  (\\<Sum>k\\<in>{j}.\n     A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    A $ i $ j", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_interchange_columns: \"invertible (interchange_columns (mat 1) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (interchange_columns (mat (1::'a)) a b)", "proof (unfold invertible_def, rule exI[of _ \"interchange_columns (mat 1) a b\"], simp, unfold matrix_matrix_mult_def, vector, clarify, \n    unfold interchange_columns_def, vector, unfold mat_1_fun, auto+)"], ["proof (state)\ngoal (8 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 6. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 7. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 8. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = b then 1::'a else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"(\\<lambda>k. (if k = b then 1::'a else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{b}) \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (7 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 5. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 6. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 7. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume a_not_b: \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (7 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 5. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 6. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 7. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 0::'a else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if k = a then 0::'a else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{b}) \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "using a_not_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "using a_not_b"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (6 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_t: \"b \\<noteq> t\""], ["proof (state)\nthis:\n  b \\<noteq> t\n\ngoal (6 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a = b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = b then 1::'a\n                             else if k = b then 1::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if k = b then 1::'a else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) * (if k = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = b then 1::'a\n        else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = b then 1::'a\n        else if x = b then 1::'a else if b = x then 1::'a else (0::'a)) *\n       (if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "using b_not_t"], ["proof (prove)\nusing this:\n  b \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = b then 1::'a\n        else if x = b then 1::'a else if b = x then 1::'a else (0::'a)) *\n       (if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = b then 1::'a\n      else if k = b then 1::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (5 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_a: \"b \\<noteq> a\""], ["proof (state)\nthis:\n  b \\<noteq> a\n\ngoal (5 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>b \\<noteq> a; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 1::'a\n                             else if k = b then 0::'a\n                                  else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 1::'a else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n    (if t = a then if k = b then 1::'a else (0::'a) else if t = b then if k = a then 1::'a else (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if t = a then if k = b then 1::'a else (0::'a)\n        else if t = b then if k = a then 1::'a else (0::'a)\n             else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then 1::'a\n        else if x = b then 0::'a else if b = x then 1::'a else (0::'a)) *\n       (if t = a then if x = b then 1::'a else (0::'a)\n        else if t = b then if x = a then 1::'a else (0::'a)\n             else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "using b_not_t"], ["proof (prove)\nusing this:\n  b \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then 1::'a\n        else if x = b then 0::'a else if b = x then 1::'a else (0::'a)) *\n       (if t = a then if x = b then 1::'a else (0::'a)\n        else if t = b then if x = a then 1::'a else (0::'a)\n             else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if t = a then if k = b then 1::'a else (0::'a)\n      else if t = b then if k = a then 1::'a else (0::'a)\n           else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume a_not_b: \"a \\<noteq> b\" and a_not_t: \"a \\<noteq> t\""], ["proof (state)\nthis:\n  a \\<noteq> b\n  a \\<noteq> t\n\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 1::'a\n                                  else if a = k then 1::'a else (0::'a)) *\n                            (if ia = b then if k = a then 1::'a else (0::'a)\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 0::'a else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n    (if t = b then if k = a then 1::'a else (0::'a) else if k = t then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n       (if t = b then if k = a then 1::'a else (0::'a)\n        else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: a_not_b a_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 1::'a else if a = k then 1::'a else (0::'a)) *\n     (if t = b then if k = a then 1::'a else (0::'a)\n      else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_a: \"b \\<noteq> a\""], ["proof (state)\nthis:\n  b \\<noteq> a\n\ngoal (3 subgoals):\n 1. b \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 1::'a else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) * (if k = a then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k.  (if k = a then 1::'a else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) * (if k = a then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a)))", "using b_not_a"], ["proof (prove)\nusing this:\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "using b_not_a"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a)))\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 1::'a\n        else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n       (if k = a then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 1::'a\n      else if k = b then 0::'a else if b = k then 1::'a else (0::'a)) *\n     (if k = a then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume t_not_a: \"t \\<noteq> a\" and t_not_b: \"t \\<noteq> b\""], ["proof (state)\nthis:\n  t \\<noteq> a\n  t \\<noteq> b\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<noteq> a; ia \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 0::'a else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) * (if k = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if k = a then 0::'a else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) * (if k = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{t}) \\<union> {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t} \\<union> {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "using t_not_a t_not_b"], ["proof (prove)\nusing this:\n  t \\<noteq> a\n  t \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "using t_not_a t_not_b"], ["proof (prove)\nusing this:\n  t \\<noteq> a\n  t \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{t}.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{t}.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n       (if k = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if t = k then 1::'a else (0::'a)) *\n     (if k = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume s_not_a: \"s \\<noteq> a\" and s_not_b: \"s \\<noteq> b\" and s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  s \\<noteq> a\n  s \\<noteq> b\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i \\<noteq> a; i \\<noteq> b; i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then 0::'a\n                             else if k = b then 0::'a\n                                  else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a then if k = b then 1::'a else (0::'a)\n                             else if ia = b\n                                  then if k = a then 1::'a else (0::'a)\n                                  else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 0::'a else if k = b then 0::'a else if s = k then 1::'a else (0::'a)) *\n    (if t = a then if k = b then 1::'a else (0::'a) else if t = b then if k = a then 1::'a else (0::'a) else if k = t then 1::'a else (0::'a))) =\n    (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then 0::'a\n        else if k = b then 0::'a else if s = k then 1::'a else (0::'a)) *\n       (if t = a then if k = b then 1::'a else (0::'a)\n        else if t = b then if k = a then 1::'a else (0::'a)\n             else if k = t then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: s_not_a s_not_b s_not_t)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then 0::'a\n      else if k = b then 0::'a else if s = k then 1::'a else (0::'a)) *\n     (if t = a then if k = b then 1::'a else (0::'a)\n      else if t = b then if k = a then 1::'a else (0::'a)\n           else if k = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Properties about multiplying a column by a constant\\<close>"], ["", "text\\<open>Properties about @{term \"mult_column\"}\\<close>"], ["", "lemma mult_column_mat_1: \"A ** mult_column (mat 1) a q = mult_column A a q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ** mult_column (mat (1::'a)) a q = mult_column A a q", "proof (unfold matrix_matrix_mult_def, unfold mult_column_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n       A $ i $ a * q\n 2. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n       A $ i $ a * q\n 2. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "show \"(\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "let ?f=\"\\<lambda>k.  A $ i $ k * (mat (1::'a) $ k $ a * q)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a * q))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) +\n    (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) +\n    (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q))", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a * q)) +\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) +\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "have \"... = A $ i $ a * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a * q)) =\n    A $ i $ a * q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) =\n    A $ i $ a * q", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * (mat (1::'a) $ k $ a * q)) = A $ i $ a * q\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "show \"(\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "let ?f=\"\\<lambda>k. A $ i $ k * mat (1::'a) $ k $ j\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have univ_rw:\"UNIV = (UNIV-{j}) \\<union> {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {j} \\<union> {j}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"sum ?f UNIV = sum ?f ((UNIV-{j}) \\<union> {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = sum ?f (UNIV-{j}) + sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) +\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = A $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    A $ i $ j", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mult_column:\n  assumes qk: \"q * k = 1\" and kq: \"k * q = 1\"\n  shows \"invertible (mult_column (mat 1) a q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (mult_column (mat (1::'a)) a q)", "proof (unfold invertible_def, rule exI[of _ \"mult_column (mat 1) a k\"], rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. mult_column (mat (1::'a)) a q ** mult_column (mat (1::'a)) a k =\n    mat (1::'a)\n 2. mult_column (mat (1::'a)) a k ** mult_column (mat (1::'a)) a q =\n    mat (1::'a)", "show \"mult_column (mat 1) a q ** mult_column (mat 1) a k = mat 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_column (mat (1::'a)) a q ** mult_column (mat (1::'a)) a k =\n    mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold mult_column_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if ia = ka then 1::'a else (0::'a)) * q\n           else if ia = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * q\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if ia = ka then 1::'a else (0::'a)) * q\n           else if ia = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * q\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if ka = a then (if t = ka then 1::'a else (0::'a)) * q else if t = ka then 1::'a else (0::'a)) *\n      (if t = a then (if ka = t then 1::'a else (0::'a)) * k else if ka = t then 1::'a else (0::'a))) =\n      (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\" \\<lambda>ka. (if ka = a then (if t = ka then 1::'a else (0::'a)) * q else if t = ka then 1::'a else (0::'a)) *\n        (if t = a then (if ka = t then 1::'a else (0::'a)) * k else if ka = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{t}) \\<union> {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "using qk"], ["proof (prove)\nusing this:\n  q * k = (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * q\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * q\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * q\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "assume s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * q\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * k\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if ka = a then (if s = ka then 1::'a else (0::'a)) * q else if s = ka then 1::'a else (0::'a)) *\n      (if t = a then (if ka = t then 1::'a else (0::'a)) * k else if ka = t then 1::'a else (0::'a))) =\n      (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if s = ka then 1::'a else (0::'a)) * q\n        else if s = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n        else if ka = t then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (if s = x then 1::'a else (0::'a)) * q\n        else if s = x then 1::'a else (0::'a)) *\n       (if t = a then (if x = t then 1::'a else (0::'a)) * k\n        else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "using s_not_t"], ["proof (prove)\nusing this:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (if s = x then 1::'a else (0::'a)) * q\n        else if s = x then 1::'a else (0::'a)) *\n       (if t = a then (if x = t then 1::'a else (0::'a)) * k\n        else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if s = ka then 1::'a else (0::'a)) * q\n      else if s = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * k\n      else if ka = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mult_column (mat (1::'a)) a q ** mult_column (mat (1::'a)) a k =\n  mat (1::'a)\n\ngoal (1 subgoal):\n 1. mult_column (mat (1::'a)) a k ** mult_column (mat (1::'a)) a q =\n    mat (1::'a)", "show \"mult_column (mat (1::'a)) a k ** mult_column (mat (1::'a)) a q = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_column (mat (1::'a)) a k ** mult_column (mat (1::'a)) a q =\n    mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold mult_column_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if ia = ka then 1::'a else (0::'a)) * k\n           else if ia = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * k\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if ia = ka then 1::'a else (0::'a)) * k\n           else if ia = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (1::'a)\n 2. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * k\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if ka = a then (if t = ka then 1::'a else (0::'a)) * k else if t = ka then 1::'a else (0::'a)) *\n      (if t = a then (if ka = t then 1::'a else (0::'a)) * q else if ka = t then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\" \\<lambda>ka. (if ka = a then (if t = ka then 1::'a else (0::'a)) * k else if t = ka then 1::'a else (0::'a)) *\n        (if t = a then (if ka = t then 1::'a else (0::'a)) * q else if ka = t then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{t}) \\<union> {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {t} \\<union> {t}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{t}) \\<union> {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {t} \\<union> {t}\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{t}) + sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>UNIV - {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t} \\<union> {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV - {t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) +\n    (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV - {t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) +\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "using kq"], ["proof (prove)\nusing this:\n  k * q = (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>{t}.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>{t}.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n        else if t = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if t = ka then 1::'a else (0::'a)) * k\n      else if t = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * k\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * k\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "assume s_not_t: \"s \\<noteq> t\""], ["proof (state)\nthis:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       i \\<noteq> ia \\<Longrightarrow>\n       (\\<Sum>ka\\<in>UNIV.\n          (if ka = a then (if i = ka then 1::'a else (0::'a)) * k\n           else if i = ka then 1::'a else (0::'a)) *\n          (if ia = a then (if ka = ia then 1::'a else (0::'a)) * q\n           else if ka = ia then 1::'a else (0::'a))) =\n       (0::'a)", "show \"(\\<Sum>ka\\<in>UNIV. (if ka = a then (if s = ka then 1::'a else (0::'a)) * k else if s = ka then 1::'a else (0::'a)) *\n      (if t = a then (if ka = t then 1::'a else (0::'a)) * q else if ka = t then 1::'a else (0::'a))) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ka\\<in>UNIV.\n       (if ka = a then (if s = ka then 1::'a else (0::'a)) * k\n        else if s = ka then 1::'a else (0::'a)) *\n       (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n        else if ka = t then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (if s = x then 1::'a else (0::'a)) * k\n        else if s = x then 1::'a else (0::'a)) *\n       (if t = a then (if x = t then 1::'a else (0::'a)) * q\n        else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "using s_not_t"], ["proof (prove)\nusing this:\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (if s = x then 1::'a else (0::'a)) * k\n        else if s = x then 1::'a else (0::'a)) *\n       (if t = a then (if x = t then 1::'a else (0::'a)) * q\n        else if x = t then 1::'a else (0::'a)) =\n       (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>ka\\<in>UNIV.\n     (if ka = a then (if s = ka then 1::'a else (0::'a)) * k\n      else if s = ka then 1::'a else (0::'a)) *\n     (if t = a then (if ka = t then 1::'a else (0::'a)) * q\n      else if ka = t then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mult_column (mat (1::'a)) a k ** mult_column (mat (1::'a)) a q =\n  mat (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary invertible_mult_column':  \n  assumes q_not_zero: \"q \\<noteq> 0\"\n  shows \"invertible (mult_column (mat (1::'a::{field})) a q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (mult_column (mat (1::'a)) a q)", "by (simp add: invertible_mult_column[of q \"inverse q\"] q_not_zero)"], ["", "subsubsection\\<open>Properties about adding a column multiplied by a constant to another column\\<close>"], ["", "text\\<open>Properties about @{term \"column_add\"}\\<close>"], ["", "lemma column_add_mat_1: \"A ** column_add (mat 1) a b q = column_add A a b q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ** column_add (mat (1::'a)) a b q = column_add A a b q", "proof (unfold matrix_matrix_mult_def, \n    unfold column_add_def, vector, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       (\\<Sum>k\\<in>UNIV.\n          A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n       A $ i $ a + A $ i $ b * q\n 2. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       (\\<Sum>k\\<in>UNIV.\n          A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n       A $ i $ a + A $ i $ b * q\n 2. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "let ?f=\"\\<lambda>k. A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       (\\<Sum>k\\<in>UNIV.\n          A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n       A $ i $ a + A $ i $ b * q\n 2. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "show \"sum ?f UNIV =  A $ i $ a + A $ i $ b * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "proof (cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "unfolding mat_def True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = ?f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a * (mat (1::'a) $ a $ a + mat (1::'a) $ a $ b * q)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a * (mat (1::'a) $ a $ a + mat (1::'a) $ a $ b * q)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a * (mat (1::'a) $ a $ a + mat (1::'a) $ a $ b * q)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = A $ i $ a + A $ i $ b * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $ i $ a * (mat (1::'a) $ a $ a + mat (1::'a) $ a $ b * q) =\n    A $ i $ a + A $ i $ b * q", "using True"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. A $ i $ a * (mat (1::'a) $ a $ a + mat (1::'a) $ a $ b * q) =\n    A $ i $ a + A $ i $ b * q", "unfolding mat_1_fun"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. A $ i $ a *\n    ((if a = a then 1::'a else (0::'a)) +\n     (if a = b then 1::'a else (0::'a)) * q) =\n    A $ i $ a + A $ i $ b * q", "using distrib_left[of \"A $ i $ b\" 1 q]"], ["proof (prove)\nusing this:\n  a = b\n  A $ i $ b * ((1::'a) + q) = A $ i $ b * (1::'a) + A $ i $ b * q\n\ngoal (1 subgoal):\n 1. A $ i $ a *\n    ((if a = a then 1::'a else (0::'a)) +\n     (if a = b then 1::'a else (0::'a)) * q) =\n    A $ i $ a + A $ i $ b * q", "by auto"], ["proof (state)\nthis:\n  A $ i $ a * (mat (1::'a) $ a $ a + mat (1::'a) $ a $ b * q) =\n  A $ i $ a + A $ i $ b * q\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have univ_rw: \"UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))", "by auto"], ["proof (state)\nthis:\n  UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have sum_rw: \"sum ?f ({b} \\<union> (UNIV - {a} - {b})) = sum ?f {b} + sum ?f (UNIV - {a} - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "by (rule sum.union_disjoint, auto simp add: False)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"sum ?f UNIV = sum ?f ({a} \\<union> ({b} \\<union> (UNIV - {a} - {b})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = {a} \\<union> ({b} \\<union> (UNIV - {a} - {b}))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = sum ?f {a} + sum ?f ({b} \\<union> (UNIV - {a} - {b}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "by (rule sum.union_disjoint, auto simp add: False)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a} \\<union> ({b} \\<union> (UNIV - {a} - {b})).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = sum ?f {a} + sum ?f {b} + sum ?f (UNIV - {a} - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "unfolding sum_rw add.assoc[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", ".."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b} \\<union> (UNIV - {a} - {b}).\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... = sum ?f {a} + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) +\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) =\n    (\\<Sum>k\\<in>{a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "have \"... =  A $ i $ a + A $ i $ b * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "using False"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "unfolding mat_def"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) +\n    (\\<Sum>k\\<in>{b}.\n       A $ i $ k *\n       ((\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ a +\n        (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) +\n  (\\<Sum>k\\<in>{b}.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n    A $ i $ a + A $ i $ b * q", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     A $ i $ k * (mat (1::'a) $ k $ a + mat (1::'a) $ k $ b * q)) =\n  A $ i $ a + A $ i $ b * q\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "assume j_noteq_a: \"j\\<noteq>a\""], ["proof (state)\nthis:\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       ia \\<noteq> a \\<Longrightarrow>\n       (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ ia) = A $ i $ ia", "show \"(\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "let ?f=\"\\<lambda>k. A $ i $ k * mat (1::'a) $ k $ j\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have univ_rw:\"UNIV = (UNIV-{j}) \\<union> {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {j} \\<union> {j}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"sum ?f UNIV = sum ?f ((UNIV-{j}) \\<union> {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = sum ?f (UNIV-{j}) + sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... = sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n    (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) +\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}. A $ i $ k * mat (1::'a) $ k $ j) +\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) =\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "have \"... =  A $ i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "unfolding mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}.\n       A $ i $ k * (\\<chi>i j. if i = j then 1::'a else (0::'a)) $ k $ j) =\n    A $ i $ j", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{j}. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV. A $ i $ k * mat (1::'a) $ k $ j) = A $ i $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_column_add:\n  assumes a_noteq_b: \"a\\<noteq>b\"\n  shows \"invertible (column_add (mat (1::'a::{ring_1})) a b q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (column_add (mat (1::'a)) a b q)", "proof (unfold invertible_def, rule exI[of _ \"(column_add (mat 1) a b (-q))\"], rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. column_add (mat (1::'a)) a b q ** column_add (mat (1::'a)) a b (- q) =\n    mat (1::'a)\n 2. column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q =\n    mat (1::'a)", "show \" column_add (mat (1::'a)) a b q ** column_add (mat (1::'a)) a b (- q) = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. column_add (mat (1::'a)) a b q ** column_add (mat (1::'a)) a b (- q) =\n    mat (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. column_add (mat (1::'a)) a b q ** column_add (mat (1::'a)) a b (- q) =\n    mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold column_add_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (6 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (1::'a) * q else if b = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k.  (if k = a then (0::'a) + (1::'a) * q else if b = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{b}) \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... =  1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (5 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 1 + 0 * q else if a = k then 1 else 0) * ((if k = a then 1 else 0) - (if k = b then 1 else 0) * q)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if k = a then (1::'a) + (0::'a) * q else if a = k then 1::'a else (0::'a)) * ((if k = a then 1::'a else (0::'a)) + - ((if k = b then 1::'a else (0::'a)) * q))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) =\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"... =  1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        - ((if k = b then 1::'a else (0::'a)) * q))) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      - ((if k = b then 1::'a else (0::'a)) * q))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) -\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) -\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) -\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)\n\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix i j"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume i_not_b: \"i \\<noteq> b\" and i_not_a: \"i \\<noteq> a\" and i_not_j: \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> b\n  i \\<noteq> a\n  i \\<noteq> j\n\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (0::'a) * q else if i = k then 1::'a else (0::'a)) *\n      (if j = a then (if k = a then 1::'a else (0::'a)) + (if k = b then 1::'a else (0::'a)) * - q else if k = j then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if i = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: i_not_b i_not_a i_not_j)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if i = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "fix j"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "assume a_not_j: \"a\\<noteq>j\""], ["proof (state)\nthis:\n  a \\<noteq> j\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if k = a then (1::'a) + (0::'a) * q else if a = k then 1::'a else (0::'a)) * (if k = j then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * q\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (1::'a) + (0::'a) * q\n        else if a = x then 1::'a else (0::'a)) *\n       (if x = j then 1::'a else (0::'a)) =\n       (0::'a)", "using a_not_j a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> j\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (1::'a) + (0::'a) * q\n        else if a = x then 1::'a else (0::'a)) *\n       (if x = j then 1::'a else (0::'a)) =\n       (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * q\n      else if a = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "assume j_not_b: \"j \\<noteq> b\" and j_not_a: \"j \\<noteq> a\""], ["proof (state)\nthis:\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)", "show \" (\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (0::'a) * q else if j = k then 1::'a else (0::'a)) * (if k = j then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if k = a then (0::'a) + (0::'a) * q else if j = k then 1::'a else (0::'a)) * (if k = j then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{j}) \\<union> {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {j} \\<union> {j}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{j}) \\<union> {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{j}) + sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "using j_not_b j_not_a"], ["proof (prove)\nusing this:\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... =  1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "using j_not_b j_not_a"], ["proof (prove)\nusing this:\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_j: \"b \\<noteq> j\""], ["proof (state)\nthis:\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * - q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then 0 + 1 * q else if b = k then 1 else 0) *\n      (if j = a then (if k = a then 1 else 0) + (if k = b then 1 else 0) * - q else if k = j then 1 else 0)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "proof (cases \"j=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)\n 2. j \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> a\n\ngoal (2 subgoals):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)\n 2. j \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: False b_not_j)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "case True \\<comment> \\<open>This case is different from the other cases\\<close>"], ["proof (state)\nthis:\n  j = a\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "let ?f=\"\\<lambda>k. (if k = a then 0 + 1 * q else if b = k then 1 else 0) *\n        (if j = a then (if k = a then 1 else 0) + (if k = b then 1 else 0) * - q else if k = j then 1 else 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_a: \"sum ?f {a} = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = a then 1::'a else (0::'a))) =\n    q", "using b_not_j"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = a then 1::'a else (0::'a))) =\n    q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = a then 1::'a else (0::'a))) =\n    q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  q\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_b: \"sum ?f {b} = -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    - q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = a then 1::'a else (0::'a))) =\n    - q", "using b_not_j"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = a then 1::'a else (0::'a))) =\n    - q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = a then 1::'a else (0::'a))) =\n    - q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  - q\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_rest: \"sum ?f (UNIV - {a} - {b}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: True b_not_j a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f ({b} \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f {b} + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a)))", "by (auto simp add: sum.union_disjoint a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "unfolding sum_a sum_b sum_rest"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) + - q + q = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * - q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * - q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  column_add (mat (1::'a)) a b q ** column_add (mat (1::'a)) a b (- q) =\n  mat (1::'a)\n\ngoal (1 subgoal):\n 1. column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q =\n    mat (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q =\n    mat (1::'a)", "show \" column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q = mat (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q =\n    mat (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q =\n    mat (1::'a)", "proof (unfold matrix_matrix_mult_def, vector, clarify, unfold column_add_def, vector, unfold mat_1_fun, auto)"], ["proof (state)\ngoal (6 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 5. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 6. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (1::'a) * - q else if b = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if k = a then (0::'a) + (1::'a) * - q else if b = k then 1::'a else (0::'a)) * (if k = b then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{b}) \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {b} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{b}) \\<union> {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {b} \\<union> {b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{b}) + sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b} \\<union> {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... =  1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if k = b then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if k = b then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (5 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. a \\<noteq> b \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 4. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 5. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (1::'a) + (0::'a) * - q else if a = k then 1::'a else (0::'a)) * ((if k = a then 1::'a else (0::'a)) + (if k = b then 1::'a else (0::'a)) * q)) =\n      (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "let ?f=\"\\<lambda>k. (if k = a then (1::'a) + (0::'a) * - q else if a = k then 1::'a else (0::'a)) * ((if k = a then 1::'a else (0::'a)) + (if k = b then 1::'a else (0::'a)) * q) \""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{a}) \\<union> {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} \\<union> {a}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{a}) \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} \\<union> {a}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{a}) + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} \\<union> {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"... = sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "have \"... =  1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "using a_noteq_b"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       ((if k = a then 1::'a else (0::'a)) +\n        (if k = b then 1::'a else (0::'a)) * q)) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     ((if k = a then 1::'a else (0::'a)) +\n      (if k = b then 1::'a else (0::'a)) * q)) =\n  (1::'a)\n\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix j"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume a_not_j: \"a \\<noteq> j\""], ["proof (state)\nthis:\n  a \\<noteq> j\n\ngoal (4 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; a \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (1::'a) + (0::'a) * - q\n                             else if a = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 3. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 4. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (1::'a) + (0::'a) * - q else if a = k then 1::'a else (0::'a)) * (if k = j then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (1::'a) + (0::'a) * - q\n        else if a = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (1::'a) + (0::'a) * - q\n        else if a = x then 1::'a else (0::'a)) *\n       (if x = j then 1::'a else (0::'a)) =\n       (0::'a)", "using a_not_j"], ["proof (prove)\nusing this:\n  a \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       (if x = a then (1::'a) + (0::'a) * - q\n        else if a = x then 1::'a else (0::'a)) *\n       (if x = j then 1::'a else (0::'a)) =\n       (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (1::'a) + (0::'a) * - q\n      else if a = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix j"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume j_not_b: \"j \\<noteq> b\" and j_not_a: \"j \\<noteq> a\""], ["proof (state)\nthis:\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; ia \\<noteq> b; ia \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if ia = k then 1::'a else (0::'a)) *\n                            (if k = ia then 1::'a else (0::'a))) =\n                         (1::'a)\n 3. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (0::'a) * - q else if j = k then 1::'a else (0::'a)) * (if k = j then 1::'a else (0::'a))) = (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "let ?f=\"\\<lambda>k.(if k = a then (0::'a) + (0::'a) * - q else if j = k then 1::'a else (0::'a)) * (if k = j then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have univ_rw:\"UNIV = (UNIV-{j}) \\<union> {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {j} \\<union> {j}", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV-{j}) \\<union> {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "using univ_rw"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {j} \\<union> {j}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f (UNIV-{j}) + sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j} \\<union> {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... = sum ?f {j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "have \"... =  1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "using a_noteq_b j_not_b j_not_a"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  j \\<noteq> b\n  j \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{j}.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{j}.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if j = k then 1::'a else (0::'a)) *\n       (if k = j then 1::'a else (0::'a))) =\n    (1::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if j = k then 1::'a else (0::'a)) *\n     (if k = j then 1::'a else (0::'a))) =\n  (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix i j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume i_not_b: \"i \\<noteq> b\" and i_not_a: \"i \\<noteq> a\" and i_not_j: \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> b\n  i \\<noteq> a\n  i \\<noteq> j\n\ngoal (2 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)\n 2. \\<And>i ia.\n       \\<lbrakk>a \\<noteq> b; i \\<noteq> b; i \\<noteq> a;\n        i \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (0::'a) * - q\n                             else if i = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (0::'a) * - q else if i = k then 1::'a else (0::'a)) *\n      (if j = a then (if k = a then 1::'a else (0::'a)) + (if k = b then 1::'a else (0::'a)) * q else if k = j then 1::'a else (0::'a))) = (0::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (0::'a) * - q\n        else if i = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: i_not_b i_not_a i_not_j)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (0::'a) * - q\n      else if i = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "assume b_not_j: \"b \\<noteq> j\""], ["proof (state)\nthis:\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>a \\<noteq> b; b \\<noteq> ia\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>k\\<in>UNIV.\n                            (if k = a then (0::'a) + (1::'a) * - q\n                             else if b = k then 1::'a else (0::'a)) *\n                            (if ia = a\n                             then (if k = a then 1::'a else (0::'a)) +\n                                  (if k = b then 1::'a else (0::'a)) * q\n                             else if k = ia then 1::'a else (0::'a))) =\n                         (0::'a)", "show \"(\\<Sum>k\\<in>UNIV. (if k = a then (0::'a) + (1::'a) * - q else if b = k then 1::'a else (0::'a)) *\n      (if j = a then (if k = a then 1::'a else (0::'a)) + (if k = b then 1::'a else (0::'a)) * q else if k = j then 1::'a else (0::'a))) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "proof (cases \"j=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)\n 2. j \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> a\n\ngoal (2 subgoals):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)\n 2. j \\<noteq> a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: False b_not_j)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "case True \\<comment> \\<open>This case is different from the other cases\\<close>"], ["proof (state)\nthis:\n  j = a\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "let ?f=\"\\<lambda>k. (if k = a then (0::'a) + (1::'a) * - q else if b = k then 1::'a else (0::'a)) *\n        (if j = a then (if k = a then 1::'a else (0::'a)) + (if k = b then 1::'a else (0::'a)) * q else if k = j then 1::'a else (0::'a))\""], ["proof (state)\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have univ_eq: \"UNIV = ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})", "by auto"], ["proof (state)\nthis:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_a: \"sum ?f {a} = -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    - q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = a then 1::'a else (0::'a))) =\n    - q", "using b_not_j"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = a then 1::'a else (0::'a))) =\n    - q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = a then 1::'a else (0::'a))) =\n    - q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  - q\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_b: \"sum ?f {b} = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    q", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = a then 1::'a else (0::'a))) =\n    q", "using b_not_j"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = a then 1::'a else (0::'a))) =\n    q", "using a_noteq_b"], ["proof (prove)\nusing this:\n  b \\<noteq> j\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if a = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = a then 1::'a else (0::'a))) =\n    q", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  q\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have sum_rest: \"sum ?f (UNIV - {a} - {b}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "by (rule sum.neutral, auto simp add: True b_not_j a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"sum ?f UNIV = sum ?f ((UNIV - {a}- {b}) \\<union> ({b} \\<union> {a}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a)))", "using univ_eq"], ["proof (prove)\nusing this:\n  UNIV = UNIV - {a} - {b} \\<union> ({b} \\<union> {a})\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f ({b} \\<union> {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a)))", "by (rule sum.union_disjoint, auto)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b} \\<union> ({b} \\<union> {a}).\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = sum ?f (UNIV - {a} - {b}) + sum ?f {b} + sum ?f {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b} \\<union> {a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a)))", "by (auto simp add: sum.union_disjoint a_noteq_b)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b} \\<union> {a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a)))\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV - {a} - {b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{b}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) +\n    (\\<Sum>k\\<in>{a}.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "unfolding sum_a sum_b sum_rest"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) + q + - q = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV - {a} - {b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{b}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) +\n  (\\<Sum>k\\<in>{a}.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. j = a \\<Longrightarrow>\n    (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>UNIV.\n       (if k = a then (0::'a) + (1::'a) * - q\n        else if b = k then 1::'a else (0::'a)) *\n       (if j = a\n        then (if k = a then 1::'a else (0::'a)) +\n             (if k = b then 1::'a else (0::'a)) * q\n        else if k = j then 1::'a else (0::'a))) =\n    (0::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>UNIV.\n     (if k = a then (0::'a) + (1::'a) * - q\n      else if b = k then 1::'a else (0::'a)) *\n     (if j = a\n      then (if k = a then 1::'a else (0::'a)) +\n           (if k = b then 1::'a else (0::'a)) * q\n      else if k = j then 1::'a else (0::'a))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  column_add (mat (1::'a)) a b (- q) ** column_add (mat (1::'a)) a b q =\n  mat (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Relationships amongst the definitions\\<close>"], ["", "text\\<open>Relationships between @{term \"interchange_rows\"} and @{term \"interchange_columns\"}\\<close>"], ["", "lemma interchange_rows_transpose:\n  shows \"interchange_rows (transpose A) a b = transpose (interchange_columns A a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows (Finite_Cartesian_Product.transpose A) a b =\n    Finite_Cartesian_Product.transpose (interchange_columns A a b)", "unfolding interchange_rows_def interchange_columns_def transpose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        if i = a then (\\<chi>i j. A $ j $ i) $ b $ j\n        else if i = b then (\\<chi>i j. A $ j $ i) $ a $ j\n             else (\\<chi>i j. A $ j $ i) $ i $ j) =\n    (\\<chi>i j.\n        (\\<chi>i j.\n            if j = a then A $ i $ b\n            else if j = b then A $ i $ a else A $ i $ j) $\n        j $\n        i)", "by vector"], ["", "lemma interchange_rows_transpose':\n  shows \"interchange_rows A a b = transpose (interchange_columns (transpose A) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_rows A a b =\n    Finite_Cartesian_Product.transpose\n     (interchange_columns (Finite_Cartesian_Product.transpose A) a b)", "unfolding interchange_rows_def interchange_columns_def transpose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        if i = a then A $ b $ j\n        else if i = b then A $ a $ j else A $ i $ j) =\n    (\\<chi>i j.\n        (\\<chi>i j.\n            if j = a then (\\<chi>i j. A $ j $ i) $ i $ b\n            else if j = b then (\\<chi>i j. A $ j $ i) $ i $ a\n                 else (\\<chi>i j. A $ j $ i) $ i $ j) $\n        j $\n        i)", "by vector"], ["", "lemma interchange_columns_transpose:\n  shows \"interchange_columns (transpose A) a b = transpose (interchange_rows A a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_columns (Finite_Cartesian_Product.transpose A) a b =\n    Finite_Cartesian_Product.transpose (interchange_rows A a b)", "unfolding interchange_rows_def interchange_columns_def transpose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        if j = a then (\\<chi>i j. A $ j $ i) $ i $ b\n        else if j = b then (\\<chi>i j. A $ j $ i) $ i $ a\n             else (\\<chi>i j. A $ j $ i) $ i $ j) =\n    (\\<chi>i j.\n        (\\<chi>i j.\n            if i = a then A $ b $ j\n            else if i = b then A $ a $ j else A $ i $ j) $\n        j $\n        i)", "by vector"], ["", "lemma interchange_columns_transpose':\n  shows \"interchange_columns A a b = transpose (interchange_rows (transpose A) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interchange_columns A a b =\n    Finite_Cartesian_Product.transpose\n     (interchange_rows (Finite_Cartesian_Product.transpose A) a b)", "unfolding interchange_rows_def interchange_columns_def transpose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        if j = a then A $ i $ b\n        else if j = b then A $ i $ a else A $ i $ j) =\n    (\\<chi>i j.\n        (\\<chi>i j.\n            if i = a then (\\<chi>i j. A $ j $ i) $ b $ j\n            else if i = b then (\\<chi>i j. A $ j $ i) $ a $ j\n                 else (\\<chi>i j. A $ j $ i) $ i $ j) $\n        j $\n        i)", "by vector"], ["", "subsection\\<open>Code Equations\\<close>"], ["", "text\\<open>Code equations for @{thm interchange_rows_def}, @{thm interchange_columns_def}, @{thm row_add_def}, @{thm column_add_def}, \n@{thm mult_row_def} and @{thm mult_column_def}:\\<close>"], ["", "definition interchange_rows_row \n  where \"interchange_rows_row A a b i = vec_lambda (%j. if i = a then A $ b $ j else if i = b then A $ a $ j else A $ i $ j)\""], ["", "lemma interchange_rows_code [code abstract]:\n  \"vec_nth (interchange_rows_row A a b i) = (%j. if i = a then A $ b $ j else if i = b then A $ a $ j else A $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (interchange_rows_row A a b i) =\n    (\\<lambda>j.\n        if i = a then A $ b $ j else if i = b then A $ a $ j else A $ i $ j)", "unfolding interchange_rows_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>j.\n            if i = a then A $ b $ j\n            else if i = b then A $ a $ j else A $ i $ j) =\n    (\\<lambda>j.\n        if i = a then A $ b $ j else if i = b then A $ a $ j else A $ i $ j)", "by auto"], ["", "lemma interchange_rows_code_nth [code abstract]: \"vec_nth (interchange_rows A a b) = interchange_rows_row A a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (interchange_rows A a b) = interchange_rows_row A a b", "unfolding interchange_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if i = a then A $ b $ j\n            else if i = b then A $ a $ j else A $ i $ j) =\n    interchange_rows_row A a b", "unfolding interchange_rows_row_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if i = a then A $ b $ j\n            else if i = b then A $ a $ j else A $ i $ j) =\n    (\\<lambda>i.\n        \\<chi>j.\n           if i = a then A $ b $ j\n           else if i = b then A $ a $ j else A $ i $ j)", "by auto"], ["", "definition interchange_columns_row \n  where \"interchange_columns_row A n m i = vec_lambda (%j.  if j = n then A $ i $ m else if j = m then A $ i $ n else A $ i $ j)\""], ["", "lemma interchange_columns_code [code abstract]:\n  \"vec_nth (interchange_columns_row A n m i) = (%j.  if j = n then A $ i $ m else if j = m then A $ i $ n else A $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (interchange_columns_row A n m i) =\n    (\\<lambda>j.\n        if j = n then A $ i $ m else if j = m then A $ i $ n else A $ i $ j)", "unfolding interchange_columns_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>j.\n            if j = n then A $ i $ m\n            else if j = m then A $ i $ n else A $ i $ j) =\n    (\\<lambda>j.\n        if j = n then A $ i $ m else if j = m then A $ i $ n else A $ i $ j)", "by auto"], ["", "lemma interchange_columns_code_nth [code abstract]: \"vec_nth (interchange_columns A a b) = interchange_columns_row A a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (interchange_columns A a b) = interchange_columns_row A a b", "unfolding interchange_columns_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if j = a then A $ i $ b\n            else if j = b then A $ i $ a else A $ i $ j) =\n    interchange_columns_row A a b", "unfolding interchange_columns_row_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if j = a then A $ i $ b\n            else if j = b then A $ i $ a else A $ i $ j) =\n    (\\<lambda>i.\n        \\<chi>j.\n           if j = a then A $ i $ b\n           else if j = b then A $ i $ a else A $ i $ j)", "by auto"], ["", "definition row_add_row \n  where \"row_add_row A a b q i = vec_lambda (%j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j)\""], ["", "lemma row_add_code [code abstract]:\n  \"vec_nth (row_add_row A a b q i) =  (%j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (row_add_row A a b q i) =\n    (\\<lambda>j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j)", "unfolding row_add_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j) =\n    (\\<lambda>j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j)", "by auto"], ["", "lemma row_add_code_nth [code abstract]: \"vec_nth (row_add A a b q) = row_add_row A a b q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (row_add A a b q) = row_add_row A a b q", "unfolding row_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j) =\n    row_add_row A a b q", "unfolding row_add_row_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j) =\n    (\\<lambda>i.\n        \\<chi>j. if i = a then A $ a $ j + q * A $ b $ j else A $ i $ j)", "by auto"], ["", "definition column_add_row \n  where \"column_add_row  A n m q i = vec_lambda (%j. if j = n then A $ i $ n + A $ i $ m * q else A $ i $ j)\""], ["", "lemma column_add_code [code abstract]:\n  \"vec_nth (column_add_row A n m q i) =  (%j. if j = n then A $ i $ n + A $ i $ m * q else A $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (column_add_row A n m q i) =\n    (\\<lambda>j. if j = n then A $ i $ n + A $ i $ m * q else A $ i $ j)", "unfolding column_add_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>j. if j = n then A $ i $ n + A $ i $ m * q else A $ i $ j) =\n    (\\<lambda>j. if j = n then A $ i $ n + A $ i $ m * q else A $ i $ j)", "by auto"], ["", "lemma column_add_code_nth [code abstract]: \"vec_nth (column_add A a b q) = column_add_row A a b q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (column_add A a b q) = column_add_row A a b q", "unfolding column_add_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if j = a then A $ i $ a + A $ i $ b * q else A $ i $ j) =\n    column_add_row A a b q", "unfolding column_add_row_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j.\n            if j = a then A $ i $ a + A $ i $ b * q else A $ i $ j) =\n    (\\<lambda>i.\n        \\<chi>j. if j = a then A $ i $ a + A $ i $ b * q else A $ i $ j)", "by auto"], ["", "definition mult_row_row \n  where \"mult_row_row A a q i = vec_lambda (%j. if i = a then q * A $ a $ j else A $ i $ j)\""], ["", "lemma mult_row_code [code abstract]:\n  \"vec_nth (mult_row_row A a q i) = (%j. if i = a then q * A $ a $ j else A $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (mult_row_row A a q i) =\n    (\\<lambda>j. if i = a then q * A $ a $ j else A $ i $ j)", "unfolding mult_row_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>j. if i = a then q * A $ a $ j else A $ i $ j) =\n    (\\<lambda>j. if i = a then q * A $ a $ j else A $ i $ j)", "by auto"], ["", "lemma mult_row_code_nth [code abstract]: \"vec_nth (mult_row A a q) = mult_row_row A a q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (mult_row A a q) = mult_row_row A a q", "unfolding mult_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j. if i = a then q * A $ a $ j else A $ i $ j) =\n    mult_row_row A a q", "unfolding mult_row_row_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j. if i = a then q * A $ a $ j else A $ i $ j) =\n    (\\<lambda>i. \\<chi>j. if i = a then q * A $ a $ j else A $ i $ j)", "by auto"], ["", "definition mult_column_row \n  where \"mult_column_row A n q i = vec_lambda (%j. if j = n then A $ i $ j * q else A $ i $ j)\""], ["", "lemma mult_column_code [code abstract]:\n  \"vec_nth (mult_column_row A n q i) = (%j. if j = n then A $ i $ j * q else A $ i $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (mult_column_row A n q i) =\n    (\\<lambda>j. if j = n then A $ i $ j * q else A $ i $ j)", "unfolding mult_column_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>j. if j = n then A $ i $ j * q else A $ i $ j) =\n    (\\<lambda>j. if j = n then A $ i $ j * q else A $ i $ j)", "by auto"], ["", "lemma mult_column_code_nth [code abstract]: \"vec_nth (mult_column A a q) = mult_column_row A a q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (mult_column A a q) = mult_column_row A a q", "unfolding mult_column_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j. if j = a then A $ i $ j * q else A $ i $ j) =\n    mult_column_row A a q", "unfolding mult_column_row_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<chi>i j. if j = a then A $ i $ j * q else A $ i $ j) =\n    (\\<lambda>i. \\<chi>j. if j = a then A $ i $ j * q else A $ i $ j)", "by auto"], ["", "end"]]}