{"file_name": "/home/qj213/afp-2021-10-22/thys/Constructive_Cryptography_CM/Constructions/DH_OTP.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Constructive_Cryptography_CM", "problem_names": ["lemma WT_ideal_rest [WT_intro]:\n  assumes WT_auth1_rest [WT_intro]: \"WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest\"\n    and WT_auth2_rest [WT_intro]: \"WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\"\n  shows \"WT_rest (\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2)) ((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I> (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2))\n     (\\<lambda>(_, s). pred_prod I_auth1_rest I_auth2_rest s) (ideal_rest auth1_rest auth2_rest)\"", "theorem secure:\n  assumes \"WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest\"\n    and \"WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest\"\n    and \"WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\"\n  shows\n    \"constructive_security_obsf\n      (1\\<^sub>C |\\<^sub>= wiring_c1r22_c1r22 (CNV otp.enc_callee ()) (CNV otp.dec_callee ()) |\\<^sub>= 1\\<^sub>C \\<rhd>\n       fused_wiring \\<rhd> diffie_hellman.real_resource \\<G> auth1_rest auth2_rest \\<parallel> dh.auth.resource auth_rest)\n      (otp.sec.resource (otp.ideal_rest (dh.ideal_rest auth1_rest auth2_rest) auth_rest))\n      ((1\\<^sub>C \\<odot>\n        (parallel_wiring \\<odot> ((let sim = CNV dh.sim_callee None in (sim |\\<^sub>= 1\\<^sub>C) \\<odot> lassocr\\<^sub>C) |\\<^sub>= 1\\<^sub>C) \\<odot> parallel_wiring) \\<odot>\n        1\\<^sub>C) \\<odot>\n       (otp.sim |\\<^sub>= 1\\<^sub>C))\n      ((((\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>) UNIV)) \\<oplus>\\<^sub>\\<I>\n         (\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>) UNIV))) \\<oplus>\\<^sub>\\<I>\n        (\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>) UNIV))) \\<oplus>\\<^sub>\\<I>\n       ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I> \\<I>_adv_resta))\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>) UNIV)) \\<oplus>\\<^sub>\\<I>\n       ((\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I> \\<I>_adv_resta))\n      ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>) UNIV \\<oplus>\\<^sub>\\<I> \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n       (((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I> (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I> \\<I>_usr_resta))\n      \\<A> (0 + (ddh.advantage \\<G>\n                (diffie_hellman.DH_adversary \\<G> auth1_rest auth2_rest\n                  (absorb\n                    (absorb \\<A>\n                      (obsf_converter (1\\<^sub>C |\\<^sub>= wiring_c1r22_c1r22 (CNV otp.enc_callee ()) (CNV otp.dec_callee ()) |\\<^sub>= 1\\<^sub>C)))\n                    (obsf_converter\n                      (fused_wiring \\<odot> (1\\<^sub>C |\\<^sub>\\<propto> converter_of_resource (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd> dh.auth.resource auth_rest)))))) +\n               0))\""], "translations": [["", "lemma WT_ideal_rest [WT_intro]:\n  assumes WT_auth1_rest [WT_intro]: \"WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest\"\n    and WT_auth2_rest [WT_intro]: \"WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\"\n  shows \"WT_rest (\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2)) ((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I> (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2))\n     (\\<lambda>(_, s). pred_prod I_auth1_rest I_auth2_rest s) (ideal_rest auth1_rest auth2_rest)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WT_rest\n     (\\<I>_full \\<oplus>\\<^sub>\\<I>\n      (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2))\n     ((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I>\n      (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2))\n     (\\<lambda>(uu_, s). pred_prod I_auth1_rest I_auth2_rest s)\n     (ideal_rest auth1_rest auth2_rest)", "apply(rule WT_rest.intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s x y es s'.\n       \\<lbrakk>((y, es), s')\n                \\<in> set_spmf\n                       (rfunc_adv (ideal_rest auth1_rest auth2_rest) s x);\n        x \\<in> outs_\\<I>\n                 (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                  (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2));\n        case s of\n        (uu_, s) \\<Rightarrow>\n          pred_prod I_auth1_rest I_auth2_rest s\\<rbrakk>\n       \\<Longrightarrow> y \\<in> responses_\\<I>\n                                  (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                                   (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                                    \\<I>_adv_rest2))\n                                  x \\<and>\n                         (case s' of\n                          (uu_, s) \\<Rightarrow>\n                            pred_prod I_auth1_rest I_auth2_rest s)\n 2. \\<And>s x y es s'.\n       \\<lbrakk>((y, es), s')\n                \\<in> set_spmf\n                       (rfunc_usr (ideal_rest auth1_rest auth2_rest) s x);\n        x \\<in> outs_\\<I>\n                 ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                   \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                  (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2));\n        case s of\n        (uu_, s) \\<Rightarrow>\n          pred_prod I_auth1_rest I_auth2_rest s\\<rbrakk>\n       \\<Longrightarrow> y \\<in> responses_\\<I>\n                                  ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                                    \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                                   (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                                    \\<I>_usr_rest2))\n                                  x \\<and>\n                         (case s' of\n                          (uu_, s) \\<Rightarrow>\n                            pred_prod I_auth1_rest I_auth2_rest s)\n 3. case rinit (ideal_rest auth1_rest auth2_rest) of\n    (uu_, s) \\<Rightarrow> pred_prod I_auth1_rest I_auth2_rest s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>((y_, es_), s'_)\n             \\<in> set_spmf\n                    (rfunc_adv (ideal_rest auth1_rest auth2_rest) s_ x_);\n     x_ \\<in> outs_\\<I>\n               (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2));\n     case s_ of\n     (uu_, s) \\<Rightarrow> pred_prod I_auth1_rest I_auth2_rest s\\<rbrakk>\n    \\<Longrightarrow> y_ \\<in> responses_\\<I>\n                                (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                                 (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                                  \\<I>_adv_rest2))\n                                x_ \\<and>\n                      (case s'_ of\n                       (uu_, s) \\<Rightarrow>\n                         pred_prod I_auth1_rest I_auth2_rest s)", "by(auto 4 4 split: sum.splits simp add: translate_eoracle_def parallel_eoracle_def dest: assms[THEN WT_restD_rfunc_adv])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s x y es s'.\n       \\<lbrakk>((y, es), s')\n                \\<in> set_spmf\n                       (rfunc_usr (ideal_rest auth1_rest auth2_rest) s x);\n        x \\<in> outs_\\<I>\n                 ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                   \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                  (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2));\n        case s of\n        (uu_, s) \\<Rightarrow>\n          pred_prod I_auth1_rest I_auth2_rest s\\<rbrakk>\n       \\<Longrightarrow> y \\<in> responses_\\<I>\n                                  ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                                    \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                                   (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                                    \\<I>_usr_rest2))\n                                  x \\<and>\n                         (case s' of\n                          (uu_, s) \\<Rightarrow>\n                            pred_prod I_auth1_rest I_auth2_rest s)\n 2. case rinit (ideal_rest auth1_rest auth2_rest) of\n    (uu_, s) \\<Rightarrow> pred_prod I_auth1_rest I_auth2_rest s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>((y_, es_), s'_)\n             \\<in> set_spmf\n                    (rfunc_usr (ideal_rest auth1_rest auth2_rest) s_ x_);\n     x_ \\<in> outs_\\<I>\n               ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                 \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2));\n     case s_ of\n     (uu_, s) \\<Rightarrow> pred_prod I_auth1_rest I_auth2_rest s\\<rbrakk>\n    \\<Longrightarrow> y_ \\<in> responses_\\<I>\n                                ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                                  \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                                 (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                                  \\<I>_usr_rest2))\n                                x_ \\<and>\n                      (case s'_ of\n                       (uu_, s) \\<Rightarrow>\n                         pred_prod I_auth1_rest I_auth2_rest s)", "apply(auto 4 4 split: sum.splits simp add: translate_eoracle_def parallel_eoracle_def plus_eoracle_def dest: assms[THEN WT_restD_rfunc_usr])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ba ac bb xa af ag bc ah bd.\n       \\<lbrakk>s_ = ((a, (aa, b), ab, ba), ac, bb); x_ = Inl xa;\n        (es_, af, (ag, bc), ah, bd)\n        \\<in> set_spmf (etran (a, (aa, b), ab, ba) (Inl xa));\n        I_auth1_rest ac; I_auth2_rest bb;\n        y_ =\n        Inl (map_sum (\\<lambda>_. Out_Activation_Alice)\n              (\\<lambda>_. Out_Activation_Bob) xa);\n        s'_ = ((af, (ag, bc), ah, bd), ac, bb)\\<rbrakk>\n       \\<Longrightarrow> Inl (map_sum (\\<lambda>_. Out_Activation_Alice)\n                               (\\<lambda>_. Out_Activation_Bob) xa)\n                         \\<in> Inl `\n                               responses_\\<I>\n                                (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) xa", "apply(simp add: map_sum_def split: sum.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. case rinit (ideal_rest auth1_rest auth2_rest) of\n    (uu_, s) \\<Rightarrow> pred_prod I_auth1_rest I_auth2_rest s", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. case rinit (ideal_rest auth1_rest auth2_rest) of\n    (uu_, s) \\<Rightarrow> pred_prod I_auth1_rest I_auth2_rest s", "by(simp add: assms[THEN WT_restD_rinit])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "locale dh_otp = dh: diffie_hellman \\<G> + otp: one_time_pad \\<L>\n  for \\<G> :: \"'grp cyclic_group\"\n    and \\<L> :: \"'grp boolean_algebra\" +\n  assumes carrier_\\<G>_\\<L>: \"carrier \\<G> = carrier \\<L>\"\nbegin"], ["", "theorem secure:\n  assumes \"WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest\"\n    and \"WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest\"\n    and \"WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\"\n  shows\n    \"constructive_security_obsf\n      (1\\<^sub>C |\\<^sub>= wiring_c1r22_c1r22 (CNV otp.enc_callee ()) (CNV otp.dec_callee ()) |\\<^sub>= 1\\<^sub>C \\<rhd>\n       fused_wiring \\<rhd> diffie_hellman.real_resource \\<G> auth1_rest auth2_rest \\<parallel> dh.auth.resource auth_rest)\n      (otp.sec.resource (otp.ideal_rest (dh.ideal_rest auth1_rest auth2_rest) auth_rest))\n      ((1\\<^sub>C \\<odot>\n        (parallel_wiring \\<odot> ((let sim = CNV dh.sim_callee None in (sim |\\<^sub>= 1\\<^sub>C) \\<odot> lassocr\\<^sub>C) |\\<^sub>= 1\\<^sub>C) \\<odot> parallel_wiring) \\<odot>\n        1\\<^sub>C) \\<odot>\n       (otp.sim |\\<^sub>= 1\\<^sub>C))\n      ((((\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>) UNIV)) \\<oplus>\\<^sub>\\<I>\n         (\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>) UNIV))) \\<oplus>\\<^sub>\\<I>\n        (\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>) UNIV))) \\<oplus>\\<^sub>\\<I>\n       ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I> \\<I>_adv_resta))\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>) UNIV)) \\<oplus>\\<^sub>\\<I>\n       ((\\<I>_full \\<oplus>\\<^sub>\\<I> (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I> \\<I>_adv_resta))\n      ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>) UNIV \\<oplus>\\<^sub>\\<I> \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n       (((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I> (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I> \\<I>_usr_resta))\n      \\<A> (0 + (ddh.advantage \\<G>\n                (diffie_hellman.DH_adversary \\<G> auth1_rest auth2_rest\n                  (absorb\n                    (absorb \\<A>\n                      (obsf_converter (1\\<^sub>C |\\<^sub>= wiring_c1r22_c1r22 (CNV otp.enc_callee ()) (CNV otp.dec_callee ()) |\\<^sub>= 1\\<^sub>C)))\n                    (obsf_converter\n                      (fused_wiring \\<odot> (1\\<^sub>C |\\<^sub>\\<propto> converter_of_resource (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd> dh.auth.resource auth_rest)))))) +\n               0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constructive_security_obsf\n     (1\\<^sub>C |\\<^sub>=\n      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n       (CNV otp.dec_callee ()) |\\<^sub>=\n      1\\<^sub>C \\<rhd>\n      fused_wiring \\<rhd>\n      diffie_hellman.real_resource \\<G> auth1_rest auth2_rest \\<parallel>\n      dh.auth.resource auth_rest)\n     (otp.sec.resource\n       (otp.ideal_rest (dh.ideal_rest auth1_rest auth2_rest) auth_rest))\n     ((1\\<^sub>C \\<odot>\n       (parallel_wiring \\<odot>\n        ((let sim = CNV dh.sim_callee None\n          in (sim |\\<^sub>= 1\\<^sub>C) \\<odot> lassocr\\<^sub>C) |\\<^sub>=\n         1\\<^sub>C) \\<odot>\n        parallel_wiring) \\<odot>\n       1\\<^sub>C) \\<odot>\n      (otp.sim |\\<^sub>= 1\\<^sub>C))\n     ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n           UNIV)) \\<oplus>\\<^sub>\\<I>\n        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n           UNIV))) \\<oplus>\\<^sub>\\<I>\n       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n          UNIV))) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n       \\<I>_adv_resta))\n     ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n        \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n         UNIV)) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n       \\<I>_adv_resta))\n     ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n        UNIV \\<oplus>\\<^sub>\\<I>\n       \\<I>_uniform UNIV\n        (otp.sec.Out_Recv ` carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n      (((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I>\n        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n       \\<I>_usr_resta))\n     \\<A>\n     (0 +\n      (ddh.advantage \\<G>\n        (diffie_hellman.DH_adversary \\<G> auth1_rest auth2_rest\n          (absorb\n            (absorb \\<A>\n              (obsf_converter\n                (1\\<^sub>C |\\<^sub>=\n                 wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                  (CNV otp.dec_callee ()) |\\<^sub>=\n                 1\\<^sub>C)))\n            (obsf_converter\n              (fused_wiring \\<odot>\n               (1\\<^sub>C |\\<^sub>\\<propto>\n                converter_of_resource\n                 (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                  dh.auth.resource auth_rest)))))) +\n       0))", "using assms"], ["proof (prove)\nusing this:\n  WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest\n  WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest\n  WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\n\ngoal (1 subgoal):\n 1. constructive_security_obsf\n     (1\\<^sub>C |\\<^sub>=\n      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n       (CNV otp.dec_callee ()) |\\<^sub>=\n      1\\<^sub>C \\<rhd>\n      fused_wiring \\<rhd>\n      diffie_hellman.real_resource \\<G> auth1_rest auth2_rest \\<parallel>\n      dh.auth.resource auth_rest)\n     (otp.sec.resource\n       (otp.ideal_rest (dh.ideal_rest auth1_rest auth2_rest) auth_rest))\n     ((1\\<^sub>C \\<odot>\n       (parallel_wiring \\<odot>\n        ((let sim = CNV dh.sim_callee None\n          in (sim |\\<^sub>= 1\\<^sub>C) \\<odot> lassocr\\<^sub>C) |\\<^sub>=\n         1\\<^sub>C) \\<odot>\n        parallel_wiring) \\<odot>\n       1\\<^sub>C) \\<odot>\n      (otp.sim |\\<^sub>= 1\\<^sub>C))\n     ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n           UNIV)) \\<oplus>\\<^sub>\\<I>\n        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n           UNIV))) \\<oplus>\\<^sub>\\<I>\n       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n          UNIV))) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n       \\<I>_adv_resta))\n     ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n        \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n         UNIV)) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n       \\<I>_adv_resta))\n     ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n        UNIV \\<oplus>\\<^sub>\\<I>\n       \\<I>_uniform UNIV\n        (otp.sec.Out_Recv ` carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n      (((\\<I>_full \\<oplus>\\<^sub>\\<I> \\<I>_full) \\<oplus>\\<^sub>\\<I>\n        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n       \\<I>_usr_resta))\n     \\<A>\n     (0 +\n      (ddh.advantage \\<G>\n        (diffie_hellman.DH_adversary \\<G> auth1_rest auth2_rest\n          (absorb\n            (absorb \\<A>\n              (obsf_converter\n                (1\\<^sub>C |\\<^sub>=\n                 wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                  (CNV otp.dec_callee ()) |\\<^sub>=\n                 1\\<^sub>C)))\n            (obsf_converter\n              (fused_wiring \\<odot>\n               (1\\<^sub>C |\\<^sub>\\<propto>\n                converter_of_resource\n                 (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                  dh.auth.resource auth_rest)))))) +\n       0))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (1\\<^sub>C |\\<^sub>=\n                        wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C \\<rhd>\n                        fused_wiring \\<rhd>\n                        diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest \\<parallel>\n                        dh.auth.resource auth_rest)\n                       (otp.sec.resource\n                         (otp.ideal_rest\n                           (dh.ideal_rest auth1_rest auth2_rest) auth_rest))\n                       ((1\\<^sub>C \\<odot>\n                         (parallel_wiring \\<odot>\n                          ((let sim = CNV dh.sim_callee None\n                            in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                               lassocr\\<^sub>C) |\\<^sub>=\n                           1\\<^sub>C) \\<odot>\n                          parallel_wiring) \\<odot>\n                         1\\<^sub>C) \\<odot>\n                        (otp.sim |\\<^sub>= 1\\<^sub>C))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       \\<A>\n                       (0 +\n                        (ddh.advantage \\<G>\n                          (diffie_hellman.DH_adversary \\<G> auth1_rest\n                            auth2_rest\n                            (absorb\n                              (absorb \\<A>\n                                (obsf_converter\n                                  (1\\<^sub>C |\\<^sub>=\n                                   wiring_c1r22_c1r22\n                                    (CNV otp.enc_callee ())\n                                    (CNV otp.dec_callee ()) |\\<^sub>=\n                                   1\\<^sub>C)))\n                              (obsf_converter\n                                (fused_wiring \\<odot>\n                                 (1\\<^sub>C |\\<^sub>\\<propto>\n                                  converter_of_resource\n                                   (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                    dh.auth.resource auth_rest)))))) +\n                         0))", "apply(rule constructive_security_obsf_composability)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf ?middle3\n                       (otp.sec.resource\n                         (otp.ideal_rest\n                           (dh.ideal_rest auth1_rest auth2_rest) auth_rest))\n                       (otp.sim |\\<^sub>= 1\\<^sub>C) ?\\<I>_middle3\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (absorb \\<A>\n                         (obsf_converter\n                           (1\\<^sub>C \\<odot>\n                            (parallel_wiring \\<odot>\n                             ((let sim = CNV dh.sim_callee None\n                               in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                                  lassocr\\<^sub>C) |\\<^sub>=\n                              1\\<^sub>C) \\<odot>\n                             parallel_wiring) \\<odot>\n                            1\\<^sub>C |\\<^sub>=\n                            1\\<^sub>C)))\n                       0\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (1\\<^sub>C |\\<^sub>=\n                        wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C \\<rhd>\n                        fused_wiring \\<rhd>\n                        diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest \\<parallel>\n                        dh.auth.resource auth_rest)\n                       ?middle3\n                       (1\\<^sub>C \\<odot>\n                        (parallel_wiring \\<odot>\n                         ((let sim = CNV dh.sim_callee None\n                           in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                              lassocr\\<^sub>C) |\\<^sub>=\n                          1\\<^sub>C) \\<odot>\n                         parallel_wiring) \\<odot>\n                        1\\<^sub>C)\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ?\\<I>_middle3\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       \\<A>\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))) +\n                        0)", "apply(rule otp.secure)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> WT_rest\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_usr_rest2))\n                       ?I_key_rest6 (dh.ideal_rest auth1_rest auth2_rest)\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> WT_rest \\<I>_adv_resta \\<I>_usr_resta ?I_auth_rest6\n                       auth_rest\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (1\\<^sub>C |\\<^sub>=\n                        wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C \\<rhd>\n                        fused_wiring \\<rhd>\n                        diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest \\<parallel>\n                        dh.auth.resource auth_rest)\n                       (one_time_pad.real_resource \\<L>\n                         (dh.ideal_rest auth1_rest auth2_rest) auth_rest)\n                       (1\\<^sub>C \\<odot>\n                        (parallel_wiring \\<odot>\n                         ((let sim = CNV dh.sim_callee None\n                           in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                              lassocr\\<^sub>C) |\\<^sub>=\n                          1\\<^sub>C) \\<odot>\n                         parallel_wiring) \\<odot>\n                        1\\<^sub>C)\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       \\<A>\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))) +\n                        0)", "apply(rule WT_intro, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (1\\<^sub>C |\\<^sub>=\n                        wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C \\<rhd>\n                        fused_wiring \\<rhd>\n                        diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest \\<parallel>\n                        dh.auth.resource auth_rest)\n                       (one_time_pad.real_resource \\<L>\n                         (dh.ideal_rest auth1_rest auth2_rest) auth_rest)\n                       (1\\<^sub>C \\<odot>\n                        (parallel_wiring \\<odot>\n                         ((let sim = CNV dh.sim_callee None\n                           in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                              lassocr\\<^sub>C) |\\<^sub>=\n                          1\\<^sub>C) \\<odot>\n                         parallel_wiring) \\<odot>\n                        1\\<^sub>C)\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       \\<A>\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))) +\n                        0)", "unfolding otp.real_resource_def attach_c1f22_c1f22_def[abs_def] attach_compose"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (1\\<^sub>C |\\<^sub>=\n                        wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C \\<rhd>\n                        fused_wiring \\<rhd>\n                        diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest \\<parallel>\n                        dh.auth.resource auth_rest)\n                       ((1\\<^sub>C |\\<^sub>= 1\\<^sub>C) |\\<^sub>=\n                        wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C \\<rhd>\n                        fused_wiring \\<rhd>\n                        otp.key.resource\n                         (dh.ideal_rest auth1_rest auth2_rest) \\<parallel>\n                        dh.auth.resource auth_rest)\n                       (1\\<^sub>C \\<odot>\n                        (parallel_wiring \\<odot>\n                         ((let sim = CNV dh.sim_callee None\n                           in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                              lassocr\\<^sub>C) |\\<^sub>=\n                          1\\<^sub>C) \\<odot>\n                         parallel_wiring) \\<odot>\n                        1\\<^sub>C)\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       \\<A>\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))) +\n                        0)", "apply(rule constructive_security_obsf_lifting_[where w_adv_real=\"1\\<^sub>C\" and w_adv_ideal_inv=\"1\\<^sub>C\"])"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (fused_wiring \\<rhd>\n                        diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest \\<parallel>\n                        dh.auth.resource auth_rest)\n                       (fused_wiring \\<rhd>\n                        otp.key.resource\n                         (dh.ideal_rest auth1_rest auth2_rest) \\<parallel>\n                        dh.auth.resource auth_rest)\n                       (parallel_wiring \\<odot>\n                        ((let sim = CNV dh.sim_callee None\n                          in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                             lassocr\\<^sub>C) |\\<^sub>=\n                         1\\<^sub>C) \\<odot>\n                        parallel_wiring)\n                       ?\\<I>_real12 ?\\<I>_ideal12 ?\\<I>_common12\n                       (absorb \\<A>\n                         (obsf_converter\n                           (1\\<^sub>C |\\<^sub>=\n                            wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                             (CNV otp.dec_callee ()) |\\<^sub>=\n                            1\\<^sub>C)))\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))) +\n                        0)\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ?\\<I>_common12 \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ?\\<I>_common12\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      ?\\<I>_real12 \\<turnstile>\\<^sub>C 1\\<^sub>C \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      ?\\<I>_ideal12 \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ?\\<I>_ideal12,\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ?\\<I>_ideal12,?\\<I>_ideal12 \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ?\\<I>_real12 1\\<^sub>C\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter ?\\<I>_ideal12\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C", "apply(rule parallel_constructive_security_obsf_fuse)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest)\n                       (otp.key.resource\n                         (dh.ideal_rest auth1_rest auth2_rest))\n                       (let sim = CNV dh.sim_callee None\n                        in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                           lassocr\\<^sub>C)\n                       (?\\<I>_real1_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_real1_rest22)\n                       (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_ideal1_rest22)\n                       (?\\<I>_common1_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_common1_rest22)\n                       (absorb\n                         (absorb \\<A>\n                           (obsf_converter\n                             (1\\<^sub>C |\\<^sub>=\n                              wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                               (CNV otp.dec_callee ()) |\\<^sub>=\n                              1\\<^sub>C)))\n                         (obsf_converter\n                           (fused_wiring \\<odot>\n                            (1\\<^sub>C |\\<^sub>\\<propto>\n                             converter_of_resource\n                              (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                               dh.auth.resource auth_rest)))))\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))))\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (dh.auth.resource auth_rest)\n                       (dh.auth.resource auth_rest) 1\\<^sub>C\n                       (?\\<I>_real2_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_real2_rest22)\n                       (?\\<I>_ideal2_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_ideal2_rest22)\n                       (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_common2_rest22)\n                       (absorb\n                         (absorb \\<A>\n                           (obsf_converter\n                             (1\\<^sub>C |\\<^sub>=\n                              wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                               (CNV otp.dec_callee ()) |\\<^sub>=\n                              1\\<^sub>C)))\n                         (obsf_converter\n                           (fused_wiring \\<odot>\n                            (converter_of_resource\n                              (diffie_hellman.real_resource \\<G> auth1_rest\n                                auth2_rest) |\\<^sub>\\<propto>\n                             1\\<^sub>C))))\n                       0\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      (?\\<I>_common1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ((?\\<I>_common1_core22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (?\\<I>_common1_rest22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (?\\<I>_real1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_real2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_real1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_real2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),(?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((?\\<I>_real1_core22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_real2_core22) \\<oplus>\\<^sub>\\<I>\n                        (?\\<I>_real1_rest22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_real2_rest22))\n                       1\\<^sub>C\n 10. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n      WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n      WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n     \\<Longrightarrow> pfinite_converter\n                        ((?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                          ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                         (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                          ?\\<I>_ideal2_rest22))\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                            \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_resta))\n                        1\\<^sub>C", "apply(fold carrier_\\<G>_\\<L>)[1]"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (diffie_hellman.real_resource \\<G> auth1_rest\n                         auth2_rest)\n                       (dh.key.resource\n                         (dh.ideal_rest auth1_rest auth2_rest))\n                       (let sim = CNV dh.sim_callee None\n                        in (sim |\\<^sub>= 1\\<^sub>C) \\<odot>\n                           lassocr\\<^sub>C)\n                       (?\\<I>_real1_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_real1_rest22)\n                       (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_ideal1_rest22)\n                       (?\\<I>_common1_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_common1_rest22)\n                       (absorb\n                         (absorb \\<A>\n                           (obsf_converter\n                             (1\\<^sub>C |\\<^sub>=\n                              wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                               (CNV otp.dec_callee ()) |\\<^sub>=\n                              1\\<^sub>C)))\n                         (obsf_converter\n                           (fused_wiring \\<odot>\n                            (1\\<^sub>C |\\<^sub>\\<propto>\n                             converter_of_resource\n                              (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                               dh.auth.resource auth_rest)))))\n                       (ddh.advantage \\<G>\n                         (diffie_hellman.DH_adversary \\<G> auth1_rest\n                           auth2_rest\n                           (absorb\n                             (absorb \\<A>\n                               (obsf_converter\n                                 (1\\<^sub>C |\\<^sub>=\n                                  wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                                   (CNV otp.dec_callee ()) |\\<^sub>=\n                                  1\\<^sub>C)))\n                             (obsf_converter\n                               (fused_wiring \\<odot>\n                                (1\\<^sub>C |\\<^sub>\\<propto>\n                                 converter_of_resource\n                                  (1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<rhd>\n                                   dh.auth.resource auth_rest)))))))\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> constructive_security_obsf\n                       (dh.auth.resource auth_rest)\n                       (dh.auth.resource auth_rest) 1\\<^sub>C\n                       (?\\<I>_real2_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_real2_rest22)\n                       (?\\<I>_ideal2_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_ideal2_rest22)\n                       (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>_common2_rest22)\n                       (absorb\n                         (absorb \\<A>\n                           (obsf_converter\n                             (1\\<^sub>C |\\<^sub>=\n                              wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                               (CNV otp.dec_callee ()) |\\<^sub>=\n                              1\\<^sub>C)))\n                         (obsf_converter\n                           (fused_wiring \\<odot>\n                            (converter_of_resource\n                              (diffie_hellman.real_resource \\<G> auth1_rest\n                                auth2_rest) |\\<^sub>\\<propto>\n                             1\\<^sub>C))))\n                       0\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      (?\\<I>_common1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ((?\\<I>_common1_core22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (?\\<I>_common1_rest22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (?\\<I>_real1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_real2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_real1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_real2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),(?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n      (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((?\\<I>_real1_core22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_real2_core22) \\<oplus>\\<^sub>\\<I>\n                        (?\\<I>_real1_rest22 \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_real2_rest22))\n                       1\\<^sub>C\n 10. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n      WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n      WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n     \\<Longrightarrow> pfinite_converter\n                        ((?\\<I>_ideal1_core22 \\<oplus>\\<^sub>\\<I>\n                          ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                         (?\\<I>_ideal1_rest22 \\<oplus>\\<^sub>\\<I>\n                          ?\\<I>_ideal2_rest22))\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                            \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_resta))\n                        1\\<^sub>C", "apply(rule dh.secure, assumption, assumption, rule constructive_security_obsf_trivial)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),(\\<I>_full \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       1\\<^sub>C\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C", "defer"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),(\\<I>_full \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       1\\<^sub>C\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>", "defer"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),(\\<I>_full \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       1\\<^sub>C\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>", "defer"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                           UNIV))) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),\n                      (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22),(\\<I>_full \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n       ?\\<I>_ideal2_rest22) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       1\\<^sub>C\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_core22) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_ideal2_rest22))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 7. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (?\\<I>_ideal2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_ideal2_rest22) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>\n 8. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 9. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)", "apply(rule WT_intro)+"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),(\\<I>_full \\<oplus>\\<^sub>\\<I>\n  (\\<I>_full \\<oplus>\\<^sub>\\<I>\n   (\\<I>_full \\<oplus>\\<^sub>\\<I>\n    \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n     UNIV))) \\<oplus>\\<^sub>\\<I>\n ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n   (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n  \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<odot>\n                      (1\\<^sub>C |\\<^sub>= 1\\<^sub>C) \\<sim>\n                      1\\<^sub>C\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)", "apply(simp add: comp_converter_id_left)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV))) \\<oplus>\\<^sub>\\<I>\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta),(\\<I>_full \\<oplus>\\<^sub>\\<I>\n  (\\<I>_full \\<oplus>\\<^sub>\\<I>\n   (\\<I>_full \\<oplus>\\<^sub>\\<I>\n    \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n     UNIV))) \\<oplus>\\<^sub>\\<I>\n ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n   (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I> \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n  \\<I>_adv_resta) \\<turnstile>\\<^sub>C\n                      1\\<^sub>C |\\<^sub>= 1\\<^sub>C \\<sim> 1\\<^sub>C\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV)) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                            \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<G>)\n                             UNIV))) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_adv_rest2) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                            UNIV))) \\<oplus>\\<^sub>\\<I>\n                        ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_adv_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_adv_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_adv_resta))\n                       1\\<^sub>C\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)", "apply(rule parallel_converter2_id_id pfinite_intro wiring_intro)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Fedit ` carrier \\<L>)\n                          UNIV)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_adv_resta) \\<oplus>\\<^sub>\\<I>\n                      (?\\<I>_common2_core22 \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \n                      \\<turnstile>res dh.auth.resource auth_rest \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       ?\\<I>_common2_rest22) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_core22) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         ?\\<I>_common2_rest22))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)", "apply(rule WT_intro|assumption)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pred_prod\n                       (otp.sec.pred_s_kernel\n                         (\\<lambda>msg. msg \\<in> carrier \\<L>))\n                       (\\<lambda>_. True) (otp.sec.State_Void, {})\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                         UNIV \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.sec.Out_Recv `\n                          carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                           UNIV \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.sec.Out_Recv `\n                            carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                         UNIV \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.sec.Out_Recv `\n                          carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta) \\<turnstile>\\<^sub>C\n                      wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                       (CNV otp.dec_callee ()) |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                           UNIV \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.sec.Out_Recv `\n                            carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (wiring_c1r22_c1r22 (CNV otp.enc_callee ())\n                         (CNV otp.dec_callee ()) |\\<^sub>=\n                        1\\<^sub>C)", "apply(unfold wiring_c1r22_c1r22_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta),\n                      ((\\<I>_uniform UNIV\n                         (otp.key.Out_Alice `\n                          carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.key.Out_Bob `\n                          carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                         UNIV \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV\n                         (otp.sec.Out_Recv `\n                          carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                      (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                         \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_usr_resta) \\<turnstile>\\<^sub>C\n                      (CNV otp.enc_callee () |\\<^sub>=\n                       CNV otp.dec_callee ()) \\<odot>\n                      parallel_wiring |\\<^sub>=\n                      1\\<^sub>C \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                           UNIV \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.sec.Out_Recv `\n                            carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ((CNV otp.enc_callee () |\\<^sub>=\n                         CNV otp.dec_callee ()) \\<odot>\n                        parallel_wiring |\\<^sub>=\n                        1\\<^sub>C)", "apply(rule WT_intro)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>)),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                      \\<I>_usr_resta,\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                      \\<I>_usr_resta \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                           UNIV \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.sec.Out_Recv `\n                            carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ((CNV otp.enc_callee () |\\<^sub>=\n                         CNV otp.dec_callee ()) \\<odot>\n                        parallel_wiring |\\<^sub>=\n                        1\\<^sub>C)", "apply(fold carrier_\\<G>_\\<L>)[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<G>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<G>)),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<G>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<G>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                      \\<I>_usr_resta,\n                      ((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                        \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                       (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                      \\<I>_usr_resta \\<turnstile>\\<^sub>C\n                      1\\<^sub>C \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                           UNIV \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.sec.Out_Recv `\n                            carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ((CNV otp.enc_callee () |\\<^sub>=\n                         CNV otp.dec_callee ()) \\<odot>\n                        parallel_wiring |\\<^sub>=\n                        1\\<^sub>C)", "apply(rule WT_intro)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       (((\\<I>_uniform UNIV\n                           (otp.key.Out_Alice `\n                            carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.key.Out_Bob `\n                            carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                           UNIV \\<oplus>\\<^sub>\\<I>\n                          \\<I>_uniform UNIV\n                           (otp.sec.Out_Recv `\n                            carrier \\<L>))) \\<oplus>\\<^sub>\\<I>\n                        (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                           \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                          (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                           \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_usr_resta))\n                       ((CNV otp.enc_callee () |\\<^sub>=\n                         CNV otp.dec_callee ()) \\<odot>\n                        parallel_wiring |\\<^sub>=\n                        1\\<^sub>C)", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                         UNIV \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>))\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       ((CNV otp.enc_callee () |\\<^sub>=\n                         CNV otp.dec_callee ()) \\<odot>\n                        parallel_wiring)\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                         UNIV \\<oplus>\\<^sub>\\<I>\n                        \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>))\n                       ?\\<I>2.65\n                       (CNV otp.enc_callee () |\\<^sub>=\n                        CNV otp.dec_callee ())\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter ?\\<I>2.65\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       parallel_wiring\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                       UNIV \\<oplus>\\<^sub>\\<I>\n                      \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>),\n                      ?\\<I>2.65 \\<turnstile>\\<^sub>C\n                      CNV otp.enc_callee () |\\<^sub>=\n                      CNV otp.dec_callee () \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ?\\<I>2.65,\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>) UNIV)\n                       ?\\<I>1'70 (CNV otp.enc_callee ())\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (\\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>))\n                       ?\\<I>2'70 (CNV otp.dec_callee ())\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (?\\<I>1'70 \\<oplus>\\<^sub>\\<I> ?\\<I>2'70)\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       parallel_wiring\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                       UNIV \\<oplus>\\<^sub>\\<I>\n                      \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>),\n                      ?\\<I>1'70 \\<oplus>\\<^sub>\\<I>\n                      ?\\<I>2'70 \\<turnstile>\\<^sub>C\n                      CNV otp.enc_callee () |\\<^sub>=\n                      CNV otp.dec_callee () \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> ?\\<I>1'70 \\<oplus>\\<^sub>\\<I> ?\\<I>2'70,\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 6. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (\\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>))\n                       ?\\<I>2'70 (CNV otp.dec_callee ())\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV) \\<oplus>\\<^sub>\\<I>\n                        ?\\<I>2'70)\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       parallel_wiring\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                       UNIV \\<oplus>\\<^sub>\\<I>\n                      \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      ?\\<I>2'70 \\<turnstile>\\<^sub>C\n                      CNV otp.enc_callee () |\\<^sub>=\n                      CNV otp.dec_callee () \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      ?\\<I>2'70,\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 5. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       parallel_wiring\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                       UNIV \\<oplus>\\<^sub>\\<I>\n                      \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      CNV otp.enc_callee () |\\<^sub>=\n                      CNV otp.dec_callee () \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>)),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<G>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<G>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(unfold carrier_\\<G>_\\<L>)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       ((\\<I>_uniform UNIV\n                          (otp.key.Out_Alice `\n                           carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.key.Out_Bob `\n                           carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                        (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                          UNIV \\<oplus>\\<^sub>\\<I>\n                         \\<I>_uniform UNIV\n                          (otp.sec.Out_Recv ` carrier \\<L>)))\n                       parallel_wiring\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                       UNIV \\<oplus>\\<^sub>\\<I>\n                      \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      CNV otp.enc_callee () |\\<^sub>=\n                      CNV otp.dec_callee () \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>)),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 4. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                       UNIV \\<oplus>\\<^sub>\\<I>\n                      \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      CNV otp.enc_callee () |\\<^sub>=\n                      CNV otp.dec_callee () \\<surd>\n 2. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Bob ` carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV (otp.sec.Out_Recv ` carrier \\<L>)),\n                      (\\<I>_uniform UNIV\n                        (otp.key.Out_Alice `\n                         carrier \\<L>) \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.key.Out_Bob `\n                         carrier \\<L>)) \\<oplus>\\<^sub>\\<I>\n                      (\\<I>_uniform (otp.sec.Inp_Send ` carrier \\<L>)\n                        UNIV \\<oplus>\\<^sub>\\<I>\n                       \\<I>_uniform UNIV\n                        (otp.sec.Out_Recv `\n                         carrier \\<L>)) \\<turnstile>\\<^sub>C\n                      parallel_wiring \\<surd>\n 3. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule WT_intro)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>WT_rest \\<I>_adv_resta \\<I>_usr_resta I_auth_rest auth_rest;\n     WT_rest \\<I>_adv_rest1 \\<I>_usr_rest1 I_auth1_rest auth1_rest;\n     WT_rest \\<I>_adv_rest2 \\<I>_usr_rest2 I_auth2_rest auth2_rest\\<rbrakk>\n    \\<Longrightarrow> pfinite_converter\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       (((\\<I>_full \\<oplus>\\<^sub>\\<I>\n                          \\<I>_full) \\<oplus>\\<^sub>\\<I>\n                         (\\<I>_usr_rest1 \\<oplus>\\<^sub>\\<I>\n                          \\<I>_usr_rest2)) \\<oplus>\\<^sub>\\<I>\n                        \\<I>_usr_resta)\n                       1\\<^sub>C", "apply(rule pfinite_intro)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "end"]]}