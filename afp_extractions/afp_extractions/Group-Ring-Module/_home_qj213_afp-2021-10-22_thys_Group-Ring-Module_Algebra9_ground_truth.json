{"file_name": "/home/qj213/afp-2021-10-22/thys/Group-Ring-Module/Algebra9.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Group-Ring-Module", "problem_names": ["lemma (in Ring) Zm_Module:\"R module (Zm R e)\"", "lemma (in Ring) Zm_carrier:\"carrier (Zm R e) = {e}\"", "lemma (in Ring) Zm_to_M_0:\"\\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M\\<rbrakk> \\<Longrightarrow> \n                     f e = \\<zero>\\<^bsub>M\\<^esub>\"", "lemma (in Ring) Z_to_M:\"\\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M; \n                              g \\<in> mHom R (Zm R e) M \\<rbrakk>  \\<Longrightarrow> f = g\"", "lemma (in Ring) mzeromap_mHom:\"\\<lbrakk>R module M; R module N\\<rbrakk> \\<Longrightarrow> \n                                     mzeromap M N \\<in> mHom R M N\"", "lemma (in Ring) HOM_carrier:\"carrier (HOM\\<^bsub>R\\<^esub> M N) = mHom R M N\"", "lemma (in Ring) mHom_Z_M:\"R module M \\<Longrightarrow> \n              mHom R (Zm R e) M = {mzeromap (Zm R e) M}\"", "lemma (in Module) Modules_single_carrier_isom:\"\\<lbrakk>R module N; carrier M = {\\<zero>};\n      carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk> \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> N\"", "lemma (in Ring) Zm_isom:\"(Zm R (e::'a)) \\<cong>\\<^bsub>R\\<^esub> (Zm R (u::'b))\"", "lemma (in Ring) HOM_Z_M_0:\"R module M \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> (Zm R e) M \\<cong>\\<^bsub>R\\<^esub> (Zm R e)\"", "lemma (in Ring) M_to_Z:\"\\<lbrakk>R module M; f \\<in> mHom R M (Zm R e); \n                               g \\<in> mHom R M (Zm R e)\\<rbrakk>  \\<Longrightarrow> f = g\"", "lemma (in Ring) mHom_to_zero:\"R module M \\<Longrightarrow>  mHom R M (Zm R e) = \n                                              {mzeromap M (Zm R e)}\"", "lemma (in Ring) carrier_HOM_M_Z:\"R module M \\<Longrightarrow> \n                 carrier (HOM\\<^bsub>R\\<^esub> M (Zm R e)) = {mzeromap M (Zm R e)}\"", "lemma (in Ring) HOM_M_Z_0:\"R module M \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> M (Zm R e) \\<cong>\\<^bsub>R\\<^esub> (Zm R e)\"", "lemma (in Ring) M_to_Z_0:\"\\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk> \\<Longrightarrow>\n                              ker\\<^bsub>M,(Zm R e)\\<^esub> f = carrier M\"", "lemma (in Ring) exact3_comp_0:\"\\<lbrakk>R module L; R module M; R module N; \n       f \\<in> mHom R L M; g \\<in> mHom R M N; exact3 R L f M g N\\<rbrakk> \\<Longrightarrow> \n      compos L g f = mzeromap L N\"", "lemma (in Ring) exact_im_sub_kern:\"\\<lbrakk>R module L; R module M; R module N; \n             f \\<in> mHom R L M; g \\<in> mHom R M N; exact3 R L f M g N\\<rbrakk> \\<Longrightarrow> \n           f ` (carrier L) \\<subseteq> ker\\<^bsub>M,N\\<^esub> g\"", "lemma (in Ring) mzero_im_sub_ker:\"\\<lbrakk>R module L; R module M; R module N; \n       f \\<in> mHom R L M; g \\<in> mHom R M N; compos L g f = mzeromap L N\\<rbrakk> \\<Longrightarrow> \n      f ` (carrier L) \\<subseteq> ker\\<^bsub>M,N\\<^esub> g\"", "lemma (in Ring) left_exact_injec:\"\\<lbrakk>R module M; R module N; \n      z \\<in> mHom R (Zm R e) M; f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk> \\<Longrightarrow>\n      injec\\<^bsub>M,N\\<^esub> f\"", "lemma (in Ring) injec_left_exact:\"\\<lbrakk>R module M; R module N; \n       z \\<in> mHom R (Zm R e) M; f \\<in> mHom R M N; injec\\<^bsub>M,N\\<^esub> f\\<rbrakk> \\<Longrightarrow> \n       exact3 R (Zm R e) z M f N\"", "lemma (in Ring) injec_mHom_image:\"\\<lbrakk>R module N; R module M1; R module M2; \n       x \\<in> mHom R N M2; f \\<in> mHom R M1 M2; x ` (carrier N) \\<subseteq> f ` (carrier M1);\n       injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\\<Longrightarrow>\n   (\\<lambda>n \\<in>(carrier N). (SOME m. (m \\<in> carrier M1 \\<and> x n = f m))) \\<in> mHom R N M1 \\<and>\n   compos N f (\\<lambda>n \\<in> (carrier N). (SOME m. m \\<in> carrier M1 \\<and> x n = f m)) = x\"", "lemma (in Ring) right_exact_surjec:\"\\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk> \\<Longrightarrow> surjec\\<^bsub>M,N\\<^esub> f\"", "lemma (in Ring) surjec_right_exact:\"\\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n p \\<in> mHom R N (Zm R e); surjec\\<^bsub>M,N\\<^esub> f\\<rbrakk> \\<Longrightarrow> exact3 R M f N p (Zm R e)\"", "lemma (in Ring) exact4_exact3:\"\\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n       f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); \n       exact4 R (Zm R e) z M f N z1 (Zm R e) \\<rbrakk> \\<Longrightarrow>\n      exact3 R (Zm R e) z M f N \\<and> exact3 R M f N z1 (Zm R e)\"", "lemma (in Ring) exact4_bijec:\"\\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M; \n       f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); \n       exact4 R (Zm R e) z M f N z1 (Zm R e)\\<rbrakk> \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> f\"", "lemma (in Ring) exact_im_sub_ker:\"\\<lbrakk>R module L; R module M; R module N; \n  f \\<in> mHom R L M; g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z; \n  exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z; compos L x f = mzeromap L Z\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>z\\<in>(carrier N). x (SOME y. y \\<in> carrier M \\<and> g y = z)) \\<in> mHom R N Z\"", "lemma (in Ring) exact_im_sub_ker1:\"\\<lbrakk>R module L; R module M; R module N; \n      f \\<in> mHom R L M; g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z; \n      exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z; \n      compos L x f = mzeromap L Z \\<rbrakk> \\<Longrightarrow> \n    compos M (\\<lambda>z\\<in>(carrier N). x (SOME y. y \\<in> carrier M \\<and> g y = z)) g = x\"", "lemma (in Ring) short_exact_sequence:\"\\<lbrakk>R module M; submodule R M N; \n z \\<in> mHom R (Zm R e) (mdl M N); z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk> \\<Longrightarrow> \n exact5 R (Zm R e) z (mdl M N)(m\\<iota>\\<^bsub>R\\<^esub> (mdl M N)) M (mpj M N) (M /\\<^sub>m N) z1 (Zm R e)\"", "lemma (in Ring) rexact4_lexact4_HOM:\"\\<lbrakk>R module M1; R module M2; R module M3;\n      f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); \n      exact4 R M1 f M2 g M3 z1 (Zm R e)\\<rbrakk> \\<Longrightarrow> \n \\<forall>N. R module N \\<longrightarrow> \n exact4 R (HOM\\<^bsub>R\\<^esub> (Zm R e) N) (sup_sharp R M3 (Zm R e) N z1) (HOM\\<^bsub>R\\<^esub> M3 N) \n(sup_sharp R M2 M3 N g) (HOM\\<^bsub>R\\<^esub> M2 N) (sup_sharp R M1 M2 N f) (HOM\\<^bsub>R\\<^esub> M1 N)\"", "lemma exact_HOM_exactTr:\"\\<lbrakk>Ring (R::('r, 'm1) Ring_scheme); f \\<in> mHom R M1 M2;\n      g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module NV;\n     \\<forall>(N::('a, 'r, 'm) Module_scheme). R module N \\<longrightarrow>\n      exact4 R (HOM\\<^bsub>R\\<^esub> (Zm R e) N)(sup_sharp R M3 (Zm R e) N z1)\n      (HOM\\<^bsub>R\\<^esub> M3 N) (sup_sharp R M2 M3 N g) (HOM\\<^bsub>R\\<^esub> M2 N) (sup_sharp R M1 M2 N f)\n      (HOM\\<^bsub>R\\<^esub> M1 N); R module (L::('a, 'r, 'm) Module_scheme)\\<rbrakk> \\<Longrightarrow> \n  exact4 R (HOM\\<^bsub>R\\<^esub> (Zm R e) L) (sup_sharp R M3 (Zm R e) L z1)\n (HOM\\<^bsub>R\\<^esub> M3 L) (sup_sharp R M2 M3 L g) (HOM\\<^bsub>R\\<^esub> M2 L) (sup_sharp R M1 M2 L f)\n (HOM\\<^bsub>R\\<^esub> M1 L)\"", "lemma lexact4_rexact4_HOM:\"\\<lbrakk>Ring R; R module M1; R module M2; R module M3;\nf \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; \nexact4 R (Zm R e) z M1 f M2 g M3 \\<rbrakk> \\<Longrightarrow> \n\\<forall>N. R module N \\<longrightarrow> exact4 R (HOM\\<^bsub>R\\<^esub> N (Zm R e)) (sub_sharp R N (Zm R e) M1 z)\n    (HOM\\<^bsub>R\\<^esub> N M1) (sub_sharp R N M1 M2 f) (HOM\\<^bsub>R\\<^esub> N M2) (sub_sharp R N M2 M3 g)\n    (HOM\\<^bsub>R\\<^esub> N M3)\"", "lemma (in Ring) prod_carr_mem:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M; \n       n \\<in> carrier N\\<rbrakk> \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N\"", "lemma (in Ring) bilinear_func:\"bilinear_map f R M N Z \\<Longrightarrow>\n                  f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z\"", "lemma (in Ring) bilinear_mem:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n      f (m1, m2) \\<in> carrier N\"", "lemma (in Ring) bilinear_l_add:\"\\<lbrakk>R module M1; R module M2; R module N; \n       m11 \\<in> carrier M1; m12 \\<in> carrier M1; m2 \\<in> carrier M2; \n       bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n       f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) = f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> (f (m12, m2))\"", "lemma (in Ring) bilinear_l_add1:\"\\<lbrakk>R module M1; R module M2; R module N; \n       m11 \\<in> carrier M1; m12 \\<in> carrier M1; m2 \\<in> carrier M2; \n       bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n       f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> (f (m12, m2))) = \\<zero>\\<^bsub>N\\<^esub>\"", "lemma (in Ring) bilinear_r_add:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m \\<in> carrier M1; m21 \\<in> carrier M2; m22 \\<in> carrier M2; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n      f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) = f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> (f (m, m22))\"", "lemma (in Ring) bilinear_r_add1:\"\\<lbrakk>R module M1; R module M2; R module N; \n       m \\<in> carrier M1; m21 \\<in> carrier M2; m22 \\<in> carrier M2; \n       bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n       f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> (f (m, m22))) = \\<zero>\\<^bsub>N\\<^esub>\"", "lemma (in Ring) bilinear_l_lin:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1, m2) = r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))\"", "lemma (in Ring) bilinear_l_lin1:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n         f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1, m2) \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))) = \\<zero>\\<^bsub>N\\<^esub>\"", "lemma (in Ring) bilinear_r_lin:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (m1, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> m2) = r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))\"", "lemma (in Ring) bilinear_r_lin1:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n      f (m1, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> m2)  \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))) = \\<zero>\\<^bsub>N\\<^esub> \"", "lemma (in Ring) bilinear_l_0:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m2 \\<in> carrier M2; bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) = \\<zero>\\<^bsub>N\\<^esub>\"", "lemma (in Ring) bilinear_r_0:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) = \\<zero>\\<^bsub>N\\<^esub>\"", "lemma tensor_prod_uniqueTr:\"\\<lbrakk>Ring R; R module (M::('a, 'r, 'm1) Module_scheme); \n      R module (N:: ('b, 'r, 'm1) Module_scheme); \n      R module (MN:: ('c, 'r, 'm1) Module_scheme); \n      R module (MN1::('c, 'r, 'm1) Module_scheme); \n      universal_property R M N MN f; universal_property R M N MN1 g\\<rbrakk> \\<Longrightarrow>\n      \\<exists>!k. k \\<in> mHom R MN1 MN \\<and> compose (M \\<times>\\<^sub>c N) k g = f\"", "lemma tensor_prod_unique:\"\\<lbrakk>Ring (R:: ('r, 'm) Ring_scheme); \n      R module (M :: ('a, 'r, 'm1) Module_scheme); \n      R module (N:: ('b, 'r, 'm1) Module_scheme); \n      R module (MN:: ('c, 'r, 'm1) Module_scheme); \n      R module (MN1::('c, 'r, 'm1) Module_scheme); \n      universal_property R M N MN f; universal_property R M N MN1 g\\<rbrakk> \\<Longrightarrow> \n      MN \\<cong>\\<^bsub>R\\<^esub> MN1\"", "lemma add_set_mono:\"A \\<subseteq> B \\<Longrightarrow> add_set f A n \\<subseteq> add_set f B n\"", "lemma addition_inc_add:\"add_set f A n \\<subseteq> addition_set f A\"", "lemma addition_inc_add0:\" A \\<subseteq> addition_set f A\"", "lemma addition_set_mono:\"A \\<subseteq> B \\<Longrightarrow> addition_set f A \\<subseteq> addition_set f B\"", "lemma a_in_aug_pm_set:\"a \\<in> A \\<Longrightarrow> a \\<in> aug_pm_set z i A\"", "lemma A_sub_aug_pm_set:\"A \\<subseteq> aug_pm_set z i A\"", "lemma addition_sub_aug_pm_addition:\"\n        addition_set f A \\<subseteq> addition_set f (aug_pm_set z i A)\"", "lemma assoc_bpp_restrict:\"\\<lbrakk> A \\<subseteq> B; assoc_bpp B f\\<rbrakk> \\<Longrightarrow> assoc_bpp A f\"", "lemma addition_assoc:\"\\<lbrakk>assoc_bpp A f; x \\<in> addition_set f A; \n                       y \\<in> addition_set f A; z \\<in> addition_set f A\\<rbrakk> \\<Longrightarrow> \n            (x \\<^sub>f+ y) \\<^sub>f+ z = x \\<^sub>f+ (y \\<^sub>f+ z)\"", "lemma bpp_closedTr:\"assoc_bpp A f \\<Longrightarrow>  \n      \\<forall>x y. x \\<in> add_set f A n \\<and> y \\<in> add_set f A m \\<longrightarrow> \n                  x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)\"", "lemma bpp_closed1:\"\\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n; y \\<in> add_set f A m\\<rbrakk> \\<Longrightarrow>\n                    x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)\"", "lemma bpp_closed:\"\\<lbrakk>assoc_bpp A f; x \\<in> addition_set f A; y \\<in> addition_set f A\\<rbrakk>\n             \\<Longrightarrow>  x \\<^sub>f+ y \\<in> addition_set f A\"", "lemma aug_addition_inc_z:\" z \\<in> addition_set f (aug_pm_set z i A)\"", "lemma aug_bpp_closed:\"\\<lbrakk>assoc_bpp (aug_pm_set z i A) f; \n      x \\<in> addition_set f (aug_pm_set z i A); \n      y \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk> \\<Longrightarrow>  \n                  x \\<^sub>f+ y \\<in> addition_set f (aug_pm_set z i A)\"", "lemma aug_commute:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n     x \\<in> addition_set f (aug_pm_set z i A); \n     y \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk> \\<Longrightarrow> x \\<^sub>f+ y = y \\<^sub>f+ x\"", "lemma addition_set_inc_z:\"z \\<in> addition_set f (aug_pm_set z i A)\"", "lemma  aug_ipp_closed0:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n       assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n       ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) 0\\<rbrakk> \\<Longrightarrow>\n         \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) 0\"", "lemma aug_ipp_closedTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i\\<rbrakk> \\<Longrightarrow>  \n      \\<forall>x. x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n                             \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\"", "lemma aug_ipp_closedTr2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk> \\<Longrightarrow>\n         \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\"", "lemma aug_ipp_closed:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; x \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk> \\<Longrightarrow> \n      \\<^sub>i- x \\<in> addition_set f (aug_pm_set z i A)\"", "lemma aug_zero_unique:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z; \n      zeroA z i f A z1\\<rbrakk> \\<Longrightarrow> z = z1\"", "lemma inv_aug_addition:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> \n     \\<forall>a\\<in>addition_set f (aug_pm_set z i A). (\\<^sub>i-a) \\<^sub>f+ a = z\"", "lemma fag_gen_carrier:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> \n      carrier (fag_gen_by A f i z) = addition_set f (aug_pm_set z i A)\"", "lemma addition_set_sub_fag_gen_carrier:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> addition_set f A \\<subseteq> carrier (fag_gen_by A f i z)\"", "lemma fag_aGroup:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> aGroup (fag_gen_by A f i z)\"", "lemma aug_pm_aug_pm_minus:\"ipp_cond1 {a} i \\<Longrightarrow> \n                      aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a}\"", "lemma ipp_cond1_minus:\"ipp_cond1 {a} i \\<Longrightarrow> ipp_cond1 {\\<^sub>i- a} i\"", "lemma ipp_cond2_minus:\"\\<lbrakk>ipp_cond1 {a} i; ipp_cond2 z {a} i f\\<rbrakk> \\<Longrightarrow> \n                                             ipp_cond2 z {\\<^sub>i- a} i f\"", "lemma zeroA_minus:\"\\<lbrakk>ipp_cond1 {a} i; zeroA z i f {a} z1\\<rbrakk> \\<Longrightarrow> \n                   zeroA z i f {\\<^sub>i- a} z1\"", "lemma inv_ipp_minus:\"\\<lbrakk>ipp_cond1 {a} i; inv_ipp z i f {a}\\<rbrakk> \\<Longrightarrow> \n      inv_ipp z i f {\\<^sub>i- a}\"", "lemma fag_single_additionTr1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n \\<forall>s. s\\<in> add_set f {a} (Suc n) \\<longrightarrow> s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\"", "lemma fag_single_additionTr2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; s \\<in> add_set f {a} 0\\<rbrakk> \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a = z\"", "lemma ipp_conditions:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>\n        assoc_bpp (aug_pm_set z i { \\<^sub>i- a}) f \\<and> ipp_cond1 { \\<^sub>i- a} i \\<and>\n        ipp_cond2 z { \\<^sub>i- a} i f \\<and> inv_ipp z i f { \\<^sub>i- a} \\<and> \n        commute_bpp f (aug_pm_set z i { \\<^sub>i- a}) \\<and> zeroA z i f { \\<^sub>i- a} z\"", "lemma fag_single_additionTr3:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; s\\<in> add_set f {\\<^sub>i- a} n\\<rbrakk> \\<Longrightarrow>\n          s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {\\<^sub>i- a} (Suc n)\"", "lemma fag_single_elemTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n     \\<forall>x. x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n     (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or> (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or> x = z\"", "lemma fag_single_elem:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; x \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk> \\<Longrightarrow>  \n    (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or> (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or> x = z\"", "lemma add_set_single1Tr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n      \\<forall>x y. x \\<in> add_set f {a} n \\<and> y \\<in> add_set f {a} n \\<longrightarrow> x = y\"", "lemma add_set_single_nonempty1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \\<exists>x. x\\<in>add_set f {a} n\"", "lemma add_set_single_nonempty2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \\<exists>x. x\\<in>add_set f {\\<^sub>i- a} n\"", "lemma add_set_single1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; x \\<in> add_set f {a} n; y \\<in> add_set f {a} n\\<rbrakk> \\<Longrightarrow> x = y\"", "lemma add_set_single2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n; y \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk> \\<Longrightarrow>  \n      x = y\"", "lemma fag_single_additionTr4:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z \\<rbrakk> \\<Longrightarrow> \n      \\<forall>s t. s \\<in> add_set f {a} n \\<and> t \\<in> add_set f {\\<^sub>i- a} n\\<longrightarrow> s \\<^sub>f+ t = z\"", "lemma fag_single_additionTr4_1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z;s \\<in> add_set f {a} n; t \\<in> add_set f {\\<^sub>i- a} n \\<rbrakk> \\<Longrightarrow> \n      s \\<^sub>f+ t = z\"", "lemma fag_single_additionTr5:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n      ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n      commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \n      \\<forall>m. m < Suc n \\<longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ \n         (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\"", "lemma fag_single_additionTr5_1:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n      ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n      commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < Suc n\\<rbrakk> \\<Longrightarrow> \n (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = \n                            (THE x. x \\<in> add_set f {a} (n - m))\"", "lemma fag_single_additionTr5_2:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n      ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n      commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < Suc m\\<rbrakk> \\<Longrightarrow> \n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m)) \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) = \n           (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))\"", "lemma  single_addition_pm_mem:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n       ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n       commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n      (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in> addition_set f (aug_pm_set z i {a})\"", "lemma assoc_aug_assoc:\"assoc_bpp (aug_pm_set z i {a}) f \\<Longrightarrow> assoc_bpp {a} f\"", "lemma single_addition_posTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; 0 < (n::int); 0 < (m::int)\\<rbrakk> \\<Longrightarrow> \n  (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+ \n   (THE x. x \\<in> add_set f {a} (nat (m - 1))) = \n                              (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\"", "lemma single_addition_pos:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; 0 < (n::int); 0 < (m::int)\\<rbrakk> \\<Longrightarrow> \n     (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma single_addition_neg:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; (n::int) < 0; (m::int) < 0 \\<rbrakk> \\<Longrightarrow> \n           (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma single_addition_zero:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> 0\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\"", "lemma s_a_p_1:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; \n                ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n                commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; \n                m < 0; 0 < n\\<rbrakk> \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma single_addition_pm:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma single_inv:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (-m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma free_ag_single:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; free_gen_condition f i a z; n \\<noteq> m\\<rbrakk> \\<Longrightarrow> \n      (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<noteq> (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\"", "lemma fag_single_free:\"\\<lbrakk>fags_cond f z i a; n \\<noteq> m\\<rbrakk> \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<noteq> (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\"", "lemma fag_single_free1:\"\\<lbrakk>fags_cond f z i a;(n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk> \\<Longrightarrow> n = m\"", "lemma fags_mem:\"fags_cond f z i a \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in> fags_carr f z i a\"", "lemma fags_ippTr:\"fags_cond f z i a \\<Longrightarrow> \n                  fags_ipp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma fags_bppTr:\"fags_cond f z i a \\<Longrightarrow> \n                  fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"", "lemma fags_ag:\"fags_cond f z i a \\<Longrightarrow> aGroup (fags f z i a)\"", "lemma (in aGroup) asum_mem:\"a \\<in> carrier A \\<Longrightarrow> aSum A n a \\<in> carrier A\"", "lemma (in aGroup) nt_mem0:\"a \\<in> carrier A \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\"", "lemma (in aGroup) nt_zero0:\"a \\<in> carrier A \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\"", "lemma (in aGroup) nt_1:\"a \\<in> carrier A \\<Longrightarrow> 1\\<triangleright>a\\<^bsub>A\\<^esub> = a\"", "lemma (in aGroup) asumTr:\"a \\<in> carrier A \\<Longrightarrow> \n              aSum A (n + m) a = aSum A n a \\<plusminus> (aSum A m a)\"", "lemma (in aGroup) aSum_zero:\"a \\<in> carrier A \\<Longrightarrow> aSum A n \\<zero> = \\<zero>\"", "lemma (in aGroup)  agsum_add1p:\"\\<lbrakk> a \\<in> carrier A; 0 \\<le> n; 0 \\<le> m\\<rbrakk> \\<Longrightarrow>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup)  agsum_add1m:\"\\<lbrakk> a \\<in> carrier A; n < 0; m < 0\\<rbrakk> \\<Longrightarrow>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup) agsum_add2Tr:\"a \\<in> carrier A \\<Longrightarrow> \n                \\<zero>  = aSum A n a \\<plusminus> (aSum A n (-\\<^sub>a a))\"", "lemma (in aGroup) agsum_add2p:\"\\<lbrakk>a \\<in> carrier A; 0 \\<le> n\\<rbrakk> \\<Longrightarrow>\n                                    \\<zero> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> ((-n)\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup) agsum_add2m:\"\\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk> \\<Longrightarrow>\n                                    \\<zero> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> ((-n)\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup) agsum_add3pm:\"\\<lbrakk>a \\<in> carrier A; 0 < n; m < 0\\<rbrakk> \\<Longrightarrow>\n                        (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup)  agsum_add3mp:\"\\<lbrakk> a \\<in> carrier A; n < 0; 0 < m\\<rbrakk> \\<Longrightarrow>\n                        (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup)  nt_sum0:\"\\<lbrakk> a \\<in> carrier A\\<rbrakk> \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup)  nt_inv0:\"a \\<in> carrier A \\<Longrightarrow> -\\<^sub>a (n\\<triangleright>a\\<^bsub>A\\<^esub>) = (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) m_x_asum:\"\\<lbrakk> a \\<in> carrier A; b \\<in> carrier A\\<rbrakk> \n        \\<Longrightarrow> aSum A m (a \\<plusminus> b) = (aSum A m a) \\<plusminus> (aSum A m b)\"", "lemma (in aGroup) asum_multTr_pp:\"a \\<in> carrier A \\<Longrightarrow>\n                  aSum A m (aSum A n a) = aSum A (m * n) a\"", "lemma (in aGroup) nt_mult_pp:\"\\<lbrakk> a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk> \n                                   \\<Longrightarrow> m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) asum_multTr_pm:\"\\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk> \\<Longrightarrow> \n       aSum A (nat m) (aSum A (nat (- n)) (-\\<^sub>a a)) = \n                                    aSum A (nat (m * (- n))) (-\\<^sub>a a)\"", "lemma (in aGroup) nt_mult_pm:\"\\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk> \\<Longrightarrow> \n                        m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) asum_multTr_mp:\"\\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk> \\<Longrightarrow> \n aSum A (nat (-m))(-\\<^sub>a (aSum A (nat n) a)) = aSum A (nat ((- m) * n)) (-\\<^sub>a a)\"", "lemma (in aGroup) nt_mult_mp:\"\\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk> \\<Longrightarrow> \n                        m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) asum_multTr_mm:\"\\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk> \\<Longrightarrow> \n       aSum A (nat (-m))(-\\<^sub>a (aSum A (nat (- n)) (-\\<^sub>a a))) = \n                                   aSum A (nat ((- m) * (- n))) a\"", "lemma (in aGroup)  nt_mult_mm:\"\\<lbrakk> a \\<in> carrier A; m < 0; n < 0\\<rbrakk> \\<Longrightarrow> \n                     m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup)  nt_mult_assoc0:\"a \\<in> carrier A \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) single_gen_carrTr:\"a \\<in> carrier A \\<Longrightarrow>\n                               asubGroup A {x. \\<exists>n. x = (n\\<triangleright>a\\<^bsub>A\\<^esub>)}\"", "lemma (in aGroup) ag_single_inc_a:\"ag_single_gen A a \\<Longrightarrow> a \\<in> carrier A\"", "lemma (in aGroup) single_gen:\"ag_single_gen A a \\<Longrightarrow> \n                           carrier A = {g. \\<exists>n. g = (n\\<triangleright>a\\<^bsub>A\\<^esub>)}\"", "lemma (in aGroup) single_gen_free_neg:\"\\<lbrakk>sfg A a; n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\\<rbrakk> \\<Longrightarrow> n = 0\"", "lemma (in aGroup) sfg_G_inc_a:\"sfg A a \\<Longrightarrow> a \\<in> carrier A\"", "lemma sfg_agroup:\"sfg A a \\<Longrightarrow> aGroup A\"", "lemma (in aGroup) mem_G_nt:\"\\<lbrakk>sfg A a; x \\<in> carrier A\\<rbrakk> \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) nt_mem:\"sfg A a \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\"", "lemma (in aGroup) nt_zero:\"sfg A a \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\"", "lemma (in aGroup) nt_sum:\"sfg A a \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup) nt_inv:\"sfg A a \\<Longrightarrow> -\\<^sub>a(n\\<triangleright>a\\<^bsub>A\\<^esub>) = (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) nt_mult_assoc:\"sfg A a \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\"", "lemma (in aGroup) sfg_free:\"\\<lbrakk>sfg A a; n \\<noteq> m \\<rbrakk> \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<noteq> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\"", "lemma (in aGroup) sfg_free_inj:\"\\<lbrakk>sfg A a; n\\<triangleright>a\\<^bsub>A\\<^esub> = (m\\<triangleright>a\\<^bsub>A\\<^esub>) \\<rbrakk> \\<Longrightarrow> n = m\"", "lemma fgmodule_carr:\"carrier (fgmodule R A z i f s) = \n             addition_set f (aug_pm_set z i (s_set R s A))\"", "lemma a_in_s_set:\"a \\<in> A \\<Longrightarrow> a \\<in> s_set R s A\"", "lemma (in Ring) ra_in_s_set:\"\\<lbrakk>r \\<in> carrier R; a \\<in> A\\<rbrakk> \\<Longrightarrow> r \\<^sub>s\\<cdot> a \\<in> s_set R s A\"", "lemma in_aug_pm_set:\n       \"x \\<in> aug_pm_set z i A = (x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A)\"", "lemma (in Ring) in_s_set:\"x \\<in> s_set R s A \\<Longrightarrow> (\\<exists>r \\<in> carrier R. \\<exists>a \\<in> A. \n      x = r \\<^sub>s\\<cdot> a ) \\<or> x \\<in> A\"", "lemma (in Ring) sop_closedTr0:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n       ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n       inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n       sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n       sop_inv R s i (s_set R s A); \n       sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;  \n       r \\<in> carrier R; x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk> \\<Longrightarrow> \n                        r \\<^sub>s\\<cdot> x \\<in> aug_pm_set z i (s_set R s A)\"", "lemma (in Ring) sop_closedTr:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n    ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n        sop_inv R s i (s_set R s A); \n         sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk> \\<Longrightarrow>\n    \\<forall>r\\<in>carrier R. \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n. \n                  r \\<^sub>s\\<cdot> x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\"", "lemma (in Ring) sop_closed:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n      inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n       sop_distr2 R s f i (s_set R s A) z; \n        sop_assoc R s (aug_pm_set z i (s_set R s A)); \n         sop_inv R s i (s_set R s A); \n          sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk> \\<Longrightarrow>\n     \\<forall>r\\<in>carrier R. \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). \n          r \\<^sub>s\\<cdot> x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\"", "lemma (in Ring) sop_oneTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n  assoc_bpp (aug_pm_set z i (s_set R s A)) f; \n   ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f; \n    ipp_cond3 z i; inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n     sop_distr2 R s f i (s_set R s A) z; \n      sop_assoc R s (aug_pm_set z i (s_set R s A)); \n       sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>  \\<Longrightarrow> \n   \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.  (1\\<^sub>r) \\<^sub>s\\<cdot> x = x\"", "lemma (in Ring) sop_one:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n   assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i; \n    ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n        sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>  \\<Longrightarrow> \n   \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). (1\\<^sub>r) \\<^sub>s\\<cdot> x = x\"", "lemma (in Ring) sop_assocTr:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n      ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n      inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n      sop_assoc R s (aug_pm_set z i (s_set R s A)); \n      sop_inv R s i (s_set R s A); \n      sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>  \\<Longrightarrow>\n     \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n      \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.  \n                         a \\<^sub>s\\<cdot> ( b \\<^sub>s\\<cdot> x) = (a \\<cdot>\\<^sub>r b) \\<^sub>s\\<cdot> x\"", "lemma (in Ring) sop_assoc:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n    ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n        sop_inv R s i (s_set R s A); sop_z R s z; \n         sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk> \\<Longrightarrow> \n   \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n      \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).  \n                           a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) = ( a \\<cdot>\\<^sub>r b) \\<^sub>s\\<cdot> x\"", "lemma (in Ring) s_set_commute:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n       x \\<in> addition_set f (aug_pm_set z i (s_set R s A)); \n        y \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk> \\<Longrightarrow>\n               x \\<^sub>f+ y = y \\<^sub>f+ x\"", "lemma (in Ring) add_s_set_inc_add_set:\"\n      add_set f (aug_pm_set z i A) n \\<subseteq> \n             add_set f (aug_pm_set z i (s_set R s A)) n\"", "lemma (in Ring) sop_distr1Tr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n    assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n      inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n       sop_distr1 R s f i (s_set R s A) z; \n        sop_distr2 R s f i (s_set R s A) z; \n         sop_assoc R s (aug_pm_set z i (s_set R s A)); \n          sop_inv R s i (s_set R s A); \n           sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>  \\<Longrightarrow> \n \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \\<forall>x\\<in> add_set f (aug_pm_set z i (s_set R s A)) n.\n          (a \\<plusminus> b) \\<^sub>s\\<cdot> x = a \\<^sub>s\\<cdot> x \\<^sub>f+ (b \\<^sub>s\\<cdot> x)\"", "lemma (in Ring) sop_distr1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n      assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i; \n       ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n        inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n         sop_distr1 R s f i (s_set R s A) z; \n          sop_distr2 R s f i (s_set R s A) z; \n           sop_assoc R s (aug_pm_set z i (s_set R s A)); \n            sop_inv R s i (s_set R s A); \n             sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>  \\<Longrightarrow> \n      \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n         \\<forall>x\\<in> addition_set f (aug_pm_set z i (s_set R s A)). \n                      (a \\<plusminus> b) \\<^sub>s\\<cdot> x = a \\<^sub>s\\<cdot> x \\<^sub>f+ (b \\<^sub>s\\<cdot> x)\"", "lemma (in Ring) sop_closed1:\"\\<lbrakk>fgmodule_condition R f i s A z; r \\<in> carrier R;\n      x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk> \\<Longrightarrow>\n          r \\<^sub>s\\<cdot> x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\"", "lemma (in Ring) fgmodule_is_module:\"fgmodule_condition R f i s A z\n                                \\<Longrightarrow>  R module (fgmodule R A z i f s)\"", "lemma (in Ring) a_in_carr_fgmodule:\"a \\<in> A\n                                \\<Longrightarrow>  a \\<in> carrier (fgmodule R A z i f s)\"", "lemma (in Ring) fg_zeroTr:\"\\<lbrakk>fgmodule_condition R f i s A z; a \\<in> A\\<rbrakk> \\<Longrightarrow> \n                     \\<zero>  \\<^sub>s\\<cdot> a = z\"", "lemma (in Ring) fg_genTr0:\"\\<lbrakk>fgmodule_condition R f i s A z; \n      x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk> \\<Longrightarrow> \n        x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\"", "lemma (in Ring) fg_genTr:\"fgmodule_condition R f i s A z \\<Longrightarrow>\n      \\<forall>x. x \\<in> (add_set f (aug_pm_set z i (s_set R s A)) n) \\<longrightarrow> \n             x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\"", "lemma (in Ring) generator_of_fgm:\"fgmodule_condition R f i s A z \\<Longrightarrow> \n                 generator R (fgmodule R A z i f s) A\"", "lemma (in Ring) fg_freeTr1:\"\\<lbrakk>R module M; free_generator R M A;\n  R module fgmodule R A z i f s; free_generator R (fgmodule R A z i f s) A;\n  g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x\\<rbrakk> \\<Longrightarrow> \n  \\<forall>fa sa. fa \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> A \\<and> sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow> \n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) = \n                      l_comb R (fgmodule R A z i f s) n sa fa\"", "lemma (in Ring) fg_freeTr:\"\\<lbrakk>R module M; free_generator R M A;\n      R module fgmodule R A z i f s; \n      free_generator R (fgmodule R A z i f s) A;\n      g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x; \n      fa \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> A; sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk> \\<Longrightarrow> \n      l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n                            l_comb R (fgmodule R A z i f s) n sa fa\"", "lemma (in Ring) fg_free1:\"\\<lbrakk> A \\<noteq> {}; fgmodule_condition R f i s A z; \n      free_generator R (fgmodule R A z i f s) A; R module M; \n      free_generator R M A\\<rbrakk> \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> (fgmodule R A z i f s)\"", "lemma (in Ring) fg_free:\"\\<lbrakk>fgmodule_condition R f i s A z; \n       free_generator R (fgmodule R A z i f s) A; R module M; \n       free_generator R M A\\<rbrakk> \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> (fgmodule R A z i f s)\"", "lemma (in Ring) ds2_commute:\"\\<lbrakk>R module M1; R module M2; R module M; \n               M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk> \\<Longrightarrow> M2 \\<Oplus>\\<^bsub>R,M\\<^esub> M1\"", "lemma (in Ring) msub_addition:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1;\n       x \\<in> carrier M1; y \\<in> carrier M1\\<rbrakk> \\<Longrightarrow> x \\<plusminus>\\<^bsub>M1\\<^esub> y = x \\<plusminus>\\<^bsub>M\\<^esub> y\"", "lemma (in Ring) msub_mOp:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1;\n       x \\<in> carrier M1\\<rbrakk> \\<Longrightarrow> -\\<^sub>a\\<^bsub>M1\\<^esub> x  = -\\<^sub>a\\<^bsub>M\\<^esub> x\"", "lemma (in Ring) msub_sprod:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1;\n       a \\<in> carrier R; x \\<in> carrier M1\\<rbrakk> \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x = a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x\"", "lemma (in Ring) msub_submodule:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1\\<rbrakk>\n        \\<Longrightarrow>  submodule R M (carrier M1)\"", "lemma (in Ring) ds2_unique:\"\\<lbrakk>R module M; R module M1; R module M2; \n       ds2 R M M1 M2;  m1 \\<in> carrier M1; m1' \\<in> carrier M1; \n                       m2 \\<in> carrier M2; m2' \\<in> carrier M2; \n       m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 = m1' \\<plusminus>\\<^bsub>M\\<^esub> m2'\\<rbrakk> \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'\"", "lemma (in Ring) miota_injec:\"\\<lbrakk>R module M; R module M1; R module M2; \n       ds2 R M M1 M2; msubmodule R M M1\\<rbrakk> \\<Longrightarrow> \n       miota R M1 M \\<in> mHom R M1 M \\<and> injec\\<^bsub>M1,M\\<^esub> (miota R M1 M)\"", "lemma (in Ring) ds2_components:\"\\<lbrakk>R module M1; R module M2; R module M;\n       M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M\\<rbrakk> \\<Longrightarrow> \n         \\<exists>a1\\<in>carrier M1. \\<exists>a2\\<in>carrier M2. a = a1 \\<plusminus>\\<^bsub>M\\<^esub> a2\"", "lemma (in Ring) ds2_components1:\"\\<lbrakk>R module M1; R module M2; R module M;\n       M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M\\<rbrakk> \\<Longrightarrow> \n         \\<exists>a1\\<in>carrier M1. a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M2\"", "lemma (in Ring) mprojTr1:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2;\n  x \\<in> carrier M \\<rbrakk> \\<Longrightarrow> \\<exists>!x1. x1 \\<in> carrier M1 \\<and> (x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1) \\<in> carrier M2\"", "lemma (in Ring) mprojTr2:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2;\n      x \\<in> carrier M; x1 \\<in> carrier M1; (x \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> x1)) \\<in> carrier M2; \n      y1 \\<in> carrier M1;(x \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> y1)) \\<in> carrier M2  \\<rbrakk> \\<Longrightarrow> x1 = y1\"", "lemma (in Ring) mprojTr3:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2;\n      a \\<in> carrier M; a1 \\<in> carrier M1; (a \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1)) \\<in> carrier M2\\<rbrakk> \\<Longrightarrow>\n      (THE x1. x1 \\<in> carrier M1 \\<and> a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) = a1\"", "lemma (in Ring) mproj:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2\\<rbrakk>\n      \\<Longrightarrow> mproj1 R M1 M2 M \\<in> mHom R M M1\"", "lemma (in Ring) mproj2:\"\\<lbrakk>R module M1; R module M2; R module M; M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj2 R M1 M2 M \\<in> mHom R M M2\"", "lemma (in Ring) free_gen_gen:\"FM\\<^bsub>R\\<^esub> P M N \\<Longrightarrow> generator R P (M \\<times>\\<^sub>c N)\"", "lemma (in Ring) free_gen_mem:\"\\<lbrakk>FM\\<^bsub>R\\<^esub> P M N; a \\<in> (M \\<times>\\<^sub>c N)\\<rbrakk> \\<Longrightarrow>  a \\<in> carrier P\"", "lemma (in Ring) mHom_lin_nsumTr:\"\\<lbrakk>R module M; R module N; t \\<in> mHom R M N\\<rbrakk> \\<Longrightarrow>\n f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> carrier M  \\<longrightarrow> t (nsum M f n) = nsum N (cmp t f) n\"", "lemma (in Ring) mHom_lin_nsum:\"\\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n       f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> carrier M\\<rbrakk> \\<Longrightarrow>\n                           t (nsum M f n) = nsum N (cmp t f) n\"", "lemma (in Ring) module_over_zeroring:\"\\<lbrakk>zeroring R; R module M\\<rbrakk> \\<Longrightarrow>  \n                    carrier M = {\\<zero>\\<^bsub>M\\<^esub>}\"", "lemma (in Ring) submodule_over_zeroring:\"\\<lbrakk>zeroring R; R module M; \n                 submodule R M N\\<rbrakk> \\<Longrightarrow>  N =  {\\<zero>\\<^bsub>M\\<^esub>}\"", "lemma (in Ring) LSM_mem:\"\\<lbrakk>R module M; T \\<subseteq> carrier M; t \\<in> T\\<rbrakk> \\<Longrightarrow> \n                                                     t \\<in> (LSM\\<^bsub>R\\<^esub> M T)\"", "lemma (in Ring) LSM_sub_M:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow>\n                              (LSM\\<^bsub>R\\<^esub> M T) \\<subseteq> carrier M\"", "lemma (in Ring) LSM_sub_submodule:\"\\<lbrakk>R module M; T \\<subseteq> carrier M; \n      submodule R M N; T \\<subseteq> N \\<rbrakk> \\<Longrightarrow> (LSM\\<^bsub>R\\<^esub> M T) \\<subseteq> N\"", "lemma (in Ring) LSM_inc_T:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow> T \\<subseteq> (LSM\\<^bsub>R\\<^esub> M T)\"", "lemma (in Ring) LSM_submodule:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow>\n                submodule R M (LSM\\<^bsub>R\\<^esub> M T)\"", "lemma (in Ring) linear_comb_memTr:\"\\<lbrakk>R module M; submodule R M N; T \\<subseteq> N\\<rbrakk> \\<Longrightarrow>\n      \\<forall>f s. f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> T \\<and> s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow> \n      l_comb R M n s f \\<in> N\"", "lemma (in Ring) linear_comb_mem:\"\\<lbrakk>R module M; submodule R M N; T \\<subseteq> N; \n      f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> T; s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk> \\<Longrightarrow> \n                      l_comb R M n s f \\<in> N\"", "lemma (in Ring) LSM_eq_linear_span:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow> \n          (LSM\\<^bsub>R\\<^esub> M T) = linear_span R M (carrier R) T\"", "lemma (in Ring) LSM_sub_ker:\"\\<lbrakk>R module M; R module N; T \\<subseteq> carrier M; \n       f \\<in> mHom R M N; T \\<subseteq> ker\\<^bsub>M,N\\<^esub> f\\<rbrakk> \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T \\<subseteq> ker\\<^bsub>M,N\\<^esub> f\"", "lemma (in Ring) mem_cartesian:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M;\n      n \\<in> carrier N \\<rbrakk> \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N\"", "lemma (in Ring) cartesianTr:\"\\<lbrakk>R module M; R module N; x \\<in> M \\<times>\\<^sub>c N\\<rbrakk> \\<Longrightarrow> \n       \\<exists>m n. m\\<in>carrier M \\<and> n \\<in> carrier N \\<and> x = (m, n)\"", "lemma (in Ring) free_module_mem:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M;\n         n \\<in> carrier N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>  (m, n) \\<in> carrier P\"", "lemma (in Ring) FM_P_module:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n        \\<Longrightarrow> R module P\"", "lemma (in Ring) TR1_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                                      (TR1 R M N P) \\<subseteq> carrier P\"", "lemma (in Ring) TR2_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n               (TR2 R M N P) \\<subseteq> carrier P\"", "lemma (in Ring) TR3_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n                      (TR3 R M N P) \\<subseteq> carrier P\"", "lemma (in Ring) TR4_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                       (TR4 R M N P) \\<subseteq> carrier P\"", "lemma (in Ring) TR_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n  (TR1 R M N P) \\<union> (TR2 R M N P) \\<union> (TR3 R M N P) \\<union> (TR4 R M N P) \\<subseteq> carrier P\"", "lemma (in Ring) TR_submodule:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                 submodule R P (TR\\<^bsub>R\\<^esub> M N P)\"", "lemma (in Ring) TR_cont_TR1234:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n  TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union> TR4 R M N P \\<subseteq> TR\\<^bsub>R\\<^esub> M N P\"", "lemma (in Ring) TR1_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m1 \\<in> carrier M;\nm2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk> \\<Longrightarrow> (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub> (m2, n))\n \\<in> TR\\<^bsub>R\\<^esub> M N P\"", "lemma (in Ring) TR2_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M;\n       n1 \\<in> carrier N; n2 \\<in> carrier N \\<rbrakk> \\<Longrightarrow> \n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2)) \\<in> TR\\<^bsub>R\\<^esub> M N P\"", "lemma (in Ring) TR3_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M;\n      n \\<in> carrier N; a \\<in> carrier R\\<rbrakk> \\<Longrightarrow> \n         (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) \\<in> TR\\<^bsub>R\\<^esub> M N P\"", "lemma (in Ring) TR4_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M;\n       n \\<in> carrier N; a \\<in> carrier R\\<rbrakk> \\<Longrightarrow> \n            (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) \\<in> TR\\<^bsub>R\\<^esub> M N P\"", "lemma (in Ring) tensor_product_module:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n       R module (tensor_product R M N P)\"", "lemma (in Ring) tau_mpj_bilin1:\"\\<lbrakk> R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N\\<rbrakk>  \\<Longrightarrow> \n  (mpj P (TR\\<^bsub>R\\<^esub> M N P)) ( x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) = \n    (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (x1, y) \\<plusminus>\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> (mpj   P (TR\\<^bsub>R\\<^esub> M N P) (x2, y))\"", "lemma (in Ring) tau_mpj_bilin2:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n       m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>  \\<Longrightarrow> \n  (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) = \n   (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (m, n1) \\<plusminus>\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> (mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2))\"", "lemma (in Ring) tau_mpj_bilin3:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n   m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>  \\<Longrightarrow> \n  (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) = a \\<cdot>\\<^sub>s\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> \n                                        (mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n))\"", "lemma (in Ring) tau_mpj_bilin4:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; \n      m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>  \\<Longrightarrow>\n     (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) = a \\<cdot>\\<^sub>s\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> \n            (mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n))\"", "lemma (in Ring) tau_func:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n                                 tau R M N P \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier P\"", "lemma (in Ring) tau_mem:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M; \n      n \\<in> carrier N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> tau R M N P (m, n) \\<in> carrier P\"", "lemma (in Ring) tau_inj0:\"\\<lbrakk>\\<not> zeroring R;  R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \n      \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\"", "lemma (in Ring) tau_inj1:\"\\<lbrakk>zeroring R; R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n           inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\"", "lemma (in Ring) tau_inj:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\"", "lemma (in Ring) tau_mpj_bilinear:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>  \n      bilinear_map (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)) \n                     R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\"", "lemma (in Ring) tnm_bilinear:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n        bilinear_map (tnm R P M N) R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\"", "lemma (in Ring) tnm_mem:\"\\<lbrakk> R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M; \n       n \\<in> carrier N\\<rbrakk>  \\<Longrightarrow> tnm R P M N (m, n) \\<in> carrier (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\"", "lemma (in Ring) tensor_univ_propTr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; \n      R module Z; bilinear_map f R M N Z\\<rbrakk> \\<Longrightarrow>\n     \\<exists>g. g \\<in> mHom R P Z \\<and> (compose (M \\<times>\\<^sub>c N) g (tau R M N P)) = f\"", "lemma (in Ring) tensor_univ_propTr1:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; \n      R module Z; bilinear_map f R M N Z\\<rbrakk> \\<Longrightarrow>\n     \\<exists>!g. g\\<in>(mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) Z) \\<and> (compose (M \\<times>\\<^sub>c N) g (tnm R P M N)) = f\"", "lemma (in Ring) tensor_universal_property:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N \\<rbrakk>\n \\<Longrightarrow>  universal_property R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) (tnm R P M N)\""], "translations": [["", "lemma (in Ring) Zm_Module:\"R module (Zm R e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R module Zm R e", "apply (simp add:Module_def aGroup_def Zm_def Module_axioms_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>r \\<in> carrier R \\<longrightarrow>\n     Ring R \\<and>\n     (\\<forall>a.\n         a \\<in> carrier R \\<longrightarrow>\n         (\\<forall>b.\n             a \\<plusminus> b \\<notin> carrier R \\<longrightarrow>\n             b \\<in> carrier R \\<longrightarrow> undefined e = e)) \\<and>\n     (\\<forall>a.\n         a \\<in> carrier R \\<longrightarrow>\n         (\\<forall>b.\n             a \\<cdot>\\<^sub>r b \\<notin> carrier R \\<longrightarrow>\n             b \\<in> carrier R \\<longrightarrow> undefined e = e))) \\<and>\n    (1\\<^sub>r \\<notin> carrier R \\<longrightarrow>\n     Ring R \\<and>\n     (\\<forall>a.\n         a \\<in> carrier R \\<longrightarrow>\n         (\\<forall>b.\n             a \\<plusminus> b \\<notin> carrier R \\<longrightarrow>\n             b \\<in> carrier R \\<longrightarrow> undefined e = e)) \\<and>\n     (\\<forall>a.\n         a \\<in> carrier R \\<longrightarrow>\n         (\\<forall>b.\n             a \\<cdot>\\<^sub>r b \\<notin> carrier R \\<longrightarrow>\n             b \\<in> carrier R \\<longrightarrow> undefined e = e)) \\<and>\n     undefined e = e)", "apply (simp add:ring_one, cut_tac Ring, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ring R \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier R \\<longrightarrow>\n        (\\<forall>b.\n            a \\<plusminus> b \\<notin> carrier R \\<longrightarrow>\n            b \\<in> carrier R \\<longrightarrow> undefined e = e)) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier R \\<longrightarrow>\n        (\\<forall>b.\n            a \\<cdot>\\<^sub>r b \\<notin> carrier R \\<longrightarrow>\n            b \\<in> carrier R \\<longrightarrow> undefined e = e))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Ring R \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier R \\<longrightarrow>\n       (\\<forall>b.\n           a \\<plusminus> b \\<notin> carrier R \\<longrightarrow>\n           b \\<in> carrier R \\<longrightarrow> undefined e = e)\n 2. Ring R \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier R \\<longrightarrow>\n       (\\<forall>b.\n           a \\<cdot>\\<^sub>r b \\<notin> carrier R \\<longrightarrow>\n           b \\<in> carrier R \\<longrightarrow> undefined e = e)", "apply (rule allI, rule impI, rule allI, rule impI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Ring R; a \\<in> carrier R;\n        a \\<plusminus> b \\<notin> carrier R; b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> undefined e = e\n 2. Ring R \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier R \\<longrightarrow>\n       (\\<forall>b.\n           a \\<cdot>\\<^sub>r b \\<notin> carrier R \\<longrightarrow>\n           b \\<in> carrier R \\<longrightarrow> undefined e = e)", "apply (cut_tac ring_is_ag, \n        frule_tac x = a and y = b in aGroup.ag_pOp_closed, assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ring R \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier R \\<longrightarrow>\n       (\\<forall>b.\n           a \\<cdot>\\<^sub>r b \\<notin> carrier R \\<longrightarrow>\n           b \\<in> carrier R \\<longrightarrow> undefined e = e)", "apply (rule allI, rule impI, rule allI, rule impI, rule impI,\n        frule_tac x = a and y = b in ring_tOp_closed, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) Zm_carrier:\"carrier (Zm R e) = {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (Zm R e) = {e}", "apply (simp add:Zm_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) Zm_to_M_0:\"\\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M\\<rbrakk> \\<Longrightarrow> \n                     f e = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> f e = \\<zero>\\<^bsub>M\\<^esub>", "apply (cut_tac Zm_Module [of e])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M; R module Zm R e\\<rbrakk>\n    \\<Longrightarrow> f e = \\<zero>\\<^bsub>M\\<^esub>", "apply (frule Module.mHom_add [of \"Zm R e\" R M f e e], assumption+,\n        (simp add:Zm_carrier)+,\n        frule_tac R = R and M = \"Zm R e\" in Module.module_is_ag,\n        frule_tac x = e and y = e in aGroup.ag_pOp_closed[of \"Zm R e\"],\n        (simp add:Zm_carrier)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M; R module Zm R e;\n     f e = f e \\<plusminus>\\<^bsub>M\\<^esub> f e; aGroup (Zm R e);\n     e \\<plusminus>\\<^bsub>Zm R e\\<^esub> e = e\\<rbrakk>\n    \\<Longrightarrow> f e = \\<zero>\\<^bsub>M\\<^esub>", "apply (frule_tac R = R and M = \"Zm R e\" and N = M and f = f and m = e in\n        Module.mHom_mem, assumption+, simp add:Zm_carrier,\n        frule sym, thin_tac \"f e =  f e  \\<plusminus>\\<^bsub>M\\<^esub> (f e)\",\n        frule_tac R = R and M = M in Module.module_is_ag,\n        frule aGroup.ag_eq_sol2 [of M \"f e\" \"f e\" \"f e\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M; R module Zm R e;\n     aGroup (Zm R e); e \\<plusminus>\\<^bsub>Zm R e\\<^esub> e = e;\n     f e \\<in> carrier M; f e \\<plusminus>\\<^bsub>M\\<^esub> f e = f e;\n     aGroup M;\n     f e =\n     f e \\<plusminus>\\<^bsub>M\\<^esub>\n     -\\<^sub>a\\<^bsub>M\\<^esub> f e\\<rbrakk>\n    \\<Longrightarrow> f e = \\<zero>\\<^bsub>M\\<^esub>", "apply (simp add:aGroup.ag_r_inv1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) Z_to_M:\"\\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M; \n                              g \\<in> mHom R (Zm R e) M \\<rbrakk>  \\<Longrightarrow> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> f = g", "apply (rule_tac R = R and M = \"Zm R e\" and N = M in Module.mHom_eq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> R module Zm R e\n 2. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> R module M\n 3. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> f \\<in> mHom R (Zm R e) M\n 4. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> g \\<in> mHom R (Zm R e) M\n 5. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier (Zm R e). f m = g m", "apply (simp add:Zm_Module)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> R module M\n 2. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> f \\<in> mHom R (Zm R e) M\n 3. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> g \\<in> mHom R (Zm R e) M\n 4. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier (Zm R e). f m = g m", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n     g \\<in> mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier (Zm R e). f m = g m", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n        g \\<in> mHom R (Zm R e) M; m \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f m = g m", "apply (simp add:Zm_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module M; f \\<in> mHom R (Zm R e) M;\n        g \\<in> mHom R (Zm R e) M; m = e\\<rbrakk>\n       \\<Longrightarrow> f e = g e", "apply (simp add:Zm_to_M_0 [of _ _ e])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mzeromap_mHom:\"\\<lbrakk>R module M; R module N\\<rbrakk> \\<Longrightarrow> \n                                     mzeromap M N \\<in> mHom R M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> mzeromap M N \\<in> mHom R M N", "apply (simp add:mHom_def aHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> mzeromap M N\n                      \\<in> carrier M \\<rightarrow> carrier N \\<and>\n                      mzeromap M N \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mzeromap M N a \\<plusminus>\\<^bsub>N\\<^esub>\n                             mzeromap M N b) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             mzeromap M N m)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> mzeromap M N \\<in> carrier M \\<rightarrow> carrier N\n 2. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> mzeromap M N \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mzeromap M N a \\<plusminus>\\<^bsub>N\\<^esub>\n                             mzeromap M N b) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             mzeromap M N m)", "apply (simp add:mzeromap_def, simp add:Module_def aGroup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> mzeromap M N \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mzeromap M N a \\<plusminus>\\<^bsub>N\\<^esub>\n                             mzeromap M N b) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             mzeromap M N m)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> mzeromap M N \\<in> extensional (carrier M)\n 2. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mzeromap M N a \\<plusminus>\\<^bsub>N\\<^esub>\n                             mzeromap M N b) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             mzeromap M N m)", "apply (simp add:mzeromap_def extensional_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mzeromap M N a \\<plusminus>\\<^bsub>N\\<^esub>\n                             mzeromap M N b) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier M.\n                             mzeromap M N\n                              (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             mzeromap M N m)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier M.\n                         \\<forall>b\\<in>carrier M.\n                            mzeromap M N\n                             (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                            mzeromap M N a \\<plusminus>\\<^bsub>N\\<^esub>\n                            mzeromap M N b\n 2. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mzeromap M N\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                            mzeromap M N m", "apply ((rule ballI)+, \n        frule_tac R = R and M = M in Module.module_is_ag,\n        frule_tac x = a and y = b in aGroup.ag_pOp_closed [of \"M\"], \n        assumption+,\n        simp add:mzeromap_def,\n        frule_tac R = R and M = N in Module.module_is_ag,\n        rule aGroup.ag_l_zero[THEN sym, of \"N\"], assumption+,\n        simp add:aGroup.ag_inc_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mzeromap M N\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                            mzeromap M N m", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module M; R module N; a \\<in> carrier R;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> mzeromap M N\n                          (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> mzeromap M N m", "apply (frule_tac a = a and m = m in Module.sc_mem [of M R], assumption+,\n        simp add:mzeromap_def,\n        rule Module.sc_a_0 [THEN sym], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) HOM_carrier:\"carrier (HOM\\<^bsub>R\\<^esub> M N) = mHom R M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (HOM\\<^bsub>R\\<^esub> M N) = mHom R M N", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mHom_Z_M:\"R module M \\<Longrightarrow> \n              mHom R (Zm R e) M = {mzeromap (Zm R e) M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow> mHom R (Zm R e) M = {mzeromap (Zm R e) M}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. R module M \\<Longrightarrow>\n    mHom R (Zm R e) M \\<subseteq> {mzeromap (Zm R e) M}\n 2. R module M \\<Longrightarrow>\n    {mzeromap (Zm R e) M} \\<subseteq> mHom R (Zm R e) M", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; x \\<in> mHom R (Zm R e) M\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {mzeromap (Zm R e) M}\n 2. R module M \\<Longrightarrow>\n    {mzeromap (Zm R e) M} \\<subseteq> mHom R (Zm R e) M", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; x \\<in> mHom R (Zm R e) M\\<rbrakk>\n       \\<Longrightarrow> x = mzeromap (Zm R e) M\n 2. R module M \\<Longrightarrow>\n    {mzeromap (Zm R e) M} \\<subseteq> mHom R (Zm R e) M", "apply (cut_tac Zm_Module [of e])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; x \\<in> mHom R (Zm R e) M;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> x = mzeromap (Zm R e) M\n 2. R module M \\<Longrightarrow>\n    {mzeromap (Zm R e) M} \\<subseteq> mHom R (Zm R e) M", "apply (frule mzeromap_mHom [of \"Zm R e\" M], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; x \\<in> mHom R (Zm R e) M; R module Zm R e;\n        mzeromap (Zm R e) M \\<in> mHom R (Zm R e) M\\<rbrakk>\n       \\<Longrightarrow> x = mzeromap (Zm R e) M\n 2. R module M \\<Longrightarrow>\n    {mzeromap (Zm R e) M} \\<subseteq> mHom R (Zm R e) M", "apply (simp add:Z_to_M)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow>\n    {mzeromap (Zm R e) M} \\<subseteq> mHom R (Zm R e) M", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; x \\<in> {mzeromap (Zm R e) M}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R (Zm R e) M", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; x = mzeromap (Zm R e) M\\<rbrakk>\n       \\<Longrightarrow> mzeromap (Zm R e) M \\<in> mHom R (Zm R e) M", "apply (cut_tac Zm_Module[of e],\n        simp add:mzeromap_mHom)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Module) Modules_single_carrier_isom:\"\\<lbrakk>R module N; carrier M = {\\<zero>};\n      carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk> \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> N", "apply (subgoal_tac \"bijec\\<^bsub>M, N\\<^esub> (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                          (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>) \\<in> mHom R M N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>};\n     bijec\\<^bsub>M,N\\<^esub> (\\<lambda>x\\<in>{\\<zero>}.\n                                  \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n     (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>)\n     \\<in> mHom R M N\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> N\n 2. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> (\\<lambda>x\\<in>{\\<zero>}.\n             \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                      (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>)\n                      \\<in> mHom R M N", "apply (simp add:misomorphic_def, blast,\n       subgoal_tac \"(\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>) \\<in> mHom R M N\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>};\n     (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>)\n     \\<in> mHom R M N\\<rbrakk>\n    \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> (\\<lambda>x\\<in>{\\<zero>}.\n             \\<zero>\\<^bsub>N\\<^esub>)\n 2. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>)\n                      \\<in> mHom R M N", "apply (simp add:bijec_def injec_def surjec_def mHom_def,\n       simp add:ker_def surj_to_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x\\<in>{\\<zero>}. \\<zero>\\<^bsub>N\\<^esub>)\n                      \\<in> mHom R M N", "apply (simp add:mHom_def aHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> (\\<zero> \\<plusminus> \\<zero> =\n                       \\<zero> \\<longrightarrow>\n                       \\<zero>\\<^bsub>N\\<^esub> =\n                       \\<zero>\\<^bsub>N\\<^esub> \\<plusminus>\\<^bsub>N\\<^esub>\n                       \\<zero>\\<^bsub>N\\<^esub> \\<and>\n                       (\\<forall>a\\<in>carrier R.\n                           (a \\<cdot>\\<^sub>s \\<zero> =\n                            \\<zero> \\<longrightarrow>\n                            \\<zero>\\<^bsub>N\\<^esub> =\n                            a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                            \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                           (a \\<cdot>\\<^sub>s \\<zero> \\<noteq>\n                            \\<zero> \\<longrightarrow>\n                            undefined =\n                            a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                            \\<zero>\\<^bsub>N\\<^esub>))) \\<and>\n                      (\\<zero> \\<plusminus> \\<zero> \\<noteq>\n                       \\<zero> \\<longrightarrow>\n                       undefined =\n                       \\<zero>\\<^bsub>N\\<^esub> \\<plusminus>\\<^bsub>N\\<^esub>\n                       \\<zero>\\<^bsub>N\\<^esub> \\<and>\n                       (\\<forall>a\\<in>carrier R.\n                           (a \\<cdot>\\<^sub>s \\<zero> =\n                            \\<zero> \\<longrightarrow>\n                            \\<zero>\\<^bsub>N\\<^esub> =\n                            a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                            \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                           (a \\<cdot>\\<^sub>s \\<zero> \\<noteq>\n                            \\<zero> \\<longrightarrow>\n                            undefined =\n                            a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                            \\<zero>\\<^bsub>N\\<^esub>)))", "apply (cut_tac ag_inc_zero, simp add:ag_l_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>N\\<^esub> =\n                      \\<zero>\\<^bsub>N\\<^esub> \\<plusminus>\\<^bsub>N\\<^esub>\n                      \\<zero>\\<^bsub>N\\<^esub> \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          (a \\<cdot>\\<^sub>s \\<zero> =\n                           \\<zero> \\<longrightarrow>\n                           \\<zero>\\<^bsub>N\\<^esub> =\n                           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                           \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                          (a \\<cdot>\\<^sub>s \\<zero> \\<noteq>\n                           \\<zero> \\<longrightarrow>\n                           undefined =\n                           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                           \\<zero>\\<^bsub>N\\<^esub>))", "apply (frule_tac R = R and M = N in Module.module_is_ag,\n        frule aGroup.ag_inc_zero[of N],\n        simp add:aGroup.ag_l_zero[of N])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; carrier M = {\\<zero>};\n     carrier N = {\\<zero>\\<^bsub>N\\<^esub>}; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         (a \\<cdot>\\<^sub>s \\<zero> =\n                          \\<zero> \\<longrightarrow>\n                          \\<zero>\\<^bsub>N\\<^esub> =\n                          a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                         (a \\<cdot>\\<^sub>s \\<zero> \\<noteq>\n                          \\<zero> \\<longrightarrow>\n                          undefined =\n                          a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          \\<zero>\\<^bsub>N\\<^esub>)", "apply (simp add:sc_a_0 Module.sc_a_0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) Zm_isom:\"(Zm R (e::'a)) \\<cong>\\<^bsub>R\\<^esub> (Zm R (u::'b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Zm R e \\<cong>\\<^bsub>R\\<^esub> Zm R u", "apply (cut_tac Zm_Module[of e], cut_tac Zm_Module[of u])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module Zm R e; R module Zm R u\\<rbrakk>\n    \\<Longrightarrow> Zm R e \\<cong>\\<^bsub>R\\<^esub> Zm R u", "apply (rule_tac R = R and M = \"Zm R e\" and N = \"Zm R u\" in \n                Module.Modules_single_carrier_isom, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module Zm R e; R module Zm R u\\<rbrakk>\n    \\<Longrightarrow> carrier (Zm R e) = {\\<zero>\\<^bsub>Zm R e\\<^esub>}\n 2. \\<lbrakk>R module Zm R e; R module Zm R u\\<rbrakk>\n    \\<Longrightarrow> carrier (Zm R u) = {\\<zero>\\<^bsub>Zm R u\\<^esub>}", "apply (simp add:Zm_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) HOM_Z_M_0:\"R module M \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> (Zm R e) M \\<cong>\\<^bsub>R\\<^esub> (Zm R e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow>\n    HOM\\<^bsub>R\\<^esub> Zm R e M \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (cut_tac Zm_Module[of e],\n        frule_tac M = \"Zm R e\" and N = M in Module.HOM_is_module,\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> Zm R e M\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> Zm R e\n                         M \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (cut_tac M = \"Zm R e\" and N = M in HOM_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> Zm R e M;\n     carrier (HOM\\<^bsub>R\\<^esub> Zm R e M) = mHom R (Zm R e) M\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> Zm R e\n                         M \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (simp add: mHom_Z_M)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> Zm R e M;\n     carrier (HOM\\<^bsub>R\\<^esub> Zm R e M) =\n     {mzeromap (Zm R e) M}\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> Zm R e\n                         M \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (simp add:Module.zero_HOM)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> Zm R e M;\n     carrier (HOM\\<^bsub>R\\<^esub> Zm R e M) =\n     {\\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> Zm R e M\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> Zm R e\n                         M \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (rule_tac R = R and M = \"HOM\\<^bsub>R\\<^esub> (Zm R e) M\" and N = \"Zm R e\" in \n         Module.Modules_single_carrier_isom, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> Zm R e M;\n     carrier (HOM\\<^bsub>R\\<^esub> Zm R e M) =\n     {\\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> Zm R e M\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> carrier (Zm R e) = {\\<zero>\\<^bsub>Zm R e\\<^esub>}", "apply (simp add:Zm_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) M_to_Z:\"\\<lbrakk>R module M; f \\<in> mHom R M (Zm R e); \n                               g \\<in> mHom R M (Zm R e)\\<rbrakk>  \\<Longrightarrow> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n     g \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> f = g", "apply (rule Module.mHom_eq [of M _ \"Zm R e\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n     g \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> R module Zm R e\n 2. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n     g \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> mHom R M (Zm R e)\n 3. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n     g \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> g \\<in> mHom R M (Zm R e)\n 4. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n     g \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier M. f m = g m", "apply (simp add:Zm_Module, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n     g \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier M. f m = g m", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n        g \\<in> mHom R M (Zm R e); m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> f m = g m", "apply (frule_tac m = m in Module.mHom_mem [of M _ \"Zm R e\" f],\n        simp add:Zm_Module, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n        g \\<in> mHom R M (Zm R e); m \\<in> carrier M;\n        f m \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f m = g m", "apply (frule_tac m = m in Module.mHom_mem [of M _ \"Zm R e\" g],\n        simp add:Zm_Module, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n        g \\<in> mHom R M (Zm R e); m \\<in> carrier M;\n        f m \\<in> carrier (Zm R e); g m \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f m = g m", "apply (simp add:Zm_carrier)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mHom_to_zero:\"R module M \\<Longrightarrow>  mHom R M (Zm R e) = \n                                              {mzeromap M (Zm R e)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow> mHom R M (Zm R e) = {mzeromap M (Zm R e)}", "apply (frule mzeromap_mHom [of M \"Zm R e\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. R module M \\<Longrightarrow> R module Zm R e\n 2. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mHom R M (Zm R e) = {mzeromap M (Zm R e)}", "apply (simp add:Zm_Module)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mHom R M (Zm R e) = {mzeromap M (Zm R e)}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mHom R M (Zm R e) \\<subseteq> {mzeromap M (Zm R e)}\n 2. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {mzeromap M (Zm R e)} \\<subseteq> mHom R M (Zm R e)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; mzeromap M (Zm R e) \\<in> mHom R M (Zm R e);\n        x \\<in> mHom R M (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {mzeromap M (Zm R e)}\n 2. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {mzeromap M (Zm R e)} \\<subseteq> mHom R M (Zm R e)", "apply (frule_tac f = \"mzeromap M (Zm R e)\" and g = x in M_to_Z [of M],\n                                      assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; mzeromap M (Zm R e) \\<in> mHom R M (Zm R e);\n        x \\<in> mHom R M (Zm R e); mzeromap M (Zm R e) = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {mzeromap M (Zm R e)}\n 2. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {mzeromap M (Zm R e)} \\<subseteq> mHom R M (Zm R e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M;\n     mzeromap M (Zm R e) \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {mzeromap M (Zm R e)} \\<subseteq> mHom R M (Zm R e)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; mzeromap M (Zm R e) \\<in> mHom R M (Zm R e);\n        x \\<in> {mzeromap M (Zm R e)}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R M (Zm R e)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) carrier_HOM_M_Z:\"R module M \\<Longrightarrow> \n                 carrier (HOM\\<^bsub>R\\<^esub> M (Zm R e)) = {mzeromap M (Zm R e)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow>\n    carrier (HOM\\<^bsub>R\\<^esub> M Zm R e) = {mzeromap M (Zm R e)}", "apply (subst HOM_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow> mHom R M (Zm R e) = {mzeromap M (Zm R e)}", "apply (simp add:mHom_to_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) HOM_M_Z_0:\"R module M \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> M (Zm R e) \\<cong>\\<^bsub>R\\<^esub> (Zm R e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R module M \\<Longrightarrow>\n    HOM\\<^bsub>R\\<^esub> M Zm R e \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (cut_tac Zm_Module[of e],\n        frule_tac M = M and N = \"Zm R e\" in Module.HOM_is_module,\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> M Zm R e\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> M\n                         Zm R e \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (frule_tac M = M and e = e in carrier_HOM_M_Z)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> M Zm R e;\n     carrier (HOM\\<^bsub>R\\<^esub> M Zm R e) =\n     {mzeromap M (Zm R e)}\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> M\n                         Zm R e \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (simp add:Module.zero_HOM)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> M Zm R e;\n     carrier (HOM\\<^bsub>R\\<^esub> M Zm R e) =\n     {\\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M Zm R e\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> HOM\\<^bsub>R\\<^esub> M\n                         Zm R e \\<cong>\\<^bsub>R\\<^esub> Zm R e", "apply (rule Module.Modules_single_carrier_isom, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module Zm R e;\n     R module HOM\\<^bsub>R\\<^esub> M Zm R e;\n     carrier (HOM\\<^bsub>R\\<^esub> M Zm R e) =\n     {\\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M Zm R e\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> carrier (Zm R e) = {\\<zero>\\<^bsub>Zm R e\\<^esub>}", "apply (simp add:Zm_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) M_to_Z_0:\"\\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk> \\<Longrightarrow>\n                              ker\\<^bsub>M,(Zm R e)\\<^esub> f = carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M,Zm R e\\<^esub> f = carrier M", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {a \\<in> carrier M.\n                       f a = \\<zero>\\<^bsub>Zm R e\\<^esub>} =\n                      carrier M", "apply (simp add:Zm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M;\n     f \\<in> mHom R M\n              \\<lparr>carrier = {e},\n                 pop = \\<lambda>x\\<in>{e}. \\<lambda>y\\<in>{e}. e,\n                 mop = \\<lambda>x\\<in>{e}. e, zero = e,\n                 sprod =\n                   \\<lambda>r\\<in>carrier R.\n                      \\<lambda>x\\<in>{e}. e\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> {a \\<in> carrier M. f a = e} = carrier M", "apply (fold Zm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {a \\<in> carrier M. f a = e} = carrier M", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {a \\<in> carrier M. f a = e} \\<subseteq> carrier M\n 2. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> carrier M \\<subseteq> {a \\<in> carrier M. f a = e}", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n        x \\<in> {a \\<in> carrier M. f a = e}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 2. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> carrier M \\<subseteq> {a \\<in> carrier M. f a = e}", "apply (simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> carrier M \\<subseteq> {a \\<in> carrier M. f a = e}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e);\n        x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> f x = e", "apply (cut_tac Zm_Module[of e])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e); x \\<in> carrier M;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> f x = e", "apply (frule_tac R = R and M = M and N = \"Zm R e\" and f = f and m = x in \n         Module.mHom_mem, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; f \\<in> mHom R M (Zm R e); x \\<in> carrier M;\n        R module Zm R e; f x \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f x = e", "apply (simp add:Zm_carrier)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  exact3 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, 'a \\<Rightarrow> 'b,\n    ('b, 'r, 'm1) Module_scheme, 'b \\<Rightarrow> 'c, ('c, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\" where\n  \"exact3 R L0 h0 L1 h1 L2 == h0 ` (carrier L0) = ker\\<^bsub>(L1),(L2)\\<^esub> h1\""], ["", "definition\n  exact4 :: \"[('r, 'm) Ring_scheme, ('a0, 'r, 'm1) Module_scheme, 'a0 \\<Rightarrow> 'a1, \n    ('a1, 'r, 'm1) Module_scheme, 'a1 \\<Rightarrow> 'a2, ('a2, 'r, 'm1) Module_scheme, \n    'a2 \\<Rightarrow> 'a3, ('a3, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\" where\n  \"exact4 R L0 h0 L1 h1 L2 h2 L3 \\<longleftrightarrow> h0 ` (carrier L0) = ker\\<^bsub>(L1),(L2)\\<^esub> h1 \\<and> \n                                     h1 ` (carrier L1) = ker\\<^bsub>(L2),(L3)\\<^esub> h2 \""], ["", "definition\n  exact5 :: \"[('r, 'm) Ring_scheme, ('a0, 'r, 'm1) Module_scheme, 'a0 \\<Rightarrow> 'a1,  \n    ('a1, 'r, 'm1) Module_scheme, 'a1 \\<Rightarrow> 'a2, ('a2, 'r, 'm1) Module_scheme, \n    'a2 \\<Rightarrow> 'a3, ('a3, 'r, 'm1) Module_scheme, 'a3 \\<Rightarrow> 'a4, \n    ('a4, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\" where\n  \"exact5 R L0 h0 L1 h1 L2 h2 L3 h3 L4 == h0 ` (carrier L0) = ker\\<^bsub>(L1),(L2)\\<^esub> h1 \\<and>\n    h1 ` (carrier L1) = ker\\<^bsub>(L2),(L3)\\<^esub> h2 \\<and> h2 `(carrier L2) = ker\\<^bsub>(L3),(L4)\\<^esub> h3 \""], ["", "definition\n  exact8 :: \"[('r, 'm) Ring_scheme, ('a0, 'r, 'm1) Module_scheme, 'a0 \\<Rightarrow> 'a1, \n    ('a1, 'r, 'm1) Module_scheme, 'a1 \\<Rightarrow> 'a2, ('a2, 'r, 'm1) Module_scheme, \n    'a2 \\<Rightarrow> 'a3, ('a3, 'r, 'm1) Module_scheme, 'a3 \\<Rightarrow> 'a4,  \n    ('a4, 'r, 'm1) Module_scheme, 'a4 \\<Rightarrow> 'a5, ('a5, 'r, 'm1) Module_scheme,\n    'a5 \\<Rightarrow> 'a6, ('a6, 'r, 'm1) Module_scheme, 'a6 \\<Rightarrow> 'a7, \n    ('a7, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\"  where\n  \"exact8 R L0 h0 L1 h1 L2 h2 L3 h3 L4 h4 L5 h5 L6 h6 L7 \\<longleftrightarrow>\n    h0 ` (carrier L0) = ker\\<^bsub>(L1),(L2)\\<^esub> h1 \\<and> h1 ` (carrier L1) = ker\\<^bsub>(L2),(L3)\\<^esub> h2 \\<and>\n    h2 ` (carrier L2) = ker\\<^bsub>(L3),(L4)\\<^esub> h3 \\<and> h3 ` (carrier L3) = ker\\<^bsub>(L4),(L5)\\<^esub> h4 \\<and> \n    h4 ` (carrier L4) = ker\\<^bsub>(L5),(L6)\\<^esub> h5 \\<and> h5 ` (carrier L5) = ker\\<^bsub>(L6),(L7)\\<^esub> h6\""], ["", "lemma (in Ring) exact3_comp_0:\"\\<lbrakk>R module L; R module M; R module N; \n       f \\<in> mHom R L M; g \\<in> mHom R M N; exact3 R L f M g N\\<rbrakk> \\<Longrightarrow> \n      compos L g f = mzeromap L N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; exact3 R L f M g N\\<rbrakk>\n    \\<Longrightarrow> compos L g f = mzeromap L N", "apply (frule Module.mHom_compos [of M R L N f g], assumption+,\n       frule mzeromap_mHom [of L N], assumption,\n       rule Module.mHom_eq [of L R N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; exact3 R L f M g N; compos L g f \\<in> mHom R L N;\n     mzeromap L N \\<in> mHom R L N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier L.\n                         compos L g f m = mzeromap L N m", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; exact3 R L f M g N;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> compos L g f m = mzeromap L N m", "apply (subst compos_def)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; exact3 R L f M g N;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> compose (carrier L) g f m = mzeromap L N m", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> compose (carrier L) g f m = mzeromap L N m", "apply (cut_tac mHom_func[of f L M])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L;\n        f \\<in> carrier L \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> compose (carrier L) g f m = mzeromap L N m\n 2. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> f \\<in> mHom R L M", "apply (frule_tac a = m in mem_in_image [of f \"carrier L\" \"carrier M\"], \n          assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L; f \\<in> carrier L \\<rightarrow> carrier M;\n        f m \\<in> f ` carrier L\\<rbrakk>\n       \\<Longrightarrow> compose (carrier L) g f m = mzeromap L N m\n 2. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> f \\<in> mHom R L M", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L; f \\<in> carrier L \\<rightarrow> carrier M;\n        f m \\<in> ker\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier L) g f m = mzeromap L N m\n 2. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; f ` carrier L = ker\\<^bsub>M,N\\<^esub> g;\n        compos L g f \\<in> mHom R L N; mzeromap L N \\<in> mHom R L N;\n        m \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> f \\<in> mHom R L M", "apply (simp add:ker_def mzeromap_def compose_def, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) exact_im_sub_kern:\"\\<lbrakk>R module L; R module M; R module N; \n             f \\<in> mHom R L M; g \\<in> mHom R M N; exact3 R L f M g N\\<rbrakk> \\<Longrightarrow> \n           f ` (carrier L) \\<subseteq> ker\\<^bsub>M,N\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; exact3 R L f M g N\\<rbrakk>\n    \\<Longrightarrow> f ` carrier L \\<subseteq> ker\\<^bsub>M,N\\<^esub> g", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mzero_im_sub_ker:\"\\<lbrakk>R module L; R module M; R module N; \n       f \\<in> mHom R L M; g \\<in> mHom R M N; compos L g f = mzeromap L N\\<rbrakk> \\<Longrightarrow> \n      f ` (carrier L) \\<subseteq> ker\\<^bsub>M,N\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; compos L g f = mzeromap L N\\<rbrakk>\n    \\<Longrightarrow> f ` carrier L \\<subseteq> ker\\<^bsub>M,N\\<^esub> g", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; compos L g f = mzeromap L N;\n        x \\<in> f ` carrier L\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>M,N\\<^esub> g", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; compos L g f = mzeromap L N;\n        \\<exists>xa\\<in>carrier L. x = f xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>M,N\\<^esub> g", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; compos L g f = mzeromap L N;\n        xa \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> f xa \\<in> ker\\<^bsub>M,N\\<^esub> g", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; compos L g f = mzeromap L N;\n        xa \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> f xa \\<in> carrier M \\<and>\n                         g (f xa) = \\<zero>\\<^bsub>N\\<^esub>", "apply (simp add:Module.mHom_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; compos L g f = mzeromap L N;\n        xa \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> g (f xa) = \\<zero>\\<^bsub>N\\<^esub>", "apply (simp add:compos_def compose_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N;\n        (\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N;\n        xa \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> g (f xa) = \\<zero>\\<^bsub>N\\<^esub>", "apply (subgoal_tac \"(\\<lambda>x\\<in>carrier L. g (f x)) xa = mzeromap L N xa\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N;\n        (\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N;\n        xa \\<in> carrier L;\n        (\\<lambda>x\\<in>carrier L. g (f x)) xa = mzeromap L N xa\\<rbrakk>\n       \\<Longrightarrow> g (f xa) = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N;\n        (\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N;\n        xa \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x\\<in>carrier L. g (f x)) xa =\n                         mzeromap L N xa", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N;\n        (\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N;\n        xa \\<in> carrier L\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x\\<in>carrier L. g (f x)) xa =\n                         mzeromap L N xa\n 2. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N;\n        (\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N;\n        xa \\<in> carrier L;\n        (\\<lambda>x\\<in>carrier L. g (f x)) xa = mzeromap L N xa\\<rbrakk>\n       \\<Longrightarrow> g (f xa) = \\<zero>\\<^bsub>N\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N;\n        (\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N;\n        xa \\<in> carrier L;\n        (\\<lambda>x\\<in>carrier L. g (f x)) xa = mzeromap L N xa\\<rbrakk>\n       \\<Longrightarrow> g (f xa) = \\<zero>\\<^bsub>N\\<^esub>", "apply (thin_tac \"(\\<lambda>x\\<in>carrier L. g (f x)) = mzeromap L N\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; xa \\<in> carrier L;\n        (\\<lambda>x\\<in>carrier L. g (f x)) xa = mzeromap L N xa\\<rbrakk>\n       \\<Longrightarrow> g (f xa) = \\<zero>\\<^bsub>N\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; xa \\<in> carrier L;\n        g (f xa) = mzeromap L N xa\\<rbrakk>\n       \\<Longrightarrow> mzeromap L N xa = \\<zero>\\<^bsub>N\\<^esub>", "apply (simp add:mzeromap_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) left_exact_injec:\"\\<lbrakk>R module M; R module N; \n      z \\<in> mHom R (Zm R e) M; f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk> \\<Longrightarrow>\n      injec\\<^bsub>M,N\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk>\n    \\<Longrightarrow> injec\\<^bsub>M,N\\<^esub> f", "apply (simp add:injec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk>\n    \\<Longrightarrow> f \\<in> aHom M N \\<and>\n                      ker\\<^bsub>M,N\\<^esub> f = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk>\n    \\<Longrightarrow> f \\<in> aHom M N\n 2. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M,N\\<^esub> f = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add:mHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; exact3 R (Zm R e) z M f N\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M,N\\<^esub> f = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N;\n     z ` carrier (Zm R e) = ker\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M,N\\<^esub> f = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add:Zm_def, fold Zm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; {z e} = ker\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M,N\\<^esub> f = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add: Zm_to_M_0 [of M z e])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) injec_left_exact:\"\\<lbrakk>R module M; R module N; \n       z \\<in> mHom R (Zm R e) M; f \\<in> mHom R M N; injec\\<^bsub>M,N\\<^esub> f\\<rbrakk> \\<Longrightarrow> \n       exact3 R (Zm R e) z M f N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; injec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> exact3 R (Zm R e) z M f N", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; injec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> z ` carrier (Zm R e) = ker\\<^bsub>M,N\\<^esub> f", "apply (simp add:Zm_def, fold Zm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; injec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> {z e} = ker\\<^bsub>M,N\\<^esub> f", "apply (simp add:Zm_to_M_0 [of  \"M\" \"z\" \"e\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; injec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} = ker\\<^bsub>M,N\\<^esub> f", "apply (simp add:injec_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*  injec_mHom_image\n                 N\n                 | \\ x      x `(N) \\<subseteq> f `(M1)     \n                 |  \\            \n                M1 \\<rightarrow> M2\n                   f                     *)"], ["", "lemma (in Ring) injec_mHom_image:\"\\<lbrakk>R module N; R module M1; R module M2; \n       x \\<in> mHom R N M2; f \\<in> mHom R M1 M2; x ` (carrier N) \\<subseteq> f ` (carrier M1);\n       injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\\<Longrightarrow>\n   (\\<lambda>n \\<in>(carrier N). (SOME m. (m \\<in> carrier M1 \\<and> x n = f m))) \\<in> mHom R N M1 \\<and>\n   compos N f (\\<lambda>n \\<in> (carrier N). (SOME m. m \\<in> carrier M1 \\<and> x n = f m)) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1 \\<and>\n                      compos N f\n                       (\\<lambda>n\\<in>carrier N.\n                           SOME m. m \\<in> carrier M1 \\<and> x n = f m) =\n                      x", "apply (subgoal_tac \"(\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m) \\<in> \n       mHom R N M1\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f;\n     (\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n     \\<in> mHom R N M1\\<rbrakk>\n    \\<Longrightarrow> compos N f\n                       (\\<lambda>n\\<in>carrier N.\n                           SOME m. m \\<in> carrier M1 \\<and> x n = f m) =\n                      x\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (rule Module.mHom_eq, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f;\n     (\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n     \\<in> mHom R N M1\\<rbrakk>\n    \\<Longrightarrow> compos N f\n                       (\\<lambda>n\\<in>carrier N.\n                           SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M2\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f;\n     (\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n     \\<in> mHom R N M1\\<rbrakk>\n    \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f;\n     (\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n     \\<in> mHom R N M1\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier N.\n                         compos N f\n                          (\\<lambda>n\\<in>carrier N.\n                              SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                          m =\n                         x m\n 4. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (simp add:Module.mHom_compos, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f;\n     (\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n     \\<in> mHom R N M1\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier N.\n                         compos N f\n                          (\\<lambda>n\\<in>carrier N.\n                              SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                          m =\n                         x m\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> compos N f\n                          (\\<lambda>n\\<in>carrier N.\n                              SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                          m =\n                         x m\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (simp add:compos_def compose_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> f (SOME ma.\n                               ma \\<in> carrier M1 \\<and> x m = f ma) =\n                         x m\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (thin_tac \"(\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> x n = f m) \\<in> \n                   mHom R N M1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> f (SOME ma.\n                               ma \\<in> carrier M1 \\<and> x m = f ma) =\n                         x m\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (frule_tac m = m in Module.mHom_mem [of N R M2 x], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> f (SOME ma.\n                               ma \\<in> carrier M1 \\<and> x m = f ma) =\n                         x m\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (cut_tac mHom_func[of x N M2],\n        frule_tac a = m in mem_in_image[of x \"carrier N\" \"carrier M2\"], \n        assumption+,\n        frule_tac c = \"x m\" in subsetD [of \"x ` carrier N\" \"f ` carrier M1\"], \n        assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2; x \\<in> carrier N \\<rightarrow> carrier M2;\n        x m \\<in> x ` carrier N; x m \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> f (SOME ma.\n                               ma \\<in> carrier M1 \\<and> x m = f ma) =\n                         x m\n 2. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (simp add:image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2; x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N. x m = x xa;\n        \\<exists>xa\\<in>carrier M1. x m = f xa\\<rbrakk>\n       \\<Longrightarrow> f (SOME ma.\n                               ma \\<in> carrier M1 \\<and> x m = f ma) =\n                         x m\n 2. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>m xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2; x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N. x m = x xa;\n        \\<exists>xa\\<in>carrier M1. x m = f xa;\n        xa \\<in> carrier M1 \\<and> x m = f xa\\<rbrakk>\n       \\<Longrightarrow> f xa = x m\n 2. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (thin_tac \"\\<exists>xa\\<in>carrier M1. x m = f xa\", erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>m xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2; x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N. x m = x xa; xa \\<in> carrier M1;\n        x m = f xa\\<rbrakk>\n       \\<Longrightarrow> f xa = x m\n 2. \\<And>m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; m \\<in> carrier N;\n        x m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (rotate_tac -1, rule sym, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> mHom R N M1", "apply (simp add:mHom_def[of R N M1] aHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> carrier N \\<rightarrow> carrier M1 \\<and>\n                      (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                  f m) =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m))) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                  f ma) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x m = f ma)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and> x m = f ma)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                          SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                      \\<in> carrier N \\<rightarrow> carrier M1\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                  f m) =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m))) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                  f ma) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x m = f ma)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and> x m = f ma)))", "apply (rule Pi_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                             SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                          xa\n                         \\<in> carrier M1\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                  f m) =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m))) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                  f ma) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x m = f ma)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and> x m = f ma)))", "apply (cut_tac mHom_func[of x N M2],\n        frule_tac a = xa in mem_in_image[of x \"carrier N\" \"carrier M2\"], \n        assumption+,\n        frule_tac c = \"x xa\" in subsetD [of \"x ` carrier N\" \"f ` carrier M1\"], \n        assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; xa \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        x xa \\<in> x ` carrier N; x xa \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n\\<in>carrier N.\n                             SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n                          xa\n                         \\<in> carrier M1\n 2. \\<And>xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                  f m) =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m))) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                  f ma) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x m = f ma)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and> x m = f ma)))", "apply (simp add:image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; xa \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xb\\<in>carrier N. x xa = x xb;\n        \\<exists>xb\\<in>carrier M1. x xa = f xb\\<rbrakk>\n       \\<Longrightarrow> (SOME m. m \\<in> carrier M1 \\<and> x xa = f m)\n                         \\<in> carrier M1\n 2. \\<And>xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                  f m) =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m))) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                  f ma) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x m = f ma)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and> x m = f ma)))", "apply (rule someI2_ex, blast, simp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                  f m) =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                              (SOME m.\n                                  m \\<in> carrier M1 \\<and>\n                                  x b = f m))) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                  f ma) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and>\n                                  x m = f ma)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                              (SOME ma.\n                                  ma \\<in> carrier M1 \\<and> x m = f ma)))", "apply (frule_tac R = R and M = N in Module.module_is_ag,\n       simp add:aGroup.ag_pOp_closed, \n       simp add:Module.sc_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (SOME m.\n                                 m \\<in> carrier M1 \\<and>\n                                 x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                 f m) =\n                             (SOME m.\n                                 m \\<in> carrier M1 \\<and>\n                                 x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                             (SOME m.\n                                 m \\<in> carrier M1 \\<and>\n                                 x b = f m)) \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (SOME ma.\n                                 ma \\<in> carrier M1 \\<and>\n                                 x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                 f ma) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                             (SOME ma.\n                                 ma \\<in> carrier M1 \\<and> x m = f ma))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (SOME m.\n                                m \\<in> carrier M1 \\<and>\n                                x (a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                                f m) =\n                            (SOME m.\n                                m \\<in> carrier M1 \\<and>\n                                x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                            (SOME m. m \\<in> carrier M1 \\<and> x b = f m)\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (rule ballI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                         (SOME m. m \\<in> carrier M1 \\<and> x b = f m)\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (frule_tac x = a and y = b in aGroup.ag_pOp_closed [of \"N\"], \n                                                            assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                         (SOME m. m \\<in> carrier M1 \\<and> x b = f m)\n 2. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (cut_tac mHom_func[of x N M2],\n        frule_tac a = \"a \\<plusminus>\\<^bsub>N\\<^esub> b\" in mem_in_image[of x \"carrier N\" \"carrier M2\"],\n        assumption+,\n        frule_tac c = \"x (a \\<plusminus>\\<^bsub>N\\<^esub> b)\" in subsetD[of \"x ` carrier N\" \n                                      \"f ` carrier M1\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) \\<in> x ` carrier N;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                         (SOME m. m \\<in> carrier M1 \\<and> x b = f m)\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (frule_tac a = a in mem_in_image[of x \"carrier N\" \"carrier M2\"],\n        assumption+,\n        frule_tac c = \"x a\" in subsetD[of \"x ` carrier N\" \n                                      \"f ` carrier M1\"], assumption+,\n        frule_tac a = b in mem_in_image[of x \"carrier N\" \"carrier M2\"],\n        assumption+,\n        frule_tac c = \"x b\" in subsetD[of \"x ` carrier N\" \n                                      \"f ` carrier M1\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) \\<in> x ` carrier N;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) \\<in> f ` carrier M1;\n        x a \\<in> x ` carrier N; x a \\<in> f ` carrier M1;\n        x b \\<in> x ` carrier N; x b \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                         (SOME m. m \\<in> carrier M1 \\<and> x b = f m)\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (simp add:image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = x xa;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xa;\n        \\<exists>xa\\<in>carrier N. x a = x xa;\n        \\<exists>xa\\<in>carrier M1. x a = f xa;\n        \\<exists>xa\\<in>carrier N. x b = x xa;\n        \\<exists>xa\\<in>carrier M1. x b = f xa\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                         (SOME m. m \\<in> carrier M1 \\<and> x b = f m)\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = x xa;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xa;\n        \\<exists>xa\\<in>carrier N. x a = x xa;\n        \\<exists>xa\\<in>carrier M1. x a = f xa;\n        \\<exists>xa\\<in>carrier N. x b = x xa;\n        \\<exists>xa\\<in>carrier M1. x b = f xa;\n        xa \\<in> carrier M1 \\<and> x b = f xa\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x a = f m) \\<plusminus>\\<^bsub>M1\\<^esub>\n                         xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = x xa;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xa;\n        \\<exists>xa\\<in>carrier N. x a = x xa;\n        \\<exists>xa\\<in>carrier M1. x a = f xa;\n        \\<exists>xa\\<in>carrier N. x b = x xa;\n        \\<exists>xa\\<in>carrier M1. x b = f xa;\n        xa \\<in> carrier M1 \\<and> x b = f xa;\n        xaa \\<in> carrier M1 \\<and> x a = f xaa\\<rbrakk>\n       \\<Longrightarrow> (SOME m.\n                             m \\<in> carrier M1 \\<and>\n                             x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f m) =\n                         xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier N.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = x xa;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xa;\n        \\<exists>xa\\<in>carrier N. x a = x xa;\n        \\<exists>xa\\<in>carrier M1. x a = f xa;\n        \\<exists>xa\\<in>carrier N. x b = x xa;\n        \\<exists>xa\\<in>carrier M1. x b = f xa;\n        xa \\<in> carrier M1 \\<and> x b = f xa;\n        xaa \\<in> carrier M1 \\<and> x a = f xaa;\n        xb \\<in> carrier M1 \\<and>\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (thin_tac \"\\<exists>xa\\<in>carrier N. x ( a \\<plusminus>\\<^bsub>N\\<^esub> b) = x xa\",\n        thin_tac \"\\<exists>xa\\<in>carrier M1. x ( a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xa\",\n        thin_tac \"\\<exists>xa\\<in>carrier N. x a = x xa\",\n        thin_tac \"\\<exists>xa\\<in>carrier M1. x a = f xa\",\n        thin_tac \"\\<exists>xa\\<in>carrier N. x b = x xa\",\n        thin_tac \"\\<exists>xa\\<in>carrier M1. x b = f xa\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        xa \\<in> carrier M1 \\<and> x b = f xa;\n        xaa \\<in> carrier M1 \\<and> x a = f xaa;\n        xb \\<in> carrier M1 \\<and>\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply ((erule conjE)+, fold image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x b = f xa; xaa \\<in> carrier M1; x a = f xaa; xb \\<in> carrier M1;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (frule_tac R = R and M = N and N = M2 and f = x and m = a and n = b in\n        Module.mHom_add, assumption+, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x b = f xa; xaa \\<in> carrier M1; x a = f xaa; xb \\<in> carrier M1;\n        f xaa \\<plusminus>\\<^bsub>M2\\<^esub> f xa = f xb;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (simp add:Module.mHom_add[THEN sym, of _ _ _ f])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x b = f xa; xaa \\<in> carrier M1; x a = f xaa; xb \\<in> carrier M1;\n        f (xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa) = f xb;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (frule_tac R = R and M = M1 and N = M2 and f = f in Module.minjec_inj,\n        assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x b = f xa; xaa \\<in> carrier M1; x a = f xaa; xb \\<in> carrier M1;\n        f (xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa) = f xb;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb;\n        inj_on f (carrier M1)\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (frule_tac R = R and M = M1 in Module.module_is_ag,\n        frule_tac x = xaa and y = xa in aGroup.ag_pOp_closed[of M1], \n        assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x b = f xa; xaa \\<in> carrier M1; x a = f xaa; xb \\<in> carrier M1;\n        f (xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa) = f xb;\n        x (a \\<plusminus>\\<^bsub>N\\<^esub> b) = f xb; inj_on f (carrier M1);\n        aGroup M1;\n        xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> xb = xaa \\<plusminus>\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a b.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2\n 3. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (simp add:inj_on_def, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n     f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n     injec\\<^bsub>M1,M2\\<^esub> f; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (SOME ma.\n                                ma \\<in> carrier M1 \\<and>\n                                x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                                f ma) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (frule_tac a = a and m = m in Module.sc_mem [of N R], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)", "apply (cut_tac mHom_func[of x N M2],\n        frule_tac a = \"a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\" in mem_in_image[of x \"carrier N\" \"carrier M2\"],\n        assumption+,\n        frule_tac c = \"x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m)\" in subsetD[of \"x ` carrier N\" \n                                      \"f ` carrier M1\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) \\<in> x ` carrier N;\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m)\n        \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (frule_tac a = m in mem_in_image[of x \"carrier N\" \"carrier M2\"],\n        assumption+,\n        frule_tac c = \"x m\" in subsetD[of \"x ` carrier N\" \n                                      \"f ` carrier M1\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) \\<in> x ` carrier N;\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) \\<in> f ` carrier M1;\n        x m \\<in> x ` carrier N; x m \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (thin_tac \"x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) \\<in> x ` carrier N\",\n        thin_tac \"x m \\<in> x ` carrier N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) \\<in> f ` carrier M1;\n        x m \\<in> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (simp add:image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xa;\n        \\<exists>xa\\<in>carrier M1. x m = f xa\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (SOME ma. ma \\<in> carrier M1 \\<and> x m = f ma)\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xa;\n        \\<exists>xa\\<in>carrier M1. x m = f xa;\n        xa \\<in> carrier M1 \\<and> x m = f xa\\<rbrakk>\n       \\<Longrightarrow> (SOME ma.\n                             ma \\<in> carrier M1 \\<and>\n                             x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             f ma) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        \\<exists>xa\\<in>carrier M1.\n           x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xa;\n        \\<exists>xa\\<in>carrier M1. x m = f xa;\n        xa \\<in> carrier M1 \\<and> x m = f xa;\n        xaa \\<in> carrier M1 \\<and>\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xaa\\<rbrakk>\n       \\<Longrightarrow> xaa = a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (thin_tac \"\\<exists>xa\\<in>carrier M1. x m = f xa\",\n        thin_tac \"\\<exists>xa\\<in>carrier M1. x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xa\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2;\n        xa \\<in> carrier M1 \\<and> x m = f xa;\n        xaa \\<in> carrier M1 \\<and>\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xaa\\<rbrakk>\n       \\<Longrightarrow> xaa = a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x m = f xa; xaa \\<in> carrier M1;\n        x (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) = f xaa\\<rbrakk>\n       \\<Longrightarrow> xaa = a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (simp add:Module.mHom_lin)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x m = f xa; xaa \\<in> carrier M1;\n        a \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> f xa = f xaa\\<rbrakk>\n       \\<Longrightarrow> xaa = a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (simp add:Module.mHom_lin[THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x m = f xa; xaa \\<in> carrier M1;\n        f (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa) = f xaa\\<rbrakk>\n       \\<Longrightarrow> xaa = a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (rule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x m = f xa; xaa \\<in> carrier M1;\n        f (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa) = f xaa\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa = xaa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (frule_tac R = R and M = M1 and N = M2 and f = f in Module.minjec_inj,\n        assumption+,\n        frule_tac R = R and M = M1 and a = a and m = xa in Module.sc_mem,\n        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2;\n        {y. \\<exists>xa\\<in>carrier N. y = x xa}\n        \\<subseteq> {y. \\<exists>x\\<in>carrier M1. y = f x};\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M2; xa \\<in> carrier M1;\n        x m = f xa; xaa \\<in> carrier M1;\n        f (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa) = f xaa;\n        inj_on f (carrier M1);\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> xa = xaa\n 2. \\<And>a m.\n       \\<lbrakk>R module N; R module M1; R module M2; x \\<in> mHom R N M2;\n        f \\<in> mHom R M1 M2; x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f; aGroup N; a \\<in> carrier R;\n        m \\<in> carrier N;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2", "apply (simp add:inj_on_def, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) right_exact_surjec:\"\\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk> \\<Longrightarrow> surjec\\<^bsub>M,N\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> surjec\\<^bsub>M,N\\<^esub> f", "apply (simp add:surjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> aHom M N \\<and>\n                      surj_to f (carrier M) (carrier N)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> aHom M N\n 2. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> surj_to f (carrier M) (carrier N)", "apply (simp add:mHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> surj_to f (carrier M) (carrier N)", "apply (simp add:surj_to_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); exact3 R M f N p (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> f ` carrier M = carrier N", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e);\n     f ` carrier M = ker\\<^bsub>N,Zm R e\\<^esub> p\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>N,Zm R e\\<^esub> p = carrier N", "apply (simp add:M_to_Z_0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) surjec_right_exact:\"\\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n p \\<in> mHom R N (Zm R e); surjec\\<^bsub>M,N\\<^esub> f\\<rbrakk> \\<Longrightarrow> exact3 R M f N p (Zm R e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); surjec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> exact3 R M f N p (Zm R e)", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); surjec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f ` carrier M = ker\\<^bsub>N,Zm R e\\<^esub> p", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); surjec\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f ` carrier M =\n                      {a \\<in> carrier N.\n                       p a = \\<zero>\\<^bsub>Zm R e\\<^esub>}", "apply (frule_tac f = p and M = N and N = \"Zm R e\" in mHom_func,\n        simp add:Zm_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); surjec\\<^bsub>M,N\\<^esub> f;\n     p \\<in> carrier N \\<rightarrow> {e}\\<rbrakk>\n    \\<Longrightarrow> f ` carrier M =\n                      {a \\<in> carrier N.\n                       p a = \\<zero>\\<^bsub>Zm R e\\<^esub>}", "apply (simp add:surjec_def surj_to_def,\n        thin_tac \"f \\<in> aHom M N \\<and> f ` carrier M = carrier N\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); p \\<in> carrier N \\<rightarrow> {e}\\<rbrakk>\n    \\<Longrightarrow> carrier N =\n                      {a \\<in> carrier N.\n                       p a = \\<zero>\\<^bsub>Zm R e\\<^esub>}", "apply (subst Zm_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); p \\<in> carrier N \\<rightarrow> {e}\\<rbrakk>\n    \\<Longrightarrow> carrier N = {a \\<in> carrier N. p a = e}", "apply (rule equalityI, rule subsetI, simp, \n        frule funcset_mem[of p \"carrier N\" \"{e}\"], assumption, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; f \\<in> mHom R M N;\n     p \\<in> mHom R N (Zm R e); p \\<in> carrier N \\<rightarrow> {e}\\<rbrakk>\n    \\<Longrightarrow> {a \\<in> carrier N. p a = e} \\<subseteq> carrier N", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) exact4_exact3:\"\\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n       f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); \n       exact4 R (Zm R e) z M f N z1 (Zm R e) \\<rbrakk> \\<Longrightarrow>\n      exact3 R (Zm R e) z M f N \\<and> exact3 R M f N z1 (Zm R e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e);\n     exact4 R (Zm R e) z M f N z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> exact3 R (Zm R e) z M f N \\<and>\n                      exact3 R M f N z1 (Zm R e)", "apply (simp add:exact4_def exact3_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) exact4_bijec:\"\\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M; \n       f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); \n       exact4 R (Zm R e) z M f N z1 (Zm R e)\\<rbrakk> \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e);\n     exact4 R (Zm R e) z M f N z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> f", "apply (frule exact4_exact3 [of M N z e f z1], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e);\n     exact4 R (Zm R e) z M f N z1 (Zm R e);\n     exact3 R (Zm R e) z M f N \\<and> exact3 R M f N z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> f", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e);\n     exact4 R (Zm R e) z M f N z1 (Zm R e); exact3 R (Zm R e) z M f N;\n     exact3 R M f N z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> bijec\\<^bsub>M,N\\<^esub> f", "apply (simp add:bijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e);\n     exact4 R (Zm R e) z M f N z1 (Zm R e); exact3 R (Zm R e) z M f N;\n     exact3 R M f N z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> injec\\<^bsub>M,N\\<^esub> f \\<and>\n                      surjec\\<^bsub>M,N\\<^esub> f", "apply (simp add:left_exact_injec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; z \\<in> mHom R (Zm R e) M;\n     f \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e);\n     exact4 R (Zm R e) z M f N z1 (Zm R e); exact3 R (Zm R e) z M f N;\n     exact3 R M f N z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> surjec\\<^bsub>M,N\\<^esub> f", "apply (simp add:right_exact_surjec)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) exact_im_sub_ker:\"\\<lbrakk>R module L; R module M; R module N; \n  f \\<in> mHom R L M; g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z; \n  exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z; compos L x f = mzeromap L Z\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>z\\<in>(carrier N). x (SOME y. y \\<in> carrier M \\<and> g y = z)) \\<in> mHom R N Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z\\<in>carrier N.\n                          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                      \\<in> mHom R N Z", "apply (subst mHom_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z\\<in>carrier N.\n                          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                      \\<in> aHom N Z \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier N.\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<in> carrier N \\<longrightarrow>\n                              x (SOME y.\n                                    y \\<in> carrier M \\<and>\n                                    g y =\n                                    a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                              a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                              x (SOME y.\n                                    y \\<in> carrier M \\<and>\n                                    g y = m)) \\<and>\n                             (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                              x (SOME y. y \\<in> carrier M \\<and> g y = m)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z\\<in>carrier N.\n                          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                      \\<in> aHom N Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:aHom_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z\\<in>carrier N.\n                          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                      \\<in> carrier N \\<rightarrow> carrier Z \\<and>\n                      (\\<forall>a\\<in>carrier N.\n                          \\<forall>b\\<in>carrier N.\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<in> carrier N \\<longrightarrow>\n                              x (SOME y.\n                                    y \\<in> carrier M \\<and>\n                                    g y =\n                                    a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                              x (SOME y.\n                                    y \\<in> carrier M \\<and>\n                                    g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                              x (SOME y.\n                                    y \\<in> carrier M \\<and>\n                                    g y = b)) \\<and>\n                             (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                              \\<notin> carrier N \\<longrightarrow>\n                              undefined =\n                              x (SOME y.\n                                    y \\<in> carrier M \\<and>\n                                    g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                              x (SOME y. y \\<in> carrier M \\<and> g y = b)))\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z\\<in>carrier N.\n                          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                      \\<in> carrier N \\<rightarrow> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule Pi_I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>z\\<in>carrier N.\n                             x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                          xa\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (subgoal_tac \"exact3 R M g N z1 (Zm R e)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> exact3 R M g N z1 (Zm R e)\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 4. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> exact3 R M g N z1 (Zm R e)\n 2. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 4. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:exact4_def exact3_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule right_exact_surjec [of M N g z1], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e); surjec\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:surjec_def, frule conjunct2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N \\<and> surj_to g (carrier M) (carrier N);\n        surj_to g (carrier M) (carrier N)\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:surj_to_def, erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        g ` carrier M = carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rotate_tac -1, frule sym, thin_tac \"g ` carrier M = carrier N\",\n        simp, thin_tac \"carrier N = g ` carrier M\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; xa \\<in> g ` carrier M;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; \\<exists>x\\<in>carrier M. xa = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = xa)\n                         \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; \\<exists>x\\<in>carrier M. xa = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        xaa \\<in> carrier M \\<and> g xaa = xa\\<rbrakk>\n       \\<Longrightarrow> x xaa \\<in> carrier Z\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (erule conjE, simp add:Module.mHom_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = b)) \\<and>\n                            (a \\<plusminus>\\<^bsub>N\\<^esub> b\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = b))\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule_tac R = R and M = N in Module.module_is_ag,\n       simp add:aGroup.ag_pOp_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z; aGroup N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier N.\n                         \\<forall>b\\<in>carrier N.\n                            x (SOME y.\n                                  y \\<in> carrier M \\<and>\n                                  g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                            x (SOME y.\n                                  y \\<in> carrier M \\<and>\n                                  g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                            x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule ballI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule_tac x = a and y = b in aGroup.ag_pOp_closed [of \"N\"], \n                                                         assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (subgoal_tac \"exact3 R M g N z1 (Zm R e)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> exact3 R M g N z1 (Zm R e)\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> exact3 R M g N z1 (Zm R e)\n 2. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:exact4_def exact3_def,\n        frule right_exact_surjec[of M N g z1], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e); surjec\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:surjec_def surj_to_def, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> carrier N;\n        b \\<in> carrier N;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> carrier N;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        g ` carrier M = carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rotate_tac -1, frule sym, thin_tac \"g ` carrier M = carrier N\",\n        simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; a \\<in> g ` carrier M;\n        b \\<in> g ` carrier M;\n        a \\<plusminus>\\<^bsub>N\\<^esub> b \\<in> g ` carrier M;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = g ` carrier M\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x}\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = b)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule someI2_ex, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<plusminus>\\<^bsub>N\\<^esub> b) =\n                         x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule someI2_ex)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> carrier M \\<and>\n                            g aa = a \\<plusminus>\\<^bsub>N\\<^esub> b\n 2. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a;\n        xb \\<in> carrier M \\<and>\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (thin_tac \"\\<exists>x\\<in>carrier M. a = g x\", thin_tac \"\\<exists>x\\<in>carrier M. b = g x\",\n        thin_tac \"xa \\<in> carrier M \\<and> g xa = b\", \n        thin_tac \"xaa \\<in> carrier M \\<and> g xaa = a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> carrier M \\<and>\n                            g aa = a \\<plusminus>\\<^bsub>N\\<^esub> b\n 2. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a;\n        xb \\<in> carrier M \\<and>\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (erule bexE, rotate_tac -1, frule sym, thin_tac \"a \\<plusminus>\\<^bsub>N\\<^esub> b = g xb\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xb \\<in> carrier M;\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> carrier M \\<and>\n                            g aa = a \\<plusminus>\\<^bsub>N\\<^esub> b\n 2. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a;\n        xb \\<in> carrier M \\<and>\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 3. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N;\n        \\<exists>x\\<in>carrier M. a = g x;\n        \\<exists>x\\<in>carrier M. b = g x;\n        \\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x;\n        exact3 R M g N z1 (Zm R e); g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a;\n        xb \\<in> carrier M \\<and>\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (thin_tac \"\\<exists>x\\<in>carrier M. a = g x\", thin_tac \"\\<exists>x\\<in>carrier M. b = g x\",\n        thin_tac \"\\<exists>x\\<in>carrier M. a \\<plusminus>\\<^bsub>N\\<^esub> b = g x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M \\<and> g xa = b;\n        xaa \\<in> carrier M \\<and> g xaa = a;\n        xb \\<in> carrier M \\<and>\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M; g xa = b; xaa \\<in> carrier M; g xaa = a;\n        xb \\<in> carrier M;\n        g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rotate_tac -5)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>g xa = b; xaa \\<in> carrier M; g xaa = a;\n        xb \\<in> carrier M; g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b;\n        R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule sym, thin_tac \"g xa = b\", frule sym, thin_tac \"g xaa = a\",\n        frule sym, thin_tac \"g xb = a \\<plusminus>\\<^bsub>N\\<^esub> b\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M; b = g xa; a = g xaa;\n        g xaa \\<plusminus>\\<^bsub>N\\<^esub> g xa = g xb\\<rbrakk>\n       \\<Longrightarrow> x xb = x xaa \\<plusminus>\\<^bsub>Z\\<^esub> x xa\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:Module.mHom_add[THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M; b = g xa; a = g xaa;\n        g (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = g xb\\<rbrakk>\n       \\<Longrightarrow> x xb = x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule mzero_im_sub_ker [of L M Z f x], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N;\n        carrier N = {y. \\<exists>x\\<in>carrier M. y = g x};\n        xa \\<in> carrier M; b = g xa; a = g xaa;\n        g (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = g xb;\n        f ` carrier L \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xb = x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:exact4_def, fold image_def,\n        thin_tac \"f ` carrier L = ker\\<^bsub>M,N\\<^esub> g \\<and> g ` carrier M = ker\\<^bsub>N,Zm R e\\<^esub> z1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z; x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N; carrier N = g ` carrier M; xa \\<in> carrier M;\n        b = g xa; a = g xaa;\n        g (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = g xb;\n        ker\\<^bsub>M,N\\<^esub> g\n        \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xb = x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule_tac R = R and M = M in Module.module_is_ag,\n       frule_tac x = xaa and y = xa in aGroup.ag_pOp_closed[of M], assumption+,\n       frule_tac R = R and M = M and N = N and f = g and a = \"xaa \\<plusminus>\\<^bsub>M\\<^esub> xa\"\n        and b = xb in Module.mHom_ker_eq, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z; x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N; carrier N = g ` carrier M; xa \\<in> carrier M;\n        b = g xa; a = g xaa;\n        g (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = g xb;\n        ker\\<^bsub>M,N\\<^esub> g \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x;\n        aGroup M; xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<in> carrier M;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> xb\n        \\<in> ker\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x xb = x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule_tac c = \"xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> xb\" in subsetD[of \"ker\\<^bsub>M,N\\<^esub> g\" \n                   \"ker\\<^bsub>M,Z\\<^esub> x\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z; x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N; carrier N = g ` carrier M; xa \\<in> carrier M;\n        b = g xa; a = g xaa;\n        g (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = g xb;\n        ker\\<^bsub>M,N\\<^esub> g \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x;\n        aGroup M; xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<in> carrier M;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> xb\n        \\<in> ker\\<^bsub>M,N\\<^esub> g;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> xb\n        \\<in> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xb = x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (frule_tac a = \"xaa \\<plusminus>\\<^bsub>M\\<^esub> xa\" and b = xb in \n                  Module.mHom_eq_ker[of M R Z x], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>xaa \\<in> carrier M; xb \\<in> carrier M; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z; x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; aGroup N; exact3 R M g N z1 (Zm R e);\n        g \\<in> aHom M N; carrier N = g ` carrier M; xa \\<in> carrier M;\n        b = g xa; a = g xaa;\n        g (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = g xb;\n        ker\\<^bsub>M,N\\<^esub> g \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x;\n        aGroup M; xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<in> carrier M;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> xb\n        \\<in> ker\\<^bsub>M,N\\<^esub> g;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub> xa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> xb\n        \\<in> ker\\<^bsub>M,Z\\<^esub> x;\n        x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa) = x xb\\<rbrakk>\n       \\<Longrightarrow> x xb = x (xaa \\<plusminus>\\<^bsub>M\\<^esub> xa)\n 2. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (rule sym, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<in> carrier N \\<longrightarrow>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and>\n                                   g y =\n                                   a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y.\n                                   y \\<in> carrier M \\<and> g y = m)) \\<and>\n                            (a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n                             \\<notin> carrier N \\<longrightarrow>\n                             undefined =\n                             a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                             x (SOME y. y \\<in> carrier M \\<and> g y = m))", "apply (simp add:Module.sc_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier N.\n                            x (SOME y.\n                                  y \\<in> carrier M \\<and>\n                                  g y =\n                                  a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                            x (SOME y. y \\<in> carrier M \\<and> g y = m)", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = m)", "apply (frule right_exact_surjec[of M N g z1], assumption+,\n        simp add:exact4_def exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; m \\<in> carrier N;\n        surjec\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = m)", "apply (frule_tac a = a and m = m in Module.sc_mem[of N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; m \\<in> carrier N;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = m)", "apply (simp add:surjec_def surj_to_def, erule conjE,\n        rotate_tac -1, frule sym, thin_tac \"g ` carrier M = carrier N\",\n        simp, thin_tac \"carrier N = g ` carrier M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        m \\<in> g ` carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m \\<in> g ` carrier M;\n        g \\<in> aHom M N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = m)", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        \\<exists>x\\<in>carrier M. m = g x;\n        \\<exists>x\\<in>carrier M.\n           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x;\n        g \\<in> aHom M N\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n                         x (SOME y. y \\<in> carrier M \\<and> g y = m)", "apply (rule someI2_ex, blast,\n        thin_tac \"\\<exists>x\\<in>carrier M. m = g x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        \\<exists>x\\<in>carrier M.\n           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x;\n        g \\<in> aHom M N; xa \\<in> carrier M \\<and> g xa = m\\<rbrakk>\n       \\<Longrightarrow> x (SOME y.\n                               y \\<in> carrier M \\<and>\n                               g y = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply (rule someI2_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        \\<exists>x\\<in>carrier M.\n           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x;\n        g \\<in> aHom M N; xa \\<in> carrier M \\<and> g xa = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> carrier M \\<and>\n                            g aa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n 2. \\<And>a m xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        \\<exists>x\\<in>carrier M.\n           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x;\n        g \\<in> aHom M N; xa \\<in> carrier M \\<and> g xa = m;\n        xaa \\<in> carrier M \\<and>\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\\<rbrakk>\n       \\<Longrightarrow> x xaa = a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply (erule bexE, rotate_tac -1, frule sym, thin_tac \"a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g xaa\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M \\<and> g xa = m; xaa \\<in> carrier M;\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> carrier M \\<and>\n                            g aa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\n 2. \\<And>a m xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        \\<exists>x\\<in>carrier M.\n           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x;\n        g \\<in> aHom M N; xa \\<in> carrier M \\<and> g xa = m;\n        xaa \\<in> carrier M \\<and>\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\\<rbrakk>\n       \\<Longrightarrow> x xaa = a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R;\n        \\<exists>x\\<in>carrier M.\n           a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x;\n        g \\<in> aHom M N; xa \\<in> carrier M \\<and> g xa = m;\n        xaa \\<in> carrier M \\<and>\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\\<rbrakk>\n       \\<Longrightarrow> x xaa = a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply (thin_tac \"\\<exists>x\\<in>carrier M. a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m = g x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M \\<and> g xa = m;\n        xaa \\<in> carrier M \\<and>\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\\<rbrakk>\n       \\<Longrightarrow> x xaa = a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; g xa = m; xaa \\<in> carrier M;\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> m\\<rbrakk>\n       \\<Longrightarrow> x xaa = a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply (rotate_tac -3, frule sym, thin_tac \"g xa = m\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>xaa \\<in> carrier M;\n        g xaa = a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> g xa; R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; m = g xa\\<rbrakk>\n       \\<Longrightarrow> x xaa = a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub> x xa", "apply (simp add:Module.mHom_lin[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>xaa \\<in> carrier M;\n        g xaa = g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa); R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; m = g xa\\<rbrakk>\n       \\<Longrightarrow> x xaa = x (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa)", "apply (frule_tac a = a and m = xa in Module.sc_mem, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>xaa \\<in> carrier M;\n        g xaa = g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa); R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; m = g xa;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x xaa = x (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa)", "apply (frule_tac R = R and M = M and N = N and f = g and a = xaa and \n        b = \"a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa\" in Module.mHom_ker_eq, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>xaa \\<in> carrier M;\n        g xaa = g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa); R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; m = g xa;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa \\<in> carrier M;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa\n        \\<in> ker\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x xaa = x (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa)", "apply (frule mzero_im_sub_ker [of L M Z f x], assumption+,\n        simp add:exact4_def,\n        thin_tac \"f ` carrier L = ker\\<^bsub>M,N\\<^esub> g \\<and> g ` carrier M = ker\\<^bsub>N,Zm R e\\<^esub> z1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>xaa \\<in> carrier M;\n        g xaa = g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa); R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z; x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; m = g xa;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa \\<in> carrier M;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa\n        \\<in> ker\\<^bsub>M,N\\<^esub> g;\n        ker\\<^bsub>M,N\\<^esub> g\n        \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xaa = x (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa)", "apply (frule_tac c = \"xaa \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa)\" in \n                  subsetD[of \"ker\\<^bsub>M,N\\<^esub> g \" \"ker\\<^bsub>M,Z\\<^esub> x\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m xa xaa.\n       \\<lbrakk>xaa \\<in> carrier M;\n        g xaa = g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa); R module L;\n        R module M; R module N; f \\<in> mHom R L M; g \\<in> mHom R M N;\n        z1 \\<in> mHom R N (Zm R e); R module Z; x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; a \\<in> carrier R; g \\<in> aHom M N;\n        xa \\<in> carrier M; m = g xa;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa \\<in> carrier M;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa\n        \\<in> ker\\<^bsub>M,N\\<^esub> g;\n        ker\\<^bsub>M,N\\<^esub> g \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x;\n        xaa \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa\n        \\<in> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xaa = x (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa)", "apply (rule_tac a = xaa and b = \"a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> xa\" in \n                  Module.mHom_eq_ker[of M R Z x], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*     f    g    z1\n         L \\<rightarrow> M \\<rightarrow> N \\<rightarrow> 0      exact4 L M N (Zm R e) f g z1, x \\<in> mHom R M Z\n               x\\  | \\<exists>x'       im f \\<subseteq> ker x, then exists x'\n                   Z        *)"], ["", "lemma (in Ring) exact_im_sub_ker1:\"\\<lbrakk>R module L; R module M; R module N; \n      f \\<in> mHom R L M; g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z; \n      exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z; \n      compos L x f = mzeromap L Z \\<rbrakk> \\<Longrightarrow> \n    compos M (\\<lambda>z\\<in>(carrier N). x (SOME y. y \\<in> carrier M \\<and> g y = z)) g = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z\\<rbrakk>\n    \\<Longrightarrow> compos M\n                       (\\<lambda>z\\<in>carrier N.\n                           x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                       g =\n                      x", "apply (frule exact_im_sub_ker [of L M N f g z1 e Z x], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z;\n     (\\<lambda>z\\<in>carrier N.\n         x (SOME y. y \\<in> carrier M \\<and> g y = z))\n     \\<in> mHom R N Z\\<rbrakk>\n    \\<Longrightarrow> compos M\n                       (\\<lambda>z\\<in>carrier N.\n                           x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                       g =\n                      x", "apply (frule_tac g = \"(\\<lambda>z\\<in>carrier N. x (SOME y. y \\<in> carrier M \\<and> g y = z))\" in\n        Module.mHom_compos [of N R M Z g], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z;\n     (\\<lambda>z\\<in>carrier N.\n         x (SOME y. y \\<in> carrier M \\<and> g y = z))\n     \\<in> mHom R N Z;\n     compos M\n      (\\<lambda>z\\<in>carrier N.\n          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n      g\n     \\<in> mHom R M Z\\<rbrakk>\n    \\<Longrightarrow> compos M\n                       (\\<lambda>z\\<in>carrier N.\n                           x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                       g =\n                      x", "apply (rule Module.mHom_eq [of M R Z _ x], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n     g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n     exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n     compos L x f = mzeromap L Z;\n     (\\<lambda>z\\<in>carrier N.\n         x (SOME y. y \\<in> carrier M \\<and> g y = z))\n     \\<in> mHom R N Z;\n     compos M\n      (\\<lambda>z\\<in>carrier N.\n          x (SOME y. y \\<in> carrier M \\<and> g y = z))\n      g\n     \\<in> mHom R M Z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<in>carrier M.\n                         compos M\n                          (\\<lambda>z\\<in>carrier N.\n                              x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                          g m =\n                         x m", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z;\n        (\\<lambda>z\\<in>carrier N.\n            x (SOME y. y \\<in> carrier M \\<and> g y = z))\n        \\<in> mHom R N Z;\n        compos M\n         (\\<lambda>z\\<in>carrier N.\n             x (SOME y. y \\<in> carrier M \\<and> g y = z))\n         g\n        \\<in> mHom R M Z;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> compos M\n                          (\\<lambda>z\\<in>carrier N.\n                              x (SOME y. y \\<in> carrier M \\<and> g y = z))\n                          g m =\n                         x m", "apply (subst compos_def, subst compose_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z;\n        (\\<lambda>z\\<in>carrier N.\n            x (SOME y. y \\<in> carrier M \\<and> g y = z))\n        \\<in> mHom R N Z;\n        compos M\n         (\\<lambda>z\\<in>carrier N.\n             x (SOME y. y \\<in> carrier M \\<and> g y = z))\n         g\n        \\<in> mHom R M Z;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> (g m \\<in> carrier N \\<longrightarrow>\n                          x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                          x m) \\<and>\n                         (g m \\<notin> carrier N \\<longrightarrow>\n                          undefined = x m)", "apply (simp add:Module.mHom_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z;\n        (\\<lambda>z\\<in>carrier N.\n            x (SOME y. y \\<in> carrier M \\<and> g y = z))\n        \\<in> mHom R N Z;\n        compos M\n         (\\<lambda>z\\<in>carrier N.\n             x (SOME y. y \\<in> carrier M \\<and> g y = z))\n         g\n        \\<in> mHom R M Z;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (thin_tac \"compos M (\\<lambda>z\\<in>carrier N. x \n                 (SOME y. y \\<in> carrier M \\<and> g y = z)) g \\<in> mHom R M Z\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z;\n        (\\<lambda>z\\<in>carrier N.\n            x (SOME y. y \\<in> carrier M \\<and> g y = z))\n        \\<in> mHom R N Z;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (thin_tac \"(\\<lambda>z\\<in>carrier N. x (SOME y. y \\<in> carrier M \\<and> g y = z)) \\<in> \n                                                               mHom R N Z\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (frule right_exact_surjec [of M N g z1 e], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> exact3 R M g N z1 (Zm R e)\n 2. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (simp add:exact4_def exact3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (frule mHom_func[of g M N],\n        frule_tac a = m in mem_in_image[of g \"carrier M\" \"carrier N\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N;\n        g m \\<in> g ` carrier M\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N;\n        \\<exists>x\\<in>carrier M. g m = g x\\<rbrakk>\n       \\<Longrightarrow> x (SOME y. y \\<in> carrier M \\<and> g y = g m) =\n                         x m", "apply (rule someI2_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N;\n        \\<exists>x\\<in>carrier M. g m = g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. a \\<in> carrier M \\<and> g a = g m\n 2. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N;\n        \\<exists>x\\<in>carrier M. g m = g x;\n        xa \\<in> carrier M \\<and> g xa = g m\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N;\n        \\<exists>x\\<in>carrier M. g m = g x;\n        xa \\<in> carrier M \\<and> g xa = g m\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (thin_tac \"\\<exists>x\\<in>carrier M. g m = g x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N;\n        xa \\<in> carrier M \\<and> g xa = g m\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N; xa \\<in> carrier M;\n        g xa = g m\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (frule mzero_im_sub_ker [of L M Z f x], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        exact4 R L f M g N z1 (Zm R e); x \\<in> mHom R M Z;\n        compos L x f = mzeromap L Z; m \\<in> carrier M;\n        surjec\\<^bsub>M,N\\<^esub> g;\n        g \\<in> carrier M \\<rightarrow> carrier N; xa \\<in> carrier M;\n        g xa = g m;\n        f ` carrier L \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (simp add:surjec_def surj_to_def exact4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        f ` carrier L = ker\\<^bsub>M,N\\<^esub> g \\<and>\n        g ` carrier M = carrier N;\n        x \\<in> mHom R M Z; compos L x f = mzeromap L Z; m \\<in> carrier M;\n        g \\<in> aHom M N \\<and> ker\\<^bsub>N,Zm R e\\<^esub> z1 = carrier N;\n        g \\<in> carrier M \\<rightarrow> carrier N; xa \\<in> carrier M;\n        g xa = g m;\n        ker\\<^bsub>M,N\\<^esub> g\n        \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (frule_tac a = xa and b = m in Module.mHom_ker_eq[of M R N g],\n         assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        f ` carrier L = ker\\<^bsub>M,N\\<^esub> g \\<and>\n        g ` carrier M = carrier N;\n        x \\<in> mHom R M Z; compos L x f = mzeromap L Z; m \\<in> carrier M;\n        g \\<in> aHom M N \\<and> ker\\<^bsub>N,Zm R e\\<^esub> z1 = carrier N;\n        g \\<in> carrier M \\<rightarrow> carrier N; xa \\<in> carrier M;\n        g xa = g m;\n        ker\\<^bsub>M,N\\<^esub> g \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x;\n        xa \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m\n        \\<in> ker\\<^bsub>M,N\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (frule_tac c = \"xa \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m\" in subsetD[of \"ker\\<^bsub>M,N\\<^esub> g\" \"ker\\<^bsub>M,Z\\<^esub> x\"],\n                  assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m xa.\n       \\<lbrakk>R module L; R module M; R module N; f \\<in> mHom R L M;\n        g \\<in> mHom R M N; z1 \\<in> mHom R N (Zm R e); R module Z;\n        f ` carrier L = ker\\<^bsub>M,N\\<^esub> g \\<and>\n        g ` carrier M = carrier N;\n        x \\<in> mHom R M Z; compos L x f = mzeromap L Z; m \\<in> carrier M;\n        g \\<in> aHom M N \\<and> ker\\<^bsub>N,Zm R e\\<^esub> z1 = carrier N;\n        g \\<in> carrier M \\<rightarrow> carrier N; xa \\<in> carrier M;\n        g xa = g m;\n        ker\\<^bsub>M,N\\<^esub> g \\<subseteq> ker\\<^bsub>M,Z\\<^esub> x;\n        xa \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m\n        \\<in> ker\\<^bsub>M,N\\<^esub> g;\n        xa \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m\n        \\<in> ker\\<^bsub>M,Z\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x xa = x m", "apply (rule_tac a = xa and b = m in Module.mHom_eq_ker[of M R Z x],\n           assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  module_iota :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme] \\<Rightarrow>\n                'a \\<Rightarrow> 'a\"  (\"(m\\<iota>\\<^bsub>_\\<^esub> _)\" [92, 93]92) where\n  \"m\\<iota>\\<^bsub>R\\<^esub> M = (\\<lambda>x\\<in>carrier M. x)\""], ["", "lemma (in Ring) short_exact_sequence:\"\\<lbrakk>R module M; submodule R M N; \n z \\<in> mHom R (Zm R e) (mdl M N); z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk> \\<Longrightarrow> \n exact5 R (Zm R e) z (mdl M N)(m\\<iota>\\<^bsub>R\\<^esub> (mdl M N)) M (mpj M N) (M /\\<^sub>m N) z1 (Zm R e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> exact5 R (Zm R e) z (mdl M N)\n                       (m\\<iota>\\<^bsub>R\\<^esub> mdl M N) M (mpj M N)\n                       (M /\\<^sub>m N) z1 (Zm R e)", "apply (simp add:exact5_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> z ` carrier (Zm R e) =\n                      ker\\<^bsub>mdl M\n                                  N,M\\<^esub> m\\<iota>\\<^bsub>R\\<^esub> mdl\n                                   M N \\<and>\n                      m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> z ` carrier (Zm R e) =\n                      ker\\<^bsub>mdl M\n                                  N,M\\<^esub> m\\<iota>\\<^bsub>R\\<^esub> mdl\n                                   M N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:Zm_def, fold Zm_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> {z e} =\n                      ker\\<^bsub>mdl M\n                                  N,M\\<^esub> m\\<iota>\\<^bsub>R\\<^esub> mdl\n                                   M N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (frule Module.mdl_is_module [of M R N], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {z e} =\n                      ker\\<^bsub>mdl M\n                                  N,M\\<^esub> m\\<iota>\\<^bsub>R\\<^esub> mdl\n                                   M N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:ker_def, simp add:module_iota_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {z e} =\n                      {a. (a \\<in> carrier (mdl M N) \\<longrightarrow>\n                           a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                          a \\<in> carrier (mdl M N)}\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:Zm_to_M_0 [of \"mdl M N\" \"z\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>mdl M N\\<^esub>} =\n                      {a. (a \\<in> carrier (mdl M N) \\<longrightarrow>\n                           a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                          a \\<in> carrier (mdl M N)}\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:mdl_def, fold mdl_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} =\n                      {a. (a \\<in> N \\<longrightarrow>\n                           a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                          a \\<in> N}\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (rule equalityI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                      \\<subseteq> {a. (a \\<in> N \\<longrightarrow>\n a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\na \\<in> N}\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {a. (a \\<in> N \\<longrightarrow>\n                           a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                          a \\<in> N}\n                      \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}\n 3. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> \\<in> N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {a. (a \\<in> N \\<longrightarrow>\n                           a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                          a \\<in> N}\n                      \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}\n 3. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:Module.submodule_inc_0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N\\<rbrakk>\n    \\<Longrightarrow> {a. (a \\<in> N \\<longrightarrow>\n                           a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                          a \\<in> N}\n                      \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; submodule R M N;\n        z \\<in> mHom R (Zm R e) (mdl M N);\n        z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module mdl M N;\n        x \\<in> {a. (a \\<in> N \\<longrightarrow>\n                     a = \\<zero>\\<^bsub>M\\<^esub>) \\<and>\n                    a \\<in> N}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N \\<and>\n                      mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> m\\<iota>\\<^bsub>R\\<^esub> mdl M N `\n                      carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:module_iota_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> carrier (mdl M N) =\n                      ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:mdl_def, fold mdl_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> N = ker\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N\n 2. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (simp add:Module.mker_of_mpj[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (frule Module.qmodule_module [of M R N], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e);\n     R module M /\\<^sub>m N\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M =\n                      ker\\<^bsub>M /\\<^sub>m N,Zm R e\\<^esub> z1", "apply (subst M_to_Z_0 [of \"M /\\<^sub>m N\" z1 e], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e);\n     R module M /\\<^sub>m N\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M = carrier (M /\\<^sub>m N)", "apply (frule Module.mpj_surjec [of M R N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; z \\<in> mHom R (Zm R e) (mdl M N);\n     z1 \\<in> mHom R (M /\\<^sub>m N) (Zm R e); R module M /\\<^sub>m N;\n     surjec\\<^bsub>M,M /\\<^sub>m N\\<^esub> mpj M N\\<rbrakk>\n    \\<Longrightarrow> mpj M N ` carrier M = carrier (M /\\<^sub>m N)", "apply (simp add:surjec_def surj_to_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) rexact4_lexact4_HOM:\"\\<lbrakk>R module M1; R module M2; R module M3;\n      f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); \n      exact4 R M1 f M2 g M3 z1 (Zm R e)\\<rbrakk> \\<Longrightarrow> \n \\<forall>N. R module N \\<longrightarrow> \n exact4 R (HOM\\<^bsub>R\\<^esub> (Zm R e) N) (sup_sharp R M3 (Zm R e) N z1) (HOM\\<^bsub>R\\<^esub> M3 N) \n(sup_sharp R M2 M3 N g) (HOM\\<^bsub>R\\<^esub> M2 N) (sup_sharp R M1 M2 N f) (HOM\\<^bsub>R\\<^esub> M1 N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n     g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n     exact4 R M1 f M2 g M3 z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>N.\n                         R module N \\<longrightarrow>\n                         exact4 R (HOM\\<^bsub>R\\<^esub> Zm R e N)\n                          (sup_sharp R M3 (Zm R e) N z1)\n                          (HOM\\<^bsub>R\\<^esub> M3 N)\n                          (sup_sharp R M2 M3 N g)\n                          (HOM\\<^bsub>R\\<^esub> M2 N)\n                          (sup_sharp R M1 M2 N f)\n                          (HOM\\<^bsub>R\\<^esub> M1 N)", "(*              f     g    z1\n             M1 \\<rightarrow> M2 \\<rightarrow> M3 \\<rightarrow> (Zm R e)               \n                         |\n                         N                     *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n     g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n     exact4 R M1 f M2 g M3 z1 (Zm R e)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>N.\n                         R module N \\<longrightarrow>\n                         exact4 R (HOM\\<^bsub>R\\<^esub> Zm R e N)\n                          (sup_sharp R M3 (Zm R e) N z1)\n                          (HOM\\<^bsub>R\\<^esub> M3 N)\n                          (sup_sharp R M2 M3 N g)\n                          (HOM\\<^bsub>R\\<^esub> M2 N)\n                          (sup_sharp R M1 M2 N f)\n                          (HOM\\<^bsub>R\\<^esub> M1 N)", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> R module N \\<longrightarrow>\n                         exact4 R (HOM\\<^bsub>R\\<^esub> Zm R e N)\n                          (sup_sharp R M3 (Zm R e) N z1)\n                          (HOM\\<^bsub>R\\<^esub> M3 N)\n                          (sup_sharp R M2 M3 N g)\n                          (HOM\\<^bsub>R\\<^esub> M2 N)\n                          (sup_sharp R M1 M2 N f)\n                          (HOM\\<^bsub>R\\<^esub> M1 N)", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> exact4 R (HOM\\<^bsub>R\\<^esub> Zm R e N)\n                          (sup_sharp R M3 (Zm R e) N z1)\n                          (HOM\\<^bsub>R\\<^esub> M3 N)\n                          (sup_sharp R M2 M3 N g)\n                          (HOM\\<^bsub>R\\<^esub> M2 N)\n                          (sup_sharp R M1 M2 N f)\n                          (HOM\\<^bsub>R\\<^esub> M1 N)", "apply (subst exact4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M3 (Zm R e) N z1 `\n                         carrier (HOM\\<^bsub>R\\<^esub> Zm R e N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n N,HOM\\<^bsub>R\\<^esub> M2 N\\<^esub> sup_sharp R M2 M3 N g \\<and>\n                         sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M3 (Zm R e) N z1 `\n                         carrier (HOM\\<^bsub>R\\<^esub> Zm R e N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n N,HOM\\<^bsub>R\\<^esub> M2 N\\<^esub> sup_sharp R M2 M3 N g\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (cut_tac Zm_Module [of e])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M3 (Zm R e) N z1 `\n                         carrier (HOM\\<^bsub>R\\<^esub> Zm R e N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n N,HOM\\<^bsub>R\\<^esub> M2 N\\<^esub> sup_sharp R M2 M3 N g\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (subst HOM_carrier [of  \"Zm R e\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M3 (Zm R e) N z1 ` mHom R (Zm R e) N =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n N,HOM\\<^bsub>R\\<^esub> M2 N\\<^esub> sup_sharp R M2 M3 N g\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:mHom_Z_M)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {sup_sharp R M3 (Zm R e) N z1\n                           (mzeromap (Zm R e) N)} =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n N,HOM\\<^bsub>R\\<^esub> M2 N\\<^esub> sup_sharp R M2 M3 N g\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:sup_sharp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> (mzeromap (Zm R e) N\n                          \\<in> mHom R (Zm R e) N \\<longrightarrow>\n                          {compos M3 (mzeromap (Zm R e) N) z1} =\n                          ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n  N,HOM\\<^bsub>R\\<^esub> M2\n       N\\<^esub> (\\<lambda>f\\<in>mHom R M3 N. compos M2 f g)) \\<and>\n                         (mzeromap (Zm R e) N\n                          \\<notin> mHom R (Zm R e) N \\<longrightarrow>\n                          {undefined} =\n                          ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n  N,HOM\\<^bsub>R\\<^esub> M2\n       N\\<^esub> (\\<lambda>f\\<in>mHom R M3 N. compos M2 f g))\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:mzeromap_mHom)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {compos M3 (mzeromap (Zm R e) N) z1} =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M3\n N,HOM\\<^bsub>R\\<^esub> M2\n      N\\<^esub> (\\<lambda>f\\<in>mHom R M3 N. compos M2 f g)\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {compos M3 (mzeromap (Zm R e) N) z1} =\n                         {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              a \\<in> carrier\n (HOM\\<^bsub>R\\<^esub> M3 N) \\<and>\n                              compos M2 a g =\n                              \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M2 N\\<^esub>) \\<and>\n                             (a \\<notin> mHom R M3 N \\<longrightarrow>\n                              a \\<in> carrier\n (HOM\\<^bsub>R\\<^esub> M3 N) \\<and>\n                              undefined =\n                              \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M2 N\\<^esub>)}\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {compos M3 (mzeromap (Zm R e) N) z1} =\n                         {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule equalityI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {compos M3 (mzeromap (Zm R e) N) z1}\n                         \\<subseteq> {a.\n(a \\<in> mHom R M3 N \\<longrightarrow> compos M2 a g = mzeromap M2 N) \\<and>\na \\<in> mHom R M3 N}\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule subsetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x \\<in> {compos M3 (mzeromap (Zm R e) N) z1}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\ncompos M2 a g = mzeromap M2 N) \\<and>\n                                     a \\<in> mHom R M3 N}\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1\\<rbrakk>\n       \\<Longrightarrow> (compos M3 (mzeromap (Zm R e) N) z1\n                          \\<in> mHom R M3 N \\<longrightarrow>\n                          compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g =\n                          mzeromap M2 N) \\<and>\n                         compos M3 (mzeromap (Zm R e) N) z1\n                         \\<in> mHom R M3 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule_tac N = N in mzeromap_mHom [of \"Zm R e\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N\\<rbrakk>\n       \\<Longrightarrow> (compos M3 (mzeromap (Zm R e) N) z1\n                          \\<in> mHom R M3 N \\<longrightarrow>\n                          compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g =\n                          mzeromap M2 N) \\<and>\n                         compos M3 (mzeromap (Zm R e) N) z1\n                         \\<in> mHom R M3 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "thm Module.mHom_compos[of \"Zm R e\" R M3 _ z1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N\\<rbrakk>\n       \\<Longrightarrow> (compos M3 (mzeromap (Zm R e) N) z1\n                          \\<in> mHom R M3 N \\<longrightarrow>\n                          compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g =\n                          mzeromap M2 N) \\<and>\n                         compos M3 (mzeromap (Zm R e) N) z1\n                         \\<in> mHom R M3 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule_tac N = N and g = \"mzeromap (Zm R e) N\" in \n                 Module.mHom_compos[of  \"Zm R e\" R M3 _ z1], assumption+,\n        simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N\\<rbrakk>\n       \\<Longrightarrow> compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g =\n                         mzeromap M2 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule_tac N = N in mzeromap_mHom [of M2], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        mzeromap M2 N \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g =\n                         mzeromap M2 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule_tac N = N and f = \"compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g\" and g = \"mzeromap M2 N\" in Module.mHom_eq [of M2 _ ], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        mzeromap M2 N \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g\n                         \\<in> mHom R M2 N\n 2. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        mzeromap M2 N \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> mzeromap M2 N \\<in> mHom R M2 N\n 3. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        mzeromap M2 N \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier M2.\n                            compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g\n                             m =\n                            mzeromap M2 N m\n 4. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 5. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule Module.mHom_compos, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        mzeromap M2 N \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier M2.\n                            compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g\n                             m =\n                            mzeromap M2 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule ballI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x = compos M3 (mzeromap (Zm R e) N) z1;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        mzeromap M2 N \\<in> mHom R M2 N; m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> compos M2 (compos M3 (mzeromap (Zm R e) N) z1) g\n                          m =\n                         mzeromap M2 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:compos_def mzeromap_def compose_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        x =\n        (\\<lambda>x\\<in>carrier M3.\n            if z1 x \\<in> carrier (Zm R e) then \\<zero>\\<^bsub>N\\<^esub>\n            else undefined);\n        (\\<lambda>x\\<in>carrier (Zm R e). \\<zero>\\<^bsub>N\\<^esub>)\n        \\<in> mHom R (Zm R e) N;\n        (\\<lambda>x\\<in>carrier M3.\n            if z1 x \\<in> carrier (Zm R e) then \\<zero>\\<^bsub>N\\<^esub>\n            else undefined)\n        \\<in> mHom R M3 N;\n        (\\<lambda>x\\<in>carrier M2. \\<zero>\\<^bsub>N\\<^esub>)\n        \\<in> mHom R M2 N;\n        m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (z1 (g m) \\<in> carrier (Zm R e) \\<longrightarrow>\n                          g m \\<notin> carrier M3 \\<longrightarrow>\n                          undefined = \\<zero>\\<^bsub>N\\<^esub>) \\<and>\n                         (z1 (g m)\n                          \\<notin> carrier (Zm R e) \\<longrightarrow>\n                          undefined = \\<zero>\\<^bsub>N\\<^esub>)\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:Module.mHom_mem)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> {a. (a \\<in> mHom R M3 N \\<longrightarrow>\n                              compos M2 a g = mzeromap M2 N) \\<and>\n                             a \\<in> mHom R M3 N}\n                         \\<subseteq> {compos M3 (mzeromap (Zm R e) N) z1}\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule subsetI, simp, erule conjE, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N\\<rbrakk>\n       \\<Longrightarrow> x = compos M3 (mzeromap (Zm R e) N) z1\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule_tac N = N in mzeromap_mHom [of \"Zm R e\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N\\<rbrakk>\n       \\<Longrightarrow> x = compos M3 (mzeromap (Zm R e) N) z1\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule_tac N = N and g = \"mzeromap (Zm R e) N\" in \n        Module.mHom_compos [of \"Zm R e\" R M3  _ z1], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N\\<rbrakk>\n       \\<Longrightarrow> x = compos M3 (mzeromap (Zm R e) N) z1\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule_tac  N = N and f = x and \n        g = \"compos M3 (mzeromap (Zm R e) N) z1\" in Module.mHom_eq[of M3 _], \n        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier M3.\n                            x m = compos M3 (mzeromap (Zm R e) N) z1 m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> x m = compos M3 (mzeromap (Zm R e) N) z1 m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (subst compos_def, subst compose_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> x m =\n                         (\\<lambda>x\\<in>carrier M3.\n                             mzeromap (Zm R e) N (z1 x))\n                          m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (subst mzeromap_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> x m =\n                         (\\<lambda>x\\<in>carrier M3.\n                             (\\<lambda>x\\<in>carrier (Zm R e).\n                                 \\<zero>\\<^bsub>N\\<^esub>)\n                              (z1 x))\n                          m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:Module.mHom_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; R module Zm R e;\n        compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:exact4_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (subgoal_tac \"exact3 R M2 g  M3 z1 (Zm R e)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3; exact3 R M2 g M3 z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> exact3 R M2 g M3 z1 (Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3\\<rbrakk>\n       \\<Longrightarrow> exact3 R M2 g M3 z1 (Zm R e)\n 2. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3; exact3 R M2 g M3 z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:exact3_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3; exact3 R M2 g M3 z1 (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule right_exact_surjec [of M2 M3 g z1], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g \\<and>\n        g ` carrier M2 = ker\\<^bsub>M3,Zm R e\\<^esub> z1;\n        R module N; R module Zm R e; compos M2 x g = mzeromap M2 N;\n        x \\<in> mHom R M3 N; mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3; exact3 R M2 g M3 z1 (Zm R e);\n        surjec\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:surjec_def surj_to_def, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module N;\n        R module Zm R e; compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        m \\<in> carrier M3; exact3 R M2 g M3 z1 (Zm R e);\n        g \\<in> aHom M2 M3 \\<and>\n        ker\\<^bsub>M3,Zm R e\\<^esub> z1 = carrier M3;\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        g ` carrier M2 = carrier M3\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (thin_tac \"f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\",\n        thin_tac \"g \\<in> aHom M2 M3 \\<and> ker\\<^bsub>M3,Zm R e\\<^esub> z1 = carrier M3\",\n        rotate_tac -1, frule sym, thin_tac \"g ` carrier M2 = carrier M3\",\n        simp add:image_def, fold image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module N;\n        R module Zm R e; compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        \\<exists>x\\<in>carrier M2. m = g x; exact3 R M2 g M3 z1 (Zm R e);\n        carrier M3 = g ` carrier M2\\<rbrakk>\n       \\<Longrightarrow> x m = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (erule bexE, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module N;\n        R module Zm R e; compos M2 x g = mzeromap M2 N; x \\<in> mHom R M3 N;\n        mzeromap (Zm R e) N \\<in> mHom R (Zm R e) N;\n        compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N;\n        exact3 R M2 g M3 z1 (Zm R e); carrier M3 = g ` carrier M2;\n        xa \\<in> carrier M2; m = g xa\\<rbrakk>\n       \\<Longrightarrow> x (g xa) = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (simp add:compos_def compose_def mzeromap_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module N;\n        R module Zm R e;\n        (\\<lambda>xa\\<in>carrier M2. x (g xa)) =\n        (\\<lambda>x\\<in>carrier M2. \\<zero>\\<^bsub>N\\<^esub>);\n        x \\<in> mHom R M3 N;\n        (\\<lambda>x\\<in>carrier (Zm R e). \\<zero>\\<^bsub>N\\<^esub>)\n        \\<in> mHom R (Zm R e) N;\n        (\\<lambda>x\\<in>g ` carrier M2.\n            if z1 x \\<in> carrier (Zm R e) then \\<zero>\\<^bsub>N\\<^esub>\n            else undefined)\n        \\<in> mHom R M3 N;\n        exact3 R M2 g M3 z1 (Zm R e); carrier M3 = g ` carrier M2;\n        xa \\<in> carrier M2; m = g xa\\<rbrakk>\n       \\<Longrightarrow> x (g xa) = \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (frule_tac f = \"\\<lambda>xa\\<in>carrier M2. x (g xa)\" and g = \"\\<lambda>x\\<in>carrier M2. \\<zero>\\<^bsub>N\\<^esub>\"\n        and x = xa in eq_fun_eq_val, \n        thin_tac \"(\\<lambda>xa\\<in>carrier M2. x (g xa)) = (\\<lambda>x\\<in>carrier M2. \\<zero>\\<^bsub>N\\<^esub>)\",\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "(* apply (erule conjE) apply (simp add:surj_to_def)\n apply (simp add:image_def)\n apply (subgoal_tac \"m \\<in> {y. \\<exists>x\\<in>carrier M2. y = g x}\")\n apply (thin_tac \"{y. \\<exists>x\\<in>carrier M2. y = g x} = carrier M3\")\n prefer 2 apply simp apply simp\n apply (subgoal_tac \"\\<forall>y\\<in>carrier M2. m = g y \\<longrightarrow> x m = 0\\<^sub>N\")\n apply blast\n apply (rule ballI) apply (rule impI) apply simp\n apply (thin_tac \"compos M3 (mzeromap (Zm R e) N) z1 \\<in> mHom R M3 N\")\n apply (thin_tac \"\\<exists>x\\<in>carrier M2. g y = g x\") apply (thin_tac \"m = g y\")\n apply (simp add:compos_def compose_def)\n apply (subgoal_tac \"(\\<lambda>xa\\<in>carrier M2. x (g xa)) y = x ( g y)\")\n apply (simp add:mzeromap_def) apply (thin_tac \"(\\<lambda>xa\\<in>carrier M2. x (g xa)) = mzeromap M2 N\")\n apply simp  *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M2 M3 N g `\n                         carrier (HOM\\<^bsub>R\\<^esub> M3 N)\n                         \\<subseteq> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n             N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        x \\<in> sup_sharp R M2 M3 N g `\n                carrier (HOM\\<^bsub>R\\<^esub> M3 N)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n         N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        \\<exists>xa\\<in>carrier (HOM\\<^bsub>R\\<^esub> M3 N).\n           x = sup_sharp R M2 M3 N g xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n         N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        \\<exists>xa\\<in>carrier (HOM\\<^bsub>R\\<^esub> M3 N).\n           x = sup_sharp R M2 M3 N g xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier (HOM\\<^bsub>R\\<^esub> M2 N) \\<and>\n                         sup_sharp R M1 M2 N f x =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:HOM_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        \\<exists>xa\\<in>mHom R M3 N. x = sup_sharp R M2 M3 N g xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R M2 N \\<and>\n                         sup_sharp R M1 M2 N f x =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (erule bexE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R M2 N \\<and>\n                         sup_sharp R M1 M2 N f x =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (frule_tac L = N and f = xa in Module.sup_sharp_homTr[of M2 R M3 _ g],\n         assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "thm Module.sup_sharp_homTr[of M1 R M2 _ f]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (frule_tac L = N and f = \"sup_sharp R M2 M3 N g xa\" in \n        Module.sup_sharp_homTr[of M1 R M2 _ f], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa)\n        \\<in> mHom R M1 N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa)\n        \\<in> mHom R M1 N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) =\n                         mzeromap M1 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (frule_tac N = N in  mzeromap_mHom[of M1], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) =\n                         mzeromap M1 N\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (rule Module.mHom_eq, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier M1.\n                            sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa)\n                             m =\n                            mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa)\n                          m =\n                         mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (subst sup_sharp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>fa\\<in>mHom R M2 N. compos M1 fa f)\n                          (sup_sharp R M2 M3 N g xa) m =\n                         mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> compos M1 (sup_sharp R M2 M3 N g xa) f m =\n                         mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (subst compos_def, subst compose_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x\\<in>carrier M1.\n                             sup_sharp R M2 M3 N g xa (f x))\n                          m =\n                         mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (subst sup_sharp_def, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> compos M2 xa g (f m) = mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (subst compos_def, subst compose_def, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (f m \\<in> carrier M2 \\<longrightarrow>\n                          xa (g (f m)) = mzeromap M1 N m) \\<and>\n                         (f m \\<notin> carrier M2 \\<longrightarrow>\n                          undefined = mzeromap M1 N m)\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:Module.mHom_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> xa (g (f m)) = mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (subgoal_tac \"exact3 R M1 f M2 g M3\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1;\n        exact3 R M1 f M2 g M3\\<rbrakk>\n       \\<Longrightarrow> xa (g (f m)) = mzeromap M1 N m\n 2. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> exact3 R M1 f M2 g M3\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> exact3 R M1 f M2 g M3\n 2. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1;\n        exact3 R M1 f M2 g M3\\<rbrakk>\n       \\<Longrightarrow> xa (g (f m)) = mzeromap M1 N m\n 3. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:exact4_def exact3_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1;\n        exact3 R M1 f M2 g M3\\<rbrakk>\n       \\<Longrightarrow> xa (g (f m)) = mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (frule_tac exact3_comp_0 [of M1 M2 M3 f g], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        mzeromap M1 N \\<in> mHom R M1 N; m \\<in> carrier M1;\n        exact3 R M1 f M2 g M3; compos M1 g f = mzeromap M1 M3\\<rbrakk>\n       \\<Longrightarrow> xa (g (f m)) = mzeromap M1 N m\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (frule_tac f = \"compos M1 g f\" and g = \"mzeromap M1 M3\"\n        and x = m in eq_fun_eq_val, \n        thin_tac \"compos M1 g f = mzeromap M1 M3\", \n        simp add:compos_def compose_def mzeromap_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; xa \\<in> mHom R M3 N;\n        x = sup_sharp R M2 M3 N g xa;\n        sup_sharp R M2 M3 N g xa \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f (sup_sharp R M2 M3 N g xa) \\<in> mHom R M1 N;\n        (\\<lambda>x\\<in>carrier M1. \\<zero>\\<^bsub>N\\<^esub>)\n        \\<in> mHom R M1 N;\n        m \\<in> carrier M1; exact3 R M1 f M2 g M3;\n        g (f m) = \\<zero>\\<^bsub>M3\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> xa \\<zero>\\<^bsub>M3\\<^esub> =\n                         \\<zero>\\<^bsub>N\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:Module.mHom_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n N,HOM\\<^bsub>R\\<^esub> M1 N\\<^esub> sup_sharp R M1 M2 N f\n                         \\<subseteq> sup_sharp R M2 M3 N g `\n                                     carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> M2\n                              N,HOM\\<^bsub>R\\<^esub> M1\n                                   N\\<^esub> sup_sharp R M1 M2 N f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sup_sharp R M2 M3 N g `\n                                 carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        x \\<in> carrier (HOM\\<^bsub>R\\<^esub> M2 N) \\<and>\n        sup_sharp R M1 M2 N f x =\n        \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sup_sharp R M2 M3 N g `\n                                 carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N;\n        x \\<in> carrier (HOM\\<^bsub>R\\<^esub> M2 N);\n        sup_sharp R M1 M2 N f x =\n        \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sup_sharp R M2 M3 N g `\n                                 carrier (HOM\\<^bsub>R\\<^esub> M3 N)", "apply (simp add:HOM_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f x =\n        \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> M1 N\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sup_sharp R M2 M3 N g ` mHom R M3 N", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        sup_sharp R M1 M2 N f x = mzeromap M1 N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sup_sharp R M2 M3 N g ` mHom R M3 N", "apply (simp add:sup_sharp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. compos M2 x g) ` mHom R M3 N", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R M3 N. x = compos M2 xa g", "apply (frule_tac Z = N and x = x in  exact_im_sub_ker1 [of M1 M2 M3 f g z1 e],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N;\n        compos M2\n         (\\<lambda>z\\<in>carrier M3.\n             x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n         g =\n        x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R M3 N. x = compos M2 xa g", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>compos M2\n                 (\\<lambda>z\\<in>carrier M3.\n                     x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n                 g =\n                x;\n        R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R M3 N. x = compos M2 xa g", "apply (frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>compos M2\n                 (\\<lambda>z\\<in>carrier M3.\n                     x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n                 g =\n                x;\n        R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N;\n        x =\n        compos M2\n         (\\<lambda>z\\<in>carrier M3.\n             x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n         g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R M3 N. x = compos M2 xa g", "apply (thin_tac \"compos M2 (\\<lambda>z\\<in>carrier M3. x \n                      (SOME y. y \\<in> carrier M2 \\<and> g y = z)) g = x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N;\n        x =\n        compos M2\n         (\\<lambda>z\\<in>carrier M3.\n             x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n         g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R M3 N. x = compos M2 xa g", "apply (frule_tac Z = N and x = x in exact_im_sub_ker [of M1 M2 M3 f g z1 e], \n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e);\n        exact4 R M1 f M2 g M3 z1 (Zm R e); R module N; x \\<in> mHom R M2 N;\n        compos M1 x f = mzeromap M1 N;\n        x =\n        compos M2\n         (\\<lambda>z\\<in>carrier M3.\n             x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n         g;\n        (\\<lambda>z\\<in>carrier M3.\n            x (SOME y. y \\<in> carrier M2 \\<and> g y = z))\n        \\<in> mHom R M3 N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R M3 N. x = compos M2 xa g", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma exact_HOM_exactTr:\"\\<lbrakk>Ring (R::('r, 'm1) Ring_scheme); f \\<in> mHom R M1 M2;\n      g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module NV;\n     \\<forall>(N::('a, 'r, 'm) Module_scheme). R module N \\<longrightarrow>\n      exact4 R (HOM\\<^bsub>R\\<^esub> (Zm R e) N)(sup_sharp R M3 (Zm R e) N z1)\n      (HOM\\<^bsub>R\\<^esub> M3 N) (sup_sharp R M2 M3 N g) (HOM\\<^bsub>R\\<^esub> M2 N) (sup_sharp R M1 M2 N f)\n      (HOM\\<^bsub>R\\<^esub> M1 N); R module (L::('a, 'r, 'm) Module_scheme)\\<rbrakk> \\<Longrightarrow> \n  exact4 R (HOM\\<^bsub>R\\<^esub> (Zm R e) L) (sup_sharp R M3 (Zm R e) L z1)\n (HOM\\<^bsub>R\\<^esub> M3 L) (sup_sharp R M2 M3 L g) (HOM\\<^bsub>R\\<^esub> M2 L) (sup_sharp R M1 M2 L f)\n (HOM\\<^bsub>R\\<^esub> M1 L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n     z1 \\<in> mHom R M3 (Zm R e); R module NV;\n     \\<forall>N.\n        R module N \\<longrightarrow>\n        exact4 R (HOM\\<^bsub>R\\<^esub> Zm R e N)\n         (sup_sharp R M3 (Zm R e) N z1) (HOM\\<^bsub>R\\<^esub> M3 N)\n         (sup_sharp R M2 M3 N g) (HOM\\<^bsub>R\\<^esub> M2 N)\n         (sup_sharp R M1 M2 N f) (HOM\\<^bsub>R\\<^esub> M1 N);\n     R module L\\<rbrakk>\n    \\<Longrightarrow> exact4 R (HOM\\<^bsub>R\\<^esub> Zm R e L)\n                       (sup_sharp R M3 (Zm R e) L z1)\n                       (HOM\\<^bsub>R\\<^esub> M3 L) (sup_sharp R M2 M3 L g)\n                       (HOM\\<^bsub>R\\<^esub> M2 L) (sup_sharp R M1 M2 L f)\n                       (HOM\\<^bsub>R\\<^esub> M1 L)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*\nlemma exact_HOM_exact:\"\\<lbrakk>ring (R:: ('r, 'm) RingType_scheme); R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R e); R module (NV::('g, 'r) ModuleType); \\<forall>(N::('g, 'r) ModuleType). R module N \\<longrightarrow> exact4 R (HOM\\<^sub>R (Zm R e) N) (HOM\\<^sub>R M3 N) (HOM\\<^sub>R M2 N) (HOM\\<^sub>R M1 N) (sup_sharp R M3 (Zm R e) N z1) (sup_sharp R M2 M3 N g) (sup_sharp R M1 M2 N f) \\<rbrakk> \\<Longrightarrow> exact4 R M1 M2 M3 (Zm R e) f g z1\"\napply (subst exact4_def)\napply (subgoal_tac \"surjec\\<^sub>M2\\<^sub>,\\<^sub>M3 g\")\n apply (frule surjec_right_exact [of \"R\" \"M2\" \"M3\" \"g\" \"z1\" \"e\"], assumption+)\n apply (simp add:exact3_def)\nprefer 2\napply (frule img_set_submodule [of \"R\" \"M2\" \"M3\" \"g\"], assumption+)\napply (frule qmodule_module [of \"R\" \"M3\" \"g ` carrier M2\"], assumption+)\napply (subgoal_tac \"exact4 R (HOM\\<^sub>R (Zm R e) (M3 /\\<^sub>m (g ` carrier M2))) (HOM\\<^sub>R M3 (M3 /\\<^sub>m (g ` carrier M2))) (HOM\\<^sub>R M2 (M3 /\\<^sub>m (g ` carrier M2))) (HOM\\<^sub>R M1 (M3 /\\<^sub>m (g ` carrier M2))) (sup_sharp R M3 (Zm R e) (M3 /\\<^sub>m (g ` carrier M2)) z1) (sup_sharp R M2 M3 (M3 /\\<^sub>m (g ` carrier M2)) g) (sup_sharp R M1 M2 (M3 /\\<^sub>m (g ` carrier M2)) f)\")\nprefer 2 \n apply (thin_tac \"submodule R M3 (g ` carrier M2)\")\n apply (thin_tac \"ring R\") apply (thin_tac \"R module M1\")\n apply (thin_tac \" R module M2\") apply (thin_tac \"R module M3\")\napply blast ML\napply (rule allI)\n apply (rule impI)\n apply simp     ????????????\n*)"], ["", "lemma lexact4_rexact4_HOM:\"\\<lbrakk>Ring R; R module M1; R module M2; R module M3;\nf \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; \nexact4 R (Zm R e) z M1 f M2 g M3 \\<rbrakk> \\<Longrightarrow> \n\\<forall>N. R module N \\<longrightarrow> exact4 R (HOM\\<^bsub>R\\<^esub> N (Zm R e)) (sub_sharp R N (Zm R e) M1 z)\n    (HOM\\<^bsub>R\\<^esub> N M1) (sub_sharp R N M1 M2 f) (HOM\\<^bsub>R\\<^esub> N M2) (sub_sharp R N M2 M3 g)\n    (HOM\\<^bsub>R\\<^esub> N M3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n     f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n     exact4 R (Zm R e) z M1 f M2 g M3\\<rbrakk>\n    \\<Longrightarrow> \\<forall>N.\n                         R module N \\<longrightarrow>\n                         exact4 R (HOM\\<^bsub>R\\<^esub> N Zm R e)\n                          (sub_sharp R N (Zm R e) M1 z)\n                          (HOM\\<^bsub>R\\<^esub> N M1)\n                          (sub_sharp R N M1 M2 f)\n                          (HOM\\<^bsub>R\\<^esub> N M2)\n                          (sub_sharp R N M2 M3 g)\n                          (HOM\\<^bsub>R\\<^esub> N M3)", "(*       \n                        N\n                     z  |   f     g    \n            (Zm R e) \\<rightarrow> M1 \\<rightarrow> M2 \\<rightarrow> M3  *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n     f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n     exact4 R (Zm R e) z M1 f M2 g M3\\<rbrakk>\n    \\<Longrightarrow> \\<forall>N.\n                         R module N \\<longrightarrow>\n                         exact4 R (HOM\\<^bsub>R\\<^esub> N Zm R e)\n                          (sub_sharp R N (Zm R e) M1 z)\n                          (HOM\\<^bsub>R\\<^esub> N M1)\n                          (sub_sharp R N M1 M2 f)\n                          (HOM\\<^bsub>R\\<^esub> N M2)\n                          (sub_sharp R N M2 M3 g)\n                          (HOM\\<^bsub>R\\<^esub> N M3)", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        exact4 R (Zm R e) z M1 f M2 g M3\\<rbrakk>\n       \\<Longrightarrow> R module N \\<longrightarrow>\n                         exact4 R (HOM\\<^bsub>R\\<^esub> N Zm R e)\n                          (sub_sharp R N (Zm R e) M1 z)\n                          (HOM\\<^bsub>R\\<^esub> N M1)\n                          (sub_sharp R N M1 M2 f)\n                          (HOM\\<^bsub>R\\<^esub> N M2)\n                          (sub_sharp R N M2 M3 g)\n                          (HOM\\<^bsub>R\\<^esub> N M3)", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> exact4 R (HOM\\<^bsub>R\\<^esub> N Zm R e)\n                          (sub_sharp R N (Zm R e) M1 z)\n                          (HOM\\<^bsub>R\\<^esub> N M1)\n                          (sub_sharp R N M1 M2 f)\n                          (HOM\\<^bsub>R\\<^esub> N M2)\n                          (sub_sharp R N M2 M3 g)\n                          (HOM\\<^bsub>R\\<^esub> N M3)", "apply (subst exact4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N (Zm R e) M1 z `\n                         carrier (HOM\\<^bsub>R\\<^esub> N Zm R e) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f \\<and>\n                         sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N (Zm R e) M1 z `\n                         carrier (HOM\\<^bsub>R\\<^esub> N Zm R e) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule equalityI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N (Zm R e) M1 z `\n                         carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n                         \\<subseteq> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n             M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule subsetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> sub_sharp R N (Zm R e) M1 z `\n                carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n         M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        \\<exists>xa\\<in>carrier (HOM\\<^bsub>R\\<^esub> N Zm R e).\n           x = sub_sharp R N (Zm R e) M1 z xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n         M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        \\<exists>xa\\<in>mHom R N (Zm R e).\n           x = sub_sharp R N (Zm R e) M1 z xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>\\<lparr>carrier = mHom R N M1,\n         pop = tOp_mHom R N M1, mop = iOp_mHom R N M1, zero = mzeromap N M1,\n         sprod =\n           sprod_mHom R N\n            M1\\<rparr>,\\<lparr>carrier = mHom R N M2, pop = tOp_mHom R N M2,\n                          mop = iOp_mHom R N M2, zero = mzeromap N M2,\n                          sprod =\n                            sprod_mHom R N\n                             M2\\<rparr>\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (fold HOM_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        \\<exists>xa\\<in>mHom R N (Zm R e).\n           x = sub_sharp R N (Zm R e) M1 z xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n         M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (erule bexE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = sub_sharp R N (Zm R e) M1 z xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n         M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = sub_sharp R N (Zm R e) M1 z xa\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N (Zm R e) M1 z xa\n                         \\<in> carrier (HOM\\<^bsub>R\\<^esub> N M1) \\<and>\n                         sub_sharp R N M1 M2 f\n                          (sub_sharp R N (Zm R e) M1 z xa) =\n                         \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> N M2\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = sub_sharp R N (Zm R e) M1 z xa\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N (Zm R e) M1 z xa\n                         \\<in> mHom R N M1 \\<and>\n                         sub_sharp R N M1 M2 f\n                          (sub_sharp R N (Zm R e) M1 z xa) =\n                         mzeromap N M2\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:sub_sharp_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> (compos N z xa \\<in> mHom R N M1 \\<longrightarrow>\n                          compos N f (compos N z xa) = mzeromap N M2) \\<and>\n                         compos N z xa \\<in> mHom R N M1\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (cut_tac Ring.Zm_Module [of R e])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> (compos N z xa \\<in> mHom R N M1 \\<longrightarrow>\n                          compos N f (compos N z xa) = mzeromap N M2) \\<and>\n                         compos N z xa \\<in> mHom R N M1\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:Module.mHom_compos)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> compos N f (compos N z xa) = mzeromap N M2\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac L = N and f = xa in \n                  Module.mHom_compos[of \"Zm R e\" R _ M1 _ z], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e; compos N z xa \\<in> mHom R N M1\\<rbrakk>\n       \\<Longrightarrow> compos N f (compos N z xa) = mzeromap N M2\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac L = N and f = \"compos N z xa\" in \n                             Module.mHom_compos[of M1 R _ M2 _ f], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e; compos N z xa \\<in> mHom R N M1;\n        compos N f (compos N z xa) \\<in> mHom R N M2\\<rbrakk>\n       \\<Longrightarrow> compos N f (compos N z xa) = mzeromap N M2\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac M = N in Ring.mzeromap_mHom [of R _  M2], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e; compos N z xa \\<in> mHom R N M1;\n        compos N f (compos N z xa) \\<in> mHom R N M2;\n        mzeromap N M2 \\<in> mHom R N M2\\<rbrakk>\n       \\<Longrightarrow> compos N f (compos N z xa) = mzeromap N M2\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule Module.mHom_eq, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e; compos N z xa \\<in> mHom R N M1;\n        compos N f (compos N z xa) \\<in> mHom R N M2;\n        mzeromap N M2 \\<in> mHom R N M2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier N.\n                            compos N f (compos N z xa) m = mzeromap N M2 m\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule ballI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e; compos N z xa \\<in> mHom R N M1;\n        compos N f (compos N z xa) \\<in> mHom R N M2;\n        mzeromap N M2 \\<in> mHom R N M2; m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> compos N f (compos N z xa) m = mzeromap N M2 m\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:mzeromap_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa;\n        R module Zm R e; compos N z xa \\<in> mHom R N M1;\n        compos N f (compos N z xa) \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> compos N f (compos N z xa) m =\n                         \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:compos_def compose_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac M = N and f = xa and m = m in Module.mHom_mem [of _ R \n         \"Zm R e\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:exact4_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule conjunct1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e);\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (thin_tac \"z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (erule conjE, thin_tac \"f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e);\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule Ring.mHom_func[of R z \"(Zm R e)\" M1], assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e);\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f;\n        z \\<in> carrier (Zm R e) \\<rightarrow> carrier M1\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac a = \"xa m\" in mem_in_image\n          [of z \"carrier (Zm R e)\" \"carrier M1\"], assumption+, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; xa \\<in> mHom R N (Zm R e);\n        x = (\\<lambda>x\\<in>carrier N. z (xa x)); R module Zm R e;\n        (\\<lambda>x\\<in>carrier N. z (xa x)) \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            f (if x \\<in> carrier N then z (xa x) else undefined))\n        \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>)\n        \\<in> mHom R N M2;\n        m \\<in> carrier N; xa m \\<in> carrier (Zm R e);\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f;\n        z \\<in> carrier (Zm R e) \\<rightarrow> carrier M1;\n        z (xa m) \\<in> ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> f (z (xa m)) = \\<zero>\\<^bsub>M2\\<^esub>\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N (Zm R e); x = compos N z xa\\<rbrakk>\n       \\<Longrightarrow> Ring R\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 4. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:ker_def, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M1,HOM\\<^bsub>R\\<^esub> N M2\\<^esub> sub_sharp R N M1 M2 f\n                         \\<subseteq> sub_sharp R N (Zm R e) M1 z `\n                                     carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n                              M1,HOM\\<^bsub>R\\<^esub> N\n                                    M2\\<^esub> sub_sharp R N M1 M2\n          f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sub_sharp R N (Zm R e) M1 z `\n                                 carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> carrier (HOM\\<^bsub>R\\<^esub> N M1) \\<and>\n        sub_sharp R N M1 M2 f x =\n        \\<zero>\\<^bsub>HOM\\<^bsub>R\\<^esub> N M2\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sub_sharp R N (Zm R e) M1 z `\n                                 carrier (HOM\\<^bsub>R\\<^esub> N Zm R e)\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:HOM_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> mHom R N M1 \\<and>\n        sub_sharp R N M1 M2 f x = mzeromap N M2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sub_sharp R N (Zm R e) M1 z `\n                                 mHom R N (Zm R e)\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M1;\n        sub_sharp R N M1 M2 f x = mzeromap N M2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sub_sharp R N (Zm R e) M1 z `\n                                 mHom R N (Zm R e)\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac M = N in Ring.mHom_to_zero [of \"R\" _ \"e\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M1;\n        sub_sharp R N M1 M2 f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sub_sharp R N (Zm R e) M1 z `\n                                 mHom R N (Zm R e)\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M1;\n        sub_sharp R N M1 M2 f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)}\\<rbrakk>\n       \\<Longrightarrow> x =\n                         sub_sharp R N (Zm R e) M1 z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:sub_sharp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)}\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:exact4_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)}\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule conjunct1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (thin_tac \"z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n                                          f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; x \\<in> mHom R N M1;\n        compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:Zm_def, fold Zm_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; x \\<in> mHom R N M1;\n        compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        {z e} = ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac L = N and f = x in Ring.mzero_im_sub_ker [of R _ M1 M2 _ f], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; x \\<in> mHom R N M1;\n        compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        {z e} = ker\\<^bsub>M1,M2\\<^esub> f;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rotate_tac -2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>{z e} = ker\\<^bsub>M1,M2\\<^esub> f;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M1,M2\\<^esub> f; Ring R;\n        R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)}\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>{z e} = ker\\<^bsub>M1,M2\\<^esub> f;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M1,M2\\<^esub> f; Ring R;\n        R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (thin_tac \"{z e} = ker\\<^bsub>M1,M2\\<^esub> f\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (subgoal_tac \"mzeromap N (Zm R e) \\<in> mHom R N (Zm R e)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}\\<rbrakk>\n       \\<Longrightarrow> mzeromap N (Zm R e) \\<in> mHom R N (Zm R e)\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}\\<rbrakk>\n       \\<Longrightarrow> mzeromap N (Zm R e) \\<in> mHom R N (Zm R e)\n 2. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e)\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule Ring.Zm_Module[of R e])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e);\n        R module Zm R e\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac L = N and f = \"mzeromap N (Zm R e)\" in\n        Module.mHom_compos [of \"Zm R e\" R _  M1 _ z], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e); R module Zm R e;\n        compos N z (mzeromap N (Zm R e)) \\<in> mHom R N M1\\<rbrakk>\n       \\<Longrightarrow> x = compos N z (mzeromap N (Zm R e))\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule Module.mHom_eq, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e); R module Zm R e;\n        compos N z (mzeromap N (Zm R e)) \\<in> mHom R N M1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier N.\n                            x m = compos N z (mzeromap N (Zm R e)) m\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1; compos N f x = mzeromap N M2;\n        mHom R N (Zm R e) = {mzeromap N (Zm R e)};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e};\n        mzeromap N (Zm R e) \\<in> mHom R N (Zm R e); R module Zm R e;\n        compos N z (mzeromap N (Zm R e)) \\<in> mHom R N M1;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x m = compos N z (mzeromap N (Zm R e)) m\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:compos_def compose_def mzeromap_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1;\n        (\\<lambda>xa\\<in>carrier N. f (x xa)) =\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>);\n        mHom R N (Zm R e) =\n        {\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>Zm R e\\<^esub>};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}; R module Zm R e;\n        (\\<lambda>x\\<in>carrier N.\n            z (if x \\<in> carrier N then \\<zero>\\<^bsub>Zm R e\\<^esub>\n               else undefined))\n        \\<in> mHom R N M1;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x m = z \\<zero>\\<^bsub>Zm R e\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:Zm_def, fold Zm_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1;\n        (\\<lambda>xa\\<in>carrier N. f (x xa)) =\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>);\n        mHom R N (Zm R e) = {\\<lambda>x\\<in>carrier N. e};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}; R module Zm R e;\n        (\\<lambda>x\\<in>carrier N.\n            z (if x \\<in> carrier N then \\<zero>\\<^bsub>Zm R e\\<^esub>\n               else undefined))\n        \\<in> mHom R N M1;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> x m = z e\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac M = N and f = x in Ring.mHom_func[of R _ _ M1], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1;\n        (\\<lambda>xa\\<in>carrier N. f (x xa)) =\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>);\n        mHom R N (Zm R e) = {\\<lambda>x\\<in>carrier N. e};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}; R module Zm R e;\n        (\\<lambda>x\\<in>carrier N.\n            z (if x \\<in> carrier N then \\<zero>\\<^bsub>Zm R e\\<^esub>\n               else undefined))\n        \\<in> mHom R N M1;\n        m \\<in> carrier N;\n        x \\<in> carrier N \\<rightarrow> carrier M1\\<rbrakk>\n       \\<Longrightarrow> x m = z e\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac f = x and A = \"carrier N\" and B = \"carrier M1\" and a = m in\n         mem_in_image, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1;\n        (\\<lambda>xa\\<in>carrier N. f (x xa)) =\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>);\n        mHom R N (Zm R e) = {\\<lambda>x\\<in>carrier N. e};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}; R module Zm R e;\n        (\\<lambda>x\\<in>carrier N.\n            z (if x \\<in> carrier N then \\<zero>\\<^bsub>Zm R e\\<^esub>\n               else undefined))\n        \\<in> mHom R N M1;\n        m \\<in> carrier N; x \\<in> carrier N \\<rightarrow> carrier M1;\n        x m \\<in> x ` carrier N\\<rbrakk>\n       \\<Longrightarrow> x m = z e\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (frule_tac c = \"x m\" and A = \"x ` carrier N\" and B = \"{z e}\" in \n                      subsetD, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x m.\n       \\<lbrakk>x ` carrier N \\<subseteq> {z e}; Ring R; R module M1;\n        R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1; R module N;\n        x \\<in> mHom R N M1;\n        (\\<lambda>xa\\<in>carrier N. f (x xa)) =\n        (\\<lambda>x\\<in>carrier N. \\<zero>\\<^bsub>M2\\<^esub>);\n        mHom R N (Zm R e) = {\\<lambda>x\\<in>carrier N. e};\n        ker\\<^bsub>M1,M2\\<^esub> f = {z e}; R module Zm R e;\n        (\\<lambda>x\\<in>carrier N.\n            z (if x \\<in> carrier N then \\<zero>\\<^bsub>Zm R e\\<^esub>\n               else undefined))\n        \\<in> mHom R N M1;\n        m \\<in> carrier N; x \\<in> carrier N \\<rightarrow> carrier M1;\n        x m \\<in> x ` carrier N; x m \\<in> {z e}\\<rbrakk>\n       \\<Longrightarrow> x m = z e\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> sub_sharp R N M1 M2 f `\n                         carrier (HOM\\<^bsub>R\\<^esub> N M1) =\n                         ker\\<^bsub>HOM\\<^bsub>R\\<^esub> N\n M2,HOM\\<^bsub>R\\<^esub> N M3\\<^esub> sub_sharp R N M2 M3 g", "apply (simp add:image_def ker_def HOM_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<in>mHom R N M1.\n                                y = sub_sharp R N M1 M2 f x} =\n                         {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<in>mHom R N M1.\n                                y = sub_sharp R N M1 M2 f x}\n                         \\<subseteq> {a \\<in> mHom R N M2.\nsub_sharp R N M2 M3 g a = mzeromap N M3}\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> {y. \\<exists>x\\<in>mHom R N M1.\n                       y = sub_sharp R N M1 M2 f x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {a \\<in> mHom R N M2.\n                                  sub_sharp R N M2 M3 g a = mzeromap N M3}\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (simp, erule bexE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1;\n        x = sub_sharp R N M1 M2 f xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> mHom R N M2 \\<and>\n                         sub_sharp R N M2 M3 g x = mzeromap N M3\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (simp add:sub_sharp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa\\<rbrakk>\n       \\<Longrightarrow> (compos N f xa \\<in> mHom R N M2 \\<longrightarrow>\n                          compos N g (compos N f xa) = mzeromap N M3) \\<and>\n                         compos N f xa \\<in> mHom R N M2\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (frule_tac L = N and f = xa in Module.mHom_compos [of M1 R _ M2 _ \"f\"],\n                              assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2\\<rbrakk>\n       \\<Longrightarrow> (compos N f xa \\<in> mHom R N M2 \\<longrightarrow>\n                          compos N g (compos N f xa) = mzeromap N M3) \\<and>\n                         compos N f xa \\<in> mHom R N M2\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2\\<rbrakk>\n       \\<Longrightarrow> compos N g (compos N f xa) = mzeromap N M3\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (frule_tac L = N and f = \"compos N f xa\" in Module.mHom_compos [of M2 R\n        _ M3 _ g], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2;\n        compos N g (compos N f xa) \\<in> mHom R N M3\\<rbrakk>\n       \\<Longrightarrow> compos N g (compos N f xa) = mzeromap N M3\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (rule Module.mHom_eq, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2;\n        compos N g (compos N f xa) \\<in> mHom R N M3\\<rbrakk>\n       \\<Longrightarrow> mzeromap N M3 \\<in> mHom R N M3\n 2. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2;\n        compos N g (compos N f xa) \\<in> mHom R N M3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier N.\n                            compos N g (compos N f xa) m = mzeromap N M3 m\n 3. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (simp add:Ring.mzeromap_mHom)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2;\n        compos N g (compos N f xa) \\<in> mHom R N M3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m\\<in>carrier N.\n                            compos N g (compos N f xa) m = mzeromap N M3 m\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; x = compos N f xa;\n        compos N f xa \\<in> mHom R N M2;\n        compos N g (compos N f xa) \\<in> mHom R N M3;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> compos N g (compos N f xa) m = mzeromap N M3 m\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (simp add:compos_def compose_def mzeromap_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1;\n        x = (\\<lambda>x\\<in>carrier N. f (xa x));\n        (\\<lambda>x\\<in>carrier N. f (xa x)) \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N.\n            g (if x \\<in> carrier N then f (xa x) else undefined))\n        \\<in> mHom R N M3;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (thin_tac \" x = (\\<lambda>x\\<in>carrier N. f (xa x))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N. f (xa x)) \\<in> mHom R N M2;\n        (\\<lambda>x\\<in>carrier N.\n            g (if x \\<in> carrier N then f (xa x) else undefined))\n        \\<in> mHom R N M3;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (thin_tac \"(\\<lambda>x\\<in>carrier N. f (xa x)) \\<in> mHom R N M2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1;\n        (\\<lambda>x\\<in>carrier N.\n            g (if x \\<in> carrier N then f (xa x) else undefined))\n        \\<in> mHom R N M3;\n        m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (thin_tac \"(\\<lambda>x\\<in>carrier N. g (if x \\<in> carrier N then f (xa x) else undefined)) \\<in> mHom R N M3\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; m \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (frule_tac M = N and f = xa and m = m in Module.mHom_mem [of _ R M1], \n        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; xa \\<in> mHom R N M1; m \\<in> carrier N;\n        xa m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (simp add:exact4_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; xa \\<in> mHom R N M1; m \\<in> carrier N;\n        xa m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (frule conjunct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; xa \\<in> mHom R N M1; m \\<in> carrier N;\n        xa m \\<in> carrier M1;\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (thin_tac \"z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n                                     f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; xa \\<in> mHom R N M1;\n        m \\<in> carrier N; xa m \\<in> carrier M1;\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (frule Ring.mHom_func[of R f M1 M2], assumption+,\n        frule_tac f = f and A = \"carrier M1\" and B = \"carrier M2\" and \n        a = \"xa m\" in  mem_in_image, assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N xa m.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; R module N; xa \\<in> mHom R N M1;\n        m \\<in> carrier N; xa m \\<in> carrier M1;\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        f \\<in> carrier M1 \\<rightarrow> carrier M2;\n        f (xa m) \\<in> ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> g (f (xa m)) = \\<zero>\\<^bsub>M3\\<^esub>\n 2. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (simp add:ker_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N\\<rbrakk>\n       \\<Longrightarrow> {a \\<in> mHom R N M2.\n                          sub_sharp R N M2 M3 g a = mzeromap N M3}\n                         \\<subseteq> {y.\n\\<exists>x\\<in>mHom R N M1. y = sub_sharp R N M1 M2 f x}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> {a \\<in> mHom R N M2.\n                 sub_sharp R N M2 M3 g a = mzeromap N M3}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {y. \\<exists>x\\<in>mHom R N M1.\n  y = sub_sharp R N M1 M2 f x}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N;\n        x \\<in> mHom R N M2 \\<and>\n        sub_sharp R N M2 M3 g x = mzeromap N M3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1.\n                            x = sub_sharp R N M1 M2 f xa", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M2;\n        sub_sharp R N M2 M3 g x = mzeromap N M3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1.\n                            x = sub_sharp R N M1 M2 f xa", "apply (simp add:sub_sharp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M2;\n        compos N g x = mzeromap N M3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (frule_tac L = N and f = x in Ring.mzero_im_sub_ker [of R _ M2 M3 _ g],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1; exact4 R (Zm R e) z M1 f M2 g M3;\n        R module N; x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (simp add:exact4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (frule conjunct2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M2,M3\\<^esub> g;\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g; Ring R;\n        R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M2,M3\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g; Ring R;\n        R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M2,M3\\<^esub> g;\n        ker\\<^bsub>M2,M3\\<^esub> g = f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (thin_tac \"f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f \\<and>\n        f ` carrier M1 = ker\\<^bsub>M2,M3\\<^esub> g;\n        R module N; x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> ker\\<^bsub>M2,M3\\<^esub> g;\n        ker\\<^bsub>M2,M3\\<^esub> g = f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        ker\\<^bsub>M2,M3\\<^esub> g = f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (thin_tac \"ker\\<^bsub>M2,M3\\<^esub> g = f ` carrier M1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (frule Ring.left_exact_injec[of \"R\" \"M1\" \"M2\" \"z\" \"e\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1\\<rbrakk>\n       \\<Longrightarrow> exact3 R (Zm R e) z M1 f M2\n 2. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (simp add:exact3_def exact4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (frule_tac N = N and x = x in Ring.injec_mHom_image[of R _ M1 M2 _ f], \n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1 \\<and>\n        compos N f\n         (\\<lambda>n\\<in>carrier N.\n             SOME m. m \\<in> carrier M1 \\<and> x n = f m) =\n        x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1;\n        compos N f\n         (\\<lambda>n\\<in>carrier N.\n             SOME m. m \\<in> carrier M1 \\<and> x n = f m) =\n        x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>compos N f\n                 (\\<lambda>n\\<in>carrier N.\n                     SOME m. m \\<in> carrier M1 \\<and> x n = f m) =\n                x;\n        Ring R; R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>compos N f\n                 (\\<lambda>n\\<in>carrier N.\n                     SOME m. m \\<in> carrier M1 \\<and> x n = f m) =\n                x;\n        Ring R; R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n        g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1;\n        x =\n        compos N f\n         (\\<lambda>n\\<in>carrier N.\n             SOME m. m \\<in> carrier M1 \\<and> x n = f m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply (thin_tac \"compos N f (\\<lambda>n\\<in>carrier N. SOME m. m \\<in> carrier M1 \\<and> \n                                                        x n = f m) = x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>N x.\n       \\<lbrakk>Ring R; R module M1; R module M2; R module M3;\n        f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3;\n        z \\<in> mHom R (Zm R e) M1;\n        z ` carrier (Zm R e) = ker\\<^bsub>M1,M2\\<^esub> f; R module N;\n        x \\<in> mHom R N M2; compos N g x = mzeromap N M3;\n        x ` carrier N \\<subseteq> f ` carrier M1;\n        injec\\<^bsub>M1,M2\\<^esub> f;\n        (\\<lambda>n\\<in>carrier N.\n            SOME m. m \\<in> carrier M1 \\<and> x n = f m)\n        \\<in> mHom R N M1;\n        x =\n        compos N f\n         (\\<lambda>n\\<in>carrier N.\n             SOME m. m \\<in> carrier M1 \\<and> x n = f m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>mHom R N M1. x = compos N f xa", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* Now, we cannot prove following because of type problem\nlemma l_exact4_HOM_lexact4:\"\\<lbrakk>ring R; R module M1; R module M2; R module M3; f \\<in> mHom R M1 M2;\n   g \\<in> mHom R M2 M3; z \\<in> mHom R (Zm R e) M1;\n   \\<forall>N. R module N \\<longrightarrow>\n       exact4 R (HOM\\<^sub>R N Zm R e) (HOM\\<^sub>R N M1) (HOM\\<^sub>R N M2) (HOM\\<^sub>R N M3)\n        (sub_sharp R N (Zm R e) M1 z) (sub_sharp R N M1 M2 f)\n        (sub_sharp R N M2 M3 g)\\<rbrakk>\n\\<Longrightarrow> exact4 R (Zm R e) M1 M2 M3 z f g\" *)\n\n(*\nlemma exact_coker:\"\\<lbrakk>ring R; R module M1; R module M2; R module M3; z \\<in> mHom R (Zm R e) M1; f \\<in> mHom R M1 M2; g \\<in> mHom R M2 M3; z1 \\<in> mHom R M3 (Zm R ee);  R module N1; R module N2; R module N3; h \\<in> mHom R N1 N2; i \\<in> mHom R N2 N3; exact5 (Zm R e) M1 M2 M3 (Zm R ee) z f g z1: exact5 (Zm R u) N1 N2 N3 (Zm R uu) z h i z1: f1 \\<in> mHom R M1 N1; f2 \\<in> mHom R M2 N2; f3 \\<in> mHom R M3 N3; compos m1 f2 f = compos M1 h f1; compos M2 f3 g = compos M2 i f2\\<rbrakk> \\<Longrightarrow> exact8 (Zm R e) (mdl M1 (ker\\<^sub>M1\\<^sub>,\\<^sub>N1 f1)) (mdl M2 (ker\\<^sub>M2\\<^sub>,\\<^sub>N2 f2)) (mdl M3 (ker\\<^sub>M3\\<^sub>,\\<^sub>N3 f3)) (N1 /\\<^sub>m (f1 ` (carrier M1))) (N2 /\\<^sub>m (f2 ` (carrier M2))) (N3 /\\<^sub>m (f3 ` (carrier M3))) z f g zz hh ii zz1 \"\n\n\n*)"], ["", "section \"Tensor product\""], ["", "definition\n  prod_carr :: \"[('a, 'r, 'm) Module_scheme, ('b, 'r, 'm) Module_scheme]\n   \\<Rightarrow> ('a * 'b) set\" (infixl \"\\<times>\\<^sub>c\" 100) where\n  \"M \\<times>\\<^sub>c N = carrier M \\<times> carrier N\""], ["", "definition\n  bilinear_map :: \"['a * 'b \\<Rightarrow> 'c, ('r, 'm) Ring_scheme, \n    ('a, 'r, 'm1) Module_scheme, ('b, 'r, 'm1) Module_scheme, \n    ('c, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\" where\n  \"bilinear_map f R M1 M2 N \\<longleftrightarrow> f \\<in> M1 \\<times>\\<^sub>c M2 \\<rightarrow> carrier N \\<and> \n                             f \\<in> extensional (M1 \\<times>\\<^sub>c M2) \\<and> \n   (\\<forall>x1 \\<in> carrier M1. \\<forall>x2 \\<in> carrier M1. \n         \\<forall>y\\<in>carrier M2.(f (x1 \\<plusminus>\\<^bsub>M1\\<^esub> x2, y) = f (x1, y) \\<plusminus>\\<^bsub>N\\<^esub> (f (x2, y)))) \\<and> \n   (\\<forall>x\\<in>carrier M1. \\<forall>y1\\<in>carrier M2. \n         \\<forall>y2\\<in>carrier M2. f (x, y1 \\<plusminus>\\<^bsub>M2\\<^esub> y2) = f (x, y1) \\<plusminus>\\<^bsub>N\\<^esub> (f (x, y2))) \\<and> \n   (\\<forall>x\\<in>carrier M1. \\<forall>y\\<in>carrier M2. \n         \\<forall>r\\<in>carrier R. f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x, y) = r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (x, y)) \\<and> \n                       f (x, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> y) = r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (x, y)))\""], ["", "lemma (in Ring) prod_carr_mem:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M; \n       n \\<in> carrier N\\<rbrakk> \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M;\n     n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N", "by (simp add:prod_carr_def)"], ["", "lemma (in Ring) bilinear_func:\"bilinear_map f R M N Z \\<Longrightarrow>\n                  f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bilinear_map f R M N Z \\<Longrightarrow>\n    f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z", "by (simp add:bilinear_map_def)"], ["", "lemma (in Ring) bilinear_mem:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n      f (m1, m2) \\<in> carrier N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m1, m2) \\<in> carrier N", "apply (simp add:bilinear_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2;\n     f \\<in> M1 \\<times>\\<^sub>c M2 \\<rightarrow> carrier N \\<and>\n     f \\<in> extensional (M1 \\<times>\\<^sub>c M2) \\<and>\n     (\\<forall>x1\\<in>carrier M1.\n         \\<forall>x2\\<in>carrier M1.\n            \\<forall>y\\<in>carrier M2.\n               f (x1 \\<plusminus>\\<^bsub>M1\\<^esub> x2, y) =\n               f (x1, y) \\<plusminus>\\<^bsub>N\\<^esub> f (x2, y)) \\<and>\n     (\\<forall>x\\<in>carrier M1.\n         \\<forall>y1\\<in>carrier M2.\n            \\<forall>y2\\<in>carrier M2.\n               f (x, y1 \\<plusminus>\\<^bsub>M2\\<^esub> y2) =\n               f (x, y1) \\<plusminus>\\<^bsub>N\\<^esub> f (x, y2)) \\<and>\n     (\\<forall>x\\<in>carrier M1.\n         \\<forall>y\\<in>carrier M2.\n            \\<forall>r\\<in>carrier R.\n               f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x, y) =\n               r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (x, y) \\<and>\n               f (x, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> y) =\n               r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (x, y))\\<rbrakk>\n    \\<Longrightarrow> f (m1, m2) \\<in> carrier N", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2;\n     f \\<in> M1 \\<times>\\<^sub>c M2 \\<rightarrow> carrier N;\n     f \\<in> extensional (M1 \\<times>\\<^sub>c M2);\n     \\<forall>x1\\<in>carrier M1.\n        \\<forall>x2\\<in>carrier M1.\n           \\<forall>y\\<in>carrier M2.\n              f (x1 \\<plusminus>\\<^bsub>M1\\<^esub> x2, y) =\n              f (x1, y) \\<plusminus>\\<^bsub>N\\<^esub> f (x2, y);\n     \\<forall>x\\<in>carrier M1.\n        \\<forall>y1\\<in>carrier M2.\n           \\<forall>y2\\<in>carrier M2.\n              f (x, y1 \\<plusminus>\\<^bsub>M2\\<^esub> y2) =\n              f (x, y1) \\<plusminus>\\<^bsub>N\\<^esub> f (x, y2);\n     \\<forall>x\\<in>carrier M1.\n        \\<forall>y\\<in>carrier M2.\n           \\<forall>r\\<in>carrier R.\n              f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x, y) =\n              r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (x, y) \\<and>\n              f (x, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> y) =\n              r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (x, y)\\<rbrakk>\n    \\<Longrightarrow> f (m1, m2) \\<in> carrier N", "apply (rule funcset_mem [of \"f\" \"M1 \\<times>\\<^sub>c M2\" \"carrier N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2;\n     f \\<in> M1 \\<times>\\<^sub>c M2 \\<rightarrow> carrier N;\n     f \\<in> extensional (M1 \\<times>\\<^sub>c M2);\n     \\<forall>x1\\<in>carrier M1.\n        \\<forall>x2\\<in>carrier M1.\n           \\<forall>y\\<in>carrier M2.\n              f (x1 \\<plusminus>\\<^bsub>M1\\<^esub> x2, y) =\n              f (x1, y) \\<plusminus>\\<^bsub>N\\<^esub> f (x2, y);\n     \\<forall>x\\<in>carrier M1.\n        \\<forall>y1\\<in>carrier M2.\n           \\<forall>y2\\<in>carrier M2.\n              f (x, y1 \\<plusminus>\\<^bsub>M2\\<^esub> y2) =\n              f (x, y1) \\<plusminus>\\<^bsub>N\\<^esub> f (x, y2);\n     \\<forall>x\\<in>carrier M1.\n        \\<forall>y\\<in>carrier M2.\n           \\<forall>r\\<in>carrier R.\n              f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x, y) =\n              r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (x, y) \\<and>\n              f (x, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> y) =\n              r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (x, y)\\<rbrakk>\n    \\<Longrightarrow> (m1, m2) \\<in> M1 \\<times>\\<^sub>c M2", "apply (simp add:prod_carr_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_l_add:\"\\<lbrakk>R module M1; R module M2; R module N; \n       m11 \\<in> carrier M1; m12 \\<in> carrier M1; m2 \\<in> carrier M2; \n       bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n       f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) = f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> (f (m12, m2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) =\n                      f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> f (m12, m2)", "apply (simp add:bilinear_map_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_l_add1:\"\\<lbrakk>R module M1; R module M2; R module N; \n       m11 \\<in> carrier M1; m12 \\<in> carrier M1; m2 \\<in> carrier M2; \n       bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n       f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> (f (m12, m2))) = \\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12,\n                         m2) \\<plusminus>\\<^bsub>N\\<^esub>\n                      -\\<^sub>a\\<^bsub>N\\<^esub> (f\n             (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n            f (m12, m2)) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag[of N],\n       frule Module.module_is_ag[of M1],\n       subst aGroup.ag_eq_diffzero[of N, THEN sym], assumption+,\n       frule_tac x = m11 and y = m12 in aGroup.ag_pOp_closed, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M1;\n     m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12 \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2)\n                      \\<in> carrier N\n 2. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> f (m12, m2)\n                      \\<in> carrier N\n 3. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) =\n                      f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> f (m12, m2)", "apply (simp add:bilinear_mem,\n       rule aGroup.ag_pOp_closed, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> f (m11, m2) \\<in> carrier N\n 2. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> f (m12, m2) \\<in> carrier N\n 3. \\<lbrakk>R module M1; R module M2; R module N; m11 \\<in> carrier M1;\n     m12 \\<in> carrier M1; m2 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> f (m11 \\<plusminus>\\<^bsub>M1\\<^esub> m12, m2) =\n                      f (m11, m2) \\<plusminus>\\<^bsub>N\\<^esub> f (m12, m2)", "apply ((simp add:bilinear_mem)+, simp add:bilinear_l_add)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_r_add:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m \\<in> carrier M1; m21 \\<in> carrier M2; m22 \\<in> carrier M2; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n      f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) = f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> (f (m, m22))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) =\n                      f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> f (m, m22)", "apply (simp add:bilinear_map_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_r_add1:\"\\<lbrakk>R module M1; R module M2; R module N; \n       m \\<in> carrier M1; m21 \\<in> carrier M2; m22 \\<in> carrier M2; \n       bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n       f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> (f (m, m22))) = \\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub>\n                            m22) \\<plusminus>\\<^bsub>N\\<^esub>\n                      -\\<^sub>a\\<^bsub>N\\<^esub> (f\n             (m, m21) \\<plusminus>\\<^bsub>N\\<^esub>\n            f (m, m22)) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag[of N],\n       frule Module.module_is_ag[of M2],\n       subst aGroup.ag_eq_diffzero[of N, THEN sym], assumption+,\n       frule_tac x = m21 and y = m22 in aGroup.ag_pOp_closed, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M2;\n     m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22 \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22)\n                      \\<in> carrier N\n 2. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> f (m, m22)\n                      \\<in> carrier N\n 3. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) =\n                      f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> f (m, m22)", "apply (simp add:bilinear_mem,\n       rule aGroup.ag_pOp_closed, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m, m21) \\<in> carrier N\n 2. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m, m22) \\<in> carrier N\n 3. \\<lbrakk>R module M1; R module M2; R module N; m \\<in> carrier M1;\n     m21 \\<in> carrier M2; m22 \\<in> carrier M2; bilinear_map f R M1 M2 N;\n     aGroup N; aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m, m21 \\<plusminus>\\<^bsub>M2\\<^esub> m22) =\n                      f (m, m21) \\<plusminus>\\<^bsub>N\\<^esub> f (m, m22)", "apply ((simp add:bilinear_mem)+, simp add:bilinear_r_add)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_l_lin:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1, m2) = r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1, m2) =\n                      r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (m1, m2)", "by (simp add:bilinear_map_def)"], ["", "lemma (in Ring) bilinear_l_lin1:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n         f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1, m2) \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))) = \\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1,\n                         m2) \\<plusminus>\\<^bsub>N\\<^esub>\n                      -\\<^sub>a\\<^bsub>N\\<^esub> r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n           f (m1, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag[of N],\n       subst aGroup.ag_eq_diffzero[of N, THEN sym], assumption+,\n       frule_tac a = r and m = m1 in Module.sc_mem[of M1 R], assumption+,\n       simp add:bilinear_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R; bilinear_map f R M1 M2 N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (m1, m2)\n                      \\<in> carrier N\n 2. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R; bilinear_map f R M1 M2 N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> f (r \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m1, m2) =\n                      r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (m1, m2)", "apply (rule Module.sc_mem, assumption+, simp add:bilinear_mem,\n        simp add:bilinear_l_lin)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_r_lin:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (m1, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> m2) = r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m1, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> m2) =\n                      r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (m1, m2)", "apply (simp add:bilinear_map_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_r_lin1:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; m2 \\<in> carrier M2; r \\<in> carrier R; \n      bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> \n      f (m1, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> m2)  \\<plusminus>\\<^bsub>N\\<^esub> -\\<^sub>a\\<^bsub>N\\<^esub> (r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> (f (m1, m2))) = \\<zero>\\<^bsub>N\\<^esub> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m1,\n                         r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub>\n                         m2) \\<plusminus>\\<^bsub>N\\<^esub>\n                      -\\<^sub>a\\<^bsub>N\\<^esub> r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n           f (m1, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag[of N],\n       subst aGroup.ag_eq_diffzero[of N, THEN sym], assumption+,\n       frule_tac a = r and m = m2 in Module.sc_mem[of M2 R], assumption+,\n       simp add:bilinear_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R; bilinear_map f R M1 M2 N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (m1, m2)\n                      \\<in> carrier N\n 2. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     m2 \\<in> carrier M2; r \\<in> carrier R; bilinear_map f R M1 M2 N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> f (m1, r \\<cdot>\\<^sub>s\\<^bsub>M2\\<^esub> m2) =\n                      r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> f (m1, m2)", "apply (rule Module.sc_mem, assumption+, simp add:bilinear_mem,\n        simp add:bilinear_r_lin)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_l_0:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m2 \\<in> carrier M2; bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) = \\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_inc_zero [of M1 R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N;\n     \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule bilinear_l_add [of M1 M2 N \"\\<zero>\\<^bsub>M1\\<^esub>\" \"\\<zero>\\<^bsub>M1\\<^esub>\" \"m2\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub> \\<plusminus>\\<^bsub>M1\\<^esub>\n        \\<zero>\\<^bsub>M1\\<^esub>,\n        m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag [of M1 R], simp add:aGroup.ag_l_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2);\n     aGroup M1\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule bilinear_mem [of M1 M2 N \"\\<zero>\\<^bsub>M1\\<^esub>\" m2 f], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2);\n     aGroup M1; f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag [of N R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2);\n     aGroup M1; f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<in> carrier N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule aGroup.ag_eq_sol1 [of \"N\" \"f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\" \"f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\"\n        \"f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2);\n     aGroup M1; f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<in> carrier N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>,\n                         m2) \\<plusminus>\\<^bsub>N\\<^esub>\n                      f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\n 2. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2);\n     aGroup M1; f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<in> carrier N; aGroup N;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     -\\<^sub>a\\<^bsub>N\\<^esub> f (\\<zero>\\<^bsub>M1\\<^esub>,\n                                   m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (rule sym, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m2 \\<in> carrier M2;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2);\n     aGroup M1; f (\\<zero>\\<^bsub>M1\\<^esub>, m2) \\<in> carrier N; aGroup N;\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n     -\\<^sub>a\\<^bsub>N\\<^esub> f (\\<zero>\\<^bsub>M1\\<^esub>,\n                                   m2) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (\\<zero>\\<^bsub>M1\\<^esub>, m2)\\<rbrakk>\n    \\<Longrightarrow> f (\\<zero>\\<^bsub>M1\\<^esub>, m2) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (simp add:aGroup.ag_l_inv1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) bilinear_r_0:\"\\<lbrakk>R module M1; R module M2; R module N; \n      m1 \\<in> carrier M1; bilinear_map f R M1 M2 N\\<rbrakk> \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) = \\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_inc_zero [of M2 R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N;\n     \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule bilinear_r_add [of M1 M2 N m1 \"\\<zero>\\<^bsub>M2\\<^esub>\" \"\\<zero>\\<^bsub>M2\\<^esub>\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1,\n        \\<zero>\\<^bsub>M2\\<^esub> \\<plusminus>\\<^bsub>M2\\<^esub>\n        \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag [of M2 R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1,\n        \\<zero>\\<^bsub>M2\\<^esub> \\<plusminus>\\<^bsub>M2\\<^esub>\n        \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (simp add:aGroup.ag_l_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule bilinear_mem [of M1 M2 N m1 \"\\<zero>\\<^bsub>M2\\<^esub>\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2; f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule Module.module_is_ag [of N R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2; f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<in> carrier N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (frule aGroup.ag_eq_sol1 [of N \"f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\" \"f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\" \n       \"f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2; f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<in> carrier N;\n     aGroup N\\<rbrakk>\n    \\<Longrightarrow> f (m1,\n                         \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n                      f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\n 2. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2; f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<in> carrier N; aGroup N;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     -\\<^sub>a\\<^bsub>N\\<^esub> f (m1,\n                                   \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (rule sym, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module N; m1 \\<in> carrier M1;\n     bilinear_map f R M1 M2 N; \\<zero>\\<^bsub>M2\\<^esub> \\<in> carrier M2;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>);\n     aGroup M2; f (m1, \\<zero>\\<^bsub>M2\\<^esub>) \\<in> carrier N; aGroup N;\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n     -\\<^sub>a\\<^bsub>N\\<^esub> f (m1,\n                                   \\<zero>\\<^bsub>M2\\<^esub>) \\<plusminus>\\<^bsub>N\\<^esub>\n     f (m1, \\<zero>\\<^bsub>M2\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> f (m1, \\<zero>\\<^bsub>M2\\<^esub>) =\n                      \\<zero>\\<^bsub>N\\<^esub>", "apply (simp add:aGroup.ag_l_inv1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  universal_property :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n                     ('b, 'r, 'm1) Module_scheme, ('c, 'r, 'm1) Module_scheme, \n                     'a * 'b \\<Rightarrow>'c] \\<Rightarrow>  bool\" where\n  \"universal_property (R::('r, 'm) Ring_scheme) (M::('a, 'r, 'm1) Module_scheme)\n    (N:: ('b, 'r, 'm1) Module_scheme) (MN::('c, 'r, 'm1) Module_scheme) \n    (f:: 'a * 'b \\<Rightarrow> 'c) \\<longleftrightarrow> (bilinear_map f R M N MN) \\<and> \n    (\\<forall>(Z :: ('c, 'r, 'm1) Module_scheme). \\<forall>(g :: 'a * 'b \\<Rightarrow> 'c). (R module Z) \\<and> \n    (bilinear_map g R M N Z) \\<longrightarrow>  ((\\<exists>!h. (h \\<in> mHom R MN Z) \\<and> \n                                        (compose (M \\<times>\\<^sub>c N) h f = g))))\""], ["", "(* universal_property R MV M N MN f *)"], ["", "lemma tensor_prod_uniqueTr:\"\\<lbrakk>Ring R; R module (M::('a, 'r, 'm1) Module_scheme); \n      R module (N:: ('b, 'r, 'm1) Module_scheme); \n      R module (MN:: ('c, 'r, 'm1) Module_scheme); \n      R module (MN1::('c, 'r, 'm1) Module_scheme); \n      universal_property R M N MN f; universal_property R M N MN1 g\\<rbrakk> \\<Longrightarrow>\n      \\<exists>!k. k \\<in> mHom R MN1 MN \\<and> compose (M \\<times>\\<^sub>c N) k g = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n     universal_property R M N MN f; universal_property R M N MN1 g\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!k.\n                         k \\<in> mHom R MN1 MN \\<and>\n                         compose (M \\<times>\\<^sub>c N) k g = f", "apply (simp add: universal_property_def [of  _ _ _ _ \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n     bilinear_map f R M N MN \\<and>\n     (\\<forall>Z g.\n         R module Z \\<and> bilinear_map g R M N Z \\<longrightarrow>\n         (\\<exists>!h.\n             h \\<in> mHom R MN Z \\<and>\n             compose (M \\<times>\\<^sub>c N) h f = g));\n     universal_property R M N MN1 g\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!k.\n                         k \\<in> mHom R MN1 MN \\<and>\n                         compose (M \\<times>\\<^sub>c N) k g = f", "apply (frule conjunct1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n     bilinear_map f R M N MN \\<and>\n     (\\<forall>Z g.\n         R module Z \\<and> bilinear_map g R M N Z \\<longrightarrow>\n         (\\<exists>!h.\n             h \\<in> mHom R MN Z \\<and>\n             compose (M \\<times>\\<^sub>c N) h f = g));\n     universal_property R M N MN1 g; bilinear_map f R M N MN\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!k.\n                         k \\<in> mHom R MN1 MN \\<and>\n                         compose (M \\<times>\\<^sub>c N) k g = f", "apply (fold universal_property_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n     universal_property R M N MN f; universal_property R M N MN1 g;\n     bilinear_map f R M N MN\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!k.\n                         k \\<in> mHom R MN1 MN \\<and>\n                         compose (M \\<times>\\<^sub>c N) k g = f", "apply (simp add:universal_property_def [of _ _ _ _ \"g\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma tensor_prod_unique:\"\\<lbrakk>Ring (R:: ('r, 'm) Ring_scheme); \n      R module (M :: ('a, 'r, 'm1) Module_scheme); \n      R module (N:: ('b, 'r, 'm1) Module_scheme); \n      R module (MN:: ('c, 'r, 'm1) Module_scheme); \n      R module (MN1::('c, 'r, 'm1) Module_scheme); \n      universal_property R M N MN f; universal_property R M N MN1 g\\<rbrakk> \\<Longrightarrow> \n      MN \\<cong>\\<^bsub>R\\<^esub> MN1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n     universal_property R M N MN f; universal_property R M N MN1 g\\<rbrakk>\n    \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (frule tensor_prod_uniqueTr[of R M N MN MN1 f g], assumption+,\n       erule ex1E,\n       thin_tac \"\\<forall>y. y \\<in> mHom R MN1 MN \\<and> compose (M \\<times>\\<^sub>c N) y g = f \\<longrightarrow> y = k\",\n       frule tensor_prod_uniqueTr [of R M N MN1 MN g f], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN \\<and> compose (M \\<times>\\<^sub>c N) k g = f;\n        \\<exists>!k.\n           k \\<in> mHom R MN MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) k f = g\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (erule ex1E,\n       thin_tac \"\\<forall>y. y \\<in> mHom R MN MN1 \\<and> compose (M \\<times>\\<^sub>c N) y f = g \\<longrightarrow> y = ka\",\n       (erule conjE)+,\n       rename_tac k h,\n       frule_tac f = k in Ring.mHom_func[of R _ MN1 MN], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (subgoal_tac \"f \\<in> (M \\<times>\\<^sub>c N) \\<rightarrow> (carrier MN)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> f \\<in> M \\<times>\\<^sub>c N \\<rightarrow>\n                                 carrier MN", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> f \\<in> M \\<times>\\<^sub>c N \\<rightarrow>\n                                 carrier MN\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (simp add:universal_property_def bilinear_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (frule_tac f = h in Ring.mHom_func[of R _ MN MN1], assumption,\n        frule_tac  g = h and h = k in compose_assoc [of \"f\" \"M \\<times>\\<^sub>c N\" \"carrier MN\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f =\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (subgoal_tac \"g \\<in> (M \\<times>\\<^sub>c N) \\<rightarrow> (carrier MN1)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f =\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f\\<rbrakk>\n       \\<Longrightarrow> g \\<in> M \\<times>\\<^sub>c N \\<rightarrow>\n                                 carrier MN1", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f =\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f\\<rbrakk>\n       \\<Longrightarrow> g \\<in> M \\<times>\\<^sub>c N \\<rightarrow>\n                                 carrier MN1\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (simp add:universal_property_def bilinear_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (frule_tac g = k and h = h in compose_assoc [of \"g\" \"M \\<times>\\<^sub>c N\" \"carrier MN1\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g =\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k)\n         g\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (subgoal_tac \"compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub>) f = f\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g =\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k)\n         g\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN\\<^esub> ) f =\n                         f", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g =\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k)\n         g\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN\\<^esub> ) f =\n                         f\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (frule Module.mId_mHom [of MN R],\n        frule_tac f = \"mId\\<^bsub>MN\\<^esub>\" in Ring.mHom_func[of R _ MN MN], assumption,\n        frule  composition [of f \"M \\<times>\\<^sub>c N\" \"carrier MN\" \"mId\\<^bsub>MN\\<^esub>\" \"carrier MN\"],\n         assumption+,\n        rule funcset_eq [of _ \"M \\<times>\\<^sub>c N\"] )"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        mId\\<^bsub>MN\\<^esub>  \\<in> carrier MN \\<rightarrow> carrier MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f\n        \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN\\<^esub> ) f\n                         \\<in> extensional (M \\<times>\\<^sub>c N)\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        mId\\<^bsub>MN\\<^esub>  \\<in> carrier MN \\<rightarrow> carrier MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f\n        \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> f \\<in> extensional (M \\<times>\\<^sub>c N)\n 3. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        mId\\<^bsub>MN\\<^esub>  \\<in> carrier MN \\<rightarrow> carrier MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f\n        \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>M \\<times>\\<^sub>c N.\n                            compose (M \\<times>\\<^sub>c N)\n                             (mId\\<^bsub>MN\\<^esub> ) f x =\n                            f x\n 4. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (simp add:compose_def restrict_def extensional_def,\n        simp add:universal_property_def bilinear_map_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        mId\\<^bsub>MN\\<^esub>  \\<in> carrier MN \\<rightarrow> carrier MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f\n        \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>M \\<times>\\<^sub>c N.\n                            compose (M \\<times>\\<^sub>c N)\n                             (mId\\<^bsub>MN\\<^esub> ) f x =\n                            f x\n 2. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (simp add:compose_def mId_def funcset_mem del:Pi_I')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (rotate_tac -4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>f =\n                compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (frule sym,\n        thin_tac \"f = compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1", "apply (subgoal_tac \"(compose (carrier MN) k h) = mId\\<^bsub>MN\\<^esub>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"(compose (carrier MN1) h k) = (mId\\<^bsub>MN1\\<^esub>)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> MN \\<cong>\\<^bsub>R\\<^esub> MN1\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (simp add:misomorphic_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            f \\<in> mHom R MN MN1 \\<and>\n                            bijec\\<^bsub>MN,MN1\\<^esub> f\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule_tac f = h and g = k in Module.mHom_mId_bijec [of MN R MN1],\n            assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> ;\n        bijec\\<^bsub>MN,MN1\\<^esub> h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            f \\<in> mHom R MN MN1 \\<and>\n                            bijec\\<^bsub>MN,MN1\\<^esub> f\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "(* compose (carrier MN1) h k = mId\\<^sub>MN1 *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub>) g = g\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN1\\<^esub> ) g =\n                         g\n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN1\\<^esub> ) g =\n                         g\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule Module.mId_mHom [of MN1 R])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN1\\<^esub> ) g =\n                         g\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"mId\\<^bsub>MN1\\<^esub>  \\<in> carrier MN1 \\<rightarrow> carrier MN1\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub> \n        \\<in> carrier MN1 \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN1\\<^esub> ) g =\n                         g\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN1\\<^esub> \n                         \\<in> carrier MN1 \\<rightarrow> carrier MN1\n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 4. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN1\\<^esub> \n                         \\<in> carrier MN1 \\<rightarrow> carrier MN1\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub> \n        \\<in> carrier MN1 \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN1\\<^esub> ) g =\n                         g\n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 4. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (simp add:mHom_def aHom_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub> \n        \\<in> carrier MN1 \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN1\\<^esub> ) g =\n                         g\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule  composition [of \"g\" \"M \\<times>\\<^sub>c N\" \"carrier MN1\" \"mId\\<^bsub>MN1\\<^esub>\" \n      \"carrier MN1\"], assumption+,\n      rule funcset_eq [of _ \"M \\<times>\\<^sub>c N\"],\n      simp add:compose_def restrict_def extensional_def,\n      simp add:universal_property_def bilinear_map_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> carrier MN1 \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g\n        \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>M \\<times>\\<^sub>c N.\n                            compose (M \\<times>\\<^sub>c N)\n                             (mId\\<^bsub>MN1\\<^esub> ) g x =\n                            g x\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (simp add:compose_def mId_def,\n       simp add:funcset_mem del:Pi_I',\n       frule sym,\n       thin_tac \"g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g\",\n       frule tensor_prod_uniqueTr [of R M N MN1 MN1 g g], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        \\<exists>!k.\n           k \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) k g = g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (erule ex1E,\n        frule Module.mId_mHom [of MN1 R])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"mId\\<^bsub>MN1\\<^esub> = ka\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN1\\<^esub>  = ka\n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN1\\<^esub>  = ka\n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (thin_tac \"compose (M \\<times>\\<^sub>c N) k g = f\",\n         thin_tac \"compose (M \\<times>\\<^sub>c N) h f = g\",\n         thin_tac \"compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f\",\n         thin_tac \"compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>\",\n         thin_tac \"ka \\<in> mHom R MN1 MN1 \\<and> compose (M \\<times>\\<^sub>c N) ka g = g\",\n         thin_tac \"compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g\",\n      blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"compose (carrier MN1) h k = ka\",\n        thin_tac \"k \\<in> mHom R MN1 MN\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) k g = f\", \n        thin_tac \"compose (M \\<times>\\<^sub>c N) h f = g\",\n        thin_tac \"k \\<in> carrier MN1 \\<rightarrow> carrier MN\",\n        thin_tac \"f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\",\n        thin_tac \"h \\<in> carrier MN \\<rightarrow> carrier MN1\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f\",\n        thin_tac \"compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g\",\n        thin_tac \"ka \\<in> mHom R MN1 MN1 \\<and> compose (M \\<times>\\<^sub>c N) ka g = g\",\n        thin_tac \"\\<forall>y. y \\<in> mHom R MN1 MN1 \\<and> \n                               compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow> y = ka\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        h \\<in> mHom R MN MN1; mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  = ka;\n        compose (carrier MN1) h k = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> \n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = ka\n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        ka \\<in> mHom R MN1 MN1 \\<and>\n        compose (M \\<times>\\<^sub>c N) ka g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1;\n        mId\\<^bsub>MN1\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = ka\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (thin_tac \"mId\\<^bsub>MN1\\<^esub>  \\<in> mHom R MN1 MN1\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN1\\<^esub> ) g = g\",\n        thin_tac \"ka \\<in> mHom R MN1 MN1 \\<and> compose (M \\<times>\\<^sub>c N) ka g = g\",\n        thin_tac \"mId\\<^bsub>MN1\\<^esub>  = ka\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = ka\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"(compose (carrier MN1) h k) \\<in> mHom R MN1 MN1\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka;\n        compose (carrier MN1) h k \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k = ka\n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k \\<in> mHom R MN1 MN1\n 3. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        \\<forall>y.\n           y \\<in> mHom R MN1 MN1 \\<and>\n           compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k \\<in> mHom R MN1 MN1\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (thin_tac \"\\<forall>y. y \\<in> mHom R MN1 MN1 \\<and> \n             compose (M \\<times>\\<^sub>c N) y g = g \\<longrightarrow> y = ka\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g =\n        g\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k \\<in> mHom R MN1 MN1\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule_tac f = k and g = h in  Module.mHom_compos[of MN R MN1 MN1], \n                        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> ;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g = g;\n        compos MN1 h k \\<in> mHom R MN1 MN1\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN1) h k \\<in> mHom R MN1 MN1\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (simp add:compos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "(** compose (carrier MN1) h k = mId\\<^bsub>MN1\\<^esub> done **)\n  (* compose (carrier MN) k h = mId\\<^sub>MN *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule Module.mId_mHom [of MN R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub>) f = f\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN\\<^esub> ) f =\n                         f", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN\\<^esub> ) f =\n                         f\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule_tac f = \"mId\\<^bsub>MN\\<^esub>\" in Ring.mHom_func[of R _ MN MN], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        mId\\<^bsub>MN\\<^esub> \n        \\<in> carrier MN \\<rightarrow> carrier MN\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mId\\<^bsub>MN\\<^esub> ) f =\n                         f\n 2. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule  composition [of \"f\" \"M \\<times>\\<^sub>c N\" \"carrier MN\" \"mId\\<^bsub>MN\\<^esub>\" \"carrier MN\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f =\n        f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule tensor_prod_uniqueTr [of \"R\" \"M\" \"N\" \"MN\" \"MN\" \"f\" \"f\"], \n       assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        \\<exists>!k.\n           k \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) k f = f\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (erule ex1E)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"mId\\<^bsub>MN\\<^esub> = ka\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN\\<^esub>  = ka", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN\\<^esub>  = ka\n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (thin_tac \"compose (M \\<times>\\<^sub>c N) k g = f\",\n         thin_tac \"compose (M \\<times>\\<^sub>c N) h f = g\",\n         thin_tac \"ka \\<in> mHom R MN MN \\<and> compose (M \\<times>\\<^sub>c N) ka f = f\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; h \\<in> mHom R MN MN1;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> mId\\<^bsub>MN\\<^esub>  = ka\n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        mId\\<^bsub>MN\\<^esub>  = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>mId\\<^bsub>MN\\<^esub>  = ka;\n        g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (frule sym, thin_tac \"mId\\<^bsub>MN\\<^esub>  = ka\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; compose (M \\<times>\\<^sub>c N) k g = f;\n        h \\<in> mHom R MN MN1; compose (M \\<times>\\<^sub>c N) h f = g;\n        k \\<in> carrier MN1 \\<rightarrow> carrier MN;\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN;\n        h \\<in> carrier MN \\<rightarrow> carrier MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        ka = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (thin_tac \"compose (M \\<times>\\<^sub>c N) k g = f\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) h f = g\",\n        thin_tac \"k \\<in> carrier MN1 \\<rightarrow> carrier MN\",\n        thin_tac \"f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN\",\n        thin_tac \"h \\<in> carrier MN \\<rightarrow> carrier MN1\",\n        thin_tac \"compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub>) f = f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; h \\<in> mHom R MN MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        ka = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub>", "apply (subgoal_tac \"(compose (carrier MN) k h) \\<in> mHom R MN MN\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; h \\<in> mHom R MN MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        ka = mId\\<^bsub>MN\\<^esub> ;\n        compose (carrier MN) k h \\<in> mHom R MN MN\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h = mId\\<^bsub>MN\\<^esub> \n 2. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; h \\<in> mHom R MN MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        ka = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h \\<in> mHom R MN MN", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; h \\<in> mHom R MN MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        ka = mId\\<^bsub>MN\\<^esub> \\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h \\<in> mHom R MN MN", "apply (frule_tac f = h and g = k in Module.mHom_compos[of MN1 R MN \"MN\"], \n                        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k h ka.\n       \\<lbrakk>g \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier MN1;\n        g = compose (M \\<times>\\<^sub>c N) (compose (carrier MN1) h k) g;\n        Ring R; R module M; R module N; R module MN; R module MN1;\n        universal_property R M N MN f; universal_property R M N MN1 g;\n        k \\<in> mHom R MN1 MN; h \\<in> mHom R MN MN1;\n        compose (M \\<times>\\<^sub>c N) (compose (carrier MN) k h) f = f;\n        mId\\<^bsub>MN\\<^esub>  \\<in> mHom R MN MN;\n        compose (M \\<times>\\<^sub>c N) (mId\\<^bsub>MN\\<^esub> ) f = f;\n        ka \\<in> mHom R MN MN \\<and>\n        compose (M \\<times>\\<^sub>c N) ka f = f;\n        \\<forall>y.\n           y \\<in> mHom R MN MN \\<and>\n           compose (M \\<times>\\<^sub>c N) y f = f \\<longrightarrow>\n           y = ka;\n        ka = mId\\<^bsub>MN\\<^esub> ;\n        compos MN k h \\<in> mHom R MN MN\\<rbrakk>\n       \\<Longrightarrow> compose (carrier MN) k h \\<in> mHom R MN MN", "apply (metis compos_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "chapter \"Construction of an abelian group\""], ["", "section \"Free generated abelian group I, direct sum and direct product 2\""], ["", "(** Make a free generated abelian group **)"], ["", "definition (* for abelian groups, modules *) \n  bpp :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a, 'a] \\<Rightarrow> 'a\" where\n  \"bpp f a b = f a b\""], ["", "definition\n  ipp :: \"['a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a\"  (\"(\\<^sub>_-/ _)\" [64,65]64) where\n  \"\\<^sub>i- a == i a\""], ["", "definition (* for modules *)\n  sop :: \"['r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'r, 'a] \\<Rightarrow> 'a\" where\n  \"sop s r a = s r a\""], ["", "abbreviation\n  BOP :: \"['a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a\"\n    (\"(3_/ \\<^sub>_+/ _)\" [62,62,63]62) where\n  \"a \\<^sub>f+ b == bpp f a b\""], ["", "abbreviation\n  SOP :: \"['r, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a\"\n    (\"(3_/ \\<^sub>_\\<cdot> _)\" [68,68,69]68) where\n  \"r \\<^sub>s\\<cdot> a == sop s r a\""], ["", "definition\n minus_set :: \"['a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> 'a set\" where\n \"minus_set i A = {x. \\<exists>y\\<in>A. x = \\<^sub>i- y}\""], ["", "definition\n pm_set :: \"['a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> 'a set\" where\n \"pm_set i A = A \\<union> (minus_set i A)\""], ["", "definition\n  s_set :: \"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> 'a set\" where\n  \"s_set R s A = {x. \\<exists>r\\<in>carrier R. \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union> A\""], ["", "primrec add_set :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> nat \\<Rightarrow> 'a set\"\nwhere\n  add_set_0 : \"add_set f A 0 = A\"\n| add_set_Suc: \"add_set f A (Suc n) =\n                      {x. \\<exists>s\\<in> (add_set f A n). \\<exists>t\\<in> A. x = s \\<^sub>f+ t}\""], ["", "definition\n  aug_pm_set :: \"['a, 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> 'a set\" where\n  \"aug_pm_set z i A = {z} \\<union> A \\<union> (minus_set i A)\""], ["", "definition\n  addition_set :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> 'a set\" where\n  \"addition_set f A = \\<Union>{add_set f A n | n. (0::nat)\\<le> n}\""], ["", "definition\n  assoc_bpp :: \"['a set, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a] \\<Rightarrow> bool\" where\n  \"assoc_bpp A f \\<longleftrightarrow>\n    (\\<forall>a\\<in>(addition_set f A). \\<forall>b\\<in>(addition_set f A). \\<forall>c\\<in>(addition_set f A). (a \\<^sub>f+ b) \\<^sub>f+ c = a \\<^sub>f+ (b \\<^sub>f+ c))\""], ["", "definition\n  commute_bpp :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> bool\" where\n  \"commute_bpp f A \\<longleftrightarrow> (\\<forall>x\\<in>addition_set f A. \\<forall>y\\<in>addition_set f A. x \\<^sub>f+ y = y \\<^sub>f+ x)\""], ["", "definition\n  zeroA :: \"['a, 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> 'a \\<Rightarrow> bool\" where\n  \"zeroA z i f A z1 \\<longleftrightarrow> (\\<forall>x \\<in> addition_set f (aug_pm_set z i A). z1 \\<^sub>f+ x = x)\""], ["", "definition\n  inv_ipp :: \"['a, 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> bool\" where\n  \"inv_ipp z i f A \\<longleftrightarrow> (\\<forall>a\\<in>addition_set f (aug_pm_set z i A). zeroA z i f A ((\\<^sub>i- a) \\<^sub>f+ a))\""], ["", "definition\n  ipp_cond1 :: \"['a set, 'a \\<Rightarrow> 'a] \\<Rightarrow> bool\" where\n  \"ipp_cond1 A i \\<longleftrightarrow> (\\<forall>x\\<in>A. \\<^sub>i- (\\<^sub>i- x) = x)\""], ["", "definition\n  ipp_cond2 :: \"['a, 'a set, 'a \\<Rightarrow> 'a,  'a \\<Rightarrow> 'a \\<Rightarrow> 'a] \\<Rightarrow> bool\" where\n  \"ipp_cond2 z A i f == \\<forall>x\\<in>(addition_set f (aug_pm_set z i A)). \n    \\<forall>y\\<in> (addition_set f (aug_pm_set z i A)). \\<^sub>i-(x \\<^sub>f+ y) = \\<^sub>i- y \\<^sub>f+ (\\<^sub>i- x)\""], ["", "definition\n  ipp_cond3 :: \"['a, 'a \\<Rightarrow> 'a] \\<Rightarrow> bool\" where\n  \"ipp_cond3 z i \\<longleftrightarrow> \\<^sub>i- z = z\""], ["", "lemma add_set_mono:\"A \\<subseteq> B \\<Longrightarrow> add_set f A n \\<subseteq> add_set f B n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    add_set f A n \\<subseteq> add_set f B n", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    add_set f A 0 \\<subseteq> add_set f B 0\n 2. \\<And>n.\n       \\<lbrakk>A \\<subseteq> B;\n        add_set f A n \\<subseteq> add_set f B n\\<rbrakk>\n       \\<Longrightarrow> add_set f A (Suc n) \\<subseteq> add_set f B (Suc n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>A \\<subseteq> B;\n        add_set f A n \\<subseteq> add_set f B n\\<rbrakk>\n       \\<Longrightarrow> add_set f A (Suc n) \\<subseteq> add_set f B (Suc n)", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>A \\<subseteq> B; add_set f A n \\<subseteq> add_set f B n;\n        \\<exists>s\\<in>add_set f A n.\n           \\<exists>t\\<in>A. x = s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f B n.\n                            \\<exists>t\\<in>B. x = s \\<^sub>f+ t", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>A \\<subseteq> B; add_set f A n \\<subseteq> add_set f B n;\n        s \\<in> add_set f A n; t \\<in> A; x = s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f B n.\n                            \\<exists>t\\<in>B. x = s \\<^sub>f+ t", "apply (frule_tac A = \"add_set f A n\" and B = \"add_set f B n\" and c = s in \n        subsetD, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>A \\<subseteq> B; add_set f A n \\<subseteq> add_set f B n;\n        s \\<in> add_set f A n; t \\<in> A; x = s \\<^sub>f+ t;\n        s \\<in> add_set f B n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f B n.\n                            \\<exists>t\\<in>B. x = s \\<^sub>f+ t", "apply (frule_tac A = A and B = B and c = t in subsetD, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>A \\<subseteq> B; add_set f A n \\<subseteq> add_set f B n;\n        s \\<in> add_set f A n; t \\<in> A; x = s \\<^sub>f+ t;\n        s \\<in> add_set f B n; t \\<in> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f B n.\n                            \\<exists>t\\<in>B. x = s \\<^sub>f+ t", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma addition_inc_add:\"add_set f A n \\<subseteq> addition_set f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_set f A n \\<subseteq> addition_set f A", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> add_set f A n \\<Longrightarrow> x \\<in> addition_set f A", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> add_set f A n \\<Longrightarrow>\n       \\<exists>xa. (\\<exists>n. xa = add_set f A n) \\<and> x \\<in> xa", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma addition_inc_add0:\" A \\<subseteq> addition_set f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> addition_set f A", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> addition_set f A", "apply (insert addition_inc_add [of \"f\" \"A\" \"0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        add_set f A 0 \\<subseteq> addition_set f A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A; A \\<subseteq> addition_set f A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f A", "apply (simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma addition_set_mono:\"A \\<subseteq> B \\<Longrightarrow> addition_set f A \\<subseteq> addition_set f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    addition_set f A \\<subseteq> addition_set f B", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> B; x \\<in> addition_set f A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f B", "apply (simp add:addition_set_def [of \"f\" \"A\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A \\<subseteq> B;\n        \\<exists>xa.\n           (\\<exists>n. xa = add_set f A n) \\<and> x \\<in> xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f B", "apply (erule exE, erule conjE, erule exE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa n.\n       \\<lbrakk>A \\<subseteq> B; x \\<in> add_set f A n;\n        xa = add_set f A n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f B", "apply (frule_tac n = n in add_set_mono [of \"A\" \"B\" \"f\"],\n        frule_tac A = \"add_set f A n\" and B = \"add_set f B n\" and c = x in \n        subsetD, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa n.\n       \\<lbrakk>A \\<subseteq> B; x \\<in> add_set f A n; xa = add_set f A n;\n        add_set f A n \\<subseteq> add_set f B n;\n        x \\<in> add_set f B n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f B", "apply (cut_tac n = n in addition_inc_add[of f B])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa n.\n       \\<lbrakk>A \\<subseteq> B; x \\<in> add_set f A n; xa = add_set f A n;\n        add_set f A n \\<subseteq> add_set f B n; x \\<in> add_set f B n;\n        add_set f B n \\<subseteq> addition_set f B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> addition_set f B", "apply (simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma a_in_aug_pm_set:\"a \\<in> A \\<Longrightarrow> a \\<in> aug_pm_set z i A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> a \\<in> aug_pm_set z i A", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma A_sub_aug_pm_set:\"A \\<subseteq> aug_pm_set z i A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> aug_pm_set z i A", "by (rule subsetI, simp add:aug_pm_set_def)"], ["", "lemma addition_sub_aug_pm_addition:\"\n        addition_set f A \\<subseteq> addition_set f (aug_pm_set z i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. addition_set f A \\<subseteq> addition_set f (aug_pm_set z i A)", "apply (cut_tac A_sub_aug_pm_set[of A z i])"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> aug_pm_set z i A \\<Longrightarrow>\n    addition_set f A \\<subseteq> addition_set f (aug_pm_set z i A)", "apply (simp add:addition_set_mono)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma assoc_bpp_restrict:\"\\<lbrakk> A \\<subseteq> B; assoc_bpp B f\\<rbrakk> \\<Longrightarrow> assoc_bpp A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; assoc_bpp B f\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp A f", "apply (simp add:assoc_bpp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B;\n     \\<forall>a\\<in>addition_set f B.\n        \\<forall>b\\<in>addition_set f B.\n           \\<forall>c\\<in>addition_set f B.\n              a \\<^sub>f+ b \\<^sub>f+ c =\n              a \\<^sub>f+ (b \\<^sub>f+ c)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>addition_set f A.\n                         \\<forall>b\\<in>addition_set f A.\n                            \\<forall>c\\<in>addition_set f A.\n                               a \\<^sub>f+ b \\<^sub>f+ c =\n                               a \\<^sub>f+ (b \\<^sub>f+ c)", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>A \\<subseteq> B;\n        \\<forall>a\\<in>addition_set f B.\n           \\<forall>b\\<in>addition_set f B.\n              \\<forall>c\\<in>addition_set f B.\n                 a \\<^sub>f+ b \\<^sub>f+ c = a \\<^sub>f+ (b \\<^sub>f+ c);\n        a \\<in> addition_set f A; b \\<in> addition_set f A;\n        c \\<in> addition_set f A\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ b \\<^sub>f+ c =\n                         a \\<^sub>f+ (b \\<^sub>f+ c)", "apply (frule addition_set_mono[of A B f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>A \\<subseteq> B;\n        \\<forall>a\\<in>addition_set f B.\n           \\<forall>b\\<in>addition_set f B.\n              \\<forall>c\\<in>addition_set f B.\n                 a \\<^sub>f+ b \\<^sub>f+ c = a \\<^sub>f+ (b \\<^sub>f+ c);\n        a \\<in> addition_set f A; b \\<in> addition_set f A;\n        c \\<in> addition_set f A;\n        addition_set f A \\<subseteq> addition_set f B\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ b \\<^sub>f+ c =\n                         a \\<^sub>f+ (b \\<^sub>f+ c)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma addition_assoc:\"\\<lbrakk>assoc_bpp A f; x \\<in> addition_set f A; \n                       y \\<in> addition_set f A; z \\<in> addition_set f A\\<rbrakk> \\<Longrightarrow> \n            (x \\<^sub>f+ y) \\<^sub>f+ z = x \\<^sub>f+ (y \\<^sub>f+ z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp A f; x \\<in> addition_set f A;\n     y \\<in> addition_set f A; z \\<in> addition_set f A\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y \\<^sub>f+ z =\n                      x \\<^sub>f+ (y \\<^sub>f+ z)", "apply (simp add:assoc_bpp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bpp_closedTr:\"assoc_bpp A f \\<Longrightarrow>  \n      \\<forall>x y. x \\<in> add_set f A n \\<and> y \\<in> add_set f A m \\<longrightarrow> \n                  x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. assoc_bpp A f \\<Longrightarrow>\n    \\<forall>x y.\n       x \\<in> add_set f A n \\<and> y \\<in> add_set f A m \\<longrightarrow>\n       x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)", "apply (induct_tac m, simp, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>assoc_bpp A f;\n        \\<forall>x y.\n           x \\<in> add_set f A n \\<and>\n           y \\<in> add_set f A na \\<longrightarrow>\n           x \\<^sub>f+ y \\<in> add_set f A (n + na + Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x \\<in> add_set f A n \\<and>\n                            y \\<in> add_set f A (Suc na) \\<longrightarrow>\n                            x \\<^sub>f+ y\n                            \\<in> add_set f A (n + Suc na + Suc 0)", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y.\n       \\<lbrakk>assoc_bpp A f;\n        \\<forall>x y.\n           x \\<in> add_set f A n \\<and>\n           y \\<in> add_set f A na \\<longrightarrow>\n           x \\<^sub>f+ y \\<in> add_set f A (n + na + Suc 0);\n        x \\<in> add_set f A n; y \\<in> add_set f A (Suc na)\\<rbrakk>\n       \\<Longrightarrow> x \\<^sub>f+ y\n                         \\<in> add_set f A (n + Suc na + Suc 0)", "apply (simp, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t.\n       \\<lbrakk>assoc_bpp A f;\n        \\<forall>x y.\n           x \\<in> add_set f A n \\<and>\n           y \\<in> add_set f A na \\<longrightarrow>\n           (\\<exists>s\\<in>add_set f A (n + na).\n               \\<exists>t\\<in>A. x \\<^sub>f+ y = s \\<^sub>f+ t);\n        x \\<in> add_set f A n; s \\<in> add_set f A na; t \\<in> A;\n        y = s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (\\<exists>sa\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. s = sa \\<^sub>f+ t) \\<and>\n                            (\\<exists>t\\<in>A.\n                                x \\<^sub>f+ y = s \\<^sub>f+ t)", "apply (cut_tac addition_inc_add[of f A n],\n        cut_tac n = na in addition_inc_add[of f A],\n        cut_tac addition_inc_add0[of A f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t.\n       \\<lbrakk>assoc_bpp A f;\n        \\<forall>x y.\n           x \\<in> add_set f A n \\<and>\n           y \\<in> add_set f A na \\<longrightarrow>\n           (\\<exists>s\\<in>add_set f A (n + na).\n               \\<exists>t\\<in>A. x \\<^sub>f+ y = s \\<^sub>f+ t);\n        x \\<in> add_set f A n; s \\<in> add_set f A na; t \\<in> A;\n        y = s \\<^sub>f+ t; add_set f A n \\<subseteq> addition_set f A;\n        add_set f A na \\<subseteq> addition_set f A;\n        A \\<subseteq> addition_set f A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (\\<exists>sa\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. s = sa \\<^sub>f+ t) \\<and>\n                            (\\<exists>t\\<in>A.\n                                x \\<^sub>f+ y = s \\<^sub>f+ t)", "apply (drule_tac x = x in spec,\n        drule_tac a = s in forall_spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        s \\<in> add_set f A na; t \\<in> A; y = s \\<^sub>f+ t;\n        add_set f A n \\<subseteq> addition_set f A;\n        add_set f A na \\<subseteq> addition_set f A;\n        A \\<subseteq> addition_set f A;\n        \\<exists>sa\\<in>add_set f A (n + na).\n           \\<exists>t\\<in>A. x \\<^sub>f+ s = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (\\<exists>sa\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. s = sa \\<^sub>f+ t) \\<and>\n                            (\\<exists>t\\<in>A.\n                                x \\<^sub>f+ y = s \\<^sub>f+ t)", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t sa ta.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        s \\<in> add_set f A na; t \\<in> A; y = s \\<^sub>f+ t;\n        add_set f A n \\<subseteq> addition_set f A;\n        add_set f A na \\<subseteq> addition_set f A;\n        A \\<subseteq> addition_set f A; sa \\<in> add_set f A (n + na);\n        ta \\<in> A; x \\<^sub>f+ s = sa \\<^sub>f+ ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa.\n                            (\\<exists>s\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. sa = s \\<^sub>f+ t) \\<and>\n                            (\\<exists>ta\\<in>A.\n                                x \\<^sub>f+ (s \\<^sub>f+ t) =\n                                sa \\<^sub>f+ ta)", "apply (cut_tac n = \"n + na\" in addition_inc_add[of f A],\n        frule_tac c = sa and A = \"add_set f A (n + na)\" in subsetD[of _\n         \"addition_set f A\"], assumption+,\n        frule_tac c = x in subsetD[of \"add_set f A n\" \"addition_set f A\"],\n         assumption+,\n        frule_tac c = s and A = \"add_set f A na\" in\n            subsetD[of _ \"addition_set f A\"], assumption+,\n        frule_tac c = t in subsetD[of A \"addition_set f A\"], assumption+,\n        frule_tac c = ta in subsetD[of A \"addition_set f A\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t sa ta.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        s \\<in> add_set f A na; t \\<in> A; y = s \\<^sub>f+ t;\n        add_set f A n \\<subseteq> addition_set f A;\n        add_set f A na \\<subseteq> addition_set f A;\n        A \\<subseteq> addition_set f A; sa \\<in> add_set f A (n + na);\n        ta \\<in> A; x \\<^sub>f+ s = sa \\<^sub>f+ ta;\n        add_set f A (n + na) \\<subseteq> addition_set f A;\n        sa \\<in> addition_set f A; x \\<in> addition_set f A;\n        s \\<in> addition_set f A; t \\<in> addition_set f A;\n        ta \\<in> addition_set f A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa.\n                            (\\<exists>s\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. sa = s \\<^sub>f+ t) \\<and>\n                            (\\<exists>ta\\<in>A.\n                                x \\<^sub>f+ (s \\<^sub>f+ t) =\n                                sa \\<^sub>f+ ta)", "apply (frule_tac x1 = x and y1 = s and z1 = t in addition_assoc[THEN sym,\n                 of A f],  assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t sa ta.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        s \\<in> add_set f A na; t \\<in> A; y = s \\<^sub>f+ t;\n        add_set f A n \\<subseteq> addition_set f A;\n        add_set f A na \\<subseteq> addition_set f A;\n        A \\<subseteq> addition_set f A; sa \\<in> add_set f A (n + na);\n        ta \\<in> A; x \\<^sub>f+ s = sa \\<^sub>f+ ta;\n        add_set f A (n + na) \\<subseteq> addition_set f A;\n        sa \\<in> addition_set f A; x \\<in> addition_set f A;\n        s \\<in> addition_set f A; t \\<in> addition_set f A;\n        ta \\<in> addition_set f A;\n        x \\<^sub>f+ (s \\<^sub>f+ t) = x \\<^sub>f+ s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa.\n                            (\\<exists>s\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. sa = s \\<^sub>f+ t) \\<and>\n                            (\\<exists>ta\\<in>A.\n                                x \\<^sub>f+ (s \\<^sub>f+ t) =\n                                sa \\<^sub>f+ ta)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na x y s t sa ta.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        s \\<in> add_set f A na; t \\<in> A; y = s \\<^sub>f+ t;\n        add_set f A n \\<subseteq> addition_set f A;\n        add_set f A na \\<subseteq> addition_set f A;\n        A \\<subseteq> addition_set f A; sa \\<in> add_set f A (n + na);\n        ta \\<in> A; x \\<^sub>f+ s = sa \\<^sub>f+ ta;\n        add_set f A (n + na) \\<subseteq> addition_set f A;\n        sa \\<in> addition_set f A; x \\<in> addition_set f A;\n        s \\<in> addition_set f A; t \\<in> addition_set f A;\n        ta \\<in> addition_set f A;\n        x \\<^sub>f+ (s \\<^sub>f+ t) = sa \\<^sub>f+ ta \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (\\<exists>sa\\<in>add_set f A (n + na).\n                                \\<exists>t\\<in>A. s = sa \\<^sub>f+ t) \\<and>\n                            (\\<exists>tb\\<in>A.\n                                sa \\<^sub>f+ ta \\<^sub>f+ t =\n                                s \\<^sub>f+ tb)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bpp_closed1:\"\\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n; y \\<in> add_set f A m\\<rbrakk> \\<Longrightarrow>\n                    x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n     y \\<in> add_set f A m\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)", "apply (insert bpp_closedTr[of \"A\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n; y \\<in> add_set f A m;\n     \\<And>n m.\n        assoc_bpp A f \\<Longrightarrow>\n        \\<forall>x y.\n           x \\<in> add_set f A n \\<and>\n           y \\<in> add_set f A m \\<longrightarrow>\n           x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y \\<in> add_set f A (n + m + Suc 0)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bpp_closed:\"\\<lbrakk>assoc_bpp A f; x \\<in> addition_set f A; y \\<in> addition_set f A\\<rbrakk>\n             \\<Longrightarrow>  x \\<^sub>f+ y \\<in> addition_set f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp A f; x \\<in> addition_set f A;\n     y \\<in> addition_set f A\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y \\<in> addition_set f A", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp A f;\n     \\<exists>xa. (\\<exists>n. xa = add_set f A n) \\<and> x \\<in> xa;\n     \\<exists>x. (\\<exists>n. x = add_set f A n) \\<and> y \\<in> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xa.\n                         (\\<exists>n. xa = add_set f A n) \\<and>\n                         x \\<^sub>f+ y \\<in> xa", "apply ((erule exE)+, (erule conjE)+, (erule exE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa n na.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        y \\<in> add_set f A na; xa = add_set f A n;\n        xaa = add_set f A na\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>n. xa = add_set f A n) \\<and>\n                            x \\<^sub>f+ y \\<in> xa", "apply (frule_tac x = x and n = n and y = y and m = na in bpp_closed1,\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa n na.\n       \\<lbrakk>assoc_bpp A f; x \\<in> add_set f A n;\n        y \\<in> add_set f A na; xa = add_set f A n; xaa = add_set f A na;\n        x \\<^sub>f+ y \\<in> add_set f A (n + na + Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>n. xa = add_set f A n) \\<and>\n                            x \\<^sub>f+ y \\<in> xa", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_addition_inc_z:\" z \\<in> addition_set f (aug_pm_set z i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> addition_set f (aug_pm_set z i A)", "apply (subgoal_tac \"z \\<in> aug_pm_set z i A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. z \\<in> aug_pm_set z i A \\<Longrightarrow>\n    z \\<in> addition_set f (aug_pm_set z i A)\n 2. z \\<in> aug_pm_set z i A", "apply (subgoal_tac \"aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>z \\<in> aug_pm_set z i A;\n     aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A)\\<rbrakk>\n    \\<Longrightarrow> z \\<in> addition_set f (aug_pm_set z i A)\n 2. z \\<in> aug_pm_set z i A \\<Longrightarrow>\n    aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A)\n 3. z \\<in> aug_pm_set z i A", "apply (simp add:subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. z \\<in> aug_pm_set z i A \\<Longrightarrow>\n    aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A)\n 2. z \\<in> aug_pm_set z i A", "apply (simp add:addition_inc_add0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> aug_pm_set z i A", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_bpp_closed:\"\\<lbrakk>assoc_bpp (aug_pm_set z i A) f; \n      x \\<in> addition_set f (aug_pm_set z i A); \n      y \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk> \\<Longrightarrow>  \n                  x \\<^sub>f+ y \\<in> addition_set f (aug_pm_set z i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i A) f;\n     x \\<in> addition_set f (aug_pm_set z i A);\n     y \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y \\<in> addition_set f (aug_pm_set z i A)", "apply (simp add:bpp_closed [of \"aug_pm_set z i A\" \"f\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_commute:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n     x \\<in> addition_set f (aug_pm_set z i A); \n     y \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk> \\<Longrightarrow> x \\<^sub>f+ y = y \\<^sub>f+ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     x \\<in> addition_set f (aug_pm_set z i A);\n     y \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y = y \\<^sub>f+ x", "apply (simp add: commute_bpp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma addition_set_inc_z:\"z \\<in> addition_set f (aug_pm_set z i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> addition_set f (aug_pm_set z i A)", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (\\<exists>n. x = add_set f (aug_pm_set z i A) n) \\<and> z \\<in> x", "apply (subgoal_tac \"z \\<in> add_set f (aug_pm_set z i A) 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. z \\<in> add_set f (aug_pm_set z i A) 0 \\<Longrightarrow>\n    \\<exists>x.\n       (\\<exists>n. x = add_set f (aug_pm_set z i A) n) \\<and> z \\<in> x\n 2. z \\<in> add_set f (aug_pm_set z i A) 0", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> add_set f (aug_pm_set z i A) 0", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma  aug_ipp_closed0:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n       assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n       ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) 0\\<rbrakk> \\<Longrightarrow>\n         \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) 0\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) 0", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n     assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n     ipp_cond2 z A i f; ipp_cond3 z i;\n     x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                      \\<^sub>i- x \\<in> A \\<or>\n                      \\<^sub>i- x \\<in> minus_set i A", "apply (case_tac \"x \\<in> A\", simp add:minus_set_def, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n     assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n     ipp_cond2 z A i f; ipp_cond3 z i;\n     x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A;\n     x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                      \\<^sub>i- x \\<in> A \\<or>\n                      \\<^sub>i- x \\<in> minus_set i A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n     assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n     ipp_cond2 z A i f; ipp_cond3 z i; x = z \\<or> x \\<in> minus_set i A;\n     x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                      \\<^sub>i- x \\<in> A \\<or>\n                      \\<^sub>i- x \\<in> minus_set i A", "apply (simp add:minus_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f\n              (insert z\n                (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y}));\n     assoc_bpp\n      (insert z (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y})) f;\n     ipp_cond1 A i; ipp_cond2 z A i f; ipp_cond3 z i;\n     x = z \\<or> (\\<exists>y\\<in>A. x = \\<^sub>i- y); x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                      \\<^sub>i- x \\<in> A \\<or>\n                      (\\<exists>y\\<in>A. \\<^sub>i- x = \\<^sub>i- y)", "apply (case_tac \"x = z\", simp, simp add:ipp_cond3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f\n              (insert z\n                (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y}));\n     assoc_bpp\n      (insert z (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y})) f;\n     ipp_cond1 A i; ipp_cond2 z A i f; ipp_cond3 z i;\n     x = z \\<or> (\\<exists>y\\<in>A. x = \\<^sub>i- y); x \\<notin> A;\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                      \\<^sub>i- x \\<in> A \\<or>\n                      (\\<exists>y\\<in>A. \\<^sub>i- x = \\<^sub>i- y)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f\n              (insert z\n                (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y}));\n     assoc_bpp\n      (insert z (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y})) f;\n     ipp_cond1 A i; ipp_cond2 z A i f; ipp_cond3 z i;\n     \\<exists>y\\<in>A. x = \\<^sub>i- y; x \\<notin> A; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                      \\<^sub>i- x \\<in> A \\<or>\n                      (\\<exists>y\\<in>A. \\<^sub>i- x = \\<^sub>i- y)", "apply (erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>commute_bpp f\n                 (insert z\n                   (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y}));\n        assoc_bpp\n         (insert z (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y})) f;\n        ipp_cond1 A i; ipp_cond2 z A i f; ipp_cond3 z i; x \\<notin> A;\n        x \\<noteq> z; y \\<in> A; x = \\<^sub>i- y\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         (\\<exists>y\\<in>A. \\<^sub>i- x = \\<^sub>i- y)", "apply (simp add:ipp_cond1_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_ipp_closedTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i\\<rbrakk> \\<Longrightarrow>  \n      \\<forall>x. x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n                             \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i A)\n                                  n \\<longrightarrow>\n                         \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n", "apply (induct_tac n, rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) 0\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) 0\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n        assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i;\n        x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         \\<^sub>i- x \\<in> minus_set i A\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply (case_tac \"x = z\", simp add:ipp_cond3_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n        assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i;\n        x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A;\n        x \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         \\<^sub>i- x \\<in> minus_set i A\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n        assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i;\n        x \\<in> A \\<or> x \\<in> minus_set i A; x \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         \\<^sub>i- x \\<in> minus_set i A\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply (case_tac \"x \\<in> A\", simp add:minus_set_def, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n        assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i;\n        x \\<in> A \\<or> x \\<in> minus_set i A; x \\<noteq> z;\n        x \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         \\<^sub>i- x \\<in> minus_set i A\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert z (A \\<union> minus_set i A));\n        assoc_bpp (insert z (A \\<union> minus_set i A)) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; x \\<in> minus_set i A;\n        x \\<noteq> z; x \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         \\<^sub>i- x \\<in> minus_set i A\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply (simp add:minus_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f\n                 (insert z\n                   (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y}));\n        assoc_bpp\n         (insert z (A \\<union> {x. \\<exists>y\\<in>A. x = \\<^sub>i- y})) f;\n        ipp_cond1 A i; ipp_cond2 z A i f; ipp_cond3 z i;\n        \\<exists>y\\<in>A. x = \\<^sub>i- y; x \\<noteq> z;\n        x \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- x = z \\<or>\n                         \\<^sub>i- x \\<in> A \\<or>\n                         (\\<exists>y\\<in>A. \\<^sub>i- x = \\<^sub>i- y)\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply (erule bexE, simp add:ipp_cond1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i A)\n                                     (Suc n) \\<longrightarrow>\n                            \\<^sub>i- x\n                            \\<in> add_set f (aug_pm_set z i A) (Suc n)", "apply (rule allI, rule impI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n;\n        \\<exists>s\\<in>add_set f (aug_pm_set z i A) n.\n           \\<exists>t\\<in>aug_pm_set z i A. x = s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>t\\<in>aug_pm_set z i A.\n                               \\<^sub>i- x = s \\<^sub>f+ t", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i A) n \\<longrightarrow>\n           \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n;\n        s \\<in> add_set f (aug_pm_set z i A) n; t \\<in> aug_pm_set z i A;\n        x = s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>t\\<in>aug_pm_set z i A.\n                               \\<^sub>i- x = s \\<^sub>f+ t", "apply (drule_tac a = s in forall_spec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; s \\<in> add_set f (aug_pm_set z i A) n;\n        t \\<in> aug_pm_set z i A; x = s \\<^sub>f+ t;\n        \\<^sub>i- s \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>t\\<in>aug_pm_set z i A.\n                               \\<^sub>i- x = s \\<^sub>f+ t", "apply (cut_tac ipp_cond2_def[of z A i f], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        \\<forall>x\\<in>addition_set f (aug_pm_set z i A).\n           \\<forall>y\\<in>addition_set f (aug_pm_set z i A).\n              \\<^sub>i- (x \\<^sub>f+ y) = \\<^sub>i- y \\<^sub>f+ \\<^sub>i- x;\n        ipp_cond3 z i; s \\<in> add_set f (aug_pm_set z i A) n;\n        t \\<in> aug_pm_set z i A; x = s \\<^sub>f+ t;\n        \\<^sub>i- s \\<in> add_set f (aug_pm_set z i A) n;\n        ipp_cond2 z A i f \\<equiv> True\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>ta\\<in>aug_pm_set z i A.\n                               \\<^sub>i- (s \\<^sub>f+ t) = sa \\<^sub>f+ ta", "apply (cut_tac n = n in addition_inc_add[of f \"aug_pm_set z i A\"],\n        frule_tac c = s and A = \"add_set f (aug_pm_set z i A) n\" in\n        subsetD[of _ \"addition_set f (aug_pm_set z i A)\"], assumption+,\n        cut_tac addition_inc_add0[of \"aug_pm_set z i A\" f],\n        frule_tac c = t in subsetD[of \"aug_pm_set z i A\"\n         \"addition_set f (aug_pm_set z i A)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        \\<forall>x\\<in>addition_set f (aug_pm_set z i A).\n           \\<forall>y\\<in>addition_set f (aug_pm_set z i A).\n              \\<^sub>i- (x \\<^sub>f+ y) = \\<^sub>i- y \\<^sub>f+ \\<^sub>i- x;\n        ipp_cond3 z i; s \\<in> add_set f (aug_pm_set z i A) n;\n        t \\<in> aug_pm_set z i A; x = s \\<^sub>f+ t;\n        \\<^sub>i- s \\<in> add_set f (aug_pm_set z i A) n;\n        ipp_cond2 z A i f \\<equiv> True;\n        add_set f (aug_pm_set z i A) n\n        \\<subseteq> addition_set f (aug_pm_set z i A);\n        s \\<in> addition_set f (aug_pm_set z i A);\n        aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A);\n        t \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>ta\\<in>aug_pm_set z i A.\n                               \\<^sub>i- (s \\<^sub>f+ t) = sa \\<^sub>f+ ta", "apply (drule_tac x = s in bspec, assumption,\n        drule_tac x = t in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond3 z i;\n        s \\<in> add_set f (aug_pm_set z i A) n; t \\<in> aug_pm_set z i A;\n        x = s \\<^sub>f+ t; \\<^sub>i- s \\<in> add_set f (aug_pm_set z i A) n;\n        ipp_cond2 z A i f \\<equiv> True;\n        add_set f (aug_pm_set z i A) n\n        \\<subseteq> addition_set f (aug_pm_set z i A);\n        s \\<in> addition_set f (aug_pm_set z i A);\n        aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A);\n        t \\<in> addition_set f (aug_pm_set z i A);\n        \\<^sub>i- (s \\<^sub>f+ t) =\n        \\<^sub>i- t \\<^sub>f+ \\<^sub>i- s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>ta\\<in>aug_pm_set z i A.\n                               \\<^sub>i- (s \\<^sub>f+ t) = sa \\<^sub>f+ ta", "apply (frule_tac x = t in aug_ipp_closed0[of f z i A], assumption+,\n        simp, assumption+, simp, simp,\n        frule_tac c = \"\\<^sub>i- t\" in subsetD[of \"aug_pm_set z i A\"\n                        \"addition_set f (aug_pm_set z i A)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond3 z i;\n        s \\<in> add_set f (aug_pm_set z i A) n; t \\<in> aug_pm_set z i A;\n        x = s \\<^sub>f+ t; \\<^sub>i- s \\<in> add_set f (aug_pm_set z i A) n;\n        ipp_cond2 z A i f \\<equiv> True;\n        add_set f (aug_pm_set z i A) n\n        \\<subseteq> addition_set f (aug_pm_set z i A);\n        s \\<in> addition_set f (aug_pm_set z i A);\n        aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A);\n        t \\<in> addition_set f (aug_pm_set z i A);\n        \\<^sub>i- (s \\<^sub>f+ t) = \\<^sub>i- t \\<^sub>f+ \\<^sub>i- s;\n        \\<^sub>i- t \\<in> aug_pm_set z i A;\n        \\<^sub>i- t \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>ta\\<in>aug_pm_set z i A.\n                               \\<^sub>i- t \\<^sub>f+ \\<^sub>i- s =\n                               sa \\<^sub>f+ ta", "apply (frule_tac c = \"\\<^sub>i- s\" and A = \"add_set f (aug_pm_set z i A) n\" in \n        subsetD[of _ \"addition_set f (aug_pm_set z i A)\"], assumption+,\n        frule_tac x = \"\\<^sub>i- t\" and y = \"\\<^sub>i- s\" in aug_commute[of f z i A],\n                         assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x s t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond3 z i;\n        s \\<in> add_set f (aug_pm_set z i A) n; t \\<in> aug_pm_set z i A;\n        x = s \\<^sub>f+ t; \\<^sub>i- s \\<in> add_set f (aug_pm_set z i A) n;\n        ipp_cond2 z A i f \\<equiv> True;\n        add_set f (aug_pm_set z i A) n\n        \\<subseteq> addition_set f (aug_pm_set z i A);\n        s \\<in> addition_set f (aug_pm_set z i A);\n        aug_pm_set z i A \\<subseteq> addition_set f (aug_pm_set z i A);\n        t \\<in> addition_set f (aug_pm_set z i A);\n        \\<^sub>i- (s \\<^sub>f+ t) = \\<^sub>i- s \\<^sub>f+ \\<^sub>i- t;\n        \\<^sub>i- t \\<in> aug_pm_set z i A;\n        \\<^sub>i- t \\<in> addition_set f (aug_pm_set z i A);\n        \\<^sub>i- s \\<in> addition_set f (aug_pm_set z i A);\n        \\<^sub>i- t \\<^sub>f+ \\<^sub>i- s =\n        \\<^sub>i- s \\<^sub>f+ \\<^sub>i- t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f (aug_pm_set z i A) n.\n                            \\<exists>ta\\<in>aug_pm_set z i A.\n                               \\<^sub>i- s \\<^sub>f+ \\<^sub>i- t =\n                               sa \\<^sub>f+ ta", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_ipp_closedTr2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk> \\<Longrightarrow>\n         \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n", "apply (simp add:aug_ipp_closedTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_ipp_closed:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; x \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk> \\<Longrightarrow> \n      \\<^sub>i- x \\<in> addition_set f (aug_pm_set z i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; x \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- x \\<in> addition_set f (aug_pm_set z i A)", "apply (simp add:addition_set_def, erule exE, erule conjE, erule exE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) n;\n        xa = add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>n.\n                                xa = add_set f (aug_pm_set z i A) n) \\<and>\n                            \\<^sub>i- x \\<in> xa", "apply (frule_tac n = n in aug_ipp_closedTr2[of f z i A x], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; x \\<in> add_set f (aug_pm_set z i A) n;\n        xa = add_set f (aug_pm_set z i A) n;\n        \\<^sub>i- x \\<in> add_set f (aug_pm_set z i A) n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>n.\n                                xa = add_set f (aug_pm_set z i A) n) \\<and>\n                            \\<^sub>i- x \\<in> xa", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma aug_zero_unique:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z; \n      zeroA z i f A z1\\<rbrakk> \\<Longrightarrow> z = z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z;\n     zeroA z i f A z1\\<rbrakk>\n    \\<Longrightarrow> z = z1", "apply (simp add:zeroA_def[of \"z\" _ _ _ \"z\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     z1 \\<in> addition_set f (aug_pm_set z i A);\n     \\<forall>x\\<in>addition_set f (aug_pm_set z i A). z \\<^sub>f+ x = x;\n     zeroA z i f A z1\\<rbrakk>\n    \\<Longrightarrow> z = z1", "apply (drule_tac x = z1 in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z1;\n     z \\<^sub>f+ z1 = z1\\<rbrakk>\n    \\<Longrightarrow> z = z1", "apply (cut_tac addition_set_inc_z [of z f i A])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z1;\n     z \\<^sub>f+ z1 = z1; z \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n    \\<Longrightarrow> z = z1", "apply (frule aug_commute [of f z i A z z1], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z1;\n     z \\<^sub>f+ z1 = z1; z \\<in> addition_set f (aug_pm_set z i A);\n     z \\<^sub>f+ z1 = z1 \\<^sub>f+ z\\<rbrakk>\n    \\<Longrightarrow> z = z1", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     z1 \\<in> addition_set f (aug_pm_set z i A); zeroA z i f A z1;\n     z1 \\<^sub>f+ z = z1; z \\<in> addition_set f (aug_pm_set z i A);\n     z \\<^sub>f+ z1 = z1\\<rbrakk>\n    \\<Longrightarrow> z = z1", "apply (simp add:zeroA_def[of _ _ _ _ \"z1\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inv_aug_addition:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> \n     \\<forall>a\\<in>addition_set f (aug_pm_set z i A). (\\<^sub>i-a) \\<^sub>f+ a = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>addition_set f (aug_pm_set z i A).\n                         \\<^sub>i- a \\<^sub>f+ a = z", "apply (simp add:inv_ipp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n     ipp_cond2 z A i f; ipp_cond3 z i;\n     \\<forall>a\\<in>addition_set f (aug_pm_set z i A).\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a);\n     commute_bpp f (aug_pm_set z i A); zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>addition_set f (aug_pm_set z i A).\n                         \\<^sub>i- a \\<^sub>f+ a = z", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i;\n        \\<forall>a\\<in>addition_set f (aug_pm_set z i A).\n           zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a);\n        commute_bpp f (aug_pm_set z i A); zeroA z i f A z;\n        a \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z", "apply (drule_tac x = a in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z", "apply (frule_tac ?z1.0 = \"(\\<^sub>i- a \\<^sub>f+ a)\" in aug_zero_unique [of f z i A])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a\n                         \\<in> addition_set f (aug_pm_set z i A)\n 2. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\\<rbrakk>\n       \\<Longrightarrow> zeroA z i f A z\n 3. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\\<rbrakk>\n       \\<Longrightarrow> zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\n 4. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a);\n        z = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z", "apply (frule_tac x = a in aug_ipp_closed [of f z i A], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a);\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a\n                         \\<in> addition_set f (aug_pm_set z i A)\n 2. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\\<rbrakk>\n       \\<Longrightarrow> zeroA z i f A z\n 3. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\\<rbrakk>\n       \\<Longrightarrow> zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a)\n 4. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a);\n        z = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z", "apply (rule_tac x = \"\\<^sub>i- a\" and y = a in aug_bpp_closed [of z i A f],\n                                       assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> addition_set f (aug_pm_set z i A);\n        zeroA z i f A (\\<^sub>i- a \\<^sub>f+ a);\n        z = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  fag_gen_by :: \"['a set, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a aGroup\" where\n  \"fag_gen_by A f i z = \\<lparr>carrier = addition_set f (aug_pm_set z i A), \n  pop = \\<lambda>x\\<in>(addition_set f (aug_pm_set z i A)). \n          \\<lambda>y\\<in>(addition_set f (aug_pm_set z i A)). x \\<^sub>f+ y, \n  mop = \\<lambda>x\\<in>(addition_set f (aug_pm_set z i A)). \\<^sub>i- x, zero = z\\<rparr>\""], ["", "lemma fag_gen_carrier:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> \n      carrier (fag_gen_by A f i z) = addition_set f (aug_pm_set z i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> carrier (fag_gen_by A f i z) =\n                      addition_set f (aug_pm_set z i A)", "by (simp add:fag_gen_by_def)"], ["", "lemma addition_set_sub_fag_gen_carrier:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> addition_set f A \\<subseteq> carrier (fag_gen_by A f i z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> addition_set f A\n                      \\<subseteq> carrier (fag_gen_by A f i z)", "apply (simp add:fag_gen_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n     ipp_cond2 z A i f; ipp_cond3 z i; inv_ipp z i f A;\n     commute_bpp f (aug_pm_set z i A); zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> addition_set f A\n                      \\<subseteq> addition_set f (aug_pm_set z i A)", "apply (simp add:addition_sub_aug_pm_addition)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_aGroup:\"\\<lbrakk>commute_bpp f (aug_pm_set z i A); \n      assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f; \n      ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A); \n      zeroA z i f A z\\<rbrakk> \\<Longrightarrow> aGroup (fag_gen_by A f i z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> aGroup (fag_gen_by A f i z)", "apply (rule aGroup.intro)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> (\\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 2. \\<And>a b c.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z);\n        c \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         c =\n                         a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                          c)\n 3. \\<And>a b.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b =\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub> a\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 5. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 7. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def aug_bpp_closed)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z);\n        c \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         c =\n                         a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                          c)\n 2. \\<And>a b.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b =\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub> a\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 4. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 6. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; inv_ipp z i f A;\n        commute_bpp f (aug_pm_set z i A); zeroA z i f A z;\n        a \\<in> addition_set f (aug_pm_set z i A);\n        b \\<in> addition_set f (aug_pm_set z i A);\n        c \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> (a \\<^sub>f+ b\n                          \\<in> addition_set f\n                                 (aug_pm_set z i A) \\<longrightarrow>\n                          (b \\<^sub>f+ c\n                           \\<in> addition_set f\n                                  (aug_pm_set z i A) \\<longrightarrow>\n                           a \\<^sub>f+ b \\<^sub>f+ c =\n                           a \\<^sub>f+ (b \\<^sub>f+ c)) \\<and>\n                          (b \\<^sub>f+ c\n                           \\<notin> addition_set f\n                                     (aug_pm_set z i A) \\<longrightarrow>\n                           a \\<^sub>f+ b \\<^sub>f+ c = undefined)) \\<and>\n                         (a \\<^sub>f+ b\n                          \\<notin> addition_set f\n                                    (aug_pm_set z i A) \\<longrightarrow>\n                          (b \\<^sub>f+ c\n                           \\<in> addition_set f\n                                  (aug_pm_set z i A) \\<longrightarrow>\n                           undefined c = a \\<^sub>f+ (b \\<^sub>f+ c)) \\<and>\n                          (b \\<^sub>f+ c\n                           \\<notin> addition_set f\n                                     (aug_pm_set z i A) \\<longrightarrow>\n                           undefined c = undefined))\n 2. \\<And>a b.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b =\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub> a\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 4. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 6. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:aug_bpp_closed)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; inv_ipp z i f A;\n        commute_bpp f (aug_pm_set z i A); zeroA z i f A z;\n        a \\<in> addition_set f (aug_pm_set z i A);\n        b \\<in> addition_set f (aug_pm_set z i A);\n        c \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ b \\<^sub>f+ c =\n                         a \\<^sub>f+ (b \\<^sub>f+ c)\n 2. \\<And>a b.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b =\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub> a\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 4. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 6. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:assoc_bpp_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z);\n        b \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         b =\n                         b \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub> a\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 3. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 5. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i;\n        ipp_cond2 z A i f; ipp_cond3 z i; inv_ipp z i f A;\n        commute_bpp f (aug_pm_set z i A); zeroA z i f A z;\n        a \\<in> addition_set f (aug_pm_set z i A);\n        b \\<in> addition_set f (aug_pm_set z i A)\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ b = b \\<^sub>f+ a\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 3. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 5. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:aug_commute)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> mop (fag_gen_by A f i z)\n                      \\<in> carrier (fag_gen_by A f i z) \\<rightarrow>\n                            carrier (fag_gen_by A f i z)\n 2. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 4. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def aug_ipp_closed)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fag_gen_by A f i z\\<^esub> a \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 3. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def inv_aug_addition aug_ipp_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n     assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n     ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n     zeroA z i f A z\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                      \\<in> carrier (fag_gen_by A f i z)\n 2. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def  addition_set_inc_z)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i A);\n        assoc_bpp (aug_pm_set z i A) f; ipp_cond1 A i; ipp_cond2 z A i f;\n        ipp_cond3 z i; inv_ipp z i f A; commute_bpp f (aug_pm_set z i A);\n        zeroA z i f A z; a \\<in> carrier (fag_gen_by A f i z)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fag_gen_by A f i z\\<^esub> \\<plusminus>\\<^bsub>fag_gen_by A f i z\\<^esub>\n                         a =\n                         a", "apply (simp add:fag_gen_by_def addition_set_inc_z zeroA_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Abelian group generated by a singleton (constructive)\""], ["", "definition\n  fag_single :: \"['a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a aGroup\" where\n  \"fag_single a f i z = fag_gen_by {a} f i z\""], ["", "lemma aug_pm_aug_pm_minus:\"ipp_cond1 {a} i \\<Longrightarrow> \n                      aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipp_cond1 {a} i \\<Longrightarrow>\n    aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a}", "apply (simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ipp_cond1 {a} i \\<Longrightarrow>\n    {\\<^sub>i- a, a, z} = {\\<^sub>i- (\\<^sub>i- a), \\<^sub>i- a, z}", "apply (simp add:ipp_cond1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^sub>i- (\\<^sub>i- a) = a \\<Longrightarrow>\n    {\\<^sub>i- a, a, z} = {a, \\<^sub>i- a, z}", "apply (rule equalityI, rule subsetI, simp, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^sub>i- (\\<^sub>i- a) = a \\<Longrightarrow>\n    {a, \\<^sub>i- a, z} \\<subseteq> {\\<^sub>i- a, a, z}", "apply (rule subsetI, simp, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ipp_cond1_minus:\"ipp_cond1 {a} i \\<Longrightarrow> ipp_cond1 {\\<^sub>i- a} i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipp_cond1 {a} i \\<Longrightarrow> ipp_cond1 {\\<^sub>i- a} i", "by (simp add:ipp_cond1_def)"], ["", "lemma ipp_cond2_minus:\"\\<lbrakk>ipp_cond1 {a} i; ipp_cond2 z {a} i f\\<rbrakk> \\<Longrightarrow> \n                                             ipp_cond2 z {\\<^sub>i- a} i f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i; ipp_cond2 z {a} i f\\<rbrakk>\n    \\<Longrightarrow> ipp_cond2 z {\\<^sub>i- a} i f", "by (simp add:ipp_cond2_def, simp add:aug_pm_aug_pm_minus)"], ["", "lemma zeroA_minus:\"\\<lbrakk>ipp_cond1 {a} i; zeroA z i f {a} z1\\<rbrakk> \\<Longrightarrow> \n                   zeroA z i f {\\<^sub>i- a} z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i; zeroA z i f {a} z1\\<rbrakk>\n    \\<Longrightarrow> zeroA z i f {\\<^sub>i- a} z1", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i;\n     \\<forall>x\\<in>addition_set f (aug_pm_set z i {a}).\n        z1 \\<^sub>f+ x = x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>addition_set f\n(aug_pm_set z i {\\<^sub>i- a}).\n                         z1 \\<^sub>f+ x = x", "apply (simp add:aug_pm_aug_pm_minus)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inv_ipp_minus:\"\\<lbrakk>ipp_cond1 {a} i; inv_ipp z i f {a}\\<rbrakk> \\<Longrightarrow> \n      inv_ipp z i f {\\<^sub>i- a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i; inv_ipp z i f {a}\\<rbrakk>\n    \\<Longrightarrow> inv_ipp z i f {\\<^sub>i- a}", "apply (simp add:inv_ipp_def [of _ _ _ \"{a}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa)\\<rbrakk>\n    \\<Longrightarrow> inv_ipp z i f {\\<^sub>i- a}", "apply (simp add:aug_pm_aug_pm_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {\\<^sub>i- a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa)\\<rbrakk>\n    \\<Longrightarrow> inv_ipp z i f {\\<^sub>i- a}", "apply (simp add:inv_ipp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 {a} i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {\\<^sub>i- a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>aa\\<in>addition_set f\n (aug_pm_set z i {\\<^sub>i- a}).\n                         zeroA z i f {\\<^sub>i- a}\n                          (\\<^sub>i- aa \\<^sub>f+ aa)", "apply (simp add:zeroA_minus)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n \\<forall>s. s\\<in> add_set f {a} (Suc n) \\<longrightarrow> s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         s \\<in> add_set f {a} (Suc n) \\<longrightarrow>\n                         s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n", "apply (cut_tac addition_inc_add0[of \"aug_pm_set z i {a}\" f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         s \\<in> add_set f {a} (Suc n) \\<longrightarrow>\n                         s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n", "apply (cut_tac a_in_aug_pm_set[of a \"{a}\" z i], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> aug_pm_set z i {a}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         (\\<exists>sa\\<in>add_set f {a} n.\n                             s = sa \\<^sub>f+ a) \\<longrightarrow>\n                         s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule subsetD[of \"aug_pm_set z i {a}\" \n         \"addition_set f (aug_pm_set z i {a})\" \"a\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> aug_pm_set z i {a};\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         (\\<exists>sa\\<in>add_set f {a} n.\n                             s = sa \\<^sub>f+ a) \\<longrightarrow>\n                         s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (induct_tac n)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> aug_pm_set z i {a};\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         (\\<exists>sa\\<in>add_set f {a} 0.\n                             s = sa \\<^sub>f+ a) \\<longrightarrow>\n                         s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} 0\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (rule allI, rule impI, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        s = a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_ipp_closed [of f z i \"{a}\" a], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:addition_assoc)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a) = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_commute [of f z i \"{a}\" a \"\\<^sub>i- a\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a) = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a) = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a) = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:inv_aug_addition)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ z = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (cut_tac addition_set_inc_z[of z f i \"{a}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ z = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"a\" \"z\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ z = z \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ z = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ z = z \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> z \\<^sub>f+ a = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"a \\<^sub>f+ z = z \\<^sub>f+ a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a}); s = a \\<^sub>f+ a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> z \\<^sub>f+ a = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                                s = sa \\<^sub>f+ a) \\<longrightarrow>\n                            s \\<^sub>f+ \\<^sub>i- a\n                            \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>sa\\<in>add_set f {a} (Suc n).\n                             s = sa \\<^sub>f+ a) \\<longrightarrow>\n                         s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n;\n        \\<exists>sa\\<in>add_set f {a} (Suc n). s = sa \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (erule bexE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s.\n           (\\<exists>sa\\<in>add_set f {a} n.\n               s = sa \\<^sub>f+ a) \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n;\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"\\<forall>s. (\\<exists>sa\\<in>add_set f {a} n. s = sa \\<^sub>f+ a) \\<longrightarrow>\n            s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule fag_aGroup[of f z i \"{a}\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (cut_tac n = \"Suc n\" in addition_inc_add[of f \"{a}\"],\n              cut_tac addition_sub_aug_pm_addition[of f \"{a}\" z i],\n        frule_tac c = sa and A = \"add_set f {a} (Suc n)\" in subsetD[of _\n          \"addition_set f {a}\"], assumption+,\n        frule_tac c = sa in subsetD[of \"addition_set f {a}\"\n                    \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (cut_tac x = sa and y = a and z = \" \\<^sub>i- a\" in \n              aGroup.ag_pOp_assoc[of \"fag_gen_by {a} f i z\"], assumption,\n        simp del:add_set_Suc add:fag_gen_carrier)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<in> carrier (fag_gen_by {a} f i z)\n 2. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<in> carrier (fag_gen_by {a} f i z)\n 3. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        \\<^sub>i- a =\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        (a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n         \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:fag_gen_carrier,\n        cut_tac addition_inc_add0[of \"aug_pm_set z i {a}\"],\n        simp add:subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        \\<exists>s\\<in>add_set f {a} n. sa = s \\<^sub>f+ a;\n        s = sa \\<^sub>f+ a; aGroup (fag_gen_by {a} f i z);\n        {x. \\<exists>s\\<in>add_set f {a} n. x = s \\<^sub>f+ a}\n        \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        aug_pm_set z i {a}\n        \\<subseteq> addition_set (?f69 n (sa \\<^sub>f+ a) sa)\n                     (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a \\<in> carrier (fag_gen_by {a} f i z)\n 2. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        \\<^sub>i- a =\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        (a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n         \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (subst fag_gen_carrier, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        \\<exists>s\\<in>add_set f {a} n. sa = s \\<^sub>f+ a;\n        s = sa \\<^sub>f+ a; aGroup (fag_gen_by {a} f i z);\n        {x. \\<exists>s\\<in>add_set f {a} n. x = s \\<^sub>f+ a}\n        \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        aug_pm_set z i {a}\n        \\<subseteq> addition_set (?f69 n (sa \\<^sub>f+ a) sa)\n                     (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- a\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        \\<^sub>i- a =\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        (a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n         \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (rule aug_ipp_closed[of f z i \"{a}\" a], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        \\<exists>s\\<in>add_set f {a} n. sa = s \\<^sub>f+ a;\n        s = sa \\<^sub>f+ a; aGroup (fag_gen_by {a} f i z);\n        {x. \\<exists>s\\<in>add_set f {a} n. x = s \\<^sub>f+ a}\n        \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        aug_pm_set z i {a}\n        \\<subseteq> addition_set (?f69 n (sa \\<^sub>f+ a) sa)\n                     (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> a \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        \\<^sub>i- a =\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        (a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n         \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        \\<^sub>i- a =\n        sa \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n        (a \\<plusminus>\\<^bsub>fag_gen_by {a} f i z\\<^esub>\n         \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a\n                         \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp del:add_set_Suc add:fag_gen_by_def, fold fag_gen_by_def,\n       frule aug_ipp_closed[of f z i \"{a}\" a], assumption+,\n       simp del:add_set_Suc add:aug_bpp_closed,\n       simp del:add_set_Suc add:aug_commute[of f z i \"{a}\" a \"\\<^sub>i- a\"],\n       thin_tac \"sa \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a = sa \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)\",\n       simp del:add_set_Suc add:inv_aug_addition,\n       cut_tac addition_set_inc_z[of z f i \"{a}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ z \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (subst aug_commute[of f z i \"{a}\" _ z], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> aug_pm_set z i {a};\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} (Suc n); s = sa \\<^sub>f+ a;\n        aGroup (fag_gen_by {a} f i z);\n        add_set f {a} (Suc n) \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> z \\<^sub>f+ sa \\<in> add_set f {a} (Suc n)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp del:add_set_Suc add:zeroA_def[of z i f \"{a}\" z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     aug_pm_set z i {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; s \\<in> add_set f {a} 0\\<rbrakk> \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; s \\<in> add_set f {a} 0\\<rbrakk>\n    \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a = z", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z", "apply (cut_tac a_in_aug_pm_set[of a \"{a}\" z i],\n        cut_tac addition_inc_add0[of \"aug_pm_set z i {a}\" f],\n        frule subsetD[of \"aug_pm_set z i {a}\"\n                      \"addition_set f (aug_pm_set z i {a})\" a], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_ipp_closed [of \"f\" \"z\" \"i\" \"{a}\" \"a\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"a\" \"\\<^sub>i- a\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n     a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n     a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:inv_aug_addition)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; s = a\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ipp_conditions:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>\n        assoc_bpp (aug_pm_set z i { \\<^sub>i- a}) f \\<and> ipp_cond1 { \\<^sub>i- a} i \\<and>\n        ipp_cond2 z { \\<^sub>i- a} i f \\<and> inv_ipp z i f { \\<^sub>i- a} \\<and> \n        commute_bpp f (aug_pm_set z i { \\<^sub>i- a}) \\<and> zeroA z i f { \\<^sub>i- a} z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f \\<and>\n                      ipp_cond1 {\\<^sub>i- a} i \\<and>\n                      ipp_cond2 z {\\<^sub>i- a} i f \\<and>\n                      inv_ipp z i f {\\<^sub>i- a} \\<and>\n                      commute_bpp f (aug_pm_set z i {\\<^sub>i- a}) \\<and>\n                      zeroA z i f {\\<^sub>i- a} z", "apply (simp add:aug_pm_aug_pm_minus[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> ipp_cond1 {\\<^sub>i- a} i \\<and>\n                      ipp_cond2 z {\\<^sub>i- a} i f \\<and>\n                      inv_ipp z i f {\\<^sub>i- a} \\<and>\n                      zeroA z i f {\\<^sub>i- a} z", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> ipp_cond1 {\\<^sub>i- a} i\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> ipp_cond2 z {\\<^sub>i- a} i f \\<and>\n                      inv_ipp z i f {\\<^sub>i- a} \\<and>\n                      zeroA z i f {\\<^sub>i- a} z", "apply (subst ipp_cond1_def, rule ballI, simp, simp add:ipp_cond1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> ipp_cond2 z {\\<^sub>i- a} i f \\<and>\n                      inv_ipp z i f {\\<^sub>i- a} \\<and>\n                      zeroA z i f {\\<^sub>i- a} z", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> ipp_cond2 z {\\<^sub>i- a} i f\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> inv_ipp z i f {\\<^sub>i- a} \\<and>\n                      zeroA z i f {\\<^sub>i- a} z", "apply (subst ipp_cond2_def,\n        simp add:aug_pm_aug_pm_minus[THEN sym] ipp_cond2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> inv_ipp z i f {\\<^sub>i- a} \\<and>\n                      zeroA z i f {\\<^sub>i- a} z", "apply (simp add:zeroA_def inv_ipp_def,\n       simp add:aug_pm_aug_pm_minus)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr3:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; s\\<in> add_set f {\\<^sub>i- a} n\\<rbrakk> \\<Longrightarrow>\n          s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {\\<^sub>i- a} (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; s \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk>\n    \\<Longrightarrow> s \\<^sub>f+ \\<^sub>i- a\n                      \\<in> add_set f {\\<^sub>i- a} (Suc n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     s \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>sa\\<in>add_set f {\\<^sub>i- a} n.\n                         s \\<^sub>f+ \\<^sub>i- a = sa \\<^sub>f+ \\<^sub>i- a", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_elemTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n     \\<forall>x. x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n     (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or> (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or> x = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  n \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z", "apply (cut_tac a_in_aug_pm_set[of a \"{a}\" z i],\n        cut_tac addition_inc_add0[of \"aug_pm_set z i {a}\" f],\n        frule subsetD[of \"aug_pm_set z i {a}\"\n                      \"addition_set f (aug_pm_set z i {a})\" a], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  n \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (cut_tac addition_set_inc_z[of z f i \"{a}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  n \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  n \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  n \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z", "apply (cut_tac assoc_bpp_restrict[of \"{a}\" \"aug_pm_set z i {a}\" f])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  n \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (induct_tac n)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> add_set f (aug_pm_set z i {a})\n                                  0 \\<longrightarrow>\n                         (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (rule allI, rule impI, simp add:aug_pm_set_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f;\n        x = a \\<or> x = z \\<or> x \\<in> minus_set i {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (erule disjE, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f; x = a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a = z\n 2. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f; x = z \\<or> x \\<in> minus_set i {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (subgoal_tac \"a \\<in> add_set f {a} 0\", blast)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f; x = a\\<rbrakk>\n       \\<Longrightarrow> a \\<in> add_set f {a} 0\n 2. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f; x = z \\<or> x \\<in> minus_set i {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f; x = z \\<or> x \\<in> minus_set i {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (erule disjE, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (insert a (insert z (minus_set i {a})));\n        assoc_bpp (insert a (insert z (minus_set i {a}))) f;\n        ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i;\n        inv_ipp z i f {a}; zeroA z i f {a} z;\n        a \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        z \\<in> addition_set f\n                 (insert a (insert z (minus_set i {a}))) \\<and>\n        minus_set i {a}\n        \\<subseteq> addition_set f (insert a (insert z (minus_set i {a})));\n        assoc_bpp {a} f; x \\<in> minus_set i {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:minus_set_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f {a, z, \\<^sub>i- a};\n        assoc_bpp {a, z, \\<^sub>i- a} f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        zeroA z i f {a} z;\n        a \\<in> addition_set f {a, z, \\<^sub>i- a} \\<and>\n        z \\<in> addition_set f {a, z, \\<^sub>i- a} \\<and>\n        \\<^sub>i- a \\<in> addition_set f {a, z, \\<^sub>i- a};\n        assoc_bpp {a} f; x = \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a = z\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (subgoal_tac \" \\<^sub>i- a \\<in> add_set f {\\<^sub>i- a} 0\", blast, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n           x = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i {a})\n                                     (Suc n) \\<longrightarrow>\n                            (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                            (\\<exists>m1.\n                                x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                            x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or> x = z;\n        x \\<in> add_set f (aug_pm_set z i {a}) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp, (erule bexE)+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i {a}) n \\<longrightarrow>\n           (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n           (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or> x = z;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (drule_tac a = s in forall_spec, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        (\\<exists>n1. s \\<in> add_set f {a} n1) \\<or>\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (subgoal_tac \"t = a \\<or> t = z \\<or> t = \\<^sub>i- a\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        (\\<exists>n1. s \\<in> add_set f {a} n1) \\<or>\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or> s = z;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        (\\<exists>n1. s \\<in> add_set f {a} n1) \\<or>\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> t = a \\<or> t = z \\<or> t = \\<^sub>i- a\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        (\\<exists>n1. s \\<in> add_set f {a} n1) \\<or>\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> t = a \\<or> t = z \\<or> t = \\<^sub>i- a\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        (\\<exists>n1. s \\<in> add_set f {a} n1) \\<or>\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or> s = z;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:aug_pm_set_def minus_set_def, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        (\\<exists>n1. s \\<in> add_set f {a} n1) \\<or>\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or> s = z;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (erule disjE, erule exE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {a} n1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"n1 = 0\", simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = a\", simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n; x = a \\<^sub>f+ a; s = a;\n        n1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ a = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 3. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac A_sub_aug_pm_set[of \"{a}\" z i])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n; x = a \\<^sub>f+ a; s = a;\n        n1 = 0; t = a; {a} \\<subseteq> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ a = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 3. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac addition_inc_add0[of \"{a}\"f])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n; x = a \\<^sub>f+ a; s = a;\n        n1 = 0; t = a; {a} \\<subseteq> aug_pm_set z i {a};\n        {a} \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ a = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 3. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule bpp_closed1[of \"{a}\" f a 0 a 0],\n          simp, simp, blast)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = z\", simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ z; s = a; n1 = 0;\n        z \\<noteq> a; t = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ z \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ z\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ z = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 3. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:aug_commute[of f z i \"{a}\" a z])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ a; s = a; n1 = 0;\n        z \\<noteq> a; t = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ a = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 3. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:zeroA_def,\n         subgoal_tac \"a \\<in> add_set f {a} 0\", blast, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ t;\n        t = z \\<or> t = \\<^sub>i- a; s = a; n1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ t = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        a \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a}; x = a \\<^sub>f+ \\<^sub>i- a;\n        t = \\<^sub>i- a; s = a; n1 = 0; \\<^sub>i- a \\<noteq> a;\n        \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             a \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:fag_single_additionTr2[of f z i a a])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        n1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        0 < n1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = a\", simp,\n         frule_tac x = s and n = n1 and y = a in bpp_closed1[of \"{a}\" f\n              _ _ _ 0], assumption, simp, blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        0 < n1; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = z\", simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ z;\n        s \\<in> add_set f {a} n1; 0 < n1; z \\<noteq> a; t = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ z \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ z\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ z = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        0 < n1; t \\<noteq> a; t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac n = n in addition_inc_add[of f \"aug_pm_set z i {a}\"],\n          frule_tac c = s and A = \"add_set f (aug_pm_set z i {a}) n\" in \n          subsetD[of _ \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ z;\n        s \\<in> add_set f {a} n1; 0 < n1; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        s \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ z \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ z\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ z = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        0 < n1; t \\<noteq> a; t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:aug_commute[of f z i \"{a}\" _ z])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ s;\n        s \\<in> add_set f {a} n1; 0 < n1; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        s \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ s \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ s\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ s = z\n 2. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        0 < n1; t \\<noteq> a; t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:zeroA_def, blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s \\<in> add_set f {a} n1;\n        0 < n1; t \\<noteq> a; t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ \\<^sub>i- a;\n        t = \\<^sub>i- a; s \\<in> add_set f {a} n1; 0 < n1;\n        \\<^sub>i- a \\<noteq> a; \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule_tac n = \"n1 - Suc 0\" in fag_single_additionTr1[of f z i a],\n        assumption+, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t n1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ \\<^sub>i- a;\n        t = \\<^sub>i- a; s \\<in> add_set f {a} n1; 0 < n1;\n        \\<^sub>i- a \\<noteq> a; \\<^sub>i- a \\<noteq> z;\n        \\<forall>s.\n           s \\<in> add_set f {a} n1 \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- a \\<in> add_set f {a} (n1 - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (drule_tac a = s in forall_spec, assumption, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        (\\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n        s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (rotate_tac -1, erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        \\<exists>m1. s \\<in> add_set f {\\<^sub>i- a} m1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (erule exE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule ipp_conditions[of z i a f], assumption+, (erule conjE)+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"m1 = 0\", simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = a\", simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac aug_pm_aug_pm_minus[of a i z])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a;\n        aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> ipp_cond1 {a} i\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 4. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 7. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac addition_inc_add0[of \"{\\<^sub>i- a}\" f])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a;\n        aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a};\n        {\\<^sub>i- a} \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> ipp_cond1 {a} i\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 4. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 7. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac A = \"{\\<^sub>i- a}\" and B = \"aug_pm_set z i {a}\" in\n          addition_set_mono[of _ _ f], simp add:aug_pm_set_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a;\n        aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a};\n        {\\<^sub>i- a} \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> ipp_cond1 {a} i\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 4. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 7. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule subsetD[of \"{\\<^sub>i- a}\" \"addition_set f {\\<^sub>i- a}\" \"\\<^sub>i- a\"], simp,\n         frule subsetD[of \"addition_set f {\\<^sub>i- a}\"\n              \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a;\n        aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a};\n        {\\<^sub>i- a} \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f {\\<^sub>i- a};\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> ipp_cond1 {a} i\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 4. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 7. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule inv_aug_addition[of f z i \"{a}\"], assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a;\n        aug_pm_set z i {a} = aug_pm_set z i {\\<^sub>i- a};\n        {\\<^sub>i- a} \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f {\\<^sub>i- a};\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>a\\<in>addition_set f (aug_pm_set z i {a}).\n           \\<^sub>i- a \\<^sub>f+ a = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        x = \\<^sub>i- a \\<^sub>f+ a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t = a\\<rbrakk>\n       \\<Longrightarrow> ipp_cond1 {a} i\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 4. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 7. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (drule_tac x = a in bspec, assumption,\n         simp, assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = z\", simp,\n         cut_tac n = n in addition_inc_add[of f \"aug_pm_set z i {a}\"],\n         frule_tac c = \"\\<^sub>i- a\" and A = \"add_set f (aug_pm_set z i {a}) n\" in \n         subsetD[of _ \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ z;\n        s = \\<^sub>i- a; assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ z\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ z\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ z = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:aug_commute)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ \\<^sub>i- a;\n        s = \\<^sub>i- a; assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a});\n        \\<forall>x\\<in>addition_set f (aug_pm_set z i {a}).\n           z \\<^sub>f+ x = x;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        \\<forall>x\\<in>addition_set f (aug_pm_set z i {\\<^sub>i- a}).\n           z \\<^sub>f+ x = x;\n        m1 = 0; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (subgoal_tac \" \\<^sub>i- a \\<in> add_set f {\\<^sub>i- a} 0\", blast, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = \\<^sub>i- a \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = \\<^sub>i- a;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ t = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a};\n        x = \\<^sub>i- a \\<^sub>f+ \\<^sub>i- a; t = \\<^sub>i- a;\n        s = \\<^sub>i- a; assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; \\<^sub>i- a \\<noteq> a;\n        \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             \\<^sub>i- a \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             \\<^sub>i- a \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         \\<^sub>i- a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac assoc_bpp_restrict[of \"{\\<^sub>i- a}\" \"aug_pm_set z i {a}\"],\n         frule bpp_closed1[of \"{\\<^sub>i- a}\" f \"\\<^sub>i- a\" 0 \"\\<^sub>i- a\" 0], simp, simp, blast)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a};\n        x = \\<^sub>i- a \\<^sub>f+ \\<^sub>i- a; t = \\<^sub>i- a;\n        s = \\<^sub>i- a; assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; \\<^sub>i- a \\<noteq> a;\n        \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        \\<^sub>i- a \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a};\n        x = \\<^sub>i- a \\<^sub>f+ \\<^sub>i- a; t = \\<^sub>i- a;\n        s = \\<^sub>i- a; assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 = 0; \\<^sub>i- a \\<noteq> a;\n        \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f\n 3. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 6. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:aug_pm_set_def, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; m1 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = a\", simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n; x = s \\<^sub>f+ a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t = a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule_tac n = \"m1 - Suc 0\" in fag_single_additionTr1[of f z i \"\\<^sub>i- a\"],\n         assumption+, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n; x = s \\<^sub>f+ a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t = a;\n        \\<forall>s.\n           s \\<in> add_set f {\\<^sub>i- a} m1 \\<longrightarrow>\n           s \\<^sub>f+ \\<^sub>i- (\\<^sub>i- a)\n           \\<in> add_set f {\\<^sub>i- a} (m1 - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ a = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (thin_tac \"s \\<in> add_set f (aug_pm_set z i {a}) n\",\n         drule_tac a = s in forall_spec, assumption,\n         simp add:ipp_cond1_def, blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = z\", simp,\n         cut_tac n = n in addition_inc_add[of f \"aug_pm_set z i {a}\"],\n         frule_tac c = s and A = \"add_set f (aug_pm_set z i {a}) n\" in \n              subsetD[of _ \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ z;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        s \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ z \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ z\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ z = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule_tac x = s and y = z in aug_commute[of f z i \"{a}\"], assumption+,\n          simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        z \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ s;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; z \\<noteq> a; t = z;\n        add_set f (aug_pm_set z i {a}) n\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        s \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<^sub>f+ z = z \\<^sub>f+ s\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ s \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ s\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ s = z\n 2. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 3. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:zeroA_def, blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a;\n        s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t m1.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ \\<^sub>i- a;\n        t = \\<^sub>i- a; s \\<in> add_set f {\\<^sub>i- a} m1;\n        assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f;\n        ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n        inv_ipp z i f {\\<^sub>i- a};\n        commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n        zeroA z i f {\\<^sub>i- a} z; 0 < m1; \\<^sub>i- a \\<noteq> a;\n        \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             s \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             s \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         s \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (cut_tac assoc_bpp_restrict[of \"{\\<^sub>i- a}\" \"aug_pm_set z i {\\<^sub>i- a}\" f],\n         frule_tac x = s and n = m1 and y = \"\\<^sub>i- a\" in \n          bpp_closed1[of \"{\\<^sub>i- a}\" f  _ _ _ 0], assumption, simp, blast,\n          simp add:aug_pm_set_def, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        s \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = s \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = a\", simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n; x = z \\<^sub>f+ a; s = z;\n        t = a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ a = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ t = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a});\n        \\<forall>x\\<in>addition_set f (aug_pm_set z i {a}).\n           z \\<^sub>f+ x = x;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n; x = a; s = z;\n        t = a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. a \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             a \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         a = z\n 2. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ t = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (subgoal_tac \"a \\<in> add_set f {a} 0\", blast, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z;\n        t \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (case_tac \"t = z\", simp, simp add:zeroA_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n;\n        t \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ t;\n        t = a \\<or> t = z \\<or> t = \\<^sub>i- a; s = z; t \\<noteq> a;\n        t \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ t \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ t\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); assoc_bpp {a} f;\n        z \\<in> add_set f (aug_pm_set z i {a}) n;\n        \\<^sub>i- a \\<in> aug_pm_set z i {a}; x = z \\<^sub>f+ \\<^sub>i- a;\n        t = \\<^sub>i- a; s = z; \\<^sub>i- a \\<noteq> a;\n        \\<^sub>i- a \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1.\n                             z \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             z \\<^sub>f+ \\<^sub>i- a\n                             \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         z \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (frule subsetD[of \"aug_pm_set z i {a}\" \n        \"addition_set f (aug_pm_set z i {a})\" \" \\<^sub>i- a\"], assumption+,\n        simp add:zeroA_def, \n        subgoal_tac \" \\<^sub>i- a \\<in> add_set f {\\<^sub>i- a} 0\", blast, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_elem:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; x \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk> \\<Longrightarrow>  \n    (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or> (\\<exists>m1. x \\<in> add_set f {\\<^sub>i- a} m1) \\<or> x = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; x \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                      (\\<exists>m1.\n                          x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                      x = z", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     \\<exists>xa.\n        (\\<exists>n. xa = add_set f (aug_pm_set z i {a}) n) \\<and>\n        x \\<in> xa\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                      (\\<exists>m1.\n                          x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                      x = z", "apply (erule exE, erule conjE, erule exE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        x \\<in> add_set f (aug_pm_set z i {a}) n;\n        xa = add_set f (aug_pm_set z i {a}) n\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n1. x \\<in> add_set f {a} n1) \\<or>\n                         (\\<exists>m1.\n                             x \\<in> add_set f {\\<^sub>i- a} m1) \\<or>\n                         x = z", "apply (simp add:fag_single_elemTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_set_single1Tr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n      \\<forall>x y. x \\<in> add_set f {a} n \\<and> y \\<in> add_set f {a} n \\<longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x y.\n                         x \\<in> add_set f {a} n \\<and>\n                         y \\<in> add_set f {a} n \\<longrightarrow>\n                         x = y", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x y.\n                         x \\<in> add_set f {a} 0 \\<and>\n                         y \\<in> add_set f {a} 0 \\<longrightarrow>\n                         x = y\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        \\<forall>x y.\n           x \\<in> add_set f {a} n \\<and>\n           y \\<in> add_set f {a} n \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x \\<in> add_set f {a} (Suc n) \\<and>\n                            y \\<in> add_set f {a} (Suc n) \\<longrightarrow>\n                            x = y", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        x \\<in> add_set f {a} 0; y \\<in> add_set f {a} 0\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        \\<forall>x y.\n           x \\<in> add_set f {a} n \\<and>\n           y \\<in> add_set f {a} n \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x \\<in> add_set f {a} (Suc n) \\<and>\n                            y \\<in> add_set f {a} (Suc n) \\<longrightarrow>\n                            x = y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        \\<forall>x y.\n           x \\<in> add_set f {a} n \\<and>\n           y \\<in> add_set f {a} n \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x \\<in> add_set f {a} (Suc n) \\<and>\n                            y \\<in> add_set f {a} (Suc n) \\<longrightarrow>\n                            x = y", "apply ((rule allI)+, rule impI, erule conjE, simp, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x y s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        \\<forall>x y.\n           x \\<in> add_set f {a} n \\<and>\n           y \\<in> add_set f {a} n \\<longrightarrow>\n           x = y;\n        s \\<in> add_set f {a} n; x = s \\<^sub>f+ a;\n        sa \\<in> add_set f {a} n; y = sa \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (drule_tac x = s in spec,\n        drule_tac a = sa in forall_spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x y s sa.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        s \\<in> add_set f {a} n; x = s \\<^sub>f+ a;\n        sa \\<in> add_set f {a} n; y = sa \\<^sub>f+ a; s = sa\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_set_single_nonempty1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \\<exists>x. x\\<in>add_set f {a} n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} n", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} 0\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        \\<exists>x. x \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        \\<exists>x. x \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc n)", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        x \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        x \\<in> add_set f {a} n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            \\<exists>s\\<in>add_set f {a} n.\n                               x = s \\<^sub>f+ a", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_set_single_nonempty2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \\<exists>x. x\\<in>add_set f {\\<^sub>i- a} n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {\\<^sub>i- a} n", "apply (simp add:aug_pm_aug_pm_minus,\n       frule ipp_cond1_minus[of \"a\" \"i\"],\n       frule ipp_cond2_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+,\n       frule inv_ipp_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+,\n       frule zeroA_minus[of \"a\" \"i\" \"z\" \"f\" \"z\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n     assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     zeroA z i f {a} z; ipp_cond1 {\\<^sub>i- a} i;\n     ipp_cond2 z {\\<^sub>i- a} i f; inv_ipp z i f {\\<^sub>i- a};\n     zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {\\<^sub>i- a} n", "apply (simp add:add_set_single_nonempty1 [of \"f\" \"z\" \"i\" \"\\<^sub>i- a\" \"n\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_set_single1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; x \\<in> add_set f {a} n; y \\<in> add_set f {a} n\\<rbrakk> \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; x \\<in> add_set f {a} n;\n     y \\<in> add_set f {a} n\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (frule add_set_single1Tr [of f z i a n], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; x \\<in> add_set f {a} n; y \\<in> add_set f {a} n;\n     \\<forall>x y.\n        x \\<in> add_set f {a} n \\<and>\n        y \\<in> add_set f {a} n \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_set_single2:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n; y \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk> \\<Longrightarrow>  \n      x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n;\n     y \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (simp add:aug_pm_aug_pm_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n     assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n;\n     y \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (frule ipp_cond1_minus[of \"a\" \"i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n     assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n;\n     y \\<in> add_set f {\\<^sub>i- a} n; ipp_cond1 {\\<^sub>i- a} i\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (frule ipp_cond2_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n     assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n;\n     y \\<in> add_set f {\\<^sub>i- a} n; ipp_cond1 {\\<^sub>i- a} i;\n     ipp_cond2 z {\\<^sub>i- a} i f\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (frule inv_ipp_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n     assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n;\n     y \\<in> add_set f {\\<^sub>i- a} n; ipp_cond1 {\\<^sub>i- a} i;\n     ipp_cond2 z {\\<^sub>i- a} i f; inv_ipp z i f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (frule zeroA_minus[of \"a\" \"i\" \"z\" \"f\" \"z\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {\\<^sub>i- a});\n     assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     zeroA z i f {a} z; x \\<in> add_set f {\\<^sub>i- a} n;\n     y \\<in> add_set f {\\<^sub>i- a} n; ipp_cond1 {\\<^sub>i- a} i;\n     ipp_cond2 z {\\<^sub>i- a} i f; inv_ipp z i f {\\<^sub>i- a};\n     zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (rule add_set_single1 [of \"f\" \"z\" \"i\" \"\\<^sub>i- a\" _ \"n\" _], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr4:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z \\<rbrakk> \\<Longrightarrow> \n      \\<forall>s t. s \\<in> add_set f {a} n \\<and> t \\<in> add_set f {\\<^sub>i- a} n\\<longrightarrow> s \\<^sub>f+ t = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         s \\<in> add_set f {a} n \\<and>\n                         t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n                         s \\<^sub>f+ t = z", "apply (cut_tac a_in_aug_pm_set[of a \"{a}\" z i], simp,\n        cut_tac addition_inc_add0[of \"aug_pm_set z i {a}\" f],\n        frule subsetD[of \"aug_pm_set z i {a}\"\n                     \"addition_set f (aug_pm_set z i {a})\" a], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         s \\<in> add_set f {a} n \\<and>\n                         t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n                         s \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (induct_tac n)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         s \\<in> add_set f {a} 0 \\<and>\n                         t \\<in> add_set f {\\<^sub>i- a} 0 \\<longrightarrow>\n                         s \\<^sub>f+ t = z\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            s \\<in> add_set f {a} (Suc n) \\<and>\n                            t \\<in> add_set f {\\<^sub>i- a}\n                                     (Suc n) \\<longrightarrow>\n                            s \\<^sub>f+ t = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            s \\<in> add_set f {a} (Suc n) \\<and>\n                            t \\<in> add_set f {\\<^sub>i- a}\n                                     (Suc n) \\<longrightarrow>\n                            s \\<^sub>f+ t = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule inv_aug_addition [of \"f\" \"z\" \"i\" \"{a}\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<forall>a\\<in>addition_set f (aug_pm_set z i {a}).\n        \\<^sub>i- a \\<^sub>f+ a = z\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            s \\<in> add_set f {a} (Suc n) \\<and>\n                            t \\<in> add_set f {\\<^sub>i- a}\n                                     (Suc n) \\<longrightarrow>\n                            s \\<^sub>f+ t = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_ipp_closed [of \"f\" \"z\" \"i\" \"{a}\" \"a\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<forall>a\\<in>addition_set f (aug_pm_set z i {a}).\n        \\<^sub>i- a \\<^sub>f+ a = z;\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            s \\<in> add_set f {a} (Suc n) \\<and>\n                            t \\<in> add_set f {\\<^sub>i- a}\n                                     (Suc n) \\<longrightarrow>\n                            s \\<^sub>f+ t = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule fag_single_additionTr2 [of \"f\" \"z\" \"i\" \"a\" \"a\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<forall>a\\<in>addition_set f (aug_pm_set z i {a}).\n        \\<^sub>i- a \\<^sub>f+ a = z;\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> a \\<in> add_set f {a} 0\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     \\<forall>a\\<in>addition_set f (aug_pm_set z i {a}).\n        \\<^sub>i- a \\<^sub>f+ a = z;\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n     a \\<^sub>f+ \\<^sub>i- a = z\\<rbrakk>\n    \\<Longrightarrow> a \\<^sub>f+ \\<^sub>i- a = z\n 3. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            s \\<in> add_set f {a} (Suc n) \\<and>\n                            t \\<in> add_set f {\\<^sub>i- a}\n                                     (Suc n) \\<longrightarrow>\n                            s \\<^sub>f+ t = z\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            s \\<in> add_set f {a} (Suc n) \\<and>\n                            t \\<in> add_set f {\\<^sub>i- a}\n                                     (Suc n) \\<longrightarrow>\n                            s \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        s \\<in> add_set f {a} (Suc n);\n        t \\<in> add_set f {\\<^sub>i- a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        \\<exists>sa\\<in>add_set f {a} n. s = sa \\<^sub>f+ a;\n        \\<exists>s\\<in>add_set f {\\<^sub>i- a} n.\n           t = s \\<^sub>f+ \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (erule bexE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n;\n        t = sb \\<^sub>f+ \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule aug_ipp_closed [of \"f\" \"z\" \"i\" \"{a}\" \"a\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ t = z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>s t.\n           s \\<in> add_set f {a} n \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (drule_tac x = sa in spec, \n        drule_tac a = sb in forall_spec, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (cut_tac n = n in addition_inc_add[of f \"{a}\"],\n        cut_tac addition_set_mono[of \"{a}\" \"aug_pm_set z i {a}\" f],\n        frule_tac c = sa and A = \"add_set f {a} n\" in subsetD[of _\n          \"addition_set f {a}\"], assumption+,\n        frule_tac c = sa in subsetD[of \"addition_set f {a}\"\n               \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (cut_tac n = n in addition_inc_add[of f \"{\\<^sub>i- a}\"],\n        cut_tac addition_set_mono[of \"{\\<^sub>i- a}\" \"aug_pm_set z i {\\<^sub>i- a}\" f],\n        frule_tac c = sb and A = \"add_set f {\\<^sub>i- a} n\" in subsetD[of _\n          \"addition_set f {\\<^sub>i- a}\"], assumption+,\n        frule_tac c = sb in subsetD[of \"addition_set f {\\<^sub>i- a}\"\n               \"addition_set f (aug_pm_set z i {\\<^sub>i- a})\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {\\<^sub>i- a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {\\<^sub>i- a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:aug_pm_aug_pm_minus[THEN sym])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sb in aug_bpp_closed [of z i \"{a}\" f _ \" \\<^sub>i- a\"],\n         assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sa and y = a and z = \"sb \\<^sub>f+ \\<^sub>i- a\" in\n                 addition_assoc [of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sa \\<^sub>f+ (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a))\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ a \\<^sub>f+\n                            (sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sa \\<^sub>f+ (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a))\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"sa \\<^sub>f+ a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) = sa \\<^sub>f+ (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a))\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x1 = a and y1 = sb and z1 = \"\\<^sub>i- a\" in \n        addition_assoc [THEN sym, of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        a \\<^sub>f+ sb \\<^sub>f+ \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        a \\<^sub>f+ sb \\<^sub>f+ \\<^sub>i- a\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (a \\<^sub>f+ sb \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac y = sb in aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"a\"], \n        assumption+, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a;\n        a \\<^sub>f+ sb = sb \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sb and y = a and z = \"\\<^sub>i- a\" in\n                 addition_assoc [of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a;\n        a \\<^sub>f+ sb = sb \\<^sub>f+ a;\n        sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a =\n        sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a);\n        a \\<^sub>f+ sb = sb \\<^sub>f+ a;\n        sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a =\n        sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) = sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ sb = sb \\<^sub>f+ a;\n        sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a =\n        sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"a \\<^sub>f+ sb = sb \\<^sub>f+ a\",\n        thin_tac \"sb \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a = sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)\",\n        thin_tac \"sb \\<^sub>f+ \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac y = \" \\<^sub>i- a\" in aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"a\"], \n            assumption+, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sa and y = a and z = \"sb \\<^sub>f+ \\<^sub>i- a\" in\n                 addition_assoc [of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> sb \\<^sub>f+ \\<^sub>i- a\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a;\n        sa \\<^sub>f+ a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sa \\<^sub>f+ (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a))\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)) =\n                         z\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 4. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sb in aug_bpp_closed [of \"z\" \"i\" \"{a}\" \"f\" _ \" \\<^sub>i- a\"],\n  assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a;\n        sa \\<^sub>f+ a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) =\n        sa \\<^sub>f+ (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a))\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"sa \\<^sub>f+ a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a) = sa \\<^sub>f+ (a \\<^sub>f+ (sb \\<^sub>f+ \\<^sub>i- a))\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (thin_tac \"a \\<^sub>f+ \\<^sub>i- a = \\<^sub>i- a \\<^sub>f+ a\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule inv_aug_addition [of \"f\" \"z\" \"i\" \"{a}\" ], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>a\\<in>addition_set f (aug_pm_set z i {a}).\n           \\<^sub>i- a \\<^sub>f+ a = z\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+\n                            (sb \\<^sub>f+ (\\<^sub>i- a \\<^sub>f+ a)) =\n                         z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (drule_tac x = a in bspec, assumption, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<^sub>f+ a = z\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ (sb \\<^sub>f+ z) = z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sb and y = z in aug_commute [of \"f\" \"z\" \"i\" \"{a}\"], \n             assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<^sub>f+ a = z\\<rbrakk>\n       \\<Longrightarrow> z \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<^sub>f+ a = z;\n        sb \\<^sub>f+ z = z \\<^sub>f+ sb\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ (sb \\<^sub>f+ z) = z\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 4. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:addition_set_inc_z)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<^sub>f+ a = z;\n        sb \\<^sub>f+ z = z \\<^sub>f+ sb\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ (sb \\<^sub>f+ z) = z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (frule_tac x = sb and y = z in aug_commute [of \"f\" \"z\" \"i\" \"{a}\"], \n       assumption+, simp add:addition_set_inc_z, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n \\<subseteq> addition_set f {\\<^sub>i- a};\n        addition_set f {\\<^sub>i- a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sb \\<in> addition_set f {\\<^sub>i- a};\n        sb \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<^sub>f+ a = z;\n        sb \\<^sub>f+ z = z \\<^sub>f+ sb\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ (z \\<^sub>f+ sb) = z\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 3. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z; add_set f {a} n \\<subseteq> addition_set f {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        sa \\<in> addition_set f {a};\n        sa \\<in> addition_set f (aug_pm_set z i {a});\n        add_set f {\\<^sub>i- a} n\n        \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a}\n                         \\<subseteq> aug_pm_set z i {\\<^sub>i- a}\n 2. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (rule subsetI, simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t sa sb.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<in> add_set f {a} n; s = sa \\<^sub>f+ a;\n        sb \\<in> add_set f {\\<^sub>i- a} n; t = sb \\<^sub>f+ \\<^sub>i- a;\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        sa \\<^sub>f+ sb = z;\n        add_set f {a} n \\<subseteq> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply (simp add:aug_pm_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr4_1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z;s \\<in> add_set f {a} n; t \\<in> add_set f {\\<^sub>i- a} n \\<rbrakk> \\<Longrightarrow> \n      s \\<^sub>f+ t = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; s \\<in> add_set f {a} n;\n     t \\<in> add_set f {\\<^sub>i- a} n\\<rbrakk>\n    \\<Longrightarrow> s \\<^sub>f+ t = z", "apply (frule fag_single_additionTr4[of \"f\" \"z\" \"i\" \"a\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; s \\<in> add_set f {a} n;\n     t \\<in> add_set f {\\<^sub>i- a} n;\n     \\<forall>s t.\n        s \\<in> add_set f {a} n \\<and>\n        t \\<in> add_set f {\\<^sub>i- a} n \\<longrightarrow>\n        s \\<^sub>f+ t = z\\<rbrakk>\n    \\<Longrightarrow> s \\<^sub>f+ t = z", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr5:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n      ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n      commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \n      \\<forall>m. m < Suc n \\<longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ \n         (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc n.\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))", "apply (cut_tac a_in_aug_pm_set[of a \"{a}\" z i],\n        cut_tac addition_inc_add0[of \"aug_pm_set z i {a}\" f],\n        frule subsetD[of \"aug_pm_set z i {a}\"\n                     \"addition_set f (aug_pm_set z i {a})\" a], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc n.\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc n.\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc n.\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))", "apply (cut_tac aug_addition_inc_z[of z f i \"{a}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc n.\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))", "apply (frule aug_ipp_closed [of \"f\" \"z\" \"i\" \"{a}\" \"a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc n.\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     a \\<in> aug_pm_set z i {a};\n     aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n     a \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<forall>m<Suc 0.\n                         (THE x. x \\<in> add_set f {a} (Suc 0)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (0 - m))\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (rule allI, rule impI, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ a \\<^sub>f+ \\<^sub>i- a = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (simp add: addition_assoc [of \"aug_pm_set z i {a}\" \"f\" \"a\" \"a\" \"\\<^sub>i- a\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a) = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (frule fag_single_additionTr2 [of \"f\" \"z\" \"i\" \"a\" \"a\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> add_set f {a} 0\n 2. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); m = 0;\n        a \\<^sub>f+ \\<^sub>i- a = z\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a) = a\n 3. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); m = 0;\n        a \\<^sub>f+ \\<^sub>i- a = z\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ (a \\<^sub>f+ \\<^sub>i- a) = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); m = 0;\n        a \\<^sub>f+ \\<^sub>i- a = z\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ z = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (thin_tac \"a \\<^sub>f+ \\<^sub>i- a = z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ z = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (simp add:aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"a\" \"z\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> z \\<^sub>f+ a = a\n 2. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m<Suc (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                               \\<^sub>f+\n                               (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                            (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc (Suc n))) = \n                (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac m = m and n = \"Suc (Suc n)\" in Suc_leI,\n        thin_tac \"Suc m \\<le> Suc (Suc n)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (case_tac \"Suc m = Suc (Suc n)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m = Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x = m and y = \"Suc n\" in Suc_inject,\n         thin_tac \"Suc m = Suc (Suc n)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m = Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rotate_tac -1, frule sym, thin_tac \"m = Suc n\",\n         thin_tac \"\\<forall>m. m < Suc n \\<longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n  (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\",\n         thin_tac \"(THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n             (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} m) \\<in> \n                             addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> \n                             addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x = \"THE x. x \\<in> add_set f {a} m\" and y = a and \n                  z = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" in \n                  addition_assoc [of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (a \\<^sub>f+\n                                (THE x.\n                                    x \\<in> add_set f {\\<^sub>i- a} m)) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} m) \\<^sub>f+ a \\<^sub>f+ \n       (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = \n       (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ (a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m))\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (a \\<^sub>f+\n                                (THE x.\n                                    x \\<in> add_set f {\\<^sub>i- a} m)) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x = a and y = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" in \n        aug_commute [of \"f\" \"z\" \"i\" \"{a}\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (a \\<^sub>f+\n                                (THE x.\n                                    x \\<in> add_set f {\\<^sub>i- a} m)) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            ((THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                                \\<^sub>f+ a) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = \n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            ((THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                                \\<^sub>f+ a) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x1 = \"THE x. x \\<in> add_set f {a} m\" and \n         y1 = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" and z1 = a in \n        addition_assoc[THEN sym, of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            ((THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                                \\<^sub>f+ a) =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac n = m in fag_single_additionTr4 [of \"f\" \"z\" \"i\" \"a\"], \n        assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} m) \\<^sub>f+ \n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = z\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         z\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "prefer 2"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         z\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} m)\n             \\<in> addition_set f (aug_pm_set z i {a})\",\n        thin_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n             \\<in> addition_set f (aug_pm_set z i {a})\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} m) \\<^sub>f+ \n        ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) = \n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m)  \\<^sub>f+ a\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         z\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         z\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         z\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"\\<forall>s t. s \\<in> add_set f {a} m \\<and> t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow> \n        s \\<^sub>f+ t = z\",\n         thin_tac \"(THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} m\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        x \\<in> add_set f {a} m; y \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        x \\<in> add_set f {a} m; y \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        \\<forall>s t.\n           s \\<in> add_set f {a} m \\<and>\n           t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n           s \\<^sub>f+ t = z;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"\\<forall>s t. s \\<in> add_set f {a} m \\<and> t \\<in> add_set f {\\<^sub>i- a} m \\<longrightarrow>\n                   s \\<^sub>f+ t = z\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                            \\<^sub>f+ a =\n                         a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        z \\<^sub>f+ a;\n        (THE x. x \\<in> add_set f {a} m) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        z\\<rbrakk>\n       \\<Longrightarrow> z \\<^sub>f+ a = a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"{\\<^sub>i- a} \\<subseteq> (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac n = m in add_set_mono[of \"{\\<^sub>i- a}\" \"aug_pm_set z i {a}\" \"f\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac A = \"add_set f {\\<^sub>i- a} m\" and \n        B = \"add_set f (aug_pm_set z i {a}) m\" and \n        c = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" in subsetD, assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"add_set f (aug_pm_set z i {a}) m \\<subseteq> \n                                addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m;\n        add_set f (aug_pm_set z i {a}) m\n        \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> add_set f (aug_pm_set z i {a}) m\n                         \\<subseteq> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:subsetD)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> add_set f (aug_pm_set z i {a}) m\n                         \\<subseteq> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:addition_inc_add)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule subsetI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m x.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        x \\<in> {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> aug_pm_set z i {a}\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} m)\n             \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"{a} \\<subseteq> (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        {a} \\<subseteq> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac n = m in add_set_mono[of \"{a}\" \"aug_pm_set z i {a}\" \"f\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac A = \"add_set f {a} m\" and \n        B = \"add_set f (aug_pm_set z i {a}) m\" and \n        c = \"THE x. x \\<in> add_set f {a} m\" in subsetD, assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} m \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"add_set f (aug_pm_set z i {a}) m \\<subseteq> \n                                addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} m \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m;\n        add_set f (aug_pm_set z i {a}) m\n        \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} m \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> add_set f (aug_pm_set z i {a}) m\n                         \\<subseteq> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:subsetD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} m \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {a} m)\n        \\<in> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> add_set f (aug_pm_set z i {a}) m\n                         \\<subseteq> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:addition_inc_add)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule subsetI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m x.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        (THE x. x \\<in> add_set f {a} m) \\<in> add_set f {a} m;\n        x \\<in> {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> aug_pm_set z i {a}\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} m)\n                         \\<in> add_set f {a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n = m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} m\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        x \\<in> add_set f {a} m; y \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a}); Suc n = m;\n        x \\<in> add_set f {a} m; y \\<in> add_set f {a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        Suc m \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n       (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"\\<forall>m. m < Suc n \\<longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =  (THE x. x \\<in> add_set f {a} (n - m))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a;\n        m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n             (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> add_set f {a} (Suc n)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> add_set f {a} (Suc n)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (Suc n)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc n)\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        x \\<in> add_set f {a} (Suc n);\n        y \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        x \\<in> add_set f {a} (Suc n);\n        y \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc add:add_set_single1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x = \"THE x. x \\<in> add_set f {a} (Suc n)\" and y = a and z = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" in addition_assoc [of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n                            \\<^sub>f+\n                            (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (a \\<^sub>f+\n                                (THE x.\n                                    x \\<in> add_set f {\\<^sub>i- a} m)) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x = a and y = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" in aug_commute [of \"f\" \"z\" \"i\" \"{a}\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m));\n        a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            (a \\<^sub>f+\n                                (THE x.\n                                    x \\<in> add_set f {\\<^sub>i- a} m)) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a);\n        a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            ((THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                                \\<^sub>f+ a) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac x1 = \"THE x. x \\<in> add_set f {a} (Suc n)\" and y1 = \"THE x. x \\<in> add_set f {\\<^sub>i- a} m\" and z1 = a in addition_assoc[THEN sym, of \"aug_pm_set z i {a}\" \"f\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a);\n        a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n           \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                            ((THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                                \\<^sub>f+ a) =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+ a;\n        a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) =\n        (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n       (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\",\n        thin_tac \" (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a \\<^sub>f+\n  (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+ a\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n  ((THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a) = (THE x. x \\<in> \n                                             add_set f {a} (n - m)) \\<^sub>f+ a\",\n       thin_tac \"a \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                       (THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<^sub>f+ a\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"Suc n - m = Suc (n - m)\", simp del:add_set_Suc)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        Suc n - m = Suc (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"Suc n - m = Suc (n - m)\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc (n - m))) \\<in> add_set f {a}\n (Suc (n - m))\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"\\<exists>s\\<in>add_set f {a} (n - m). (THE x. x \\<in>add_set f {a} (Suc (n - m))) = s \\<^sub>f+ a\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        \\<exists>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f {a} (n - m).\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n                            s \\<^sub>f+ a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "prefer 2"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f {a} (n - m).\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n                            s \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        \\<exists>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        \\<exists>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"\\<forall>s\\<in>add_set f {a} (n - m). (THE x. x\\<in>add_set f {a} (Suc (n - m))) = s \\<^sub>f+ a \\<longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+ a =\n             (THE x. x \\<in> add_set f {a} (Suc (n - m)))\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        \\<exists>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) = s \\<^sub>f+ a;\n        \\<forall>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n           s \\<^sub>f+ a \\<longrightarrow>\n           (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+ a =\n           (THE x. x \\<in> add_set f {a} (Suc (n - m)))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        \\<exists>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s\\<in>add_set f {a} (n - m).\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n                            s \\<^sub>f+ a \\<longrightarrow>\n                            (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                               a =\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply blast"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        \\<exists>s\\<in>add_set f {a} (n - m).\n           (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s\\<in>add_set f {a} (n - m).\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n                            s \\<^sub>f+ a \\<longrightarrow>\n                            (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                               a =\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"\\<exists>s\\<in>add_set f {a} (n - m).\n                (THE x. x \\<in> add_set f {a} (Suc (n - m))) = s \\<^sub>f+ a\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s\\<in>add_set f {a} (n - m).\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n                            s \\<^sub>f+ a \\<longrightarrow>\n                            (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                               a =\n                            (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ballI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n                         s \\<^sub>f+ a \\<longrightarrow>\n                         (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule impI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n        \\<in> add_set f {a} (Suc (n - m));\n        s \\<in> add_set f {a} (n - m);\n        (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n        s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<^sub>f+ a \\<in> add_set f {a} (Suc (n - m));\n        s \\<in> add_set f {a} (n - m);\n        (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n        s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         s \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"s \\<^sub>f+ a \\<in> add_set f {a} (Suc (n - m))\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m);\n        (THE x. x \\<in> add_set f {a} (Suc (n - m))) =\n        s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         s \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (Suc (n - m))) = s \\<^sub>f+ a\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         s \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (n - m)) = s \")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m);\n        (THE x. x \\<in> add_set f {a} (n - m)) = s\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) \\<^sub>f+\n                            a =\n                         s \\<^sub>f+ a\n 2. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) = s\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) = s\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (n - m)) \\<in> \n                                           add_set f {a} (n - m)\")"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m);\n        (THE x. x \\<in> add_set f {a} (n - m))\n        \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m)) = s\n 2. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m))\n                         \\<in> add_set f {a} (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (n - m))\n                         \\<in> add_set f {a} (n - m)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (n - m)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (n - m)\n 2. \\<And>n m s x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m); x \\<in> add_set f {a} (n - m);\n        y \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 8. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m s x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a});\n        s \\<in> add_set f {a} (n - m); x \\<in> add_set f {a} (n - m);\n        y \\<in> add_set f {a} (n - m)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> \n                          addition_set f (aug_pm_set z i {a})\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n)\",\n        thin_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n))\n             \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (n - m)))\n                         \\<in> add_set f {a} (Suc (n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (Suc (n - m))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc (n - m))\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        x \\<in> add_set f {a} (Suc (n - m));\n        y \\<in> add_set f {a} (Suc (n - m))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 7. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        x \\<in> add_set f {a} (Suc (n - m));\n        y \\<in> add_set f {a} (Suc (n - m))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc add:add_set_single1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> Suc n - m = Suc (n - m)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:Suc_diff_le)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply(thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n       (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n)\",\n        thin_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n))\n             \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"{\\<^sub>i- a} \\<subseteq> (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac A = \"{\\<^sub>i- a}\" and B = \"(aug_pm_set z i {a})\" and \n           n = m and f = f in add_set_mono)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (cut_tac n = m in addition_inc_add[of f \"aug_pm_set z i {a}\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m;\n        add_set f (aug_pm_set z i {a}) m\n        \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:subsetD)+"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); m < Suc (Suc n);\n        m \\<noteq> Suc n; \\<^sub>i- a \\<in> aug_pm_set z i {a};\n        add_set f {\\<^sub>i- a} m\n        \\<subseteq> add_set f (aug_pm_set z i {a}) m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"add_set f {\\<^sub>i- a} m \\<subseteq> add_set f (aug_pm_set z i {a}) m\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); m < Suc (Suc n);\n        m \\<noteq> Suc n; \\<^sub>i- a \\<in> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI', rule ex_ex1I)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); m < Suc (Suc n);\n        m \\<noteq> Suc n; \\<^sub>i- a \\<in> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); m < Suc (Suc n);\n        m \\<noteq> Suc n; \\<^sub>i- a \\<in> aug_pm_set z i {a};\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 6. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a}); m < Suc (Suc n);\n        m \\<noteq> Suc n; \\<^sub>i- a \\<in> aug_pm_set z i {a};\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 5. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule subsetI, simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n        \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n  (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\",\n        thin_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} m) \\<in> add_set f {\\<^sub>i- a} m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"{a} \\<subseteq> (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        {a} \\<subseteq> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (frule_tac A = \"{a}\" and B = \"aug_pm_set z i {a}\" and \n                                 n = \"Suc n\" and f = f in add_set_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} (Suc n)\n        \\<subseteq> add_set f (aug_pm_set z i {a}) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (cut_tac n = \"Suc n\" in addition_inc_add[of f \"aug_pm_set z i {a}\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n);\n        {a} \\<subseteq> aug_pm_set z i {a};\n        add_set f {a} (Suc n)\n        \\<subseteq> add_set f (aug_pm_set z i {a}) (Suc n);\n        add_set f (aug_pm_set z i {a}) (Suc n)\n        \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 4. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp del:add_set_Suc add:subsetD)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m));\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n       (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\",\n        thin_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<in> add_set f {a} (Suc n)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} m)\n                         \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule theI')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {\\<^sub>i- a} m\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); m \\<noteq> Suc n;\n        x \\<in> add_set f {\\<^sub>i- a} m;\n        y \\<in> add_set f {\\<^sub>i- a} m\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        \\<forall>m<Suc n.\n           (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n              (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n           (THE x. x \\<in> add_set f {a} (n - m));\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (thin_tac \"\\<forall>m. m < Suc n \\<longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = (THE x. x \\<in> add_set f {a} (n - m))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc (Suc n))) \\<in> \n                                           add_set f {a} (Suc (Suc n))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (subgoal_tac \"\\<exists>s\\<in>add_set f {a} (Suc n). \n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) = s \\<^sub>f+ a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n));\n        \\<exists>s\\<in>add_set f {a} (Suc n).\n           (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f {a} (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                            s \\<^sub>f+ a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>add_set f {a} (Suc n).\n                            (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                            s \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n));\n        \\<exists>s\\<in>add_set f {a} (Suc n).\n           (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n));\n        \\<exists>s\\<in>add_set f {a} (Suc n).\n           (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n           s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (erule bexE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n        \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc (Suc n))) =\n        s \\<^sub>f+ a\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ a =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (Suc (Suc n))) = s \\<^sub>f+ a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ a =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (subgoal_tac \"s = (THE x. x \\<in> add_set f {a} (Suc n))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n);\n        s = (THE x. x \\<in> add_set f {a} (Suc n))\\<rbrakk>\n       \\<Longrightarrow> s \\<^sub>f+ a =\n                         (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ a\n 2. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> s = (THE x. x \\<in> add_set f {a} (Suc n))\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> s = (THE x. x \\<in> add_set f {a} (Suc n))\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (Suc n)) \\<in> \n                                      add_set f {a} (Suc n)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n);\n        (THE x. x \\<in> add_set f {a} (Suc n))\n        \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> s = (THE x. x \\<in> add_set f {a} (Suc n))\n 2. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> add_set f {a} (Suc n)\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (simp del:add_set_Suc add:add_set_single1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n))\n                         \\<in> add_set f {a} (Suc n)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (rule theI')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (Suc n)\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n m s.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc n)\n 2. \\<And>n m s x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n); x \\<in> add_set f {a} (Suc n);\n        y \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (simp del:add_set_Suc add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); s \\<^sub>f+ a \\<in> add_set f {a} (Suc (Suc n));\n        s \\<in> add_set f {a} (Suc n); x \\<in> add_set f {a} (Suc n);\n        y \\<in> add_set f {a} (Suc n)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (simp del:add_set_Suc add:add_set_single1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc (Suc n)))\n                         \\<in> add_set f {a} (Suc (Suc n))", "apply (rule theI')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (Suc (Suc n))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (Suc (Suc n))\n 2. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); x \\<in> add_set f {a} (Suc (Suc n));\n        y \\<in> add_set f {a} (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp del:add_set_Suc add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        a \\<in> aug_pm_set z i {a};\n        aug_pm_set z i {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        a \\<in> addition_set f (aug_pm_set z i {a});\n        z \\<in> addition_set f (aug_pm_set z i {a});\n        \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i {a});\n        m < Suc (Suc n); x \\<in> add_set f {a} (Suc (Suc n));\n        y \\<in> add_set f {a} (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp del:add_set_Suc add:add_set_single1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr5_1:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n      ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n      commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < Suc n\\<rbrakk> \\<Longrightarrow> \n (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+ (THE x. x \\<in> add_set f {\\<^sub>i- a} m) = \n                            (THE x. x \\<in> add_set f {a} (n - m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m < Suc n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                      (THE x. x \\<in> add_set f {a} (n - m))", "apply (frule_tac n = n in fag_single_additionTr5 [of \"z\" \"i\" \"a\" \"f\"], \n         assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < Suc n;\n     \\<forall>m<Suc n.\n        (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n           (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n        (THE x. x \\<in> add_set f {a} (n - m))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (Suc n)) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {\\<^sub>i- a} m) =\n                      (THE x. x \\<in> add_set f {a} (n - m))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_additionTr5_2:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n      ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n      commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < Suc m\\<rbrakk> \\<Longrightarrow> \n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m)) \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) = \n           (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n < Suc m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))", "apply (simp del:add_set_Suc add:aug_pm_aug_pm_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))", "apply (frule ipp_cond1_minus[of \"a\" \"i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))", "apply (frule ipp_cond2_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i;\n     ipp_cond2 z {\\<^sub>i- a} i f\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))", "apply (frule inv_ipp_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))", "apply (frule zeroA_minus[of \"a\" \"i\" \"z\" \"f\" \"z\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))", "apply (subgoal_tac \"\\<^sub>i- (\\<^sub>i- a) = a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z;\n     \\<^sub>i- (\\<^sub>i- a) = a\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- (\\<^sub>i- a) = a", "apply (frule fag_single_additionTr5_1 [of z i \"\\<^sub>i- a\" f n m], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z;\n     \\<^sub>i- (\\<^sub>i- a) = a;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m)) \\<^sub>f+\n        (THE x. x \\<in> add_set f {\\<^sub>i- (\\<^sub>i- a)} n) =\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (Suc m))\n                         \\<^sub>f+ (THE x. x \\<in> add_set f {a} n) =\n                      (THE x. x \\<in> add_set f {\\<^sub>i- a} (m - n))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- (\\<^sub>i- a) = a", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z;\n     n < Suc m; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- (\\<^sub>i- a) = a", "apply (simp add:ipp_cond1_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  free_gen_condition :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a, 'a, 'a] \\<Rightarrow> bool\" where\n  \"free_gen_condition f i a z \\<longleftrightarrow> (\\<forall>n. z \\<notin> add_set f {a} n)\""], ["", "definition\n  fg_elem_single :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a, 'a, 'a] \\<Rightarrow> int \\<Rightarrow> 'a\" where\n  \"fg_elem_single f i a z n = (if 0 = n then z else \n      (if 0 < n then (THE x. x \\<in> (add_set f {a} (nat (n - 1)))) \n        else (THE x. x \\<in> (add_set f {\\<^sub>i- a} (nat (- n - 1))))))\""], ["", "abbreviation\n  FGELEMSNGLE  (\"(5_\\<Odot>_\\<^bsub>_,_,_\\<^esub>)\" [99,98,98,98,98]99) where\n  \"n\\<Odot>a\\<^bsub>f,i,z\\<^esub> == fg_elem_single f i a z n\""], ["", "lemma  single_addition_pm_mem:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; \n       ipp_cond1 {a} i; ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n       commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> \n      (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in> addition_set f (aug_pm_set z i {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n = 0\\<rbrakk>\n    \\<Longrightarrow> z \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:aug_addition_inc_z)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (frule_tac non_zero_int [of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (case_tac \"0 < n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<in> \n                                           add_set f {a} (nat (n - 1))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (subgoal_tac \"add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a}\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a}\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {a} (nat (n - 1))\n                      \\<subseteq> addition_set f {a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (subgoal_tac \"addition_set f {a} \n                                \\<subseteq> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a};\n     addition_set f {a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a}\\<rbrakk>\n    \\<Longrightarrow> addition_set f {a}\n                      \\<subseteq> addition_set f (aug_pm_set z i {a})\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {a} (nat (n - 1))\n                      \\<subseteq> addition_set f {a}\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:subsetD)+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a}\\<rbrakk>\n    \\<Longrightarrow> addition_set f {a}\n                      \\<subseteq> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {a} (nat (n - 1))\n                      \\<subseteq> addition_set f {a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (rule addition_set_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a}\\<rbrakk>\n    \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {a} (nat (n - 1))\n                      \\<subseteq> addition_set f {a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (rule subsetI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n        \\<in> add_set f {a} (nat (n - 1));\n        add_set f {a} (nat (n - 1)) \\<subseteq> addition_set f {a};\n        x \\<in> {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> aug_pm_set z i {a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {a} (nat (n - 1))\n                      \\<subseteq> addition_set f {a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {a} (nat (n - 1))\n                      \\<subseteq> addition_set f {a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:addition_inc_add)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (rule theI')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (n - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (n - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        x \\<in> add_set f {a} (nat (n - 1));\n        y \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        x \\<in> add_set f {a} (nat (n - 1));\n        y \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n \\<noteq> 0;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (thin_tac \"n \\<noteq> 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     0 < n \\<or> n < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))) \\<in> \n                                       add_set f {\\<^sub>i- a} (nat (- n - 1))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (subgoal_tac \"add_set f {\\<^sub>i- a} (nat (- n - 1)) \\<subseteq> \n                                       addition_set f {\\<^sub>i- a}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n     add_set f {\\<^sub>i- a} (nat (- n - 1))\n     \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {\\<^sub>i- a} (nat (- n - 1))\n                      \\<subseteq> addition_set f {\\<^sub>i- a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (subgoal_tac \"addition_set f {\\<^sub>i- a} \\<subseteq>  \n                         addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n     add_set f {\\<^sub>i- a} (nat (- n - 1))\n     \\<subseteq> addition_set f {\\<^sub>i- a};\n     addition_set f {\\<^sub>i- a}\n     \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n     add_set f {\\<^sub>i- a} (nat (- n - 1))\n     \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> addition_set f {\\<^sub>i- a}\n                      \\<subseteq> addition_set f (aug_pm_set z i {a})\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {\\<^sub>i- a} (nat (- n - 1))\n                      \\<subseteq> addition_set f {\\<^sub>i- a}\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (simp add:subsetD)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n     add_set f {\\<^sub>i- a} (nat (- n - 1))\n     \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> addition_set f {\\<^sub>i- a}\n                      \\<subseteq> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {\\<^sub>i- a} (nat (- n - 1))\n                      \\<subseteq> addition_set f {\\<^sub>i- a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (rule addition_set_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n     add_set f {\\<^sub>i- a} (nat (- n - 1))\n     \\<subseteq> addition_set f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> {\\<^sub>i- a} \\<subseteq> aug_pm_set z i {a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {\\<^sub>i- a} (nat (- n - 1))\n                      \\<subseteq> addition_set f {\\<^sub>i- a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (rule subsetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n        \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n        add_set f {\\<^sub>i- a} (nat (- n - 1))\n        \\<subseteq> addition_set f {\\<^sub>i- a};\n        x \\<in> {\\<^sub>i- a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> aug_pm_set z i {a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {\\<^sub>i- a} (nat (- n - 1))\n                      \\<subseteq> addition_set f {\\<^sub>i- a}\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n    \\<Longrightarrow> add_set f {\\<^sub>i- a} (nat (- n - 1))\n                      \\<subseteq> addition_set f {\\<^sub>i- a}\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (simp add:addition_inc_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (rule theI')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n        x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n        x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma assoc_aug_assoc:\"assoc_bpp (aug_pm_set z i {a}) f \\<Longrightarrow> assoc_bpp {a} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. assoc_bpp (aug_pm_set z i {a}) f \\<Longrightarrow> assoc_bpp {a} f", "apply (simp add:assoc_bpp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n       \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n          \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n             aa \\<^sub>f+ b \\<^sub>f+ c =\n             aa \\<^sub>f+ (b \\<^sub>f+ c) \\<Longrightarrow>\n    \\<forall>aa\\<in>addition_set f {a}.\n       \\<forall>b\\<in>addition_set f {a}.\n          \\<forall>c\\<in>addition_set f {a}.\n             aa \\<^sub>f+ b \\<^sub>f+ c = aa \\<^sub>f+ (b \\<^sub>f+ c)", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c)", "apply (subgoal_tac \"{a} \\<subseteq> aug_pm_set z i {a}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a};\n        {a} \\<subseteq> aug_pm_set z i {a}\\<rbrakk>\n       \\<Longrightarrow> aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c)\n 2. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}", "apply (frule addition_set_mono[of \"{a}\" \"aug_pm_set z i {a}\" \"f\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}; {a} \\<subseteq> aug_pm_set z i {a};\n        addition_set f {a}\n        \\<subseteq> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c)\n 2. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}", "apply (frule_tac c = aa in subsetD[of \"addition_set f {a}\" \n                    \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}; {a} \\<subseteq> aug_pm_set z i {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        aa \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c)\n 2. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}", "apply (frule_tac c = b in subsetD[of \"addition_set f {a}\" \n                    \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}; {a} \\<subseteq> aug_pm_set z i {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        aa \\<in> addition_set f (aug_pm_set z i {a});\n        b \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c)\n 2. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}", "apply (frule_tac c = c in subsetD[of \"addition_set f {a}\" \n                    \"addition_set f (aug_pm_set z i {a})\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}; {a} \\<subseteq> aug_pm_set z i {a};\n        addition_set f {a} \\<subseteq> addition_set f (aug_pm_set z i {a});\n        aa \\<in> addition_set f (aug_pm_set z i {a});\n        b \\<in> addition_set f (aug_pm_set z i {a});\n        c \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n       \\<Longrightarrow> aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c)\n 2. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b c.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}\\<rbrakk>\n       \\<Longrightarrow> {a} \\<subseteq> aug_pm_set z i {a}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b c x.\n       \\<lbrakk>\\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n                   \\<forall>b\\<in>addition_set f (aug_pm_set z i {a}).\n                      \\<forall>c\\<in>addition_set f (aug_pm_set z i {a}).\n                         aa \\<^sub>f+ b \\<^sub>f+ c =\n                         aa \\<^sub>f+ (b \\<^sub>f+ c);\n        aa \\<in> addition_set f {a}; b \\<in> addition_set f {a};\n        c \\<in> addition_set f {a}; x \\<in> {a}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> aug_pm_set z i {a}", "apply (simp add:aug_pm_set_def minus_set_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma single_addition_posTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; 0 < (n::int); 0 < (m::int)\\<rbrakk> \\<Longrightarrow> \n  (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+ \n   (THE x. x \\<in> add_set f {a} (nat (m - 1))) = \n                              (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<in> \n                                        add_set f {a} (nat (n - 1))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (m - 1))) \n                                       \\<in> \n                                          add_set f {a} (nat (m - 1))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (n + m - 1))) \n                                     \\<in> add_set f {a} (nat (n + m - 1))\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (frule assoc_aug_assoc [of \"z\" \"i\" \"a\" \"f\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (frule_tac x = \"THE x. x \\<in> add_set f {a} (nat (n - 1))\" and \n       y = \"THE x. x \\<in> add_set f {a} (nat (m - 1))\" in \n       bpp_closed1 [of \"{a}\" \"f\" _ \"nat (n - 1)\" _ \"nat (m - 1)\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (subgoal_tac \"nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0);\n     nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp del:add_set_Suc)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     Suc (nat (n - 1) + nat (m - 1)) = nat (n + m - 1)\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n                      (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (nat (n - 1)))\n       \\<in> add_set f {a} (nat (n - 1))\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (nat (m - 1)))\n       \\<in> add_set f {a} (nat (m - 1))\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n                      \\<in> add_set f {a} (nat (n + m - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule theI')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (n + m - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (n + m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n        x \\<in> add_set f {a} (nat (n + m - 1));\n        y \\<in> add_set f {a} (nat (n + m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 5. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n        x \\<in> add_set f {a} (nat (n + m - 1));\n        y \\<in> add_set f {a} (nat (n + m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n                      \\<in> add_set f {a} (nat (m - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule theI')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (m - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n        (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n        \\<in> add_set f {a} (nat (n - 1));\n        x \\<in> add_set f {a} (nat (m - 1));\n        y \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 4. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n        (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n        \\<in> add_set f {a} (nat (n - 1));\n        x \\<in> add_set f {a} (nat (m - 1));\n        y \\<in> add_set f {a} (nat (m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)", "apply (rule theI')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (n - 1))\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (n - 1))\n 2. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n        x \\<in> add_set f {a} (nat (n - 1));\n        y \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n        assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; 0 < m;\n        x \\<in> add_set f {a} (nat (n - 1));\n        y \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (m - 1));\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\n     \\<in> add_set f {a} (nat (n + m - 1));\n     assoc_bpp {a} f;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1)))\n     \\<in> add_set f {a} (nat (n - 1) + nat (m - 1) + Suc 0)\\<rbrakk>\n    \\<Longrightarrow> nat (n - 1) + nat (m - 1) + Suc 0 = nat (n + m - 1)", "apply (rule int_nat_add, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma single_addition_pos:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; 0 < (n::int); 0 < (m::int)\\<rbrakk> \\<Longrightarrow> \n     (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule_tac single_addition_posTr [of f z i a n m], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; 0 < n; 0 < m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {a} (nat (m - 1))) =\n     (THE x. x \\<in> add_set f {a} (nat (n + m - 1)))\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma single_addition_neg:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)});\n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; (n::int) < 0; (m::int) < 0 \\<rbrakk> \\<Longrightarrow> \n           (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; n < 0;\n     m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply (simp del:add_set_Suc add:aug_pm_aug_pm_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply (frule ipp_cond1_minus[of \"a\" \"i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply (frule ipp_cond2_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i;\n     ipp_cond2 z {\\<^sub>i- a} i f\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply (frule inv_ipp_minus[of \"a\" \"i\" \"z\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply (frule zeroA_minus[of \"a\" \"i\" \"z\" \"f\" \"z\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply (frule single_addition_posTr [of f z i \"\\<^sub>i- a\" \"- n\" \"- m\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> 0 < - n\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {\\<^sub>i- a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {\\<^sub>i- a}); zeroA z i f {a} z; n < 0;\n     m < 0; ipp_cond1 {\\<^sub>i- a} i; ipp_cond2 z {\\<^sub>i- a} i f;\n     inv_ipp z i f {\\<^sub>i- a}; zeroA z i f {\\<^sub>i- a} z;\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1))) \\<^sub>f+\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))) =\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- n + - m - 1)))\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- n - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a}\n                                   (nat (- n - m - 1)))", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma single_addition_zero:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> 0\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> 0\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma s_a_p_1:\"\\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; \n                ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a}; \n                commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; \n                m < 0; 0 < n\\<rbrakk> \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"- m < n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst zminus_zadd_cancel [THEN sym, of \"n\" \"m\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n))\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"0 < -m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n))\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"0 < m + n\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m; 0 < m + n\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n))\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst single_addition_pos[THEN sym, of \"f\" \"z\" \"i\" \"a\" \"-m\" \"m + n\"],\n             assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m; 0 < m + n\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:zminus_zadd_cancel [of \"m\" \"m + n\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"-m\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"m + n\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"m\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst addition_assoc, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:aug_commute[of \"f\" \"z\" \"i\" \"{a}\" \"(m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\" \"m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst addition_assoc[THEN sym], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"((- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = z\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> z \\<^sub>f+ (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a});\n     \\<forall>x\\<in>addition_set f (aug_pm_set z i {a}). z \\<^sub>f+ x = x;\n     m < 0; 0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add.commute)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (m + n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule fag_single_additionTr4_1[of \"f\" \"z\" \"i\" \"a\"_ \"nat (- m - 1)\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n                      \\<in> add_set f {a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule theI')"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (- m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        0 < m + n;\n        (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        x \\<in> add_set f {a} (nat (- m - 1));\n        y \\<in> add_set f {a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 6. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        0 < m + n;\n        (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        x \\<in> add_set f {a} (nat (- m - 1));\n        y \\<in> add_set f {a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule theI')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < m + n;\n     (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        0 < m + n;\n        (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        0 < m + n;\n        (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {a} (nat (m + n - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n        \\<in> addition_set f (aug_pm_set z i {a});\n        x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n; 0 < - m\\<rbrakk>\n    \\<Longrightarrow> 0 < m + n\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     - m < n\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"n \\<le> - m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     \\<not> - m < n; n \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n \\<le> - m", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     \\<not> - m < n\\<rbrakk>\n    \\<Longrightarrow> n \\<le> - m\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     \\<not> - m < n; n \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     \\<not> - m < n; n \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (thin_tac \"\\<not> - m < n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule zle_imp_zless_or_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n \\<le> - m; n < - m \\<or> n = - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (thin_tac \"n \\<le> - m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"n = -m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n = - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (thin_tac \"n < - m \\<or> n = - m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      0\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"0 < -m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0; n = - m;\n     0 < - m\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      0\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (thin_tac \"n = - m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     0 < - m\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      0\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n                         \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (- m - 1))) =\n                      z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule fag_single_additionTr4_1 [of \"f\" \"z\" \"i\" \"a\" _ \"nat (-m - 1)\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (- m - 1)))\n                      \\<in> add_set f {a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule theI')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (- m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        x \\<in> add_set f {a} (nat (- m - 1));\n        y \\<in> add_set f {a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 5. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        x \\<in> add_set f {a} (nat (- m - 1));\n        y \\<in> add_set f {a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> (THE x.\n                          x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule theI')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n        x \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (- m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; m < 0;\n     n = - m\\<rbrakk>\n    \\<Longrightarrow> 0 < - m\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m \\<or> n = - m; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst zminus_zadd_cancel [THEN sym, of \"m\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n + (n + m))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst single_addition_neg[THEN sym, of \"f\" \"z\" \"i\" \"a\" \"-n\" \"n + m\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"-n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"n + m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                             (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:addition_assoc[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"(n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ ((- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (thin_tac \"(- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (thin_tac \"(n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (thin_tac \"n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (n - 1))) =\n                      z", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<in> \n                                      add_set f {a} (nat (n - 1))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (n - 1))) =\n                      z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))) \\<in> \n                                   add_set f {\\<^sub>i- a} (nat (n - 1))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1));\n     (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1)))\n     \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1))) \\<^sub>f+\n                         (THE x.\n                             x \\<in> add_set f {\\<^sub>i- a}\n(nat (n - 1))) =\n                      z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:fag_single_additionTr4_1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1)))\n                      \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule theI')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n; n < - m;\n     (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n     \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        n < - m;\n        (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n        \\<in> add_set f {a} (nat (n - 1));\n        x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single_nonempty2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        n < - m;\n        (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n        \\<in> add_set f {a} (nat (n - 1));\n        x \\<in> add_set f {\\<^sub>i- a} (nat (n - 1));\n        y \\<in> add_set f {\\<^sub>i- a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (simp add:add_set_single2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - 1)))\n                      \\<in> add_set f {a} (nat (n - 1))", "apply (rule theI')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (n - 1))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n     n < - m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (n - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        n < - m; x \\<in> add_set f {a} (nat (n - 1));\n        y \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z; 0 < n;\n        n < - m; x \\<in> add_set f {a} (nat (n - 1));\n        y \\<in> add_set f {a} (nat (n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma single_addition_pm:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"(n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = z\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     z \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n = 0; 0\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> z \\<^sub>f+ m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:zeroA_def, subst fg_elem_single_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"m = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:aug_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m = 0\\<rbrakk>\n    \\<Longrightarrow> 0\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \" (0\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = z\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<in> addition_set f (aug_pm_set z i {a}); n \\<noteq> 0; m = 0;\n     0\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> z \\<^sub>f+ n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m = 0\\<rbrakk>\n    \\<Longrightarrow> 0\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:zeroA_def, subst fg_elem_single_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n \\<noteq> 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule_tac non_zero_int [of \"n\"], thin_tac \"n \\<noteq> 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m \\<noteq> 0; 0 < n \\<or> n < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule_tac non_zero_int [of \"m\"], thin_tac \"m \\<noteq> 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n \\<or> n < 0; 0 < m \\<or> m < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"0 < n\", thin_tac \"0 < n \\<or> n < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < m \\<or> m < 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n \\<or> n < 0; 0 < m \\<or> m < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"0 < m\", thin_tac \"0 < m \\<or> m < 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < m \\<or> m < 0; 0 < n; \\<not> 0 < m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n \\<or> n < 0; 0 < m \\<or> m < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:single_addition_pos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < m \\<or> m < 0; 0 < n; \\<not> 0 < m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n \\<or> n < 0; 0 < m \\<or> m < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp, thin_tac \"m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m < 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n \\<or> n < 0; 0 < m \\<or> m < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:s_a_p_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0 < n \\<or> n < 0; 0 < m \\<or> m < 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n < 0; 0 < m \\<or> m < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subst aug_commute, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n < 0; 0 < m \\<or> m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (case_tac \"0 < m\", thin_tac \"0 < m \\<or> m < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n < 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n < 0; 0 < m \\<or> m < 0; \\<not> 0 < m\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:s_a_p_1, simp add:add.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n < 0; 0 < m \\<or> m < 0; \\<not> 0 < m\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:single_addition_neg, simp add:add.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma single_inv:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {(a::'a)}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z\\<rbrakk> \\<Longrightarrow>  \\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (-m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"m\"], assumption+,\n       frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"- m\"], assumption+,\n       frule single_addition_pm[THEN sym, of \"f\" \"z\" \"i\" \"a\" \"-m\" \"m\"],\n                                         assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     0\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:single_addition_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"z \\<^sub>f+ (\\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)) =\n            ((- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (\\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n        \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                         \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n        \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n        \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (frule aug_ipp_closed [of \"f\" \"z\" \"i\" \"{a}\" \"m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n        \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (thin_tac \"z = ((- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n        \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:addition_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"(m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\" \"\\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"\\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+ z;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (subgoal_tac \"z \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+ z;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z;\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+ z;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> z \\<in> addition_set f (aug_pm_set z i {a})\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+ z;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z\\<rbrakk>\n    \\<Longrightarrow> z \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+ z;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z;\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (simp add:addition_set_inc_z)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+ z;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z;\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (simp add:aug_commute[of \"f\" \"z\" \"i\" \"{a}\" \"(- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\" \"z\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z \\<^sub>f+ (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     z;\n     z \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (simp add:inv_ipp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (subgoal_tac \"zeroA z i f {a} (\\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> zeroA z i f {a}\n                       (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> zeroA z i f {a}\n                       (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (frule aug_zero_unique[of \"f\" \"z\" \"i\" \"{a}\" \"\\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<^sub>f+ (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n                      \\<in> addition_set f (aug_pm_set z i {a})\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> zeroA z i f {a} z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> zeroA z i f {a}\n                       (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n 4. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     z =\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (rule aug_bpp_closed, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     z =\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      z", "apply (rule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i;\n     \\<forall>aa\\<in>addition_set f (aug_pm_set z i {a}).\n        zeroA z i f {a} (\\<^sub>i- aa \\<^sub>f+ aa);\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     z \\<^sub>f+ \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n            m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     zeroA z i f {a}\n      (\\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n          m\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     z =\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> z =\n                      \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n                         m\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma free_ag_single:\"\\<lbrakk>commute_bpp f (aug_pm_set z i {a}); \n      assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f; \n      ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a}); \n      zeroA z i f {a} z; free_gen_condition f i a z; n \\<noteq> m\\<rbrakk> \\<Longrightarrow> \n      (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<noteq> (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; free_gen_condition f i a z; n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<noteq>\n                      m\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule single_addition_pm[THEN sym, of f z i a n \"-m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n + - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule single_addition_pm_mem[of \"z\" \"i\" \"a\" \"f\" \"- m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:aug_commute [of \"f\" \"z\" \"i\" \"{a}\" \"(m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\" \"(- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     (- m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:single_inv[THEN sym, of \"f\" \"z\" \"i\" \"a\" \"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<^sub>f+\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:inv_aug_addition)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \"n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a});\n     \\<^sub>i- m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \" \\<^sub>i- (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n     \\<in> addition_set f (aug_pm_set z i {a})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \" m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> addition_set f (aug_pm_set z i {a})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> False", "apply (insert int_neq_iff[of \"n\" \"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     (n \\<noteq> m) = (n < m) \\<or> m < n\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n\\<rbrakk>\n    \\<Longrightarrow> False", "apply (case_tac \"n < m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     n < m\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \"n < m \\<or> m < n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule single_inv [THEN sym, of \"f\" \"z\" \"i\" \"a\" \"n - m\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m;\n     (- (n - m))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     \\<^sub>i- (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = \\<^sub>i- z\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"\\<^sub>i- z = z\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = \\<^sub>i- z;\n     \\<^sub>i- z = z\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = \\<^sub>i- z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- z = z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     \\<^sub>i- z = z\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = \\<^sub>i- z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- z = z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \" \\<^sub>i- z = z\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = \\<^sub>i- z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- z = z\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = \\<^sub>i- z\\<rbrakk>\n    \\<Longrightarrow> \\<^sub>i- z = z\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:ipp_cond3_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"0 < m - n\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; 0 < m - n\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> 0 < m - n\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\\<rbrakk>\n    \\<Longrightarrow> 0 < m - n\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; 0 < m - n\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z;\n     n < m; (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; 0 < m - n\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \"(n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n < m;\n     (m - n)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; 0 < m - n\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (m - n - 1))) \\<in> add_set f {a} (nat (m - n - 1))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1)))\n     \\<in> add_set f {a} (nat (m - n - 1))\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - n - 1)))\n                      \\<in> add_set f {a} (nat (m - n - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m;\n     z \\<in> add_set f {a} (nat (m - n - 1))\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - n - 1)))\n                      \\<in> add_set f {a} (nat (m - n - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n < m;\n     z \\<in> add_set f {a} (nat (m - n - 1))\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - n - 1)))\n                      \\<in> add_set f {a} (nat (m - n - 1))\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:free_gen_condition_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (m - n - 1)))\n                      \\<in> add_set f {a} (nat (m - n - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (rule theI')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (m - n - 1))\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (m - n - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        free_gen_condition f i a z;\n        (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m;\n        x \\<in> add_set f {a} (nat (m - n - 1));\n        y \\<in> add_set f {a} (nat (m - n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        free_gen_condition f i a z;\n        (THE x. x \\<in> add_set f {a} (nat (m - n - 1))) = z; n < m;\n        x \\<in> add_set f {a} (nat (m - n - 1));\n        y \\<in> add_set f {a} (nat (m - n - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; n < m \\<or> m < n;\n     \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"0 < n - m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; \\<not> n < m;\n     0 < n - m\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> 0 < n - m", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; \\<not> n < m\\<rbrakk>\n    \\<Longrightarrow> 0 < n - m\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; \\<not> n < m;\n     0 < n - m\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; n \\<noteq> m;\n     (n - m)\\<Odot>a\\<^bsub>f,i,z\\<^esub> = z; \\<not> n < m;\n     0 < n - m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:fg_elem_single_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"(THE x. x \\<in> add_set f {a} (nat (n - m - 1))) \\<in> add_set f {a} (nat (n - m - 1))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1)))\n     \\<in> add_set f {a} (nat (n - m - 1))\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - m - 1)))\n                      \\<in> add_set f {a} (nat (n - m - 1))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n;\n     z \\<in> add_set f {a} (nat (n - m - 1))\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - m - 1)))\n                      \\<in> add_set f {a} (nat (n - m - 1))", "apply (thin_tac \"(THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z; m < n;\n     z \\<in> add_set f {a} (nat (n - m - 1))\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - m - 1)))\n                      \\<in> add_set f {a} (nat (n - m - 1))", "apply (simp add:free_gen_condition_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> (THE x. x \\<in> add_set f {a} (nat (n - m - 1)))\n                      \\<in> add_set f {a} (nat (n - m - 1))", "apply (rule theI')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x. x \\<in> add_set f {a} (nat (n - m - 1))", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n     ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n     commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n     free_gen_condition f i a z;\n     (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> add_set f {a} (nat (n - m - 1))\n 2. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        free_gen_condition f i a z;\n        (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n;\n        x \\<in> add_set f {a} (nat (n - m - 1));\n        y \\<in> add_set f {a} (nat (n - m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:add_set_single_nonempty1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i;\n        ipp_cond2 z {a} i f; ipp_cond3 z i; inv_ipp z i f {a};\n        commute_bpp f (aug_pm_set z i {a}); zeroA z i f {a} z;\n        free_gen_condition f i a z;\n        (THE x. x \\<in> add_set f {a} (nat (n - m - 1))) = z; m < n;\n        x \\<in> add_set f {a} (nat (n - m - 1));\n        y \\<in> add_set f {a} (nat (n - m - 1))\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:add_set_single1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  fags_cond :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> bool\" where\n  \"fags_cond f z i a \\<longleftrightarrow> commute_bpp f (aug_pm_set z i {a}) \\<and> \n       assoc_bpp (aug_pm_set z i {a}) f \\<and> ipp_cond1 {a} i \\<and> \n       ipp_cond2 z {a} i f \\<and>  ipp_cond3 z i \\<and> inv_ipp z i f {a} \\<and> \n       commute_bpp f (aug_pm_set z i {a}) \\<and>  zeroA z i f {a} z \\<and> \n       free_gen_condition f i a z\""], ["", "lemma fag_single_free:\"\\<lbrakk>fags_cond f z i a; n \\<noteq> m\\<rbrakk> \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<noteq> (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fags_cond f z i a; n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<noteq>\n                      m\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:fags_cond_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i {a}) \\<and>\n             assoc_bpp (aug_pm_set z i {a}) f \\<and>\n             ipp_cond1 {a} i \\<and>\n             ipp_cond2 z {a} i f \\<and>\n             ipp_cond3 z i \\<and>\n             inv_ipp z i f {a} \\<and>\n             commute_bpp f (aug_pm_set z i {a}) \\<and>\n             zeroA z i f {a} z \\<and> free_gen_condition f i a z;\n     n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<noteq>\n                      m\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> m; commute_bpp f (aug_pm_set z i {a});\n     assoc_bpp (aug_pm_set z i {a}) f; ipp_cond1 {a} i; ipp_cond2 z {a} i f;\n     ipp_cond3 z i; inv_ipp z i f {a}; commute_bpp f (aug_pm_set z i {a});\n     zeroA z i f {a} z; free_gen_condition f i a z\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<noteq>\n                      m\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (simp add:free_ag_single)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fag_single_free1:\"\\<lbrakk>fags_cond f z i a;(n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk> \\<Longrightarrow> n = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> n = m", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule fag_single_free [of \"f\" \"z\" \"i\" \"a\" \"n\" \"m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n \\<noteq> m;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<noteq>\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  fags_carr :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a set\" where\n  \"fags_carr f z i a = {x. \\<exists>n. x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>}\""], ["", "definition\n  fags_bpp :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"fags_bpp f z i a = (\\<lambda>x\\<in>(fags_carr f z i a). \\<lambda>y\\<in>(fags_carr f z i a).\n        ((THE n. x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) + (THE m. y = m\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\""], ["", "definition\n  fags_ipp :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"fags_ipp f z i a = (\\<lambda>x\\<in>(fags_carr f z i a). \n                                   (- (THE n. x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\""], ["", "lemma fags_mem:\"fags_cond f z i a \\<Longrightarrow> (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in> fags_carr f z i a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fags_carr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow>\n    \\<exists>na.\n       n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fags_ippTr:\"fags_cond f z i a \\<Longrightarrow> \n                  fags_ipp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow>\n    fags_ipp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n    (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"(n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in>  fags_carr f z i a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> fags_ipp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fags_ipp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> (- (THE na.\n                             n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                             na\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (subgoal_tac \"n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = (THE na. n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (- (THE na.\n                             n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                             na\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (- n)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (frule_tac m = \"THE na. n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>\" in \n        fag_single_free1[of \"f\" \"z\" \"i\" \"a\" \"n\"], assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (rule theI', rule ex_ex1I, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>fags_cond f z i a;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = x\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n        y\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fag_single_free1 [of f z i a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fags_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fags_bppTr:\"fags_cond f z i a \\<Longrightarrow> \n                  fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) = (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow>\n    fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n     (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n    (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>", "apply (subgoal_tac \"(n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in>  fags_carr f z i a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                       (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (subgoal_tac \"(m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) \\<in>  fags_carr f z i a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                       (m\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 3. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fags_bpp_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> ((THE na.\n                           n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) +\n                       (THE ma.\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 3. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (subgoal_tac \"n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = (THE na. n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> ((THE na.\n                           n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) +\n                       (THE ma.\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 4. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (frule_tac m = \"THE na. n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>\" in \n                  fag_single_free1 [of \"f\" \"z\" \"i\" \"a\" \"n\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> ((THE na.\n                           n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) +\n                       (THE ma.\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 4. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (subgoal_tac \"m\\<Odot>a\\<^bsub>f,i,z\\<^esub> = (THE ma. m\\<Odot>a\\<^bsub>f,i,z\\<^esub> = ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE ma.\n         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> ((THE na.\n                           n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) +\n                       (THE ma.\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE ma.\n                          m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 4. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 5. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (frule_tac m = \"THE ma. m\\<Odot>a\\<^bsub>f,i,z\\<^esub> = ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>\" in \n                  fag_single_free1 [of f z i a m], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE ma.\n         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     m =\n     (THE ma.\n         m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> ((THE na.\n                           n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) +\n                       (THE ma.\n                           m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                           ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (n + m)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE ma.\n                          m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 4. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 5. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n     n =\n     (THE na.\n         n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n         na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE ma.\n                          m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          ma\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 4. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (rule theI', rule ex_ex1I, blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>fags_cond f z i a;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n        (THE na.\n            n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n            na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        n =\n        (THE na.\n            n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n            na\\<Odot>a\\<^bsub>f,i,z\\<^esub>);\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> = x\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n        y\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 3. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 4. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fag_single_free1 [of f z i a])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n     m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                      (THE na.\n                          n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                          na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 3. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (rule theI', rule ex_ex1I, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>fags_cond f z i a;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n        m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> = x\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        n\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n        y\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 3. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fag_single_free1 [of f z i a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fags_cond f z i a;\n     n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\\<rbrakk>\n    \\<Longrightarrow> m\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a\n 2. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fags_carr_def, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow>\n    n\\<Odot>a\\<^bsub>f,i,z\\<^esub> \\<in> fags_carr f z i a", "apply (simp add:fags_carr_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  fags :: \"['a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a, 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> 'a aGroup\" where\n  \"fags f z i a = \\<lparr>carrier = fags_carr f z i a, \n                   pop = fags_bpp f z i a, \n                   mop = fags_ipp f z i a, zero = z\\<rparr>\""], ["", "lemma fags_ag:\"fags_cond f z i a \\<Longrightarrow> aGroup (fags f z i a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fags_cond f z i a \\<Longrightarrow> aGroup (fags f z i a)", "apply (rule aGroup.intro)"], ["proof (prove)\ngoal (7 subgoals):\n 1. fags_cond f z i a \\<Longrightarrow>\n    (\\<plusminus>\\<^bsub>fags f z i a\\<^esub>)\n    \\<in> carrier (fags f z i a) \\<rightarrow>\n          carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 2. \\<And>aa b c.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a);\n        c \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         c =\n                         aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> c)\n 3. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 4. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 6. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 7. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (rule Pi_I)+"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>fags_cond f z i a; x \\<in> carrier (fags f z i a);\n        xa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> x \\<plusminus>\\<^bsub>fags f z i a\\<^esub> xa\n                         \\<in> carrier (fags f z i a)\n 2. \\<And>aa b c.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a);\n        c \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         c =\n                         aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> c)\n 3. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 4. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 6. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 7. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def fags_carr_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>fags_cond f z i a;\n        \\<exists>n. x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        \\<exists>n. xa = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            fags_bpp f z i a x xa =\n                            n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<And>aa b c.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a);\n        c \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         c =\n                         aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> c)\n 3. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 4. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 6. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 7. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply ((erule exE)+, simp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x xa n na.\n       \\<lbrakk>fags_cond f z i a; x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        xa = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>nb.\n                            fags_bpp f z i a\n                             (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                             (na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                            nb\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<And>aa b c.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a);\n        c \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         c =\n                         aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> c)\n 3. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 4. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 6. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 7. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_bppTr)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x xa n na.\n       \\<lbrakk>fags_cond f z i a; x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        xa = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>nb.\n                            (n + na)\\<Odot>a\\<^bsub>f,i,z\\<^esub> =\n                            nb\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<And>aa b c.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a);\n        c \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         c =\n                         aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> c)\n 3. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 4. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 6. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 7. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>aa b c.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a);\n        c \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         c =\n                         aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         (b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> c)\n 2. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 3. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 4. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 5. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 6. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def, simp add:fags_carr_def,\n        (erule exE)+, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>aa b c n na nb.\n       \\<lbrakk>fags_cond f z i a; aa = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        b = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        c = nb\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> fags_bpp f z i a\n                          (fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                            (na\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\n                          (nb\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                         fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                          (fags_bpp f z i a\n                            (na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                            (nb\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\n 2. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 3. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 4. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 5. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 6. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_bppTr, simp add:add.assoc)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>aa b.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a);\n        b \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub> b =\n                         b \\<plusminus>\\<^bsub>fags f z i a\\<^esub> aa\n 2. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 3. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 4. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def, simp add:fags_carr_def,\n        (erule exE)+, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>aa b n na.\n       \\<lbrakk>fags_cond f z i a; aa = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>;\n        b = na\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> fags_bpp f z i a (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                          (na\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                         fags_bpp f z i a (na\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n                          (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>)\n 2. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 3. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 4. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 5. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_bppTr, simp add:add.commute)"], ["proof (prove)\ngoal (4 subgoals):\n 1. fags_cond f z i a \\<Longrightarrow>\n    mop (fags f z i a)\n    \\<in> carrier (fags f z i a) \\<rightarrow> carrier (fags f z i a)\n 2. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 3. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 4. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (rule Pi_I)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fags_cond f z i a; x \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> x\n                         \\<in> carrier (fags f z i a)\n 2. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 3. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 4. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def, simp add:fags_carr_def, erule exE, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x n.\n       \\<lbrakk>fags_cond f z i a;\n        x = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>na.\n                            fags_ipp f z i a\n                             (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                            na\\<Odot>a\\<^bsub>f,i,z\\<^esub>\n 2. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 3. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 4. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_ippTr, blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>fags f z i a\\<^esub> aa \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         \\<zero>\\<^bsub>fags f z i a\\<^esub>\n 2. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 3. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def, simp add:fags_carr_def, erule exE, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa n.\n       \\<lbrakk>fags_cond f z i a;\n        aa = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> fags_bpp f z i a\n                          (fags_ipp f z i a\n                            (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>))\n                          (n\\<Odot>a\\<^bsub>f,i,z\\<^esub>) =\n                         z\n 2. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 3. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_ippTr fags_bppTr,\n        simp add:fags_cond_def single_addition_zero[of f z i a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. fags_cond f z i a \\<Longrightarrow>\n    \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<in> carrier (fags f z i a)\n 2. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def fags_carr_def,\n        simp add:fags_cond_def, (erule conjE)+,\n        frule  single_addition_zero, assumption+, rotate_tac -1, frule sym,\n        blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>fags_cond f z i a; aa \\<in> carrier (fags f z i a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>fags f z i a\\<^esub> \\<plusminus>\\<^bsub>fags f z i a\\<^esub>\n                         aa =\n                         aa", "apply (simp add:fags_def fags_carr_def, erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa n.\n       \\<lbrakk>fags_cond f z i a;\n        aa = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> fags_bpp f z i a z aa = aa", "apply (subgoal_tac \"fags_bpp f z i a z aa = fags_bpp f z i a (0\\<Odot>a\\<^bsub>f,i,z\\<^esub>) aa\",\n        simp add:fags_bppTr,\n        thin_tac \"aa = n\\<Odot>a\\<^bsub>f,i,z\\<^esub>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa n.\n       fags_cond f z i a \\<Longrightarrow>\n       fags_bpp f z i a z aa =\n       fags_bpp f z i a (0\\<Odot>a\\<^bsub>f,i,z\\<^esub>) aa", "apply (cut_tac single_addition_zero[of f z i a], simp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>aa n.\n       fags_cond f z i a \\<Longrightarrow>\n       commute_bpp f (aug_pm_set z i {a})\n 2. \\<And>aa n.\n       fags_cond f z i a \\<Longrightarrow> assoc_bpp (aug_pm_set z i {a}) f\n 3. \\<And>aa n. fags_cond f z i a \\<Longrightarrow> ipp_cond1 {a} i\n 4. \\<And>aa n. fags_cond f z i a \\<Longrightarrow> ipp_cond2 z {a} i f\n 5. \\<And>aa n. fags_cond f z i a \\<Longrightarrow> ipp_cond3 z i\n 6. \\<And>aa n. fags_cond f z i a \\<Longrightarrow> inv_ipp z i f {a}\n 7. \\<And>aa n.\n       fags_cond f z i a \\<Longrightarrow>\n       commute_bpp f (aug_pm_set z i {a})\n 8. \\<And>aa n. fags_cond f z i a \\<Longrightarrow> zeroA z i f {a} z", "apply (simp add:fags_cond_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Abelian Group generated by one element II (nonconstructive)\""], ["", "definition\n  ag_single_gen :: \"[('a, 'm) aGroup_scheme, 'a] \\<Rightarrow> bool\" where\n  \"ag_single_gen A a \\<longleftrightarrow> aGroup A \\<and> carrier A = \\<Inter> {H. asubGroup A H \\<and> a \\<in> H}\""], ["", "primrec aSum :: \"[('a, 'm) aGroup_scheme, nat,'a]  \\<Rightarrow> 'a\" where\n  aSum_0: \"aSum A 0 a = \\<zero>\\<^bsub>A\\<^esub>\"\n| aSum_Suc: \"aSum A (Suc n) a = aSum A n a \\<plusminus>\\<^bsub>A\\<^esub> a\""], ["", "definition\n  sprod_n_a ::\"[('a, 'm) aGroup_scheme, int, 'a]  \\<Rightarrow> 'a\" where\n  \"sprod_n_a A n x = (if 0 \\<le> n then (aSum A (nat n) x) \n                      else (aSum A (nat (- n)) (-\\<^sub>a\\<^bsub>A\\<^esub> x)))\""], ["", "abbreviation\n  SPRODNA  (\"(3_\\<triangleright>_\\<^bsub>_\\<^esub>)\" [95,95,96]95) where\n  \"n\\<triangleright>a\\<^bsub>A\\<^esub> == sprod_n_a A n a\""], ["", "lemma (in aGroup) asum_mem:\"a \\<in> carrier A \\<Longrightarrow> aSum A n a \\<in> carrier A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow> aSum A n a \\<in> carrier A", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow> aSum A 0 a \\<in> carrier A\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) a \\<in> carrier A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow> \\<zero> \\<in> carrier A\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) a \\<in> carrier A", "apply (simp add:ag_inc_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) a \\<in> carrier A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> a \\<in> carrier A", "apply (rule ag_pOp_closed, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_mem0:\"a \\<in> carrier A \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (case_tac \"n = 0\", simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (simp add:ag_inc_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (frule non_zero_int[of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n \\<noteq> 0; 0 < n \\<or> n < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (case_tac \"0 < n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n \\<noteq> 0; 0 < n \\<or> n < 0;\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; n \\<noteq> 0; 0 < n \\<or> n < 0;\n     \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat n) a \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; n \\<noteq> 0; 0 < n \\<or> n < 0;\n     \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (simp add:asum_mem, thin_tac \"n \\<noteq> 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n)) (-\\<^sub>a a) \\<in> carrier A", "apply (rule asum_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a a \\<in> carrier A", "apply (simp add:ag_mOp_closed)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_zero0:\"a \\<in> carrier A \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_1:\"a \\<in> carrier A \\<Longrightarrow> 1\\<triangleright>a\\<^bsub>A\\<^esub> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    1\\<triangleright>a\\<^bsub>A\\<^esub> = a", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow> \\<zero> \\<plusminus> a = a", "apply (simp add:ag_l_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) asumTr:\"a \\<in> carrier A \\<Longrightarrow> \n              aSum A (n + m) a = aSum A n a \\<plusminus> (aSum A m a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    aSum A (n + m) a = aSum A n a \\<plusminus> aSum A m a", "apply (induct_tac m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    aSum A (n + 0) a = aSum A n a \\<plusminus> aSum A 0 a\n 2. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A (n + Suc na) a =\n                         aSum A n a \\<plusminus> aSum A (Suc na) a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    aSum A n a = aSum A n a \\<plusminus> \\<zero>\n 2. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A (n + Suc na) a =\n                         aSum A n a \\<plusminus> aSum A (Suc na) a", "apply (frule asum_mem[of a n])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; aSum A n a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A n a = aSum A n a \\<plusminus> \\<zero>\n 2. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A (n + Suc na) a =\n                         aSum A n a \\<plusminus> aSum A (Suc na) a", "apply (rule ag_r_zero [THEN sym, of \"aSum A n a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A (n + Suc na) a =\n                         aSum A n a \\<plusminus> aSum A (Suc na) a", "apply (subgoal_tac \"n + Suc na = Suc (n + na)\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A na a \\<plusminus>\n                         a =\n                         aSum A n a \\<plusminus>\n                         (aSum A na a \\<plusminus> a)\n 2. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> n + Suc na = Suc (n + na)", "apply (rule ag_pOp_assoc)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<in> carrier A\n 2. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> aSum A na a \\<in> carrier A\n 3. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> a \\<in> carrier A\n 4. \\<And>na.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A (n + na) a = aSum A n a \\<plusminus> aSum A na a\\<rbrakk>\n       \\<Longrightarrow> n + Suc na = Suc (n + na)", "apply (simp add:asum_mem)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) aSum_zero:\"a \\<in> carrier A \\<Longrightarrow> aSum A n \\<zero> = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow> aSum A n \\<zero> = \\<zero>", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow> aSum A 0 \\<zero> = \\<zero>\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n \\<zero> = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) \\<zero> = \\<zero>", "apply (simp, simp, rule ag_r_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n \\<zero> = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<in> carrier A", "apply (simp add:ag_inc_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  agsum_add1p:\"\\<lbrakk> a \\<in> carrier A; 0 \\<le> n; 0 \\<le> m\\<rbrakk> \\<Longrightarrow>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (n + m)) a =\n                      aSum A (nat n) a \\<plusminus> aSum A (nat m) a", "apply (subst nat_add_distrib[of \"n\" \"m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat n + nat m) a =\n                      aSum A (nat n) a \\<plusminus> aSum A (nat m) a", "apply (simp add:asumTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  agsum_add1m:\"\\<lbrakk> a \\<in> carrier A; n < 0; m < 0\\<rbrakk> \\<Longrightarrow>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n - m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)", "apply (subst zdiff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n + - m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)", "apply (subgoal_tac \"0 \\<le> -n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n + - m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply (thin_tac \"n < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n + - m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply (subgoal_tac \"0 \\<le> -m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n; 0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n + - m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - m\n 3. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply (thin_tac \"m < 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> - n; 0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n + - m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - m\n 3. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply (subst nat_add_distrib [of \"-n\" \"-m\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> - n; 0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n) + nat (- m)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- m)) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - m\n 3. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply (rule asumTr)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> - n; 0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a a \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - m\n 3. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply (simp add:ag_mOp_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> - n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - m\n 2. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - n", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) agsum_add2Tr:\"a \\<in> carrier A \\<Longrightarrow> \n                \\<zero>  = aSum A n a \\<plusminus> (aSum A n (-\\<^sub>a a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    \\<zero> = aSum A 0 a \\<plusminus> aSum A 0 (-\\<^sub>a a)\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero> =\n                         aSum A (Suc n) a \\<plusminus>\n                         aSum A (Suc n) (-\\<^sub>a a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    \\<zero> = \\<zero> \\<plusminus> \\<zero>\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero> =\n                         aSum A (Suc n) a \\<plusminus>\n                         aSum A (Suc n) (-\\<^sub>a a)", "apply (cut_tac ag_inc_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; \\<zero> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<zero> = \\<zero> \\<plusminus> \\<zero>\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero> =\n                         aSum A (Suc n) a \\<plusminus>\n                         aSum A (Suc n) (-\\<^sub>a a)", "apply (simp add:ag_r_zero[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)\\<rbrakk>\n       \\<Longrightarrow> \\<zero> =\n                         aSum A (Suc n) a \\<plusminus>\n                         aSum A (Suc n) (-\\<^sub>a a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a)", "apply (frule  ag_mOp_closed[of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a)", "apply (frule_tac n = n in asum_mem [of \"-\\<^sub>a a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a)", "apply (frule_tac x = \"aSum A n (-\\<^sub>a a)\" in ag_pOp_closed [of  _ \"-\\<^sub>a a\"],\n        assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a\n        \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a)", "apply (frule_tac n = n in asum_mem [of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a)", "apply (subst ag_pOp_assoc[of  _ \"a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus>\n                         (a \\<plusminus>\n                          (aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a))", "apply (subst ag_pOp_assoc[THEN sym, of a _ \"-\\<^sub>a a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus>\n                         (a \\<plusminus> aSum A n (-\\<^sub>a a) \\<plusminus>\n                          -\\<^sub>a a)", "apply (subst ag_pOp_commute[of a], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> a \\<plusminus>\n                          -\\<^sub>a a)", "apply (subst ag_pOp_assoc[of  _ a \"-\\<^sub>a a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus>\n                          (a \\<plusminus> -\\<^sub>a a))", "apply (frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<zero> = aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a);\n        -\\<^sub>a a \\<in> carrier A; aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A;\n        aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus>\n                          (a \\<plusminus> -\\<^sub>a a))", "apply (thin_tac \"\\<zero> =  aSum A n a \\<plusminus> (aSum A n (-\\<^sub>a a))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; -\\<^sub>a a \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A;\n        aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) =\n                         aSum A n a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus>\n                          (a \\<plusminus> -\\<^sub>a a))", "apply (simp add:ag_r_inv1[of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; -\\<^sub>a a \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A;\n        aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<zero> =\n                         aSum A n a \\<plusminus>\n                         (aSum A n (-\\<^sub>a a) \\<plusminus> \\<zero>)", "apply (subst ag_r_zero, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; -\\<^sub>a a \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<in> carrier A;\n        aSum A n (-\\<^sub>a a) \\<plusminus> -\\<^sub>a a \\<in> carrier A;\n        aSum A n a \\<in> carrier A;\n        aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a) = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<zero> =\n                         aSum A n a \\<plusminus> aSum A n (-\\<^sub>a a)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) agsum_add2p:\"\\<lbrakk>a \\<in> carrier A; 0 \\<le> n\\<rbrakk> \\<Longrightarrow>\n                                    \\<zero> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> ((-n)\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; n = 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> = \\<zero> \\<plusminus> \\<zero>\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac ag_inc_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0; \\<zero> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<zero> = \\<zero> \\<plusminus> \\<zero>\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:ag_r_zero[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule non_zero_int[of \"n\"], thin_tac \"n \\<noteq> 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"-n < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; - n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n\\<rbrakk> \\<Longrightarrow> - n < 0", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n\\<rbrakk> \\<Longrightarrow> - n < 0\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; - n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; - n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      aSum A (nat n) a \\<plusminus>\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (simp add:agsum_add2Tr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) agsum_add2m:\"\\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk> \\<Longrightarrow>\n                                    \\<zero> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> ((-n)\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      aSum A (nat (- n)) (-\\<^sub>a a) \\<plusminus>\n                      aSum A (nat (- n)) a", "apply (subst ag_pOp_commute)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n)) (-\\<^sub>a a) \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n)) a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      aSum A (nat (- n)) a \\<plusminus>\n                      aSum A (nat (- n)) (-\\<^sub>a a)", "apply (rule asum_mem)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a a \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n)) a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      aSum A (nat (- n)) a \\<plusminus>\n                      aSum A (nat (- n)) (-\\<^sub>a a)", "apply (simp add:ag_mOp_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n)) a \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      aSum A (nat (- n)) a \\<plusminus>\n                      aSum A (nat (- n)) (-\\<^sub>a a)", "apply (rule asum_mem, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0\\<rbrakk>\n    \\<Longrightarrow> \\<zero> =\n                      aSum A (nat (- n)) a \\<plusminus>\n                      aSum A (nat (- n)) (-\\<^sub>a a)", "apply (simp add:agsum_add2Tr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) agsum_add3pm:\"\\<lbrakk>a \\<in> carrier A; 0 < n; m < 0\\<rbrakk> \\<Longrightarrow>\n                        (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac less_linear[of n \"- m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"n = -m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n = - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst ag_pOp_commute)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      m\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mem0)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      m\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m;\n     0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      m\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:agsum_add2m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n = - m\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0;\n     n < - m \\<or> n = - m \\<or> - m < n; n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"n < -m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst zminus_zadd_cancel[THEN sym, of \"m\" \"n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"-n < 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "(** atode shiraberu **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"n + m < 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "(** atode shiraberu *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; n < - m; - n < 0; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> (n +\n                       (- n + (n + m)))\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac agsum_add1m [of \"a\" \"-n\" \"n + m\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     (- n + (n + m))\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      ((- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>)\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst ag_pOp_assoc [THEN sym])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 6. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 7. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 8. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mem0)+"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst agsum_add2p [THEN sym, of a n], assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> n\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero> \\<plusminus>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 6. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero> \\<plusminus>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (rule ag_l_zero[THEN sym, of  \"(n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 4. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 5. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mem0, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> - n < 0\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 3. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply arith"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; n + m < 0\\<rbrakk>\n    \\<Longrightarrow> n + m < 0\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     n \\<noteq> - m; \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (thin_tac \"n \\<noteq> - m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0; n < - m \\<or> - m < n;\n     \\<not> n < - m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst zminus_zadd_cancel[THEN sym, of \"n\" \"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n) +\n                       m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule zminus_minus_pos[of m], frule zless_imp_zle[of 0 \"- m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m;\n     0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n) +\n                       m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"0 \\<le> n + m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m; 0 \\<le> - m;\n     0 \\<le> n + m\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n) +\n                       m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m;\n     0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> n + m", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m;\n     0 \\<le> - m\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> n + m\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m; 0 \\<le> - m;\n     0 \\<le> n + m\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n) +\n                       m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m; 0 \\<le> - m;\n     0 \\<le> n + m\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n) +\n                       m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule agsum_add1p [of \"a\" \"-m\" \"n + m\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; - m < n; 0 < - m; 0 \\<le> - m;\n     0 \\<le> n + m;\n     (- m + (n + m))\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (- m + (m + n) +\n                       m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (thin_tac \"n\\<triangleright>a\\<^bsub>A\\<^esub> =  (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst ag_pOp_commute[of \"(- m)\\<triangleright>a\\<^bsub>A\\<^esub>\" \"(n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mem0)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst ag_pOp_assoc)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 4. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      ((- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       m\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:nt_mem0)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      ((- m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       m\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (subst ag_pOp_commute [of \"(- m)\\<triangleright>a\\<^bsub>A\\<^esub>\" \"m\\<triangleright>a\\<^bsub>A\\<^esub>\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (- m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (m\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- m)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:nt_mem0)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (m\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- m)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:agsum_add2m[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero>", "apply (rule ag_r_zero[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; - m < n; m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A", "apply (simp add:nt_mem0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  agsum_add3mp:\"\\<lbrakk> a \\<in> carrier A; n < 0; 0 < m\\<rbrakk> \\<Longrightarrow>\n                        (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:add.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (m + n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst ag_pOp_commute, (simp add:nt_mem0)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (m + n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      m\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:agsum_add3pm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  nt_sum0:\"\\<lbrakk> a \\<in> carrier A\\<rbrakk> \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n    n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n    m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac less_linear[of n 0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"n < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac less_linear[of m 0])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n; n < 0;\n     m < 0 \\<or> m = 0 \\<or> 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"m < 0\", simp add:agsum_add1m, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0 \\<or> 0 < m;\n     \\<not> m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (thin_tac \"\\<not> m < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0 \\<or> 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"m = 0\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      0\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0 \\<or> 0 < m;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_zero0)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0 \\<or> 0 < m;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (rule ag_r_zero[THEN sym], simp add:nt_mem0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m = 0 \\<or> 0 < m;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n < 0 \\<or> n = 0 \\<or> 0 < n;\n     \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp, simp add:agsum_add3mp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0 \\<or> 0 < n; \\<not> n < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (thin_tac \"\\<not> n < 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0 \\<or> 0 < n\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"n = 0\", simp, simp add:nt_zero0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; n = 0 \\<or> 0 < n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (rule ag_l_zero[THEN sym], simp add:nt_mem0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n = 0 \\<or> 0 < n; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac less_linear[of m 0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n;\n     m < 0 \\<or> m = 0 \\<or> 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"m < 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0 \\<or> m = 0 \\<or> 0 < m;\n     m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m < 0 \\<or> m = 0 \\<or> 0 < m;\n     \\<not> m < 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:agsum_add3pm, simp, thin_tac \"\\<not> m < 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m = 0 \\<or> 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"m = 0\", simp, simp add:nt_zero0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m = 0\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero>\n 2. \\<lbrakk>a \\<in> carrier A; 0 < n; m = 0 \\<or> 0 < m;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (rule ag_r_zero[THEN sym], simp add:nt_mem0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; m = 0 \\<or> 0 < m;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 < n; 0 < m\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:agsum_add1p)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  nt_inv0:\"a \\<in> carrier A \\<Longrightarrow> -\\<^sub>a (n\\<triangleright>a\\<^bsub>A\\<^esub>) = (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n    (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"(n + -n)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> ((-n)\\<triangleright>a\\<^bsub>A\\<^esub>)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     (n + - n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. a \\<in> carrier A \\<Longrightarrow>\n    (n + - n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n    n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n    (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    (n + - n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n    n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n    (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     (n + - n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (rule nt_sum0, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A;\n     (n + - n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_zero0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subgoal_tac \"-\\<^sub>a (n\\<triangleright>a\\<^bsub>A\\<^esub>) \\<plusminus> \\<zero> = -\\<^sub>a (n\\<triangleright>a\\<^bsub>A\\<^esub>) \\<plusminus> (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (subgoal_tac \"n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (frule ag_mOp_closed [of \"n\\<triangleright>a\\<^bsub>A\\<^esub>\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (thin_tac \"\\<zero> =  n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:ag_r_zero)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (subgoal_tac \"(- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 4. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:ag_pOp_assoc[THEN sym])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 4. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:ag_l_inv1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     \\<zero> \\<plusminus> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     \\<zero> \\<plusminus> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n     \\<in> carrier A;\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<plusminus>\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 4. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:ag_l_zero)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>);\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\n                      \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> \\<zero> =\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\n 3. \\<lbrakk>a \\<in> carrier A;\n     \\<zero> =\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      \\<zero> =\n                      -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      (n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                       (- n)\\<triangleright>a\\<^bsub>A\\<^esub>)", "apply (simp add:nt_mem0)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) m_x_asum:\"\\<lbrakk> a \\<in> carrier A; b \\<in> carrier A\\<rbrakk> \n        \\<Longrightarrow> aSum A m (a \\<plusminus> b) = (aSum A m a) \\<plusminus> (aSum A m b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A m (a \\<plusminus> b) =\n                      aSum A m a \\<plusminus> aSum A m b", "apply (induct_tac m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A 0 (a \\<plusminus> b) =\n                      aSum A 0 a \\<plusminus> aSum A 0 b\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) =\n        aSum A n a \\<plusminus> aSum A n b\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) (a \\<plusminus> b) =\n                         aSum A (Suc n) a \\<plusminus> aSum A (Suc n) b", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<zero> = \\<zero> \\<plusminus> \\<zero>\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) =\n        aSum A n a \\<plusminus> aSum A n b\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) (a \\<plusminus> b) =\n                         aSum A (Suc n) a \\<plusminus> aSum A (Suc n) b", "apply (rule ag_r_zero[THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<in> carrier A\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) =\n        aSum A n a \\<plusminus> aSum A n b\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) (a \\<plusminus> b) =\n                         aSum A (Suc n) a \\<plusminus> aSum A (Suc n) b", "apply (simp add:ag_inc_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) =\n        aSum A n a \\<plusminus> aSum A n b\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) (a \\<plusminus> b) =\n                         aSum A (Suc n) a \\<plusminus> aSum A (Suc n) b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) =\n        aSum A n a \\<plusminus> aSum A n b\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n b \\<plusminus> b)", "apply (frule_tac n = n in asum_mem[of \"a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) = aSum A n a \\<plusminus> aSum A n b;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n b \\<plusminus> b)", "apply (frule_tac n = n in asum_mem[of  \"b\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) = aSum A n a \\<plusminus> aSum A n b;\n        aSum A n a \\<in> carrier A; aSum A n b \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n b \\<plusminus> b)", "apply (frule_tac a = \"aSum A n a\" and c = \"aSum A n b\" in \n         pOp_assocTr43 [of  _ \"a\" _ \"b\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) = aSum A n a \\<plusminus> aSum A n b;\n        aSum A n a \\<in> carrier A; aSum A n b \\<in> carrier A;\n        aSum A n a \\<plusminus> a \\<plusminus> (aSum A n b \\<plusminus> b) =\n        aSum A n a \\<plusminus> (a \\<plusminus> aSum A n b) \\<plusminus>\n        b\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus> a \\<plusminus>\n                         (aSum A n b \\<plusminus> b)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) = aSum A n a \\<plusminus> aSum A n b;\n        aSum A n a \\<in> carrier A; aSum A n b \\<in> carrier A;\n        aSum A n a \\<plusminus> a \\<plusminus> (aSum A n b \\<plusminus> b) =\n        aSum A n a \\<plusminus> (a \\<plusminus> aSum A n b) \\<plusminus>\n        b\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus>\n                         (a \\<plusminus> aSum A n b) \\<plusminus>\n                         b", "apply (frule_tac x = a and y = \"aSum A n b\" in ag_pOp_commute, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) = aSum A n a \\<plusminus> aSum A n b;\n        aSum A n a \\<in> carrier A; aSum A n b \\<in> carrier A;\n        aSum A n a \\<plusminus> a \\<plusminus> (aSum A n b \\<plusminus> b) =\n        aSum A n a \\<plusminus> (a \\<plusminus> aSum A n b) \\<plusminus> b;\n        a \\<plusminus> aSum A n b = aSum A n b \\<plusminus> a\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus>\n                         (a \\<plusminus> aSum A n b) \\<plusminus>\n                         b", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; b \\<in> carrier A;\n        aSum A n (a \\<plusminus> b) = aSum A n a \\<plusminus> aSum A n b;\n        aSum A n a \\<in> carrier A; aSum A n b \\<in> carrier A;\n        aSum A n a \\<plusminus> a \\<plusminus> (aSum A n b \\<plusminus> b) =\n        aSum A n a \\<plusminus> (aSum A n b \\<plusminus> a) \\<plusminus> b;\n        a \\<plusminus> aSum A n b = aSum A n b \\<plusminus> a\\<rbrakk>\n       \\<Longrightarrow> aSum A n a \\<plusminus> aSum A n b \\<plusminus>\n                         (a \\<plusminus> b) =\n                         aSum A n a \\<plusminus>\n                         (aSum A n b \\<plusminus> a) \\<plusminus>\n                         b", "apply (simp add:pOp_assocTr43[THEN sym])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) asum_multTr_pp:\"a \\<in> carrier A \\<Longrightarrow>\n                  aSum A m (aSum A n a) = aSum A (m * n) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    aSum A m (aSum A n a) = aSum A (m * n) a", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    aSum A m (aSum A 0 a) = aSum A (m * 0) a\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A m (aSum A n a) = aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A m (aSum A (Suc n) a) = aSum A (m * Suc n) a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow> aSum A m \\<zero> = \\<zero>\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A m (aSum A n a) = aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A m (aSum A (Suc n) a) = aSum A (m * Suc n) a", "apply (induct_tac m, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A n \\<zero> = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> aSum A (Suc n) \\<zero> = \\<zero>\n 2. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A m (aSum A n a) = aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A m (aSum A (Suc n) a) = aSum A (m * Suc n) a", "apply (simp, rule ag_r_zero, simp add:ag_inc_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A m (aSum A n a) = aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A m (aSum A (Suc n) a) = aSum A (m * Suc n) a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A;\n        aSum A m (aSum A n a) = aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A m (aSum A n a \\<plusminus> a) =\n                         aSum A (m + m * n) a", "apply (frule_tac n = n in asum_mem[of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A m (aSum A n a) = aSum A (m * n) a;\n        aSum A n a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A m (aSum A n a \\<plusminus> a) =\n                         aSum A (m + m * n) a", "apply (frule_tac a = \"aSum A n a\" and b = a and m= m in m_x_asum,\n                                           assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A m (aSum A n a) = aSum A (m * n) a;\n        aSum A n a \\<in> carrier A;\n        aSum A m (aSum A n a \\<plusminus> a) =\n        aSum A (m * n) a \\<plusminus> aSum A m a\\<rbrakk>\n       \\<Longrightarrow> aSum A (m * n) a \\<plusminus> aSum A m a =\n                         aSum A (m + m * n) a", "apply (frule_tac n = m and m = \"m * n\" in asumTr [of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A m (aSum A n a) = aSum A (m * n) a;\n        aSum A n a \\<in> carrier A;\n        aSum A m (aSum A n a \\<plusminus> a) =\n        aSum A (m * n) a \\<plusminus> aSum A m a;\n        aSum A (m + m * n) a =\n        aSum A m a \\<plusminus> aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A (m * n) a \\<plusminus> aSum A m a =\n                         aSum A (m + m * n) a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A m (aSum A n a) = aSum A (m * n) a;\n        aSum A n a \\<in> carrier A;\n        aSum A m (aSum A n a \\<plusminus> a) =\n        aSum A (m * n) a \\<plusminus> aSum A m a;\n        aSum A (m + m * n) a =\n        aSum A m a \\<plusminus> aSum A (m * n) a\\<rbrakk>\n       \\<Longrightarrow> aSum A (m * n) a \\<plusminus> aSum A m a =\n                         aSum A m a \\<plusminus> aSum A (m * n) a", "apply (frule_tac n = \"m * n\" in asum_mem[of a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A m (aSum A n a) = aSum A (m * n) a;\n        aSum A n a \\<in> carrier A;\n        aSum A m (aSum A n a \\<plusminus> a) =\n        aSum A (m * n) a \\<plusminus> aSum A m a;\n        aSum A (m + m * n) a = aSum A m a \\<plusminus> aSum A (m * n) a;\n        aSum A (m * n) a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A (m * n) a \\<plusminus> aSum A m a =\n                         aSum A m a \\<plusminus> aSum A (m * n) a", "apply (frule_tac n = m in asum_mem[of \"a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>a \\<in> carrier A; aSum A m (aSum A n a) = aSum A (m * n) a;\n        aSum A n a \\<in> carrier A;\n        aSum A m (aSum A n a \\<plusminus> a) =\n        aSum A (m * n) a \\<plusminus> aSum A m a;\n        aSum A (m + m * n) a = aSum A m a \\<plusminus> aSum A (m * n) a;\n        aSum A (m * n) a \\<in> carrier A;\n        aSum A m a \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> aSum A (m * n) a \\<plusminus> aSum A m a =\n                         aSum A m a \\<plusminus> aSum A (m * n) a", "apply (simp add:ag_pOp_commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_mult_pp:\"\\<lbrakk> a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk> \n                                   \\<Longrightarrow> m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m) (aSum A (nat n) a) =\n                      aSum A (nat (m * n)) a", "apply (subgoal_tac \"0 \\<le> m * n\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m) (aSum A (nat n) a) =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (simp add:asum_multTr_pp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m * nat n) a = aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (simp add:nat_mult_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (frule int_mult_le [of \"0\" \"m\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; 0 \\<le> n;\n     n * 0 \\<le> n * m\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) asum_multTr_pm:\"\\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk> \\<Longrightarrow> \n       aSum A (nat m) (aSum A (nat (- n)) (-\\<^sub>a a)) = \n                                    aSum A (nat (m * (- n))) (-\\<^sub>a a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m) (aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (m * - n)) (-\\<^sub>a a)", "apply (frule ag_mOp_closed [of  a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m) (aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (m * - n)) (-\\<^sub>a a)", "apply (simp add:asum_multTr_pp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m * nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)", "apply (subgoal_tac \"nat m * nat (- n) = nat (- (m * n))\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> nat m * nat (- n) = nat (- (m * n))", "apply (subgoal_tac \"(nat m) * (nat (- n)) = nat (m * (- n))\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> nat m * nat (- n) = nat (m * - n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> nat m * nat (- n) = nat (- (m * n))", "apply (subst zmult_zminus_right[THEN sym, of \"m\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> nat m * nat (- n) = nat (m * - n)", "apply (rule nat_mult_distrib [THEN sym, of \"m\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_mult_pm:\"\\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk> \\<Longrightarrow> \n                        m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule zmult_zle_mono1_neg [of \"0\" \"m\" \"n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0\\<rbrakk>\n    \\<Longrightarrow> n \\<le> 0\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0; m * n \\<le> 0 * n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:zless_imp_zle, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0; m * n \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0; m * n \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> m \\<noteq> 0 \\<longrightarrow>\n                      aSum A (nat m) (aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> m; n < 0; m * n \\<le> 0;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat m) (aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)", "apply (simp add: asum_multTr_pm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) asum_multTr_mp:\"\\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk> \\<Longrightarrow> \n aSum A (nat (-m))(-\\<^sub>a (aSum A (nat n) a)) = aSum A (nat ((- m) * n)) (-\\<^sub>a a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (- m * n)) (-\\<^sub>a a)", "apply (frule asum_mem [of  \"a\" \"nat n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (- m * n)) (-\\<^sub>a a)", "apply (frule ag_mOp_closed [of  \"aSum A (nat n) a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (- m * n)) (-\\<^sub>a a)", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)", "apply (subgoal_tac \"-\\<^sub>a (aSum A (nat n) a) = aSum A (nat n) (-\\<^sub>a a)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a = aSum A (nat n) (-\\<^sub>a a)\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     aSum A (nat n) (-\\<^sub>a a) \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a = aSum A (nat n) (-\\<^sub>a a)\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (aSum A (nat n) (-\\<^sub>a a)) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (subst asum_multTr_pp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     aSum A (nat n) (-\\<^sub>a a) \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a = aSum A (nat n) (-\\<^sub>a a)\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a a \\<in> carrier A\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     aSum A (nat n) (-\\<^sub>a a) \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a = aSum A (nat n) (-\\<^sub>a a)\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m) * nat n) (-\\<^sub>a a) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)\n 3. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (simp add:ag_mOp_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     aSum A (nat n) (-\\<^sub>a a) \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a = aSum A (nat n) (-\\<^sub>a a)\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m) * nat n) (-\\<^sub>a a) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (subgoal_tac \"(nat (- m)) * (nat n) = nat ((- m) * n)\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     aSum A (nat n) (-\\<^sub>a a) \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a = aSum A (nat n) (-\\<^sub>a a)\\<rbrakk>\n    \\<Longrightarrow> nat (- m) * nat n = nat (- m * n)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (subst nat_mult_distrib, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (frule nt_inv0 [of  \"a\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n;\n     aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat n) a \\<in> carrier A;\n     -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat n) a =\n                      aSum A (nat n) (-\\<^sub>a a)", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_mult_mp:\"\\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk> \\<Longrightarrow> \n                        m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))", "apply (cut_tac zless_imp_zle[of m 0])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; m \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (frule int_mult_le [of \"m\" \"0\" \"n\"], assumption, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (case_tac \"0 \\<le> m * n\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     \\<not> 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 3. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (frule zle_imp_zless_or_eq [of \"0\" \"m * n\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     0 \\<le> m * n; 0 < m * n \\<or> 0 = m * n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     \\<not> 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 3. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (thin_tac \"0 \\<le> m * n\", simp add:zle mult.commute)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n = 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a \\<zero>) = \\<zero>\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     \\<not> 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 3. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (simp add:ag_inv_zero, simp add:aSum_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     \\<not> 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n; n * m \\<le> 0;\n     \\<not> 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (-\\<^sub>a aSum A (nat n) a) =\n                      aSum A (nat (- (m * n))) (-\\<^sub>a a)\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (simp add:asum_multTr_mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m < 0", "apply (simp add:zle_imp_zless_or_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) asum_multTr_mm:\"\\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk> \\<Longrightarrow> \n       aSum A (nat (-m))(-\\<^sub>a (aSum A (nat (- n)) (-\\<^sub>a a))) = \n                                   aSum A (nat ((- m) * (- n))) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m))\n                       (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (- m * - n)) a", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m))\n                       (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (m * n)) a", "apply (subgoal_tac \"-\\<^sub>a (aSum A (nat (- n)) (-\\<^sub>a a)) = aSum A (nat (- n)) a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) a\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m))\n                       (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) a\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m)) (aSum A (nat (- n)) a) =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply (simp add:asum_multTr_pp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) a\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m) * nat (- n)) a =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply (subst nat_mult_distrib[THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) a\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> - m\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) a\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m * - n)) a = aSum A (nat (m * n)) a\n 3. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) a\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m * - n)) a = aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply (frule ag_mOp_closed [of  \"a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0;\n     -\\<^sub>a a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply (frule nt_inv0 [of  \"-\\<^sub>a a\" \"- n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0; -\\<^sub>a a \\<in> carrier A;\n     -\\<^sub>a (- n)\\<triangleright>(-\\<^sub>a a)\\<^bsub>A\\<^esub> =\n     (- (- n))\\<triangleright>(-\\<^sub>a a)\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n                      aSum A (nat (- n)) a", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0; -\\<^sub>a a \\<in> carrier A;\n     -\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a) =\n     aSum A (nat (- n)) (-\\<^sub>a (-\\<^sub>a a))\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- n)) (-\\<^sub>a (-\\<^sub>a a)) =\n                      aSum A (nat (- n)) a", "apply (simp add:ag_inv_inv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  nt_mult_mm:\"\\<lbrakk> a \\<in> carrier A; m < 0; n < 0\\<rbrakk> \\<Longrightarrow> \n                     m\\<triangleright>(n\\<triangleright>a\\<^bsub>A\\<^esub>)\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sprod_n_a_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m))\n                        (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m))\n                        (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))", "apply (subgoal_tac \"0 \\<le> m * n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0; 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> (0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m))\n                        (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                       aSum A (nat (m * n)) a) \\<and>\n                      (\\<not> 0 \\<le> m * n \\<longrightarrow>\n                       aSum A (nat (- m))\n                        (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                       aSum A (nat (- (m * n))) (-\\<^sub>a a))\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0; 0 \\<le> m * n\\<rbrakk>\n    \\<Longrightarrow> aSum A (nat (- m))\n                       (-\\<^sub>a aSum A (nat (- n)) (-\\<^sub>a a)) =\n                      aSum A (nat (m * n)) a\n 2. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (simp add:asum_multTr_mm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (frule zmult_neg_neg[of \"m\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; m < 0; n < 0; 0 < m * n\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> m * n", "apply (simp add:zle_imp_zless_or_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup)  nt_mult_assoc0:\"a \\<in> carrier A \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n    (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"0 \\<le> n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"0 \\<le> m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; 0 \\<le> n; \\<not> 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mult_pp,  simp add:zle)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; \\<not> n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule nt_mult_mp[of a m n], assumption, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (cut_tac less_linear[of 0 m])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n;\n     0 < m \\<or> 0 = m \\<or> m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (case_tac \"0 \\<le> m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n;\n     0 < m \\<or> 0 = m \\<or> m < 0; 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n;\n     0 < m \\<or> 0 = m \\<or> m < 0; \\<not> 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mult_pm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; \\<not> 0 \\<le> n;\n     0 < m \\<or> 0 = m \\<or> m < 0; \\<not> 0 \\<le> m\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:zle)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; n < 0; m < 0\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mult_mm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) single_gen_carrTr:\"a \\<in> carrier A \\<Longrightarrow>\n                               asubGroup A {x. \\<exists>n. x = (n\\<triangleright>a\\<^bsub>A\\<^esub>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}", "apply (rule asubg_test)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A\n 2. a \\<in> carrier A \\<Longrightarrow>\n    {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>} \\<noteq> {}\n 3. a \\<in> carrier A \\<Longrightarrow>\n    \\<forall>aa\\<in>{x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n       \\<forall>b\\<in>{x. \\<exists>n.\n                             x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n          aa \\<plusminus> -\\<^sub>a b\n          \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier A\n 2. a \\<in> carrier A \\<Longrightarrow>\n    {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>} \\<noteq> {}\n 3. a \\<in> carrier A \\<Longrightarrow>\n    \\<forall>aa\\<in>{x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n       \\<forall>b\\<in>{x. \\<exists>n.\n                             x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n          aa \\<plusminus> -\\<^sub>a b\n          \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}", "apply (erule exE, simp add:nt_mem0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>} \\<noteq> {}\n 2. a \\<in> carrier A \\<Longrightarrow>\n    \\<forall>aa\\<in>{x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n       \\<forall>b\\<in>{x. \\<exists>n.\n                             x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n          aa \\<plusminus> -\\<^sub>a b\n          \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}", "apply (simp, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier A \\<Longrightarrow>\n    \\<forall>aa\\<in>{x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n       \\<forall>b\\<in>{x. \\<exists>n.\n                             x = n\\<triangleright>a\\<^bsub>A\\<^esub>}.\n          aa \\<plusminus> -\\<^sub>a b\n          \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}", "apply ((rule ballI)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b.\n       \\<lbrakk>a \\<in> carrier A;\n        \\<exists>n. aa = n\\<triangleright>a\\<^bsub>A\\<^esub>;\n        \\<exists>n. b = n\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            aa \\<plusminus> -\\<^sub>a b =\n                            n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (erule exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n na.\n       \\<lbrakk>a \\<in> carrier A; aa = n\\<triangleright>a\\<^bsub>A\\<^esub>;\n        b = na\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            aa \\<plusminus> -\\<^sub>a b =\n                            n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_inv0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n na.\n       \\<lbrakk>a \\<in> carrier A; aa = n\\<triangleright>a\\<^bsub>A\\<^esub>;\n        b = na\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>nb.\n                            n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                            (- na)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                            nb\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (subst nt_sum0[THEN sym], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b n na.\n       \\<lbrakk>a \\<in> carrier A; aa = n\\<triangleright>a\\<^bsub>A\\<^esub>;\n        b = na\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>nb.\n                            (n + - na)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                            nb\\<triangleright>a\\<^bsub>A\\<^esub>", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) ag_single_inc_a:\"ag_single_gen A a \\<Longrightarrow> a \\<in> carrier A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ag_single_gen A a \\<Longrightarrow> a \\<in> carrier A", "apply (simp add:ag_single_gen_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) single_gen:\"ag_single_gen A a \\<Longrightarrow> \n                           carrier A = {g. \\<exists>n. g = (n\\<triangleright>a\\<^bsub>A\\<^esub>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ag_single_gen A a \\<Longrightarrow>\n    carrier A = {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ag_single_gen A a \\<Longrightarrow>\n    carrier A\n    \\<subseteq> {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 2. ag_single_gen A a \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (frule ag_single_inc_a [of  \"a\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ag_single_gen A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> carrier A\n                      \\<subseteq> {g. \\<exists>n.\n   g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 2. ag_single_gen A a \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>ag_single_gen A a; a \\<in> carrier A;\n        x \\<in> carrier A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. ag_single_gen A a \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (unfold ag_single_gen_def, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (frule single_gen_carrTr [of  \"a\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (subgoal_tac \"a \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 3. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (subgoal_tac \"\\<Inter>{H. A +> H \\<and> a \\<in> H} \\<subseteq> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        \\<Inter> {H. A +> H \\<and> a \\<in> H}\n        \\<subseteq> {x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n                         \\<subseteq> {x.\n\\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 3. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 4. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (frule_tac A = \"\\<Inter>{H. A +> H \\<and> a \\<in> H}\" and B = \"{x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\" and\n         c = x in  subsetD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        \\<Inter> {H. A +> H \\<and> a \\<in> H}\n        \\<subseteq> {x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n 2. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        \\<Inter> {H. A +> H \\<and> a \\<in> H}\n        \\<subseteq> {x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        x \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n                         \\<subseteq> {x.\n\\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 4. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 5. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (frule sym, thin_tac \"carrier A = \\<Inter>{H. A +> H \\<and> a \\<in> H}\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        \\<Inter> {H. A +> H \\<and> a \\<in> H}\n        \\<subseteq> {x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        \\<Inter> {H. A +> H \\<and> a \\<in> H} = carrier A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n 2. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        \\<Inter> {H. A +> H \\<and> a \\<in> H}\n        \\<subseteq> {x. \\<exists>n.\n                           x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        x \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\n 3. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n                         \\<subseteq> {x.\n\\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 4. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 5. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (simp, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n                         \\<subseteq> {x.\n\\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 2. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 3. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (thin_tac \"carrier A = \\<Inter>{H. A +> H \\<and> a \\<in> H}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>};\n        a \\<in> {x. \\<exists>n.\n                       x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> \\<Inter> {H. A +> H \\<and> a \\<in> H}\n                         \\<subseteq> {x.\n\\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 2. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 3. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (rule subsetI, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A;\n        carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n        A +>\n        {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 2. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (thin_tac \"carrier A = \\<Inter>{H. A +> H \\<and> a \\<in> H}\",\n       thin_tac \"A +> {x. \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {x. \\<exists>n.\n  x = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n 2. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (subgoal_tac \"a = 1\\<triangleright>a\\<^bsub>A\\<^esub>\", blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; x \\<in> carrier A; aGroup A\\<rbrakk>\n       \\<Longrightarrow> a = 1\\<triangleright>a\\<^bsub>A\\<^esub>\n 2. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (simp add:sprod_n_a_def, simp add:ag_l_zero[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. aGroup A \\<and>\n    carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H} \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (fold ag_single_gen_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ag_single_gen A a \\<Longrightarrow>\n    {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n    \\<subseteq> carrier A", "apply (frule ag_single_inc_a [of  \"a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ag_single_gen A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> {g. \\<exists>n.\n                             g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n                      \\<subseteq> carrier A", "apply (unfold ag_single_gen_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aGroup A \\<and>\n             carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H};\n     a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> {g. \\<exists>n.\n                             g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n                      \\<subseteq> carrier A", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; aGroup A;\n     carrier A = \\<Inter> {H. A +> H \\<and> a \\<in> H}\\<rbrakk>\n    \\<Longrightarrow> {g. \\<exists>n.\n                             g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n                      \\<subseteq> carrier A", "apply (thin_tac \"carrier A = \\<Inter>{H. A +> H \\<and> a \\<in> H}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> {g. \\<exists>n.\n                             g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\n                      \\<subseteq> carrier A", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<in> carrier A; aGroup A;\n        \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier A", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x n.\n       \\<lbrakk>a \\<in> carrier A; aGroup A;\n        x = n\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier A", "apply (simp, simp add:nt_mem0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  single_gen_free :: \"[('a, 'm) aGroup_scheme, 'a] \\<Rightarrow> bool\" where\n  \"single_gen_free A a == \\<forall>n. n \\<noteq> 0 \\<longrightarrow> \\<zero>\\<^bsub>A\\<^esub> \\<noteq> n\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["", "definition\n  sfg :: \"[('a, 'm) aGroup_scheme, 'a] \\<Rightarrow> bool\" where\n  \"sfg A a \\<longleftrightarrow> ag_single_gen A a \\<and> single_gen_free A a\""], ["", "(** single free generated by a **)"], ["", "lemma (in aGroup) single_gen_free_neg:\"\\<lbrakk>sfg A a; n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\\<rbrakk> \\<Longrightarrow> n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> n = 0", "apply (simp add:sfg_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>;\n     ag_single_gen A a; single_gen_free A a\\<rbrakk>\n    \\<Longrightarrow> n = 0", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>;\n     ag_single_gen A a; single_gen_free A a; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:single_gen_free_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>;\n     ag_single_gen A a;\n     \\<forall>n.\n        n \\<noteq> 0 \\<longrightarrow>\n        \\<zero> \\<noteq> n\\<triangleright>a\\<^bsub>A\\<^esub>;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule_tac a = n in forall_spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>;\n     ag_single_gen A a; n \\<noteq> 0;\n     \\<zero> \\<noteq> n\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) sfg_G_inc_a:\"sfg A a \\<Longrightarrow> a \\<in> carrier A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow> a \\<in> carrier A", "apply (simp add:sfg_def ag_single_inc_a)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sfg_agroup:\"sfg A a \\<Longrightarrow> aGroup A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow> aGroup A", "apply (simp add:sfg_def ag_single_gen_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) mem_G_nt:\"\\<lbrakk>sfg A a; x \\<in> carrier A\\<rbrakk> \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; x \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:sfg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ag_single_gen A a \\<and> single_gen_free A a;\n     x \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier A; ag_single_gen A a;\n     single_gen_free A a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule single_gen [of  \"a\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier A; ag_single_gen A a; single_gen_free A a;\n     carrier A =\n     {g. \\<exists>n. g = n\\<triangleright>a\\<^bsub>A\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. x = n\\<triangleright>a\\<^bsub>A\\<^esub>", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_mem:\"sfg A a \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow>\n    n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (frule sfg_G_inc_a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (frule sfg_agroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A", "apply (simp add:nt_mem0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_zero:\"sfg A a \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>", "apply (frule sfg_G_inc_a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>", "apply (frule sfg_agroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> 0\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>", "apply (simp add:nt_zero0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_sum:\"sfg A a \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> = n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow>\n    (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n    n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n    m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule sfg_G_inc_a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule sfg_agroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> (n + m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_sum0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_inv:\"sfg A a \\<Longrightarrow> -\\<^sub>a(n\\<triangleright>a\\<^bsub>A\\<^esub>) = (- n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow>\n    -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n    (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule sfg_G_inc_a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule sfg_agroup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a n\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      (- n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_inv0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) nt_mult_assoc:\"sfg A a \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> = (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sfg A a \\<Longrightarrow>\n    m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n    (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule sfg_G_inc_a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (frule sfg_agroup )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> m\\<triangleright>n\\<triangleright>a\\<^bsub>A\\<^esub>\\<^bsub>A\\<^esub> =\n                      (m * n)\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (simp add:nt_mult_assoc0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) sfg_free:\"\\<lbrakk>sfg A a; n \\<noteq> m \\<rbrakk> \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<noteq> (m\\<triangleright>a\\<^bsub>A\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<noteq>\n                      m\\<triangleright>a\\<^bsub>A\\<^esub>", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule sfg_G_inc_a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule sfg_agroup )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule nt_mem [of  \"a\" \"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule nt_mem [of  \"a\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subgoal_tac \"n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus> (-\\<^sub>a (m\\<triangleright>a\\<^bsub>A\\<^esub>)) = \\<zero>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     \\<zero>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "apply (thin_tac \"n\\<triangleright>a\\<^bsub>A\\<^esub> = m\\<triangleright>a\\<^bsub>A\\<^esub>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m; a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     \\<zero>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "(*  remove this equation *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m; a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n     \\<zero>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "apply (simp add:nt_inv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m; a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n     (- m)\\<triangleright>a\\<^bsub>A\\<^esub> =\n     \\<zero>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "apply (simp add:nt_sum[THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m; a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     (n - m)\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "apply (frule single_gen_free_neg[of  \"a\" \"n - m\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m; a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     (n - m)\\<triangleright>a\\<^bsub>A\\<^esub> = \\<zero>; n - m = 0\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a; n \\<noteq> m;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     a \\<in> carrier A; aGroup A;\n     m\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> \\<in> carrier A\\<rbrakk>\n    \\<Longrightarrow> n\\<triangleright>a\\<^bsub>A\\<^esub> \\<plusminus>\n                      -\\<^sub>a m\\<triangleright>a\\<^bsub>A\\<^esub> =\n                      \\<zero>", "apply (simp add:ag_r_inv1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in aGroup) sfg_free_inj:\"\\<lbrakk>sfg A a; n\\<triangleright>a\\<^bsub>A\\<^esub> = (m\\<triangleright>a\\<^bsub>A\\<^esub>) \\<rbrakk> \\<Longrightarrow> n = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> n = m", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sfg A a;\n     n\\<triangleright>a\\<^bsub>A\\<^esub> =\n     m\\<triangleright>a\\<^bsub>A\\<^esub>;\n     n \\<noteq> m\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:sfg_free)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Free Generated Modules (constructive)\""], ["", "definition\n  sop_one::\"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> bool\" where\n  \"sop_one R s A \\<longleftrightarrow> (\\<forall>x\\<in>A. (1\\<^sub>r\\<^bsub>R\\<^esub>) \\<^sub>s\\<cdot> x = x)\""], ["", "definition\n  sop_assoc :: \"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set] \\<Rightarrow> bool\" where\n  \"sop_assoc R s A \\<longleftrightarrow> (\\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \\<forall>x\\<in>A.\n                         (a \\<cdot>\\<^sub>r\\<^bsub>R\\<^esub> b) \\<^sub>s\\<cdot> x = a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x))\""], ["", "definition\n  sop_inv :: \"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a, 'a set] \n      \\<Rightarrow> bool\" where\n  \"sop_inv R s i A \\<longleftrightarrow> (\\<forall>r\\<in>carrier R. \\<forall>x\\<in>A. r \\<^sub>s\\<cdot> (\\<^sub>i- x) = (-\\<^sub>a\\<^bsub>R\\<^esub> r) \\<^sub>s\\<cdot> x)\""], ["", "definition\n  sop_distr1 :: \"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a,\n    'a \\<Rightarrow> 'a, 'a set, 'a] \\<Rightarrow> bool\" where\n  \"sop_distr1 R s f i A z \\<longleftrightarrow> (\\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n          \\<forall>x\\<in>(aug_pm_set z i A). (a \\<plusminus>\\<^bsub>R\\<^esub> b) \\<^sub>s\\<cdot> x = (a \\<^sub>s\\<cdot> x) \\<^sub>f+ (b \\<^sub>s\\<cdot> x))\""], ["", "definition\n  sop_distr2 :: \"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, \n                'a \\<Rightarrow> 'a, 'a set, 'a] \\<Rightarrow> bool\" where\n  \"sop_distr2 R s f i A z \\<longleftrightarrow> (\\<forall>a\\<in>carrier R. \n         \\<forall>x\\<in>addition_set f (aug_pm_set z i A). \n           \\<forall>y\\<in>addition_set f (aug_pm_set z i A). \n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) = (a \\<^sub>s\\<cdot> x) \\<^sub>f+ (a \\<^sub>s\\<cdot> y))\""], ["", "definition\n  sop_z :: \"[('r, 'm) Ring_scheme, 'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a] \\<Rightarrow> bool\" where\n  \"sop_z R s z \\<longleftrightarrow> (\\<forall>r\\<in>carrier R. r \\<^sub>s\\<cdot> z = z)\""], ["", "definition\n  fgmodule :: \"[('r, 'm) Ring_scheme, 'a set, 'a, 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, \n      'r \\<Rightarrow> 'a \\<Rightarrow> 'a] \\<Rightarrow> ('a, 'r) Module\" where\n  \"fgmodule R A z i f s =\n     \\<lparr>carrier = addition_set f (aug_pm_set z i (s_set R s A)), \n       pop = \\<lambda>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). \n               \\<lambda>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)). x \\<^sub>f+ y, \n       mop = \\<lambda>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). \\<^sub>i- x, \n       zero = z, \n       sprod = \\<lambda>r\\<in>carrier R. \n                 \\<lambda>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). r \\<^sub>s\\<cdot> x \\<rparr>\""], ["", "lemma fgmodule_carr:\"carrier (fgmodule R A z i f s) = \n             addition_set f (aug_pm_set z i (s_set R s A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (fgmodule R A z i f s) =\n    addition_set f (aug_pm_set z i (s_set R s A))", "by (simp add:fgmodule_def)"], ["", "lemma a_in_s_set:\"a \\<in> A \\<Longrightarrow> a \\<in> s_set R s A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> a \\<in> s_set R s A", "by (simp add:s_set_def)"], ["", "lemma (in Ring) ra_in_s_set:\"\\<lbrakk>r \\<in> carrier R; a \\<in> A\\<rbrakk> \\<Longrightarrow> r \\<^sub>s\\<cdot> a \\<in> s_set R s A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> carrier R; a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> a \\<in> s_set R s A", "by (simp add:s_set_def, blast)"], ["", "lemma in_aug_pm_set:\n       \"x \\<in> aug_pm_set z i A = (x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> aug_pm_set z i A) =\n    (x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A)", "by (simp add:aug_pm_set_def)"], ["", "lemma (in Ring) in_s_set:\"x \\<in> s_set R s A \\<Longrightarrow> (\\<exists>r \\<in> carrier R. \\<exists>a \\<in> A. \n      x = r \\<^sub>s\\<cdot> a ) \\<or> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> s_set R s A \\<Longrightarrow>\n    (\\<exists>r\\<in>carrier R.\n        \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n    x \\<in> A", "by (simp add:s_set_def)"], ["", "lemma (in Ring) sop_closedTr0:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n       ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n       inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n       sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n       sop_inv R s i (s_set R s A); \n       sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;  \n       r \\<in> carrier R; x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk> \\<Longrightarrow> \n                        r \\<^sub>s\\<cdot> x \\<in> aug_pm_set z i (s_set R s A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R; x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x \\<in> aug_pm_set z i (s_set R s A)", "apply (simp add:in_aug_pm_set)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A)\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (case_tac \"x = z\", simp, simp add:sop_z_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (case_tac \"x \\<in> s_set R s A\", simp add:s_set_def, fold s_set_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z;\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      (\\<exists>ra\\<in>carrier R.\n                          \\<exists>a\\<in>A.\n                             r \\<^sub>s\\<cdot> x =\n                             ra \\<^sub>s\\<cdot> a) \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (case_tac \"x \\<in> A\", simp, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z;\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A;\n     x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      (\\<exists>ra\\<in>carrier R.\n                          \\<exists>a\\<in>A.\n                             r \\<^sub>s\\<cdot> x =\n                             ra \\<^sub>s\\<cdot> a) \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R; x \\<noteq> z;\n     \\<exists>r\\<in>carrier R. \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a;\n     x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      (\\<exists>ra\\<in>carrier R.\n                          \\<exists>a\\<in>A.\n                             r \\<^sub>s\\<cdot> x =\n                             ra \\<^sub>s\\<cdot> a) \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<noteq> z;\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        x = ra \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) = z \\<or>\n                         (\\<exists>rb\\<in>carrier R.\n                             \\<exists>aa\\<in>A.\n                                r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                                rb \\<^sub>s\\<cdot> aa) \\<or>\n                         r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> A \\<or>\n                         r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (simp add:sop_assoc_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x);\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<noteq> z;\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        x = ra \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) = z \\<or>\n                         (\\<exists>rb\\<in>carrier R.\n                             \\<exists>aa\\<in>A.\n                                r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                                rb \\<^sub>s\\<cdot> aa) \\<or>\n                         r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> A \\<or>\n                         r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (drule_tac x = r in bspec, assumption,\n        drule_tac x = ra in bspec, assumption,\n        frule_tac x = a in bspec,\n        subst in_aug_pm_set, simp add:a_in_s_set)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<noteq> z;\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        x = ra \\<^sub>s\\<cdot> a;\n        \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n           r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> x =\n           r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> x);\n        r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a =\n        r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) = z \\<or>\n                         (\\<exists>rb\\<in>carrier R.\n                             \\<exists>aa\\<in>A.\n                                r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                                rb \\<^sub>s\\<cdot> aa) \\<or>\n                         r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> A \\<or>\n                         r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (rotate_tac -1, frule sym, thin_tac \"r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a = r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\",\n        simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<noteq> z;\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        x = ra \\<^sub>s\\<cdot> a;\n        \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n           r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> x =\n           r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> x);\n        r \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n        r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a = z \\<or>\n                         (\\<exists>rb\\<in>carrier R.\n                             \\<exists>aa\\<in>A.\n                                r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a =\n                                rb \\<^sub>s\\<cdot> aa) \\<or>\n                         r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a\n                         \\<in> A \\<or>\n                         r \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a\n                         \\<in> minus_set i (s_set R s A)\n 2. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (frule_tac x = r and y = ra in ring_tOp_closed, assumption+, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R;\n     x = z \\<or>\n     x \\<in> s_set R s A \\<or> x \\<in> minus_set i (s_set R s A);\n     x \\<noteq> z; x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R; x \\<in> minus_set i (s_set R s A); x \\<noteq> z;\n     x \\<notin> s_set R s A\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (thin_tac \"x \\<noteq> z\", thin_tac \"x \\<notin> s_set R s A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     r \\<in> carrier R; x \\<in> minus_set i (s_set R s A)\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x = z \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> s_set R s A \\<or>\n                      r \\<^sub>s\\<cdot> x \\<in> minus_set i (s_set R s A)", "apply (simp add:minus_set_def, erule bexE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> (\\<^sub>i- y) = z \\<or>\n                         r \\<^sub>s\\<cdot> (\\<^sub>i- y)\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             r \\<^sub>s\\<cdot> (\\<^sub>i- y) = \\<^sub>i- ya)", "apply (simp add:sop_inv_def[of R s i \"s_set R s A\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> y = z \\<or>\n                         (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             (-\\<^sub>a r) \\<^sub>s\\<cdot> y = \\<^sub>i- ya)", "apply (cut_tac ring_is_ag,\n        frule_tac x = r in aGroup.ag_mOp_closed[of R], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y; aGroup R;\n        -\\<^sub>a r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> y = z \\<or>\n                         (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             (-\\<^sub>a r) \\<^sub>s\\<cdot> y = \\<^sub>i- ya)", "apply (frule_tac a = y in ra_in_s_set[of \"-\\<^sub>a r\" _ \"s_set R s A\" s],\n         assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n        \\<in> s_set R s (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> y = z \\<or>\n                         (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             (-\\<^sub>a r) \\<^sub>s\\<cdot> y = \\<^sub>i- ya)", "apply (frule_tac x = y in in_s_set[of _ s \"A\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> y \\<in> s_set R s (s_set R s A);\n        (\\<exists>r\\<in>carrier R.\n            \\<exists>a\\<in>A. y = r \\<^sub>s\\<cdot> a) \\<or>\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> y = z \\<or>\n                         (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             (-\\<^sub>a r) \\<^sub>s\\<cdot> y = \\<^sub>i- ya)", "apply (case_tac \"y \\<in> A\", simp, simp add:ra_in_s_set)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> y \\<in> s_set R s (s_set R s A);\n        (\\<exists>r\\<in>carrier R.\n            \\<exists>a\\<in>A. y = r \\<^sub>s\\<cdot> a) \\<or>\n        y \\<in> A;\n        y \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> y = z \\<or>\n                         (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             (-\\<^sub>a r) \\<^sub>s\\<cdot> y = \\<^sub>i- ya)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y \\<in> s_set R s A; x = \\<^sub>i- y; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> y \\<in> s_set R s (s_set R s A);\n        \\<exists>r\\<in>carrier R. \\<exists>a\\<in>A. y = r \\<^sub>s\\<cdot> a;\n        y \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> y = z \\<or>\n                         (-\\<^sub>a r) \\<^sub>s\\<cdot> y\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>ya\\<in>s_set R s A.\n                             (-\\<^sub>a r) \\<^sub>s\\<cdot> y = \\<^sub>i- ya)", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<in> s_set R s A;\n        x = \\<^sub>i- ra \\<^sub>s\\<cdot> a; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n        \\<in> s_set R s (s_set R s A);\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        y = ra \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r)\n                            \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                         z \\<or>\n                         (-\\<^sub>a r)\n                            \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>y\\<in>s_set R s A.\n                             (-\\<^sub>a r)\n                                \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                             \\<^sub>i- y)", "apply (simp add:sop_assoc_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x);\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>s_set R s A.\n              r \\<^sub>s\\<cdot> (\\<^sub>i- x) =\n              (-\\<^sub>a r) \\<^sub>s\\<cdot> x;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<in> s_set R s A;\n        x = \\<^sub>i- ra \\<^sub>s\\<cdot> a; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n        \\<in> s_set R s (s_set R s A);\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        y = ra \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r)\n                            \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                         z \\<or>\n                         (-\\<^sub>a r)\n                            \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>y\\<in>s_set R s A.\n                             (-\\<^sub>a r)\n                                \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                             \\<^sub>i- y)", "apply (drule_tac x = \"-\\<^sub>a r\" in bspec, assumption,\n        thin_tac \"\\<forall>r\\<in>carrier R. \\<forall>x\\<in>s_set R s A. r \\<^sub>s\\<cdot> (\\<^sub>i- x) = (-\\<^sub>a r) \\<^sub>s\\<cdot> x\",\n        drule_tac x = ra in bspec, assumption,\n        drule_tac x = a in bspec,\n                simp add:aug_pm_set_def, simp add:a_in_s_set)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y ra a.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; ra \\<^sub>s\\<cdot> a \\<in> s_set R s A;\n        x = \\<^sub>i- ra \\<^sub>s\\<cdot> a; aGroup R;\n        -\\<^sub>a r \\<in> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n        \\<in> s_set R s (s_set R s A);\n        ra \\<^sub>s\\<cdot> a \\<notin> A; ra \\<in> carrier R; a \\<in> A;\n        y = ra \\<^sub>s\\<cdot> a;\n        (-\\<^sub>a r) \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a =\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r)\n                            \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                         z \\<or>\n                         (-\\<^sub>a r)\n                            \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\n                         \\<in> s_set R s A \\<or>\n                         (\\<exists>y\\<in>s_set R s A.\n                             (-\\<^sub>a r)\n                                \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a) =\n                             \\<^sub>i- y)", "apply (rotate_tac -1, frule sym, \n              thin_tac \"(-\\<^sub>a r) \\<cdot>\\<^sub>r ra \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> (ra \\<^sub>s\\<cdot> a)\", simp,\n        frule_tac x = \"-\\<^sub>a r\" and y = ra in ring_tOp_closed, assumption,\n              simp add:ra_in_s_set)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_closedTr:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n    ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n        sop_inv R s i (s_set R s A); \n         sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk> \\<Longrightarrow>\n    \\<forall>r\\<in>carrier R. \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n. \n                  r \\<^sub>s\\<cdot> x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                         \\<forall>x\\<in>add_set f\n   (aug_pm_set z i (s_set R s A)) n.\n                            r \\<^sub>s\\<cdot> x\n                            \\<in> add_set f (aug_pm_set z i (s_set R s A)) n", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                         \\<forall>x\\<in>add_set f\n   (aug_pm_set z i (s_set R s A)) 0.\n                            r \\<^sub>s\\<cdot> x\n                            \\<in> add_set f (aug_pm_set z i (s_set R s A)) 0\n 2. \\<And>n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                            \\<forall>x\\<in>add_set f\n      (aug_pm_set z i (s_set R s A)) (Suc n).\n                               r \\<^sub>s\\<cdot> x\n                               \\<in> add_set f\n(aug_pm_set z i (s_set R s A)) (Suc n)", "apply (simp, (rule ballI)+, simp add:sop_closedTr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                            \\<forall>x\\<in>add_set f\n      (aug_pm_set z i (s_set R s A)) (Suc n).\n                               r \\<^sub>s\\<cdot> x\n                               \\<in> add_set f\n(aug_pm_set z i (s_set R s A)) (Suc n)", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n r x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                         \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                                (Suc n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n r x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        \\<exists>sa\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n              x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f\n    (aug_pm_set z i (s_set R s A)) n.\n                            \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n                               r \\<^sub>s\\<cdot> x = sa \\<^sub>f+ t", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f\n    (aug_pm_set z i (s_set R s A)) n.\n                            \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n                               r \\<^sub>s\\<cdot> x = sa \\<^sub>f+ t", "apply (frule_tac r = r and x = t in sop_closedTr0 [of s A i z f], \n         assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f\n    (aug_pm_set z i (s_set R s A)) n.\n                            \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n                               r \\<^sub>s\\<cdot> x = sa \\<^sub>f+ t", "apply (subgoal_tac \"sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f\n    (aug_pm_set z i (s_set R s A)) n.\n                            \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n                               r \\<^sub>s\\<cdot> x = sa \\<^sub>f+ t\n 2. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (subgoal_tac \"t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa\\<in>add_set f\n    (aug_pm_set z i (s_set R s A)) n.\n                            \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n                               r \\<^sub>s\\<cdot> x = sa \\<^sub>f+ t\n 2. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))\n 3. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (simp add:sop_distr2_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sb\\<in>add_set f\n    (aug_pm_set z i (s_set R s A)) n.\n                            \\<exists>ta\\<in>aug_pm_set z i (s_set R s A).\n                               r \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                  r \\<^sub>s\\<cdot> t =\n                               sb \\<^sub>f+ ta\n 2. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))\n 3. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))\n 2. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (cut_tac addition_inc_add0[of \"aug_pm_set z i (s_set R s A)\" f])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))\n 2. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (simp add:subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (cut_tac n = n in addition_inc_add[of f\n                                         \"aug_pm_set z i (s_set R s A)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n r x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        r \\<^sub>s\\<cdot> t \\<in> aug_pm_set z i (s_set R s A);\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_closed:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n      inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n       sop_distr2 R s f i (s_set R s A) z; \n        sop_assoc R s (aug_pm_set z i (s_set R s A)); \n         sop_inv R s i (s_set R s A); \n          sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk> \\<Longrightarrow>\n     \\<forall>r\\<in>carrier R. \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). \n          r \\<^sub>s\\<cdot> x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                         \\<forall>x\\<in>addition_set f\n   (aug_pm_set z i (s_set R s A)).\n                            r \\<^sub>s\\<cdot> x\n                            \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (subst addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                         \\<forall>x\\<in>\\<Union>\n   {add_set f (aug_pm_set z i (s_set R s A)) n |n. 0 \\<le> n}.\n                            r \\<^sub>s\\<cdot> x\n                            \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>carrier R.\n                         \\<forall>y.\n                            (\\<exists>n.\n                                y =\n                                add_set f (aug_pm_set z i (s_set R s A))\n                                 n) \\<longrightarrow>\n                            (\\<forall>x\\<in>y.\n                                r \\<^sub>s\\<cdot> x\n                                \\<in> addition_set f\n (aug_pm_set z i (s_set R s A)))", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<forall>y.\n                            (\\<exists>n.\n                                y =\n                                add_set f (aug_pm_set z i (s_set R s A))\n                                 n) \\<longrightarrow>\n                            (\\<forall>x\\<in>y.\n                                r \\<^sub>s\\<cdot> x\n                                \\<in> addition_set f\n (aug_pm_set z i (s_set R s A)))", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>n.\n                             y =\n                             add_set f (aug_pm_set z i (s_set R s A))\n                              n) \\<longrightarrow>\n                         (\\<forall>x\\<in>y.\n                             r \\<^sub>s\\<cdot> x\n                             \\<in> addition_set f\n                                    (aug_pm_set z i (s_set R s A)))", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R;\n        \\<exists>n. y = add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>y.\n                            r \\<^sub>s\\<cdot> x\n                            \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R;\n        y = add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>y.\n                            r \\<^sub>s\\<cdot> x\n                            \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y n x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y = add_set f (aug_pm_set z i (s_set R s A)) n;\n        x \\<in> y\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                         \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y n x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R; y = add_set f (aug_pm_set z i (s_set R s A)) n;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                         \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply (thin_tac \"y = add_set f (aug_pm_set z i (s_set R s A)) n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y n x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                         \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply (frule_tac n = n in sop_closedTr[of s A i z f], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y n x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n              r \\<^sub>s\\<cdot> x\n              \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                         \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply (drule_tac x = r in bspec, assumption,\n        drule_tac x = x in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r y n x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        r \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        r \\<^sub>s\\<cdot> x\n        \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                         \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply (cut_tac n = n in addition_inc_add [of f\n                                  \"aug_pm_set z i (s_set R s A)\"],\n        simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_oneTr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n  assoc_bpp (aug_pm_set z i (s_set R s A)) f; \n   ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f; \n    ipp_cond3 z i; inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n     sop_distr2 R s f i (s_set R s A) z; \n      sop_assoc R s (aug_pm_set z i (s_set R s A)); \n       sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>  \\<Longrightarrow> \n   \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.  (1\\<^sub>r) \\<^sub>s\\<cdot> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>add_set f\n(aug_pm_set z i (s_set R s A)) n.\n                         1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>add_set f\n(aug_pm_set z i (s_set R s A)) 0.\n                         1\\<^sub>r \\<^sub>s\\<cdot> x = x\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>add_set f\n   (aug_pm_set z i (s_set R s A)) (Suc n).\n                            1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (rule ballI, simp, simp add:sop_one_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>add_set f\n   (aug_pm_set z i (s_set R s A)) (Suc n).\n                            1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (simp, (erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> (sa \\<^sub>f+ t) =\n                         sa \\<^sub>f+ t", "apply (subgoal_tac \"t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> (sa \\<^sub>f+ t) =\n                         sa \\<^sub>f+ t\n 2. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))", "apply (subgoal_tac \"sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> (sa \\<^sub>f+ t) =\n                         sa \\<^sub>f+ t\n 2. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))\n 3. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))", "apply (cut_tac ring_one)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> (sa \\<^sub>f+ t) =\n                         sa \\<^sub>f+ t\n 2. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))\n 3. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))", "apply (simp add:sop_distr2_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ 1\\<^sub>r \\<^sub>s\\<cdot> t =\n                         sa \\<^sub>f+ t\n 2. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))\n 3. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))", "apply (thin_tac \"\\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n. (1\\<^sub>r) \\<^sub>s\\<cdot> x \n                       = x\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ 1\\<^sub>r \\<^sub>s\\<cdot> t =\n                         sa \\<^sub>f+ t\n 2. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))\n 3. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))", "apply (simp add:sop_one_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<in> addition_set f\n                                   (aug_pm_set z i (s_set R s A))\n 2. \\<And>n x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           1\\<^sub>r \\<^sub>s\\<cdot> x = x;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> addition_set f\n                                  (aug_pm_set z i (s_set R s A))", "apply (cut_tac n = n in addition_inc_add[of f\n                     \"aug_pm_set z i (s_set R s A)\"], simp add:subsetD,\n        cut_tac addition_inc_add0[of \"aug_pm_set z i (s_set R s A)\" f],\n                           simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_one:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n   assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i; \n    ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n        sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>  \\<Longrightarrow> \n   \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)). (1\\<^sub>r) \\<^sub>s\\<cdot> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>addition_set f\n(aug_pm_set z i (s_set R s A)).\n                         1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        \\<exists>xa.\n           (\\<exists>n.\n               xa = add_set f (aug_pm_set z i (s_set R s A)) n) \\<and>\n           x \\<in> xa\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (erule exE, erule conjE, erule exE, simp,\n       thin_tac \"xa = add_set f (aug_pm_set z i (s_set R s A)) n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_one R s (aug_pm_set z i (s_set R s A));\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> x = x", "apply (simp add:sop_oneTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_assocTr:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n      ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n      inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n      sop_assoc R s (aug_pm_set z i (s_set R s A)); \n      sop_inv R s i (s_set R s A); \n      sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>  \\<Longrightarrow>\n     \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n      \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.  \n                         a \\<^sub>s\\<cdot> ( b \\<^sub>s\\<cdot> x) = (a \\<cdot>\\<^sub>r b) \\<^sub>s\\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>b\\<in>carrier R.\n                            \\<forall>x\\<in>add_set f\n      (aug_pm_set z i (s_set R s A)) n.\n                               a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                               a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>b\\<in>carrier R.\n                            \\<forall>x\\<in>add_set f\n      (aug_pm_set z i (s_set R s A)) 0.\n                               a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                               a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x\n 2. \\<And>n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                            \\<forall>b\\<in>carrier R.\n                               \\<forall>x\n  \\<in>add_set f (aug_pm_set z i (s_set R s A)) (Suc n).\n                                  a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                                  a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (rule ballI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) 0\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x\n 2. \\<And>n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                            \\<forall>b\\<in>carrier R.\n                               \\<forall>x\n  \\<in>add_set f (aug_pm_set z i (s_set R s A)) (Suc n).\n                                  a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                                  a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (simp add:sop_assoc_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                            \\<forall>b\\<in>carrier R.\n                               \\<forall>x\n  \\<in>add_set f (aug_pm_set z i (s_set R s A)) (Suc n).\n                                  a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                                  a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        \\<exists>sa\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n              x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                 a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (drule_tac x = a in bspec, assumption,\n        drule_tac x = b in bspec, assumption,\n        drule_tac x = sa in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b\n         \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)) =\n                         a \\<cdot>\\<^sub>r b\n                            \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)", "apply (cut_tac n = n in addition_inc_add[of f\n                     \"aug_pm_set z i (s_set R s A)\"],\n        cut_tac addition_inc_add0[of \"aug_pm_set z i (s_set R s A)\" f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b\n         \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)) =\n                         a \\<cdot>\\<^sub>r b\n                            \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)", "apply (frule_tac c = sa and A = \"add_set f (aug_pm_set z i (s_set R s A)) n\"\n         in subsetD[of _ \"addition_set f (aug_pm_set z i (s_set R s A))\"],\n         assumption+,\n        frule_tac c = t in subsetD[of \"aug_pm_set z i (s_set R s A)\"\n         \"addition_set f (aug_pm_set z i (s_set R s A))\"], assumption+,\n        frule_tac x = a and y = b in  ring_tOp_closed, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b\n         \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)) =\n                         a \\<cdot>\\<^sub>r b\n                            \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)", "apply (simp add:sop_distr2_def[of R s f i \"s_set R s A\" z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n         b \\<^sub>s\\<cdot> t) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> t", "apply (frule sop_closed[of s A i z f], assumption+, simp add:sop_distr2_def,\n        assumption+, rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>\\<forall>r\\<in>carrier R.\n                   \\<forall>x\\<in>addition_set f\n                                   (aug_pm_set z i (s_set R s A)).\n                      r \\<^sub>s\\<cdot> x\n                      \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n         b \\<^sub>s\\<cdot> t) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> t", "apply (drule_tac x = b in bspec, assumption,\n        rotate_tac -1,\n        frule_tac x = sa in bspec, assumption,\n        drule_tac x = t in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n         b \\<^sub>s\\<cdot> t) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> t", "apply (simp, \n        thin_tac \"\\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) = a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> sa) =\n        a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> t) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> t", "apply (simp add:sop_assoc_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_assoc:\"\\<lbrakk>ipp_cond1 (s_set R s A) i; \n    ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n      sop_distr2 R s f i (s_set R s A) z; \n       sop_assoc R s (aug_pm_set z i (s_set R s A)); \n        sop_inv R s i (s_set R s A); sop_z R s z; \n         sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk> \\<Longrightarrow> \n   \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n      \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).  \n                           a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) = ( a \\<cdot>\\<^sub>r b) \\<^sub>s\\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n     ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n     zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A); sop_z R s z;\n     sop_one R s (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>b\\<in>carrier R.\n                            \\<forall>x\\<in>addition_set f\n      (aug_pm_set z i (s_set R s A)).\n                               a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                               a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A); sop_z R s z;\n        sop_one R s (aug_pm_set z i (s_set R s A)); a \\<in> carrier R;\n        b \\<in> carrier R;\n        x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A); sop_z R s z;\n        sop_one R s (aug_pm_set z i (s_set R s A)); a \\<in> carrier R;\n        b \\<in> carrier R;\n        \\<exists>xa.\n           (\\<exists>n.\n               xa = add_set f (aug_pm_set z i (s_set R s A)) n) \\<and>\n           x \\<in> xa\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (erule exE, erule conjE, erule exE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x xa n.\n       \\<lbrakk>ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A); sop_z R s z;\n        sop_one R s (aug_pm_set z i (s_set R s A)); a \\<in> carrier R;\n        b \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        xa = add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> x) =\n                         a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> x", "apply (simp add:sop_assocTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) s_set_commute:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n       x \\<in> addition_set f (aug_pm_set z i (s_set R s A)); \n        y \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk> \\<Longrightarrow>\n               x \\<^sub>f+ y = y \\<^sub>f+ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     x \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n     y \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> x \\<^sub>f+ y = y \\<^sub>f+ x", "apply (simp add:commute_bpp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) add_s_set_inc_add_set:\"\n      add_set f (aug_pm_set z i A) n \\<subseteq> \n             add_set f (aug_pm_set z i (s_set R s A)) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_set f (aug_pm_set z i A) n\n    \\<subseteq> add_set f (aug_pm_set z i (s_set R s A)) n", "apply (rule add_set_mono[of \"aug_pm_set z i A\" \n                            \"aug_pm_set z i (s_set R s A)\" f n])"], ["proof (prove)\ngoal (1 subgoal):\n 1. aug_pm_set z i A \\<subseteq> aug_pm_set z i (s_set R s A)", "apply (rule subsetI, simp add:aug_pm_set_def s_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A \\<Longrightarrow>\n       x = z \\<or>\n       (\\<exists>r\\<in>carrier R.\n           \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n       x \\<in> A \\<or>\n       x \\<in> minus_set i\n                ({x. \\<exists>r\\<in>carrier R.\n                        \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                 A)", "apply (case_tac \"x = z\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A;\n        x \\<noteq> z\\<rbrakk>\n       \\<Longrightarrow> x = z \\<or>\n                         (\\<exists>r\\<in>carrier R.\n                             \\<exists>a\\<in>A.\n                                x = r \\<^sub>s\\<cdot> a) \\<or>\n                         x \\<in> A \\<or>\n                         x \\<in> minus_set i\n                                  ({x. \\<exists>r\\<in>carrier R.\n    \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                                   A)", "apply (case_tac \"x \\<in> A\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x = z \\<or> x \\<in> A \\<or> x \\<in> minus_set i A;\n        x \\<noteq> z; x \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> x = z \\<or>\n                         (\\<exists>r\\<in>carrier R.\n                             \\<exists>a\\<in>A.\n                                x = r \\<^sub>s\\<cdot> a) \\<or>\n                         x \\<in> A \\<or>\n                         x \\<in> minus_set i\n                                  ({x. \\<exists>r\\<in>carrier R.\n    \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                                   A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> minus_set i A; x \\<noteq> z; x \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r\\<in>carrier R.\n                             \\<exists>a\\<in>A.\n                                x = r \\<^sub>s\\<cdot> a) \\<or>\n                         x \\<in> minus_set i\n                                  ({x. \\<exists>r\\<in>carrier R.\n    \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                                   A)", "apply (simp add:minus_set_def, erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<noteq> z; x \\<notin> A; y \\<in> A;\n        x = \\<^sub>i- y\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r\\<in>carrier R.\n                             \\<exists>a\\<in>A.\n                                x = r \\<^sub>s\\<cdot> a) \\<or>\n                         (\\<exists>y\\<in>{x.\n    \\<exists>r\\<in>carrier R.\n       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n   A.\n                             x = \\<^sub>i- y)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_distr1Tr:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n    assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n      inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n       sop_distr1 R s f i (s_set R s A) z; \n        sop_distr2 R s f i (s_set R s A) z; \n         sop_assoc R s (aug_pm_set z i (s_set R s A)); \n          sop_inv R s i (s_set R s A); \n           sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>  \\<Longrightarrow> \n \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \\<forall>x\\<in> add_set f (aug_pm_set z i (s_set R s A)) n.\n          (a \\<plusminus> b) \\<^sub>s\\<cdot> x = a \\<^sub>s\\<cdot> x \\<^sub>f+ (b \\<^sub>s\\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>b\\<in>carrier R.\n                            \\<forall>x\\<in>add_set f\n      (aug_pm_set z i (s_set R s A)) n.\n                               (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                               a \\<^sub>s\\<cdot> x \\<^sub>f+\n                                  b \\<^sub>s\\<cdot> x", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>b\\<in>carrier R.\n                            \\<forall>x\\<in>add_set f\n      (aug_pm_set z i (s_set R s A)) 0.\n                               (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                               a \\<^sub>s\\<cdot> x \\<^sub>f+\n                                  b \\<^sub>s\\<cdot> x\n 2. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                            \\<forall>b\\<in>carrier R.\n                               \\<forall>x\n  \\<in>add_set f (aug_pm_set z i (s_set R s A)) (Suc n).\n                                  (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                                  a \\<^sub>s\\<cdot> x \\<^sub>f+\n                                     b \\<^sub>s\\<cdot> x", "apply ((rule ballI)+, simp add:sop_distr1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                            \\<forall>b\\<in>carrier R.\n                               \\<forall>x\n  \\<in>add_set f (aug_pm_set z i (s_set R s A)) (Suc n).\n                                  (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                                  a \\<^sub>s\\<cdot> x \\<^sub>f+\n                                     b \\<^sub>s\\<cdot> x", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        \\<exists>sa\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n              x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (cut_tac ring_is_ag,\n        frule_tac x = a and y = b in aGroup.ag_pOp_closed [of \"R\"], \n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (cut_tac n = n in addition_inc_add[of f\n                     \"aug_pm_set z i (s_set R s A)\"],\n        cut_tac addition_inc_add0[of \"aug_pm_set z i (s_set R s A)\" f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (frule_tac c = sa and A = \"add_set f (aug_pm_set z i (s_set R s A)) n\"\n         in subsetD[of _ \"addition_set f (aug_pm_set z i (s_set R s A))\"],\n         assumption+,\n        frule_tac c = t in subsetD[of \"aug_pm_set z i (s_set R s A)\"\n         \"addition_set f (aug_pm_set z i (s_set R s A))\"], assumption+,\n        frule_tac x = a and y = b in  ring_tOp_closed, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b)\n                            \\<^sub>s\\<cdot> (sa \\<^sub>f+ t) =\n                         a \\<^sub>s\\<cdot> (sa \\<^sub>f+ t) \\<^sub>f+\n                            b \\<^sub>s\\<cdot> (sa \\<^sub>f+ t)", "apply (simp add:sop_distr2_def sop_distr1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> sa\n                            \\<^sub>f+\n                            (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (frule sop_closed[of s A i z f], assumption+,\n        simp add:sop_distr2_def, simp add:sop_assoc_def, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        \\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              r \\<^sub>s\\<cdot> x\n              \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> sa\n                            \\<^sub>f+\n                            (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (rotate_tac -1,\n        frule_tac x = a in bspec, assumption,\n        rotate_tac -1,\n        frule_tac x = sa in bspec, assumption,\n        drule_tac x = t in bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>\\<forall>r\\<in>carrier R.\n                   \\<forall>x\\<in>addition_set f\n                                   (aug_pm_set z i (s_set R s A)).\n                      r \\<^sub>s\\<cdot> x\n                      \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        a \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> sa\n                            \\<^sub>f+\n                            (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (frule_tac x = b in bspec, assumption,\n        rotate_tac -1,\n        frule_tac x = sa in bspec, assumption,\n        drule_tac x = t in bspec, assumption, \n        thin_tac \"\\<forall>r\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              r \\<^sub>s\\<cdot> x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        a \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> sa\n                            \\<^sub>f+\n                            (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (frule_tac x = \"a \\<^sub>s\\<cdot> t\" and y = \"b \\<^sub>s\\<cdot> t\" in \n       bpp_closed [of \"(aug_pm_set z i (s_set R s A))\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        a \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> sa\n                            \\<^sub>f+\n                            (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (subst addition_assoc, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        a \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                    b \\<^sub>s\\<cdot> t)) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (frule_tac ?x1 = \"b \\<^sub>s\\<cdot> sa\" and  ?y1 = \"a \\<^sub>s\\<cdot> t\" and ?z1 = \"b \\<^sub>s\\<cdot> t\" in\n          addition_assoc[THEN sym, of \"aug_pm_set z i (s_set R s A)\" f],\n          assumption+, simp,\n        thin_tac \"b \\<^sub>s\\<cdot> sa \\<^sub>f+ (a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> t) = b \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        a \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                a \\<^sub>s\\<cdot> t\n                                \\<^sub>f+ b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (frule_tac x = \"b \\<^sub>s\\<cdot> sa\" and y = \"a \\<^sub>s\\<cdot> t\" in \n           s_set_commute[of f z i s A], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n a b x sa t.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>aug_pm_set z i (s_set R s A).\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n              \\<forall>y\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n                 a \\<^sub>s\\<cdot> (x \\<^sub>f+ y) =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ a \\<^sub>s\\<cdot> y;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        \\<forall>a\\<in>carrier R.\n           \\<forall>b\\<in>carrier R.\n              \\<forall>x\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n                 (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                 a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x;\n        a \\<in> carrier R; b \\<in> carrier R;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t; aGroup R;\n        a \\<plusminus> b \\<in> carrier R;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R;\n        a \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> sa\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> t\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        b \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t =\n        a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> sa\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> sa \\<^sub>f+\n                            (a \\<^sub>s\\<cdot> t \\<^sub>f+\n                                b \\<^sub>s\\<cdot> sa\n                                \\<^sub>f+ b \\<^sub>s\\<cdot> t) =\n                         a \\<^sub>s\\<cdot> sa \\<^sub>f+ a \\<^sub>s\\<cdot> t\n                            \\<^sub>f+\n                            (b \\<^sub>s\\<cdot> sa \\<^sub>f+\n                                b \\<^sub>s\\<cdot> t)", "apply (frule_tac x = \"a \\<^sub>s\\<cdot> t\" and y = \"b \\<^sub>s\\<cdot> sa\" and z = \"b \\<^sub>s\\<cdot> t\" in\n          addition_assoc[of \"aug_pm_set z i (s_set R s A)\" f],\n          assumption+, simp,\n        thin_tac \"a \\<^sub>s\\<cdot> t \\<^sub>f+ b \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> t = a \\<^sub>s\\<cdot> t \\<^sub>f+ (b \\<^sub>s\\<cdot> sa \\<^sub>f+ b \\<^sub>s\\<cdot> t)\",\n        frule_tac x = \"b \\<^sub>s\\<cdot> sa\" and y = \"b \\<^sub>s\\<cdot> t\" in \n        bpp_closed [of \"(aug_pm_set z i (s_set R s A))\" \"f\"], assumption+,\n        subst addition_assoc, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) sop_distr1:\"\\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A)); \n      assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i; \n       ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i; \n        inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z; \n         sop_distr1 R s f i (s_set R s A) z; \n          sop_distr2 R s f i (s_set R s A) z; \n           sop_assoc R s (aug_pm_set z i (s_set R s A)); \n            sop_inv R s i (s_set R s A); \n             sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>  \\<Longrightarrow> \n      \\<forall>a\\<in>carrier R. \\<forall>b\\<in>carrier R. \n         \\<forall>x\\<in> addition_set f (aug_pm_set z i (s_set R s A)). \n                      (a \\<plusminus> b) \\<^sub>s\\<cdot> x = a \\<^sub>s\\<cdot> x \\<^sub>f+ (b \\<^sub>s\\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>b\\<in>carrier R.\n                            \\<forall>x\\<in>addition_set f\n      (aug_pm_set z i (s_set R s A)).\n                               (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                               a \\<^sub>s\\<cdot> x \\<^sub>f+\n                                  b \\<^sub>s\\<cdot> x", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        \\<exists>xa.\n           (\\<exists>n.\n               xa = add_set f (aug_pm_set z i (s_set R s A)) n) \\<and>\n           x \\<in> xa\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (erule exE, erule conjE, erule exE, simp,\n        thin_tac \"xa = add_set f (aug_pm_set z i (s_set R s A)) n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x xa n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> x =\n                         a \\<^sub>s\\<cdot> x \\<^sub>f+ b \\<^sub>s\\<cdot> x", "apply (simp add:sop_distr1Tr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  fgmodule_condition ::\"[('r, 'm) Ring_scheme, 'a \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a \\<Rightarrow> 'a,\n         'r \\<Rightarrow> 'a \\<Rightarrow> 'a, 'a set, 'a] \\<Rightarrow> bool\" where\n  \"fgmodule_condition R f i s A z \\<longleftrightarrow>\n    commute_bpp f (aug_pm_set z i (s_set R s A)) \\<and> \n      assoc_bpp (aug_pm_set z i (s_set R s A)) f \\<and> \n       ipp_cond1 (s_set R s A) i \\<and> ipp_cond2 z (s_set R s A) i f \\<and> \n        ipp_cond3 z i \\<and> inv_ipp z i f (s_set R s A) \\<and>\n         zeroA z i f (s_set R s A) z \\<and> sop_distr1 R s f i (s_set R s A) z \\<and>\n          sop_distr2 R s f i (s_set R s A) z \\<and> \n           sop_assoc R s (aug_pm_set z i (s_set R s A)) \\<and> \n          sop_inv R s i (s_set R s A) \\<and> \n         sop_one R s (aug_pm_set z i (s_set R s A)) \\<and> sop_z R s z\""], ["", "lemma (in Ring) sop_closed1:\"\\<lbrakk>fgmodule_condition R f i s A z; r \\<in> carrier R;\n      x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk> \\<Longrightarrow>\n          r \\<^sub>s\\<cdot> x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; r \\<in> carrier R;\n     x \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                      \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply(simp add:fgmodule_condition_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> carrier R;\n     x \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n     commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> r \\<^sub>s\\<cdot> x\n                      \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply (simp add:sop_closed)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fgmodule_is_module:\"fgmodule_condition R f i s A z\n                                \\<Longrightarrow>  R module (fgmodule R A z i f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fgmodule_condition R f i s A z \\<Longrightarrow>\n    R module fgmodule R A z i f s", "apply (simp add:fgmodule_condition_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> R module fgmodule R A z i f s", "apply (rule Module.intro)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> aGroup (fgmodule R A z i f s)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> Module_axioms (fgmodule R A z i f s) R", "apply (frule fag_aGroup [of f z i \"s_set R s A\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     aGroup (fag_gen_by (s_set R s A) f i z)\\<rbrakk>\n    \\<Longrightarrow> aGroup (fgmodule R A z i f s)\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> Module_axioms (fgmodule R A z i f s) R", "apply (simp add:fag_gen_by_def fgmodule_def, simp add:aGroup_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n     (\\<lambda>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n         restrict (BOP x f) (addition_set f (aug_pm_set z i (s_set R s A))))\n     \\<in> addition_set f (aug_pm_set z i (s_set R s A)) \\<rightarrow>\n           addition_set f (aug_pm_set z i (s_set R s A)) \\<rightarrow>\n           addition_set f (aug_pm_set z i (s_set R s A)) \\<and>\n     (\\<forall>a.\n         a \\<in> addition_set f\n                  (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n         (\\<forall>b.\n             b \\<in> addition_set f\n                      (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n             (\\<forall>c.\n                 c \\<in> addition_set f\n                          (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n                 (if a \\<^sub>f+ b\n                     \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n                  then restrict (BOP (a \\<^sub>f+ b) f)\n                        (addition_set f (aug_pm_set z i (s_set R s A)))\n                  else undefined)\n                  c =\n                 (if b \\<^sub>f+ c\n                     \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n                  then a \\<^sub>f+ (b \\<^sub>f+ c) else undefined)))) \\<and>\n     (\\<forall>a.\n         a \\<in> addition_set f\n                  (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n         (\\<forall>b.\n             b \\<in> addition_set f\n                      (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n             a \\<^sub>f+ b = b \\<^sub>f+ a)) \\<and>\n     restrict (ipp i) (addition_set f (aug_pm_set z i (s_set R s A)))\n     \\<in> addition_set f (aug_pm_set z i (s_set R s A)) \\<rightarrow>\n           addition_set f (aug_pm_set z i (s_set R s A)) \\<and>\n     (\\<forall>a.\n         a \\<in> addition_set f\n                  (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n         (if \\<^sub>i- a \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n          then restrict (BOP (\\<^sub>i- a) f)\n                (addition_set f (aug_pm_set z i (s_set R s A)))\n          else undefined)\n          a =\n         z) \\<and>\n     z \\<in> addition_set f (aug_pm_set z i (s_set R s A)) \\<and>\n     (\\<forall>a.\n         a \\<in> addition_set f\n                  (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n         (if z \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n          then restrict (BOP z f)\n                (addition_set f (aug_pm_set z i (s_set R s A)))\n          else undefined)\n          a =\n         a)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a.\n                         a \\<in> addition_set f\n                                  (aug_pm_set z i\n                                    (s_set R s A)) \\<longrightarrow>\n                         a \\<^sub>f+ z = a\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> Module_axioms (fgmodule R A z i f s) R", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        (\\<lambda>x\\<in>addition_set f (aug_pm_set z i (s_set R s A)).\n            restrict (BOP x f)\n             (addition_set f (aug_pm_set z i (s_set R s A))))\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A)) \\<rightarrow>\n              addition_set f (aug_pm_set z i (s_set R s A)) \\<rightarrow>\n              addition_set f (aug_pm_set z i (s_set R s A)) \\<and>\n        (\\<forall>a.\n            a \\<in> addition_set f\n                     (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n            (\\<forall>b.\n                b \\<in> addition_set f\n                         (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n                (\\<forall>c.\n                    c \\<in> addition_set f\n                             (aug_pm_set z i\n                               (s_set R s A)) \\<longrightarrow>\n                    (if a \\<^sub>f+ b\n                        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n                     then restrict (BOP (a \\<^sub>f+ b) f)\n                           (addition_set f (aug_pm_set z i (s_set R s A)))\n                     else undefined)\n                     c =\n                    (if b \\<^sub>f+ c\n                        \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n                     then a \\<^sub>f+ (b \\<^sub>f+ c)\n                     else undefined)))) \\<and>\n        (\\<forall>a.\n            a \\<in> addition_set f\n                     (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n            (\\<forall>b.\n                b \\<in> addition_set f\n                         (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n                a \\<^sub>f+ b = b \\<^sub>f+ a)) \\<and>\n        restrict (ipp i) (addition_set f (aug_pm_set z i (s_set R s A)))\n        \\<in> addition_set f (aug_pm_set z i (s_set R s A)) \\<rightarrow>\n              addition_set f (aug_pm_set z i (s_set R s A)) \\<and>\n        (\\<forall>a.\n            a \\<in> addition_set f\n                     (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n            (if \\<^sub>i- a\n                \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n             then restrict (BOP (\\<^sub>i- a) f)\n                   (addition_set f (aug_pm_set z i (s_set R s A)))\n             else undefined)\n             a =\n            z) \\<and>\n        z \\<in> addition_set f (aug_pm_set z i (s_set R s A)) \\<and>\n        (\\<forall>a.\n            a \\<in> addition_set f\n                     (aug_pm_set z i (s_set R s A)) \\<longrightarrow>\n            (if z \\<in> addition_set f (aug_pm_set z i (s_set R s A))\n             then restrict (BOP z f)\n                   (addition_set f (aug_pm_set z i (s_set R s A)))\n             else undefined)\n             a =\n            a);\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>f+ z = a\n 2. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> Module_axioms (fgmodule R A z i f s) R", "apply (simp add:zeroA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> Module_axioms (fgmodule R A z i f s) R", "apply (rule Module_axioms.intro)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n     assoc_bpp (aug_pm_set z i (s_set R s A)) f; ipp_cond1 (s_set R s A) i;\n     ipp_cond2 z (s_set R s A) i f; ipp_cond3 z i;\n     inv_ipp z i f (s_set R s A); zeroA z i f (s_set R s A) z;\n     sop_distr1 R s f i (s_set R s A) z; sop_distr2 R s f i (s_set R s A) z;\n     sop_assoc R s (aug_pm_set z i (s_set R s A));\n     sop_inv R s i (s_set R s A);\n     sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z\\<rbrakk>\n    \\<Longrightarrow> Ring R\n 2. \\<And>a m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m\n                         \\<in> carrier (fgmodule R A z i f s)\n 3. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus>\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m\n 4. \\<And>a m n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s);\n        n \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          n) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         n\n 5. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 6. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (rule Ring_axioms)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m\n                         \\<in> carrier (fgmodule R A z i f s)\n 2. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus>\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m\n 3. \\<And>a m n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s);\n        n \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          n) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         n\n 4. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 5. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:fgmodule_carr, subst fgmodule_def, simp,\n        simp add:sop_closed)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus>\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m\n 2. \\<And>a m n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s);\n        n \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          n) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         n\n 3. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 4. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:fgmodule_carr, (subst fgmodule_def)+, simp,\n         simp add:sop_closed,\n         cut_tac ring_is_ag,\n         frule_tac x = a and y = b in aGroup.ag_pOp_closed, assumption+, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> addition_set f (aug_pm_set z i (s_set R s A)); aGroup R;\n        a \\<plusminus> b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (a \\<plusminus> b) \\<^sub>s\\<cdot> m =\n                         a \\<^sub>s\\<cdot> m \\<^sub>f+ b \\<^sub>s\\<cdot> m\n 2. \\<And>a m n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s);\n        n \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          n) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         n\n 3. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 4. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:sop_distr1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a m n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; m \\<in> carrier (fgmodule R A z i f s);\n        n \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          n) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         n\n 2. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 3. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:fgmodule_carr, (subst fgmodule_def)+, simp,\n         simp add:sop_closed bpp_closed)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a m n.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R;\n        m \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        n \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> a \\<^sub>s\\<cdot> (m \\<^sub>f+ n) =\n                         a \\<^sub>s\\<cdot> m \\<^sub>f+ a \\<^sub>s\\<cdot> n\n 2. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 3. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:sop_distr2_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>r\n                          b) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         a \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         (b \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                          m)\n 2. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (frule_tac x = a and y = b in ring_tOp_closed, assumption+,\n         simp add:fgmodule_carr, (subst fgmodule_def)+, simp,\n         simp add:sop_closed bpp_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        a \\<in> carrier R; b \\<in> carrier R;\n        m \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        a \\<cdot>\\<^sub>r b \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>r b \\<^sub>s\\<cdot> m =\n                         a \\<^sub>s\\<cdot> (b \\<^sub>s\\<cdot> m)\n 2. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:sop_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (cut_tac ring_one)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> carrier (fgmodule R A z i f s);\n        1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         m =\n                         m", "apply (simp add:fgmodule_carr, (subst fgmodule_def)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>commute_bpp f (aug_pm_set z i (s_set R s A));\n        assoc_bpp (aug_pm_set z i (s_set R s A)) f;\n        ipp_cond1 (s_set R s A) i; ipp_cond2 z (s_set R s A) i f;\n        ipp_cond3 z i; inv_ipp z i f (s_set R s A);\n        zeroA z i f (s_set R s A) z; sop_distr1 R s f i (s_set R s A) z;\n        sop_distr2 R s f i (s_set R s A) z;\n        sop_assoc R s (aug_pm_set z i (s_set R s A));\n        sop_inv R s i (s_set R s A);\n        sop_one R s (aug_pm_set z i (s_set R s A)); sop_z R s z;\n        m \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> 1\\<^sub>r \\<^sub>s\\<cdot> m = m", "apply (simp add:sop_one)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) a_in_carr_fgmodule:\"a \\<in> A\n                                \\<Longrightarrow>  a \\<in> carrier (fgmodule R A z i f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> a \\<in> carrier (fgmodule R A z i f s)", "apply (simp add:fgmodule_carr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow>\n    a \\<in> addition_set f (aug_pm_set z i (s_set R s A))", "apply (cut_tac addition_inc_add0[of \"aug_pm_set z i (s_set R s A)\"],\n        rule subsetD[of \"aug_pm_set z i (s_set R s A)\"\n           \"addition_set f (aug_pm_set z i (s_set R s A))\" a], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A;\n     aug_pm_set z i (s_set R s A)\n     \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n    \\<Longrightarrow> a \\<in> aug_pm_set z i (s_set R s A)", "apply (simp add:aug_pm_set_def s_set_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"A fgmodule and a free module\""], ["", "lemma (in Ring) fg_zeroTr:\"\\<lbrakk>fgmodule_condition R f i s A z; a \\<in> A\\<rbrakk> \\<Longrightarrow> \n                     \\<zero>  \\<^sub>s\\<cdot> a = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<^sub>s\\<cdot> a = z", "apply (frule fgmodule_is_module [of f i s A z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; a \\<in> A;\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<^sub>s\\<cdot> a = z", "apply (frule a_in_carr_fgmodule[of a A z i f s])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; a \\<in> A;\n     R module fgmodule R A z i f s;\n     a \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<^sub>s\\<cdot> a = z", "apply (frule Module.sc_0_m [of \"fgmodule R A z i f s\" R \"a\"],\n       simp add:a_in_carr_fgmodule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; a \\<in> A;\n     R module fgmodule R A z i f s; a \\<in> carrier (fgmodule R A z i f s);\n     \\<zero> \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub> a =\n     \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<zero> \\<^sub>s\\<cdot> a = z", "apply (cut_tac ring_zero,\n       simp add:fgmodule_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fg_genTr0:\"\\<lbrakk>fgmodule_condition R f i s A z; \n      x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk> \\<Longrightarrow> \n        x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:aug_pm_set_def s_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (case_tac \"x = z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x = z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x = z\\<rbrakk>\n    \\<Longrightarrow> z \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:linear_span_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x = z\\<rbrakk>\n    \\<Longrightarrow> (A = {} \\<longrightarrow>\n                       z =\n                       \\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>) \\<and>\n                      (A \\<noteq> {} \\<longrightarrow>\n                       (\\<exists>n.\n                           \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                              \\<exists>sa\n \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                 z =\n                                 l_comb R (fgmodule R A z i f s) n sa fa))\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (case_tac \"A = {}\", simp, simp add:fgmodule_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x = z; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (A = {} \\<longrightarrow>\n                       z =\n                       \\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>) \\<and>\n                      (A \\<noteq> {} \\<longrightarrow>\n                       (\\<exists>n.\n                           \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                              \\<exists>sa\n \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                 z =\n                                 l_comb R (fgmodule R A z i f s) n sa fa))\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x = z; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                            \\<exists>sa\\<in>{j. j \\<le> n} \\<rightarrow>\n      carrier R.\n                               z = l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule nonempty_ex[of \"A\"], thin_tac \"A \\<noteq> {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x = z;\n     \\<exists>x. x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                            \\<exists>sa\\<in>{j. j \\<le> n} \\<rightarrow>\n      carrier R.\n                               z = l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  z =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"(\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. xa) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> A\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  z =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"(\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. \\<zero>) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> \n                                        carrier R\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  z =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"z = l_comb R (fgmodule R A z i f s) 0 \n          (\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. \\<zero>) (\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. xa)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R;\n        z =\n        l_comb R (fgmodule R A z i f s) 0\n         (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n         (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  z =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> z =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 4. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 5. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> z =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:l_comb_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        \\<zero> \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> z =\n                         \\<zero> \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         xa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule_tac a1 = xa in fg_zeroTr [THEN sym, of f i s A z],\n                      assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        \\<zero> \\<in> carrier R; z = \\<zero> \\<^sub>s\\<cdot> xa\\<rbrakk>\n       \\<Longrightarrow> z =\n                         \\<zero> \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         xa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule_tac a = xa in a_in_carr_fgmodule [of _ A z i f s])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        \\<zero> \\<in> carrier R; z = \\<zero> \\<^sub>s\\<cdot> xa;\n        xa \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> z =\n                         \\<zero> \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         xa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule fgmodule_is_module [of f i s A z])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        \\<zero> \\<in> carrier R; z = \\<zero> \\<^sub>s\\<cdot> xa;\n        xa \\<in> carrier (fgmodule R A z i f s);\n        R module fgmodule R A z i f s\\<rbrakk>\n       \\<Longrightarrow> z =\n                         \\<zero> \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         xa\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (cut_tac ring_zero, simp add:fgmodule_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A;\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. \\<zero>)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 2. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:ring_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = z; xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. xa)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (case_tac \"x \\<in> A\",\n        frule_tac x = x and A = A in nonempty,\n        simp add:linear_span_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                            \\<exists>sa\\<in>{j. j \\<le> n} \\<rightarrow>\n      carrier R.\n                               x = l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"(\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. x) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> A\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                            \\<exists>sa\\<in>{j. j \\<le> n} \\<rightarrow>\n      carrier R.\n                               x = l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"(\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. 1\\<^sub>r) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> \n                        carrier R\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n     (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                            \\<exists>sa\\<in>{j. j \\<le> n} \\<rightarrow>\n      carrier R.\n                               x = l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"x = l_comb R (fgmodule R A z i f s) 0 \n                 (\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. 1\\<^sub>r) (\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. x)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n     (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R;\n     x =\n     l_comb R (fgmodule R A z i f s) 0\n      (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n      (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                            \\<exists>sa\\<in>{j. j \\<le> n} \\<rightarrow>\n      carrier R.\n                               x = l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n     (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> x =\n                      l_comb R (fgmodule R A z i f s) 0\n                       (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                       (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n 3. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 4. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 5. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n     (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> x =\n                      l_comb R (fgmodule R A z i f s) 0\n                       (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                       (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:l_comb_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}; 1\\<^sub>r \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> x =\n                      1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                      x\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule fgmodule_is_module [of f i s A z])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}; 1\\<^sub>r \\<in> carrier R;\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> x =\n                      1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                      x\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule_tac a = x in a_in_carr_fgmodule[of _ A z i f s])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}; 1\\<^sub>r \\<in> carrier R;\n     R module fgmodule R A z i f s;\n     x \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> x =\n                      1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                      x\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:fgmodule_def, fold fgmodule_def,\n         simp add:ring_one, simp add:fgmodule_condition_def,\n         (erule conjE)+, simp add:sop_one)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {};\n     (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n     \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. 1\\<^sub>r)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 2. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:ring_one)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; x \\<noteq> z; x \\<in> A;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. x)\n                      \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (case_tac \"\\<exists>r\\<in>carrier R. \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<exists>r\\<in>carrier R.\n        \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule_tac x = a and A = A in nonempty, simp add:linear_span_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  r \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"(\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. a) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> A\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  r \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"(\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. r) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> \n                        carrier R\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  r \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (subgoal_tac \"r \\<^sub>s\\<cdot> a = l_comb R (fgmodule R A z i f s) 0 \n                 (\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. r) (\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. a)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R;\n        r \\<^sub>s\\<cdot> a =\n        l_comb R (fgmodule R A z i f s) 0 (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n         (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  r \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> a =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n 3. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 4. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 5. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> a =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n 2. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (frule_tac a = a in a_in_carr_fgmodule[of _ A z i f s])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R;\n        a \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> r \\<^sub>s\\<cdot> a =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n 2. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:l_comb_def fgmodule_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 2. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>ra\\<in>carrier R.\n            \\<exists>aa\\<in>A.\n               r \\<^sub>s\\<cdot> a = ra \\<^sub>s\\<cdot> aa) \\<or>\n        r \\<^sub>s\\<cdot> a\n        \\<in> minus_set i\n               ({x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A);\n        r \\<^sub>s\\<cdot> a \\<noteq> z; r \\<^sub>s\\<cdot> a \\<notin> A;\n        r \\<in> carrier R; a \\<in> A; x = r \\<^sub>s\\<cdot> a;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     x = z \\<or>\n     (\\<exists>r\\<in>carrier R.\n         \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a) \\<or>\n     x \\<in> A \\<or>\n     x \\<in> minus_set i\n              ({x. \\<exists>r\\<in>carrier R.\n                      \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n               A);\n     x \\<noteq> z; x \\<notin> A;\n     \\<not> (\\<exists>r\\<in>carrier R.\n                \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (simp add:minus_set_def,\n      thin_tac \"x \\<noteq> z\", thin_tac \"x \\<notin> A\", \n      thin_tac \"\\<forall>r\\<in>carrier R. \\<forall>a\\<in>A. x \\<noteq> r \\<^sub>s\\<cdot> a\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     \\<exists>y\\<in>{x. \\<exists>r\\<in>carrier R.\n                           \\<exists>a\\<in>A.\n                              x = r \\<^sub>s\\<cdot> a} \\<union>\n                    A.\n        x = \\<^sub>i- y\\<rbrakk>\n    \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                               (carrier R) A", "apply (erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        y \\<in> {x. \\<exists>r\\<in>carrier R.\n                       \\<exists>a\\<in>A. x = r \\<^sub>s\\<cdot> a} \\<union>\n                A;\n        x = \\<^sub>i- y\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        (\\<exists>r\\<in>carrier R.\n            \\<exists>a\\<in>A. y = r \\<^sub>s\\<cdot> a) \\<or>\n        y \\<in> A;\n        x = \\<^sub>i- y\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        \\<exists>r\\<in>carrier R.\n           \\<exists>a\\<in>A. y = r \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule fgmodule_is_module [of f i s A z])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac a = r and m = a in \n         Module.sc_minus_am1[of \"fgmodule R A z i f s\" R], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s\\<rbrakk>\n       \\<Longrightarrow> a \\<in> carrier (fgmodule R A z i f s)\n 2. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        -\\<^sub>a\\<^bsub>fgmodule R A z i f s\\<^esub> r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                a =\n        (-\\<^sub>a r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n        a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac a = a in a_in_carr_fgmodule[of _ A z i f s], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        -\\<^sub>a\\<^bsub>fgmodule R A z i f s\\<^esub> r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                a =\n        (-\\<^sub>a r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n        a\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (cut_tac ring_is_ag,\n        frule_tac x = r in aGroup.ag_mOp_closed, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        -\\<^sub>a\\<^bsub>fgmodule R A z i f s\\<^esub> r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                a =\n        (-\\<^sub>a r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac a = a in a_in_carr_fgmodule[of _ A z i f s])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = \\<^sub>i- r \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        -\\<^sub>a\\<^bsub>fgmodule R A z i f s\\<^esub> r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                a =\n        (-\\<^sub>a r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- r \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (simp add:fgmodule_def, fold fgmodule_def,\n        simp add:sop_closed1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> a\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac x = a and A = A in nonempty, simp add:linear_span_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (subgoal_tac \"(\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. a) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> A\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (subgoal_tac \"(\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. (-\\<^sub>a r)) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> \n                        carrier R\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (subgoal_tac \"(-\\<^sub>a r) \\<^sub>s\\<cdot> a = l_comb R (fgmodule R A z i f s) 0 \n                 (\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. (-\\<^sub>a r)) (\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. a)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R;\n        (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n        l_comb R (fgmodule R A z i f s) 0\n         (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n         (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n 3. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 4. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 5. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> (-\\<^sub>a r) \\<^sub>s\\<cdot> a =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n 2. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 4. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (simp add:l_comb_def fgmodule_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 2. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y r a.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x = (-\\<^sub>a r) \\<^sub>s\\<cdot> a; r \\<in> carrier R; a \\<in> A;\n        y = r \\<^sub>s\\<cdot> a; R module fgmodule R A z i f s;\n        \\<^sub>i- r \\<^sub>s\\<cdot> a = (-\\<^sub>a r) \\<^sub>s\\<cdot> a;\n        aGroup R; -\\<^sub>a r \\<in> carrier R;\n        a \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. a)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y;\n        y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac x = y and A = A in nonempty, simp add:linear_span_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  \\<^sub>i- y =\n                                  l_comb R (fgmodule R A z i f s) n sa fa", "apply (subgoal_tac \"(\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. y) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  \\<^sub>i- y =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (subgoal_tac \"(\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. (-\\<^sub>a 1\\<^sub>r)) \\<in> {j. j \\<le> (0::nat)} \\<rightarrow> \n                        carrier R\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a 1\\<^sub>r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  \\<^sub>i- y =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (subgoal_tac \"\\<^sub>i- y = l_comb R (fgmodule R A z i f s) 0 \n                 (\\<lambda>k\\<in>{j. j \\<le> (0::nat)}. (-\\<^sub>a 1\\<^sub>r)) (\\<lambda>j\\<in>{j. j \\<le> (0::nat)}. y)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a 1\\<^sub>r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R;\n        \\<^sub>i- y =\n        l_comb R (fgmodule R A z i f s) 0\n         (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a 1\\<^sub>r)\n         (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            \\<exists>fa\\<in>{j. j \\<le> n} \\<rightarrow> A.\n                               \\<exists>sa\n  \\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                                  \\<^sub>i- y =\n                                  l_comb R (fgmodule R A z i f s) n sa fa\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a 1\\<^sub>r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                              -\\<^sub>a 1\\<^sub>r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 4. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        (\\<lambda>k\\<in>{j. j \\<le> 0}. -\\<^sub>a 1\\<^sub>r)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         l_comb R (fgmodule R A z i f s) 0\n                          (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                              -\\<^sub>a 1\\<^sub>r)\n                          (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (simp add:l_comb_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}; -\\<^sub>a 1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         (-\\<^sub>a 1\\<^sub>r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         y\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (frule fgmodule_is_module [of \"f\" \"i\" \"s\" \"A\" \"z\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}; -\\<^sub>a 1\\<^sub>r \\<in> carrier R;\n        R module fgmodule R A z i f s\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         (-\\<^sub>a 1\\<^sub>r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         y\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (frule_tac a = y in a_in_carr_fgmodule [of  _ A z i f s])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}; -\\<^sub>a 1\\<^sub>r \\<in> carrier R;\n        R module fgmodule R A z i f s;\n        y \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         (-\\<^sub>a 1\\<^sub>r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         y\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (cut_tac ring_one , cut_tac ring_is_ag,\n         frule aGroup.ag_mOp_closed [of R \"1\\<^sub>r\"], assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}; -\\<^sub>a 1\\<^sub>r \\<in> carrier R;\n        R module fgmodule R A z i f s;\n        y \\<in> carrier (fgmodule R A z i f s); 1\\<^sub>r \\<in> carrier R;\n        aGroup R; -\\<^sub>a 1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         (-\\<^sub>a 1\\<^sub>r) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         y\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (simp add:Module.sc_minus_am1[THEN sym, of \"fgmodule R A z i f s\" R])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}; R module fgmodule R A z i f s;\n        y \\<in> carrier (fgmodule R A z i f s); 1\\<^sub>r \\<in> carrier R;\n        aGroup R; -\\<^sub>a 1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         -\\<^sub>a\\<^bsub>fgmodule R A z i f s\\<^esub> 1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                                 y\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (simp add:Module.sprod_one)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}; R module fgmodule R A z i f s;\n        y \\<in> carrier (fgmodule R A z i f s); 1\\<^sub>r \\<in> carrier R;\n        aGroup R; -\\<^sub>a 1\\<^sub>r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<^sub>i- y =\n                         -\\<^sub>a\\<^bsub>fgmodule R A z i f s\\<^esub> y\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 3. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (simp add:fgmodule_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {};\n        (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n        \\<in> {j. j \\<le> 0} \\<rightarrow> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>k\\<in>{j. j \\<le> 0}.\n                             -\\<^sub>a 1\\<^sub>r)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\n 2. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (rule Pi_I, simp,\n         cut_tac ring_one, cut_tac ring_is_ag,\n         simp add:aGroup.ag_mOp_closed[of R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>fgmodule_condition R f i s A z; x = \\<^sub>i- y; y \\<in> A;\n        A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>j\\<in>{j. j \\<le> 0}. y)\n                         \\<in> {j. j \\<le> 0} \\<rightarrow> A", "apply (simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fg_genTr:\"fgmodule_condition R f i s A z \\<Longrightarrow>\n      \\<forall>x. x \\<in> (add_set f (aug_pm_set z i (s_set R s A)) n) \\<longrightarrow> \n             x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fgmodule_condition R f i s A z \\<Longrightarrow>\n    \\<forall>x.\n       x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n \\<longrightarrow>\n       x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. fgmodule_condition R f i s A z \\<Longrightarrow>\n    \\<forall>x.\n       x \\<in> add_set f (aug_pm_set z i (s_set R s A)) 0 \\<longrightarrow>\n       x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\n 2. \\<And>n.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                    n \\<longrightarrow>\n           x \\<in> linear_span R (fgmodule R A z i f s) (carrier R)\n                    A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                                     (Suc n) \\<longrightarrow>\n                            x \\<in> linear_span R (fgmodule R A z i f s)\n                                     (carrier R) A", "apply (rule allI, rule impI, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        x \\<in> aug_pm_set z i (s_set R s A)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A\n 2. \\<And>n.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                    n \\<longrightarrow>\n           x \\<in> linear_span R (fgmodule R A z i f s) (carrier R)\n                    A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                                     (Suc n) \\<longrightarrow>\n                            x \\<in> linear_span R (fgmodule R A z i f s)\n                                     (carrier R) A", "apply (simp add:fg_genTr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                    n \\<longrightarrow>\n           x \\<in> linear_span R (fgmodule R A z i f s) (carrier R)\n                    A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                                     (Suc n) \\<longrightarrow>\n                            x \\<in> linear_span R (fgmodule R A z i f s)\n                                     (carrier R) A", "apply (rule allI, rule impI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                    n \\<longrightarrow>\n           x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        \\<exists>sa\\<in>add_set f (aug_pm_set z i (s_set R s A)) n.\n           \\<exists>t\\<in>aug_pm_set z i (s_set R s A).\n              x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        \\<forall>x.\n           x \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                    n \\<longrightarrow>\n           x \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply (drule_tac x = sa in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A))\n                  n \\<longrightarrow>\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ t\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac x = t in fg_genTr0[of f i s A z], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        t \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ t\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (cut_tac whole_ideal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        t \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        ideal R (carrier R)\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ t\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule fgmodule_is_module[of f i s A z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        t \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        ideal R (carrier R); R module fgmodule R A z i f s\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ t\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (frule_tac a = sa and b = t in Module.linear_span_pOp_closed[of\n          \"fgmodule R A z i f s\" R \"carrier R\" A], assumption+,\n        rule subsetI, simp add:a_in_carr_fgmodule, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        t \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        ideal R (carrier R); R module fgmodule R A z i f s;\n        sa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub> t\n        \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ t\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (cut_tac n = n in addition_inc_add[of f \"aug_pm_set z i (s_set R s A)\"],\n        cut_tac addition_inc_add0[of \"aug_pm_set z i (s_set R s A)\" f],\n        frule_tac c = sa and A = \"add_set f (aug_pm_set z i (s_set R s A)) n\"\n        in subsetD[of _ \"addition_set f (aug_pm_set z i (s_set R s A))\"],\n        assumption+,\n         frule_tac c = t and A = \"aug_pm_set z i (s_set R s A)\"\n        in subsetD[of _ \"addition_set f (aug_pm_set z i (s_set R s A))\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x sa t.\n       \\<lbrakk>fgmodule_condition R f i s A z;\n        sa \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        t \\<in> aug_pm_set z i (s_set R s A); x = sa \\<^sub>f+ t;\n        sa \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        t \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        ideal R (carrier R); R module fgmodule R A z i f s;\n        sa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub> t\n        \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A;\n        add_set f (aug_pm_set z i (s_set R s A)) n\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        aug_pm_set z i (s_set R s A)\n        \\<subseteq> addition_set f (aug_pm_set z i (s_set R s A));\n        sa \\<in> addition_set f (aug_pm_set z i (s_set R s A));\n        t \\<in> addition_set f (aug_pm_set z i (s_set R s A))\\<rbrakk>\n       \\<Longrightarrow> sa \\<^sub>f+ t\n                         \\<in> linear_span R (fgmodule R A z i f s)\n                                (carrier R) A", "apply (simp add:fgmodule_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) generator_of_fgm:\"fgmodule_condition R f i s A z \\<Longrightarrow> \n                 generator R (fgmodule R A z i f s) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fgmodule_condition R f i s A z \\<Longrightarrow>\n    generator R (fgmodule R A z i f s) A", "apply (cut_tac whole_ideal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> generator R (fgmodule R A z i f s) A", "apply (simp add:generator_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier (fgmodule R A z i f s) \\<and>\n                      linear_span R (fgmodule R A z i f s) (carrier R) A =\n                      carrier (fgmodule R A z i f s)", "apply (frule fgmodule_is_module [of f i s A z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier (fgmodule R A z i f s) \\<and>\n                      linear_span R (fgmodule R A z i f s) (carrier R) A =\n                      carrier (fgmodule R A z i f s)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier (fgmodule R A z i f s)\n 2. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> linear_span R (fgmodule R A z i f s) (carrier R) A =\n                      carrier (fgmodule R A z i f s)", "apply (rule subsetI, simp add:a_in_carr_fgmodule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> linear_span R (fgmodule R A z i f s) (carrier R) A =\n                      carrier (fgmodule R A z i f s)", "apply (frule Module.linear_span_sub[of \"fgmodule R A z i f s\" R \n                         \"carrier R\" A], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier (fgmodule R A z i f s)\n 2. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s;\n     linear_span R (fgmodule R A z i f s) (carrier R) A\n     \\<subseteq> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> linear_span R (fgmodule R A z i f s) (carrier R) A =\n                      carrier (fgmodule R A z i f s)", "apply (rule subsetI, \n        simp add:a_in_carr_fgmodule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s;\n     linear_span R (fgmodule R A z i f s) (carrier R) A\n     \\<subseteq> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> linear_span R (fgmodule R A z i f s) (carrier R) A =\n                      carrier (fgmodule R A z i f s)", "apply (rule equalityI, assumption,\n        thin_tac \"linear_span R (fgmodule R A z i f s) (carrier R) A\n     \\<subseteq> carrier (fgmodule R A z i f s)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> carrier (fgmodule R A z i f s)\n                      \\<subseteq> linear_span R (fgmodule R A z i f s)\n                                   (carrier R) A", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n        R module fgmodule R A z i f s;\n        x \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply (simp add:fgmodule_carr, simp add:addition_set_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n        R module fgmodule R A z i f s;\n        \\<exists>xa.\n           (\\<exists>n.\n               xa = add_set f (aug_pm_set z i (s_set R s A)) n) \\<and>\n           x \\<in> xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply (erule exE, erule conjE, erule exE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa n.\n       \\<lbrakk>fgmodule_condition R f i s A z; ideal R (carrier R);\n        R module fgmodule R A z i f s;\n        x \\<in> add_set f (aug_pm_set z i (s_set R s A)) n;\n        xa = add_set f (aug_pm_set z i (s_set R s A)) n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> linear_span R (fgmodule R A z i f s)\n                                  (carrier R) A", "apply (simp add: fg_genTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fg_freeTr1:\"\\<lbrakk>R module M; free_generator R M A;\n  R module fgmodule R A z i f s; free_generator R (fgmodule R A z i f s) A;\n  g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x\\<rbrakk> \\<Longrightarrow> \n  \\<forall>fa sa. fa \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> A \\<and> sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow> \n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) = \n                      l_comb R (fgmodule R A z i f s) n sa fa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; free_generator R M A;\n     R module fgmodule R A z i f s;\n     free_generator R (fgmodule R A z i f s) A;\n     g \\<in> mHom R M (fgmodule R A z i f s);\n     \\<forall>x\\<in>A. g x = x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>fa sa.\n                         fa \\<in> {j. j \\<le> n} \\<rightarrow> A \\<and>\n                         sa \\<in> {j. j \\<le> n} \\<rightarrow>\n                                  carrier R \\<longrightarrow>\n                         l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n                         l_comb R (fgmodule R A z i f s) n sa fa", "apply (induct_tac n, (rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> 0} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s) 0 sa (cmp g fa) =\n                         l_comb R (fgmodule R A z i f s) 0 sa fa\n 2. \\<And>n.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        \\<forall>fa sa.\n           fa \\<in> {j. j \\<le> n} \\<rightarrow> A \\<and>\n           sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n           l_comb R (fgmodule R A z i f s) n sa fa\\<rbrakk>\n       \\<Longrightarrow> \\<forall>fa sa.\n                            fa \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                     A \\<and>\n                            sa \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                     carrier R \\<longrightarrow>\n                            l_comb R (fgmodule R A z i f s) (Suc n) sa\n                             (cmp g fa) =\n                            l_comb R (fgmodule R A z i f s) (Suc n) sa fa", "apply (simp add:l_comb_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa 0 \\<in> A; sa 0 \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> sa 0 \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         cmp g fa 0 =\n                         sa 0 \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         fa 0\n 2. \\<And>n.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        \\<forall>fa sa.\n           fa \\<in> {j. j \\<le> n} \\<rightarrow> A \\<and>\n           sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n           l_comb R (fgmodule R A z i f s) n sa fa\\<rbrakk>\n       \\<Longrightarrow> \\<forall>fa sa.\n                            fa \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                     A \\<and>\n                            sa \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                     carrier R \\<longrightarrow>\n                            l_comb R (fgmodule R A z i f s) (Suc n) sa\n                             (cmp g fa) =\n                            l_comb R (fgmodule R A z i f s) (Suc n) sa fa", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        \\<forall>fa sa.\n           fa \\<in> {j. j \\<le> n} \\<rightarrow> A \\<and>\n           sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n           l_comb R (fgmodule R A z i f s) n sa fa\\<rbrakk>\n       \\<Longrightarrow> \\<forall>fa sa.\n                            fa \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                     A \\<and>\n                            sa \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                     carrier R \\<longrightarrow>\n                            l_comb R (fgmodule R A z i f s) (Suc n) sa\n                             (cmp g fa) =\n                            l_comb R (fgmodule R A z i f s) (Suc n) sa fa", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        \\<forall>fa sa.\n           fa \\<in> {j. j \\<le> n} \\<rightarrow> A \\<and>\n           sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n           l_comb R (fgmodule R A z i f s) n sa fa;\n        fa \\<in> {j. j \\<le> Suc n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s) (Suc n) sa\n                          (cmp g fa) =\n                         l_comb R (fgmodule R A z i f s) (Suc n) sa fa", "apply (frule_tac f = fa and n = n and A = A in func_pre,\n        frule_tac f = sa and n = n and A = \"carrier R\" in func_pre)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        \\<forall>fa sa.\n           fa \\<in> {j. j \\<le> n} \\<rightarrow> A \\<and>\n           sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n           l_comb R (fgmodule R A z i f s) n sa fa;\n        fa \\<in> {j. j \\<le> Suc n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s) (Suc n) sa\n                          (cmp g fa) =\n                         l_comb R (fgmodule R A z i f s) (Suc n) sa fa", "apply (drule_tac x = fa in spec,\n        drule_tac x = sa in spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> Suc n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n        l_comb R (fgmodule R A z i f s) n sa fa\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s) (Suc n) sa\n                          (cmp g fa) =\n                         l_comb R (fgmodule R A z i f s) (Suc n) sa fa", "apply (frule_tac s = sa and f = fa and n = n in Module.l_comb_Suc[of \n         \"fgmodule R A z i f s\" R A \"carrier R\"], \n        rule subsetI,simp add:a_in_carr_fgmodule, \n           cut_tac whole_ideal, simp, assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> Suc n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n        l_comb R (fgmodule R A z i f s) n sa fa;\n        l_comb R (fgmodule R A z i f s) (Suc n) sa fa =\n        l_comb R (fgmodule R A z i f s) n sa\n         fa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n        sa (Suc n) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n        fa (Suc n)\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s) (Suc n) sa\n                          (cmp g fa) =\n                         l_comb R (fgmodule R A z i f s) n sa\n                          fa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         sa (Suc n) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         fa (Suc n)", "apply (frule_tac s = sa and f = \"cmp g fa\" and n = n in Module.l_comb_Suc[of \n         \"fgmodule R A z i f s\" R A \"carrier R\"],\n        rule subsetI,simp add:a_in_carr_fgmodule,\n        cut_tac whole_ideal, simp, simp,\n        rule Pi_I, simp add:cmp_def,\n        frule_tac x = x and f = fa and A = \"{j. j \\<le> Suc n}\" and B = A\n               in funcset_mem, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n fa sa.\n       \\<lbrakk>R module M; free_generator R M A;\n        R module fgmodule R A z i f s;\n        free_generator R (fgmodule R A z i f s) A;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> Suc n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n        l_comb R (fgmodule R A z i f s) n sa fa;\n        l_comb R (fgmodule R A z i f s) (Suc n) sa fa =\n        l_comb R (fgmodule R A z i f s) n sa\n         fa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n        sa (Suc n) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n        fa (Suc n);\n        l_comb R (fgmodule R A z i f s) (Suc n) sa (cmp g fa) =\n        l_comb R (fgmodule R A z i f s) n sa\n         fa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n        sa (Suc n) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n        cmp g fa (Suc n)\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s) n sa\n                          fa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         sa (Suc n) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         cmp g fa (Suc n) =\n                         l_comb R (fgmodule R A z i f s) n sa\n                          fa \\<plusminus>\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         sa (Suc n) \\<cdot>\\<^sub>s\\<^bsub>fgmodule R A z i f s\\<^esub>\n                         fa (Suc n)", "apply (frule_tac  x = \"Suc n\" and f = fa and A = \"{j. j \\<le> Suc n}\" and B = A\n               in funcset_mem, simp+, simp add:cmp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fg_freeTr:\"\\<lbrakk>R module M; free_generator R M A;\n      R module fgmodule R A z i f s; \n      free_generator R (fgmodule R A z i f s) A;\n      g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x; \n      fa \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> A; sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk> \\<Longrightarrow> \n      l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n                            l_comb R (fgmodule R A z i f s) n sa fa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; free_generator R M A;\n     R module fgmodule R A z i f s;\n     free_generator R (fgmodule R A z i f s) A;\n     g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n     fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n     sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n                      l_comb R (fgmodule R A z i f s) n sa fa", "apply (simp add:fg_freeTr1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fg_free1:\"\\<lbrakk> A \\<noteq> {}; fgmodule_condition R f i s A z; \n      free_generator R (fgmodule R A z i f s) A; R module M; \n      free_generator R M A\\<rbrakk> \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> (fgmodule R A z i f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (subgoal_tac \"(\\<lambda>x\\<in>A. x) \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A;\n     (\\<lambda>x\\<in>A. x)\n     \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s\n 2. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x\\<in>A. x)\n                      \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x\\<in>A. x)\n                      \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)\n 2. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A;\n     (\\<lambda>x\\<in>A. x)\n     \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (rule Pi_I, simp, simp add:a_in_carr_fgmodule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A;\n     (\\<lambda>x\\<in>A. x)\n     \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (frule fgmodule_is_module [of f i s A z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A;\n     (\\<lambda>x\\<in>A. x)\n     \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s);\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (frule Module.exist_extension_mhom[of M R \"fgmodule R A z i f s\" A \n         \"\\<lambda>x\\<in>A. x\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A;\n     (\\<lambda>x\\<in>A. x)\n     \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s);\n     R module fgmodule R A z i f s;\n     \\<exists>g\\<in>mHom R M (fgmodule R A z i f s).\n        \\<forall>x\\<in>A. g x = (\\<lambda>x\\<in>A. x) x\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A;\n        (\\<lambda>x\\<in>A. x)\n        \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s);\n        R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = (\\<lambda>x\\<in>A. x) x\\<rbrakk>\n       \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (thin_tac \"(\\<lambda>x\\<in>A. x) \\<in> A \\<rightarrow> carrier (fgmodule R A z i f s)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = (\\<lambda>x\\<in>A. x) x\\<rbrakk>\n       \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (simp add:misomorphic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fa.\n                            fa \\<in> mHom R M (fgmodule R A z i f s) \\<and>\n                            bijec\\<^bsub>M,fgmodule R A z i f s\\<^esub> fa", "apply (subgoal_tac \"bijec\\<^bsub>M,(fgmodule R A z i f s)\\<^esub> g\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> bijec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (simp add:bijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> injec\\<^bsub>M,fgmodule R A z i f\n   s\\<^esub> g \\<and>\n                         surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> injec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (simp add:injec_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> g \\<in> aHom M (fgmodule R A z i f s) \\<and>\n                         ker\\<^bsub>M,fgmodule R A z i f s\\<^esub> g =\n                         {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rule conjI, simp add:mHom_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>M,fgmodule R A z i f s\\<^esub> g =\n                         {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rule equalityI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> ker\\<^bsub>M,fgmodule R A z i f s\\<^esub> g\n                         \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rule subsetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> ker\\<^bsub>M,fgmodule R A z i f s\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (simp add:ker_def, erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule Module.free_generator_generator[of M R A], assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        generator R M A\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (simp add:generator_def, erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M;\n        linear_span R M (carrier R) A = carrier M\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rotate_tac -1, frule sym, \n         thin_tac \"linear_span R M (carrier R) A = carrier M\",\n         frule_tac a = x and A = \"carrier M\" and \n                B = \"linear_span R M (carrier R) A\" in eq_set_inc, assumption+,\n         thin_tac \"carrier M = linear_span R M (carrier R) A\",\n         simp add:linear_span_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M;\n        \\<exists>n.\n           \\<exists>f\\<in>{j. j \\<le> n} \\<rightarrow> A.\n              \\<exists>s\\<in>{j. j \\<le> n} \\<rightarrow> carrier R.\n                 x = l_comb R M n s f\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (erule exE, (erule bexE)+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M n sa fa\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (cut_tac whole_ideal)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M n sa fa; ideal R (carrier R)\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac s = sa and n = n and f = fa and H = A in \n        Module.same_together[of M R \"carrier R\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M n sa fa; ideal R (carrier R);\n        \\<exists>t\\<in>{j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                                   Suc 0} \\<rightarrow>\n                       carrier R.\n           \\<exists>g\\<in>{j. j \\<le> card (fa ` {j. j \\<le> n}) -\nSuc 0} \\<rightarrow>\n                          fa ` {j. j \\<le> n}.\n              surj_to g {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n               (fa ` {j. j \\<le> n}) \\<and>\n              \\<Sigma>\\<^sub>e M (\\<lambda>j.\n                                     sa j \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                                     fa j) n =\n              \\<Sigma>\\<^sub>e M (\\<lambda>k.\n                                     t k \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                                     g\nk) (card (fa ` {j. j \\<le> n}) - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply ((erule bexE)+, erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        x \\<in> carrier M;\n        g x = \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M n sa fa; ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        \\<Sigma>\\<^sub>e M (\\<lambda>j.\n                               sa j \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                               fa j) n =\n        \\<Sigma>\\<^sub>e M (\\<lambda>k.\n                               t k \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                               ga k) (card (fa ` {j. j \\<le> n}) -\nSuc 0)\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (fold l_comb_def[of R M], simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac f = g and s = t and n = \"card (fa ` {j. j \\<le> n}) - Suc 0\" \n        and g = ga in Module.linmap_im_lincomb[of M R \"carrier R\" \n        \"fgmodule R A z i f s\" _  A], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\\<rbrakk>\n       \\<Longrightarrow> ga \\<in> {j. j\n\\<le> card (fa ` {j. j \\<le> n}) - Suc 0} \\<rightarrow>\n                                  A\n 2. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga)\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 4. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac f = fa and A = \"{j. j \\<le> n}\" in img_subset[of _ _ A],\n        frule_tac f = ga and A = \"{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\"\n        and B = \"fa ` {j. j \\<le> n}\" and ?B1.0 = A in extend_fun, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga)\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rotate_tac -1, frule sym,\n        thin_tac \"g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0) t\n         (cmp g ga)\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac g = g and fa = ga and sa = t and \n        n = \"card (fa ` {j. j \\<le> n}) - Suc 0\" in fg_freeTr[of M A z i f s],\n        assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> ga \\<in> {j. j\n\\<le> card (fa ` {j. j \\<le> n}) - Suc 0} \\<rightarrow>\n                                  A\n 2. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n       Suc 0} \\<rightarrow>\n                                 carrier R\n 3. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 4. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 5. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac f = fa and A = \"{j. j \\<le> n}\" in img_subset[of _ _ A],\n        frule_tac f = ga and A = \"{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\"\n        and B = \"fa ` {j. j \\<le> n}\" and ?B1.0 = A in extend_fun, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (cut_tac k = n in finite_Collect_le_nat,\n         cut_tac k = \"card (fa ` {j. j \\<le> n}) - Suc 0\" in finite_Collect_le_nat,\n         cut_tac F = \"{j. j \\<le> n}\" and h = fa in finite_imageI,\n         assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac f = fa and A = \"{j. j \\<le> n}\" and B = A and a = 0 in\n         mem_in_image, simp,\n         frule_tac x = \"fa 0\" and A = \"fa ` {j. j \\<le> n}\" in nonempty,\n         frule_tac A = \"fa ` {j. j \\<le> n}\" in nonempty_card_pos, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {};\n        0 < card (fa ` {j. j \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac A = \"fa ` {j. j \\<le> n}\" and \n         n = \"card (fa ` {j. j \\<le> n}) - Suc 0\" and f = ga in Nset2finite_inj,\n         simp, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule Module.free_generator_sub[of \"fgmodule R A z i f s\" R A],\n          assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac s = t and m = ga and n = \"card (fa ` {j. j \\<le> n}) - Suc 0\"\n         in Module.unique_expression1[of \"fgmodule R A z i f s\" R A], \n         assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> ga \\<in> {j. j\n\\<le> card (fa ` {j. j \\<le> n}) - Suc 0} \\<rightarrow>\n                                  A\n 2. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> inj_on ga\n                          {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n 3. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> l_comb R (fgmodule R A z i f s)\n                          (card (fa ` {j. j \\<le> n}) - Suc 0) t ga =\n                         \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>\n 4. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s);\n        \\<forall>j\\<in>{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}.\n           t j = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 5. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 6. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac f = fa and A = \"{j. j \\<le> n}\" in img_subset[of _ _ A],\n        rule_tac f = ga and A = \"{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\"\n        and B = \"fa ` {j. j \\<le> n}\" and ?B1.0 = A in extend_fun, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s);\n        \\<forall>j\\<in>{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}.\n           t j = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t\n                          ga =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (rule_tac s = t and n = \"card (fa ` {j. j \\<le> n}) - Suc 0\" and\n        m = ga in Module.linear_comb0_1[of M R A], assumption+,\n        simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x n fa sa t ga.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga\n        \\<in> carrier M;\n        g (l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        A \\<subseteq> carrier M; fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        x = l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        ideal R (carrier R);\n        t \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                            Suc 0} \\<rightarrow>\n                carrier R;\n        ga \\<in> {j. j \\<le> card (fa ` {j. j \\<le> n}) -\n                             Suc 0} \\<rightarrow>\n                 fa ` {j. j \\<le> n};\n        surj_to ga {j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\n         (fa ` {j. j \\<le> n});\n        l_comb R M n sa fa =\n        l_comb R M (card (fa ` {j. j \\<le> n}) - Suc 0) t ga;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t ga =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        l_comb R (fgmodule R A z i f s) (card (fa ` {j. j \\<le> n}) - Suc 0)\n         t (cmp g ga) =\n        \\<zero>\\<^bsub>fgmodule R A z i f s\\<^esub>;\n        finite {na. na \\<le> n};\n        finite {na. na \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        finite (fa ` {j. j \\<le> n}); fa 0 \\<in> fa ` {j. j \\<le> n};\n        fa ` {j. j \\<le> n} \\<noteq> {}; 0 < card (fa ` {j. j \\<le> n});\n        inj_on ga {i. i \\<le> card (fa ` {j. j \\<le> n}) - Suc 0};\n        A \\<subseteq> carrier (fgmodule R A z i f s);\n        \\<forall>j\\<in>{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}.\n           t j = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> ga \\<in> {j. j\n\\<le> card (fa ` {j. j \\<le> n}) - Suc 0} \\<rightarrow>\n                                  A\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (frule_tac f = fa and A = \"{j. j \\<le> n}\" in img_subset[of _ _ A],\n        rule_tac f = ga and A = \"{j. j \\<le> card (fa ` {j. j \\<le> n}) - Suc 0}\"\n        and B = \"fa ` {j. j \\<le> n}\" and ?B1.0 = A in extend_fun, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>}\n                         \\<subseteq> ker\\<^bsub>M,fgmodule R A z i f\n             s\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (simp add:ker_def,\n      frule Module.module_is_ag[of M],\n      simp add: aGroup.ag_inc_zero[of M],\n      simp add:Module.mHom_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surjec\\<^bsub>M,fgmodule R A z i f s\\<^esub> g", "apply (simp add:surjec_def,\n       rule conjI, simp add:mHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> surj_to g (carrier M)\n                          (carrier (fgmodule R A z i f s))", "apply (rule surj_to_test, simp add:mHom_def aHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s);\n        \\<forall>x\\<in>A. g x = x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>b\\<in>carrier (fgmodule R A z i f s).\n                            \\<exists>a\\<in>carrier M. g a = b", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        b \\<in> carrier (fgmodule R A z i f s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M. g a = b", "apply (frule Module.free_generator_generator[of \"fgmodule R A z i f s\" R A],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        b \\<in> carrier (fgmodule R A z i f s);\n        generator R (fgmodule R A z i f s) A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M. g a = b", "apply (cut_tac generator_def[of R \"fgmodule R A z i f s\" A], simp,\n        erule conjE, rotate_tac -1, frule sym,\n        thin_tac \"linear_span R (fgmodule R A z i f s) (carrier R) A =\n           carrier (fgmodule R A z i f s)\", simp,\n        thin_tac \"carrier (fgmodule R A z i f s) =\n           linear_span R (fgmodule R A z i f s) (carrier R) A\",\n        thin_tac \"A \\<subseteq> linear_span R (fgmodule R A z i f s) (carrier R) A\",\n        thin_tac \"generator R (fgmodule R A z i f s) A \\<equiv> True\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        b \\<in> linear_span R (fgmodule R A z i f s) (carrier R) A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M. g a = b", "apply (simp add:linear_span_def, erule exE, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        b = l_comb R (fgmodule R A z i f s) n sa fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M. g a = b", "apply (frule_tac g1 = g and fa1 = fa and n1 = n and sa1 = sa in \n        fg_freeTr[THEN sym, of M A z i f s], assumption+, simp,\n        thin_tac \"l_comb R (fgmodule R A z i f s) n sa fa =\n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        b = l_comb R (fgmodule R A z i f s) n sa (cmp g fa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M.\n                            g a =\n                            l_comb R (fgmodule R A z i f s) n sa (cmp g fa)", "apply (frule_tac f1 = g and s1 = sa and g1 = fa and n1 = n in \n        Module.linmap_im_lincomb[THEN sym, of M R \"carrier R\" \n              \"fgmodule R A z i f s\" _  A],\n        simp add:whole_ideal, assumption+,\n        simp add:Module.free_generator_sub, assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        b = g (l_comb R M n sa fa);\n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n        g (l_comb R M n sa fa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M.\n                            g a = g (l_comb R M n sa fa)", "apply (cut_tac whole_ideal,\n        frule_tac s = sa and n = n and m = fa in \n        Module.l_comb_mem[of M R \"carrier R\" A], assumption+,\n        simp add:Module.free_generator_sub, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g b n fa sa.\n       \\<lbrakk>A \\<noteq> {}; fgmodule_condition R f i s A z;\n        free_generator R (fgmodule R A z i f s) A; R module M;\n        free_generator R M A; R module fgmodule R A z i f s;\n        g \\<in> mHom R M (fgmodule R A z i f s); \\<forall>x\\<in>A. g x = x;\n        fa \\<in> {j. j \\<le> n} \\<rightarrow> A;\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        b = g (l_comb R M n sa fa);\n        l_comb R (fgmodule R A z i f s) n sa (cmp g fa) =\n        g (l_comb R M n sa fa);\n        ideal R (carrier R); l_comb R M n sa fa \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier M.\n                            g a = g (l_comb R M n sa fa)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) fg_free:\"\\<lbrakk>fgmodule_condition R f i s A z; \n       free_generator R (fgmodule R A z i f s) A; R module M; \n       free_generator R M A\\<rbrakk> \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> (fgmodule R A z i f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (case_tac \"A = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A; A = {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (simp add:free_generator_def generator_def linear_span_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s {} z;\n     {\\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>} =\n     carrier (fgmodule R {} z i f s) \\<and>\n     (\\<forall>n sa.\n         sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n         (\\<exists>fa.\n             fa \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n             inj_on fa {j. j \\<le> n} \\<and>\n             l_comb R (fgmodule R {} z i f s) n sa fa =\n             \\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>) \\<longrightarrow>\n         sa \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>});\n     R module M;\n     {\\<zero>\\<^bsub>M\\<^esub>} = carrier M \\<and>\n     (\\<forall>n s.\n         s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n         (\\<exists>f.\n             f \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n             inj_on f {j. j \\<le> n} \\<and>\n             l_comb R M n s f = \\<zero>\\<^bsub>M\\<^esub>) \\<longrightarrow>\n         s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>});\n     A = {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R {} z i f s\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s {} z; R module M; A = {};\n     {\\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>} =\n     carrier (fgmodule R {} z i f s);\n     \\<forall>n sa.\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>fa.\n            fa \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n            inj_on fa {j. j \\<le> n} \\<and>\n            l_comb R (fgmodule R {} z i f s) n sa fa =\n            \\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>) \\<longrightarrow>\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>};\n     {\\<zero>\\<^bsub>M\\<^esub>} = carrier M;\n     \\<forall>n s.\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>f.\n            f \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n            inj_on f {j. j \\<le> n} \\<and>\n            l_comb R M n s f = \\<zero>\\<^bsub>M\\<^esub>) \\<longrightarrow>\n        s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R {} z i f s\n 2. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (cut_tac fgmodule_is_module[of f i s A z])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>fgmodule_condition R f i s {} z; R module M; A = {};\n     {\\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>} =\n     carrier (fgmodule R {} z i f s);\n     \\<forall>n sa.\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>fa.\n            fa \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n            inj_on fa {j. j \\<le> n} \\<and>\n            l_comb R (fgmodule R {} z i f s) n sa fa =\n            \\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>) \\<longrightarrow>\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>};\n     {\\<zero>\\<^bsub>M\\<^esub>} = carrier M;\n     \\<forall>n s.\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>f.\n            f \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n            inj_on f {j. j \\<le> n} \\<and>\n            l_comb R M n s f = \\<zero>\\<^bsub>M\\<^esub>) \\<longrightarrow>\n        s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>};\n     R module fgmodule R A z i f s\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R {} z i f s\n 2. \\<lbrakk>fgmodule_condition R f i s {} z; R module M; A = {};\n     {\\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>} =\n     carrier (fgmodule R {} z i f s);\n     \\<forall>n sa.\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>fa.\n            fa \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n            inj_on fa {j. j \\<le> n} \\<and>\n            l_comb R (fgmodule R {} z i f s) n sa fa =\n            \\<zero>\\<^bsub>fgmodule R {} z i f s\\<^esub>) \\<longrightarrow>\n        sa \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>};\n     {\\<zero>\\<^bsub>M\\<^esub>} = carrier M;\n     \\<forall>n s.\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>f.\n            f \\<in> {j. j \\<le> n} \\<rightarrow> {} \\<and>\n            inj_on f {j. j \\<le> n} \\<and>\n            l_comb R M n s f = \\<zero>\\<^bsub>M\\<^esub>) \\<longrightarrow>\n        s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> fgmodule_condition R f i s A z\n 3. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (rule Module.Modules_single_carrier_isom[of M R \"fgmodule R {} z i f s\"],\n       assumption+, simp, rule sym, assumption, rule sym, assumption, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fgmodule_condition R f i s A z;\n     free_generator R (fgmodule R A z i f s) A; R module M;\n     free_generator R M A; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> M \\<cong>\\<^bsub>R\\<^esub> fgmodule R A z i f s", "apply (simp add: fg_free1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Direct sum, again\""], ["", "definition\n  miota :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n    ('a, 'r, 'm1) Module_scheme] \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"miota R M1 M = (\\<lambda>x\\<in>carrier M1. x)\""], ["", "definition\n msubmodule ::\"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n ('a, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\" where\n \"msubmodule R M M1 \\<longleftrightarrow> miota R M1 M \\<in> mHom R M1 M \\<and> \n                         (carrier M1) \\<subseteq> (carrier M)\""], ["", "(** M and M1 are R modules. **)"], ["", "definition\n  ds2 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n          ('a, 'r, 'm1) Module_scheme, ('a, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\" where\n\n  \"ds2 R M M1 M2 \\<longleftrightarrow> R module M \\<and> msubmodule R M M1 \\<and> msubmodule R M M2 \\<and> \n          (\\<forall>x\\<in>carrier M. \\<exists>m1\\<in>carrier M1. \\<exists>m2\\<in>carrier M2. x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2) \\<and>  \n           (carrier M1) \\<inter> (carrier M2) = {\\<zero>\\<^bsub>M\\<^esub>}\""], ["", "abbreviation\n  DS2  (\"(4_/ \\<Oplus>\\<^bsub>_,_\\<^esub> _)\" [92,93,92,92]92) where\n  \"M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2 == ds2 R M M1 M2\""], ["", "lemma (in Ring) ds2_commute:\"\\<lbrakk>R module M1; R module M2; R module M; \n               M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk> \\<Longrightarrow> M2 \\<Oplus>\\<^bsub>R,M\\<^esub> M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> M2 \\<Oplus>\\<^bsub>R,M\\<^esub> M1", "apply (simp add:ds2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     msubmodule R M M1 \\<and>\n     msubmodule R M M2 \\<and>\n     (\\<forall>x\\<in>carrier M.\n         \\<exists>m1\\<in>carrier M1.\n            \\<exists>m2\\<in>carrier M2.\n               x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2) \\<and>\n     carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>carrier M.\n                          \\<exists>m1\\<in>carrier M2.\n                             \\<exists>m2\\<in>carrier M1.\n                                x =\n                                m1 \\<plusminus>\\<^bsub>M\\<^esub> m2) \\<and>\n                      carrier M2 \\<inter> carrier M1 =\n                      {\\<zero>\\<^bsub>M\\<^esub>}", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M; msubmodule R M M1;\n     msubmodule R M M2;\n     \\<forall>x\\<in>carrier M.\n        \\<exists>m1\\<in>carrier M1.\n           \\<exists>m2\\<in>carrier M2.\n              x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n     carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>carrier M.\n                          \\<exists>m1\\<in>carrier M2.\n                             \\<exists>m2\\<in>carrier M1.\n                                x =\n                                m1 \\<plusminus>\\<^bsub>M\\<^esub> m2) \\<and>\n                      carrier M2 \\<inter> carrier M1 =\n                      {\\<zero>\\<^bsub>M\\<^esub>}", "apply (subst Int_commute, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M; msubmodule R M M1;\n     msubmodule R M M2;\n     \\<forall>x\\<in>carrier M.\n        \\<exists>m1\\<in>carrier M1.\n           \\<exists>m2\\<in>carrier M2.\n              x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n     carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier M.\n                         \\<exists>m1\\<in>carrier M2.\n                            \\<exists>m2\\<in>carrier M1.\n                               x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2", "apply (rule ballI, \n       drule_tac x = x in bspec, assumption,\n       (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m1 m2.\n       \\<lbrakk>R module M1; R module M2; R module M; msubmodule R M M1;\n        msubmodule R M M2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        x \\<in> carrier M; m1 \\<in> carrier M1; m2 \\<in> carrier M2;\n        x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m1\\<in>carrier M2.\n                            \\<exists>m2\\<in>carrier M1.\n                               x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2", "apply (simp add:msubmodule_def, (erule conjE)+,\n        frule_tac c = m1 in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n        frule_tac c = m2 in subsetD[of \"carrier M2\" \"carrier M\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m1 m2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n        m1 \\<in> carrier M1; m2 \\<in> carrier M2;\n        x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        m1 \\<in> carrier M; m2 \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m1a\\<in>carrier M2.\n                            \\<exists>m2a\\<in>carrier M1.\n                               m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n                               m1a \\<plusminus>\\<^bsub>M\\<^esub> m2a", "apply (frule Module.module_is_ag[of M R],\n        frule_tac x = m1 and y = m2 in aGroup.ag_pOp_commute, assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m1 m2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        m2 \\<plusminus>\\<^bsub>M\\<^esub> m1 \\<in> carrier M;\n        m1 \\<in> carrier M1; m2 \\<in> carrier M2;\n        x = m2 \\<plusminus>\\<^bsub>M\\<^esub> m1;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        m1 \\<in> carrier M; m2 \\<in> carrier M; aGroup M;\n        m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n        m2 \\<plusminus>\\<^bsub>M\\<^esub> m1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m1a\\<in>carrier M2.\n                            \\<exists>m2a\\<in>carrier M1.\n                               m2 \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n                               m1a \\<plusminus>\\<^bsub>M\\<^esub> m2a", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) msub_addition:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1;\n       x \\<in> carrier M1; y \\<in> carrier M1\\<rbrakk> \\<Longrightarrow> x \\<plusminus>\\<^bsub>M1\\<^esub> y = x \\<plusminus>\\<^bsub>M\\<^esub> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; msubmodule R M M1; x \\<in> carrier M1;\n     y \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> x \\<plusminus>\\<^bsub>M1\\<^esub> y =\n                      x \\<plusminus>\\<^bsub>M\\<^esub> y", "apply (simp add:msubmodule_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; x \\<in> carrier M1;\n     y \\<in> carrier M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> x \\<plusminus>\\<^bsub>M1\\<^esub> y =\n                      x \\<plusminus>\\<^bsub>M\\<^esub> y", "apply (frule Module.mHom_add[of M1 R M \"miota R M1 M\" x y], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; x \\<in> carrier M1;\n     y \\<in> carrier M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M;\n     miota R M1 M (x \\<plusminus>\\<^bsub>M1\\<^esub> y) =\n     miota R M1 M x \\<plusminus>\\<^bsub>M\\<^esub> miota R M1 M y\\<rbrakk>\n    \\<Longrightarrow> x \\<plusminus>\\<^bsub>M1\\<^esub> y =\n                      x \\<plusminus>\\<^bsub>M\\<^esub> y", "apply (frule Module.module_is_ag[of M1],\n       frule aGroup.ag_pOp_closed[of M1 x y], assumption+,\n       simp add:miota_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) msub_mOp:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1;\n       x \\<in> carrier M1\\<rbrakk> \\<Longrightarrow> -\\<^sub>a\\<^bsub>M1\\<^esub> x  = -\\<^sub>a\\<^bsub>M\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; msubmodule R M M1;\n     x \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a\\<^bsub>M1\\<^esub> x =\n                      -\\<^sub>a\\<^bsub>M\\<^esub> x", "apply (simp add:msubmodule_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; x \\<in> carrier M1;\n     miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a\\<^bsub>M1\\<^esub> x =\n                      -\\<^sub>a\\<^bsub>M\\<^esub> x", "apply (frule Module.module_is_ag[of M1],\n       frule_tac x = x in aGroup.ag_mOp_closed[of M1], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; x \\<in> carrier M1;\n     miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n     aGroup M1; -\\<^sub>a\\<^bsub>M1\\<^esub> x \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a\\<^bsub>M1\\<^esub> x =\n                      -\\<^sub>a\\<^bsub>M\\<^esub> x", "apply (frule Module.mHom_inv[of M1 R M x \"miota R M1 M\"], assumption+,\n       simp add:miota_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) msub_sprod:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1;\n       a \\<in> carrier R; x \\<in> carrier M1\\<rbrakk> \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x = a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; msubmodule R M M1; a \\<in> carrier R;\n     x \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x", "apply (simp add:msubmodule_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; a \\<in> carrier R; x \\<in> carrier M1;\n     miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x", "apply (frule Module.mHom_lin[of M1 R M x \"miota R M1 M\" a], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; a \\<in> carrier R; x \\<in> carrier M1;\n     miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n     miota R M1 M (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x) =\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> miota R M1 M x\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x", "apply (frule Module.sc_mem[of M1 R a x], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; a \\<in> carrier R; x \\<in> carrier M1;\n     miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n     miota R M1 M (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x) =\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> miota R M1 M x;\n     a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x \\<in> carrier M1\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> x =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x", "apply (simp add:miota_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) msub_submodule:\"\\<lbrakk>R module M; R module M1; msubmodule R M M1\\<rbrakk>\n        \\<Longrightarrow>  submodule R M (carrier M1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> submodule R M (carrier M1)", "apply (simp add:submodule_def msubmodule_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +> carrier M1 \\<and>\n                      (\\<forall>a m.\n                          a \\<in> carrier R \\<and>\n                          m \\<in> carrier M1 \\<longrightarrow>\n                          a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                          \\<in> carrier M1)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +> carrier M1\n 2. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a m.\n                         a \\<in> carrier R \\<and>\n                         m \\<in> carrier M1 \\<longrightarrow>\n                         a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (frule Module.module_is_ag[of M R],\n        frule Module.module_is_ag[of M1 R])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M; aGroup M; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> M +> carrier M1\n 2. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a m.\n                         a \\<in> carrier R \\<and>\n                         m \\<in> carrier M1 \\<longrightarrow>\n                         a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (rule aGroup.asubg_test, assumption+,\n        frule Module.module_inc_zero[of M1 R], blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M; aGroup M; aGroup M1\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier M1.\n                         \\<forall>b\\<in>carrier M1.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> b\n                            \\<in> carrier M1\n 2. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a m.\n                         a \\<in> carrier R \\<and>\n                         m \\<in> carrier M1 \\<longrightarrow>\n                         a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply ((rule ballI)+,\n       frule_tac x = b in aGroup.ag_mOp_closed[of M1], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M; aGroup M; aGroup M1;\n        a \\<in> carrier M1; b \\<in> carrier M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> b \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> b\n                         \\<in> carrier M1\n 2. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a m.\n                         a \\<in> carrier R \\<and>\n                         m \\<in> carrier M1 \\<longrightarrow>\n                         a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (frule_tac m = a and n = \"-\\<^sub>a\\<^bsub>M1\\<^esub> b\" in Module.mHom_add[of M1 R M \n        \"miota R M1 M\"], assumption+,\n        frule_tac x = a and y = \"-\\<^sub>a\\<^bsub>M1\\<^esub> b\" in aGroup.ag_pOp_closed,\n        assumption+, simp add:miota_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>R module M; R module M1;\n        (\\<lambda>x\\<in>carrier M1. x) \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M; aGroup M; aGroup M1;\n        a \\<in> carrier M1; b \\<in> carrier M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> b \\<in> carrier M1;\n        a \\<plusminus>\\<^bsub>M1\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> b =\n        a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> b;\n        a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> b\n        \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> b\n                         \\<in> carrier M1\n 2. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a m.\n                         a \\<in> carrier R \\<and>\n                         m \\<in> carrier M1 \\<longrightarrow>\n                         a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (frule_tac m = b in Module.mHom_inv[of M1 R M _ \"miota R M1 M\"], \n          assumption+, simp add:miota_def, simp add:miota_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n     carrier M1 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a m.\n                         a \\<in> carrier R \\<and>\n                         m \\<in> carrier M1 \\<longrightarrow>\n                         a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M; a \\<in> carrier R;\n        m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (frule_tac m = m and a = a in Module.mHom_lin [of M1 R M _ \n       \"miota R M1 M\" _], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M; a \\<in> carrier R;\n        m \\<in> carrier M1;\n        miota R M1 M (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m) =\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> miota R M1 M m\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (frule_tac a = a and m = m in Module.sc_mem[of M1 R], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module M; R module M1; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M; a \\<in> carrier R;\n        m \\<in> carrier M1;\n        miota R M1 M (a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m) =\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> miota R M1 M m;\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M1", "apply (simp add:miota_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) ds2_unique:\"\\<lbrakk>R module M; R module M1; R module M2; \n       ds2 R M M1 M2;  m1 \\<in> carrier M1; m1' \\<in> carrier M1; \n                       m2 \\<in> carrier M2; m2' \\<in> carrier M2; \n       m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 = m1' \\<plusminus>\\<^bsub>M\\<^esub> m2'\\<rbrakk> \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2'\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule msub_submodule [of M M1], assumption+,\n       simp add:ds2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2';\n     submodule R M (carrier M1)\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule msub_submodule [of M M2], assumption+,\n       simp add:ds2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2';\n     submodule R M (carrier M1); submodule R M (carrier M2)\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule Module.submodule_subset[of M R \"carrier M1\"], assumption,\n        frule Module.submodule_subset[of M R \"carrier M2\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2';\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M;\n     carrier M2 \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule subsetD [of \"carrier M1\" \"carrier M\" m1], assumption+,\n        frule subsetD [of \"carrier M1\" \"carrier M\" m1'], assumption+,\n        frule subsetD [of \"carrier M2\" \"carrier M\" \"m2\"], assumption+,\n        frule subsetD [of \"carrier M2\" \"carrier M\" \"m2'\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2';\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1 \\<in> carrier M; m1' \\<in> carrier M; m2 \\<in> carrier M;\n     m2' \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule_tac Module.module_is_ag[of M R],\n        frule_tac x = m1 and y = m2 in aGroup.ag_pOp_closed, assumption+,\n        frule_tac x = m1' and y = m2' in aGroup.ag_pOp_closed, assumption+,\n        frule_tac x = m2' in aGroup.ag_mOp_closed, assumption+,\n        frule_tac x = m2 in aGroup.ag_mOp_closed, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2';\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1 \\<in> carrier M; m1' \\<in> carrier M; m2 \\<in> carrier M;\n     m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule_tac a = \"m1 \\<plusminus>\\<^bsub>M\\<^esub> m2\" and b = \"m1' \\<plusminus>\\<^bsub>M\\<^esub> m2'\" and c = \"-\\<^sub>a\\<^bsub>M\\<^esub> m2\" in \n        aGroup.ag_pOp_add_r, assumption+,\n        thin_tac \"m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 = m1' \\<plusminus>\\<^bsub>M\\<^esub> m2'\",\n        simp add:aGroup.ag_pOp_assoc[of M m1 m2 \"-\\<^sub>a\\<^bsub>M\\<^esub> m2\"]\n                                     aGroup.ag_r_inv1 aGroup.ag_r_zero,\n        simp add:aGroup.ag_pOp_assoc[of M m1' m2' \"-\\<^sub>a\\<^bsub>M\\<^esub> m2\"],\n        frule_tac x = m2' and y = \"-\\<^sub>a\\<^bsub>M\\<^esub> m2\" in aGroup.ag_pOp_closed,\n               assumption+,\n        frule_tac x = m1' in aGroup.ag_mOp_closed, assumption+,\n        frule_tac x = m1' and y = \"m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\" in \n                           aGroup.ag_pOp_closed, assumption+,\n        frule_tac a = m1 and b = \"m1' \\<plusminus>\\<^bsub>M\\<^esub> (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\" and \n        c = \"-\\<^sub>a\\<^bsub>M\\<^esub> m1'\" in aGroup.ag_pOp_add_l[of M], simp, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\n     \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\n     \\<in> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub>\n      -\\<^sub>a\\<^bsub>M\\<^esub> m2) \\<plusminus>\\<^bsub>M\\<^esub>\n     m2\n     \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2);\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\n     \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m1' \\<plusminus>\\<^bsub>M\\<^esub>\n      (m2' \\<plusminus>\\<^bsub>M\\<^esub>\n       -\\<^sub>a\\<^bsub>M\\<^esub> m2))\\<rbrakk>\n    \\<Longrightarrow> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n                      (m2' \\<plusminus>\\<^bsub>M\\<^esub>\n                       -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n                      m1' \\<and>\n                      m2 = m2'", "apply (frule aGroup.ag_pOp_assoc[THEN sym, of M \"-\\<^sub>a\\<^bsub>M\\<^esub> m1'\" \"m1'\"\n                                                      \"(m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\n     \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\n     \\<in> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub>\n      -\\<^sub>a\\<^bsub>M\\<^esub> m2) \\<plusminus>\\<^bsub>M\\<^esub>\n     m2\n     \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1 =\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2);\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\n     \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m1' \\<plusminus>\\<^bsub>M\\<^esub>\n      (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2));\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m1' \\<plusminus>\\<^bsub>M\\<^esub>\n      (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)) =\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub>\n      -\\<^sub>a\\<^bsub>M\\<^esub> m2)\\<rbrakk>\n    \\<Longrightarrow> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n                      (m2' \\<plusminus>\\<^bsub>M\\<^esub>\n                       -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n                      m1' \\<and>\n                      m2 = m2'", "apply (rotate_tac -6, frule sym, thin_tac \"m1 = m1' \\<plusminus>\\<^bsub>M\\<^esub> (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2)\",\n       thin_tac \"-\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 = -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> (m1' \\<plusminus>\\<^bsub>M\\<^esub> (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2))\",\n       simp, simp add:aGroup.ag_l_inv1 aGroup.ag_l_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (frule Module.submodule_mOp_closed [of M R \"carrier M1\" m1'], \n                                                     assumption+,\n        frule Module.submodule_pOp_closed [of M R \"carrier M1\" \"-\\<^sub>a\\<^bsub>M\\<^esub> m1'\" \n                                                m1], assumption+,\n        frule Module.submodule_pOp_closed [of M R \"carrier M2\" m2' \"-\\<^sub>a\\<^bsub>M\\<^esub> m2\"],\n                                                     assumption+,\n     rule Module.submodule_mOp_closed [of M R \"carrier M2\" m2], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (subgoal_tac \"(-\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1) \\<in> carrier M1 \\<inter> carrier M2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'\n 2. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n                      m1\n                      \\<in> carrier M1 \\<inter> carrier M2", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n                      m1\n                      \\<in> carrier M1 \\<inter> carrier M2\n 2. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'", "apply (subgoal_tac \"carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2;\n     carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'\n 2. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> carrier M1 \\<inter> carrier M2 =\n                      {\\<zero>\\<^bsub>M\\<^esub>}", "apply (frule sym, thin_tac \"-\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 = m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2;\n     carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2 =\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     m1\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'\n 2. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> carrier M1 \\<inter> carrier M2 =\n                      {\\<zero>\\<^bsub>M\\<^esub>}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> = m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M1;\n     \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     \\<zero>\\<^bsub>M\\<^esub>;\n     carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2 =\n     \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> m1 = m1' \\<and> m2 = m2'\n 2. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> carrier M1 \\<inter> carrier M2 =\n                      {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add:aGroup.ag_eq_diffzero[THEN sym, of M m2' m2] aGroup.ag_r_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n             \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M; m1 \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1 =\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2;\n     R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; m1 \\<in> carrier M1;\n     m1' \\<in> carrier M1; m2 \\<in> carrier M2; m2' \\<in> carrier M2;\n     submodule R M (carrier M1); submodule R M (carrier M2);\n     carrier M1 \\<subseteq> carrier M; carrier M2 \\<subseteq> carrier M;\n     m1' \\<in> carrier M; m2 \\<in> carrier M; m2' \\<in> carrier M; aGroup M;\n     m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2' \\<in> carrier M;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n     m1' \\<plusminus>\\<^bsub>M\\<^esub>\n     (m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2) =\n     m1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<in> carrier M1;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1;\n     m2' \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> m2\n     \\<in> carrier M2;\n     -\\<^sub>a\\<^bsub>M\\<^esub> m1' \\<plusminus>\\<^bsub>M\\<^esub> m1\n     \\<in> carrier M1 \\<inter> carrier M2\\<rbrakk>\n    \\<Longrightarrow> carrier M1 \\<inter> carrier M2 =\n                      {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add:ds2_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) miota_injec:\"\\<lbrakk>R module M; R module M1; R module M2; \n       ds2 R M M1 M2; msubmodule R M M1\\<rbrakk> \\<Longrightarrow> \n       miota R M1 M \\<in> mHom R M1 M \\<and> injec\\<^bsub>M1,M\\<^esub> (miota R M1 M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> miota R M1 M \\<in> mHom R M1 M \\<and>\n                      injec\\<^bsub>M1,M\\<^esub> miota R M1 M", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> miota R M1 M \\<in> mHom R M1 M\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> injec\\<^bsub>M1,M\\<^esub> miota R M1 M", "apply (simp add:msubmodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> injec\\<^bsub>M1,M\\<^esub> miota R M1 M", "apply (simp add:injec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> miota R M1 M \\<in> aHom M1 M \\<and>\n                      ker\\<^bsub>M1,M\\<^esub> miota R M1 M =\n                      {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> miota R M1 M \\<in> aHom M1 M\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M =\n                      {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (simp add:msubmodule_def mHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M =\n                      {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n                      \\<subseteq> {\\<zero>\\<^bsub>M1\\<^esub>}\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M1\\<^esub>}\n                      \\<subseteq> ker\\<^bsub>M1,M\\<^esub> miota R M1 M", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M1\\<^esub>}\n                      \\<subseteq> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n                      \\<subseteq> {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (rule subsetI, simp, simp add:ker_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1;\n        x = \\<zero>\\<^bsub>M1\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1 \\<and>\n                         miota R M1 M \\<zero>\\<^bsub>M1\\<^esub> =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n                      \\<subseteq> {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (simp add:Module.module_inc_zero, simp add:msubmodule_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        miota R M1 M \\<in> mHom R M1 M \\<and>\n        carrier M1 \\<subseteq> carrier M;\n        x = \\<zero>\\<^bsub>M1\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> miota R M1 M \\<zero>\\<^bsub>M1\\<^esub> =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n                      \\<subseteq> {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x = \\<zero>\\<^bsub>M1\\<^esub>;\n        miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M\\<rbrakk>\n       \\<Longrightarrow> miota R M1 M \\<zero>\\<^bsub>M1\\<^esub> =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n                      \\<subseteq> {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (simp add:Module.mHom_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module M1; R module M2;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1\\<rbrakk>\n    \\<Longrightarrow> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\n                      \\<subseteq> {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1;\n        x \\<in> ker\\<^bsub>M1,M\\<^esub> miota R M1 M\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {\\<zero>\\<^bsub>M1\\<^esub>}", "apply (simp add:ker_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; msubmodule R M M1;\n        x \\<in> carrier M1;\n        miota R M1 M x = \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M1\\<^esub>", "apply (simp add:miota_def, simp add:msubmodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        miota R M1 M \\<in> mHom R M1 M \\<and>\n        carrier M1 \\<subseteq> carrier M;\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M1;\n        x = \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> =\n                         \\<zero>\\<^bsub>M1\\<^esub>", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M1;\n        x = \\<zero>\\<^bsub>M\\<^esub>; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> =\n                         \\<zero>\\<^bsub>M1\\<^esub>", "apply (frule Module.mHom_0 [of M1 R M \"miota R M1 M\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M1;\n        x = \\<zero>\\<^bsub>M\\<^esub>; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M;\n        miota R M1 M \\<zero>\\<^bsub>M1\\<^esub> =\n        \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> =\n                         \\<zero>\\<^bsub>M1\\<^esub>", "apply (frule Module.module_inc_zero [of M1 R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module M1; R module M2;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M1;\n        x = \\<zero>\\<^bsub>M\\<^esub>; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M;\n        miota R M1 M \\<zero>\\<^bsub>M1\\<^esub> = \\<zero>\\<^bsub>M\\<^esub>;\n        \\<zero>\\<^bsub>M1\\<^esub> \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> =\n                         \\<zero>\\<^bsub>M1\\<^esub>", "apply (simp add:miota_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  mproj1 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme,\n    ('a, 'r, 'm1) Module_scheme, ('a, 'r, 'm1) Module_scheme] \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"mproj1 R M1 M2 M = (\\<lambda>x\\<in>carrier M. THE x1. x1 \\<in> carrier M1 \\<and>\n                                          (x \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> x1)) \\<in> carrier M2)\""], ["", "definition\n  mproj2 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme,\n    ('a, 'r, 'm1) Module_scheme, ('a, 'r, 'm1) Module_scheme] \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"mproj2 R M1 M2 M = mproj1 R M2 M1 M\""], ["", "(** mproj is used under the condition ds2 R M M1 M2 **)"], ["", "lemma (in Ring) ds2_components:\"\\<lbrakk>R module M1; R module M2; R module M;\n       M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M\\<rbrakk> \\<Longrightarrow> \n         \\<exists>a1\\<in>carrier M1. \\<exists>a2\\<in>carrier M2. a = a1 \\<plusminus>\\<^bsub>M\\<^esub> a2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a1\\<in>carrier M1.\n                         \\<exists>a2\\<in>carrier M2.\n                            a = a1 \\<plusminus>\\<^bsub>M\\<^esub> a2", "by (simp add:ds2_def)"], ["", "lemma (in Ring) ds2_components1:\"\\<lbrakk>R module M1; R module M2; R module M;\n       M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M\\<rbrakk> \\<Longrightarrow> \n         \\<exists>a1\\<in>carrier M1. a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a1\\<in>carrier M1.\n                         a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> a1\n                         \\<in> carrier M2", "apply (frule ds2_components[of M1 M2 M a], assumption+, (erule bexE)+,\n       frule Module.module_is_ag[of M R],\n       unfold ds2_def, frule conjunct2[THEN conjunct1],\n       frule conjunct2[THEN conjunct2[THEN conjunct1]], fold ds2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M;\n        a1 \\<in> carrier M1; a2 \\<in> carrier M2;\n        a = a1 \\<plusminus>\\<^bsub>M\\<^esub> a2; aGroup M;\n        msubmodule R M M1; msubmodule R M M2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a1\\<in>carrier M1.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> a1\n                            \\<in> carrier M2", "apply (simp add:msubmodule_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        a1 \\<plusminus>\\<^bsub>M\\<^esub> a2 \\<in> carrier M;\n        a1 \\<in> carrier M1; a2 \\<in> carrier M2;\n        a = a1 \\<plusminus>\\<^bsub>M\\<^esub> a2; aGroup M;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M;\n        carrier M2 \\<subseteq> carrier M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a1a\\<in>carrier M1.\n                            a1 \\<plusminus>\\<^bsub>M\\<^esub>\n                            a2 \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> a1a\n                            \\<in> carrier M2", "apply (frule_tac c = a1 in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n        frule_tac c = a2 in subsetD[of \"carrier M2\" \"carrier M\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        a1 \\<plusminus>\\<^bsub>M\\<^esub> a2 \\<in> carrier M;\n        a1 \\<in> carrier M1; a2 \\<in> carrier M2;\n        a = a1 \\<plusminus>\\<^bsub>M\\<^esub> a2; aGroup M;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        a1 \\<in> carrier M; a2 \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a1a\\<in>carrier M1.\n                            a1 \\<plusminus>\\<^bsub>M\\<^esub>\n                            a2 \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> a1a\n                            \\<in> carrier M2", "apply (frule Module.module_is_ag[of M],\n        frule_tac x = a1 and y = a2 in aGroup.ag_pOp_commute, assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<in> carrier M;\n        a1 \\<in> carrier M1; a2 \\<in> carrier M2;\n        a = a2 \\<plusminus>\\<^bsub>M\\<^esub> a1;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        a1 \\<in> carrier M; a2 \\<in> carrier M; aGroup M;\n        a1 \\<plusminus>\\<^bsub>M\\<^esub> a2 =\n        a2 \\<plusminus>\\<^bsub>M\\<^esub> a1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a1a\\<in>carrier M1.\n                            a2 \\<plusminus>\\<^bsub>M\\<^esub>\n                            a1 \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> a1a\n                            \\<in> carrier M2", "apply (frule_tac x = a1 and y = a2 in aGroup.ag_pOp_closed[of M], assumption+,\n        frule_tac x = a1 in aGroup.ag_mOp_closed[of M], assumption+,\n        frule_tac a = \"a1 \\<plusminus>\\<^bsub>M\\<^esub> a2\" and b = \"a2 \\<plusminus>\\<^bsub>M\\<^esub> a1\" and c = \"-\\<^sub>a\\<^bsub>M\\<^esub> a1\" in \n        aGroup.ag_pOp_add_r[of M], assumption+,\n        frule_tac x = a2 and y = a1 and z = \"-\\<^sub>a\\<^bsub>M\\<^esub> a1\" in \n                                   aGroup.ag_pOp_assoc[of M], assumption+,\n        simp add:aGroup.ag_r_inv1 aGroup.ag_r_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n        a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<in> carrier M;\n        a1 \\<in> carrier M1; a2 \\<in> carrier M2;\n        a = a2 \\<plusminus>\\<^bsub>M\\<^esub> a1;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        a1 \\<in> carrier M; a2 \\<in> carrier M; aGroup M;\n        a1 \\<plusminus>\\<^bsub>M\\<^esub> a2 =\n        a2 \\<plusminus>\\<^bsub>M\\<^esub> a1;\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M;\n        a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 =\n        a2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a1a\\<in>carrier M1.\n                            a2 \\<plusminus>\\<^bsub>M\\<^esub>\n                            a1 \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> a1a\n                            \\<in> carrier M2", "apply (thin_tac \"a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<in> carrier M\",\n        thin_tac \"a = a2 \\<plusminus>\\<^bsub>M\\<^esub> a1\",\n        thin_tac \"a2 \\<in> carrier M\",\n        thin_tac \"a1 \\<plusminus>\\<^bsub>M\\<^esub> a2 = a2 \\<plusminus>\\<^bsub>M\\<^esub> a1\",\n        frule sym, thin_tac \"a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1 = a2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a1 \\<in> carrier M1;\n        a2 \\<in> carrier M2; miota R M1 M \\<in> mHom R M1 M;\n        carrier M1 \\<subseteq> carrier M; miota R M2 M \\<in> mHom R M2 M;\n        carrier M2 \\<subseteq> carrier M; a1 \\<in> carrier M; aGroup M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M;\n        a2 =\n        a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a1a\\<in>carrier M1.\n                            a2 \\<plusminus>\\<^bsub>M\\<^esub>\n                            a1 \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> a1a\n                            \\<in> carrier M2", "apply (frule_tac a = a2 and b = \"a2 \\<plusminus>\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\" in \n                      eq_elem_in[of _ \"carrier M2\"], assumption, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mprojTr1:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2;\n  x \\<in> carrier M \\<rbrakk> \\<Longrightarrow> \\<exists>!x1. x1 \\<in> carrier M1 \\<and> (x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1) \\<in> carrier M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x1.\n                         x1 \\<in> carrier M1 \\<and>\n                         x \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                         \\<in> carrier M2", "apply (frule Module.module_is_ag[of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x1.\n                         x1 \\<in> carrier M1 \\<and>\n                         x \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                         \\<in> carrier M2", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x1.\n                         x1 \\<in> carrier M1 \\<and>\n                         x \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                         \\<in> carrier M2\n 2. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M; aGroup M;\n        x1 \\<in> carrier M1 \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1 \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> x1 = y", "apply (frule ds2_components1 [of M1 M2 M x], assumption+, erule bexE, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M; aGroup M;\n        x1 \\<in> carrier M1 \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1 \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> x1 = y", "apply (simp add:ds2_def, (erule conjE)+, simp add:msubmodule_def,\n        (erule conjE)+,\n        frule_tac c = x1 in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n        frule_tac x = x1 in aGroup.ag_mOp_closed, assumption+,\n        frule_tac c = y in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n        frule_tac x = y in aGroup.ag_mOp_closed, assumption+,\n        frule_tac ?m1.0 = x1 and ?m1' = y and ?m2.0 = \"x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\" and \n         ?m2' = \"x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\" in ds2_unique[of M M1 M2], assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\n 2. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> carrier M1\n 3. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> y \\<in> carrier M1\n 4. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                         \\<in> carrier M2\n 5. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> y\n                         \\<in> carrier M2\n 6. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x1 \\<plusminus>\\<^bsub>M\\<^esub>\n                         (x \\<plusminus>\\<^bsub>M\\<^esub>\n                          -\\<^sub>a\\<^bsub>M\\<^esub> x1) =\n                         y \\<plusminus>\\<^bsub>M\\<^esub>\n                         (x \\<plusminus>\\<^bsub>M\\<^esub>\n                          -\\<^sub>a\\<^bsub>M\\<^esub> y)\n 7. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M;\n        x1 = y \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 =\n        x \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> y\\<rbrakk>\n       \\<Longrightarrow> x1 = y", "apply (simp add:ds2_def msubmodule_def, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x1 \\<plusminus>\\<^bsub>M\\<^esub>\n                         (x \\<plusminus>\\<^bsub>M\\<^esub>\n                          -\\<^sub>a\\<^bsub>M\\<^esub> x1) =\n                         y \\<plusminus>\\<^bsub>M\\<^esub>\n                         (x \\<plusminus>\\<^bsub>M\\<^esub>\n                          -\\<^sub>a\\<^bsub>M\\<^esub> y)\n 2. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M;\n        x1 = y \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 =\n        x \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> y\\<rbrakk>\n       \\<Longrightarrow> x1 = y", "apply (simp add:aGroup.ag_pOp_commute[of M x])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<plusminus>\\<^bsub>M\\<^esub> x\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<plusminus>\\<^bsub>M\\<^esub> x\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x1 \\<plusminus>\\<^bsub>M\\<^esub>\n                         (-\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<plusminus>\\<^bsub>M\\<^esub>\n                          x) =\n                         y \\<plusminus>\\<^bsub>M\\<^esub>\n                         (-\\<^sub>a\\<^bsub>M\\<^esub> y \\<plusminus>\\<^bsub>M\\<^esub>\n                          x)\n 2. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M;\n        x1 = y \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 =\n        x \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> y\\<rbrakk>\n       \\<Longrightarrow> x1 = y", "apply (simp add:aGroup.ag_pOp_assoc[THEN sym, of M _ _ x])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<plusminus>\\<^bsub>M\\<^esub> x\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<plusminus>\\<^bsub>M\\<^esub> x\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x1 \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<plusminus>\\<^bsub>M\\<^esub>\n                         x =\n                         y \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> y \\<plusminus>\\<^bsub>M\\<^esub>\n                         x\n 2. \\<And>x1 y.\n       \\<lbrakk>R module M1; R module M2; R module M; x \\<in> carrier M;\n        aGroup M; x1 \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2;\n        y \\<in> carrier M1;\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y\n        \\<in> carrier M2;\n        \\<forall>x\\<in>carrier M.\n           \\<exists>m1\\<in>carrier M1.\n              \\<exists>m2\\<in>carrier M2.\n                 x = m1 \\<plusminus>\\<^bsub>M\\<^esub> m2;\n        carrier M1 \\<inter> carrier M2 = {\\<zero>\\<^bsub>M\\<^esub>};\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        miota R M2 M \\<in> mHom R M2 M; carrier M2 \\<subseteq> carrier M;\n        x1 \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M;\n        y \\<in> carrier M; -\\<^sub>a\\<^bsub>M\\<^esub> y \\<in> carrier M;\n        x1 = y \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 =\n        x \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> y\\<rbrakk>\n       \\<Longrightarrow> x1 = y", "apply ((subst aGroup.ag_r_inv1, assumption+)+, simp, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mprojTr2:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2;\n      x \\<in> carrier M; x1 \\<in> carrier M1; (x \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> x1)) \\<in> carrier M2; \n      y1 \\<in> carrier M1;(x \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> y1)) \\<in> carrier M2  \\<rbrakk> \\<Longrightarrow> x1 = y1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M;\n     x1 \\<in> carrier M1;\n     x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n     \\<in> carrier M2;\n     y1 \\<in> carrier M1;\n     x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y1\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> x1 = y1", "apply (frule_tac x = x in mprojTr1[of M1 M2 M], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M;\n     x1 \\<in> carrier M1;\n     x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n     \\<in> carrier M2;\n     y1 \\<in> carrier M1;\n     x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> y1\n     \\<in> carrier M2;\n     \\<exists>!x1.\n        x1 \\<in> carrier M1 \\<and>\n        x \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n        \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> x1 = y1", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mprojTr3:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2;\n      a \\<in> carrier M; a1 \\<in> carrier M1; (a \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1)) \\<in> carrier M2\\<rbrakk> \\<Longrightarrow>\n      (THE x1. x1 \\<in> carrier M1 \\<and> a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) = a1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M;\n     a1 \\<in> carrier M1;\n     a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> (THE x1.\n                          x1 \\<in> carrier M1 \\<and>\n                          a \\<plusminus>\\<^bsub>M\\<^esub>\n                          -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                          \\<in> carrier M2) =\n                      a1", "apply (subgoal_tac \"(THE x1. x1 \\<in> carrier M1 \\<and> a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) \\<in> \n         carrier M1 \\<and>  a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> (THE x1. x1 \\<in> carrier M1 \\<and>  \n         a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) \\<in> carrier M2\", \n       rule mprojTr2[of M1 M2 M a \n       \"THE x1. x1 \\<in> carrier M1 \\<and> a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2\" a1], assumption+,\n       simp, simp, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M;\n     a1 \\<in> carrier M1;\n     a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> (THE x1.\n                          x1 \\<in> carrier M1 \\<and>\n                          a \\<plusminus>\\<^bsub>M\\<^esub>\n                          -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                          \\<in> carrier M2)\n                      \\<in> carrier M1 \\<and>\n                      a \\<plusminus>\\<^bsub>M\\<^esub>\n                      -\\<^sub>a\\<^bsub>M\\<^esub> (THE x1.\n               x1 \\<in> carrier M1 \\<and>\n               a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1\n               \\<in> carrier M2)\n                      \\<in> carrier M2", "apply (rule theI')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M;\n     a1 \\<in> carrier M1;\n     a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n     \\<in> carrier M2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!x.\n                         x \\<in> carrier M1 \\<and>\n                         a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> x\n                         \\<in> carrier M2", "apply (simp add:mprojTr1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mproj:\"\\<lbrakk>R module M1; R module M2; R module M; ds2 R M M1 M2\\<rbrakk>\n      \\<Longrightarrow> mproj1 R M1 M2 M \\<in> mHom R M M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> mHom R M M1", "apply (simp add:mHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> aHom M M1 \\<and>\n                      (\\<forall>a\\<in>carrier R.\n                          \\<forall>m\\<in>carrier M.\n                             mproj1 R M1 M2 M\n                              (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                             a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                             mproj1 R M1 M2 M m)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> aHom M M1\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (simp add:aHom_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M\n                      \\<in> carrier M \\<rightarrow> carrier M1 \\<and>\n                      mproj1 R M1 M2 M \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mproj1 R M1 M2 M\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mproj1 R M1 M2 M\n                              a \\<plusminus>\\<^bsub>M1\\<^esub>\n                             mproj1 R M1 M2 M b)\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M\n                      \\<in> carrier M \\<rightarrow> carrier M1\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mproj1 R M1 M2 M\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mproj1 R M1 M2 M\n                              a \\<plusminus>\\<^bsub>M1\\<^esub>\n                             mproj1 R M1 M2 M b)\n 3. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (rule Pi_I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> mproj1 R M1 M2 M x \\<in> carrier M1\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mproj1 R M1 M2 M\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mproj1 R M1 M2 M\n                              a \\<plusminus>\\<^bsub>M1\\<^esub>\n                             mproj1 R M1 M2 M b)\n 3. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (simp add:mproj1_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             x \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2)\n                         \\<in> carrier M1\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mproj1 R M1 M2 M\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mproj1 R M1 M2 M\n                              a \\<plusminus>\\<^bsub>M1\\<^esub>\n                             mproj1 R M1 M2 M b)\n 3. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (frule_tac a = x in ds2_components1[of M1 M2 M], assumption+,\n        erule bexE,\n        frule_tac a = x and ?a1.0 = a1 in mprojTr3[of M1 M2 M], assumption+,\n        simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M1 M2 M \\<in> extensional (carrier M) \\<and>\n                      (\\<forall>a\\<in>carrier M.\n                          \\<forall>b\\<in>carrier M.\n                             mproj1 R M1 M2 M\n                              (a \\<plusminus>\\<^bsub>M\\<^esub> b) =\n                             mproj1 R M1 M2 M\n                              a \\<plusminus>\\<^bsub>M1\\<^esub>\n                             mproj1 R M1 M2 M b)\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (simp add:restrict_def mproj1_def extensional_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier M.\n                         \\<forall>b\\<in>carrier M.\n                            (a \\<plusminus>\\<^bsub>M\\<^esub> b\n                             \\<in> carrier M \\<longrightarrow>\n                             (THE x1.\n                                 x1 \\<in> carrier M1 \\<and>\n                                 a \\<plusminus>\\<^bsub>M\\<^esub>\n                                 b \\<plusminus>\\<^bsub>M\\<^esub>\n                                 -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                                 \\<in> carrier M2) =\n                             (THE x1.\n                                 x1 \\<in> carrier M1 \\<and>\n                                 a \\<plusminus>\\<^bsub>M\\<^esub>\n                                 -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                                 \\<in> carrier\n  M2) \\<plusminus>\\<^bsub>M1\\<^esub>\n                             (THE x1.\n                                 x1 \\<in> carrier M1 \\<and>\n                                 b \\<plusminus>\\<^bsub>M\\<^esub>\n                                 -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                                 \\<in> carrier M2)) \\<and>\n                            (a \\<plusminus>\\<^bsub>M\\<^esub> b\n                             \\<notin> carrier M \\<longrightarrow>\n                             undefined =\n                             (THE x1.\n                                 x1 \\<in> carrier M1 \\<and>\n                                 a \\<plusminus>\\<^bsub>M\\<^esub>\n                                 -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                                 \\<in> carrier\n  M2) \\<plusminus>\\<^bsub>M1\\<^esub>\n                             (THE x1.\n                                 x1 \\<in> carrier M1 \\<and>\n                                 b \\<plusminus>\\<^bsub>M\\<^esub>\n                                 -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                                 \\<in> carrier M2))\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply ((rule ballI)+,\n        frule Module.module_is_ag[of M R], simp add:aGroup.ag_pOp_closed,\n        frule_tac x = a and y = b in aGroup.ag_pOp_closed, assumption+,\n        frule_tac a = a in ds2_components1[of M1 M2 M], assumption+,\n        frule_tac a = b in ds2_components1[of M1 M2 M], assumption+,\n        frule_tac a = \"a \\<plusminus>\\<^bsub>M\\<^esub> b\" in ds2_components1[of M1 M2 M], assumption+,\n        (erule bexE)+, rename_tac b1 ab,\n        frule_tac a = \"a \\<plusminus>\\<^bsub>M\\<^esub> b\" and ?a1.0 = ab in mprojTr3[of M1 M2 M],\n        assumption+,\n        frule_tac a = a and ?a1.0 = a1 in mprojTr3[of M1 M2 M], assumption+,\n        frule_tac a = b and ?a1.0 = b1 in mprojTr3[of M1 M2 M], assumption+,\n        simp,\n        thin_tac \"(THE x1. x1 \\<in> carrier M1 \\<and>\n                                  a \\<plusminus>\\<^bsub>M\\<^esub> b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) = ab\",\n        thin_tac \"(THE x1. x1 \\<in> carrier M1 \\<and> a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) = a1\",\n        thin_tac \"(THE x1. x1 \\<in> carrier M1 \\<and> b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) = b1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b a1 b1 ab.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M;\n        b \\<in> carrier M; aGroup M;\n        a \\<plusminus>\\<^bsub>M\\<^esub> b \\<in> carrier M;\n        a1 \\<in> carrier M1;\n        a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n        \\<in> carrier M2;\n        b1 \\<in> carrier M1;\n        b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1\n        \\<in> carrier M2;\n        ab \\<in> carrier M1;\n        a \\<plusminus>\\<^bsub>M\\<^esub> b \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> ab\n        \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> ab = a1 \\<plusminus>\\<^bsub>M1\\<^esub> b1\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (frule Module.module_is_ag[of M2],\n        frule_tac x = \"a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\" and y = \"b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1\" in \n                       aGroup.ag_pOp_closed[of M2], assumption+,\n        frule_tac x = \"a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\" and y = \"b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1\" in \n                     msub_addition[of M M2], assumption+,\n        simp add:ds2_def, assumption+, simp,\n          thin_tac \"a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M2\\<^esub> (b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1) = \n                                 a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> (b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1)\",\n        unfold ds2_def, frule conjunct2[THEN conjunct1], fold ds2_def,\n          simp add:msubmodule_def, (erule conjE)+,\n         frule_tac c = a1 in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n         frule_tac c = b1 in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n         frule_tac x = a1 in aGroup.ag_mOp_closed, assumption+,\n         frule_tac x = b1 in aGroup.ag_mOp_closed, assumption+,\n         frule_tac a = a and b = \"-\\<^sub>a\\<^bsub>M\\<^esub> a1\" and c = b and d = \"-\\<^sub>a\\<^bsub>M\\<^esub> b1\" in \n                   aGroup.pOp_assocTr43[of M], assumption+, simp,\n         thin_tac \"a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> (b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1) =\n                                      a \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> b) \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1\",\n         frule_tac x = \"-\\<^sub>a\\<^bsub>M\\<^esub> a1\" and y = b in aGroup.ag_pOp_commute, \n         assumption+, simp,\n         frule_tac a1 = a and b1 = b and c1 = \"-\\<^sub>a\\<^bsub>M\\<^esub> a1\" and d1 = \"-\\<^sub>a\\<^bsub>M\\<^esub> b1\" in \n         aGroup.pOp_assocTr43[THEN sym], assumption+, simp,\n         thin_tac \"a \\<plusminus>\\<^bsub>M\\<^esub> (b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1) \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1 = \n                                        a \\<plusminus>\\<^bsub>M\\<^esub> b \\<plusminus>\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1)\",\n         frule_tac x1 = a1 and y1 = b1 in aGroup.ag_p_inv[THEN sym, of M],\n          assumption+, simp,\n         thin_tac \"-\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1 = -\\<^sub>a\\<^bsub>M\\<^esub> (a1 \\<plusminus>\\<^bsub>M\\<^esub> b1)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b a1 b1 ab.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier M;\n        b \\<in> carrier M; aGroup M;\n        a \\<plusminus>\\<^bsub>M\\<^esub> b \\<in> carrier M;\n        a1 \\<in> carrier M1;\n        a \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n        \\<in> carrier M2;\n        b1 \\<in> carrier M1;\n        b \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> b1\n        \\<in> carrier M2;\n        ab \\<in> carrier M1;\n        a \\<plusminus>\\<^bsub>M\\<^esub> b \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> ab\n        \\<in> carrier M2;\n        aGroup M2;\n        a \\<plusminus>\\<^bsub>M\\<^esub> b \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> (a1 \\<plusminus>\\<^bsub>M\\<^esub> b1)\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M; b1 \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> b1 \\<in> carrier M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<plusminus>\\<^bsub>M\\<^esub> b =\n        b \\<plusminus>\\<^bsub>M\\<^esub>\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1\\<rbrakk>\n       \\<Longrightarrow> ab = a1 \\<plusminus>\\<^bsub>M1\\<^esub> b1\n 2. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (rule_tac x = \"a \\<plusminus>\\<^bsub>M\\<^esub> b\" and ?x1.0 = ab and ?y1.0 = \"a1 \\<plusminus>\\<^bsub>M1\\<^esub> b1\" in \n          mprojTr2[of M1 M2 M], assumption+,\n         frule Module.module_is_ag[of M1], \n         simp add:aGroup.ag_pOp_closed[of M1], unfold ds2_def, \n         frule conjunct2[THEN conjunct1], fold ds2_def,\n         subst msub_addition[of M M1], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier R.\n                         \\<forall>m\\<in>carrier M.\n                            mproj1 R M1 M2 M\n                             (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                            a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                            mproj1 R M1 M2 M m", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> mproj1 R M1 M2 M\n                          (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         mproj1 R M1 M2 M m", "apply (simp add:mproj1_def, simp add:Module.sc_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2)", "apply (frule_tac a = m in ds2_components1[of M1 M2 M], assumption+,\n        erule bexE,\n        unfold ds2_def, frule conjunct2[THEN conjunct1], fold ds2_def,\n          simp add:msubmodule_def, (erule conjE)+,\n        frule_tac c = a1 in subsetD[of \"carrier M1\" \"carrier M\"], assumption+,\n        frule_tac a = a and m = \"m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\" in Module.sc_mem[of M2 R],\n        assumption+,\n        unfold ds2_def, frule conjunct2[THEN conjunct1], \n        frule conjunct2[THEN conjunct2[THEN conjunct1]], fold ds2_def,\n        simp add:msub_sprod[of M M2],\n        frule Module.module_is_ag[of M],\n        frule_tac x = a1 in aGroup.ag_mOp_closed[of M], assumption+,\n        simp add:Module.sc_r_distr,\n        frule Module.module_is_ag[of M1],\n        frule_tac x = a1 in aGroup.ag_mOp_closed[of M1], assumption+,\n        frule_tac a1 = a and x1 = \"-\\<^sub>a\\<^bsub>M\\<^esub> a1\" in msub_sprod[THEN sym, of M M1],\n        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m a1.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M; a1 \\<in> carrier M1;\n        m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<plusminus>\\<^bsub>M\\<^esub>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1)\n        \\<in> carrier M2;\n        msubmodule R M M1; msubmodule R M M2; aGroup M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M; aGroup M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M1\n 2. \\<And>a m a1.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M; a1 \\<in> carrier M1;\n        m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> a1\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<plusminus>\\<^bsub>M\\<^esub>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1)\n        \\<in> carrier M2;\n        msubmodule R M M1; msubmodule R M M2; aGroup M;\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 \\<in> carrier M; aGroup M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M\\<^esub> a1) =\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n        (-\\<^sub>a\\<^bsub>M\\<^esub> a1)\\<rbrakk>\n       \\<Longrightarrow> (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2)", "apply (simp add:msub_mOp,\n        frule_tac x1 = a1 in msub_mOp[THEN sym, of M M1], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m a1.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M; a1 \\<in> carrier M1;\n        m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> a1\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<plusminus>\\<^bsub>M\\<^esub>\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> (-\\<^sub>a\\<^bsub>M1\\<^esub> a1)\n        \\<in> carrier M2;\n        msubmodule R M M1; msubmodule R M M2; aGroup M;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M; aGroup M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n        (-\\<^sub>a\\<^bsub>M1\\<^esub> a1) =\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n        (-\\<^sub>a\\<^bsub>M1\\<^esub> a1);\n        -\\<^sub>a\\<^bsub>M\\<^esub> a1 =\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1\\<rbrakk>\n       \\<Longrightarrow> (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n                         (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2)", "apply (\n        thin_tac \"a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> (-\\<^sub>a\\<^bsub>M1\\<^esub> a1) = a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> (-\\<^sub>a\\<^bsub>M1\\<^esub> a1)\",\n        thin_tac \"-\\<^sub>a\\<^bsub>M\\<^esub> a1 = -\\<^sub>a\\<^bsub>M1\\<^esub> a1\",\n        thin_tac \"-\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M\",\n        frule_tac a = a and m = a1 in Module.sc_mem[of M1 R], \n        assumption+,\n        frule_tac a = m and ?a1.0 = a1 in mprojTr3[of M1 M2 M],\n           assumption+, simp add:msub_mOp, simp,\n        thin_tac \"(THE x1. x1 \\<in> carrier M1 \\<and> m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M\\<^esub> x1 \\<in> carrier M2) = a1\",\n        frule_tac a = \"a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\" and ?a1.0 = \"a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1\" in \n         mprojTr3[of M1 M2 M], assumption+,\n        simp add:Module.sc_mem, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a m a1.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M; a1 \\<in> carrier M1;\n        m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> a1\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<plusminus>\\<^bsub>M\\<^esub>\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> (-\\<^sub>a\\<^bsub>M1\\<^esub> a1)\n        \\<in> carrier M2;\n        msubmodule R M M1; msubmodule R M M2; aGroup M; aGroup M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                         m \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub>\n              a1\n                         \\<in> carrier M2\n 2. \\<And>a m a1.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M; a1 \\<in> carrier M1;\n        m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> a1\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<plusminus>\\<^bsub>M\\<^esub>\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> (-\\<^sub>a\\<^bsub>M1\\<^esub> a1)\n        \\<in> carrier M2;\n        msubmodule R M M1; msubmodule R M M2; aGroup M; aGroup M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        (THE x1.\n            x1 \\<in> carrier M1 \\<and>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n            m \\<plusminus>\\<^bsub>M\\<^esub>\n            -\\<^sub>a\\<^bsub>M\\<^esub> x1\n            \\<in> carrier M2) =\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1\\<rbrakk>\n       \\<Longrightarrow> (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1", "apply (simp add:msub_mOp msub_sprod,\n         simp add:Module.sc_minus_am[of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a m a1.\n       \\<lbrakk>R module M1; R module M2; R module M;\n        M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2; a \\<in> carrier R;\n        m \\<in> carrier M; a1 \\<in> carrier M1;\n        m \\<plusminus>\\<^bsub>M\\<^esub> -\\<^sub>a\\<^bsub>M1\\<^esub> a1\n        \\<in> carrier M2;\n        miota R M1 M \\<in> mHom R M1 M; carrier M1 \\<subseteq> carrier M;\n        a1 \\<in> carrier M;\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<plusminus>\\<^bsub>M\\<^esub>\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> (-\\<^sub>a\\<^bsub>M1\\<^esub> a1)\n        \\<in> carrier M2;\n        msubmodule R M M1; msubmodule R M M2; aGroup M; aGroup M1;\n        -\\<^sub>a\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1 \\<in> carrier M1;\n        (THE x1.\n            x1 \\<in> carrier M1 \\<and>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n            m \\<plusminus>\\<^bsub>M\\<^esub>\n            -\\<^sub>a\\<^bsub>M\\<^esub> x1\n            \\<in> carrier M2) =\n        a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1\\<rbrakk>\n       \\<Longrightarrow> (THE x1.\n                             x1 \\<in> carrier M1 \\<and>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                             m \\<plusminus>\\<^bsub>M\\<^esub>\n                             -\\<^sub>a\\<^bsub>M\\<^esub> x1\n                             \\<in> carrier M2) =\n                         a \\<cdot>\\<^sub>s\\<^bsub>M1\\<^esub> a1", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mproj2:\"\\<lbrakk>R module M1; R module M2; R module M; M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj2 R M1 M2 M \\<in> mHom R M M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2\\<rbrakk>\n    \\<Longrightarrow> mproj2 R M1 M2 M \\<in> mHom R M M2", "apply (frule ds2_commute[of M1 M2 M], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n     M2 \\<Oplus>\\<^bsub>R,M\\<^esub> M1\\<rbrakk>\n    \\<Longrightarrow> mproj2 R M1 M2 M \\<in> mHom R M M2", "apply (simp add:mproj2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M1; R module M2; R module M;\n     M1 \\<Oplus>\\<^bsub>R,M\\<^esub> M2;\n     M2 \\<Oplus>\\<^bsub>R,M\\<^esub> M1\\<rbrakk>\n    \\<Longrightarrow> mproj1 R M2 M1 M \\<in> mHom R M M2", "apply (simp add:mproj)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Existence of the tensor product\""], ["", "definition\n  fm_gen_by_prod :: \"[('r, 'm) Ring_scheme, (('a * 'b), 'r, 'm1) Module_scheme,\n      ('a, 'r, 'm1) Module_scheme, ('b, 'r, 'm1) Module_scheme] \\<Rightarrow> bool\"\n    (\"(4FM\\<^bsub>_\\<^esub>/ _ _ _)\" [100,100,101]100) where\n  \"FM\\<^bsub>R\\<^esub> P M N \\<longleftrightarrow> R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N)\""], ["", "lemma (in Ring) free_gen_gen:\"FM\\<^bsub>R\\<^esub> P M N \\<Longrightarrow> generator R P (M \\<times>\\<^sub>c N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FM\\<^bsub>R\\<^esub> P M N \\<Longrightarrow>\n    generator R P (M \\<times>\\<^sub>c N)", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R module P \\<and>\n    free_generator R P (M \\<times>\\<^sub>c N) \\<Longrightarrow>\n    generator R P (M \\<times>\\<^sub>c N)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module P; free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> generator R P (M \\<times>\\<^sub>c N)", "apply (simp add:free_generator_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) free_gen_mem:\"\\<lbrakk>FM\\<^bsub>R\\<^esub> P M N; a \\<in> (M \\<times>\\<^sub>c N)\\<rbrakk> \\<Longrightarrow>  a \\<in> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>FM\\<^bsub>R\\<^esub> P M N;\n     a \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier P", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N);\n     a \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier P", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M \\<times>\\<^sub>c N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier P", "apply (simp add:free_generator_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M \\<times>\\<^sub>c N; R module P;\n     generator R P (M \\<times>\\<^sub>c N);\n     \\<forall>n s.\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>f.\n            f \\<in> {j. j \\<le> n} \\<rightarrow> M \\<times>\\<^sub>c N \\<and>\n            inj_on f {j. j \\<le> n} \\<and>\n            l_comb R P n s f = \\<zero>\\<^bsub>P\\<^esub>) \\<longrightarrow>\n        s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier P", "apply (simp add:generator_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M \\<times>\\<^sub>c N; R module P;\n     M \\<times>\\<^sub>c N \\<subseteq> carrier P \\<and>\n     linear_span R P (carrier R) (M \\<times>\\<^sub>c N) = carrier P;\n     \\<forall>n s.\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>f.\n            f \\<in> {j. j \\<le> n} \\<rightarrow> M \\<times>\\<^sub>c N \\<and>\n            inj_on f {j. j \\<le> n} \\<and>\n            l_comb R P n s f = \\<zero>\\<^bsub>P\\<^esub>) \\<longrightarrow>\n        s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier P", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> M \\<times>\\<^sub>c N; R module P;\n     \\<forall>n s.\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<and>\n        (\\<exists>f.\n            f \\<in> {j. j \\<le> n} \\<rightarrow> M \\<times>\\<^sub>c N \\<and>\n            inj_on f {j. j \\<le> n} \\<and>\n            l_comb R P n s f = \\<zero>\\<^bsub>P\\<^esub>) \\<longrightarrow>\n        s \\<in> {j. j \\<le> n} \\<rightarrow> {\\<zero>};\n     M \\<times>\\<^sub>c N \\<subseteq> carrier P;\n     linear_span R P (carrier R) (M \\<times>\\<^sub>c N) = carrier P\\<rbrakk>\n    \\<Longrightarrow> a \\<in> carrier P", "apply (simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mHom_lin_nsumTr:\"\\<lbrakk>R module M; R module N; t \\<in> mHom R M N\\<rbrakk> \\<Longrightarrow>\n f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> carrier M  \\<longrightarrow> t (nsum M f n) = nsum N (cmp t f) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; t \\<in> mHom R M N\\<rbrakk>\n    \\<Longrightarrow> f \\<in> {j. j \\<le> n} \\<rightarrow>\n                              carrier M \\<longrightarrow>\n                      t (\\<Sigma>\\<^sub>e M f n) =\n                      \\<Sigma>\\<^sub>e N cmp t f n", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; t \\<in> mHom R M N\\<rbrakk>\n    \\<Longrightarrow> f \\<in> {j. j \\<le> 0} \\<rightarrow>\n                              carrier M \\<longrightarrow>\n                      t (\\<Sigma>\\<^sub>e M f 0) =\n                      \\<Sigma>\\<^sub>e N cmp t f 0\n 2. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M \\<longrightarrow>\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n\\<rbrakk>\n       \\<Longrightarrow> f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                 carrier M \\<longrightarrow>\n                         t (\\<Sigma>\\<^sub>e M f Suc n) =\n                         \\<Sigma>\\<^sub>e N cmp t f Suc n", "apply (rule impI, simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M \\<longrightarrow>\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n\\<rbrakk>\n       \\<Longrightarrow> f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                 carrier M \\<longrightarrow>\n                         t (\\<Sigma>\\<^sub>e M f Suc n) =\n                         \\<Sigma>\\<^sub>e N cmp t f Suc n", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M \\<longrightarrow>\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> t (\\<Sigma>\\<^sub>e M f Suc n) =\n                         \\<Sigma>\\<^sub>e N cmp t f Suc n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M \\<longrightarrow>\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> t (\\<Sigma>\\<^sub>e M f n \\<plusminus>\\<^bsub>M\\<^esub>\n                            f (Suc n)) =\n                         \\<Sigma>\\<^sub>e N cmp t\n       f n \\<plusminus>\\<^bsub>N\\<^esub>\n                         cmp t f (Suc n)", "apply (frule_tac func_pre, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier M;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> t (\\<Sigma>\\<^sub>e M f n \\<plusminus>\\<^bsub>M\\<^esub>\n                            f (Suc n)) =\n                         \\<Sigma>\\<^sub>e N cmp t\n       f n \\<plusminus>\\<^bsub>N\\<^esub>\n                         cmp t f (Suc n)", "apply (frule Module.module_is_ag [of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier M;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M; aGroup M\\<rbrakk>\n       \\<Longrightarrow> t (\\<Sigma>\\<^sub>e M f n \\<plusminus>\\<^bsub>M\\<^esub>\n                            f (Suc n)) =\n                         \\<Sigma>\\<^sub>e N cmp t\n       f n \\<plusminus>\\<^bsub>N\\<^esub>\n                         cmp t f (Suc n)", "apply (frule_tac n = n in aGroup.nsum_mem [of M _ f],\n        rule allI, simp add:Pi_def,\n        frule_tac x = \"Suc n\" and A = \"{j. j \\<le> Suc n}\" and f = f and\n        B = \"carrier M\" in funcset_mem, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n        t (\\<Sigma>\\<^sub>e M f n) = \\<Sigma>\\<^sub>e N cmp t f n;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier M;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M; aGroup M;\n        \\<Sigma>\\<^sub>e M f n \\<in> carrier M;\n        f (Suc n) \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> t (\\<Sigma>\\<^sub>e M f n \\<plusminus>\\<^bsub>M\\<^esub>\n                            f (Suc n)) =\n                         \\<Sigma>\\<^sub>e N cmp t\n       f n \\<plusminus>\\<^bsub>N\\<^esub>\n                         cmp t f (Suc n)", "apply (simp add:Module.mHom_add cmp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) mHom_lin_nsum:\"\\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n       f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> carrier M\\<rbrakk> \\<Longrightarrow>\n                           t (nsum M f n) = nsum N (cmp t f) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; t \\<in> mHom R M N;\n     f \\<in> {j. j \\<le> n} \\<rightarrow> carrier M\\<rbrakk>\n    \\<Longrightarrow> t (\\<Sigma>\\<^sub>e M f n) =\n                      \\<Sigma>\\<^sub>e N cmp t f n", "apply (simp add:mHom_lin_nsumTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) module_over_zeroring:\"\\<lbrakk>zeroring R; R module M\\<rbrakk> \\<Longrightarrow>  \n                    carrier M = {\\<zero>\\<^bsub>M\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>zeroring R; R module M\\<rbrakk>\n    \\<Longrightarrow> carrier M = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (simp add:zeroring_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> carrier M = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> carrier M \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> carrier M", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>};\n        x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> carrier M", "apply (frule_tac m = x in Module.sprod_one [of M R], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>};\n        x \\<in> carrier M;\n        1\\<^sub>r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> carrier M", "apply (cut_tac ring_one, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>};\n        x \\<in> carrier M; \\<zero> \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x = x;\n        1\\<^sub>r = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> carrier M", "apply (simp add:Module.sc_0_m[of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> carrier M", "apply (frule Module.module_is_ag [of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; Ring R; carrier R = {\\<zero>}; aGroup M\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> carrier M", "apply (simp add:aGroup.ag_inc_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) submodule_over_zeroring:\"\\<lbrakk>zeroring R; R module M; \n                 submodule R M N\\<rbrakk> \\<Longrightarrow>  N =  {\\<zero>\\<^bsub>M\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> N = {\\<zero>\\<^bsub>M\\<^esub>}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> N \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; submodule R M N; x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {\\<zero>\\<^bsub>M\\<^esub>}\n 2. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (simp add:submodule_def, (erule conjE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N;\n        \\<forall>a m.\n           a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n           a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (thin_tac \"\\<forall>a m. a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (cut_tac module_over_zeroring [of M])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N; carrier M = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> zeroring R\n 3. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> R module M\n 4. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N;\n        N \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}; M +> N;\n        carrier M = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> zeroring R\n 3. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> R module M\n 4. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (frule_tac A = N and B = \"{\\<zero>\\<^bsub>M\\<^esub>}\" and c = x in subsetD, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N;\n        N \\<subseteq> {\\<zero>\\<^bsub>M\\<^esub>}; M +> N;\n        carrier M = {\\<zero>\\<^bsub>M\\<^esub>};\n        x \\<in> {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> x = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> zeroring R\n 3. \\<And>x.\n       \\<lbrakk>zeroring R; R module M; x \\<in> N; N \\<subseteq> carrier M;\n        M +> N\\<rbrakk>\n       \\<Longrightarrow> R module M\n 4. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (simp, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>zeroring R; R module M; submodule R M N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply (frule Module.submodule_inc_0 [of M R N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>zeroring R; R module M; submodule R M N;\n     \\<zero>\\<^bsub>M\\<^esub> \\<in> N\\<rbrakk>\n    \\<Longrightarrow> {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> N", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  Least_submodule :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme,\n                       'a set] \\<Rightarrow> 'a set\"\n         (\"(3LSM\\<^bsub>_\\<^esub>/ _/ _)\" [100,100,101]100) where\n  \"LSM\\<^bsub>R\\<^esub> M T = \\<Inter>{N. submodule R M N \\<and> T \\<subseteq> N}\""], ["", "lemma (in Ring) LSM_mem:\"\\<lbrakk>R module M; T \\<subseteq> carrier M; t \\<in> T\\<rbrakk> \\<Longrightarrow> \n                                                     t \\<in> (LSM\\<^bsub>R\\<^esub> M T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M; t \\<in> T\\<rbrakk>\n    \\<Longrightarrow> t \\<in> LSM\\<^bsub>R\\<^esub> M T", "apply (simp add:Least_submodule_def, rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M; t \\<in> T;\n        submodule R M x \\<and> T \\<subseteq> x\\<rbrakk>\n       \\<Longrightarrow> t \\<in> x", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M; t \\<in> T;\n        submodule R M x; T \\<subseteq> x\\<rbrakk>\n       \\<Longrightarrow> t \\<in> x", "apply (simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) LSM_sub_M:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow>\n                              (LSM\\<^bsub>R\\<^esub> M T) \\<subseteq> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M", "apply (rule subsetI, simp add:Least_submodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        \\<forall>xa.\n           submodule R M xa \\<and> T \\<subseteq> xa \\<longrightarrow>\n           x \\<in> xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M", "apply (frule Module.submodule_whole[of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        \\<forall>xa.\n           submodule R M xa \\<and> T \\<subseteq> xa \\<longrightarrow>\n           x \\<in> xa;\n        submodule R M (carrier M)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M", "apply (drule_tac x = \"carrier M\" in spec,\n       simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) LSM_sub_submodule:\"\\<lbrakk>R module M; T \\<subseteq> carrier M; \n      submodule R M N; T \\<subseteq> N \\<rbrakk> \\<Longrightarrow> (LSM\\<^bsub>R\\<^esub> M T) \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M; submodule R M N;\n     T \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T \\<subseteq> N", "by (rule subsetI, simp add:Least_submodule_def)"], ["", "lemma (in Ring) LSM_inc_T:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow> T \\<subseteq> (LSM\\<^bsub>R\\<^esub> M T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> LSM\\<^bsub>R\\<^esub> M T", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> x \\<in> LSM\\<^bsub>R\\<^esub> M T", "apply (simp add:LSM_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) LSM_submodule:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow>\n                submodule R M (LSM\\<^bsub>R\\<^esub> M T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> submodule R M (LSM\\<^bsub>R\\<^esub> M T)", "apply (frule LSM_sub_M[of M T], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> submodule R M (LSM\\<^bsub>R\\<^esub> M T)", "apply (subst Least_submodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> submodule R M\n                       (\\<Inter>\n                         {N. submodule R M N \\<and> T \\<subseteq> N})", "apply (simp add:submodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}\n                      \\<subseteq> carrier M \\<and>\n                      M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}\n                      \\<subseteq> carrier M\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply (rule subsetI, simp,\n        drule_tac a = \"carrier M\" in forall_spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n       \\<Longrightarrow> carrier M \\<subseteq> carrier M \\<and>\n                         M +> carrier M \\<and>\n                         (\\<forall>a m.\n                             a \\<in> carrier R \\<and>\n                             m \\<in> carrier M \\<longrightarrow>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                             \\<in> carrier M) \\<and>\n                         T \\<subseteq> carrier M\n 2. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M;\n        x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 3. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +> carrier M \\<and>\n                      (\\<forall>a m.\n                          a \\<in> carrier R \\<and>\n                          m \\<in> carrier M \\<longrightarrow>\n                          a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                          \\<in> carrier M)\n 2. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M;\n        x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 3. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply (frule Module.submodule_whole[of M R])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M;\n     submodule R M (carrier M)\\<rbrakk>\n    \\<Longrightarrow> M +> carrier M \\<and>\n                      (\\<forall>a m.\n                          a \\<in> carrier R \\<and>\n                          m \\<in> carrier M \\<longrightarrow>\n                          a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                          \\<in> carrier M)\n 2. \\<And>x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M;\n        x \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 3. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply (simp add:submodule_def[of R M \"carrier M\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply (frule Module.module_is_ag [of M R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> M +>\n                      \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}", "apply (rule aGroup.asubg_test, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N}\n                      \\<subseteq> carrier M\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N} \\<noteq>\n                      {}\n 3. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>\\<Inter>\n{N. N \\<subseteq> carrier M \\<and>\n    M +> N \\<and>\n    (\\<forall>a m.\n        a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n    T \\<subseteq> N}.\n                         \\<forall>b\\<in>\\<Inter>\n   {N. N \\<subseteq> carrier M \\<and>\n       M +> N \\<and>\n       (\\<forall>a m.\n           a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n           a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n       T \\<subseteq> N}.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> b\n                            \\<in> \\<Inter>\n                                   {N. N \\<subseteq> carrier M \\<and>\n M +> N \\<and>\n (\\<forall>a m.\n     a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n T \\<subseteq> N}", "apply (rule subsetI, simp,\n        drule_tac a = \"carrier M\" in forall_spec, simp,\n        frule Module.submodule_whole[of M R],\n        simp add:submodule_def[of R M \"carrier M\"], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N} \\<noteq>\n                      {}\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>\\<Inter>\n{N. N \\<subseteq> carrier M \\<and>\n    M +> N \\<and>\n    (\\<forall>a m.\n        a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n    T \\<subseteq> N}.\n                         \\<forall>b\\<in>\\<Inter>\n   {N. N \\<subseteq> carrier M \\<and>\n       M +> N \\<and>\n       (\\<forall>a m.\n           a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n           a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n       T \\<subseteq> N}.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> b\n                            \\<in> \\<Inter>\n                                   {N. N \\<subseteq> carrier M \\<and>\n M +> N \\<and>\n (\\<forall>a m.\n     a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n T \\<subseteq> N}", "apply (cut_tac x = \"\\<zero>\\<^bsub>M\\<^esub>\" and A = \"\\<Inter>{N. N \\<subseteq> carrier M \\<and>\n          M +> N \\<and> (\\<forall>a m. a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and> T \\<subseteq> N}\"\n        in  nonempty)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub>\n                      \\<in> \\<Inter>\n                             {N. N \\<subseteq> carrier M \\<and>\n                                 M +> N \\<and>\n                                 (\\<forall>a m.\n                                     a \\<in> carrier R \\<and>\n                                     m \\<in> N \\<longrightarrow>\n                                     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                                     \\<in> N) \\<and>\n                                 T \\<subseteq> N}\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M;\n     \\<Inter>\n      {N. N \\<subseteq> carrier M \\<and>\n          M +> N \\<and>\n          (\\<forall>a m.\n              a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n              a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n          T \\<subseteq> N} \\<noteq>\n     {}\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N} \\<noteq>\n                      {}\n 3. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>\\<Inter>\n{N. N \\<subseteq> carrier M \\<and>\n    M +> N \\<and>\n    (\\<forall>a m.\n        a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n    T \\<subseteq> N}.\n                         \\<forall>b\\<in>\\<Inter>\n   {N. N \\<subseteq> carrier M \\<and>\n       M +> N \\<and>\n       (\\<forall>a m.\n           a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n           a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n       T \\<subseteq> N}.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> b\n                            \\<in> \\<Inter>\n                                   {N. N \\<subseteq> carrier M \\<and>\n M +> N \\<and>\n (\\<forall>a m.\n     a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n T \\<subseteq> N}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<subseteq> carrier M \\<and>\n                         M +> x \\<and>\n                         (\\<forall>a m.\n                             a \\<in> carrier R \\<and>\n                             m \\<in> x \\<longrightarrow>\n                             a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                             \\<in> x) \\<and>\n                         T \\<subseteq> x \\<longrightarrow>\n                         \\<zero>\\<^bsub>M\\<^esub> \\<in> x\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M;\n     \\<Inter>\n      {N. N \\<subseteq> carrier M \\<and>\n          M +> N \\<and>\n          (\\<forall>a m.\n              a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n              a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n          T \\<subseteq> N} \\<noteq>\n     {}\\<rbrakk>\n    \\<Longrightarrow> \\<Inter>\n                       {N. N \\<subseteq> carrier M \\<and>\n                           M +> N \\<and>\n                           (\\<forall>a m.\n                               a \\<in> carrier R \\<and>\n                               m \\<in> N \\<longrightarrow>\n                               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                               \\<in> N) \\<and>\n                           T \\<subseteq> N} \\<noteq>\n                      {}\n 3. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>\\<Inter>\n{N. N \\<subseteq> carrier M \\<and>\n    M +> N \\<and>\n    (\\<forall>a m.\n        a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n    T \\<subseteq> N}.\n                         \\<forall>b\\<in>\\<Inter>\n   {N. N \\<subseteq> carrier M \\<and>\n       M +> N \\<and>\n       (\\<forall>a m.\n           a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n           a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n       T \\<subseteq> N}.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> b\n                            \\<in> \\<Inter>\n                                   {N. N \\<subseteq> carrier M \\<and>\n M +> N \\<and>\n (\\<forall>a m.\n     a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n T \\<subseteq> N}", "apply (rule allI, rule impI, (erule conjE)+,\n        frule_tac H = x in aGroup.asubg_inc_zero[of M], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>\\<Inter>\n{N. N \\<subseteq> carrier M \\<and>\n    M +> N \\<and>\n    (\\<forall>a m.\n        a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n    T \\<subseteq> N}.\n                         \\<forall>b\\<in>\\<Inter>\n   {N. N \\<subseteq> carrier M \\<and>\n       M +> N \\<and>\n       (\\<forall>a m.\n           a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n           a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n       T \\<subseteq> N}.\n                            a \\<plusminus>\\<^bsub>M\\<^esub>\n                            -\\<^sub>a\\<^bsub>M\\<^esub> b\n                            \\<in> \\<Inter>\n                                   {N. N \\<subseteq> carrier M \\<and>\n M +> N \\<and>\n (\\<forall>a m.\n     a \\<in> carrier R \\<and> m \\<in> N \\<longrightarrow>\n     a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> N) \\<and>\n T \\<subseteq> N}", "apply ((rule ballI)+, simp, rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M;\n        \\<forall>x.\n           x \\<subseteq> carrier M \\<and>\n           M +> x \\<and>\n           (\\<forall>a m.\n               a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n           T \\<subseteq> x \\<longrightarrow>\n           a \\<in> x;\n        \\<forall>x.\n           x \\<subseteq> carrier M \\<and>\n           M +> x \\<and>\n           (\\<forall>a m.\n               a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n               a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n           T \\<subseteq> x \\<longrightarrow>\n           b \\<in> x;\n        x \\<subseteq> carrier M \\<and>\n        M +> x \\<and>\n        (\\<forall>a m.\n            a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n        T \\<subseteq> x\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> b\n                         \\<in> x", "apply (drule_tac x = x in spec,\n        drule_tac x = x in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M;\n        x \\<subseteq> carrier M \\<and>\n        M +> x \\<and>\n        (\\<forall>a m.\n            a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n        T \\<subseteq> x;\n        x \\<subseteq> carrier M \\<and>\n        M +> x \\<and>\n        (\\<forall>a m.\n            a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n        T \\<subseteq> x \\<longrightarrow>\n        a \\<in> x;\n        x \\<subseteq> carrier M \\<and>\n        M +> x \\<and>\n        (\\<forall>a m.\n            a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n        T \\<subseteq> x \\<longrightarrow>\n        b \\<in> x\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> b\n                         \\<in> x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M;\n        x \\<subseteq> carrier M \\<and>\n        M +> x \\<and>\n        (\\<forall>a m.\n            a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n        T \\<subseteq> x;\n        a \\<in> x; b \\<in> x\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> b\n                         \\<in> x", "apply (frule_tac H = x and x = b in aGroup.asubg_mOp_closed[of M], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>R module M; T \\<subseteq> carrier M;\n        LSM\\<^bsub>R\\<^esub> M T \\<subseteq> carrier M; aGroup M;\n        x \\<subseteq> carrier M \\<and>\n        M +> x \\<and>\n        (\\<forall>a m.\n            a \\<in> carrier R \\<and> m \\<in> x \\<longrightarrow>\n            a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> x) \\<and>\n        T \\<subseteq> x;\n        a \\<in> x; b \\<in> x; -\\<^sub>a\\<^bsub>M\\<^esub> b \\<in> x\\<rbrakk>\n       \\<Longrightarrow> a \\<plusminus>\\<^bsub>M\\<^esub>\n                         -\\<^sub>a\\<^bsub>M\\<^esub> b\n                         \\<in> x", "apply (rule_tac H = x and x = a and y = \"-\\<^sub>a\\<^bsub>M\\<^esub> b\" in \n        aGroup.asubg_pOp_closed[of M], assumption+, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) linear_comb_memTr:\"\\<lbrakk>R module M; submodule R M N; T \\<subseteq> N\\<rbrakk> \\<Longrightarrow>\n      \\<forall>f s. f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> T \\<and> s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow> \n      l_comb R M n s f \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f s.\n                         f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n                         s \\<in> {j. j \\<le> n} \\<rightarrow>\n                                 carrier R \\<longrightarrow>\n                         l_comb R M n s f \\<in> N", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f s.\n                         f \\<in> {j. j \\<le> 0} \\<rightarrow> T \\<and>\n                         s \\<in> {j. j \\<le> 0} \\<rightarrow>\n                                 carrier R \\<longrightarrow>\n                         l_comb R M 0 s f \\<in> N\n 2. \\<And>n.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f s.\n                            f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    T \\<and>\n                            s \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    carrier R \\<longrightarrow>\n                            l_comb R M (Suc n) s f \\<in> N", "apply ((rule allI)+, rule impI, (erule conjE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        f \\<in> {j. j \\<le> 0} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> 0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> l_comb R M 0 s f \\<in> N\n 2. \\<And>n.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f s.\n                            f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    T \\<and>\n                            s \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    carrier R \\<longrightarrow>\n                            l_comb R M (Suc n) s f \\<in> N", "apply (simp add:l_comb_def del: Pi_split_insert_domain)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        f \\<in> {0} \\<rightarrow> T;\n        s \\<in> {0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> s 0 \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> f 0 \\<in> N\n 2. \\<And>n.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f s.\n                            f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    T \\<and>\n                            s \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    carrier R \\<longrightarrow>\n                            l_comb R M (Suc n) s f \\<in> N", "apply (rule Module.submodule_sc_closed, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        f \\<in> {0} \\<rightarrow> T;\n        s \\<in> {0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> s 0 \\<in> carrier R\n 2. \\<And>f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        f \\<in> {0} \\<rightarrow> T;\n        s \\<in> {0} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> f 0 \\<in> N\n 3. \\<And>n.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f s.\n                            f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    T \\<and>\n                            s \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    carrier R \\<longrightarrow>\n                            l_comb R M (Suc n) s f \\<in> N", "apply (simp add:Pi_def, simp add:Pi_def subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f s.\n                            f \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    T \\<and>\n                            s \\<in> {j. j \\<le> Suc n} \\<rightarrow>\n                                    carrier R \\<longrightarrow>\n                            l_comb R M (Suc n) s f \\<in> N", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (Suc n) s f \\<in> N", "apply (frule_tac f = f and n = n and A = T in func_pre)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> T\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (Suc n) s f \\<in> N", "apply (frule_tac f = s and n = n and A = \"carrier R\" in func_pre)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        \\<forall>f s.\n           f \\<in> {j. j \\<le> n} \\<rightarrow> T \\<and>\n           s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R \\<longrightarrow>\n           l_comb R M n s f \\<in> N;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (Suc n) s f \\<in> N", "apply (drule_tac x = f in spec,\n        drule_tac x = s in spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        l_comb R M n s f \\<in> N\\<rbrakk>\n       \\<Longrightarrow> l_comb R M (Suc n) s f \\<in> N", "apply (cut_tac whole_ideal,\n        frule_tac s = s and n = n and f = f in \n                   Module.l_comb_Suc[of M R T \"carrier R\"],\n        frule Module.submodule_subset[of M R N], assumption+,\n        rule subset_trans[of T N \"carrier M\"], assumption+, simp,\n        thin_tac \"l_comb R M (Suc n) s f =\n        l_comb R M n s f \\<plusminus>\\<^bsub>M\\<^esub> s (Suc n) \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> f (Suc n)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f s.\n       \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n        f \\<in> {j. j \\<le> Suc n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> Suc n} \\<rightarrow> carrier R;\n        f \\<in> {j. j \\<le> n} \\<rightarrow> T;\n        s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R;\n        l_comb R M n s f \\<in> N; ideal R (carrier R)\\<rbrakk>\n       \\<Longrightarrow> l_comb R M n s f \\<plusminus>\\<^bsub>M\\<^esub>\n                         s (Suc n) \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub>\n                         f (Suc n)\n                         \\<in> N", "apply (rule Module.submodule_pOp_closed[of M R N], assumption+,\n        rule_tac a = \"s (Suc n)\" and h = \"f (Suc n)\" in \n         Module.submodule_sc_closed[of M R N], assumption+,\n        simp add:Pi_def, simp add:Pi_def subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) linear_comb_mem:\"\\<lbrakk>R module M; submodule R M N; T \\<subseteq> N; \n      f \\<in> {j. j \\<le> (n::nat)} \\<rightarrow> T; s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk> \\<Longrightarrow> \n                      l_comb R M n s f \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; submodule R M N; T \\<subseteq> N;\n     f \\<in> {j. j \\<le> n} \\<rightarrow> T;\n     s \\<in> {j. j \\<le> n} \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> l_comb R M n s f \\<in> N", "apply (simp add:linear_comb_memTr)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) LSM_eq_linear_span:\"\\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk> \\<Longrightarrow> \n          (LSM\\<^bsub>R\\<^esub> M T) = linear_span R M (carrier R) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T =\n                      linear_span R M (carrier R) T", "apply (cut_tac whole_ideal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T =\n                      linear_span R M (carrier R) T", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T\n                      \\<subseteq> linear_span R M (carrier R) T\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> linear_span R M (carrier R) T\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> M T", "apply (frule Module.linear_span_subModule[of M R \"carrier R\" T], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M; ideal R (carrier R);\n     submodule R M (linear_span R M (carrier R) T)\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T\n                      \\<subseteq> linear_span R M (carrier R) T\n 2. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> linear_span R M (carrier R) T\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> M T", "apply (rule LSM_sub_submodule[of M T \"linear_span R M (carrier R) T\"],\n        assumption+, simp add:Module.l_span_cont_H[of M R T])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M;\n     ideal R (carrier R)\\<rbrakk>\n    \\<Longrightarrow> linear_span R M (carrier R) T\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> M T", "apply (frule LSM_submodule[of M T], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M; ideal R (carrier R);\n     submodule R M (LSM\\<^bsub>R\\<^esub> M T)\\<rbrakk>\n    \\<Longrightarrow> linear_span R M (carrier R) T\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> M T", "apply (frule LSM_inc_T[of M T], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; T \\<subseteq> carrier M; ideal R (carrier R);\n     submodule R M (LSM\\<^bsub>R\\<^esub> M T);\n     T \\<subseteq> LSM\\<^bsub>R\\<^esub> M T\\<rbrakk>\n    \\<Longrightarrow> linear_span R M (carrier R) T\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> M T", "apply (rule Module.l_span_sub_submodule[of M R \"carrier R\" \"LSM\\<^bsub>R\\<^esub> M T\" T],\n         assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) LSM_sub_ker:\"\\<lbrakk>R module M; R module N; T \\<subseteq> carrier M; \n       f \\<in> mHom R M N; T \\<subseteq> ker\\<^bsub>M,N\\<^esub> f\\<rbrakk> \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T \\<subseteq> ker\\<^bsub>M,N\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; T \\<subseteq> carrier M;\n     f \\<in> mHom R M N; T \\<subseteq> ker\\<^bsub>M,N\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T\n                      \\<subseteq> ker\\<^bsub>M,N\\<^esub> f", "apply (frule Module.mker_submodule[of M R N f], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; T \\<subseteq> carrier M;\n     f \\<in> mHom R M N; T \\<subseteq> ker\\<^bsub>M,N\\<^esub> f;\n     submodule R M (ker\\<^bsub>M,N\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> M T\n                      \\<subseteq> ker\\<^bsub>M,N\\<^esub> f", "apply (rule LSM_sub_submodule[of M T \"ker\\<^bsub>M,N\\<^esub> f\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* in the following costdefs, MN is the free module generated by  M \\<times>\\<^sub>c N *)"], ["", "definition\n  tensor_relations1 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n       ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow> \n       ('a * 'b) set\"\n       (\"(4TR1/ _/ _/ _/ _)\" [100,100,100,101]100) where\n  \"TR1 R M N MN = {x. \\<exists>m1\\<in>carrier M. \\<exists>m2\\<in>carrier M. \\<exists>n\\<in>carrier N.\n       x = (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n) \\<plusminus>\\<^bsub>MN\\<^esub> (-\\<^sub>a\\<^bsub>MN\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>MN\\<^esub> (m2, n)))}\""], ["", "definition\n  tensor_relations2 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n      ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow>\n       ('a * 'b) set\"\n       (\"(4TR2/ _/ _/ _/ _)\" [100,100,100, 101]100) where\n   \"TR2 R M N MN = {x. \\<exists>m\\<in>carrier M. \\<exists>n1\\<in>carrier N. \\<exists>n2\\<in>carrier N.\n            x = (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>MN\\<^esub> (-\\<^sub>a\\<^bsub>MN\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>MN\\<^esub> (m, n2)))}\""], ["", "definition\n  tensor_relations3 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n      ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow> \n      ('a * 'b ) set\"\n       (\"(4TR3/ _/ _/ _/ _)\" [100,100,100,101]100) where\n  \"TR3 R M N P = {x. \\<exists>m\\<in>carrier M. \\<exists>n\\<in>carrier N. \\<exists> a\\<in>carrier R.\n        x = (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub> (-\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)))}\""], ["", "definition\n  tensor_relations4 :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n    ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow>\n    ('a * 'b) set\"\n                  (\"(4TR4/ _/ _/ _/ _)\" [100,100,100,101]100) where\n  \"TR4 R M N MN = {x. \\<exists>m\\<in>carrier M. \\<exists>n\\<in>carrier N. \\<exists> a\\<in>carrier R.\n  x = (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>MN\\<^esub> (-\\<^sub>a\\<^bsub>MN\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub> MN\\<^esub> (m, n)))}\""], ["", "definition\n  tensor_relations :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n    ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow>\n    ('a * 'b) set\"\n                   (\"(4TR\\<^bsub>_\\<^esub> _/ _/ _)\" [100,100,101]100) where\n  \"TR\\<^bsub>R\\<^esub> M N MN = LSM\\<^bsub>R\\<^esub> MN ((TR1 R M N MN) \\<union> (TR2 R M N MN) \\<union> \n                                     (TR3 R M N MN) \\<union> (TR4 R M N MN))\""], ["", "definition\n  tensor_product :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n   ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow> \n   (('a * 'b) set, 'r) Module\" where\n  \"tensor_product R M N MN = MN /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N MN)\""], ["", "abbreviation\n  TENSORPROD  (\"(4_/ \\<^bsub>_\\<^esub>\\<Otimes>\\<^bsub>_\\<^esub>/ _)\" [92,92,92,93]92) where\n  \"M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N == tensor_product R M N P\""], ["", "lemma (in Ring) mem_cartesian:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M;\n      n \\<in> carrier N \\<rbrakk> \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M;\n     n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N", "by (simp add:prod_carr_def)"], ["", "lemma (in Ring) cartesianTr:\"\\<lbrakk>R module M; R module N; x \\<in> M \\<times>\\<^sub>c N\\<rbrakk> \\<Longrightarrow> \n       \\<exists>m n. m\\<in>carrier M \\<and> n \\<in> carrier N \\<and> x = (m, n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; x \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m n.\n                         m \\<in> carrier M \\<and>\n                         n \\<in> carrier N \\<and> x = (m, n)", "by (cases x) (simp add: prod_carr_def)"], ["", "lemma (in Ring) free_module_mem:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M;\n         n \\<in> carrier N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>  (m, n) \\<in> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M; n \\<in> carrier N;\n     FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (m, n) \\<in> carrier P", "apply (rule free_gen_mem [of P M N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M; n \\<in> carrier N;\n     FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N", "apply (simp add:prod_carr_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) FM_P_module:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n        \\<Longrightarrow> R module P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> R module P", "by (simp add:fm_gen_by_prod_def)"], ["", "lemma (in Ring) TR1_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                                      (TR1 R M N P) \\<subseteq> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<subseteq> carrier P", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N;\n     R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<subseteq> carrier P", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<subseteq> carrier P", "apply (rule subsetI, simp add:tensor_relations1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        \\<exists>m1\\<in>carrier M.\n           \\<exists>m2\\<in>carrier M.\n              \\<exists>n\\<in>carrier N.\n                 x =\n                 (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                  n) \\<plusminus>\\<^bsub>P\\<^esub>\n                 -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n        n) \\<plusminus>\\<^bsub>P\\<^esub>\n       (m2, n))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply ((erule bexE)+,\n        frule Module.module_is_ag [of P], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n                n) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m2, n))\n                         \\<in> carrier P", "apply (rule aGroup.ag_pOp_closed, assumption,\n        rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M\n 2. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> n \\<in> carrier N\n 3. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 4. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n                n) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m2, n))\n                         \\<in> carrier P", "apply (frule Module.module_is_ag[of M R],\n        rule aGroup.ag_pOp_closed [of \"M\"], assumption+,\n        simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n                n) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m2, n))\n                         \\<in> carrier P", "apply (rule aGroup.ag_mOp_closed[of P], assumption,\n       rule aGroup.ag_pOp_closed [of \"P\"], assumption+,\n       rule free_module_mem, assumption+,\n       simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m1 m2 n.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m1 \\<in> carrier M;\n        m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m2, n) \\<in> carrier P", "apply (rule free_module_mem, assumption+, simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR2_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n               (TR2 R M N P) \\<subseteq> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR2 R M N P \\<subseteq> carrier P", "apply (simp add:fm_gen_by_prod_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR2 R M N P \\<subseteq> carrier P", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        x \\<in> TR2 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (simp add:tensor_relations2_def, (erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2))\\<rbrakk>\n       \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                             n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                n1) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m, n2))\n                         \\<in> carrier P", "apply (frule Module.module_is_ag[of P R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                             n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                n1) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m, n2))\n                         \\<in> carrier P", "apply (rule aGroup.ag_pOp_closed, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2)\n                         \\<in> carrier P\n 2. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                n1) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m, n2))\n                         \\<in> carrier P", "apply (rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> n1 \\<plusminus>\\<^bsub>N\\<^esub> n2 \\<in> carrier N\n 2. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 3. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                n1) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m, n2))\n                         \\<in> carrier P", "apply (frule Module.module_is_ag [of N R])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P; aGroup N\\<rbrakk>\n       \\<Longrightarrow> n1 \\<plusminus>\\<^bsub>N\\<^esub> n2 \\<in> carrier N\n 2. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 3. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                n1) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m, n2))\n                         \\<in> carrier P", "apply (rule aGroup.ag_pOp_closed [of \"N\"], assumption+,\n        simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                n1) \\<plusminus>\\<^bsub>P\\<^esub>\n               (m, n2))\n                         \\<in> carrier P", "apply (rule aGroup.ag_mOp_closed [of \"P\"], assumption+,\n       rule aGroup.ag_pOp_closed [of \"P\"], assumption+,\n       rule free_module_mem, assumption+, simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n1 n2.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, n2) \\<in> carrier P", "apply (rule free_module_mem, assumption+,\n        simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR3_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n                      (TR3 R M N P) \\<subseteq> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR3 R M N P \\<subseteq> carrier P", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N;\n     R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR3 R M N P \\<subseteq> carrier P", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR3 R M N P \\<subseteq> carrier P", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        x \\<in> TR3 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (simp add:tensor_relations3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        \\<exists>m\\<in>carrier M.\n           \\<exists>n\\<in>carrier N.\n              \\<exists>a\\<in>carrier R.\n                 x =\n                 (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                  n) \\<plusminus>\\<^bsub>P\\<^esub>\n                 -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n      (m, n)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply ((erule bexE)+, simp,\n        thin_tac \"x = (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (frule Module.module_is_ag [of P R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (rule aGroup.ag_pOp_closed, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n)\n                         \\<in> carrier P\n 2. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\n                         \\<in> carrier M\n 2. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> n \\<in> carrier N\n 3. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 4. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (simp add:Module.sc_mem, assumption,\n        simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (rule aGroup.ag_mOp_closed[of \"P\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n                         \\<in> carrier P", "apply (rule Module.sc_mem, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R; aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, n) \\<in> carrier P", "apply (rule free_module_mem, assumption+,\n        simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR4_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                       (TR4 R M N P) \\<subseteq> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR4 R M N P \\<subseteq> carrier P", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N;\n     R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR4 R M N P \\<subseteq> carrier P", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> TR4 R M N P \\<subseteq> carrier P", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (simp add:tensor_relations4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        \\<exists>m\\<in>carrier M.\n           \\<exists>n\\<in>carrier N.\n              \\<exists>a\\<in>carrier R.\n                 x =\n                 (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                     n) \\<plusminus>\\<^bsub>P\\<^esub>\n                 -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n      (m, n)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n)\\<rbrakk>\n       \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             n) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (frule Module.module_is_ag [of P R])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                             n) \\<plusminus>\\<^bsub>P\\<^esub>\n                         -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (rule aGroup.ag_pOp_closed, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n)\n                         \\<in> carrier P\n 2. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (rule free_module_mem, assumption+,\n        simp add:Module.sc_mem, simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n              (m, n)\n                         \\<in> carrier P", "apply (rule aGroup.ag_mOp_closed[of P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n                         \\<in> carrier P", "apply (rule Module.sc_mem, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n a.\n       \\<lbrakk>R module M; R module N; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N); m \\<in> carrier M;\n        n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        aGroup P\\<rbrakk>\n       \\<Longrightarrow> (m, n) \\<in> carrier P", "apply (rule free_module_mem, assumption+,\n        simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR_sub_carr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n  (TR1 R M N P) \\<union> (TR2 R M N P) \\<union> (TR3 R M N P) \\<union> (TR4 R M N P) \\<subseteq> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                      TR3 R M N P \\<union>\n                      TR4 R M N P\n                      \\<subseteq> carrier P", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                TR3 R M N P \\<union>\n                TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (case_tac \"x \\<in> TR1 R M N P\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR1 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P\n 2. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                TR3 R M N P \\<union>\n                TR4 R M N P;\n        x \\<notin> TR1 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (frule TR1_sub_carr [of M N P], assumption+, simp add:subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                TR3 R M N P \\<union>\n                TR4 R M N P;\n        x \\<notin> TR1 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (case_tac \"x \\<in> TR2 R M N P\", simp,\n        frule TR2_sub_carr [of M N P], assumption+, simp add:subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                TR3 R M N P \\<union>\n                TR4 R M N P;\n        x \\<notin> TR1 R M N P; x \\<notin> TR2 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (case_tac \"x \\<in> TR3 R M N P\", simp,\n         frule TR3_sub_carr [of M N P], assumption+, simp add:subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                TR3 R M N P \\<union>\n                TR4 R M N P;\n        x \\<notin> TR1 R M N P; x \\<notin> TR2 R M N P;\n        x \\<notin> TR3 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> TR4 R M N P; x \\<notin> TR1 R M N P; x \\<notin> TR2 R M N P;\n        x \\<notin> TR3 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier P", "apply (frule TR4_sub_carr [of M N P], assumption+, simp add:subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR_submodule:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                 submodule R P (TR\\<^bsub>R\\<^esub> M N P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> submodule R P (TR\\<^bsub>R\\<^esub> M N P)", "apply (simp add:tensor_relations_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> submodule R P\n                       (LSM\\<^bsub>R\\<^esub> P\n                           (TR1 R M N P \\<union> TR2 R M N P \\<union>\n                            TR3 R M N P \\<union>\n                            TR4 R M N P))", "apply (rule LSM_submodule[of P _])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> R module P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                      TR3 R M N P \\<union>\n                      TR4 R M N P\n                      \\<subseteq> carrier P", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                      TR3 R M N P \\<union>\n                      TR4 R M N P\n                      \\<subseteq> carrier P", "apply (rule TR_sub_carr, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR_cont_TR1234:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n  TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union> TR4 R M N P \\<subseteq> TR\\<^bsub>R\\<^esub> M N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                      TR3 R M N P \\<union>\n                      TR4 R M N P\n                      \\<subseteq> TR\\<^bsub>R\\<^esub> M N P", "apply (simp add:tensor_relations_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> P\n                                     (TR1 R M N P \\<union>\nTR2 R M N P \\<union>\nTR3 R M N P \\<union>\nTR4 R M N P) \\<and>\n                      TR2 R M N P\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> P\n                                     (TR1 R M N P \\<union>\nTR2 R M N P \\<union>\nTR3 R M N P \\<union>\nTR4 R M N P) \\<and>\n                      TR3 R M N P\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> P\n                                     (TR1 R M N P \\<union>\nTR2 R M N P \\<union>\nTR3 R M N P \\<union>\nTR4 R M N P) \\<and>\n                      TR4 R M N P\n                      \\<subseteq> LSM\\<^bsub>R\\<^esub> P\n                                     (TR1 R M N P \\<union>\nTR2 R M N P \\<union>\nTR3 R M N P \\<union>\nTR4 R M N P)", "apply (cut_tac LSM_inc_T [of P \"TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union>\n         TR4 R M N P\"], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> R module P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                      TR3 R M N P \\<union>\n                      TR4 R M N P\n                      \\<subseteq> carrier P", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                      TR3 R M N P \\<union>\n                      TR4 R M N P\n                      \\<subseteq> carrier P", "apply (rule TR_sub_carr, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR1_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m1 \\<in> carrier M;\nm2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk> \\<Longrightarrow> (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub> (m2, n))\n \\<in> TR\\<^bsub>R\\<^esub> M N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n             n) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m2, n))\n                      \\<in> TR\\<^bsub>R\\<^esub> M N P", "apply (rule subsetD[of \"TR1 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\" \n                          \"(m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub> (m2, n))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> TR1 R M N P \\<subseteq> TR\\<^bsub>R\\<^esub> M N P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n             n) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m2, n))\n                      \\<in> TR1 R M N P", "apply (rule subset_trans[of \"TR1 R M N P\" \"TR1 R M N P \\<union> TR2 R M N P \\<union>\n       TR3 R M N P \\<union> TR4 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\"],\n       rule subsetI, simp,\n       cut_tac TR_cont_TR1234[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n             n) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m2, n))\n                      \\<in> TR1 R M N P", "apply (simp add:tensor_relations1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m1a\\<in>carrier M.\n                         \\<exists>m2a\\<in>carrier M.\n                            \\<exists>na\\<in>carrier N.\n                               (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                                n) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n                      n) \\<plusminus>\\<^bsub>P\\<^esub>\n                     (m2, n)) =\n                               (m1a \\<plusminus>\\<^bsub>M\\<^esub> m2a,\n                                na) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> ((m1a,\n                      na) \\<plusminus>\\<^bsub>P\\<^esub>\n                     (m2a, na))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR2_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M;\n       n1 \\<in> carrier N; n2 \\<in> carrier N \\<rbrakk> \\<Longrightarrow> \n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2)) \\<in> TR\\<^bsub>R\\<^esub> M N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> TR\\<^bsub>R\\<^esub> M N P", "apply (rule subsetD[of \"TR2 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\" \n                          \"(m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> TR2 R M N P \\<subseteq> TR\\<^bsub>R\\<^esub> M N P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> TR2 R M N P", "apply (rule subset_trans[of \"TR2 R M N P\" \"TR1 R M N P \\<union> TR2 R M N P \\<union>\n       TR3 R M N P \\<union> TR4 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\"],\n       rule subsetI, simp,\n       cut_tac TR_cont_TR1234[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> TR2 R M N P", "apply (simp add:tensor_relations2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ma\\<in>carrier M.\n                         \\<exists>n1a\\<in>carrier N.\n                            \\<exists>n2a\\<in>carrier N.\n                               (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                                   n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                      n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                     (m, n2)) =\n                               (ma,\n                                n1a \\<plusminus>\\<^bsub>N\\<^esub>\n                                n2a) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> ((ma,\n                      n1a) \\<plusminus>\\<^bsub>P\\<^esub>\n                     (ma, n2a))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR3_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M;\n      n \\<in> carrier N; a \\<in> carrier R\\<rbrakk> \\<Longrightarrow> \n         (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) \\<in> TR\\<^bsub>R\\<^esub> M N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> TR\\<^bsub>R\\<^esub> M N P", "apply (rule subsetD[of \"TR3 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\" \n                          \"(a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> TR3 R M N P \\<subseteq> TR\\<^bsub>R\\<^esub> M N P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> TR3 R M N P", "apply (rule subset_trans[of \"TR3 R M N P\" \"TR1 R M N P \\<union> TR2 R M N P \\<union>\n       TR3 R M N P \\<union> TR4 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\"],\n       rule subsetI, simp,\n       cut_tac TR_cont_TR1234[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> TR3 R M N P", "apply (simp add:tensor_relations3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ma\\<in>carrier M.\n                         \\<exists>na\\<in>carrier N.\n                            \\<exists>aa\\<in>carrier R.\n                               (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                                n) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                    (m, n) =\n                               (aa \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> ma,\n                                na) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> aa \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                    (ma, na)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) TR4_mem:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M;\n       n \\<in> carrier N; a \\<in> carrier R\\<rbrakk> \\<Longrightarrow> \n            (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) \\<in> TR\\<^bsub>R\\<^esub> M N P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> TR\\<^bsub>R\\<^esub> M N P", "apply (rule subsetD[of \"TR4 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\" \n                          \"(m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> TR4 R M N P \\<subseteq> TR\\<^bsub>R\\<^esub> M N P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> TR4 R M N P", "apply (rule subset_trans[of \"TR4 R M N P\" \"TR1 R M N P \\<union> TR2 R M N P \\<union>\n       TR3 R M N P \\<union> TR4 R M N P\" \"TR\\<^bsub>R\\<^esub> M N P\"],\n       rule subsetI, simp,\n       cut_tac TR_cont_TR1234[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> TR4 R M N P", "apply (simp add:tensor_relations4_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ma\\<in>carrier M.\n                         \\<exists>na\\<in>carrier N.\n                            \\<exists>aa\\<in>carrier R.\n                               (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                                   n) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                    (m, n) =\n                               (ma,\n                                aa \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                                na) \\<plusminus>\\<^bsub>P\\<^esub>\n                               -\\<^sub>a\\<^bsub>P\\<^esub> aa \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                    (ma, na)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tensor_product_module:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n       R module (tensor_product R M N P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> R module\n                      M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N", "apply (simp add:fm_gen_by_prod_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> R module\n                      M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N", "apply (frule TR_submodule [of M N P], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 2. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> R module\n                      M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N", "apply (simp add:fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> R module\n                      M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N", "apply (simp add:tensor_product_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)", "apply (simp add:Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_mpj_bilin1:\"\\<lbrakk> R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N\\<rbrakk>  \\<Longrightarrow> \n  (mpj P (TR\\<^bsub>R\\<^esub> M N P)) ( x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) = \n    (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (x1, y) \\<plusminus>\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> (mpj   P (TR\\<^bsub>R\\<^esub> M N P) (x2, y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1,\n                        y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y)", "apply (frule FM_P_module[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1,\n                        y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y)", "apply (subgoal_tac \"(x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub> (-\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub> (x2, y))) \\<in>  \n              ker\\<^bsub>P,(P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<^esub> (mpj P (TR\\<^bsub>R\\<^esub> M N P))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P\n   (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1,\n                        y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2,\n                       y) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((x1,\n             y) \\<plusminus>\\<^bsub>P\\<^esub>\n            (x2, y))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+,\n       frule Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule Module.mpj_mHom [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule  Module.mHom_eq_ker[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\"\n              \"( x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y)\" \"(x1, y) \\<plusminus>\\<^bsub>P\\<^esub> (x2, y)\"], assumption+,\n       rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> x1 \\<plusminus>\\<^bsub>M\\<^esub> x2 \\<in> carrier M\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> y \\<in> carrier N\n 3. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 4. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (x1, y) \\<plusminus>\\<^bsub>P\\<^esub> (x2, y)\n                      \\<in> carrier P\n 5. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2,\n                       y) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((x1,\n             y) \\<plusminus>\\<^bsub>P\\<^esub>\n            (x2, y))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n 6. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub> (x2, y))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1,\n                        y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y)\n 7. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2,\n                       y) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((x1,\n             y) \\<plusminus>\\<^bsub>P\\<^esub>\n            (x2, y))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule Module.module_is_ag [of M R],\n         simp add:aGroup.ag_pOp_closed, assumption+,\n         frule Module.module_is_ag [of P R],\n         rule aGroup.ag_pOp_closed, assumption+,\n         rule free_module_mem, assumption+,\n         rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N; R module P;\n     (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (x2, y))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      ((x1, y) \\<plusminus>\\<^bsub>P\\<^esub> (x2, y))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (x1,\n                        y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2,\n                       y) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((x1,\n             y) \\<plusminus>\\<^bsub>P\\<^esub>\n            (x2, y))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule_tac m = x1 and n = y in free_module_mem[of M N _ _ P],\n                  assumption+,\n        frule_tac m = x2 and n = y in free_module_mem[of M N _ _ P],\n                  assumption+,\n        simp add:Module.mHom_add[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\"\n          \"(x1, y)\" \"(x2, y)\"],\n        simp add:tensor_product_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2,\n                       y) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((x1,\n             y) \\<plusminus>\\<^bsub>P\\<^esub>\n            (x2, y))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+, \n       simp add:Module.mker_of_mpj, thin_tac \"submodule R P (TR\\<^bsub>R\\<^esub> M N P)\",\n       simp add:TR1_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_mpj_bilin2:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n       m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>  \\<Longrightarrow> \n  (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) = \n   (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (m, n1) \\<plusminus>\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> (mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2)", "apply (frule FM_P_module[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2)", "apply (subgoal_tac \"(m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub> (-\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2))) \\<in>  \n              ker\\<^bsub>P,(P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<^esub> (mpj P (TR\\<^bsub>R\\<^esub> M N P))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P\n   (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+,\n       frule Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule Module.mpj_mHom [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule  Module.mHom_eq_ker[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\"\n              \"(m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2)\" \"(m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2)\"], assumption+,\n       rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> n1 \\<plusminus>\\<^bsub>N\\<^esub> n2 \\<in> carrier N\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 3. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2)\n                      \\<in> carrier P\n 4. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n 5. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2)\n 6. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule Module.module_is_ag [of N R],\n         simp add:aGroup.ag_pOp_closed, assumption+,\n         frule Module.module_is_ag [of P R],\n         rule aGroup.ag_pOp_closed, assumption+,\n         rule free_module_mem, assumption+,\n         rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule_tac m = m and n = n1 in free_module_mem[of M N _ _ P],\n                  assumption+,\n        frule_tac m = m and n = n2 in free_module_mem[of M N _ _ P],\n                  assumption+, simp add:tensor_product_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N; R module P;\n     (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                 (m, n2))\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2));\n     (m, n1) \\<in> carrier P; (m, n2) \\<in> carrier P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2)) =\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, n1) \\<plusminus>\\<^bsub>P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n2)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (rule Module.mHom_add[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\"\n          \"(m, n1)\" \"(m, n2)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                          n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n             n1) \\<plusminus>\\<^bsub>P\\<^esub>\n            (m, n2))\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+, \n       simp add:Module.mker_of_mpj, thin_tac \"submodule R P (TR\\<^bsub>R\\<^esub> M N P)\",\n       simp add:TR2_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_mpj_bilin3:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n   m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>  \\<Longrightarrow> \n  (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) = a \\<cdot>\\<^sub>s\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> \n                                        (mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)", "apply (frule FM_P_module[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)", "apply (subgoal_tac \"(a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) \\<in> \n          ker\\<^bsub>P,(P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<^esub> (mpj P (TR\\<^bsub>R\\<^esub> M N P))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P\n   (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+,\n       frule Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule Module.mpj_mHom [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule  Module.mHom_eq_ker[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\"\n              \"(a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n)\" \"a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\"], assumption+,\n       rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> carrier M\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> n \\<in> carrier N\n 3. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 4. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n                      \\<in> carrier P\n 5. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n 6. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 7. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (simp add:Module.sc_mem, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n                      \\<in> carrier P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n 3. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 4. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule_tac m = m and n = n in free_module_mem[of M N _ _ P],\n                  assumption+,\n        simp add:Module.sc_mem,\n                  assumption+, simp add:tensor_product_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (rule Module.mHom_lin[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"(m, n)\"\n        \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\" a], assumption+, simp add:free_module_mem,\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                       n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+, \n       simp add:Module.mker_of_mpj, thin_tac \"submodule R P (TR\\<^bsub>R\\<^esub> M N P)\",\n       simp add:TR3_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_mpj_bilin4:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; \n      m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>  \\<Longrightarrow>\n     (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) = a \\<cdot>\\<^sub>s\\<^bsub>(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<^esub> \n            (mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)", "apply (frule FM_P_module[of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)", "apply (subgoal_tac \"(m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub> -\\<^sub>a\\<^bsub>P\\<^esub> (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) \\<in> \n          ker\\<^bsub>P,(P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<^esub> (mpj P (TR\\<^bsub>R\\<^esub> M N P))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P\n   (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+,\n       frule Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule Module.mpj_mHom [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       frule  Module.mHom_eq_ker[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\"\n              \"(m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n)\" \"a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\"], assumption+,\n       rule free_module_mem, assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n \\<in> carrier N\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> FM\\<^bsub>R\\<^esub> P M N\n 3. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n                      \\<in> carrier P\n 4. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n 5. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 6. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (simp add:Module.sc_mem, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n                      \\<in> carrier P\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n 3. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 4. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule_tac m = m and n = n in free_module_mem[of M N _ _ P],\n                  assumption+,\n        simp add:Module.sc_mem,\n                  assumption+, simp add:tensor_product_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R; R module P;\n     (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<plusminus>\\<^bsub>P\\<^esub>\n     -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n     \\<in> ker\\<^bsub>P,P /\\<^sub>m\n                        (TR\\<^bsub>R\\<^esub> M N\n                             P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P);\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n     R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n     \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P));\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n     mpj P (TR\\<^bsub>R\\<^esub> M N P)\n      (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                       (a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)) =\n                      a \\<cdot>\\<^sub>s\\<^bsub>P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\\<^esub>\n                      mpj P (TR\\<^bsub>R\\<^esub> M N P) (m, n)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (rule Module.mHom_lin[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"(m, n)\"\n        \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\" a], assumption+, simp add:free_module_mem,\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n     R module P\\<rbrakk>\n    \\<Longrightarrow> (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                          n) \\<plusminus>\\<^bsub>P\\<^esub>\n                      -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n           (m, n)\n                      \\<in> ker\\<^bsub>P,P /\\<^sub>m\n   (TR\\<^bsub>R\\<^esub> M N P)\\<^esub> mpj P (TR\\<^bsub>R\\<^esub> M N P)", "apply (frule TR_submodule [of M N P], assumption+, \n       simp add:Module.mker_of_mpj, thin_tac \"submodule R P (TR\\<^bsub>R\\<^esub> M N P)\",\n       simp add:TR4_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  tau :: \"[('r, 'm) Ring_scheme, ('a, 'r, 'm1) Module_scheme, \n        ('b, 'r, 'm1) Module_scheme, (('a * 'b), 'r, 'm1) Module_scheme] \\<Rightarrow> \n                                            ('a * 'b) \\<Rightarrow> ('a * 'b)\" where\n  \"tau R M N P = (\\<lambda>x\\<in>(M \\<times>\\<^sub>c N). x)\""], ["", "lemma (in Ring) tau_func:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n                                 tau R M N P \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> tau R M N P\n                      \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier P", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n       \\<Longrightarrow> tau R M N P x \\<in> carrier P", "apply (frule_tac x = x in cartesianTr [of M N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N;\n        \\<exists>m n.\n           m \\<in> carrier M \\<and>\n           n \\<in> carrier N \\<and> x = (m, n)\\<rbrakk>\n       \\<Longrightarrow> tau R M N P x \\<in> carrier P", "apply ((erule exE)+, (erule conjE)+, simp add:tau_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m n.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        (m, n) \\<in> M \\<times>\\<^sub>c N; m \\<in> carrier M;\n        n \\<in> carrier N; x = (m, n)\\<rbrakk>\n       \\<Longrightarrow> (m, n) \\<in> carrier P", "apply (simp add:free_module_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_mem:\"\\<lbrakk>R module M; R module N; m \\<in> carrier M; \n      n \\<in> carrier N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> tau R M N P (m, n) \\<in> carrier P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M; n \\<in> carrier N;\n     FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> tau R M N P (m, n) \\<in> carrier P", "apply (frule tau_func [of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M; n \\<in> carrier N;\n     FM\\<^bsub>R\\<^esub> P M N;\n     tau R M N P \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier P\\<rbrakk>\n    \\<Longrightarrow> tau R M N P (m, n) \\<in> carrier P", "apply (rule funcset_mem, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; m \\<in> carrier M; n \\<in> carrier N;\n     FM\\<^bsub>R\\<^esub> P M N;\n     tau R M N P \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier P\\<rbrakk>\n    \\<Longrightarrow> (m, n) \\<in> M \\<times>\\<^sub>c N", "apply (simp add:prod_carr_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_inj0:\"\\<lbrakk>\\<not> zeroring R;  R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \n      \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> zeroring R; R module M; R module N;\n     FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)", "apply (simp add:inj_on_def, (rule ballI)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<not> zeroring R; R module M; R module N;\n        FM\\<^bsub>R\\<^esub> P M N; x \\<in> M \\<times>\\<^sub>c N;\n        y \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n       \\<Longrightarrow> tau R M N P x = tau R M N P y \\<longrightarrow>\n                         x = y", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<not> zeroring R; R module M; R module N;\n        FM\\<^bsub>R\\<^esub> P M N; x \\<in> M \\<times>\\<^sub>c N;\n        y \\<in> M \\<times>\\<^sub>c N; tau R M N P x = tau R M N P y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:tau_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_inj1:\"\\<lbrakk>zeroring R; R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>\n           inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>zeroring R; R module M; R module N;\n     FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>zeroring R; R module M; R module N;\n     FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>M \\<times>\\<^sub>c N.\n                         \\<forall>y\\<in>M \\<times>\\<^sub>c N.\n                            tau R M N P x = tau R M N P y \\<longrightarrow>\n                            x = y", "apply ((rule ballI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>zeroring R; R module M; R module N;\n        FM\\<^bsub>R\\<^esub> P M N; x \\<in> M \\<times>\\<^sub>c N;\n        y \\<in> M \\<times>\\<^sub>c N; tau R M N P x = tau R M N P y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule module_over_zeroring[of M], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>zeroring R; R module M; R module N;\n        FM\\<^bsub>R\\<^esub> P M N; x \\<in> M \\<times>\\<^sub>c N;\n        y \\<in> M \\<times>\\<^sub>c N; tau R M N P x = tau R M N P y;\n        carrier M = {\\<zero>\\<^bsub>M\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule module_over_zeroring[of N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>zeroring R; R module M; R module N;\n        FM\\<^bsub>R\\<^esub> P M N; x \\<in> M \\<times>\\<^sub>c N;\n        y \\<in> M \\<times>\\<^sub>c N; tau R M N P x = tau R M N P y;\n        carrier M = {\\<zero>\\<^bsub>M\\<^esub>};\n        carrier N = {\\<zero>\\<^bsub>N\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:zeroring_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N; y \\<in> M \\<times>\\<^sub>c N;\n        tau R M N P x = tau R M N P y;\n        carrier M = {\\<zero>\\<^bsub>M\\<^esub>};\n        carrier N = {\\<zero>\\<^bsub>N\\<^esub>}; Ring R;\n        carrier R = {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule_tac x = x in cartesianTr[of M N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N; y \\<in> M \\<times>\\<^sub>c N;\n        tau R M N P x = tau R M N P y;\n        carrier M = {\\<zero>\\<^bsub>M\\<^esub>};\n        carrier N = {\\<zero>\\<^bsub>N\\<^esub>}; Ring R;\n        carrier R = {\\<zero>};\n        \\<exists>m n.\n           m \\<in> carrier M \\<and>\n           n \\<in> carrier N \\<and> x = (m, n)\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply ((erule exE)+, (erule conjE)+, simp add:tau_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_inj:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n                inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)", "apply (case_tac \"zeroring R\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     zeroring R\\<rbrakk>\n    \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     \\<not> zeroring R\\<rbrakk>\n    \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)", "apply (simp add:tau_inj1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     \\<not> zeroring R\\<rbrakk>\n    \\<Longrightarrow> inj_on (tau R M N P) (M \\<times>\\<^sub>c N)", "apply (simp add:tau_inj0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tau_mpj_bilinear:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow>  \n      bilinear_map (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)) \n                     R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> bilinear_map\n                       (compose (M \\<times>\\<^sub>c N)\n                         (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P))\n                       R M N\n                       (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)", "apply (simp add:bilinear_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                       (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                      \\<in> M \\<times>\\<^sub>c N \\<rightarrow>\n                            carrier\n                             (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                  N) \\<and>\n                      (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                       (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                      \\<in> M \\<times>\\<^sub>c N \\<rightarrow>\n                            carrier\n                             (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                  N)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (rule Pi_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          x\n                         \\<in> carrier\n                                (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                     N)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (simp add:compose_def tau_def tensor_product_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n       \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P) x\n                         \\<in> carrier\n                                (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (frule TR_submodule [of M N P], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n       \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P) x\n                         \\<in> carrier\n                                (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (frule FM_P_module[of M N P], assumption+,\n        frule Module.mpj_mHom[of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> M \\<times>\\<^sub>c N;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P); R module P;\n        mpj P (TR\\<^bsub>R\\<^esub> M N P)\n        \\<in> mHom R P (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\\<rbrakk>\n       \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P) x\n                         \\<in> carrier\n                                (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (frule Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n       rule Module.mHom_mem [of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \"(mpj P (TR\\<^bsub>R\\<^esub> M N P))\"],\n       assumption+, simp add:free_gen_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x1\\<in>carrier M.\n                          \\<forall>x2\\<in>carrier M.\n                             \\<forall>y\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x1,\n                                  y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x2, y)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x1\\<in>carrier M.\n                         \\<forall>x2\\<in>carrier M.\n                            \\<forall>y\\<in>carrier N.\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x1,\n                                 y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x2, y)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (rule ballI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x1,\n                           y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x2, y)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (simp add:compose_def tau_def mem_cartesian)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x1 \\<in> carrier M; x2 \\<in> carrier M; y \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> ((x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y)\n                          \\<in> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y) =\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x1,\n                            y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y)) \\<and>\n                         ((x1 \\<plusminus>\\<^bsub>M\\<^esub> x2, y)\n                          \\<notin> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          undefined =\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x1,\n                            y) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x2, y))\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (frule Module.module_is_ag[of M R],\n        frule_tac x = x1 and y = x2 in aGroup.ag_pOp_closed, assumption+,\n        simp add:mem_cartesian, simp add:tau_mpj_bilin1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>carrier M.\n                          \\<forall>y1\\<in>carrier N.\n                             \\<forall>y2\\<in>carrier N.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y2)) \\<and>\n                      (\\<forall>x\\<in>carrier M.\n                          \\<forall>y\\<in>carrier N.\n                             \\<forall>r\\<in>carrier R.\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y) \\<and>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P)\n                                 (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                                r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                                compose (M \\<times>\\<^sub>c N)\n                                 (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                 (tau R M N P) (x, y))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier M.\n                         \\<forall>y1\\<in>carrier N.\n                            \\<forall>y2\\<in>carrier N.\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y2)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier M.\n                         \\<forall>y\\<in>carrier N.\n                            \\<forall>r\\<in>carrier R.\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y) \\<and>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y)", "apply (rule ballI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y1 y2.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y1 \\<in> carrier N; y2 \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y2)\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier M.\n                         \\<forall>y\\<in>carrier N.\n                            \\<forall>r\\<in>carrier R.\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y) \\<and>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y)", "apply (simp add:compose_def tau_def mem_cartesian)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y1 y2.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y1 \\<in> carrier N; y2 \\<in> carrier N\\<rbrakk>\n       \\<Longrightarrow> ((x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2)\n                          \\<in> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2) =\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x, y2)) \\<and>\n                         ((x, y1 \\<plusminus>\\<^bsub>N\\<^esub> y2)\n                          \\<notin> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          undefined =\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x, y1) \\<plusminus>\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x, y2))\n 2. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier M.\n                         \\<forall>y\\<in>carrier N.\n                            \\<forall>r\\<in>carrier R.\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y) \\<and>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y)", "apply (frule Module.module_is_ag[of N R],\n        frule_tac x = y1 and y = y2 in aGroup.ag_pOp_closed, assumption+,\n        simp add:mem_cartesian, simp add:tau_mpj_bilin2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier M.\n                         \\<forall>y\\<in>carrier N.\n                            \\<forall>r\\<in>carrier R.\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y) \\<and>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P)\n                                (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                               r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                               compose (M \\<times>\\<^sub>c N)\n                                (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                                (tau R M N P) (x, y)", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                         r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y) \\<and>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                         r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                         r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y)\n 2. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                         r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y)", "apply (simp add:compose_def tau_def mem_cartesian)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> ((r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y)\n                          \\<in> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y) =\n                          r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x, y)) \\<and>\n                         ((r \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> x, y)\n                          \\<notin> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          undefined =\n                          r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x, y))\n 2. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                         r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y)", "apply (frule_tac a = r and m = x in Module.sc_mem[of M R], assumption+,\n        simp add:mem_cartesian, simp add:tau_mpj_bilin3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                         r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                         compose (M \\<times>\\<^sub>c N)\n                          (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                          (x, y)", "apply (simp add:compose_def tau_def mem_cartesian)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y r.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        x \\<in> carrier M; y \\<in> carrier N; r \\<in> carrier R\\<rbrakk>\n       \\<Longrightarrow> ((x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y)\n                          \\<in> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P)\n                           (x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y) =\n                          r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x, y)) \\<and>\n                         ((x, r \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> y)\n                          \\<notin> M \\<times>\\<^sub>c N \\<longrightarrow>\n                          undefined =\n                          r \\<cdot>\\<^sub>s\\<^bsub>M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N\\<^esub>\n                          mpj P (TR\\<^bsub>R\\<^esub> M N P) (x, y))", "apply (frule_tac a = r and m = y in Module.sc_mem[of N R], assumption+,\n        simp add:mem_cartesian, simp add:tau_mpj_bilin4)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  tnm :: \"[('r, 'm) Ring_scheme, (('a * 'b), 'r, 'm1) Module_scheme, \n        ('a, 'r, 'm1) Module_scheme, ('b, 'r, 'm1) Module_scheme] \\<Rightarrow> \n        ('a * 'b) \\<Rightarrow> ('a * 'b) set\" where\n  \"tnm R P M N = compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\""], ["", "(* tensor natural map *)"], ["", "lemma (in Ring) tnm_bilinear:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk> \\<Longrightarrow> \n        bilinear_map (tnm R P M N) R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> bilinear_map (tnm R P M N) R M N\n                       (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)", "apply (simp add:tnm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> bilinear_map\n                       (compose (M \\<times>\\<^sub>c N)\n                         (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P))\n                       R M N\n                       (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)", "apply (simp add:tau_mpj_bilinear)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tnm_mem:\"\\<lbrakk> R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; m \\<in> carrier M; \n       n \\<in> carrier N\\<rbrakk>  \\<Longrightarrow> tnm R P M N (m, n) \\<in> carrier (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> tnm R P M N (m, n)\n                      \\<in> carrier\n                             (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                  N)", "apply (simp add:tnm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N\\<rbrakk>\n    \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                       (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                       (m, n)\n                      \\<in> carrier\n                             (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                  N)", "apply (frule tau_mem [of M N m n], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N;\n     tau R M N P (m, n) \\<in> carrier P\\<rbrakk>\n    \\<Longrightarrow> compose (M \\<times>\\<^sub>c N)\n                       (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P)\n                       (m, n)\n                      \\<in> carrier\n                             (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                  N)", "apply (simp add:compose_def, simp add:prod_carr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N;\n     tau R M N P (m, n) \\<in> carrier P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P) (tau R M N P (m, n))\n                      \\<in> carrier\n                             (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                                  N)", "apply (simp add:tensor_product_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N;\n     tau R M N P (m, n) \\<in> carrier P\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P) (tau R M N P (m, n))\n                      \\<in> carrier\n                             (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))", "apply (frule TR_submodule [of M N P], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     m \\<in> carrier M; n \\<in> carrier N;\n     tau R M N P (m, n) \\<in> carrier P;\n     submodule R P (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n    \\<Longrightarrow> mpj P (TR\\<^bsub>R\\<^esub> M N P) (tau R M N P (m, n))\n                      \\<in> carrier\n                             (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))", "apply (rule Module.mpj_mem[of P R \"TR\\<^bsub>R\\<^esub> M N P\" \"tau R M N P (m, n)\"],\n       rule FM_P_module[of M N P], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  tensor_elem :: \"[('r, 'm) Ring_scheme, (('a * 'b), 'r, 'm1) Module_scheme, \n   ('a, 'r, 'm1) Module_scheme, ('b, 'r, 'm1) Module_scheme] \\<Rightarrow> 'a \\<Rightarrow>  'b \n   \\<Rightarrow> ('a * 'b) set\" where\n  \"tensor_elem R P M N m n = tnm R P M N (m, n)\""], ["", "abbreviation\n  TNSELEM  (\"(6_ \\<^bsub>_,_\\<^esub>\\<otimes>\\<^bsub>_,_\\<^esub>/ _)\" [100,100,100,100,100,101]101) where\n  \"m \\<^bsub>R,P\\<^esub>\\<otimes>\\<^bsub>M,N\\<^esub> n == tensor_elem R P M N m n\""], ["", "lemma (in Ring) tensor_univ_propTr:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; \n      R module Z; bilinear_map f R M N Z\\<rbrakk> \\<Longrightarrow>\n     \\<exists>g. g \\<in> mHom R P Z \\<and> (compose (M \\<times>\\<^sub>c N) g (tau R M N P)) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         g \\<in> mHom R P Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f", "apply (unfold fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N;\n     R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N);\n     R module Z; bilinear_map f R M N Z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         g \\<in> mHom R P Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f", "apply (frule conjunct1, frule conjunct2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N;\n     R module P \\<and> free_generator R P (M \\<times>\\<^sub>c N);\n     R module Z; bilinear_map f R M N Z; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         g \\<in> mHom R P Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f", "apply (fold fm_gen_by_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         g \\<in> mHom R P Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f", "apply (frule bilinear_func[of f M N Z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N);\n     f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         g \\<in> mHom R P Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f", "apply (frule Module.exist_extension_mhom [of P R Z \"M \\<times>\\<^sub>c N\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z; R module P;\n     free_generator R P (M \\<times>\\<^sub>c N);\n     f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n     \\<exists>g\\<in>mHom R P Z.\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. g x = f x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         g \\<in> mHom R P Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f", "apply (erule bexE, rename_tac h)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g \\<in> mHom R P Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g (tau R M N P) =\n                            f", "apply (subgoal_tac \"compose (M \\<times>\\<^sub>c N) h (tau R M N P) = f\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z; \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x;\n        compose (M \\<times>\\<^sub>c N) h (tau R M N P) = f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g \\<in> mHom R P Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g (tau R M N P) =\n                            f\n 2. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N) h (tau R M N P) = f", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N) h (tau R M N P) = f", "apply (rule funcset_eq [of _ \"M \\<times>\\<^sub>c N\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N) h (tau R M N P)\n                         \\<in> extensional (M \\<times>\\<^sub>c N)\n 2. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> f \\<in> extensional (M \\<times>\\<^sub>c N)\n 3. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>M \\<times>\\<^sub>c N.\n                            compose (M \\<times>\\<^sub>c N) h (tau R M N P)\n                             x =\n                            f x", "apply (simp add:compose_def, simp add:bilinear_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z;\n        \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>M \\<times>\\<^sub>c N.\n                            compose (M \\<times>\\<^sub>c N) h (tau R M N P)\n                             x =\n                            f x", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>h x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; R module P;\n        free_generator R P (M \\<times>\\<^sub>c N);\n        f \\<in> M \\<times>\\<^sub>c N \\<rightarrow> carrier Z;\n        h \\<in> mHom R P Z; \\<forall>x\\<in>M \\<times>\\<^sub>c N. h x = f x;\n        x \\<in> M \\<times>\\<^sub>c N\\<rbrakk>\n       \\<Longrightarrow> compose (M \\<times>\\<^sub>c N) h (tau R M N P) x =\n                         f x", "apply (simp add:compose_def tau_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tensor_univ_propTr1:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; \n      R module Z; bilinear_map f R M N Z\\<rbrakk> \\<Longrightarrow>\n     \\<exists>!g. g\\<in>(mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) Z) \\<and> (compose (M \\<times>\\<^sub>c N) g (tnm R P M N)) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!g.\n                         g \\<in> mHom R\n                                  (M\n \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                  Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tnm R P M N) = f", "apply (frule Module.module_is_ag[of M],\n       frule Module.module_is_ag[of N],\n       frule FM_P_module[of M N P], assumption+,\n       frule Module.module_is_ag[of P])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n     aGroup P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!g.\n                         g \\<in> mHom R\n                                  (M\n \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                  Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g (tnm R P M N) = f", "apply (simp add:tnm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n     aGroup P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!g.\n                         g \\<in> mHom R\n                                  (M\n \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                  Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g\n                          (compose (M \\<times>\\<^sub>c N)\n                            (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                            (tau R M N P)) =\n                         f", "apply (frule tensor_univ_propTr[of M N P Z f], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N; R module Z;\n     bilinear_map f R M N Z; aGroup M; aGroup N; R module P; aGroup P;\n     \\<exists>g.\n        g \\<in> mHom R P Z \\<and>\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!g.\n                         g \\<in> mHom R\n                                  (M\n \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                  Z \\<and>\n                         compose (M \\<times>\\<^sub>c N) g\n                          (compose (M \\<times>\\<^sub>c N)\n                            (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                            (tau R M N P)) =\n                         f", "apply (erule exE, erule conjE, \n        frule TR_submodule[of M N P], assumption+,\n        frule_tac Module.indmhom1[of P R \"TR\\<^bsub>R\\<^esub> M N P\" Z], assumption+,\n        frule Module.submodule_subset[of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+,\n        simp add:tensor_relations_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P\n         (LSM\\<^bsub>R\\<^esub> P\n             (TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union>\n              TR4 R M N P));\n        LSM\\<^bsub>R\\<^esub> P\n           (TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union>\n            TR4 R M N P)\n        \\<subseteq> carrier P\\<rbrakk>\n       \\<Longrightarrow> LSM\\<^bsub>R\\<^esub> P\n                            (TR1 R M N P \\<union> TR2 R M N P \\<union>\n                             TR3 R M N P \\<union>\n                             TR4 R M N P)\n                         \\<subseteq> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (rule_tac f = g in LSM_sub_ker[of P Z \"(TR1 R M N P \\<union> TR2 R M N P \n        \\<union> TR3 R M N P \\<union> TR4 R M N P)\"], assumption+, \n        rule TR_sub_carr, assumption+,\n        thin_tac \"submodule R P\n          (LSM\\<^bsub>R\\<^esub> P (TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union> TR4 R M N P))\",\n        thin_tac \"LSM\\<^bsub>R\\<^esub> P (TR1 R M N P \\<union> TR2 R M N P \\<union> TR3 R M N P \\<union> \n          TR4 R M N P) \\<subseteq> carrier P\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\\<rbrakk>\n       \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                         TR3 R M N P \\<union>\n                         TR4 R M N P\n                         \\<subseteq> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "(** show member of TR1 is in ker\\<^bsub>P,Z\\<^esub> g **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\\<rbrakk>\n       \\<Longrightarrow> TR1 R M N P \\<union> TR2 R M N P \\<union>\n                         TR3 R M N P \\<union>\n                         TR4 R M N P\n                         \\<subseteq> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (rule subsetI, simp, erule disjE,\n        frule TR1_sub_carr[of M N P], assumption+,\n        frule_tac c = x in subsetD[of \"TR1 R M N P\" \"carrier P\"], assumption+,\n        thin_tac \"TR1 R M N P \\<subseteq> carrier P\",\n        simp add:tensor_relations1_def, (erule bexE)+, simp add:ker_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m1 m2 n.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n))\n        \\<in> carrier P;\n        m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n))\\<rbrakk>\n       \\<Longrightarrow> g ((m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                             n) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n                   n) \\<plusminus>\\<^bsub>P\\<^esub>\n                  (m2, n))) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR2 R M N P \\<or>\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac x = m1 and y = m2 in aGroup.ag_pOp_closed, assumption+,\n        frule_tac m = \"m1 \\<plusminus>\\<^bsub>M\\<^esub> m2\" and n = n in free_module_mem[of M N], \n         assumption+,\n        frule_tac m = m1 and n = n in free_module_mem[of M N], assumption+,\n        frule_tac m = m2 and n = n in free_module_mem[of M N], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m1 m2 n.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n))\n        \\<in> carrier P;\n        m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n) \\<in> carrier P;\n        (m1, n) \\<in> carrier P; (m2, n) \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g ((m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                             n) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> ((m1,\n                   n) \\<plusminus>\\<^bsub>P\\<^esub>\n                  (m2, n))) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR2 R M N P \\<or>\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (subst Module.mHom_add[of P R Z], assumption+,\n       rule aGroup.ag_mOp_closed, assumption+,\n       rule aGroup.ag_pOp_closed, assumption+,\n       frule_tac x = \"(m1, n)\" and y = \"(m2, n)\" in aGroup.ag_pOp_closed, \n       assumption+,\n       simp add:Module.mHom_inv[of P R Z] Module.mHom_add)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m1 m2 n.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n))\n        \\<in> carrier P;\n        m1 \\<in> carrier M; m2 \\<in> carrier M; n \\<in> carrier N;\n        x =\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m1, n) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m2, n));\n        m1 \\<plusminus>\\<^bsub>M\\<^esub> m2 \\<in> carrier M;\n        (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n) \\<in> carrier P;\n        (m1, n) \\<in> carrier P; (m2, n) \\<in> carrier P;\n        (m1, n) \\<plusminus>\\<^bsub>P\\<^esub> (m2, n)\n        \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g (m1 \\<plusminus>\\<^bsub>M\\<^esub> m2,\n                            n) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> (g\n                (m1, n) \\<plusminus>\\<^bsub>Z\\<^esub>\n               g (m2, n)) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR2 R M N P \\<or>\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m1 \\<plusminus>\\<^bsub>M\\<^esub> m2, n)\" in eq_fun_eq_val, \n        frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m1, n)\" in eq_fun_eq_val,\n        frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m2, n)\" in eq_fun_eq_val,\n        thin_tac \"compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\",\n        simp add:compose_def cmp_def, simp add:mem_cartesian tau_def,\n        simp add:bilinear_l_add1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR2 R M N P \\<or>\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "(** show member of TR2 is in ker\\<^bsub>P,Z\\<^esub> g **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR2 R M N P \\<or>\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (erule disjE,\n        frule TR2_sub_carr[of M N P], assumption+,\n        frule_tac c = x in subsetD[of \"TR2 R M N P\" \"carrier P\"], assumption+,\n        thin_tac \"TR2 R M N P \\<subseteq> carrier P\",\n        simp add:tensor_relations2_def, (erule bexE)+, simp add:ker_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n1 n2.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2))\n        \\<in> carrier P;\n        m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2))\\<rbrakk>\n       \\<Longrightarrow> g ((m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                                n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                   n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                  (m, n2))) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac x = n1 and y = n2 in aGroup.ag_pOp_closed, assumption+,\n        frule_tac m = m and n = \"n1 \\<plusminus>\\<^bsub>N\\<^esub> n2\" in free_module_mem[of M N], \n         assumption+,\n        frule_tac m = m and n = n1 in free_module_mem[of M N], assumption+,\n        frule_tac m = m and n = n2 in free_module_mem[of M N], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n1 n2.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2))\n        \\<in> carrier P;\n        m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        n1 \\<plusminus>\\<^bsub>N\\<^esub> n2 \\<in> carrier N;\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<in> carrier P;\n        (m, n1) \\<in> carrier P; (m, n2) \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g ((m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                                n2) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> ((m,\n                   n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                  (m, n2))) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (subst Module.mHom_add[of P R Z], assumption+,\n       rule aGroup.ag_mOp_closed, assumption+,\n       rule aGroup.ag_pOp_closed, assumption+,\n       frule_tac x = \"(m, n1)\" and y = \"(m, n2)\" in aGroup.ag_pOp_closed, \n       assumption+,\n       simp add:Module.mHom_inv[of P R Z] Module.mHom_add)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n1 n2.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2))\n        \\<in> carrier P;\n        m \\<in> carrier M; n1 \\<in> carrier N; n2 \\<in> carrier N;\n        x =\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n            n2) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> ((m, n1) \\<plusminus>\\<^bsub>P\\<^esub>\n                                    (m, n2));\n        n1 \\<plusminus>\\<^bsub>N\\<^esub> n2 \\<in> carrier N;\n        (m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2) \\<in> carrier P;\n        (m, n1) \\<in> carrier P; (m, n2) \\<in> carrier P;\n        (m, n1) \\<plusminus>\\<^bsub>P\\<^esub> (m, n2)\n        \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g (m, n1 \\<plusminus>\\<^bsub>N\\<^esub>\n                               n2) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> (g\n                (m, n1) \\<plusminus>\\<^bsub>Z\\<^esub>\n               g (m, n2)) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m, n1 \\<plusminus>\\<^bsub>N\\<^esub> n2)\" in eq_fun_eq_val, \n        frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m, n1)\" in eq_fun_eq_val,\n        frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m, n2)\" in eq_fun_eq_val,\n        thin_tac \"compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\",\n        simp add:compose_def cmp_def, simp add:mem_cartesian tau_def,\n        simp add:bilinear_r_add1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "(** show member of TR3 is in ker\\<^bsub>P,Z\\<^esub> g **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR3 R M N P \\<or> x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (erule disjE,\n        frule TR3_sub_carr[of M N P], assumption+,\n        frule_tac c = x in subsetD[of \"TR3 R M N P\" \"carrier P\"], assumption+,\n        thin_tac \"TR3 R M N P \\<subseteq> carrier P\",\n        simp add:tensor_relations3_def, (erule bexE)+, simp add:ker_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n)\\<rbrakk>\n       \\<Longrightarrow> g ((a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                             n) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                 (m, n)) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac a = a and m = m in Module.sc_mem, assumption+,\n        frule_tac m = \"a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m\" and n = n in free_module_mem[of M N], \n         assumption+,\n        frule_tac m = m and n = n in free_module_mem[of M N], assumption+,\n        frule_tac a = a and m = \"(m, n)\" in Module.sc_mem, assumption+,\n        frule_tac x = \"(a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\" in aGroup.ag_mOp_closed, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> carrier M;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g ((a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                             n) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                 (m, n)) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (subst Module.mHom_add[of P R Z], assumption+,\n       simp add:Module.mHom_inv[of P R Z],\n       simp add:Module.mHom_lin)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> carrier M;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                            n) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n              g (m, n) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n)\" in eq_fun_eq_val, \n        frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m, n)\" in eq_fun_eq_val)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n         n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m \\<in> carrier M;\n        (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P)\n         (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n) =\n        f (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m, n);\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) (m, n) =\n        f (m, n)\\<rbrakk>\n       \\<Longrightarrow> g (a \\<cdot>\\<^sub>s\\<^bsub>M\\<^esub> m,\n                            n) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n              g (m, n) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 3. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (thin_tac \"compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\",\n        simp add:compose_def cmp_def, simp add:mem_cartesian tau_def,\n        simp add:bilinear_l_lin1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "(** show member of TR4 is in ker\\<^bsub>P,Z\\<^esub> g **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        x \\<in> TR4 R M N P\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ker\\<^bsub>P,Z\\<^esub> g\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule TR4_sub_carr[of M N P], assumption+,\n        frule_tac c = x in subsetD[of \"TR4 R M N P\" \"carrier P\"], assumption+,\n        thin_tac \"TR4 R M N P \\<subseteq> carrier P\",\n        simp add:tensor_relations4_def, (erule bexE)+, simp add:ker_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n)\\<rbrakk>\n       \\<Longrightarrow> g ((m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                                n) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                 (m, n)) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac a = a and m = n in Module.sc_mem, assumption+,\n        frule_tac m = m and n = \"a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n\" in free_module_mem[of M N], \n         assumption+,\n        frule_tac m = m and n = n in free_module_mem[of M N], assumption+,\n        frule_tac a = a and m = \"(m, n)\" in Module.sc_mem, assumption+,\n        frule_tac x = \"(a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n))\" in aGroup.ag_mOp_closed, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n \\<in> carrier N;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g ((m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                                n) \\<plusminus>\\<^bsub>P\\<^esub>\n                            -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                 (m, n)) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (subst Module.mHom_add[of P R Z], assumption+,\n       simp add:Module.mHom_inv[of P R Z],\n       simp add:Module.mHom_lin)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n \\<in> carrier N;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P\\<rbrakk>\n       \\<Longrightarrow> g (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                               n) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n              g (m, n) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n)\" in eq_fun_eq_val, \n        frule_tac f = \"compose (M \\<times>\\<^sub>c N) g (tau R M N P)\" and g = f and \n                x = \"(m, n)\" in eq_fun_eq_val)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n \\<in> carrier N;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P)\n         (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n        f (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n);\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) (m, n) =\n        f (m, n)\\<rbrakk>\n       \\<Longrightarrow> g (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                               n) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n              g (m, n) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (thin_tac \"compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f\",\n        simp add:compose_def cmp_def, simp add:mem_cartesian tau_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g x m n a.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        m \\<in> carrier M; n \\<in> carrier N; a \\<in> carrier R;\n        x =\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n            n) \\<plusminus>\\<^bsub>P\\<^esub>\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub>\n                                   (m, n);\n        a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n \\<in> carrier N;\n        (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) \\<in> carrier P;\n        (m, n) \\<in> carrier P;\n        a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n) \\<in> carrier P;\n        -\\<^sub>a\\<^bsub>P\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>P\\<^esub> (m, n)\n        \\<in> carrier P;\n        g (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n) =\n        f (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub> n);\n        g (m, n) = f (m, n)\\<rbrakk>\n       \\<Longrightarrow> f (m, a \\<cdot>\\<^sub>s\\<^bsub>N\\<^esub>\n                               n) \\<plusminus>\\<^bsub>Z\\<^esub>\n                         -\\<^sub>a\\<^bsub>Z\\<^esub> a \\<cdot>\\<^sub>s\\<^bsub>Z\\<^esub>\n              f (m, n) =\n                         \\<zero>\\<^bsub>Z\\<^esub>\n 2. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (simp add:bilinear_r_lin1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (frule Module.qmodule_module [of P R \"TR\\<^bsub>R\\<^esub> M N P\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g;\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f", "apply (rule ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g;\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f\n 2. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g;\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                  Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                 Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f\\<rbrakk>\n       \\<Longrightarrow> ga = y", "apply (erule ex1E, erule conjE,\n            thin_tac \"\\<forall>y. y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n            compos P y (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g \\<longrightarrow> y = ga\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g ga.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f\n 2. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g;\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                  Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                 Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f\\<rbrakk>\n       \\<Longrightarrow> ga = y", "apply (simp add:tensor_product_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g ga.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            g \\<in> mHom R\n                                     (P /\\<^sub>m\n(TR\\<^bsub>R\\<^esub> M N P))\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) g\n                             (compose (M \\<times>\\<^sub>c N)\n                               (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                               (tau R M N P)) =\n                            f\n 2. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g;\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                  Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                 Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f\\<rbrakk>\n       \\<Longrightarrow> ga = y", "apply (cut_tac g = \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\" and h = ga \n          in compose_assoc[of \"tau R M N P\" \"M \\<times>\\<^sub>c N\" \"carrier P\"],\n         simp add:tau_func,\n        simp add:compos_def, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        \\<exists>!ga.\n           ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n                     Z \\<and>\n           compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g;\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                  Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                 Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f\\<rbrakk>\n       \\<Longrightarrow> ga = y", "apply (simp add:tensor_product_def,\n        thin_tac \"\\<exists>!ga. ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n              compos P ga (mpj P (TR\\<^bsub>R\\<^esub> M N P)) = g\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f\\<rbrakk>\n       \\<Longrightarrow> ga = y", "apply (frule free_gen_gen[of P M N],\n         frule Module.surjec_generator[of P R \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\" \n         \"mpj P (TR\\<^bsub>R\\<^esub> M N P)\" \"M \\<times>\\<^sub>c N\"],\n         simp add:Module.qmodule_module,\n         simp add:Module.mpj_mHom,\n         simp add:Module.mpj_surjec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        generator R P (M \\<times>\\<^sub>c N);\n        generator R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n         (mpj P (TR\\<^bsub>R\\<^esub> M N P) ` M \\<times>\\<^sub>c N)\\<rbrakk>\n       \\<Longrightarrow> ga = y", "apply (rule_tac f = ga and g = y in Module.gen_mHom_eq[of \"P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)\"\n         R Z \"mpj P (TR\\<^bsub>R\\<^esub> M N P) ` M \\<times>\\<^sub>c N\"], assumption+, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z \\<and>\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        generator R P (M \\<times>\\<^sub>c N);\n        generator R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n         (mpj P (TR\\<^bsub>R\\<^esub> M N P) ` M \\<times>\\<^sub>c N)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>h\\<in>mpj P (TR\\<^bsub>R\\<^esub> M N P) `\n  M \\<times>\\<^sub>c N.\n                            ga h = y h", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        generator R P (M \\<times>\\<^sub>c N);\n        generator R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P))\n         (mpj P (TR\\<^bsub>R\\<^esub> M N P) ` M \\<times>\\<^sub>c N);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>h\\<in>mpj P (TR\\<^bsub>R\\<^esub> M N P) `\n  M \\<times>\\<^sub>c N.\n                            ga h = y h", "apply (rule ballI,\n      thin_tac \"generator R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) (mpj P (TR\\<^bsub>R\\<^esub> M N P) ` M \\<times>\\<^sub>c N)\",\n      simp add:image_def, erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y h x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        generator R P (M \\<times>\\<^sub>c N);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P)) =\n        f;\n        x \\<in> M \\<times>\\<^sub>c N;\n        h = mpj P (TR\\<^bsub>R\\<^esub> M N P) x\\<rbrakk>\n       \\<Longrightarrow> ga h = y h", "apply (frule_tac f = \"compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P))\" and g = f and \n         x = x in eq_fun_eq_val,\n         thin_tac \"compose (M \\<times>\\<^sub>c N) ga (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                   (tau R M N P)) = f\",\n         frule_tac f = \"compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P)) (tau R M N P))\" and g = f and \n         x = x in eq_fun_eq_val,\n         thin_tac \"compose (M \\<times>\\<^sub>c N) y (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n                   (tau R M N P)) = f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g ga y h x.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        R module Z; bilinear_map f R M N Z; aGroup M; aGroup N; R module P;\n        aGroup P; g \\<in> mHom R P Z;\n        compose (M \\<times>\\<^sub>c N) g (tau R M N P) = f;\n        submodule R P (TR\\<^bsub>R\\<^esub> M N P);\n        R module P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P);\n        generator R P (M \\<times>\\<^sub>c N);\n        ga \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        y \\<in> mHom R (P /\\<^sub>m (TR\\<^bsub>R\\<^esub> M N P)) Z;\n        x \\<in> M \\<times>\\<^sub>c N;\n        h = mpj P (TR\\<^bsub>R\\<^esub> M N P) x;\n        compose (M \\<times>\\<^sub>c N) ga\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P))\n         x =\n        f x;\n        compose (M \\<times>\\<^sub>c N) y\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P))\n         x =\n        f x\\<rbrakk>\n       \\<Longrightarrow> ga h = y h", "apply (simp add:compose_def tau_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Ring) tensor_universal_property:\"\\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N \\<rbrakk>\n \\<Longrightarrow>  universal_property R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) (tnm R P M N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> universal_property R M N\n                       (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                       (tnm R P M N)", "apply (simp add:universal_property_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N\\<rbrakk>\n    \\<Longrightarrow> bilinear_map (tnm R P M N) R M N\n                       (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                            N) \\<and>\n                      (\\<forall>Z g.\n                          R module Z \\<and>\n                          bilinear_map g R M N Z \\<longrightarrow>\n                          (\\<exists>!h.\n                              h \\<in> mHom R\n (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) Z \\<and>\n                              compose (M \\<times>\\<^sub>c N) h\n                               (tnm R P M N) =\n                              g))", "apply (frule tau_mpj_bilinear [of M N], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     bilinear_map\n      (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n        (tau R M N P))\n      R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<rbrakk>\n    \\<Longrightarrow> bilinear_map (tnm R P M N) R M N\n                       (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub>\n                            N) \\<and>\n                      (\\<forall>Z g.\n                          R module Z \\<and>\n                          bilinear_map g R M N Z \\<longrightarrow>\n                          (\\<exists>!h.\n                              h \\<in> mHom R\n (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) Z \\<and>\n                              compose (M \\<times>\\<^sub>c N) h\n                               (tnm R P M N) =\n                              g))", "apply (rule conjI, simp add:tnm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n     bilinear_map\n      (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n        (tau R M N P))\n      R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z g.\n                         R module Z \\<and>\n                         bilinear_map g R M N Z \\<longrightarrow>\n                         (\\<exists>!h.\n                             h \\<in> mHom R\n(M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N) Z \\<and>\n                             compose (M \\<times>\\<^sub>c N) h\n                              (tnm R P M N) =\n                             g)", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z g.\n       \\<lbrakk>R module M; R module N; FM\\<^bsub>R\\<^esub> P M N;\n        bilinear_map\n         (compose (M \\<times>\\<^sub>c N) (mpj P (TR\\<^bsub>R\\<^esub> M N P))\n           (tau R M N P))\n         R M N (M \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N);\n        R module Z; bilinear_map g R M N Z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!h.\n                            h \\<in> mHom R\n                                     (M\n    \\<^bsub>P\\<^esub>\\<Otimes>\\<^bsub>R\\<^esub> N)\n                                     Z \\<and>\n                            compose (M \\<times>\\<^sub>c N) h (tnm R P M N) =\n                            g", "apply (rule_tac Z = Z and f = g in tensor_univ_propTr1 [of M N],\n             assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*                    f\n                  M \\<times> N  \\<longrightarrow> Z\n                    |       /\n         tnp R M N  |      / g\n                    |     /\n                  M \\<Otimes>\\<^sub>R N\n     *)"], ["", "end"]]}