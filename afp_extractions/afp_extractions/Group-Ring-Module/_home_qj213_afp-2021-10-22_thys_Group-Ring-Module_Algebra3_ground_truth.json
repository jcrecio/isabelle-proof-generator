{"file_name": "/home/qj213/afp-2021-10-22/thys/Group-Ring-Module/Algebra3.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Group-Ring-Module", "problem_names": ["lemma (in Group) contain_commutator:\"\\<lbrakk>G \\<guillemotright> H; (commutators G) \\<subseteq> H\\<rbrakk> \\<Longrightarrow> G \\<triangleright> H\"", "lemma (in Group) s_top_induced:\"\\<lbrakk>G \\<guillemotright> L; H \\<subseteq> L; K \\<subseteq> L\\<rbrakk> \\<Longrightarrow> \n                                        H \\<diamondop>\\<^bsub>Gp G L\\<^esub> K =  H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_top_l_unit:\"G \\<guillemotright> K \\<Longrightarrow> {\\<one>} \\<diamondop>\\<^bsub>G\\<^esub> K = K\"", "lemma (in Group) s_top_r_unit:\"G \\<guillemotright> K \\<Longrightarrow> K \\<diamondop>\\<^bsub>G\\<^esub> {\\<one>} = K\"", "lemma (in Group) s_top_sub:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow>  H \\<diamondop>\\<^bsub>G\\<^esub> K \\<subseteq> carrier G\"", "lemma (in Group) sg_inc_set_mult:\"\\<lbrakk>G \\<guillemotright> L; H \\<subseteq> L; K \\<subseteq> L\\<rbrakk> \\<Longrightarrow> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<subseteq> L\"", "lemma (in Group) s_top_sub1:\"\\<lbrakk>H \\<subseteq> (carrier G); K \\<subseteq> (carrier G)\\<rbrakk> \\<Longrightarrow>  \n                               H \\<diamondop>\\<^bsub>G\\<^esub> K \\<subseteq> carrier G\"", "lemma (in Group) s_top_elem:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; a \\<in> H; b \\<in> K\\<rbrakk> \\<Longrightarrow> a \\<cdot> b \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_top_elem1:\"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H; b \\<in> K\\<rbrakk> \\<Longrightarrow>\n                    a \\<cdot> b \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K \"", "lemma (in Group) mem_s_top:\"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; u \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow>\n                 \\<exists>a \\<in> H. \\<exists>b \\<in> K. (a \\<cdot> b = u)\"", "lemma (in Group) s_top_mono:\"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; H1 \\<subseteq> H; K1 \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow>  H1 \\<diamondop>\\<^bsub>G\\<^esub> K1 \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_top_unit_closed:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow>  \\<one> \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_top_commute:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K;\n       u \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K;  v \\<in>  H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow>  u \\<cdot> v \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_top_commute1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K;\n                                        u \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow> (\\<rho> u) \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_top_commute_sg:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow>\n                                     G \\<guillemotright> (H \\<diamondop>\\<^bsub>G\\<^esub> K)\"", "lemma (in Group) s_top_assoc:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; G \\<guillemotright> L\\<rbrakk> \\<Longrightarrow>\n                                 (H \\<diamondop>\\<^bsub>G\\<^esub> K) \\<diamondop>\\<^bsub>G\\<^esub> L =  H \\<diamondop>\\<^bsub>G\\<^esub> (K \\<diamondop>\\<^bsub>G\\<^esub> L)\"", "lemma (in Group) s_topTr6:\"\\<lbrakk>G \\<guillemotright> H1; G \\<guillemotright> H2; G \\<guillemotright> K; H1 \\<subseteq> K\\<rbrakk> \\<Longrightarrow>\n                               (H1 \\<diamondop>\\<^bsub>G\\<^esub> H2) \\<inter> K = H1 \\<diamondop>\\<^bsub>G\\<^esub> (H2 \\<inter> K)\"", "lemma (in Group) s_topTr6_1:\"\\<lbrakk>G \\<guillemotright> H1; G \\<guillemotright> H2; G \\<guillemotright> K; H2 \\<subseteq> K\\<rbrakk> \\<Longrightarrow>\n                              (H1 \\<diamondop>\\<^bsub>G\\<^esub> H2) \\<inter> K = (H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> H2\"", "lemma (in Group) l_sub_smult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> H \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) r_sub_smult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> K \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\"", "lemma (in Group) s_topTr8:\"G \\<guillemotright> H \\<Longrightarrow> H = H \\<diamondop>\\<^bsub>G\\<^esub> H\"", "lemma (in Group) Gp_sg_subset:\"\\<lbrakk>G \\<guillemotright> H; Gp G H \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> K \\<subseteq> H\"", "lemma (in Group) inter_Gp_nsg:\"\\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk> \\<Longrightarrow> (\\<natural>H) \\<triangleright> (H \\<inter> N)\"", "lemma (in Group) ZassenhausTr0:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Gp G (H \\<inter> K) \\<triangleright> (H \\<inter> K1)\"", "lemma (in Group) lcs_sub_s_mult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; a \\<in> H\\<rbrakk> \\<Longrightarrow> a \\<diamondsuit> N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N\"", "lemma (in Group) rcs_sub_smult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; a \\<in> H\\<rbrakk> \\<Longrightarrow> N \\<bullet> a \\<subseteq> N \\<diamondop>\\<^bsub>G\\<^esub> H\"", "lemma (in Group) smult_commute_sg_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> H \\<diamondop>\\<^bsub>G\\<^esub> N = N \\<diamondop>\\<^bsub>G\\<^esub> H\"", "lemma (in Group) smult_sg_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N\"", "lemma (in Group) smult_nsg_sg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> N \\<diamondop>\\<^bsub>G\\<^esub> H\"", "lemma (in Group) Gp_smult_sg_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Group (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))\"", "lemma (in Group) N_sg_HN:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<guillemotright> N\"", "lemma (in Group) K_absorb_HK:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; H \\<subseteq> K\\<rbrakk> \\<Longrightarrow>  H \\<diamondop>\\<^bsub>G\\<^esub> K = K\"", "lemma (in Group) nsg_Gp_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N; N \\<subseteq> H\\<rbrakk> \\<Longrightarrow> Gp G H \\<triangleright> N\"", "lemma (in Group) Gp_smult_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<triangleright> N\"", "lemma (in Group) Gp_smult_nsg1:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Gp G (N \\<diamondop>\\<^bsub>G\\<^esub> H) \\<triangleright> N\"", "lemma (in Group) ZassenhausTr2_3:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; Gp G H \\<triangleright> H1\\<rbrakk> \\<Longrightarrow> H1 \\<subseteq> H\"", "lemma (in Group) ZassenhausTr2_4:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; Gp G H \\<triangleright> H1; h \\<in> H; \n               h1 \\<in> H1\\<rbrakk> \\<Longrightarrow> h \\<cdot> h1 \\<cdot> (\\<rho> h) \\<in> H1\"", "lemma (in Group) ZassenhausTr1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) = (H \\<inter> K1) \\<diamondop>\\<^bsub>G\\<^esub> H1\"", "lemma (in Group) ZassenhausTr1_1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))\"", "lemma (in Group) ZassenhausTr2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; Gp G H \\<triangleright> H1\\<rbrakk> \\<Longrightarrow>\n                                  H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K) = (H \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> H1\"", "lemma (in Group) ZassenhausTr2_1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; Gp G H \\<triangleright> H1\\<rbrakk>\n  \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\"", "lemma (in Group) ZassenhausTr2_2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) \\<subseteq>  H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\"", "lemma (in Group) ZassenhausTr2_5:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n      Gp G K \\<triangleright> K1; a\\<in> H1; b \\<in> H \\<inter> K1; c \\<in> H1\\<rbrakk> \\<Longrightarrow>\n                      a \\<cdot> b \\<cdot> c \\<in> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)\"", "lemma (in Group) ZassenhausTr2_6:\"\\<lbrakk>u \\<in> carrier G; v \\<in> carrier G;  \n       x \\<in> carrier G; y \\<in> carrier G\\<rbrakk> \\<Longrightarrow> \n       (u \\<cdot> v) \\<cdot> (x \\<cdot> y) \\<cdot> (\\<rho> (u \\<cdot> v)) = \n                          u \\<cdot> v \\<cdot> x \\<cdot> (\\<rho> v) \\<cdot> (v \\<cdot> y \\<cdot> (\\<rho> v)) \\<cdot> (\\<rho> u)\"", "lemma (in Group) ZassenhausTr2_7:\"\\<lbrakk>a \\<in> carrier G; x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> a \\<cdot> ( x \\<cdot> y) \\<cdot> (\\<rho> a) = a \\<cdot> x \\<cdot> (\\<rho> a) \\<cdot> (a \\<cdot> y \\<cdot> (\\<rho> a))\"", "lemma (in Group) ZassenhausTr3:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n              Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>  Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)) \\<triangleright> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))\"", "lemma (in Group) ZassenhausTr3_2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n              Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\"", "lemma (in Group) ZassenhausTr3_3:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) = (K1 \\<inter> H) \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1)\"", "lemma (in Group) ZassenhausTr3_4:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1; g \\<in> H \\<inter> K; h \\<in> H \\<inter> K1\\<rbrakk> \\<Longrightarrow> g \\<cdot> h \\<cdot> (\\<rho> g) \\<in> H \\<inter> K1\"", "lemma (in Group) ZassenhausTr3_5:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (Gp G (H \\<inter> K)) \\<triangleright> (H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)\"", "lemma (in Group) ZassenhausTr4:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n     Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)) \\<diamondop>\\<^bsub>G\\<^esub> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)) = H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\"", "lemma (in Group) ZassenhausTr4_0: \"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n     Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>  H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K) = (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\"", "lemma (in Group) ZassenhausTr4_1:\"\\<lbrakk>G \\<guillemotright> H; (Gp G H) \\<triangleright> H1; (Gp G H) \\<guillemotright> (H \\<inter> K)\\<rbrakk>\n                           \\<Longrightarrow> (Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K))) \\<triangleright> H1\"", "lemma gHom: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F; \n           y \\<in> carrier F\\<rbrakk>  \\<Longrightarrow> f (x \\<cdot>\\<^bsub>F\\<^esub> y) = (f x) \\<cdot>\\<^bsub>G\\<^esub> (f y)\"", "lemma gHom_mem:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n                             (f x) \\<in> carrier G\"", "lemma gHom_func:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n                            f \\<in> carrier F \\<rightarrow> carrier G\"", "lemma gHomcomp:\"\\<lbrakk>Group F; Group G; Group H; f \\<in> gHom F G; g \\<in> gHom G H\\<rbrakk> \n    \\<Longrightarrow> (g \\<circ>\\<^bsub>F\\<^esub> f) \\<in> gHom F H\"", "lemma gHom_comp_gsurjec:\"\\<lbrakk>Group F; Group G; Group H; gsurj\\<^bsub>F,G\\<^esub> f; \n  gsurj\\<^bsub>G,H\\<^esub> g\\<rbrakk>  \\<Longrightarrow> gsurj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)\"", "lemma gHom_comp_ginjec:\"\\<lbrakk>Group F; Group G; Group H; ginj\\<^bsub>F,G\\<^esub> f; ginj\\<^bsub>G,H\\<^esub> g\\<rbrakk> \\<Longrightarrow> \n                          ginj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)\"", "lemma ghom_unit_unit:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n                                                   f (\\<one>\\<^bsub>F\\<^esub>) = \\<one>\\<^bsub>G\\<^esub>\"", "lemma ghom_inv_inv:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n   f (\\<rho>\\<^bsub>F\\<^esub> x) = \\<rho>\\<^bsub>G\\<^esub> (f x)\"", "lemma ghomTr3:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F;\n       y \\<in> carrier F; f (x \\<cdot>\\<^bsub>F\\<^esub> (\\<rho>\\<^bsub>F\\<^esub> y)) = \\<one>\\<^bsub>G\\<^esub> \\<rbrakk> \\<Longrightarrow> f x = f y\"", "lemma iim_nonempty:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow>\n                       (iim F G f K) \\<noteq> {}\"", "lemma ghomTr4:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> \n                  F \\<guillemotright> (iim F G f K)\"", "lemma (in Group) IdTr0: \"idmap (carrier G) \\<in> gHom G G\"", "lemma IdTr1:\"\\<lbrakk>Group F; x \\<in> carrier F\\<rbrakk> \\<Longrightarrow> (I\\<^bsub>F\\<^esub>) x = x\"", "lemma IdTr2:\"Group F \\<Longrightarrow> gbij\\<^bsub>F,F\\<^esub> (I\\<^bsub>F\\<^esub>)\"", "lemma Id_l_unit:\"\\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f = f\"", "lemma gkernTr1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>                    x \\<in> carrier F\"", "lemma gkernTr1_1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<subseteq> carrier F\"", "lemma gkernTr2:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> gker\\<^bsub>F,G\\<^esub> f; y \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n   \\<Longrightarrow> (x \\<cdot>\\<^bsub>F\\<^esub> y) \\<in> gker\\<^bsub>F,G\\<^esub> f\"", "lemma gkernTr3:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>\n                    (\\<rho>\\<^bsub>F\\<^esub> x) \\<in> gker\\<^bsub>F,G\\<^esub> f\"", "lemma gkernTr6:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> (\\<one>\\<^bsub>F\\<^esub>) \\<in> gker\\<^bsub>F,G\\<^esub> f\"", "lemma gkernTr7:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f\"", "lemma gker_normal:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f\"", "lemma Group_coim:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> Group ( F / gker\\<^bsub>F,G\\<^esub> f)\"", "lemma gkern1:\"\\<lbrakk>Group F; Ugp E; f \\<in> gHom F E\\<rbrakk> \\<Longrightarrow> gker\\<^bsub>F,E\\<^esub> f = carrier F\"", "lemma gkern2:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; ginj\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>\n               gker\\<^bsub>F,G\\<^esub> f = {\\<one>\\<^bsub>F\\<^esub>}\"", "lemma gkernTr9:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F; b \\<in> carrier F\\<rbrakk>\n             \\<Longrightarrow>  ((gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a = (gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> b) = (f a = f b)\"", "lemma gkernTr11:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; a \\<in> carrier F\\<rbrakk> \\<Longrightarrow> \n                  (iim F G f {f a}) = (gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a\"", "lemma gbij_comp_bij:\"\\<lbrakk>Group F; Group G; Group H; gbij\\<^bsub>F,G\\<^esub> f; gbij\\<^bsub>G,H\\<^esub> g\\<rbrakk>\n                   \\<Longrightarrow> gbij\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)\"", "lemma gbij_automorph:\"\\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; gbij\\<^bsub>G,G\\<^esub> g\\<rbrakk>  \\<Longrightarrow> \n                            gbij\\<^bsub>G,G\\<^esub> (g \\<circ>\\<^bsub>G\\<^esub> f)\"", "lemma l_unit_gHom:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> (I\\<^bsub>G\\<^esub>) \\<circ>\\<^bsub>F\\<^esub> f = f\"", "lemma r_unit_gHom:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> f \\<circ>\\<^bsub>F\\<^esub> (I\\<^bsub>F\\<^esub>) = f\"", "lemma inv_gHom:\"\\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> (Ifn F G f) \\<in> gHom G F\"", "lemma inv_gbijec_gbijec:\"\\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> gbij\\<^bsub>G,F\\<^esub> (Ifn F G f)\"", "lemma l_inv_gHom:\"\\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> (Ifn F G f) \\<circ>\\<^bsub>F\\<^esub> f = (I\\<^bsub>F\\<^esub>)\"", "lemma img_mult_closed:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; u \\<in> f `(carrier F);\nv \\<in> f `(carrier F)\\<rbrakk> \\<Longrightarrow> u \\<cdot>\\<^bsub>G\\<^esub> v \\<in> f `(carrier F)\"", "lemma img_unit_closed:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n                                            \\<one>\\<^bsub>G\\<^esub> \\<in> f `(carrier F)\"", "lemma imgTr7:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; u \\<in> f `(carrier F)\\<rbrakk>\n  \\<Longrightarrow> \\<rho>\\<^bsub>G\\<^esub> u  \\<in> f `(carrier F)\"", "lemma imgTr8:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H; u \\<in> f ` H; \n                v \\<in> f` H \\<rbrakk> \\<Longrightarrow> u \\<cdot>\\<^bsub>G\\<^esub> v \\<in> f ` H\"", "lemma imgTr9:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H; u \\<in> f ` H\\<rbrakk> \\<Longrightarrow> \n                    \\<rho>\\<^bsub>G\\<^esub> u \\<in> f ` H\"", "lemma imgTr10:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> \\<one>\\<^bsub>G\\<^esub> \\<in> f ` H\"", "lemma imgTr11:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> (f ` H)\"", "lemma sg_gimg:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk>  \\<Longrightarrow> G \\<guillemotright> f`(carrier F)\"", "lemma Group_Img:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> Group (Img\\<^bsub>F,G\\<^esub> f)\"", "lemma Img_carrier:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> \n                         carrier (Img\\<^bsub>F,G\\<^esub> f) = f ` (carrier F)\"", "lemma hom_to_Img:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\"", "lemma gker_hom_to_img:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n                               gker\\<^bsub>F,(Img\\<^bsub>F,G\\<^esub> f)\\<^esub> f = gker\\<^bsub>F,G\\<^esub> f\"", "lemma Pj_im_subg:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> K; K \\<subseteq> H\\<rbrakk> \\<Longrightarrow> \n                         Pj G K ` H = carrier ((Gp G H) / K)\"", "lemma (in Group) subg_Qsubg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> K; K \\<subseteq> H\\<rbrakk> \\<Longrightarrow> \n                            (G / K) \\<guillemotright>  carrier ((Gp G H) / K)\"", "lemma inducedhomTr:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; \n  S \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f); s1 \\<in> S; s2 \\<in> S \\<rbrakk> \\<Longrightarrow> f s1 = f s2\"", "lemma induced_ghom_someTr:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; \nX \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk> \\<Longrightarrow> f (SOME xa. xa \\<in> X) \\<in> f `(carrier F)\"", "lemma induced_ghom_someTr1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n         f (SOME xa. xa \\<in> (gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a) = f a\"", "lemma inducedHOMTr0:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n     (f\\<dieresis>\\<^bsub>F,G\\<^esub>) ((gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a) = f a\"", "lemma inducedHOMTr0_1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n                        (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in>  set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow> carrier G\"", "lemma inducedHOMTr0_2:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n    (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow> f ` (carrier F)\"", "lemma inducedHom:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> \n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in> gHom (F/(gker\\<^bsub>F,G\\<^esub> f)) G\"", "lemma induced_ghom_ginjec: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> \n            ginj\\<^bsub>(F/(gker\\<^bsub>F,G\\<^esub> f)),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\"", "lemma inducedhomgsurjec:\"\\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>\n                                gsurj\\<^bsub>(F/(gker\\<^bsub>F,G\\<^esub> f)),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\"", "lemma homomtr: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> \n                  (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in> gHom (F / (gker\\<^bsub>F,G\\<^esub> f)) (Img\\<^bsub>F,G\\<^esub> f)\"", "lemma homom2img: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> \n   (f\\<dieresis>\\<^bsub>F,(Img\\<^bsub>F,G\\<^esub> f)\\<^esub>) \\<in> gHom (F / (gker\\<^bsub>F,G\\<^esub> f)) (Img\\<^bsub>F,G\\<^esub> f)\"", "lemma homom2img1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; X \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,(Img\\<^bsub>F,G\\<^esub> f)\\<^esub>) X = (f\\<dieresis>\\<^bsub>F,G\\<^esub>) X\"", "lemma iotahomTr0:\"\\<lbrakk>Group G; G \\<guillemotright> H; h \\<in> H \\<rbrakk> \\<Longrightarrow> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>) h = h\"", "lemma iotahom:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> \n                \\<iota>\\<^bsub>(Gp G H)\\<^esub> \\<in> gHom (Gp G H) (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))\"", "lemma iotaTr0: \"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> \n               ginj\\<^bsub>(Gp G H),(Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>)\"", "theorem homomthm1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n     gbij\\<^bsub>(F/ (gkernel F G f)), (Gimage F G f)\\<^esub> (f\\<dieresis>\\<^bsub>F, (Gimage F G f)\\<^esub>)\"", "lemma isomTr0 [simp]:\"Group F \\<Longrightarrow> F \\<cong> F\"", "lemma isomTr1:\"\\<lbrakk>Group F; Group G; F \\<cong>  G \\<rbrakk> \\<Longrightarrow> G \\<cong> F\"", "lemma isomTr2:\"\\<lbrakk>Group F; Group G; Group H; F \\<cong> G; G \\<cong> H \\<rbrakk> \\<Longrightarrow> F \\<cong> H\"", "lemma gisom1: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n     (F/ (gker\\<^bsub>F,G\\<^esub> f)) \\<cong> (Img\\<^bsub>F,G\\<^esub> f)\"", "lemma homomth2Tr0: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow>   \n                           F \\<triangleright> (iim F G f N)\"", "lemma kern_comp_gHom:\"\\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow>\n                  gker\\<^bsub>F, (G/N)\\<^esub> ((Pj G N) \\<circ>\\<^bsub>F\\<^esub> f) = iim F G f N\"", "lemma QgrpUnit_1:\"\\<lbrakk>Group G; Ugp E; G \\<triangleright> H; (G / H) \\<cong> E \\<rbrakk> \\<Longrightarrow> carrier G = H\"", "lemma QgrpUnit_2:\"\\<lbrakk>Group G; Ugp E; G \\<triangleright> H; carrier G = H\\<rbrakk> \\<Longrightarrow> (G/H) \\<cong> E\"", "lemma QgrpUnit_3:\"\\<lbrakk>Group G; Ugp E; G \\<guillemotright> H; G \\<guillemotright> H1; (Gp G H) \\<triangleright> H1;\n                    ((Gp G H) / H1) \\<cong> E \\<rbrakk> \\<Longrightarrow> H = H1\"", "lemma QgrpUnit_4:\"\\<lbrakk>Group G; Ugp E; G \\<guillemotright> H; G \\<guillemotright> H1; (Gp G H) \\<triangleright> H1;\n\\<not> ((Gp G H) / H1) \\<cong> E \\<rbrakk> \\<Longrightarrow> H \\<noteq> H1\"", "lemma (in Group) QmpTr0:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N ; a \\<in> carrier G\\<rbrakk> \\<Longrightarrow>\n                                          Qmp G H N (H \\<bullet> a) = (N \\<bullet> a)\"", "lemma (in Group) QmpTr1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N; a \\<in> carrier G; b \\<in> carrier G; \n                      H \\<bullet> a = H \\<bullet> b\\<rbrakk> \\<Longrightarrow> N \\<bullet> a = N \\<bullet> b\"", "lemma (in Group) QmpTr2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N ; X \\<in> carrier (G/H)\\<rbrakk>\n                        \\<Longrightarrow> (Qmp G H N) X \\<in> carrier (G/N)\"", "lemma (in Group) QmpTr2_1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow> \n                           Qmp G H N \\<in> carrier (G/H) \\<rightarrow> carrier (G/N)\"", "lemma (in Group) QmpTr3:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N; X \\<in> carrier (G/H); \n       Y \\<in> carrier (G/H)\\<rbrakk> \\<Longrightarrow> \n     (Qmp G H N) (c_top G H X Y) = c_top G N ((Qmp G H N) X) ((Qmp G H N) Y)\"", "lemma (in Group) Gp_s_mult_nsg:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N; a \\<in> N \\<rbrakk> \\<Longrightarrow>\n                                 H \\<bullet>\\<^bsub>(Gp G N)\\<^esub> a =  H \\<bullet> a\"", "lemma (in Group) QmpTr5:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N; X \\<in> carrier (G/H); \n      Y \\<in> carrier (G/H) \\<rbrakk> \\<Longrightarrow> (Qmp G H N) ( X \\<cdot>\\<^bsub>(G / H)\\<^esub> Y) =\n                              ((Qmp G H N) X) \\<cdot>\\<^bsub>(G / N)\\<^esub> ((Qmp G H N) Y)\"", "lemma (in Group) QmpTr:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow>\n                            (Qm\\<^bsub>G H,N\\<^esub>) \\<in> gHom (G / H) (G / N)\"", "lemma (in Group) Qmpgsurjec:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow> \n                                      gsurj\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)\"", "lemma (in Group) gkerQmp:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow>\n               gker\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>) = carrier ((Gp G N)/ H)\"", "theorem (in Group) homom2:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N\\<rbrakk> \\<Longrightarrow>\n          gbij\\<^bsub>((G/H)/(carrier ((Gp G N)/H))),(G/N)\\<^esub> ((Qm\\<^bsub>G H,N\\<^esub>)\\<dieresis>\\<^bsub>(G/H),(G/N)\\<^esub>)\"", "theorem (in Group) isom2:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N\\<rbrakk> \\<Longrightarrow>\n               ((G/H)/(carrier ((Gp G N)/H))) \\<cong>  (G/N)\"", "theorem homom3:\"\\<lbrakk> Group F; Group G; G \\<triangleright> N; gsurj\\<^bsub>F,G\\<^esub> f; \n         N1 = (iim F G f) N \\<rbrakk> \\<Longrightarrow> (F / N1) \\<cong> (G / N)\"", "lemma (in Group) homom3Tr1:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> H \\<inter> N =  \ngker\\<^bsub>(Gp G H),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))/N)\\<^esub> \n               ((Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>))\"", "lemma automgroupTr1:\"\\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; gbij\\<^bsub>G,G\\<^esub> g; gbij\\<^bsub>G,G\\<^esub> h\\<rbrakk> \\<Longrightarrow>\n                        (h \\<circ>\\<^bsub>G\\<^esub> g) \\<circ>\\<^bsub>G\\<^esub> f =  h \\<circ>\\<^bsub>G\\<^esub> (g \\<circ>\\<^bsub>G\\<^esub> f)\"", "lemma automgroup:\"Group G  \\<Longrightarrow> Group (automg G)\"", "lemma (in Group) gcsrp_func:\"G \\<guillemotright> H \\<Longrightarrow> gcsrp_map G H \\<in> set_rcs G H \\<rightarrow> UNIV\"", "lemma (in Group) gcsrp_func1:\"G \\<guillemotright> H \\<Longrightarrow> \n       gcsrp_map G H \\<in> set_rcs G H \\<rightarrow> (gcsrp_map G H) ` (set_rcs G H)\"", "lemma (in Group) gcsrp_map_bij:\"G \\<guillemotright> H \\<Longrightarrow>\n         bij_to (gcsrp_map G H) (set_rcs G H) ((gcsrp_map G H) `(set_rcs G H))\"", "lemma (in Group) image_gcsrp:\"G \\<guillemotright> H \\<Longrightarrow> \n                   gcsrp G H ((gcsrp_map G H) `(set_rcs G H))\"", "lemma (in Group) gcsrp_exists:\"G \\<guillemotright> H \\<Longrightarrow> \\<exists>S. gcsrp G H S\"", "lemma (in Group) gcsrp_top_closed:\"\\<lbrakk>Group G; G \\<triangleright> N;\n  a \\<in> ((gcsrp_map G N) `(set_rcs G N)); b \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk>\n \\<Longrightarrow> gcsrp_top G N a b \\<in> (gcsrp_map G N) `(set_rcs G N)\"", "lemma (in Group) gcsrp_tassoc:\"\\<lbrakk>Group G; G \\<triangleright> N;\n       a \\<in> ((gcsrp_map G N) `(set_rcs G N)); \n        b \\<in> ((gcsrp_map G N) `(set_rcs G N));\n         c \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk> \\<Longrightarrow>\n      (gcsrp_top G N (gcsrp_top G N a b) c) =\n               (gcsrp_top G N a (gcsrp_top G N b c))\"", "lemma (in Group) gcsrp_l_one:\"\\<lbrakk>Group G; G \\<triangleright> N;\n       a \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk> \\<Longrightarrow>\n             (gcsrp_top G N (gcsrp_one G N) a) = a\"", "lemma (in Group) gcsrp_l_i:\"\\<lbrakk>G \\<triangleright> N; a \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk> \\<Longrightarrow>\n       gcsrp_top G N (gcsrp_iop G N a) a = gcsrp_one G N\"", "lemma (in Group) gcsrp_i_closed:\"\\<lbrakk>G \\<triangleright> N; a \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk>\n      \\<Longrightarrow> gcsrp_iop G N a \\<in> ((gcsrp_map G N) `(set_rcs G N))\"", "lemma (in Group) Group_Gcsrp:\"G \\<triangleright> N \\<Longrightarrow> Group (Gcsrp G N)\"", "lemma (in Group) gcsrp_map_gbijec:\"G \\<triangleright> N \\<Longrightarrow> \n                  gbij\\<^bsub>(G/N), (Gcsrp G N)\\<^esub> (gcsrp_map G N)\"", "lemma (in Group) Qg_equiv_Gcsrp:\"G \\<triangleright> N \\<Longrightarrow> (G / N) \\<cong> Gcsrp G N\"", "lemma (in Group) homom4Tr1:\"\\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow>  Group ((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\"", "lemma homom3Tr2:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow>  \n gsurj\\<^bsub>(Gp G H),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))/N)\\<^esub> \n                      ((Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>))\"", "theorem homom4:\"\\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow>gbij\\<^bsub>((Gp G H)/(H \\<inter> N)),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\\<^esub> (((Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>))\\<dieresis>\\<^bsub>(Gp G H),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\\<^esub>)\"", "lemma (in Group) homom4_2:\"\\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> Group ((Gp G H) / (H \\<inter> N))\"", "lemma isom4:\"\\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow>\n                 ((Gp G H)/(H \\<inter> N)) \\<cong>  ((Gp G (N \\<diamondop>\\<^bsub>G\\<^esub> H)) / N)\"", "lemma ZassenhausTr5:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n      Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>\n   ((Gp G (H \\<inter> K))/((H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))) \\<cong> \n                          ((Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)))/(H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)))\"", "lemma ZassenhausTr5_1:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>   ((Gp G (K \\<inter> H))/((K1 \\<inter> H) \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1))) \\<cong> \n                          ((Gp G (K1 \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H)))/(K1 \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1)))\"", "lemma ZassenhausTr5_2: \"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>\n      ((Gp G (H \\<inter> K))/((H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))) = \n                       ((Gp G (K \\<inter> H))/((K1 \\<inter> H) \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1)))\"", "lemma ZassenhausTr6_1:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Group  (Gp G (H \\<inter> K) / (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\"", "lemma ZassenhausTr6_2:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Group (Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K) / (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\"", "lemma ZassenhausTr6_3:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Group (Gp G (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H) / (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\"", "theorem Zassenhaus:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K) / (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong> \n                              (Gp G (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H) / (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\"", "lemma (in Group) d_gchainTr0:\"\\<lbrakk>0 < n; d_gchain G n f; k \\<le> (n - 1)\\<rbrakk>\n                        \\<Longrightarrow> f (Suc k) \\<subseteq> f k\"", "lemma (in Group) d_gchain_mem_sg:\"d_gchain G n f \\<Longrightarrow> \\<forall>i\\<le> n. G \\<guillemotright> (f i)\"", "lemma (in Group) d_gchain_pre:\"d_gchain G (Suc n) f \\<Longrightarrow> d_gchain G n f\"", "lemma (in Group) d_gchainTr1:\"0 < n \\<longrightarrow> (\\<forall>f. d_gchain G n f \\<longrightarrow> \n                     (\\<forall>l \\<le> n. \\<forall>j \\<le> n. l < j \\<longrightarrow> f j \\<subseteq> f l))\"", "lemma (in Group) d_gchainTr2:\"\\<lbrakk>0 < n; d_gchain G n f; l \\<le> n; j \\<le> n; l \\<le> j \\<rbrakk>\n                               \\<Longrightarrow> f j \\<subseteq> f l\"", "lemma (in Group) im_d_gchainTr1:\"\\<lbrakk>d_gchain G n f;\n       f l \\<in> (f ` {i. i \\<le> n}) - {f 0}\\<rbrakk> \\<Longrightarrow> \n    f (LEAST j. f j \\<in> (f ` {i. i \\<le> n}) - {f 0}) \\<in> (f ` {i. i \\<le> n} - {f 0})\"", "lemma (in Group) im_d_gchainTr1_0:\"\\<lbrakk>d_gchain G n f; \n                 f l \\<in> (f ` {i. i \\<le> n}) - {f 0}\\<rbrakk>  \\<Longrightarrow> \n                 0 < (LEAST j. f j \\<in> (f ` {i. i \\<le> n}) - {f 0})\"", "lemma (in Group) im_d_gchainTr1_1:\n      \"\\<lbrakk>d_gchain G n f; \\<exists> i. f i \\<in> (f ` {i. i \\<le> n}) - {f 0}\\<rbrakk>  \\<Longrightarrow>\n  f (LEAST j. f j \\<in> ((f ` {i. i \\<le> n}) - {f 0})) \\<in> ((f` {i. i \\<le> n}) - {f 0})\"", "lemma (in Group) im_d_gchainsTr1_2:\"\n      \\<lbrakk>d_gchain G n f; i \\<le> n; f i \\<in> f `{i. i \\<le> n} - {f 0}\\<rbrakk>  \\<Longrightarrow>\n          (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<le> i\"", "lemma (in Group) im_d_gchainsTr1_3:\"\\<lbrakk>d_gchain G n f; \\<exists>i \\<le> n. \n                 f i \\<in> f` {i. i \\<le> n} - {f 0};\n                 k < (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0}))\\<rbrakk> \\<Longrightarrow> f k = f 0\"", "lemma (in Group) im_gdchainsTr1_4:\"\\<lbrakk>d_gchain G n f;\n       \\<exists>v\\<in>f `{i. i \\<le> n}. v \\<notin> {f 0}; i < (LEAST j. f j \\<in> (f `{i. i \\<le> n}) \\<and> \n       f j \\<noteq> f 0) \\<rbrakk> \\<Longrightarrow> f i = f 0\"", "lemma (in Group) im_d_gchainsTr1_5:\"\\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; \nf i \\<in> (f ` {i. i \\<le> n} - {f 0}); (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) = j\\<rbrakk> \n\\<Longrightarrow>         f `{i. i \\<le> (j - (Suc 0))} = {f 0}\"", "lemma (in Group) im_d_gchains1:\"\\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; \n                 f i \\<in> (f ` {i. i \\<le> n} - {f 0}); \n                 (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) = j \\<rbrakk> \\<Longrightarrow> \n                         f `{i. i \\<le> n} = {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}\"", "lemma (in Group) im_d_gchains1_1:\"\\<lbrakk>d_gchain G n f; f n \\<noteq> f 0\\<rbrakk>  \\<Longrightarrow> \n      f `{i. i \\<le> n} = {f 0} \\<union> \n         {f i |i. (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<le> i \\<and> i \\<le> n}\"", "lemma (in Group) d_gchains_leastTr:\"\\<lbrakk>d_gchain G n f; f n \\<noteq> f 0\\<rbrakk>  \\<Longrightarrow>  \n               (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<in> {i. i \\<le> n} \\<and> \n               f  (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<noteq> f 0\"", "lemma (in Group) im_d_gchainTr2:\"\\<lbrakk>d_gchain G n f; j \\<le> n; f j \\<noteq> f 0\\<rbrakk> \\<Longrightarrow>\n                                 \\<forall>i \\<le> n. f 0 = f i \\<longrightarrow> \\<not> j \\<le> i\"", "lemma (in Group) D_gchain_pre:\"\\<lbrakk>D_gchain G (Suc n) f\\<rbrakk> \\<Longrightarrow> D_gchain G n f\"", "lemma (in Group) D_gchain0:\"\\<lbrakk>D_gchain G n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk> \\<Longrightarrow>\n                             f j \\<subset> f i\"", "lemma (in Group) D_gchain1:\"D_gchain G n f \\<Longrightarrow> inj_on f {i. i \\<le> n}\"", "lemma (in Group) card_im_D_gchain:\"\\<lbrakk>0 < n; D_gchain G n f\\<rbrakk> \n                                   \\<Longrightarrow> card (f `{i. i \\<le> n}) = Suc n\"", "lemma (in Group) w_cmpser_gr:\"\\<lbrakk>0 < r; w_cmpser G r f; i \\<le> r\\<rbrakk>\n                             \\<Longrightarrow> G \\<guillemotright>  (f i)\"", "lemma (in Group) w_cmpser_ns:\"\\<lbrakk>0 < r; w_cmpser G r f; i \\<le> (r - 1)\\<rbrakk> \\<Longrightarrow>\n                                 (Gp G (f i)) \\<triangleright> (f (Suc i))\"", "lemma (in Group) w_cmpser_pre:\"w_cmpser G (Suc n) f \\<Longrightarrow> w_cmpser G n f\"", "lemma (in Group) W_cmpser_pre:\"W_cmpser G (Suc n) f \\<Longrightarrow> W_cmpser G n f\"", "lemma (in Group) td_gchain_n:\"\\<lbrakk>td_gchain G n f; carrier G \\<noteq> {\\<one>}\\<rbrakk> \\<Longrightarrow> 0 < n\"", "lemma (in Group) D_gchain_is_d_gchain:\"D_gchain G n f \\<Longrightarrow> d_gchain G n f\"", "lemma (in Group) joint_d_gchains:\"\\<lbrakk>d_gchain G n f; d_gchain G m g; \n  g 0 \\<subseteq> f n \\<rbrakk> \\<Longrightarrow>  d_gchain G (Suc (n + m)) (jointfun n f m g)\"", "lemma (in Group) joint_D_gchains:\"\\<lbrakk>D_gchain G n f; D_gchain G m g; \n       g 0 \\<subset> f n \\<rbrakk> \\<Longrightarrow>  D_gchain G (Suc (n + m)) (jointfun n f m g)\"", "lemma (in Group) w_cmpser_is_d_gchain:\"w_cmpser G n f \\<Longrightarrow> d_gchain G n f\"", "lemma (in Group) joint_w_cmpser:\"\\<lbrakk>w_cmpser G n f; w_cmpser G m g; \n Gp G (f n) \\<triangleright> (g 0)\\<rbrakk> \\<Longrightarrow> w_cmpser G (Suc (n + m)) (jointfun n f m g)\"", "lemma (in Group) W_cmpser_is_D_gchain:\"W_cmpser G n f \\<Longrightarrow> D_gchain G n f\"", "lemma (in Group) W_cmpser_is_w_cmpser:\"W_cmpser G n f \\<Longrightarrow> w_cmpser G n f\"", "lemma (in Group) tw_cmpser_is_w_cmpser:\"tw_cmpser G n f \\<Longrightarrow> w_cmpser G n f\"", "lemma (in Group) tW_cmpser_is_W_cmpser:\"tW_cmpser G n f \\<Longrightarrow> W_cmpser G n f\"", "lemma (in Group) joint_W_cmpser:\"\\<lbrakk>W_cmpser G n f; W_cmpser G m g; \n      (Gp G (f n)) \\<triangleright> (g 0); g 0 \\<subset> f n\\<rbrakk> \\<Longrightarrow> \n      W_cmpser G (Suc (n + m)) (jointfun n f m g)\"", "lemma (in Group) joint_d_gchain_n0:\"\\<lbrakk>d_gchain G n f; d_gchain G 0 g;\n       g 0 \\<subseteq> f n \\<rbrakk> \\<Longrightarrow>  d_gchain G (Suc n) (jointfun n f 0 g)\"", "lemma (in Group) joint_D_gchain_n0:\"\\<lbrakk>D_gchain G n f; D_gchain G 0 g; \n       g 0 \\<subset> f n \\<rbrakk> \\<Longrightarrow>  D_gchain G (Suc n) (jointfun n f 0 g)\"", "lemma (in Group) joint_w_cmpser_n0:\"\\<lbrakk>w_cmpser G n f; w_cmpser G 0 g; \n      (Gp G (f n)) \\<triangleright> (g 0)\\<rbrakk> \\<Longrightarrow>  w_cmpser G (Suc n) (jointfun n f 0 g)\"", "lemma (in Group) joint_W_cmpser_n0:\"\\<lbrakk>W_cmpser G n f; W_cmpser G 0 g; \n      (Gp G (f n)) \\<triangleright> (g 0); g 0 \\<subset> f n \\<rbrakk> \\<Longrightarrow>  \n                       W_cmpser G (Suc n) (jointfun n f 0 g)\"", "lemma (in Group) compseriesTr0:\"\\<lbrakk>compseries G n f; i \\<le> n\\<rbrakk> \\<Longrightarrow>\n                                    G \\<guillemotright> (f i)\"", "lemma (in Group) compseriesTr1:\"compseries G n f \\<Longrightarrow> tW_cmpser G n f\"", "lemma (in Group) compseriesTr2:\"compseries G n f \\<Longrightarrow> f 0 = carrier G\"", "lemma (in Group) compseriesTr3:\"compseries G n f \\<Longrightarrow> f n = {\\<one>}\"", "lemma (in Group) compseriesTr4:\"compseries G n f \\<Longrightarrow> w_cmpser G n f\"", "lemma (in Group) im_jointfun1Tr1:\"\\<forall>l \\<le> n. G \\<guillemotright> (f l) \\<Longrightarrow>\n                               f \\<in> {i. i \\<le> n} \\<rightarrow> Collect (sg G)\"", "lemma (in Group) Nset_Suc_im:\"\\<forall>l \\<le> (Suc n). G \\<guillemotright> (f l) \\<Longrightarrow>\n                 insert (f (Suc n)) (f ` {i. i \\<le> n}) = f ` {i. i \\<le> (Suc n)}\"", "lemma LeastTr0:\"\\<lbrakk> (i::nat) < (LEAST l. P (l))\\<rbrakk> \\<Longrightarrow> \\<not> P (i)\"", "lemma (in Group) funeq_LeastTr1:\"\\<lbrakk>\\<forall>l\\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n  (l :: nat) < (LEAST k. (NfuncPair_neq_at f g k)) \\<rbrakk> \\<Longrightarrow> f l = g l\"", "lemma (in Group) funeq_LeastTr1_1:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright>  g l; \n  (l :: nat) < (LEAST k. (f k \\<noteq>  g k)) \\<rbrakk> \\<Longrightarrow> f l = g l\"", "lemma (in Group) Nfunc_LeastTr2_1:\"\\<lbrakk>i \\<le> n; \\<forall>l \\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l;\n       NfuncPair_neq_at f g i\\<rbrakk> \\<Longrightarrow> \n        NfuncPair_neq_at f g (LEAST k. (NfuncPair_neq_at f g k))\"", "lemma (in Group) Nfunc_LeastTr2_2:\"\\<lbrakk>i \\<le> n; \\<forall>l \\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l;\n        NfuncPair_neq_at f g i\\<rbrakk> \\<Longrightarrow> \n                          (LEAST k. (NfuncPair_neq_at f g k)) \\<le> i\"", "lemma (in Group) Nfunc_LeastTr2_2_1:\"\\<lbrakk>i \\<le> (n::nat); \\<forall>l \\<le> n. G \\<guillemotright> f l;\n       \\<forall>l \\<le> n. G \\<guillemotright> g l; f i \\<noteq> g i\\<rbrakk> \\<Longrightarrow> (LEAST k. (f k \\<noteq> g k)) \\<le> i\"", "lemma (in Group) Nfunc_LeastTr2_3:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      i \\<le> n; f i \\<noteq> g i\\<rbrakk>  \\<Longrightarrow>  \n      f (LEAST k. (f k \\<noteq>  g k)) \\<noteq> g (LEAST k. (f k \\<noteq>  g k))\"", "lemma  (in Group) Nfunc_LeastTr2_4:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      i \\<le> n; f i \\<noteq> g i\\<rbrakk> \\<Longrightarrow>(LEAST k. (f k \\<noteq> g k)) \\<le> n\"", "lemma (in Group) Nfunc_LeastTr2_5:\"\\<lbrakk>\\<forall>l\\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      \\<exists>i \\<le> n. (f i \\<noteq> g i)\\<rbrakk>  \\<Longrightarrow>  \n      f (LEAST k. (f k \\<noteq> g k)) \\<noteq> g ((LEAST k. f k \\<noteq> g k))\"", "lemma (in Group) Nfunc_LeastTr2_6:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l;\n       \\<exists>i \\<le> n. (f i \\<noteq> g i)\\<rbrakk> \\<Longrightarrow> (LEAST k. (f k \\<noteq> g k)) \\<le> n\"", "lemma (in Group) Nfunc_Least_sym:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n     \\<exists>i \\<le> n. (f i \\<noteq> g i)\\<rbrakk> \\<Longrightarrow> \n           (LEAST k. (f k \\<noteq> g k)) = (LEAST k. (g k \\<noteq> f k))\"", "lemma Nfunc_iNJTr:\"\\<lbrakk>inj_on g {i. i \\<le> (n::nat)}; i \\<le> n; j \\<le> n; i < j \\<rbrakk> \\<Longrightarrow> g i \\<noteq> g j\"", "lemma (in Group) Nfunc_LeastTr2_7:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      inj_on g {i. i \\<le> n}; \\<exists>i \\<le> n. (f i \\<noteq> g i); \n      f k = g (LEAST k.(f k \\<noteq> g k))\\<rbrakk> \\<Longrightarrow>(LEAST k.(f k \\<noteq> g k)) < k\"", "lemma (in Group) Nfunc_LeastTr2_8:\"\\<lbrakk>\\<forall>l \\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n     inj_on g {i. i \\<le> n}; \\<exists>i \\<le> n. f i \\<noteq> g i; f `{i. i \\<le> n} = g `{i. i \\<le> n}\\<rbrakk>\n \\<Longrightarrow> \n  \\<exists> k \\<in>(nset (Suc (LEAST i. (f i \\<noteq> g i))) n). f k = g (LEAST i. (f i \\<noteq> g i))\"", "lemma (in Group) ex_redchainTr1:\"\\<lbrakk>d_gchain G n f; \n       D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; \n       g ` {i. i \\<le> (card (f ` {i. i \\<le> n}) - Suc 0)} = f ` {i. i \\<le> n}\\<rbrakk> \\<Longrightarrow> \n       g (card (f ` {i. i \\<le> n}) - Suc 0) = f n\"", "lemma (in Group) ex_redchainTr1_1:\"\\<lbrakk>d_gchain G (n::nat) f; \n       D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; \n       g ` {i. i \\<le> (card (f ` {i. i \\<le> n}) - Suc 0)} = f ` {i. i \\<le> n}\\<rbrakk> \\<Longrightarrow>\n       g 0 = f 0\"", "lemma (in Group) ex_redchainTr2:\"d_gchain G (Suc n) f \n               \\<Longrightarrow> D_gchain G 0 (constmap {0::nat} {f (Suc n)})\"", "lemma (in Group) last_mem_excluded:\"\\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n)\\<rbrakk> \\<Longrightarrow>\n                                   f (Suc n) \\<notin> f ` {i. i \\<le> n}\"", "lemma (in Group) ex_redchainTr4:\"\\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n)\\<rbrakk> \\<Longrightarrow>\n                card (f ` {i. i \\<le> (Suc n)}) = Suc (card (f ` {i. i \\<le> n}))\"", "lemma (in Group) ex_redchainTr5:\"d_gchain G n f \\<Longrightarrow> 0 < card (f ` {i. i\\<le> n})\"", "lemma (in Group) ex_redchainTr6:\"\\<forall>f. d_gchain G n f \\<longrightarrow> \n      (\\<exists>g. D_gchain G (card (f `{i. i \\<le> n}) - 1) g \\<and> \n                  (g ` {i. i \\<le> (card (f `{i. i \\<le> n}) - 1)} = f `{i. i \\<le> n}))\"", "lemma (in Group) ex_redchain:\"d_gchain G n f \\<Longrightarrow>\n      (\\<exists>g. D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and> \n       g ` {i. i \\<le> (card (f ` {i. i \\<le> n}) - 1)} = f ` {i. i \\<le> n})\"", "lemma (in Group) const_W_cmpser:\"d_gchain G (Suc n) f \\<Longrightarrow>\n                         W_cmpser G 0 (constmap {0::nat} {f (Suc n)})\"", "lemma (in Group) ex_W_cmpserTr0m:\"\\<forall>f. w_cmpser G m f \\<longrightarrow>  \n  (\\<exists>g. (W_cmpser G (card (f `{i. i \\<le> m}) - 1) g \\<and> \n           g `{i. i \\<le> (card (f `{i. i \\<le> m}) - 1)} = f `{i. i \\<le> m}))\"", "lemma (in Group) ex_W_cmpser:\"w_cmpser G m f \\<Longrightarrow>\n       \\<exists>g. W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g  \\<and>  \n              g ` {i. i \\<le> (card (f ` {i. i \\<le> m}) - 1)} = f ` {i. i \\<le> m}\"", "lemma (in Group) ex_W_cmpserTr3m1:\"\\<lbrakk>tw_cmpser G (m::nat) f; \n       W_cmpser G ((card (f ` {i. i \\<le> m})) - 1) g; \n       g ` {i. i \\<le> ((card (f ` {i. i \\<le> m})) - 1)} = f `{i. i \\<le> m}\\<rbrakk> \\<Longrightarrow> \n      tW_cmpser G ((card (f ` {i. i \\<le> m})) - 1) g\"", "lemma (in Group) ex_W_cmpserTr3m:\"tw_cmpser G m f \\<Longrightarrow> \n           \\<exists>g. tW_cmpser G ((card (f ` {i. i \\<le> m})) - 1) g \\<and> \n               g `{ i. i \\<le> (card (f `{i. i \\<le> m}) - 1)} = f ` {i. i \\<le> m}\"", "lemma (in Group) red_chainTr0m1_1:\"tw_cmpser G m f \\<Longrightarrow> \n       (SOME g. g \\<in> {h. red_ch_cd G f m h}) \\<in> {h. red_ch_cd G f m h}\"", "lemma (in Group) red_chain_m:\"tw_cmpser G m f \\<Longrightarrow> \n      tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) (red_chain G m f) \\<and> \n      (red_chain G m f) `{i. i \\<le> (card (f `{i. i \\<le> m}) - 1)} = f ` {i. i \\<le> m}\"", "lemma Gchain_pre:\"Gchain (Suc n) g \\<Longrightarrow> Gchain n g\"", "lemma (in Group) isom_unit:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; H = {\\<one>}\\<rbrakk>  \\<Longrightarrow> \n                                    Gp G H \\<cong> Gp G K \\<longrightarrow> K = {\\<one>}\"", "lemma isom_gch_unitsTr4:\"\\<lbrakk>Group F; Group G; Ugp E; F \\<cong> G; F \\<cong> E\\<rbrakk> \\<Longrightarrow>\n                                 G \\<cong> E\"", "lemma isom_gch_cmp:\"\\<lbrakk>Gchain n g; Gchain n h; f1 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}; \n           f2 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}; isom_Gchains n (cmp f2 f1) g h\\<rbrakk> \\<Longrightarrow> \n             isom_Gchains n f1 g (cmp h f2)\"", "lemma isom_gch_transp:\"\\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk> \\<Longrightarrow> \n                 isom_Gchains n (transpos i j) f (cmp  f (transpos i j))\"", "lemma isom_gch_units_transpTr0:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n;\n i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow>\n {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} ={i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\"", "lemma isom_gch_units_transpTr1:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E; \n      i \\<noteq> j\\<rbrakk> \\<Longrightarrow> \n      insert j ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) = {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\"", "lemma isom_gch_units_transpTr2:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; i < j;\n      g i \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> n \\<and> g i \\<cong> E} = insert i ({i. i \\<le> n \\<and>  g i \\<cong> E} - {i})\"", "lemma isom_gch_units_transpTr3:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})\"", "lemma isom_gch_units_transpTr4:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})\"", "lemma isom_gch_units_transpTr5_1:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> (n::nat);\n      j \\<le> n; i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow> g i \\<cong> h j\"", "lemma isom_gch_units_transpTr5_2:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; \n      j \\<le> n; i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow> g j \\<cong> h i\"", "lemma isom_gch_units_transpTr6:\"\\<lbrakk>Gchain n g; i \\<le> n\\<rbrakk> \\<Longrightarrow> Group (g i)\"", "lemma isom_gch_units_transpTr7:\"\\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; \n      Group (h i); Group (g j); \\<not> g j \\<cong> E\\<rbrakk> \\<Longrightarrow>  \\<not> h i \\<cong> E\"", "lemma isom_gch_units_transpTr8_1:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; \n      g i \\<cong> E; \\<not> g j \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> n \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E} - { j }\"", "lemma isom_gch_units_transpTr8_2:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n;\n       \\<not> g i \\<cong> E; \\<not> g j \\<cong> E\\<rbrakk> \\<Longrightarrow> \n       {i. i \\<le> n \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j }\"", "lemma isom_gch_units_transp:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; \n      i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow>  \n       card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}\"", "lemma TR_isom_gch_units:\"\\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk> \\<Longrightarrow>\n      card {k. k \\<le> n \\<and> f k \\<cong> E} = card {k. k \\<le> n \\<and> \n      (cmp f (transpos i j)) k \\<cong> E}\"", "lemma TR_isom_gch_units_1:\"\\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>  \\<Longrightarrow>  \n      card {k. k \\<le> n \\<and> f k \\<cong> E} = card {k. k \\<le> n \\<and> f (transpos i j k) \\<cong> E}\"", "lemma isom_tgch_unitsTr0_1:\"\\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> (Suc n) \\<and> g i \\<cong> E} = insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\"", "lemma isom_tgch_unitsTr0_2:\"Ugp E  \\<Longrightarrow> finite ({i. i \\<le> (n::nat) \\<and> g i \\<cong> E})\"", "lemma isom_tgch_unitsTr0_3:\"\\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n      \\<Longrightarrow> {i. i \\<le> (Suc n) \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E}\"", "lemma isom_tgch_unitsTr0:\"\\<lbrakk>Ugp E; \n      card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}; \n      Gchain (Suc n) g \\<and> Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f; \n      f (Suc n) = Suc n\\<rbrakk> \\<Longrightarrow> \n      card {i. i \\<le> (Suc n) \\<and> g i \\<cong> E} = \n                                card {i. i \\<le> (Suc n) \\<and> h i \\<cong> E}\"", "lemma isom_gch_unitsTr1_1:\" \\<lbrakk>Ugp E; Gchain (Suc n) g \\<and>  Gchain (Suc n) h \n       \\<and> Gch_bridge (Suc n) g h f; f (Suc n) = Suc n\\<rbrakk> \\<Longrightarrow> \n           Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f\"", "lemma isom_gch_unitsTr1_2:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i\\<le>(Suc n)};\n        \\<forall>l \\<le> (Suc n). f l \\<le> (Suc n)\\<rbrakk> \\<Longrightarrow> \n        (cmp (transpos (f (Suc n)) (Suc n)) f) (Suc n) = Suc n\"", "lemma isom_gch_unitsTr1_3:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; \n     \\<forall>l \\<le> (Suc n). f l \\<le> (Suc n); inj_on f {i. i \\<le> (Suc n)}\\<rbrakk> \\<Longrightarrow> \n      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> (Suc n)}\"", "lemma isom_gch_unitsTr1_4:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i\\<le>(Suc n)};\n                   \\<forall>l \\<le> (Suc n). f l \\<le> (Suc n)\\<rbrakk> \\<Longrightarrow> \n                    inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> n}\"", "lemma isom_gch_unitsTr1_5:\"\\<lbrakk>Ugp E; Gchain (Suc n) g \\<and> Gchain (Suc n) h \\<and> \n      Gch_bridge (Suc n) g h f; f (Suc n) \\<noteq> Suc n \\<rbrakk> \\<Longrightarrow> \n      Gchain n g \\<and> Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and> \n      Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n))) \n                               (cmp (transpos (f (Suc n)) (Suc n)) f)\"", "lemma isom_gch_unitsTr1_6:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g \\<and> \n       Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f\\<rbrakk>  \\<Longrightarrow> Gchain (Suc n) g \\<and>\n          Gchain (Suc n) (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n          Gch_bridge (Suc n) g (cmp h (transpos (f (Suc n)) (Suc n)))\n           (cmp (transpos (f (Suc n)) (Suc n)) f)\"", "lemma isom_gch_unitsTr1_7_0:\"\\<lbrakk>Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> (Suc n)\\<rbrakk>\n \\<Longrightarrow> Gchain (Suc n) (cmp h (transpos k (Suc n)))\"", "lemma isom_gch_unitsTr1_7_1:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> (Suc n)\\<rbrakk>\n \\<Longrightarrow> {i. i \\<le> (Suc n) \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} - {k , Suc n} =\n                            {i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k , Suc n}\"", "lemma isom_gch_unitsTr1_7_2:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n            k \\<le> (Suc n);  h (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow> \n                          cmp h (transpos k (Suc n)) k \\<cong> E\"", "lemma isom_gch_unitsTr1_7_3:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n       k \\<le> (Suc n); h k \\<cong> E\\<rbrakk> \\<Longrightarrow> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\"", "lemma isom_gch_unitsTr1_7_4:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n;  \n      k \\<le> (Suc n); \\<not> h (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow>\n                \\<not>  cmp h (transpos k (Suc n)) k \\<cong> E\"", "lemma isom_gch_unitsTr1_7_5:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); \\<not> h k \\<cong> E\\<rbrakk> \\<Longrightarrow>\n              \\<not>  cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\"", "lemma isom_gch_unitsTr1_7_6:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n    k \\<le> (Suc n); h (Suc n) \\<cong> E; h k \\<cong> E\\<rbrakk> \\<Longrightarrow> \n    {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} = \n    insert k (insert (Suc n) ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n}))\"", "lemma isom_gch_unitsTr1_7_7:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); h (Suc n) \\<cong> E; \\<not> h k \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} = \n       insert (Suc n) ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n})\"", "lemma isom_gch_unitsTr1_7_8:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); \\<not> h (Suc n) \\<cong> E;  h k \\<cong> E\\<rbrakk> \\<Longrightarrow> \n     {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} = \n       insert k ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n})\"", "lemma isom_gch_unitsTr1_7_9:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); \\<not> h (Suc n) \\<cong> E; \\<not> h k \\<cong> E\\<rbrakk> \\<Longrightarrow>\n      {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} =\n      {i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n}\"", "lemma isom_gch_unitsTr1_7:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n    k \\<le> (Suc n)\\<rbrakk> \\<Longrightarrow> card {i. i \\<le> (Suc n) \\<and> \n    cmp h (transpos k (Suc n)) i \\<cong> E} =  card {i. i \\<le> (Suc n) \\<and> h i \\<cong> E}\"", "lemma isom_gch_unitsTr1:\"Ugp E \\<Longrightarrow> \\<forall>g. \\<forall>h. \\<forall>f. Gchain n g \\<and> \n      Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>  card {i. i \\<le> n \\<and> g i \\<cong> E} = \n           card {i. i \\<le> n \\<and> h i \\<cong> E}\"", "lemma isom_gch_units:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; Gch_bridge n g h f\\<rbrakk> \\<Longrightarrow>  \n      card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}\"", "lemma isom_gch_units_1:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; \\<exists>f. Gch_bridge n g h f\\<rbrakk>\n \\<Longrightarrow>  card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}\"", "lemma rfn_tool1:\"\\<lbrakk> 0 < (r::nat); (k::nat) = i * r + j; j < r \\<rbrakk> \n                                                  \\<Longrightarrow> (k div r) = i\"", "lemma pos_mult_pos:\"\\<lbrakk> 0 < (r::nat); 0 < s\\<rbrakk> \\<Longrightarrow> 0 < r * s\"", "lemma rfn_tool1_1:\"\\<lbrakk> 0 < (r::nat); j < r \\<rbrakk> \n                             \\<Longrightarrow> (i * r + j) div r = i\"", "lemma rfn_tool2:\"(a::nat) < s \\<Longrightarrow> a \\<le> s - Suc 0\"", "lemma rfn_tool3:\"(0::nat) \\<le> m \\<Longrightarrow> (m + n) - n = m\"", "lemma rfn_tool11:\"\\<lbrakk>0 < b; (a::nat) \\<le> b - Suc 0\\<rbrakk> \\<Longrightarrow> a < b\"", "lemma  rfn_tool12:\"\\<lbrakk>0 < (s::nat); (i::nat) mod s = s - 1 \\<rbrakk> \\<Longrightarrow>\n                     Suc (i div s) = (Suc i) div s \"", "lemma  rfn_tool12_1:\"\\<lbrakk>0 < (s::nat); (l::nat) mod s < s - 1 \\<rbrakk> \\<Longrightarrow>\n                     Suc (l mod s) = (Suc l) mod s \"", "lemma  rfn_tool12_2:\"\\<lbrakk>0 < (s::nat); (i::nat) mod s = s - Suc 0\\<rbrakk> \\<Longrightarrow>\n                                               (Suc i) mod s = 0\"", "lemma rfn_tool13:\"\\<lbrakk> (0::nat) < r; a = b \\<rbrakk> \\<Longrightarrow> a mod r = b mod r\"", "lemma rfn_tool13_1:\"\\<lbrakk> (0::nat) < r; a = b \\<rbrakk> \\<Longrightarrow> a div r = b div r\"", "lemma div_Tr1:\"\\<lbrakk> (0::nat) < r; 0 < s; l \\<le> s * r\\<rbrakk> \\<Longrightarrow> l div s \\<le> r\"", "lemma div_Tr2:\"\\<lbrakk>(0::nat) < r; 0 < s; l < s * r\\<rbrakk> \\<Longrightarrow> l div s \\<le> r - Suc 0\"", "lemma div_Tr3:\"\\<lbrakk>(0::nat) < r; 0 < s; l < s * r\\<rbrakk> \\<Longrightarrow> Suc (l div s) \\<le> r\"", "lemma div_Tr3_1:\"\\<lbrakk>(0::nat) < r; 0 < s; l mod s = s - 1\\<rbrakk> \\<Longrightarrow>  Suc l div s = Suc (l div s)\"", "lemma div_Tr3_2:\"\\<lbrakk>(0::nat) < r; 0 < s; l mod s < s - 1\\<rbrakk> \\<Longrightarrow> \n                                       l div s = Suc l div s\"", "lemma mod_div_injTr:\"\\<lbrakk>(0::nat) < r; x mod r = y mod r; x div r = y div r\\<rbrakk>\n                      \\<Longrightarrow> x = y\"", "lemma rtos_hom0:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r * s - Suc 0)\\<rbrakk> \\<Longrightarrow>\n   i div s < r\"", "lemma rtos_hom1:\"\\<lbrakk>(0::nat) < r; 0 < s; l \\<le> (r * s - Suc 0)\\<rbrakk> \\<Longrightarrow> \n (rtos r s) l \\<le> (s * r - Suc 0)\"", "lemma rtos_hom2:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; l \\<le> (r * s - Suc 0)\\<rbrakk> \\<Longrightarrow> \n rtos r s l \\<le> (r * s - Suc 0)\"", "lemma rtos_hom3:\"\\<lbrakk>(0::nat) < r; 0 < s; i \\<le> (r * s - Suc 0) \\<rbrakk> \\<Longrightarrow>\n                   (rtos r s i div r) = i mod s\"", "lemma rtos_hom3_1:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r * s - Suc 0) \\<rbrakk> \\<Longrightarrow>\n  (rtos r s i mod  r) = i div s\"", "lemma rtos_hom5:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r *s - Suc 0); \ni div s = r - Suc 0 \\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) div r = Suc (i mod s)\"", "lemma rtos_hom7:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r * s - Suc 0); \n                   i div s = r - Suc 0 \\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) mod r = 0\"", "lemma rtos_inj:\"\\<lbrakk> (0::nat) < r; (0::nat) < s \\<rbrakk> \\<Longrightarrow> \n                   inj_on (rtos r s) {i. i \\<le> (r * s - Suc 0)}\"", "lemma rtos_rs_Tr1:\"\\<lbrakk>(0::nat) < r; 0 < s \\<rbrakk> \\<Longrightarrow> rtos r s (r * s) = r * s\"", "lemma rtos_rs_Tr2:\"\\<lbrakk>(0::nat) < r; 0 < s \\<rbrakk> \\<Longrightarrow>\n                                 \\<forall>l \\<le> (r * s). rtos r s l \\<le> (r * s)\"", "lemma rtos_rs_Tr3:\"\\<lbrakk>(0::nat) < r; 0 < s \\<rbrakk> \\<Longrightarrow>\n                             inj_on (rtos r s) {i. i \\<le> (r * s)}\"", "lemma Qw_cmpser:\"\\<lbrakk>Group G; w_cmpser G (Suc n) f \\<rbrakk> \\<Longrightarrow> \n                               Gchain n (Qw_cmpser G f)\"", "lemma (in Group) rfn_tool8:\"\\<lbrakk>compseries G r f; 0 < r\\<rbrakk> \\<Longrightarrow> d_gchain G r f\"", "lemma (in Group) rfn_tool16:\"\\<lbrakk>0 < r; 0 < s; i \\<le> (s * r - Suc 0); \n G \\<guillemotright> f (i div s); (Gp G (f (i div s))) \\<triangleright> f (Suc (i div s)); \n (Gp G (f (i div s))) \\<guillemotright> (f (i div s) \\<inter> g (s - Suc 0))\\<rbrakk>  \\<Longrightarrow> \n (Gp G ((f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (s - Suc 0))))) \\<triangleright> \n                                                   (f (Suc (i div s)))\"", "lemma rfn_tool30:\"\\<lbrakk>0 < r; 0 < s; l div s * s + s < s * r\\<rbrakk> \n                \\<Longrightarrow> Suc (l div s) < r\"", "lemma (in Group) simple_grouptr0:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> K; K \\<subseteq> H; simple_Group (G / K)\\<rbrakk>\n  \\<Longrightarrow> H = carrier G \\<or> H = K\"", "lemma (in Group) compser_nsg:\"\\<lbrakk>0 < n; compseries G n f; i \\<le> (n - 1)\\<rbrakk>\n                  \\<Longrightarrow>  Gp G (f i) \\<triangleright> (f (Suc i))\"", "lemma (in Group) compseriesTr5:\"\\<lbrakk>0 < n; compseries G n f; i \\<le> (n - Suc 0)\\<rbrakk>\n          \\<Longrightarrow> (f (Suc i)) \\<subseteq>  (f i)\"", "lemma (in Group) refine_cmpserTr0:\"\\<lbrakk>0 < n; compseries G n f; i \\<le> (n - 1);\n        G \\<guillemotright> H;  f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i\\<rbrakk> \\<Longrightarrow> H = f (Suc i) \\<or> H = f i\"", "lemma div_Tr4:\"\\<lbrakk> (0::nat) < r; 0 < s; j < s * r \\<rbrakk> \\<Longrightarrow> j div s * s + s \\<le> r * s\"", "lemma (in Group) compseries_is_tW_cmpser:\"\\<lbrakk>0 < r; compseries G r f\\<rbrakk> \\<Longrightarrow>\n        tW_cmpser G r f\"", "lemma (in Group) compseries_is_td_gchain:\"\\<lbrakk>0 < r; compseries G r f\\<rbrakk> \\<Longrightarrow>\n        td_gchain G r f\"", "lemma (in Group) compseries_is_D_gchain:\"\\<lbrakk>0 < r; compseries G r f\\<rbrakk> \\<Longrightarrow>\n             D_gchain G r f\"", "lemma divTr5:\"\\<lbrakk>0 < r; 0 < s; l < (r * s)\\<rbrakk>  \\<Longrightarrow>\n                 l div s * s \\<le> l \\<and> l  \\<le> (Suc (l div s)) * s\"", "lemma (in Group) rfn_compseries_iMTr1:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \nh \\<in> wcsr_rfns G r f s\\<rbrakk> \\<Longrightarrow>  f ` {i. i \\<le> r} \\<subseteq>  h ` {i. i \\<le> (s * r)}\"", "lemma rfn_compseries_iMTr2:\"\\<lbrakk>0 < r; 0 < s; xa < s * r \\<rbrakk> \\<Longrightarrow>\n         xa div s * s \\<le> r * s \\<and> Suc (xa div s) * s \\<le> r * s\"", "lemma (in Group) rfn_compseries_iMTr3:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \n      j \\<le> r; \\<forall>i \\<le> r. h (i * s) = f i\\<rbrakk> \\<Longrightarrow>  h (j * s) = f j\"", "lemma (in Group) rfn_compseries_iM:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \n      h \\<in> wcsr_rfns G r f s\\<rbrakk>  \\<Longrightarrow> card (h `{i. i \\<le> (s * r)}) = r + 1\"", "lemma (in Group) cmp_rfn0:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; \n i \\<le> (r - 1); j \\<le> (s - 1)\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> f (Suc i) \\<diamondop>\\<^bsub>G\\<^esub> ((f i ) \\<inter> (g j))\"", "lemma (in Group) cmp_rfn1:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n  \\<Longrightarrow> f (Suc 0) \\<diamondop>\\<^bsub>G\\<^esub> ((f 0 ) \\<inter> (g 0)) = carrier G\"", "lemma (in Group) cmp_rfn2:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n           l \\<le> (s * r)\\<rbrakk>  \\<Longrightarrow> G \\<guillemotright> cmp_rfn G r f s g l\"", "lemma (in Group) cmp_rfn3:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n \\<Longrightarrow> cmp_rfn G r f s g 0 = carrier G \\<and> cmp_rfn G r f s g (s * r) = {\\<one>}\"", "lemma rfn_tool20:\"\\<lbrakk>(0::nat) < m; a = b * m + c; c < m \\<rbrakk> \\<Longrightarrow>  a mod m = c\"", "lemma Suci_mod_s_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0\\<rbrakk>\n        \\<Longrightarrow> (Suc i) mod s = Suc (i mod s)\"", "lemma (in Group) inter_sgsTr1:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i < r * s\\<rbrakk>  \\<Longrightarrow> G \\<guillemotright> f (i div s) \\<inter> g (s - Suc 0)\"", "lemma (in Group) JHS_Tr0_2:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n\\<Longrightarrow> \\<forall>i \\<le> (s * r - Suc 0). Gp G (cmp_rfn G r f s g i) \\<triangleright> \n                                           cmp_rfn G r f s g (Suc i)\"", "lemma (in Group) cmp_rfn4:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \n      compseries G s g; l \\<le> (s * r - Suc 0)\\<rbrakk> \\<Longrightarrow>\n                 cmp_rfn G r f s g (Suc l) \\<subseteq> cmp_rfn G r f s g l\"", "lemma (in Group) cmp_rfn5:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i \\<le> r. cmp_rfn G r f s g (i * s) = f i\"", "lemma (in Group) JHS_Tr0:\"\\<lbrakk>(0::nat) < r; 0 < s; compseries G r f; \n       compseries G s g\\<rbrakk> \\<Longrightarrow> cmp_rfn G r f s g \\<in> wcsr_rfns G r f s\"", "lemma rfn_tool17:\"(a::nat) = b \\<Longrightarrow> a - c = b - c\"", "lemma isom4b:\"\\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> \n                  (Gp G (N \\<diamondop>\\<^bsub>G\\<^esub> H) / N) \\<cong> (Gp G H / (H \\<inter> N))\"", "lemma Suc_rtos_div_r_1:\"\\<lbrakk> 0 < r; 0 < s; i \\<le> r * s - Suc 0; \n         Suc (rtos r s i) < r * s; i mod s = s - Suc 0; \n         i div s < r - Suc 0\\<rbrakk> \\<Longrightarrow>  Suc (rtos r s i) div r = i mod s\"", "lemma Suc_rtos_mod_r_1:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; i mod s = s - Suc 0; i  div s < r - Suc 0\\<rbrakk>\n         \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)\"", "lemma i_div_s_less:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\ni mod s = s - Suc 0; Suc i < s * r \\<rbrakk>  \\<Longrightarrow> i div s < r - Suc 0\"", "lemma rtos_mod_r_1:\"\\<lbrakk> 0 < r; 0 < s; i \\<le> r * s - Suc 0; rtos r s i < r * s;\n  i mod s = s - Suc 0 \\<rbrakk>  \\<Longrightarrow> rtos r s i mod r = i div s\"", "lemma Suc_i_mod_s_0_1:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s = s - Suc 0\\<rbrakk>\n        \\<Longrightarrow> Suc i mod s = 0\"", "lemma Suci_div_s_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0\\<rbrakk>\n         \\<Longrightarrow> Suc i div s = i div s\"", "lemma rtos_i_mod_r_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk> \\<Longrightarrow> rtos r s i mod r = i div s\"", "lemma Suc_rtos_i_mod_r_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; \n       i div s = r - Suc 0\\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) mod r = 0\"", "lemma Suc_rtos_i_mod_r_3:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; \n      i div s < r - Suc 0\\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)\"", "lemma Suc_rtos_div_r_3:\"\\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0; \n      Suc (rtos r s i) < r * s; i div s < r - Suc 0\\<rbrakk> \\<Longrightarrow> \n               Suc (rtos r s i) div r = i mod s\"", "lemma r_s_div_s:\"\\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> (r * s - Suc 0) div s = r - Suc 0\"", "lemma r_s_mod_s:\"\\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> (r * s - Suc 0) mod s = s - Suc 0\"", "lemma rtos_r_s:\"\\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> rtos r s (r * s - Suc 0) = r * s - Suc 0\"", "lemma rtos_rs_1:\"\\<lbrakk> 0 < r; 0 < s; rtos r s i < r * s;\n       \\<not> Suc (rtos r s i) < r * s\\<rbrakk> \\<Longrightarrow> rtos r s i = r * s - Suc 0\"", "lemma rtos_rs_i_rs:\"\\<lbrakk> 0 < r; 0 < s; i \\<le> r * s - Suc 0; \nrtos r s i = r * s - Suc 0\\<rbrakk> \\<Longrightarrow>  i = r * s - Suc 0\"", "lemma JHS_Tr1_1:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk> \\<Longrightarrow> f (Suc ((r * s - Suc 0) div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f ((r * s - Suc 0) div s) \\<inter> g ((r * s - Suc 0) mod s)) = f (r - Suc 0) \\<inter> g (s - Suc 0)\"", "lemma JHS_Tr1_2:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n k < r - Suc 0\\<rbrakk> \\<Longrightarrow> ((Gp G (f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> (f k \\<inter> g (s - Suc 0)))) / \n                               (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> (f (Suc k) \\<inter> g 0))) \\<cong>\n               ((Gp G (g s \\<diamondop>\\<^bsub>G\\<^esub> (g (s - Suc 0) \\<inter> f k))) /\n                          (g s \\<diamondop>\\<^bsub>G\\<^esub> (g (s - Suc 0) \\<inter> f (Suc k))))\"", "lemma JHS_Tr1_3:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n       i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n       i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group (Gp G (f r \\<diamondop>\\<^bsub>G\\<^esub> (f (r - Suc 0) \\<inter> g (i mod s))) /\n        (f r \\<diamondop>\\<^bsub>G\\<^esub> (f (r - Suc 0) \\<inter> g (Suc (i mod s)))))\"", "lemma JHS_Tr1_4:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n       i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n       i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0\\<rbrakk> \\<Longrightarrow> \n      Group (Gp G (g (Suc (i mod s)) \\<diamondop>\\<^bsub>G\\<^esub> (g (i mod s) \\<inter> f (r - Suc 0))) /\n       (g (Suc (Suc (i mod s))) \\<diamondop>\\<^bsub>G\\<^esub> (g (Suc (i mod s)) \\<inter> f 0)))\"", "lemma JHS_Tr1_5:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n      i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n      i mod s < s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n \\<Longrightarrow> (Gp G (f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (i mod s))) /\n        (f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (Suc (i mod s))))) \\<cong>\n     (Gp G (g (Suc (i mod s)) \\<diamondop>\\<^bsub>G\\<^esub> (g (i mod s) \\<inter> f (i div s))) /\n       (g (Suc (Suc (rtos r s i) div r)) \\<diamondop>\\<^bsub>G\\<^esub> \n              (g (Suc (rtos r s i) div r) \\<inter> f (Suc (rtos r s i) mod r))))\"", "lemma JHS_Tr1_6:\" \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s\\<rbrakk> \\<Longrightarrow>\n  ((Gp G (cmp_rfn G r f s g i)) / (cmp_rfn G r f s g (Suc i))) \\<cong>\n  ((Gp G (g (Suc (rtos r s i div r)) \\<diamondop>\\<^bsub>G\\<^esub> \n      (g (rtos r s i div r) \\<inter> f (rtos r s i mod r)))) /\n      (g (Suc (Suc (rtos r s i) div r)) \\<diamondop>\\<^bsub>G\\<^esub>\n              (g (Suc (rtos r s i) div r) \\<inter> f (Suc (rtos r s i) mod r))))\"", "lemma JHS_Tr1:\"\\<lbrakk> Group G; 0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n\\<Longrightarrow> isom_Gchains (r * s - 1) (rtos r s) (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f))\"", "lemma abc_SucTr0:\"\\<lbrakk>(0::nat) < a; c \\<le> b; a - Suc 0 = b - c\\<rbrakk> \\<Longrightarrow> a = (Suc b) - c\"", "lemma length_wcmpser0_0:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk> \\<Longrightarrow> \n       f ` {i. i \\<le> (Suc 0)} = {f 0, f (Suc 0)}\"", "lemma length_wcmpser0_1:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i\\<in>{i. i \\<le> n};\n (Qw_cmpser G f) i \\<cong> E\\<rbrakk> \\<Longrightarrow> f i = f (Suc i)\"", "lemma length_wcmpser0_2:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n \\<not> (Qw_cmpser G f) i \\<cong> E\\<rbrakk> \\<Longrightarrow> f i \\<noteq> f (Suc i)\"", "lemma length_wcmpser0_3:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n  f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk> \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> (Suc n)}\"", "lemma length_wcmpser0_4:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk> \\<Longrightarrow>\n  card (f ` {i. i \\<le> Suc 0}) - 1 = Suc 0 - card {i. i = 0 \\<and> \n                                                Qw_cmpser G f i \\<cong> E}\"", "lemma length_wcmpser0_5:\" \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f; \n      w_cmpser G (Suc n) f;  \n        card (f ` {i. i \\<le> (Suc n)}) - 1 = Suc n - \n                     card {i. i \\<le> n  \\<and> Qw_cmpser G f i \\<cong> E}; \n        Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow>\n      card (f ` {i . i \\<le> (Suc (Suc n))}) - 1 =\n             Suc (Suc n) - card {i. i \\<le> (Suc n) \\<and> Qw_cmpser G f i \\<cong> E}\"", "lemma length_wcmpser0_6:\"\\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f\\<rbrakk> \\<Longrightarrow> \n                                          0 < card (f ` {i. i \\<le> (Suc n)})\"", "lemma length_wcmpser0_7:\"\\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f\\<rbrakk> \\<Longrightarrow>\n                     card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} \\<le> Suc n\"", "lemma length_wcmpser0:\"\\<lbrakk>Group G; Ugp E\\<rbrakk> \\<Longrightarrow>\\<forall>f. w_cmpser G (Suc n) f \\<longrightarrow>  \ncard (f ` {i. i \\<le> (Suc n)}) - 1 = (Suc  n) - (card {i. i \\<le> n \\<and> \n                                      ((Qw_cmpser G f) i \\<cong> E)})\"", "lemma length_of_twcmpser:\"\\<lbrakk>Group G; Ugp E; tw_cmpser G (Suc n) f \\<rbrakk> \\<Longrightarrow> \n      length_twcmpser G (Suc n) f = \n                     (Suc n) - (card {i. i \\<le> n \\<and> ((Qw_cmpser G f) i \\<cong> E)})\"", "lemma JHS_1:\"\\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0<r; 0 < s\\<rbrakk>\n \\<Longrightarrow> r =  r * s - card {i. i \\<le> (r * s - Suc 0) \\<and>\n            Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}\"", "lemma J_H_S:\"\\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0<r;\n               (0::nat)<s \\<rbrakk>  \\<Longrightarrow> r = s\""], "translations": [["", "lemma (in Group) contain_commutator:\"\\<lbrakk>G \\<guillemotright> H; (commutators G) \\<subseteq> H\\<rbrakk> \\<Longrightarrow> G \\<triangleright> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> G \\<triangleright> H", "apply (rule cond_nsg[of \"H\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier G.\n                         \\<forall>h\\<in>H.\n                            a \\<cdot> h \\<cdot> \\<rho> a \\<in> H", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H;\n        a \\<in> carrier G; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> H", "apply (frule_tac h = h in sg_subset_elem[of \"H\"], assumption,\n        frule_tac a = h in i_closed,\n        frule_tac a = a in i_closed,\n        frule_tac a = a and b = h in mult_closed, assumption+,\n        frule_tac a = \"a \\<cdot> h\" and b = \"\\<rho> a\" in mult_closed, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H;\n        a \\<in> carrier G; h \\<in> H; h \\<in> carrier G;\n        \\<rho> h \\<in> carrier G; \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> H", "apply (frule_tac a = \"a \\<cdot> h \\<cdot> (\\<rho> a)\" and b = \"\\<rho> h\" and c = h in tassoc,\n          assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H;\n        a \\<in> carrier G; h \\<in> H; h \\<in> carrier G;\n        \\<rho> h \\<in> carrier G; \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h \\<cdot> h =\n        a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> (\\<rho> h \\<cdot> h)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> H", "apply (simp add:l_i r_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H;\n        a \\<in> carrier G; h \\<in> H; h \\<in> carrier G;\n        \\<rho> h \\<in> carrier G; \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h \\<cdot> h =\n        a \\<cdot> h \\<cdot> \\<rho> a\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> H", "apply (rule_tac a = \"a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h \\<cdot> h\" and A = H and b = \"a \\<cdot> h \\<cdot> \\<rho> a\" \n        in eq_elem_in,\n        rule_tac x = \"a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h\" and y = h in sg_mult_closed[of \"H\"],\n         assumption,\n        rule_tac c = \"a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h\" in subsetD[of \"commutators G\" \"H\"],\n         assumption,\n        thin_tac \"commutators G \\<subseteq> H\",\n        simp add:commutators_def, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H;\n        a \\<in> carrier G; h \\<in> H; h \\<in> carrier G;\n        \\<rho> h \\<in> carrier G; \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h \\<cdot> h =\n        a \\<cdot> h \\<cdot> \\<rho> a\\<rbrakk>\n       \\<Longrightarrow> h \\<in> H\n 2. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; commutators G \\<subseteq> H;\n        a \\<in> carrier G; h \\<in> H; h \\<in> carrier G;\n        \\<rho> h \\<in> carrier G; \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<in> carrier G;\n        a \\<cdot> h \\<cdot> \\<rho> a \\<cdot> \\<rho> h \\<cdot> h =\n        a \\<cdot> h \\<cdot> \\<rho> a\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<cdot>\n                         \\<rho> h \\<cdot>\n                         h =\n                         a \\<cdot> h \\<cdot> \\<rho> a", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  s_top :: \"[_ , 'a set, 'a set] \\<Rightarrow> 'a set \" where\n  \"s_top G H K = {z. \\<exists>x \\<in> H. \\<exists>y \\<in> K. (x \\<cdot>\\<^bsub>G\\<^esub> y = z)}\""], ["", "abbreviation\n  S_TOP :: \"[('a, 'm) Group_scheme, 'a set, 'a set] \\<Rightarrow> 'a set\"\n    (\"(3_ \\<diamondop>\\<index> _)\" [66,67]66) where\n  \"H \\<diamondop>\\<^bsub>G\\<^esub> K == s_top G H K\""], ["", "lemma (in Group) s_top_induced:\"\\<lbrakk>G \\<guillemotright> L; H \\<subseteq> L; K \\<subseteq> L\\<rbrakk> \\<Longrightarrow> \n                                        H \\<diamondop>\\<^bsub>Gp G L\\<^esub> K =  H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> L ; H \\<subseteq> L;\n     K \\<subseteq> L\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop>\\<^bsub>\\<natural>L\\<^esub> K =\n                      H \\<diamondop> K", "by (simp add:s_top_def Gp_def)"], ["", "lemma (in Group) s_top_l_unit:\"G \\<guillemotright> K \\<Longrightarrow> {\\<one>} \\<diamondop>\\<^bsub>G\\<^esub> K = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> K  \\<Longrightarrow> {\\<one>} \\<diamondop> K = K", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<guillemotright> K  \\<Longrightarrow>\n    {\\<one>} \\<diamondop> K \\<subseteq> K\n 2. G \\<guillemotright> K  \\<Longrightarrow>\n    K \\<subseteq> {\\<one>} \\<diamondop> K", "apply (rule subsetI, simp add:s_top_def, erule bexE,\n        frule_tac h = y in sg_subset_elem[of \"K\"], assumption+,\n        simp add:l_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> K  \\<Longrightarrow>\n    K \\<subseteq> {\\<one>} \\<diamondop> K", "apply (rule subsetI,\n        simp add:s_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> K ; x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>K. \\<one> \\<cdot> y = x", "apply (frule_tac h = x in sg_subset_elem, assumption,\n        frule_tac a = x in l_unit, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_r_unit:\"G \\<guillemotright> K \\<Longrightarrow> K \\<diamondop>\\<^bsub>G\\<^esub> {\\<one>} = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> K  \\<Longrightarrow> K \\<diamondop> {\\<one>} = K", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<guillemotright> K  \\<Longrightarrow>\n    K \\<diamondop> {\\<one>} \\<subseteq> K\n 2. G \\<guillemotright> K  \\<Longrightarrow>\n    K \\<subseteq> K \\<diamondop> {\\<one>}", "apply (rule subsetI, simp add:s_top_def, erule bexE,\n       frule_tac h = xa in sg_subset_elem[of \"K\"], assumption+,\n       simp add:r_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> K  \\<Longrightarrow>\n    K \\<subseteq> K \\<diamondop> {\\<one>}", "apply (rule subsetI,\n       simp add:s_top_def,\n       frule_tac h = x in sg_subset_elem[of \"K\"], assumption+,\n       frule_tac a = x in r_unit, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_sub:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow>  H \\<diamondop>\\<^bsub>G\\<^esub> K \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<subseteq> carrier G", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        x \\<in> H \\<diamondop> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G", "apply (simp add:s_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        \\<exists>xa\\<in>H. \\<exists>y\\<in>K. xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ; xa \\<in> H;\n        y \\<in> K; xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G", "apply (frule_tac h = xa in sg_subset_elem [of \"H\"], assumption+,\n       frule_tac h = y in sg_subset_elem[of \"K\"], assumption+,\n       frule_tac a = xa and b = y in mult_closed, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) sg_inc_set_mult:\"\\<lbrakk>G \\<guillemotright> L; H \\<subseteq> L; K \\<subseteq> L\\<rbrakk> \\<Longrightarrow> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<subseteq> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> L ; H \\<subseteq> L;\n     K \\<subseteq> L\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<subseteq> L", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> L ; H \\<subseteq> L; K \\<subseteq> L;\n        x \\<in> H \\<diamondop> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> L", "apply (simp add:s_top_def, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> L ; H \\<subseteq> L; K \\<subseteq> L;\n        xa \\<in> H; y \\<in> K; xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> L", "apply (frule_tac c = xa in subsetD [of \"H\" \"L\"], assumption+,\n       frule_tac c = y in subsetD [of \"K\" \"L\"], assumption+,\n       frule_tac x = xa and y = y in sg_mult_closed[of \"L\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> L ; H \\<subseteq> L; K \\<subseteq> L;\n        xa \\<in> H; y \\<in> K; xa \\<cdot> y = x; xa \\<in> L; y \\<in> L;\n        xa \\<cdot> y \\<in> L\\<rbrakk>\n       \\<Longrightarrow> x \\<in> L", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_sub1:\"\\<lbrakk>H \\<subseteq> (carrier G); K \\<subseteq> (carrier G)\\<rbrakk> \\<Longrightarrow>  \n                               H \\<diamondop>\\<^bsub>G\\<^esub> K \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<subseteq> carrier G", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G;\n        x \\<in> H \\<diamondop> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G", "apply (simp add:s_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G;\n        \\<exists>xa\\<in>H. \\<exists>y\\<in>K. xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G", "apply (erule bexE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G;\n        xa \\<in> H; y \\<in> K; xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G", "apply (frule_tac c = xa in subsetD[of \"H\" \"carrier G\"], assumption+,\n       frule_tac c = y in subsetD[of \"K\" \"carrier G\"], assumption+,\n       frule_tac a = xa and b = y in mult_closed, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_elem:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; a \\<in> H; b \\<in> K\\<rbrakk> \\<Longrightarrow> a \\<cdot> b \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ; a \\<in> H;\n     b \\<in> K\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<in> H \\<diamondop> K", "by (simp add:s_top_def, blast)"], ["", "lemma (in Group) s_top_elem1:\"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H; b \\<in> K\\<rbrakk> \\<Longrightarrow>\n                    a \\<cdot> b \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n     b \\<in> K\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<in> H \\<diamondop> K", "by (simp add:s_top_def, blast)"], ["", "lemma (in Group) mem_s_top:\"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; u \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow>\n                 \\<exists>a \\<in> H. \\<exists>b \\<in> K. (a \\<cdot> b = u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G;\n     u \\<in> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a\\<in>H. \\<exists>b\\<in>K. a \\<cdot> b = u", "by (simp add:s_top_def)"], ["", "lemma (in Group) s_top_mono:\"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; H1 \\<subseteq> H; K1 \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow>  H1 \\<diamondop>\\<^bsub>G\\<^esub> K1 \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G;\n     H1 \\<subseteq> H; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> K1 \\<subseteq> H \\<diamondop> K", "by (rule subsetI, simp add:s_top_def, blast)"], ["", "lemma (in Group) s_top_unit_closed:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow>  \\<one> \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<in> H \\<diamondop> K", "apply (frule sg_unit_closed [of \"H\"], \n       frule sg_unit_closed [of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ; \\<one> \\<in> H;\n     \\<one> \\<in> K\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<in> H \\<diamondop> K", "apply (cut_tac unit_closed,\n       frule l_unit[of \"\\<one>\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ; \\<one> \\<in> H;\n     \\<one> \\<in> K; \\<one> \\<in> carrier G;\n     \\<one> \\<cdot> \\<one> = \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<in> H \\<diamondop> K", "apply (simp add:s_top_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_commute:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K;\n       u \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K;  v \\<in>  H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow>  u \\<cdot> v \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     K \\<diamondop> H = H \\<diamondop> K; u \\<in> H \\<diamondop> K;\n     v \\<in> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<in> H \\<diamondop> K", "apply (frule sg_subset[of \"H\"], frule sg_subset[of \"K\"],\n       frule mem_s_top[of \"H\" \"K\" \"u\"], assumption+, (erule bexE)+,\n       frule mem_s_top[of \"H\" \"K\" \"v\"], assumption+, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        K \\<diamondop> H = H \\<diamondop> K; u \\<in> H \\<diamondop> K;\n        v \\<in> H \\<diamondop> K; H \\<subseteq> carrier G;\n        K \\<subseteq> carrier G; a \\<in> H; b \\<in> K; a \\<cdot> b = u;\n        aa \\<in> H; ba \\<in> K; aa \\<cdot> ba = v\\<rbrakk>\n       \\<Longrightarrow> u \\<cdot> v \\<in> H \\<diamondop> K", "apply (rotate_tac 4, frule sym, thin_tac \"a \\<cdot> b = u\", frule sym, \n       thin_tac \"aa \\<cdot> ba = v\", simp,\n       thin_tac \"u = a \\<cdot> b\", thin_tac \"v = aa \\<cdot> ba\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; K \\<diamondop> H = H \\<diamondop> K;\n        a \\<cdot> b \\<in> H \\<diamondop> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> b \\<cdot> (aa \\<cdot> ba)\n                         \\<in> H \\<diamondop> K", "apply (frule_tac h = a in sg_subset_elem[of \"H\"], assumption+,\n       frule_tac h = aa in sg_subset_elem[of \"H\"], assumption+,\n       frule_tac h = b in sg_subset_elem[of \"K\"], assumption+,\n       frule_tac h = ba in sg_subset_elem[of \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; K \\<diamondop> H = H \\<diamondop> K;\n        a \\<cdot> b \\<in> H \\<diamondop> K; a \\<in> carrier G;\n        aa \\<in> carrier G; b \\<in> carrier G; ba \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> b \\<cdot> (aa \\<cdot> ba)\n                         \\<in> H \\<diamondop> K", "apply (simp add:tOp_assocTr41[THEN sym], simp add:tOp_assocTr42)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; K \\<diamondop> H = H \\<diamondop> K;\n        a \\<cdot> b \\<in> H \\<diamondop> K; a \\<in> carrier G;\n        aa \\<in> carrier G; b \\<in> carrier G; ba \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> (b \\<cdot> aa) \\<cdot> ba\n                         \\<in> H \\<diamondop> K", "apply (frule_tac a = b and b = aa in s_top_elem1[of \"K\" \"H\"], assumption+,\n       simp, thin_tac \"K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; a \\<cdot> b \\<in> H \\<diamondop> K;\n        a \\<in> carrier G; aa \\<in> carrier G; b \\<in> carrier G;\n        ba \\<in> carrier G; b \\<cdot> aa \\<in> H \\<diamondop> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> (b \\<cdot> aa) \\<cdot> ba\n                         \\<in> H \\<diamondop> K", "apply (frule_tac u = \"b \\<cdot> aa\" in mem_s_top[of \"H\" \"K\"], assumption+,\n       (erule bexE)+, frule sym, thin_tac \"ab \\<cdot> bb = b \\<cdot> aa\", simp,\n        thin_tac \"b \\<cdot> aa = ab \\<cdot> bb\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; a \\<cdot> b \\<in> H \\<diamondop> K;\n        a \\<in> carrier G; aa \\<in> carrier G; b \\<in> carrier G;\n        ba \\<in> carrier G; ab \\<cdot> bb \\<in> H \\<diamondop> K;\n        ab \\<in> H; bb \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> (ab \\<cdot> bb) \\<cdot> ba\n                         \\<in> H \\<diamondop> K", "apply (frule_tac h = ab in sg_subset_elem[of \"H\"], assumption+,\n       frule_tac h = bb in sg_subset_elem[of \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; a \\<cdot> b \\<in> H \\<diamondop> K;\n        a \\<in> carrier G; aa \\<in> carrier G; b \\<in> carrier G;\n        ba \\<in> carrier G; ab \\<cdot> bb \\<in> H \\<diamondop> K;\n        ab \\<in> H; bb \\<in> K; ab \\<in> carrier G;\n        bb \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> (ab \\<cdot> bb) \\<cdot> ba\n                         \\<in> H \\<diamondop> K", "apply (simp add:tOp_assocTr42[THEN sym], simp add:tOp_assocTr41)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>aa \\<cdot> ba \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; aa \\<in> H; ba \\<in> K; G \\<guillemotright> H ;\n        G \\<guillemotright> K ; a \\<cdot> b \\<in> H \\<diamondop> K;\n        a \\<in> carrier G; aa \\<in> carrier G; b \\<in> carrier G;\n        ba \\<in> carrier G; ab \\<cdot> bb \\<in> H \\<diamondop> K;\n        ab \\<in> H; bb \\<in> K; ab \\<in> carrier G;\n        bb \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> ab \\<cdot> (bb \\<cdot> ba)\n                         \\<in> H \\<diamondop> K", "apply (frule_tac x = a and y = ab in sg_mult_closed[of \"H\"], assumption+,\n       frule_tac x = bb and y = ba in sg_mult_closed[of \"K\"], assumption+,\n       simp add:s_top_elem1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_commute1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K;\n                                        u \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow> (\\<rho> u) \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     K \\<diamondop> H = H \\<diamondop> K; u \\<in> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> \\<rho> u \\<in> H \\<diamondop> K", "apply (frule sg_subset[of \"H\"], frule sg_subset[of \"K\"],\n       frule mem_s_top[of \"H\" \"K\" \"u\"], assumption+, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        K \\<diamondop> H = H \\<diamondop> K; u \\<in> H \\<diamondop> K;\n        H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; a \\<cdot> b = u\\<rbrakk>\n       \\<Longrightarrow> \\<rho> u \\<in> H \\<diamondop> K", "apply (frule_tac h = a in sg_subset_elem[of \"H\"], assumption+,\n        frule_tac h = b in sg_subset_elem[of \"K\"], assumption+,\n        frule_tac a = a and b = b in i_ab, assumption+,\n        rotate_tac 4, frule sym, thin_tac \"a \\<cdot> b = u\", simp,\n        thin_tac \"\\<rho> (a \\<cdot> b) = \\<rho> b \\<cdot> \\<rho> a\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; a \\<in> H;\n        b \\<in> K; a \\<in> carrier G; b \\<in> carrier G;\n        G \\<guillemotright> H ; G \\<guillemotright> K ;\n        K \\<diamondop> H = H \\<diamondop> K;\n        a \\<cdot> b \\<in> H \\<diamondop> K; u = a \\<cdot> b\\<rbrakk>\n       \\<Longrightarrow> \\<rho> b \\<cdot> \\<rho> a \\<in> H \\<diamondop> K", "apply (frule_tac x = a in sg_i_closed[of \"H\"], assumption+,\n        frule_tac x = b in sg_i_closed[of \"K\"], assumption+,\n        frule_tac a = \"\\<rho> b\" and b = \"\\<rho> a\" in s_top_elem1[of \"K\" \"H\"],\n         assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_commute_sg:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; K \\<diamondop>\\<^bsub>G\\<^esub> H = H \\<diamondop>\\<^bsub>G\\<^esub> K\\<rbrakk> \\<Longrightarrow>\n                                     G \\<guillemotright> (H \\<diamondop>\\<^bsub>G\\<^esub> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     K \\<diamondop> H = H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H \\<diamondop> K", "apply (subst sg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     K \\<diamondop> H = H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<noteq> {} \\<and>\n                      H \\<diamondop> K \\<subseteq> carrier G \\<and>\n                      (\\<forall>a\\<in>H \\<diamondop> K.\n                          \\<forall>b\\<in>H \\<diamondop> K.\n                             a \\<cdot> \\<rho> b \\<in> H \\<diamondop> K)", "apply (frule s_top_unit_closed[of \"H\" \"K\"], assumption,\n       simp add:nonempty, simp add:s_top_sub)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     K \\<diamondop> H = H \\<diamondop> K;\n     \\<one> \\<in> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>H \\<diamondop> K.\n                         \\<forall>b\\<in>H \\<diamondop> K.\n                            a \\<cdot> \\<rho> b \\<in> H \\<diamondop> K", "apply ((rule ballI)+, \n       frule_tac u = b in s_top_commute1[of \"H\" \"K\"], assumption+,\n       rule_tac u = a and v = \"\\<rho> b\" in s_top_commute[of \"H\" \"K\"], \n              assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_top_assoc:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; G \\<guillemotright> L\\<rbrakk> \\<Longrightarrow>\n                                 (H \\<diamondop>\\<^bsub>G\\<^esub> K) \\<diamondop>\\<^bsub>G\\<^esub> L =  H \\<diamondop>\\<^bsub>G\\<^esub> (K \\<diamondop>\\<^bsub>G\\<^esub> L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<diamondop> L =\n                      H \\<diamondop> (K \\<diamondop> L)", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<diamondop> L\n                      \\<subseteq> H \\<diamondop> (K \\<diamondop> L)\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (rule subsetI, simp add:s_top_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        G \\<guillemotright> L ;\n        \\<exists>xa.\n           (\\<exists>x\\<in>H. \\<exists>y\\<in>K. x \\<cdot> y = xa) \\<and>\n           (\\<exists>y\\<in>L. xa \\<cdot> y = x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y.\n                               (\\<exists>x\\<in>K.\n                                   \\<exists>ya\\<in>L.\nx \\<cdot> ya = y) \\<and>\n                               xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        G \\<guillemotright> L ;\n        (\\<exists>x\\<in>H. \\<exists>y\\<in>K. x \\<cdot> y = xa) \\<and>\n        (\\<exists>y\\<in>L. xa \\<cdot> y = x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y.\n                               (\\<exists>x\\<in>K.\n                                   \\<exists>ya\\<in>L.\nx \\<cdot> ya = y) \\<and>\n                               xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        G \\<guillemotright> L ;\n        \\<exists>x\\<in>H. \\<exists>y\\<in>K. x \\<cdot> y = xa;\n        \\<exists>y\\<in>L. xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y.\n                               (\\<exists>x\\<in>K.\n                                   \\<exists>ya\\<in>L.\nx \\<cdot> ya = y) \\<and>\n                               xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (erule bexE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb y ya.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        G \\<guillemotright> L ; xb \\<in> H; y \\<in> L; xa \\<cdot> y = x;\n        ya \\<in> K; xb \\<cdot> ya = xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y.\n                               (\\<exists>x\\<in>K.\n                                   \\<exists>ya\\<in>L.\nx \\<cdot> ya = y) \\<and>\n                               xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (rotate_tac -1, frule sym, thin_tac \"xb \\<cdot> ya = xa\", simp,\n        thin_tac \"xa = xb \\<cdot> ya\", frule sym, thin_tac \"xb \\<cdot> ya \\<cdot> y = x\",\n        simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xb y ya.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        G \\<guillemotright> L ; xb \\<in> H; y \\<in> L; ya \\<in> K;\n        x = xb \\<cdot> ya \\<cdot> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H.\n                            \\<exists>yb.\n                               (\\<exists>x\\<in>K.\n                                   \\<exists>y\\<in>L.\nx \\<cdot> y = yb) \\<and>\n                               x \\<cdot> yb = xb \\<cdot> ya \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (frule_tac h = xb in sg_subset_elem[of \"H\"], assumption+,\n       frule_tac h = y in sg_subset_elem[of \"L\"], assumption+,\n       frule_tac h = ya in sg_subset_elem[of \"K\"], assumption+,\n       simp add:tassoc, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     G \\<guillemotright> L \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> (K \\<diamondop> L)\n                      \\<subseteq> H \\<diamondop> K \\<diamondop> L", "apply (rule subsetI, simp add:s_top_def,\n       erule bexE, erule exE, erule conjE, (erule bexE)+,\n       rotate_tac -1, frule sym, thin_tac \"xb \\<cdot> ya = y\", simp,\n       thin_tac \"y = xb \\<cdot> ya\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y xb ya.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        G \\<guillemotright> L ; xa \\<in> H; xa \\<cdot> (xb \\<cdot> ya) = x;\n        xb \\<in> K; ya \\<in> L\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>x\\<in>H.\n                                \\<exists>y\\<in>K. x \\<cdot> y = xa) \\<and>\n                            (\\<exists>y\\<in>L. xa \\<cdot> y = x)", "apply (frule_tac h = xa in sg_subset_elem[of \"H\"], assumption+,\n       frule_tac h = ya in sg_subset_elem[of \"L\"], assumption+,\n       frule_tac h = xb in sg_subset_elem[of \"K\"], assumption+,\n       simp add:tassoc[THEN sym],\n       frule sym, thin_tac \"xa \\<cdot> xb \\<cdot> ya = x\", simp, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_topTr6:\"\\<lbrakk>G \\<guillemotright> H1; G \\<guillemotright> H2; G \\<guillemotright> K; H1 \\<subseteq> K\\<rbrakk> \\<Longrightarrow>\n                               (H1 \\<diamondop>\\<^bsub>G\\<^esub> H2) \\<inter> K = H1 \\<diamondop>\\<^bsub>G\\<^esub> (H2 \\<inter> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> (H1 \\<diamondop> H2) \\<inter> K =\n                      H1 \\<diamondop> H2 \\<inter> K", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> (H1 \\<diamondop> H2) \\<inter> K\n                      \\<subseteq> H1 \\<diamondop> H2 \\<inter> K\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H2 \\<inter> K\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (rule subsetI,\n        simp add:s_top_def, erule conjE, (erule bexE)+,\n        frule sym, thin_tac \"xa \\<cdot> y = x\", simp,\n        frule_tac c = xa in subsetD[of \"H1\" \"K\"], assumption+,\n        frule_tac x = \"xa \\<cdot> y\" in inEx[of _ \"K\"], erule bexE,\n        frule_tac x = xa in sg_i_closed[of \"K\"], assumption+,\n        frule_tac x = \"\\<rho> xa\" and y = ya in sg_mult_closed[of \"K\"], \n        assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y ya.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H1 \\<subseteq> K; xa \\<cdot> y \\<in> K;\n        xa \\<in> H1; y \\<in> H2; x = xa \\<cdot> y; xa \\<in> K;\n        ya = xa \\<cdot> y; \\<rho> xa \\<in> K;\n        \\<rho> xa \\<cdot> (xa \\<cdot> y) \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1.\n                            \\<exists>ya\\<in>H2 \\<inter> K.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H2 \\<inter> K\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (frule_tac h = xa in sg_subset_elem[of \"K\"], assumption+,\n        frule_tac h = \"\\<rho> xa\" in sg_subset_elem[of \"K\"], assumption+,\n        frule_tac h = y in sg_subset_elem[of \"H2\"], assumption+,\n        simp add:tassoc[THEN sym] l_i l_unit)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y ya.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H1 \\<subseteq> K; xa \\<cdot> y \\<in> K;\n        xa \\<in> H1; y \\<in> H2; x = xa \\<cdot> y; xa \\<in> K;\n        ya = xa \\<cdot> y; \\<rho> xa \\<in> K; y \\<in> K; xa \\<in> carrier G;\n        \\<rho> xa \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1.\n                            \\<exists>ya\\<in>H2 \\<inter> K.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H2 \\<inter> K\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H2 \\<inter> K\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (rule subsetI,\n        simp add:s_top_def, (erule bexE)+, simp,\n        frule sym, thin_tac \"xa \\<cdot> y = x\", simp,\n        frule_tac c = xa in subsetD[of \"H1\" \"K\"], assumption+,\n        frule_tac x = xa and y = y in sg_mult_closed[of \"K\"], assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H1 \\<subseteq> K; xa \\<in> H1;\n        y \\<in> H2 \\<and> y \\<in> K; x = xa \\<cdot> y; xa \\<in> K;\n        xa \\<cdot> y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x\\<in>H1.\n                             \\<exists>ya\\<in>H2.\n                                x \\<cdot> ya = xa \\<cdot> y) \\<and>\n                         xa \\<cdot> y \\<in> K", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_topTr6_1:\"\\<lbrakk>G \\<guillemotright> H1; G \\<guillemotright> H2; G \\<guillemotright> K; H2 \\<subseteq> K\\<rbrakk> \\<Longrightarrow>\n                              (H1 \\<diamondop>\\<^bsub>G\\<^esub> H2) \\<inter> K = (H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> (H1 \\<diamondop> H2) \\<inter> K =\n                      H1 \\<inter> K \\<diamondop> H2", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> (H1 \\<diamondop> H2) \\<inter> K\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H2\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H2\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H2 \\<subseteq> K;\n        x \\<in> (H1 \\<diamondop> H2) \\<inter> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H1 \\<inter> K \\<diamondop> H2\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H2\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (simp add:s_top_def, erule conjE, (erule bexE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H2 \\<subseteq> K; x \\<in> K; xa \\<in> H1;\n        y \\<in> H2; xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1 \\<inter> K.\n                            \\<exists>y\\<in>H2. xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H2\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (frule_tac  c = y in subsetD [of \"H2\" \"K\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H2 \\<subseteq> K; x \\<in> K; xa \\<in> H1;\n        y \\<in> H2; xa \\<cdot> y = x; y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1 \\<inter> K.\n                            \\<exists>y\\<in>H2. xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H2\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (frule_tac x = y in sg_i_closed [of \"K\"], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n        G \\<guillemotright> K ; H2 \\<subseteq> K; x \\<in> K; xa \\<in> H1;\n        y \\<in> H2; xa \\<cdot> y = x; y \\<in> K; \\<rho> y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1 \\<inter> K.\n                            \\<exists>y\\<in>H2. xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H2\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (frule_tac h = xa in sg_subset_elem[of \"H1\"], assumption+,\n       frule_tac h = x in sg_subset_elem[of \"K\"], assumption+,\n       frule_tac h = y in sg_subset_elem[of \"K\"], assumption+,\n       frule_tac h = \"\\<rho> y\" in sg_subset_elem[of \"K\"], assumption+,\n       frule sym, thin_tac \"xa \\<cdot> y = x\", \n       frule_tac x = x and y = \"\\<rho> y\" in sg_mult_closed[of \"K\"], assumption+,\n       simp add:tassoc r_i r_unit, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H1 ; G \\<guillemotright> H2 ;\n     G \\<guillemotright> K ; H2 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H2\n                      \\<subseteq> (H1 \\<diamondop> H2) \\<inter> K", "apply (rule subsetI, simp add:s_top_def, (erule bexE)+,\n       simp, erule conjE,\n       frule_tac c = y in subsetD[of \"H2\" \"K\"], assumption+,\n       frule_tac x = xa and y = y in sg_mult_closed[of \"K\"], assumption+, simp,\n       blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) l_sub_smult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> H \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> H \\<diamondop> K", "apply (rule subsetI,\n       simp add:s_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y\\<in>K. xa \\<cdot> y = x", "apply (frule sg_unit_closed[of \"K\"],\n       frule_tac h = x in sg_subset_elem[of \"H\"], assumption+,\n       frule_tac a = x in r_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ; x \\<in> H;\n        \\<one> \\<in> K; x \\<in> carrier G; x \\<cdot> \\<one> = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y\\<in>K. xa \\<cdot> y = x", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) r_sub_smult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> K \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> H \\<diamondop> K", "apply (rule subsetI,\n       simp add:s_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n        x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y\\<in>K. xa \\<cdot> y = x", "apply (frule sg_unit_closed[of \"H\"],\n       frule_tac h = x in sg_subset_elem[of \"K\"], assumption+,\n       frule_tac a = x in l_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ; x \\<in> K;\n        \\<one> \\<in> H; x \\<in> carrier G; \\<one> \\<cdot> x = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<exists>y\\<in>K. xa \\<cdot> y = x", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) s_topTr8:\"G \\<guillemotright> H \\<Longrightarrow> H = H \\<diamondop>\\<^bsub>G\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow> H = H \\<diamondop> H", "apply (frule l_sub_smult[of \"H\" \"H\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; H \\<subseteq> H \\<diamondop> H\\<rbrakk>\n    \\<Longrightarrow> H = H \\<diamondop> H", "apply (rule equalityI, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; H \\<subseteq> H \\<diamondop> H\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> H \\<subseteq> H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; H \\<subseteq> H \\<diamondop> H;\n        x \\<in> H \\<diamondop> H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H", "apply (thin_tac \"H \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> H\",\n       simp add:s_top_def, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; xa \\<in> H; y \\<in> H;\n        xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H", "apply (frule_tac x = xa and y = y in sg_mult_closed[of \"H\"], assumption+,\n       simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Preliminary lemmas for Zassenhaus\""], ["", "lemma (in Group) Gp_sg_subset:\"\\<lbrakk>G \\<guillemotright> H; Gp G H \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> K \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ;\n     \\<natural>H \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> H", "by (frule Group_Gp[of \"H\"],\n       frule Group.sg_subset[of \"\\<natural>H\" \"K\"], assumption,\n       thin_tac \"(\\<natural>H) \\<guillemotright> K\", thin_tac \"Group (\\<natural>H)\",\n       simp add:Gp_def)"], ["", "lemma (in Group) inter_Gp_nsg:\"\\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk> \\<Longrightarrow> (\\<natural>H) \\<triangleright> (H \\<inter> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<triangleright> H \\<inter> N", "apply (frule Group_Gp[of \"H\"],\n       rule Group.cond_nsg[of \"Gp G H\" \"H \\<inter> N\"], assumption+,\n       frule nsg_sg[of \"N\"], frule inter_sgs[of \"H\" \"N\"], assumption+,\n       rule sg_sg [of \"H\" \"H \\<inter> N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n     Group (\\<natural>H); G \\<guillemotright> N ;\n     G \\<guillemotright> H \\<inter> N \\<rbrakk>\n    \\<Longrightarrow> H \\<inter> N \\<subseteq> H\n 2. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n     Group (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H).\n                         \\<forall>h\\<in>H \\<inter> N.\n                            a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                            \\<in> H \\<inter> N", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n     Group (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H).\n                         \\<forall>h\\<in>H \\<inter> N.\n                            a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                            \\<in> H \\<inter> N", "apply ((rule ballI)+, simp, \n         simp add:Gp_carrier,\n         simp add:Gp_mult_induced[of \"H\"],\n         simp add:sg_i_induced[of \"H\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n        Group (\\<natural>H); a \\<in> H; h \\<in> H \\<and> h \\<in> N\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         \\<rho> a\n                         \\<in> H \\<and>\n                         a \\<cdot> h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         \\<rho> a\n                         \\<in> N", "apply (erule conjE,\n        frule_tac x = a in sg_i_closed[of \"H\"], assumption+,\n        frule_tac x = a and y = h in sg_mult_closed, assumption+,\n        simp add:Gp_mult_induced[of \"H\"],\n        simp add:sg_mult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n        Group (\\<natural>H); a \\<in> H; h \\<in> H; h \\<in> N;\n        \\<rho> a \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> N", "apply (frule_tac h = a in sg_subset_elem[of \"H\"], assumption+,\n        simp add:nsgPr1_1[of \"N\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr0:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Gp G (H \\<inter> K) \\<triangleright> (H \\<inter> K1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter> K \\<triangleright> H \\<inter> K1", "apply (frule inter_sgs[of \"H\" \"K\"], assumption,\n       frule inter_sgs[of \"H\" \"K1\"], assumption,\n       frule Group_Gp[of \"H\"],\n       frule Group_Gp[of \"K\"],\n       frule Group.nsg_sg[of \"\\<natural>H\" \"H1\"], assumption+,\n       frule Group.nsg_sg[of \"\\<natural>K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H \\<inter> K1 ;\n     Group (\\<natural>H); Group (\\<natural>K);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>K \\<guillemotright> K1 \\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter> K \\<triangleright> H \\<inter> K1", "apply (rule Group.cond_nsg[of \"\\<natural>(H \\<inter> K)\" \"H \\<inter> K1\"],\n       simp add:Group_Gp[of \"H \\<inter> K\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H \\<inter> K1 ;\n     Group (\\<natural>H); Group (\\<natural>K);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>K \\<guillemotright> K1 \\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<guillemotright> H \\<inter> K1 \n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H \\<inter> K1 ;\n     Group (\\<natural>H); Group (\\<natural>K);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>K \\<guillemotright> K1 \\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H \\<inter> K).\n                         \\<forall>h\\<in>H \\<inter> K1.\n                            a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                            \\<in> H \\<inter> K1", "apply (rule sg_sg[of \"H \\<inter> K\" \"H \\<inter> K1\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H \\<inter> K1 ;\n     Group (\\<natural>H); Group (\\<natural>K);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>K \\<guillemotright> K1 \\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<subseteq> H \\<inter> K\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H \\<inter> K1 ;\n     Group (\\<natural>H); Group (\\<natural>K);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>K \\<guillemotright> K1 \\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H \\<inter> K).\n                         \\<forall>h\\<in>H \\<inter> K1.\n                            a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                            \\<in> H \\<inter> K1", "apply (frule Gp_sg_subset[of \"K\" \"K1\"], assumption+,\n       rule subsetI, simp add:subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H \\<inter> K1 ;\n     Group (\\<natural>H); Group (\\<natural>K);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>K \\<guillemotright> K1 \\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H \\<inter> K).\n                         \\<forall>h\\<in>H \\<inter> K1.\n                            a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                            \\<in> H \\<inter> K1", "apply ((rule ballI)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K);\n        h \\<in> H \\<and> h \\<in> K1\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> H \\<and>\n                         a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (frule Gp_sg_subset[of \"K\" \"K1\"], assumption+,\n       erule conjE, frule_tac c = h in subsetD[of \"K1\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> H \\<and>\n                         a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> H\n 2. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (simp only:Gp_carrier,\n        subst Gp_mult_induced1[of \"H\" \"K\"], assumption+, simp,\n        simp only:sg_i_induced1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ; a \\<in> H \\<inter> K;\n        K1 \\<subseteq> K; h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                         \\<in> H\n 2. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (frule_tac a = a and b = h in Group.mult_closed[of \"\\<natural>H\"],\n        simp add:Gp_carrier, simp add:Gp_carrier,\n        simp only:Gp_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ; a \\<in> H \\<inter> K;\n        K1 \\<subseteq> K; h \\<in> H; h \\<in> K1; h \\<in> K;\n        a \\<cdot>\\<^bsub>\\<natural>H\\<^esub> h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                         \\<in> H\n 2. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (frule_tac a = a in Group.i_closed[of \"\\<natural>H\"],\n        simp add:Gp_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ; a \\<in> H \\<inter> K;\n        K1 \\<subseteq> K; h \\<in> H; h \\<in> K1; h \\<in> K;\n        a \\<cdot>\\<^bsub>\\<natural>H\\<^esub> h \\<in> H;\n        \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n        \\<in> carrier (\\<natural>H)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                         \\<in> H\n 2. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (simp add:Gp_mult_induced1[of \"H\" \"K\"], simp add:Gp_carrier,\n        subst Gp_mult_induced1[of \"H\" \"K\"], assumption+,\n        simp add:Gp_mult_induced sg_mult_closed,\n        simp add:sg_i_induced sg_i_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ; a \\<in> H \\<and> a \\<in> K;\n        K1 \\<subseteq> K; h \\<in> H; h \\<in> K1; h \\<in> K;\n        a \\<cdot>\\<^bsub>\\<natural>H\\<^esub> h \\<in> H;\n        \\<rho>\\<^bsub>\\<natural>H\\<^esub> a \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                         \\<in> H\n 2. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (simp add:Gp_mult_induced sg_i_induced, simp add:sg_mult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<inter> K\\<^esub> a\n                         \\<in> K1", "apply (subst Gp_mult_induced2[of \"H\" \"K\"], assumption+,\n        simp add:Gp_carrier, simp, subst sg_i_induced2, assumption+,\n        simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>K\\<^esub> a\n                         \\<in> K1", "apply (frule_tac a = a and b = h in Group.mult_closed[of \"\\<natural>K\"],\n        simp add:Gp_carrier, simp add:Gp_carrier,\n        frule_tac a = a in Group.i_closed[of \"\\<natural>K\"], simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K;\n        a \\<cdot>\\<^bsub>\\<natural>K\\<^esub> h \\<in> carrier (\\<natural>K);\n        \\<rho>\\<^bsub>\\<natural>K\\<^esub> a\n        \\<in> carrier (\\<natural>K)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>K\\<^esub> a\n                         \\<in> K1", "apply (subst Gp_mult_induced2, assumption+,\n        simp add:Gp_carrier, simp add:Gp_mult_induced sg_mult_closed,\n        simp add:Gp_carrier, simp add:sg_i_induced sg_i_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H \\<inter> K ;\n        G \\<guillemotright> H \\<inter> K1 ; Group (\\<natural>H);\n        Group (\\<natural>K); \\<natural>H \\<guillemotright> H1 ;\n        \\<natural>K \\<guillemotright> K1 ;\n        a \\<in> carrier (\\<natural>H \\<inter> K); K1 \\<subseteq> K;\n        h \\<in> H; h \\<in> K1; h \\<in> K;\n        a \\<cdot>\\<^bsub>\\<natural>K\\<^esub> h \\<in> carrier (\\<natural>K);\n        \\<rho>\\<^bsub>\\<natural>K\\<^esub> a\n        \\<in> carrier (\\<natural>K)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>K\\<^esub> a\n                         \\<in> K1", "apply (rule_tac a = a and h = h in Group.nsgPr1_1[of \"\\<natural>K\" \"K1\"], assumption+,\n       simp add:Gp_carrier, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) lcs_sub_s_mult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; a \\<in> H\\<rbrakk> \\<Longrightarrow> a \\<diamondsuit> N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     a \\<in> H\\<rbrakk>\n    \\<Longrightarrow> a \\<diamondsuit> N \\<subseteq> H \\<diamondop> N", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> H;\n        x \\<in> a \\<diamondsuit> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<diamondop> N", "apply (simp add:lcs_def s_top_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) rcs_sub_smult:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; a \\<in> H\\<rbrakk> \\<Longrightarrow> N \\<bullet> a \\<subseteq> N \\<diamondop>\\<^bsub>G\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     a \\<in> H\\<rbrakk>\n    \\<Longrightarrow> N \\<bullet> a \\<subseteq> N \\<diamondop> H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> H;\n        x \\<in> N \\<bullet> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N \\<diamondop> H", "apply (simp add:rcs_def s_top_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) smult_commute_sg_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> H \\<diamondop>\\<^bsub>G\\<^esub> N = N \\<diamondop>\\<^bsub>G\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> N = N \\<diamondop> H", "apply (frule nsg_sg[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> N = N \\<diamondop> H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> N \\<subseteq> N \\<diamondop> H\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> N \\<diamondop> H \\<subseteq> H \\<diamondop> N", "apply (rule subsetI,\n        simp add:s_top_def, (erule bexE)+,\n        frule_tac h = xa in sg_subset_elem, assumption+,\n        frule_tac h = y in sg_subset_elem, assumption,\n        frule_tac a = xa and b = y in mult_closed, assumption,\n        frule_tac a = xa in i_closed,\n        frule_tac a = \"xa \\<cdot> y\" and b = \"\\<rho> xa\" and c = xa in tassoc,\n        assumption+,\n        frule sym, thin_tac \"xa \\<cdot> y = x\", simp,\n        thin_tac \"x = xa \\<cdot> y\", simp add:l_i r_unit,\n        frule_tac a = xa and h = y in nsgPr1_1[of \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; xa \\<in> H; y \\<in> N; xa \\<in> carrier G;\n        y \\<in> carrier G; xa \\<cdot> y \\<in> carrier G;\n        \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N.\n                            \\<exists>ya\\<in>H. x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> N \\<diamondop> H \\<subseteq> H \\<diamondop> N", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> N \\<diamondop> H \\<subseteq> H \\<diamondop> N", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; x \\<in> N \\<diamondop> H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<diamondop> N", "apply (simp add:s_top_def, (erule bexE)+,\n        frule_tac h = xa in sg_subset_elem, assumption+,\n        frule_tac h = y in sg_subset_elem, assumption,\n        frule_tac a = xa and b = y in mult_closed, assumption,\n        frule_tac a = y in i_closed,\n        frule_tac a = y and b = \"\\<rho> y\" and c = \"xa \\<cdot> y\" in tassoc,\n        assumption+,\n        frule sym, thin_tac \"xa \\<cdot> y = x\", simp,\n        thin_tac \"x = xa \\<cdot> y\", simp add:r_i l_unit,\n        frule_tac a = y and h = xa in nsgPr2[of \"N\"], assumption+,\n        frule sym, thin_tac \"xa \\<cdot> y = y \\<cdot> (\\<rho> y \\<cdot> (xa \\<cdot> y))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; xa \\<in> N; y \\<in> H; xa \\<in> carrier G;\n        y \\<in> carrier G; xa \\<cdot> y \\<in> carrier G;\n        \\<rho> y \\<in> carrier G; \\<rho> y \\<cdot> (xa \\<cdot> y) \\<in> N;\n        y \\<cdot> (\\<rho> y \\<cdot> (xa \\<cdot> y)) = xa \\<cdot> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H.\n                            \\<exists>ya\\<in>N. x \\<cdot> ya = xa \\<cdot> y", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) smult_sg_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H \\<diamondop> N", "apply (frule  smult_commute_sg_nsg[of \"H\" \"N\"], assumption+,\n       frule nsg_sg[of \"N\"],\n       rule s_top_commute_sg[of \"H\" \"N\"], assumption+,\n       rule sym, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) smult_nsg_sg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> N \\<diamondop>\\<^bsub>G\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> N \\<diamondop> H", "apply (frule smult_commute_sg_nsg[THEN sym, of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     N \\<diamondop> H = H \\<diamondop> N\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> N \\<diamondop> H", "apply (simp add:smult_sg_nsg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Gp_smult_sg_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Group (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>H \\<diamondop> N)", "apply (frule smult_sg_nsg[of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop> N \\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>H \\<diamondop> N)", "apply (simp add:Group_Gp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) N_sg_HN:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<guillemotright> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<diamondop> N \\<guillemotright> N", "apply (frule smult_sg_nsg[of \"H\" \"N\"], assumption+,\n       frule nsg_sg[of \"N\"],\n       frule r_sub_smult[of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop> N ; G \\<guillemotright> N ;\n     N \\<subseteq> H \\<diamondop> N\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<diamondop> N \\<guillemotright> N", "apply (rule sg_sg[of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\" \"N\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) K_absorb_HK:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; H \\<subseteq> K\\<rbrakk> \\<Longrightarrow>  H \\<diamondop>\\<^bsub>G\\<^esub> K = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     H \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K = K", "apply (frule r_sub_smult[of \"H\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     H \\<subseteq> K; K \\<subseteq> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K = K", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     H \\<subseteq> K; K \\<subseteq> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> H \\<diamondop> K \\<subseteq> K\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     H \\<subseteq> K; K \\<subseteq> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> H \\<diamondop> K", "apply (thin_tac \"K \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> K\",\n       rule subsetI, simp add:s_top_def, (erule bexE)+,\n       frule_tac c = xa in subsetD[of \"H\" \"K\"], assumption+,\n       frule_tac x = xa and y = y in sg_mult_closed[of \"K\"], assumption+,\n       simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     H \\<subseteq> K; K \\<subseteq> H \\<diamondop> K\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> H \\<diamondop> K", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) nsg_Gp_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N; N \\<subseteq> H\\<rbrakk> \\<Longrightarrow> Gp G H \\<triangleright> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     N \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<triangleright> N", "apply (frule Group_Gp[of \"H\"],\n       frule nsg_sg[of \"N\"], \n       frule sg_sg[of \"H\" \"N\"], assumption+,\n       rule Group.cond_nsg[of \"\\<natural>H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N; N \\<subseteq> H;\n     Group (\\<natural>H); G \\<guillemotright> N ;\n     \\<natural>H \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H).\n                         \\<forall>h\\<in>N.\n                            a \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H\\<^esub> a\n                            \\<in> N", "apply ((rule ballI)+,\n       frule_tac c = h in subsetD[of \"N\" \"H\"], assumption+,\n       simp add:Gp_carrier,\n       simp add:Gp_mult_induced[of \"H\"] sg_i_induced[of \"H\"] \n                sg_mult_closed sg_i_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        N \\<subseteq> H; Group (\\<natural>H); G \\<guillemotright> N ;\n        \\<natural>H \\<guillemotright> N ; a \\<in> H; h \\<in> N;\n        h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> N", "apply (rule_tac a = a and h = h in nsgPr1_1[of \"N\"], assumption+,\n       rule_tac h = a in sg_subset_elem[of \"H\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Gp_smult_nsg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<triangleright> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<diamondop> N \\<triangleright> N", "apply (frule smult_sg_nsg[of \"H\" \"N\"], assumption+,\n       frule nsg_sg[of \"N\"],\n       frule N_sg_HN[of \"H\" \"N\"], assumption+,\n       frule Gp_smult_sg_nsg[of \"H\" \"N\"], assumption+,\n       rule Group.cond_nsg[of \"\\<natural>(H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop> N ; G \\<guillemotright> N ;\n     \\<natural>H \\<diamondop> N \\<guillemotright> N ;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier (\\<natural>H \\<diamondop> N).\n                         \\<forall>h\\<in>N.\n                            a \\<cdot>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub>\n                            h \\<cdot>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub>\n                            \\<rho>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> a\n                            \\<in> N", "apply ((rule ballI)+,\n       frule_tac a = a in Group.i_closed[of \"\\<natural>(H \\<diamondop>\\<^bsub>G\\<^esub> N)\"], assumption+,\n       simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop> N ; G \\<guillemotright> N ;\n        \\<natural>H \\<diamondop> N \\<guillemotright> N ;\n        Group (\\<natural>H \\<diamondop> N); a \\<in> H \\<diamondop> N;\n        h \\<in> N;\n        \\<rho>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> a\n        \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> a\n                         \\<in> N", "apply (frule r_sub_smult[of \"H\" \"N\"], assumption+,\n       frule_tac c = h in subsetD[of \"N\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+,\n       simp add:Gp_mult_induced[of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"] sg_i_induced[of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop> N ; G \\<guillemotright> N ;\n        \\<natural>H \\<diamondop> N \\<guillemotright> N ;\n        Group (\\<natural>H \\<diamondop> N); a \\<in> H \\<diamondop> N;\n        h \\<in> N; \\<rho> a \\<in> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N; h \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\n                         h \\<cdot>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub>\n                         \\<rho> a\n                         \\<in> N", "apply (frule_tac x = a and y = h in sg_mult_closed[of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+,\n       simp add:Gp_mult_induced)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop> N ; G \\<guillemotright> N ;\n        \\<natural>H \\<diamondop> N \\<guillemotright> N ;\n        Group (\\<natural>H \\<diamondop> N); a \\<in> H \\<diamondop> N;\n        h \\<in> N; \\<rho> a \\<in> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N; h \\<in> H \\<diamondop> N;\n        a \\<cdot> h \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a \\<in> N", "apply (rule_tac a = a and h = h in nsgPr1_1[of \"N\"], assumption+,\n       frule sg_subset[of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], frule_tac c = a in subsetD[of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"\n       \"carrier G\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Gp_smult_nsg1:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> Gp G (N \\<diamondop>\\<^bsub>G\\<^esub> H) \\<triangleright> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<natural>N \\<diamondop> H \\<triangleright> N", "apply (simp add:smult_commute_sg_nsg[THEN sym, of \"H\" \"N\"],\n       simp only:Gp_smult_nsg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_3:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; Gp G H \\<triangleright> H1\\<rbrakk> \\<Longrightarrow> H1 \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<subseteq> H", "apply (frule Group_Gp[of \"H\"],\n       frule Group.nsg_sg[of \"\\<natural>H\" \"H1\"], assumption,\n       frule Group.sg_subset[of \"\\<natural>H\" \"H1\"], assumption, simp add:Gp_carrier)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_4:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; Gp G H \\<triangleright> H1; h \\<in> H; \n               h1 \\<in> H1\\<rbrakk> \\<Longrightarrow> h \\<cdot> h1 \\<cdot> (\\<rho> h) \\<in> H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1\\<rbrakk>\n    \\<Longrightarrow> h \\<cdot> h1 \\<cdot> \\<rho> h \\<in> H1", "apply (frule Group_Gp[of \"H\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> h \\<cdot> h1 \\<cdot> \\<rho> h \\<in> H1", "apply (frule_tac a = h and h = h1 in Group.nsgPr1_1[of \"\\<natural>H\" \"H1\"], assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> h \\<in> carrier (\\<natural>H)\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> h1 \\<in> H1\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H);\n     h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n     h1 \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n     \\<rho>\\<^bsub>\\<natural>H\\<^esub> h\n     \\<in> H1\\<rbrakk>\n    \\<Longrightarrow> h \\<cdot> h1 \\<cdot> \\<rho> h \\<in> H1", "apply (simp add:Gp_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> h1 \\<in> H1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H);\n     h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n     h1 \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n     \\<rho>\\<^bsub>\\<natural>H\\<^esub> h\n     \\<in> H1\\<rbrakk>\n    \\<Longrightarrow> h \\<cdot> h1 \\<cdot> \\<rho> h \\<in> H1", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     \\<natural>H \\<triangleright> H1; h \\<in> H; h1 \\<in> H1;\n     Group (\\<natural>H);\n     h \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n     h1 \\<cdot>\\<^bsub>\\<natural>H\\<^esub>\n     \\<rho>\\<^bsub>\\<natural>H\\<^esub> h\n     \\<in> H1\\<rbrakk>\n    \\<Longrightarrow> h \\<cdot> h1 \\<cdot> \\<rho> h \\<in> H1", "apply (simp add:Gp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) = (H \\<inter> K1) \\<diamondop>\\<^bsub>G\\<^esub> H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K1 =\n                      H \\<inter> K1 \\<diamondop> H1", "apply (frule Group_Gp[of \"H\"],\n       frule Group.nsg_sg[of \"\\<natural>H\" \"H1\"], assumption,\n       frule Group.sg_subset[of \"\\<natural>H\" \"H1\"], assumption, simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K1 =\n                      H \\<inter> K1 \\<diamondop> H1", "apply (frule Group_Gp[of \"K\"],\n       frule Group.nsg_sg[of \"\\<natural>K\" \"K1\"], assumption,\n       frule Group.sg_subset[of \"\\<natural>K\" \"K1\"], assumption, simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K1 =\n                      H \\<inter> K1 \\<diamondop> H1", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K1\n                      \\<subseteq> H \\<inter> K1 \\<diamondop> H1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K1", "apply (rule subsetI,\n        simp add:s_top_def, (erule bexE)+,\n        frule_tac h = xa in sg_subset_elem[of \"H1\"], assumption+,\n        frule_tac h = y in sg_subset_elem[of \"H\"], simp,\n        frule_tac a = y in i_closed,\n        frule_tac a = xa and b = y in mult_closed, assumption+,\n        frule_tac a1 = y and b1 = \"\\<rho> y\" and c1 = \"xa \\<cdot> y\" in tassoc[THEN sym],\n        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K; xa \\<in> H1;\n        y \\<in> H \\<inter> K1; xa \\<cdot> y = x; xa \\<in> carrier G;\n        y \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        xa \\<cdot> y \\<in> carrier G;\n        y \\<cdot> (\\<rho> y \\<cdot> (xa \\<cdot> y)) =\n        y \\<cdot> \\<rho> y \\<cdot> (xa \\<cdot> y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H \\<inter> K1.\n                            \\<exists>y\\<in>H1. xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K1", "apply (frule sym, thin_tac \"xa \\<cdot> y = x\", simp, thin_tac \"x = xa \\<cdot> y\",\n        simp add:r_i l_unit,\n        frule_tac x = y in sg_i_closed[of \"H\"], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K; xa \\<in> H1;\n        y \\<in> H \\<and> y \\<in> K1; xa \\<in> carrier G; y \\<in> carrier G;\n        \\<rho> y \\<in> carrier G; xa \\<cdot> y \\<in> carrier G;\n        y \\<cdot> (\\<rho> y \\<cdot> (xa \\<cdot> y)) = xa \\<cdot> y;\n        \\<rho> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H \\<inter> K1.\n                            \\<exists>ya\\<in>H1. x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K1", "apply (frule_tac a1 = \"\\<rho> y\" and b1 = xa and c1 = y in tassoc[THEN sym],\n         assumption+, simp, thin_tac \"\\<rho> y \\<cdot> (xa \\<cdot> y) = \\<rho> y \\<cdot> xa \\<cdot> y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K; xa \\<in> H1;\n        y \\<in> H \\<and> y \\<in> K1; xa \\<in> carrier G; y \\<in> carrier G;\n        \\<rho> y \\<in> carrier G; xa \\<cdot> y \\<in> carrier G;\n        y \\<cdot> (\\<rho> y \\<cdot> xa \\<cdot> y) = xa \\<cdot> y;\n        \\<rho> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H \\<inter> K1.\n                            \\<exists>ya\\<in>H1. x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K1", "apply (frule_tac h = \"\\<rho> y\" and ?h1.0 = xa in ZassenhausTr2_4[of \"H\" \"H1\"],\n                assumption+, simp add:iop_i_i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K; xa \\<in> H1;\n        y \\<in> H \\<and> y \\<in> K1; xa \\<in> carrier G; y \\<in> carrier G;\n        \\<rho> y \\<in> carrier G; xa \\<cdot> y \\<in> carrier G;\n        y \\<cdot> (\\<rho> y \\<cdot> xa \\<cdot> y) = xa \\<cdot> y;\n        \\<rho> y \\<in> H; \\<rho> y \\<cdot> xa \\<cdot> y \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H \\<inter> K1.\n                            \\<exists>ya\\<in>H1. x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K1", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n     H1 \\<subseteq> H; Group (\\<natural>K);\n     \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K1", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n        x \\<in> H \\<inter> K1 \\<diamondop> H1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H1 \\<diamondop> H \\<inter> K1", "apply (simp add:s_top_def, (erule bexE)+,\n        frule_tac h = xa in sg_subset_elem[of \"H\"], simp,\n        frule_tac h = y in sg_subset_elem[of \"H1\"], assumption,\n        frule sym, thin_tac \"xa \\<cdot> y = x\", simp, thin_tac \"x = xa \\<cdot> y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n        xa \\<in> H \\<and> xa \\<in> K1; y \\<in> H1; xa \\<in> carrier G;\n        y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule_tac a = xa in i_closed,\n       frule_tac a = xa and b = y in mult_closed, assumption+,\n       frule_tac a = \"xa \\<cdot> y\" and b = \"\\<rho> xa\" and c = xa in tassoc, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        Group (\\<natural>H); \\<natural>H \\<guillemotright> H1 ;\n        H1 \\<subseteq> H; Group (\\<natural>K);\n        \\<natural>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n        xa \\<in> H \\<and> xa \\<in> K1; y \\<in> H1; xa \\<in> carrier G;\n        y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa =\n        xa \\<cdot> y \\<cdot> (\\<rho> xa \\<cdot> xa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (simp add:l_i r_unit,\n       frule_tac h = xa and ?h1.0 = y in ZassenhausTr2_4[of \"H\" \"H1\"],\n                assumption+, simp, assumption, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr1_1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1", "apply (rule s_top_commute_sg, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H \\<inter> K1 \n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1 =\n                      H1 \\<diamondop> H \\<inter> K1", "apply (simp add:inter_sgs[of \"H\" \"K1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<diamondop> H1 =\n                      H1 \\<diamondop> H \\<inter> K1", "apply (rule ZassenhausTr1 [THEN sym, of \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; Gp G H \\<triangleright> H1\\<rbrakk> \\<Longrightarrow>\n                                  H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K) = (H \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; \\<natural>H \\<triangleright> H1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K =\n                      H \\<inter> K \\<diamondop> H1", "apply (frule special_nsg_G1[of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K =\n                      H \\<inter> K \\<diamondop> H1", "apply (simp add: ZassenhausTr1 [of \"H\" \"H1\" \"K\" \"K\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; Gp G H \\<triangleright> H1\\<rbrakk>\n  \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; \\<natural>H \\<triangleright> H1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop> H \\<inter> K", "apply (frule ZassenhausTr2 [of \"H\" \"H1\" \"K\"], assumption+,\n       frule inter_sgs [of \"H\" \"K\"], assumption+,\n       rule s_top_commute_sg, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; \\<natural>H \\<triangleright> H1;\n     H1 \\<diamondop> H \\<inter> K = H \\<inter> K \\<diamondop> H1;\n     G \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K \\<diamondop> H1 =\n                      H1 \\<diamondop> H \\<inter> K", "apply (rule sym, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1;\n       Gp G H \\<triangleright> H1; Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) \\<subseteq>  H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K", "apply (frule Group_Gp[of \"K\"],\n       frule Group.nsg_sg[of \"\\<natural>K\" \"K1\"], assumption,\n       frule Group.sg_subset[of \"\\<natural>K\" \"K1\"], assumption, simp add:Gp_carrier,\n       frule Group_Gp[of \"H\"],\n       frule Group.nsg_sg[of \"\\<natural>H\" \"H1\"], assumption,\n       frule Group.sg_subset[of \"\\<natural>H\" \"H1\"], assumption, simp add:Gp_carrier,\n       frule sg_subset[of \"H\"], frule sg_subset[of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     Group (\\<natural>K); \\<natural>K \\<guillemotright> K1 ;\n     K1 \\<subseteq> K; Group (\\<natural>H);\n     \\<natural>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     H \\<subseteq> carrier G; K \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K1\n                      \\<subseteq> H1 \\<diamondop> H \\<inter> K", "apply (rule s_top_mono[of \"H1\" \"H \\<inter> K\" \"H1\" \"H \\<inter> K1\"],\n       rule subset_trans[of \"H1\" \"H\" \"carrier G\"], assumption+,\n       blast, simp, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_5:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n      Gp G K \\<triangleright> K1; a\\<in> H1; b \\<in> H \\<inter> K1; c \\<in> H1\\<rbrakk> \\<Longrightarrow>\n                      a \\<cdot> b \\<cdot> c \\<in> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; b \\<in> H \\<inter> K1; c \\<in> H1\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<cdot> c\n                      \\<in> H1 \\<diamondop> H \\<inter> K1", "apply (simp, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<cdot> c\n                      \\<in> H1 \\<diamondop> H \\<inter> K1", "apply (frule sg_subset_elem[of \"H1\" \"a\"], assumption+, \n       frule sg_subset_elem[of \"H1\" \"c\"], assumption+,\n       frule sg_subset_elem[of \"H\" \"b\"], assumption+,\n       frule i_closed[of \"b\"],\n       frule mult_closed[of \"a\" \"b\"], assumption+,\n       frule mult_closed[of \"a \\<cdot> b\" \"c\"], assumption+,\n       frule tassoc[of \"a \\<cdot> b \\<cdot> c\" \"\\<rho> b\" \"b\"], assumption+,\n       simp add:l_i r_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n     a \\<cdot> b \\<cdot> c\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<cdot> c\n                      \\<in> H1 \\<diamondop> H \\<inter> K1", "apply (rule eq_elem_in[of \"a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\" \"a \\<cdot> b \\<cdot> c\"],\n       thin_tac \"a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b = a \\<cdot> b \\<cdot> c\",\n       frule inter_sgs[of \"H\" \"K1\"], assumption+,\n       rule s_top_elem[of \"H1\" \"H \\<inter> K1\" \"a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \" \"b\"], assumption+,\n       subst tOp_assocTr42, assumption+,\n       frule mult_closed[of \"b\" \"c\"], assumption+,\n       simp add:tassoc[of \"a\" \"b \\<cdot> c\" \"\\<rho> b\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     G \\<guillemotright> H \\<inter> K1 ;\n     b \\<cdot> c \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> (b \\<cdot> c \\<cdot> \\<rho> b) \\<in> H1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     G \\<guillemotright> H \\<inter> K1 \\<rbrakk>\n    \\<Longrightarrow> b \\<in> H \\<inter> K1\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n     a \\<cdot> b \\<cdot> c\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n                      a \\<cdot> b \\<cdot> c", "apply (rule sg_mult_closed[of \"H1\" \"a\" \"b \\<cdot> c \\<cdot> \\<rho> b\"], assumption+,\n       rule ZassenhausTr2_4[of \"H\" \"H1\" \"b\" \"c\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     G \\<guillemotright> H \\<inter> K1 \\<rbrakk>\n    \\<Longrightarrow> b \\<in> H \\<inter> K1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n     a \\<cdot> b \\<cdot> c\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n                      a \\<cdot> b \\<cdot> c", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     a \\<in> H1; c \\<in> H1; b \\<in> H; b \\<in> K1; a \\<in> carrier G;\n     c \\<in> carrier G; b \\<in> carrier G; \\<rho> b \\<in> carrier G;\n     a \\<cdot> b \\<in> carrier G; a \\<cdot> b \\<cdot> c \\<in> carrier G;\n     a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n     a \\<cdot> b \\<cdot> c\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> b \\<cdot> c \\<cdot> \\<rho> b \\<cdot> b =\n                      a \\<cdot> b \\<cdot> c", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_6:\"\\<lbrakk>u \\<in> carrier G; v \\<in> carrier G;  \n       x \\<in> carrier G; y \\<in> carrier G\\<rbrakk> \\<Longrightarrow> \n       (u \\<cdot> v) \\<cdot> (x \\<cdot> y) \\<cdot> (\\<rho> (u \\<cdot> v)) = \n                          u \\<cdot> v \\<cdot> x \\<cdot> (\\<rho> v) \\<cdot> (v \\<cdot> y \\<cdot> (\\<rho> v)) \\<cdot> (\\<rho> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot>\n                      \\<rho> (u \\<cdot> v) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y \\<cdot> \\<rho> v) \\<cdot>\n                      \\<rho> u", "apply (simp add:i_ab)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot>\n                      (\\<rho> v \\<cdot> \\<rho> u) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y \\<cdot> \\<rho> v) \\<cdot>\n                      \\<rho> u", "apply (frule i_closed[of \"u\"], frule i_closed[of \"v\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G;\n     \\<rho> v \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot>\n                      (\\<rho> v \\<cdot> \\<rho> u) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y \\<cdot> \\<rho> v) \\<cdot>\n                      \\<rho> u", "apply (frule mult_closed[of \"u\" \"v\"], assumption+,\n       frule mult_closed[of \"u \\<cdot> v\" \"x\"], assumption+,\n       frule mult_closed[of \"v\" \"y\"], assumption+,\n       frule mult_closed[of \"v \\<cdot> y\" \"\\<rho> v\"], assumption+,\n       frule mult_closed[of \"u \\<cdot> v \\<cdot> x\" \"\\<rho> v\"], assumption+,\n       simp add:tOp_assocTr42[THEN sym, of \"u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \" \n                               \"v \\<cdot> y\" \"\\<rho> v\" \"\\<rho> u\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G; \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<in> carrier G; u \\<cdot> v \\<cdot> x \\<in> carrier G;\n     v \\<cdot> y \\<in> carrier G;\n     v \\<cdot> y \\<cdot> \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot>\n                      (\\<rho> v \\<cdot> \\<rho> u) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y) \\<cdot>\n                      \\<rho> v \\<cdot>\n                      \\<rho> u", "apply (frule mult_closed[of \"x\" \"y\"], assumption+,\n       frule mult_closed[of \"u \\<cdot> v\" \"x \\<cdot> y\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G; \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<in> carrier G; u \\<cdot> v \\<cdot> x \\<in> carrier G;\n     v \\<cdot> y \\<in> carrier G;\n     v \\<cdot> y \\<cdot> \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<in> carrier G;\n     x \\<cdot> y \\<in> carrier G;\n     u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot>\n                      (\\<rho> v \\<cdot> \\<rho> u) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y) \\<cdot>\n                      \\<rho> v \\<cdot>\n                      \\<rho> u", "apply (simp add:tassoc[THEN sym, of \"u \\<cdot> v \\<cdot> (x \\<cdot> y)\" \"\\<rho> v\" \"\\<rho> u\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G; \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<in> carrier G; u \\<cdot> v \\<cdot> x \\<in> carrier G;\n     v \\<cdot> y \\<in> carrier G;\n     v \\<cdot> y \\<cdot> \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<in> carrier G;\n     x \\<cdot> y \\<in> carrier G;\n     u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot>\n                      \\<rho> v \\<cdot>\n                      \\<rho> u =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y) \\<cdot>\n                      \\<rho> v \\<cdot>\n                      \\<rho> u", "apply (rule r_mult_eqn[of _ _ \"\\<rho> u\"],\n       rule mult_closed[of \"u \\<cdot> v \\<cdot> (x \\<cdot> y)\" \"\\<rho> v\"], assumption+,\n       (rule mult_closed)+, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G; \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<in> carrier G; u \\<cdot> v \\<cdot> x \\<in> carrier G;\n     v \\<cdot> y \\<in> carrier G;\n     v \\<cdot> y \\<cdot> \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<in> carrier G;\n     x \\<cdot> y \\<in> carrier G;\n     u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<cdot> \\<rho> v =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y) \\<cdot>\n                      \\<rho> v", "apply (rule r_mult_eqn[of _ _ \"\\<rho> v\"], assumption+,\n       (rule mult_closed)+, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G; \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<in> carrier G; u \\<cdot> v \\<cdot> x \\<in> carrier G;\n     v \\<cdot> y \\<in> carrier G;\n     v \\<cdot> y \\<cdot> \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<in> carrier G;\n     x \\<cdot> y \\<in> carrier G;\n     u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<cdot>\n                      (v \\<cdot> y)", "apply (simp add:tOp_assocTr41[THEN sym, of \"u \\<cdot> v \\<cdot> x\" \"\\<rho> v\" \"v\" \"y\"],\n       simp add:tOp_assocTr42[of \"u \\<cdot> v \\<cdot> x\" \"\\<rho> v\" \"v\" \"y\"],\n       simp add:l_i r_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> carrier G; v \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G; \\<rho> u \\<in> carrier G; \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<in> carrier G; u \\<cdot> v \\<cdot> x \\<in> carrier G;\n     v \\<cdot> y \\<in> carrier G;\n     v \\<cdot> y \\<cdot> \\<rho> v \\<in> carrier G;\n     u \\<cdot> v \\<cdot> x \\<cdot> \\<rho> v \\<in> carrier G;\n     x \\<cdot> y \\<in> carrier G;\n     u \\<cdot> v \\<cdot> (x \\<cdot> y) \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot> v \\<cdot> (x \\<cdot> y) =\n                      u \\<cdot> v \\<cdot> x \\<cdot> y", "apply (simp add:tOp_assocTr41)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr2_7:\"\\<lbrakk>a \\<in> carrier G; x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> a \\<cdot> ( x \\<cdot> y) \\<cdot> (\\<rho> a) = a \\<cdot> x \\<cdot> (\\<rho> a) \\<cdot> (a \\<cdot> y \\<cdot> (\\<rho> a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier G; x \\<in> carrier G;\n     y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> (x \\<cdot> y) \\<cdot> \\<rho> a =\n                      a \\<cdot> x \\<cdot> \\<rho> a \\<cdot>\n                      (a \\<cdot> y \\<cdot> \\<rho> a)", "apply (frule i_closed[of \"a\"], \n       frule mult_closed[of \"a\" \"y\"], assumption+,\n       frule mult_closed[of \"a \\<cdot> y\" \"\\<rho> a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier G; x \\<in> carrier G; y \\<in> carrier G;\n     \\<rho> a \\<in> carrier G; a \\<cdot> y \\<in> carrier G;\n     a \\<cdot> y \\<cdot> \\<rho> a \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> a \\<cdot> (x \\<cdot> y) \\<cdot> \\<rho> a =\n                      a \\<cdot> x \\<cdot> \\<rho> a \\<cdot>\n                      (a \\<cdot> y \\<cdot> \\<rho> a)", "apply (simp add:tOp_assocTr41[of \"a\" \"x\" \"\\<rho> a\" \"a \\<cdot> y \\<cdot> (\\<rho> a)\"],\n       simp add:tassoc[THEN sym, of \"\\<rho> a\" \"a \\<cdot> y\" \"\\<rho> a\"],\n       simp add:tassoc[THEN sym, of \"\\<rho> a\" \"a\" \"y\"] l_i l_unit,\n       simp add:tOp_assocTr41[THEN sym],\n       simp add:tOp_assocTr42[THEN sym])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr3:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n              Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>  Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)) \\<triangleright> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H1 \\<diamondop> H \\<inter>\n          K \\<triangleright> H1 \\<diamondop> H \\<inter> K1", "apply (frule ZassenhausTr2_1 [of \"H\" \"H1\" \"K\"], assumption+,\n       frule ZassenhausTr2_1 [of \"H\" \"H1\" \"K1\"], assumption+,\n       frule ZassenhausTr2_2 [of \"H\" \"H1\" \"K\" \"K1\"], assumption+,\n       frule sg_sg [of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)\"], assumption+,\n       frule Group_Gp[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n     G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n     H1 \\<diamondop> H \\<inter> K1 \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n     \\<natural>H1 \\<diamondop> H \\<inter>\n                               K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                             K1 ;\n     Group (\\<natural>H1 \\<diamondop> H \\<inter> K)\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H1 \\<diamondop> H \\<inter>\n          K \\<triangleright> H1 \\<diamondop> H \\<inter> K1", "apply (rule Group.cond_nsg[of \"\\<natural>(H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K)\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\"], assumption+,\n       (rule ballI)+,\n       simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K);\n        a \\<in> H1 \\<diamondop> H \\<inter> K;\n        h \\<in> H1 \\<diamondop> H \\<inter> K1\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>\\<natural>H1 \\<diamondop> H \\<inter> K\\<^esub>\n                         h \\<cdot>\\<^bsub>\\<natural>H1 \\<diamondop> H \\<inter> K\\<^esub>\n                         \\<rho>\\<^bsub>\\<natural>H1 \\<diamondop> H \\<inter> K\\<^esub> a\n                         \\<in> H1 \\<diamondop> H \\<inter> K1", "apply (frule_tac c = h in subsetD[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"],\n            assumption+,\n        simp add:Gp_mult_induced[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"],\n        simp add:sg_i_induced[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"],\n        frule_tac x = a in sg_i_closed[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"], assumption+,\n        frule_tac x = a and y = h in sg_mult_closed[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"], \n        assumption+,\n        simp add:Gp_mult_induced[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"],\n        thin_tac \"\\<rho> a \\<in> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\", thin_tac \"a \\<cdot> h \\<in> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K);\n        a \\<in> H1 \\<diamondop> H \\<inter> K;\n        h \\<in> H1 \\<diamondop> H \\<inter> K1;\n        h \\<in> H1 \\<diamondop> H \\<inter> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot> h \\<cdot> \\<rho> a\n                         \\<in> H1 \\<diamondop> H \\<inter> K1", "apply (simp add:s_top_def[of \"G\" \"H1\" \"H \\<inter> K\"], (erule bexE)+,\n        simp add:s_top_def[of \"G\" \"H1\" \"H \\<inter> K1\"], fold s_top_def,\n       (erule bexE)+, thin_tac \"xa \\<cdot> ya = h\", (erule conjE)+,\n        thin_tac \"xa \\<in> H1\", thin_tac \"ya \\<in> H\",\n        frule sym, thin_tac \"x \\<cdot> y = a\", \n        frule sym, thin_tac \"xb \\<cdot> yb = h\", simp, (erule conjE)+,\n        thin_tac \"a = x \\<cdot> y\", thin_tac \"h = xb \\<cdot> yb\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               xa \\<cdot> ya =\n                               x \\<cdot> y \\<cdot> (xb \\<cdot> yb) \\<cdot>\n                               \\<rho> (x \\<cdot> y)", "apply (frule_tac h = x in sg_subset_elem[of \"H1\"], assumption+,\n        frule_tac h = y in sg_subset_elem[of \"H\"], assumption+,\n        frule_tac h = xb in sg_subset_elem[of \"H1\"], assumption+,\n        frule_tac h = yb in sg_subset_elem[of \"H\"], assumption+,\n        subst ZassenhausTr2_6, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               xa \\<cdot> ya =\n                               x \\<cdot> y \\<cdot> xb \\<cdot>\n                               \\<rho> y \\<cdot>\n                               (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n                               \\<rho> x", "apply (frule_tac a = y and b = xb in mult_closed, assumption+,\n       frule_tac a = y in i_closed,\n       frule_tac a = \"y \\<cdot> xb\" and b = \"\\<rho> y\" in mult_closed, assumption+,\n       frule_tac a = x and b = \"y \\<cdot> xb \\<cdot> \\<rho> y\" in mult_closed, assumption+,\n       frule_tac a = y and b = yb in mult_closed, assumption+,\n       frule_tac a = \"y \\<cdot> yb\" and b = \"\\<rho> y\" in mult_closed, assumption+,\n       frule_tac a = \"x \\<cdot> y \\<cdot> xb \\<cdot> \\<rho> y\" and b = \"y \\<cdot> yb \\<cdot> \\<rho> y\" and c = \"\\<rho> x\" \n        in ZassenhausTr2_5[of \"H\" \"H1\" \"K\" \"K1\"], assumption+,\n       frule_tac a = x and b = y in mult_closed, assumption+,\n       frule_tac a = \"x \\<cdot> y\" and b = xb and c = \"\\<rho> y\" in tassoc, assumption+,\n       simp, thin_tac \"x \\<cdot> y \\<cdot> xb \\<cdot> \\<rho> y = x \\<cdot> y \\<cdot> (xb \\<cdot> \\<rho> y)\",\n       frule_tac a = xb and b = \"\\<rho> y\" in mult_closed, assumption+,\n              simp add:tassoc)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> (xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> (xb \\<cdot> \\<rho> y)) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> (yb \\<cdot> \\<rho> y) \\<in> carrier G;\n        x \\<cdot> y \\<in> carrier G;\n        xb \\<cdot> \\<rho> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot> (y \\<cdot> (xb \\<cdot> \\<rho> y))\n                         \\<in> H1\n 2. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> y \\<cdot> yb \\<cdot> \\<rho> y \\<in> H \\<inter> K1\n 3. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<rho> x \\<in> H1\n 4. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> y \\<cdot> xb \\<cdot> \\<rho> y \\<cdot>\n        (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n        \\<rho> x\n        \\<in> H1 \\<diamondop> H \\<inter> K1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               xa \\<cdot> ya =\n                               x \\<cdot> y \\<cdot> xb \\<cdot>\n                               \\<rho> y \\<cdot>\n                               (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n                               \\<rho> x", "apply (rule_tac x = x and y = \"y \\<cdot> (xb \\<cdot> \\<rho> y)\" in sg_mult_closed, assumption+,\n       simp add:tassoc[THEN sym],\n       rule_tac h = y and ?h1.0 = xb in ZassenhausTr2_4[of \"H\" \"H1\"],\n            assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> y \\<cdot> yb \\<cdot> \\<rho> y \\<in> H \\<inter> K1\n 2. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<rho> x \\<in> H1\n 3. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> y \\<cdot> xb \\<cdot> \\<rho> y \\<cdot>\n        (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n        \\<rho> x\n        \\<in> H1 \\<diamondop> H \\<inter> K1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               xa \\<cdot> ya =\n                               x \\<cdot> y \\<cdot> xb \\<cdot>\n                               \\<rho> y \\<cdot>\n                               (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n                               \\<rho> x", "apply (frule_tac x = y and y = yb in sg_mult_closed[of \"H\"], assumption+,\n       frule_tac x = y in sg_i_closed[of \"H\"], assumption+,\n       frule_tac x = \"y \\<cdot> yb\" and y = \"\\<rho> y\" in sg_mult_closed[of \"H\"], \n       assumption+, simp,\n       rule_tac h = y and ?h1.0 = yb in ZassenhausTr2_4[of \"K\" \"K1\"],\n            assumption+,\n       rule_tac x = x in sg_i_closed[of \"H1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h x y ya xb yb.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n        G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n        H1 \\<diamondop> H \\<inter> K1\n        \\<subseteq> H1 \\<diamondop> H \\<inter> K;\n        \\<natural>H1 \\<diamondop> H \\<inter>\n                                  K \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                                K1 ;\n        Group (\\<natural>H1 \\<diamondop> H \\<inter> K); x \\<in> H1;\n        xb \\<in> H1; y \\<in> H; y \\<in> K; ya \\<in> K; yb \\<in> H;\n        yb \\<in> K1; x \\<in> carrier G; y \\<in> carrier G;\n        xb \\<in> carrier G; yb \\<in> carrier G;\n        y \\<cdot> xb \\<in> carrier G; \\<rho> y \\<in> carrier G;\n        y \\<cdot> xb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> (y \\<cdot> xb \\<cdot> \\<rho> y) \\<in> carrier G;\n        y \\<cdot> yb \\<in> carrier G;\n        y \\<cdot> yb \\<cdot> \\<rho> y \\<in> carrier G;\n        x \\<cdot> y \\<cdot> xb \\<cdot> \\<rho> y \\<cdot>\n        (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n        \\<rho> x\n        \\<in> H1 \\<diamondop> H \\<inter> K1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               xa \\<cdot> ya =\n                               x \\<cdot> y \\<cdot> xb \\<cdot>\n                               \\<rho> y \\<cdot>\n                               (y \\<cdot> yb \\<cdot> \\<rho> y) \\<cdot>\n                               \\<rho> x", "apply (simp add:s_top_def[of \"G\" \"H1\" \"H \\<inter> K1\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr3_2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n              Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop> H \\<inter>\n                    K1 \\<diamondop> H \\<inter> K", "apply (frule s_top_assoc[of \"H1\" \"H \\<inter> K1\" \"H \\<inter> K\"],\n       (simp add:inter_sgs)+,\n       frule inter_sgs[of \"H\" \"K1\"], assumption+,\n       frule inter_sgs[of \"H\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     H1 \\<diamondop> H \\<inter> K1 \\<diamondop> H \\<inter> K =\n     H1 \\<diamondop> (H \\<inter> K1 \\<diamondop> H \\<inter> K);\n     G \\<guillemotright> H \\<inter> K1 ;\n     G \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H1 \\<diamondop> (H \\<inter>\n                     K1 \\<diamondop> H \\<inter> K)", "apply (frule K_absorb_HK[of \"H \\<inter> K1\" \"H \\<inter> K\"], assumption+,\n        frule ZassenhausTr2_3[of \"K\" \"K1\"], assumption+, blast,\n        simp, simp add:ZassenhausTr2_1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr3_3:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1) = (K1 \\<inter> H) \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H \\<inter> K1 =\n                      K1 \\<inter> H \\<diamondop> K \\<inter> H1", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<inter> K \\<diamondop> H \\<inter> K1\n                      \\<subseteq> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (rule subsetI, simp add:s_top_def, (erule bexE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        xa \\<in> H1 \\<inter> K; y \\<in> H \\<inter> K1;\n        xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>K1 \\<inter> H.\n                            \\<exists>y\\<in>K \\<inter> H1. xa \\<cdot> y = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (frule sym, thin_tac \"xa \\<cdot> y = x\", simp, (erule conjE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> H1; xa \\<in> K; y \\<in> H;\n        y \\<in> K1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>K1 \\<inter> H.\n                            \\<exists>ya\\<in>K \\<inter> H1.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (frule_tac h = xa in sg_subset_elem[of \"H1\"], assumption+,\n        frule_tac h = y in sg_subset_elem[of \"K1\"], assumption+,\n        frule_tac a = xa in i_closed,\n        frule_tac a = xa and b = y and c = \"\\<rho> xa\" and d = xa in tOp_assocTr41,\n        assumption+,\n        frule_tac a = xa and b = y in mult_closed, assumption,\n        simp add:l_i r_unit)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> H1; xa \\<in> K; y \\<in> H; y \\<in> K1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>K1 \\<inter> H.\n                            \\<exists>ya\\<in>K \\<inter> H1.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (frule_tac h = xa and ?h1.0 = y in ZassenhausTr2_4[of \"K\" \"K1\"],\n        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> H1; xa \\<in> K; y \\<in> H; y \\<in> K1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> K1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>K1 \\<inter> H.\n                            \\<exists>ya\\<in>K \\<inter> H1.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (frule ZassenhausTr2_3[of \"H\" \"H1\"], assumption+,\n        frule_tac c = xa in subsetD[of \"H1\" \"H\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> H1; xa \\<in> K; y \\<in> H; y \\<in> K1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> K1; H1 \\<subseteq> H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>K1 \\<inter> H.\n                            \\<exists>ya\\<in>K \\<inter> H1.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (frule_tac x = xa and y = y in sg_mult_closed[of \"H\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> H1; xa \\<in> K; y \\<in> H; y \\<in> K1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> K1; H1 \\<subseteq> H;\n        xa \\<in> H; xa \\<cdot> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>K1 \\<inter> H.\n                            \\<exists>ya\\<in>K \\<inter> H1.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (frule_tac x = xa in sg_i_closed[of \"H\"], assumption+,\n        frule_tac x = \"xa \\<cdot> y\" and y = \"\\<rho> xa\" in sg_mult_closed[of \"H\"],\n                       assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> H1; xa \\<in> K; y \\<in> H; y \\<in> K1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> K1; H1 \\<subseteq> H;\n        xa \\<in> H; xa \\<cdot> y \\<in> H; \\<rho> xa \\<in> H;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>K1 \\<inter> H.\n                            \\<exists>ya\\<in>K \\<inter> H1.\n                               x \\<cdot> ya = xa \\<cdot> y\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> K1 \\<inter> H \\<diamondop> K \\<inter> H1\n                      \\<subseteq> H1 \\<inter> K \\<diamondop> H \\<inter> K1", "apply (rule subsetI, simp add:s_top_def, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        xa \\<in> K1 \\<inter> H; y \\<in> K \\<inter> H1;\n        xa \\<cdot> y = x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H1 \\<inter> K.\n                            \\<exists>y\\<in>H \\<inter> K1. xa \\<cdot> y = x", "apply (frule sym, thin_tac \"xa \\<cdot> y = x\", simp, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K;\n        y \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule_tac h = xa in sg_subset_elem[of \"K1\"], assumption+,\n        frule_tac h = y in sg_subset_elem[of \"H1\"], assumption+,\n        frule_tac a = xa in i_closed,\n        frule_tac a = xa and b = y and c = \"\\<rho> xa\" and d = xa in tOp_assocTr41,\n        assumption+,\n        frule_tac a = xa and b = y in mult_closed, assumption,\n        simp add:l_i r_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K; y \\<in> H1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule_tac h = xa and ?h1.0 = y in ZassenhausTr2_4[of \"H\" \"H1\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K; y \\<in> H1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> H1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule ZassenhausTr2_3[of \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K; y \\<in> H1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> H1; K1 \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule_tac c = xa in subsetD[of \"K1\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K; y \\<in> H1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> H1; K1 \\<subseteq> K;\n        xa \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule_tac x = xa and y = y in sg_mult_closed[of \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K; y \\<in> H1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> H1; K1 \\<subseteq> K;\n        xa \\<in> K; xa \\<cdot> y \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply (frule_tac x = xa in sg_i_closed[of \"K\"], assumption+,\n        frule_tac x = \"xa \\<cdot> y\" and y = \"\\<rho> xa\" in sg_mult_closed[of \"K\"],\n                       assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n        G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n        \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n        x = xa \\<cdot> y; xa \\<in> K1; xa \\<in> H; y \\<in> K; y \\<in> H1;\n        xa \\<in> carrier G; y \\<in> carrier G; \\<rho> xa \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<cdot> xa = xa \\<cdot> y;\n        xa \\<cdot> y \\<in> carrier G;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> H1; K1 \\<subseteq> K;\n        xa \\<in> K; xa \\<cdot> y \\<in> K; \\<rho> xa \\<in> K;\n        xa \\<cdot> y \\<cdot> \\<rho> xa \\<in> K\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>H1 \\<inter> K.\n                            \\<exists>ya\\<in>H \\<inter> K1.\n                               x \\<cdot> ya = xa \\<cdot> y", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr3_4:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1; g \\<in> H \\<inter> K; h \\<in> H \\<inter> K1\\<rbrakk> \\<Longrightarrow> g \\<cdot> h \\<cdot> (\\<rho> g) \\<in> H \\<inter> K1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     g \\<in> H \\<inter> K; h \\<in> H \\<inter> K1\\<rbrakk>\n    \\<Longrightarrow> g \\<cdot> h \\<cdot> \\<rho> g \\<in> H \\<inter> K1", "apply (simp, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     g \\<in> H; g \\<in> K; h \\<in> H; h \\<in> K1\\<rbrakk>\n    \\<Longrightarrow> g \\<cdot> h \\<cdot> \\<rho> g \\<in> H \\<and>\n                      g \\<cdot> h \\<cdot> \\<rho> g \\<in> K1", "apply (frule_tac x = g and y = h in sg_mult_closed, assumption+,\n       frule_tac x = g in sg_i_closed[of \"H\"], assumption+,\n       simp add:sg_mult_closed[of \"H\" \"g \\<cdot> h\" \"\\<rho> g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     g \\<in> H; g \\<in> K; h \\<in> H; h \\<in> K1; g \\<cdot> h \\<in> H;\n     \\<rho> g \\<in> H\\<rbrakk>\n    \\<Longrightarrow> g \\<cdot> h \\<cdot> \\<rho> g \\<in> K1", "apply (rule ZassenhausTr2_4[of \"K\" \"K1\" \"g\" \"h\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr3_5:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (Gp G (H \\<inter> K)) \\<triangleright> (H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1", "apply (frule inter_sgs[of \"H\" \"K\"], assumption,\n       frule inter_sgs[of \"H1\" \"K\"], assumption,\n       frule inter_sgs[of \"K\" \"H\"], assumption,\n       frule inter_sgs[of \"H\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> K \\<inter> H ;\n     G \\<guillemotright> H \\<inter> K1 \\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1", "apply (frule ZassenhausTr3[of \"H \\<inter> K\" \"H1 \\<inter> K\" \"K \\<inter> H\" \"H \\<inter> K1\"],\n       assumption+,\n       frule ZassenhausTr0[of \"K\" \"K1\" \"H\" \"H1\"], assumption+,\n       simp add:Int_commute,\n       frule ZassenhausTr0[of \"H\" \"H1\" \"K\" \"K1\"], assumption+,\n       simp add:Int_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> K \\<inter> H ; G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter> K \\<inter>\n                              (K \\<inter>\n                               H) \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1)\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1", "apply (frule ZassenhausTr2_3 [of \"K\" \"K1\"], assumption+,\n        frule ZassenhausTr2_3 [of \"H\" \"H1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> K \\<inter> H ; G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter> K \\<inter>\n                              (K \\<inter>\n                               H) \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1", "apply (simp add:Int_commute[of \"K\" \"H\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1", "apply (cut_tac Int_mono[of \"H\" \"H\" \"K1\" \"K\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> H\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> K1 \\<subseteq> K", "apply (cut_tac Int_mono[of \"H1\" \"H\" \"K\" \"K\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K;\n     H1 \\<inter> K \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop> H \\<inter> K1\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<subseteq> H\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> K\n 4. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> H\n 5. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> K1 \\<subseteq> K", "apply (simp only:Int_absorb1[of \"H \\<inter> K1\" \"H \\<inter> K\"],\n        simp only:K_absorb_HK[of \"H1 \\<inter> K\" \"H \\<inter> K\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<subseteq> H\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> K\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> H\n 4. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ; G \\<guillemotright> H1 \\<inter> K ;\n     G \\<guillemotright> H \\<inter> K1 ;\n     \\<natural>H1 \\<inter>\n               K \\<diamondop> H \\<inter>\n                              K \\<triangleright> H1 \\<inter>\n           K \\<diamondop> H \\<inter> K \\<inter> (H \\<inter> K1);\n     K1 \\<subseteq> K; H1 \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> K1 \\<subseteq> K", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr4:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n     Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)) \\<diamondop>\\<^bsub>G\\<^esub> (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)) = H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter>\nK1 \\<diamondop> (H1 \\<diamondop> H \\<inter> K) =\n                      H1 \\<diamondop> H \\<inter> K", "apply (frule ZassenhausTr2 [of \"H\" \"H1\" \"K\"], assumption+,\n       frule ZassenhausTr2 [of \"H\" \"H1\" \"K1\"], assumption+,\n       frule ZassenhausTr1_1 [of \"H\" \"H1\" \"K\" \"K1\"], assumption+,\n       frule ZassenhausTr2_1 [of \"H\" \"H1\" \"K\"], assumption+,\n       frule ZassenhausTr2_2 [of \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     H1 \\<diamondop> H \\<inter> K = H \\<inter> K \\<diamondop> H1;\n     H1 \\<diamondop> H \\<inter> K1 = H \\<inter> K1 \\<diamondop> H1;\n     G \\<guillemotright> H1 \\<diamondop> H \\<inter> K1 ;\n     G \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n     H1 \\<diamondop> H \\<inter> K1\n     \\<subseteq> H1 \\<diamondop> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter>\nK1 \\<diamondop> (H1 \\<diamondop> H \\<inter> K) =\n                      H1 \\<diamondop> H \\<inter> K", "apply (rule K_absorb_HK[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr4_0: \"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n     Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>  H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K) = (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1;\n     \\<natural>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K =\n                      H1 \\<diamondop> H \\<inter>\nK1 \\<diamondop> H \\<inter> K", "apply (frule inter_sgs [of \"H\" \"K1\"], assumption+,\n       frule inter_sgs [of \"H\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K1 ;\n     G \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K =\n                      H1 \\<diamondop> H \\<inter>\nK1 \\<diamondop> H \\<inter> K", "apply (subst s_top_assoc [of \"H1\" \"H \\<inter> K1\" \"H \\<inter> K\"], assumption+,\n       subst K_absorb_HK[of \"H \\<inter> K1\" \"H \\<inter> K\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K1 ;\n     G \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<subseteq> H \\<inter> K\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K1 ;\n     G \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K =\n                      H1 \\<diamondop> H \\<inter> K", "apply (frule ZassenhausTr2_3[of \"K\" \"K1\"], assumption+,\n       rule Int_mono[of \"H\" \"H\" \"K1\" \"K\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K1 ; G \\<guillemotright> H \\<inter> K ;\n     K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> H\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K1 ; G \\<guillemotright> H \\<inter> K ;\n     K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> K1 \\<subseteq> K\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>H \\<triangleright> H1; \\<natural>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K1 ;\n     G \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> H1 \\<diamondop> H \\<inter> K =\n                      H1 \\<diamondop> H \\<inter> K", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ZassenhausTr4_1:\"\\<lbrakk>G \\<guillemotright> H; (Gp G H) \\<triangleright> H1; (Gp G H) \\<guillemotright> (H \\<inter> K)\\<rbrakk>\n                           \\<Longrightarrow> (Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K))) \\<triangleright> H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; \\<natural>H \\<triangleright> H1;\n     \\<natural>H \\<guillemotright> H \\<inter> K \\<rbrakk>\n    \\<Longrightarrow> \\<natural>H1 \\<diamondop> H \\<inter>\n          K \\<triangleright> H1", "apply (frule Group_Gp [of \"H\"],\n       frule Group.nsg_sg[of \"Gp G H\" \"H1\"], assumption+,\n       frule Group.Gp_smult_nsg1[of \"\\<natural>H\" \"H \\<inter> K\" \"H1\"], assumption+,\n       frule subg_sg_sg [of \"H\" \"H1\"], assumption+,\n       frule Group.sg_subset[of \"\\<natural>H\" \"H1\"], assumption,\n       frule Group.sg_subset[of \"\\<natural>H\" \"H \\<inter> K\"], assumption+,\n       frule Group.smult_nsg_sg[of \"\\<natural>H\" \"H \\<inter> K\" \"H1\"], assumption+,\n       frule Group.s_top_sub[of \"\\<natural>H\" \"H1\" \"H \\<inter> K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; \\<natural>H \\<triangleright> H1;\n     \\<natural>H \\<guillemotright> H \\<inter> K ; Group (\\<natural>H);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>\\<natural>H\\<^esub>H1 \\<diamondop>\\<^bsub>\\<natural>H\\<^esub> H \\<inter>\n         K \\<triangleright> H1;\n     G \\<guillemotright> H1 ; H1 \\<subseteq> carrier (\\<natural>H);\n     H \\<inter> K \\<subseteq> carrier (\\<natural>H);\n     \\<natural>H \\<guillemotright> H1 \\<diamondop>\\<^bsub>\\<natural>H\\<^esub> H \\<inter>\n  K ;\n     H1 \\<diamondop>\\<^bsub>\\<natural>H\\<^esub> H \\<inter> K\n     \\<subseteq> carrier (\\<natural>H)\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H1 \\<diamondop> H \\<inter>\n          K \\<triangleright> H1", "apply (simp only: Gp_carrier s_top_induced [of \"H\" \"H1\" \"H \\<inter> K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; \\<natural>H \\<triangleright> H1;\n     \\<natural>H \\<guillemotright> H \\<inter> K ; Group (\\<natural>H);\n     \\<natural>H \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>\\<natural>H\\<^esub>H1 \\<diamondop> H \\<inter>\n                    K \\<triangleright> H1;\n     G \\<guillemotright> H1 ; H1 \\<subseteq> H; H \\<inter> K \\<subseteq> H;\n     \\<natural>H \\<guillemotright> H1 \\<diamondop> H \\<inter> K ;\n     H1 \\<diamondop> H \\<inter> K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> \\<natural>H1 \\<diamondop> H \\<inter>\n          K \\<triangleright> H1", "apply (frule subg_sg_sg[of \"H\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"], assumption+,\n       simp add:Gp_inherited[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\" \"H\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Homomorphism\""], ["", "lemma gHom: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F; \n           y \\<in> carrier F\\<rbrakk>  \\<Longrightarrow> f (x \\<cdot>\\<^bsub>F\\<^esub> y) = (f x) \\<cdot>\\<^bsub>G\\<^esub> (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n     y \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n                      f x \\<cdot>\\<^bsub>G\\<^esub> f y", "apply (simp add: gHom_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gHom_mem:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n                             (f x) \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> f x \\<in> carrier G", "apply (simp add:gHom_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; x \\<in> carrier F;\n     f \\<in> extensional (carrier F);\n     f \\<in> carrier F \\<rightarrow> carrier G;\n     \\<forall>x\\<in>carrier F.\n        \\<forall>y\\<in>carrier F.\n           f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n           f x \\<cdot>\\<^bsub>G\\<^esub> f y\\<rbrakk>\n    \\<Longrightarrow> f x \\<in> carrier G", "apply (simp add:Pi_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gHom_func:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n                            f \\<in> carrier F \\<rightarrow> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f \\<in> carrier F \\<rightarrow> carrier G", "by (simp add:gHom_def)"], ["", "(* we have to check the composition of two ghom's *)"], ["", "lemma gHomcomp:\"\\<lbrakk>Group F; Group G; Group H; f \\<in> gHom F G; g \\<in> gHom G H\\<rbrakk> \n    \\<Longrightarrow> (g \\<circ>\\<^bsub>F\\<^esub> f) \\<in> gHom F H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; f \\<in> gHom F G;\n     g \\<in> gHom G H\\<rbrakk>\n    \\<Longrightarrow> g \\<circ>\\<^bsub>F\\<^esub> f \\<in> gHom F H", "apply (simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H;\n     f \\<in> extensional (carrier F) \\<and>\n     f \\<in> carrier F \\<rightarrow> carrier G \\<and>\n     (\\<forall>x\\<in>carrier F.\n         \\<forall>y\\<in>carrier F.\n            f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n            f x \\<cdot>\\<^bsub>G\\<^esub> f y);\n     g \\<in> extensional (carrier G) \\<and>\n     g \\<in> carrier G \\<rightarrow> carrier H \\<and>\n     (\\<forall>x\\<in>carrier G.\n         \\<forall>y\\<in>carrier G.\n            g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n            g x \\<cdot>\\<^bsub>H\\<^esub> g y)\\<rbrakk>\n    \\<Longrightarrow> g \\<circ>\\<^bsub>F\\<^esub> f\n                      \\<in> extensional (carrier F) \\<and>\n                      g \\<circ>\\<^bsub>F\\<^esub> f\n                      \\<in> carrier F \\<rightarrow> carrier H \\<and>\n                      (\\<forall>x\\<in>carrier F.\n                          \\<forall>y\\<in>carrier F.\n                             (g \\<circ>\\<^bsub>F\\<^esub> f)\n                              (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n                             (g \\<circ>\\<^bsub>F\\<^esub> f)\n                              x \\<cdot>\\<^bsub>H\\<^esub>\n                             (g \\<circ>\\<^bsub>F\\<^esub> f) y)", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n     g \\<in> extensional (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G;\n     \\<forall>x\\<in>carrier F.\n        \\<forall>y\\<in>carrier F.\n           f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n           f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n     g \\<in> carrier G \\<rightarrow> carrier H;\n     \\<forall>x\\<in>carrier G.\n        \\<forall>y\\<in>carrier G.\n           g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n           g x \\<cdot>\\<^bsub>H\\<^esub> g y\\<rbrakk>\n    \\<Longrightarrow> g \\<circ>\\<^bsub>F\\<^esub> f\n                      \\<in> extensional (carrier F) \\<and>\n                      g \\<circ>\\<^bsub>F\\<^esub> f\n                      \\<in> carrier F \\<rightarrow> carrier H \\<and>\n                      (\\<forall>x\\<in>carrier F.\n                          \\<forall>y\\<in>carrier F.\n                             (g \\<circ>\\<^bsub>F\\<^esub> f)\n                              (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n                             (g \\<circ>\\<^bsub>F\\<^esub> f)\n                              x \\<cdot>\\<^bsub>H\\<^esub>\n                             (g \\<circ>\\<^bsub>F\\<^esub> f) y)", "apply (simp add:cmpghom_def composition)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n     g \\<in> extensional (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G;\n     \\<forall>x\\<in>carrier F.\n        \\<forall>y\\<in>carrier F.\n           f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n           f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n     g \\<in> carrier G \\<rightarrow> carrier H;\n     \\<forall>x\\<in>carrier G.\n        \\<forall>y\\<in>carrier G.\n           g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n           g x \\<cdot>\\<^bsub>H\\<^esub> g y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier F.\n                         \\<forall>y\\<in>carrier F.\n                            compose (carrier F) g f\n                             (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n                            compose (carrier F) g f\n                             x \\<cdot>\\<^bsub>H\\<^esub>\n                            compose (carrier F) g f y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n        g \\<in> extensional (carrier G);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        \\<forall>x\\<in>carrier F.\n           \\<forall>y\\<in>carrier F.\n              f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n              f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n        g \\<in> carrier G \\<rightarrow> carrier H;\n        \\<forall>x\\<in>carrier G.\n           \\<forall>y\\<in>carrier G.\n              g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n              g x \\<cdot>\\<^bsub>H\\<^esub> g y;\n        x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> compose (carrier F) g f\n                          (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n                         compose (carrier F) g f x \\<cdot>\\<^bsub>H\\<^esub>\n                         compose (carrier F) g f y", "apply (simp add:compose_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n        g \\<in> extensional (carrier G);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        \\<forall>x\\<in>carrier F.\n           \\<forall>y\\<in>carrier F.\n              f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n              f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n        g \\<in> carrier G \\<rightarrow> carrier H;\n        \\<forall>x\\<in>carrier G.\n           \\<forall>y\\<in>carrier G.\n              g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n              g x \\<cdot>\\<^bsub>H\\<^esub> g y;\n        x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<cdot>\\<^bsub>F\\<^esub> y\n                          \\<in> carrier F \\<longrightarrow>\n                          g (f x \\<cdot>\\<^bsub>G\\<^esub> f y) =\n                          g (f x) \\<cdot>\\<^bsub>H\\<^esub> g (f y)) \\<and>\n                         (x \\<cdot>\\<^bsub>F\\<^esub> y\n                          \\<notin> carrier F \\<longrightarrow>\n                          undefined =\n                          g (f x) \\<cdot>\\<^bsub>H\\<^esub> g (f y))", "apply (frule_tac x = x in funcset_mem [of \"f\" \"carrier F\" \"carrier G\"],\n                                              assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n        g \\<in> extensional (carrier G);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        \\<forall>x\\<in>carrier F.\n           \\<forall>y\\<in>carrier F.\n              f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n              f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n        g \\<in> carrier G \\<rightarrow> carrier H;\n        \\<forall>x\\<in>carrier G.\n           \\<forall>y\\<in>carrier G.\n              g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n              g x \\<cdot>\\<^bsub>H\\<^esub> g y;\n        x \\<in> carrier F; y \\<in> carrier F; f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (x \\<cdot>\\<^bsub>F\\<^esub> y\n                          \\<in> carrier F \\<longrightarrow>\n                          g (f x \\<cdot>\\<^bsub>G\\<^esub> f y) =\n                          g (f x) \\<cdot>\\<^bsub>H\\<^esub> g (f y)) \\<and>\n                         (x \\<cdot>\\<^bsub>F\\<^esub> y\n                          \\<notin> carrier F \\<longrightarrow>\n                          undefined =\n                          g (f x) \\<cdot>\\<^bsub>H\\<^esub> g (f y))", "apply (frule_tac x = y in funcset_mem [of \"f\" \"carrier F\" \"carrier G\"],\n                                              assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n        g \\<in> extensional (carrier G);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        \\<forall>x\\<in>carrier F.\n           \\<forall>y\\<in>carrier F.\n              f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n              f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n        g \\<in> carrier G \\<rightarrow> carrier H;\n        \\<forall>x\\<in>carrier G.\n           \\<forall>y\\<in>carrier G.\n              g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n              g x \\<cdot>\\<^bsub>H\\<^esub> g y;\n        x \\<in> carrier F; y \\<in> carrier F; f x \\<in> carrier G;\n        f y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (x \\<cdot>\\<^bsub>F\\<^esub> y\n                          \\<in> carrier F \\<longrightarrow>\n                          g (f x \\<cdot>\\<^bsub>G\\<^esub> f y) =\n                          g (f x) \\<cdot>\\<^bsub>H\\<^esub> g (f y)) \\<and>\n                         (x \\<cdot>\\<^bsub>F\\<^esub> y\n                          \\<notin> carrier F \\<longrightarrow>\n                          undefined =\n                          g (f x) \\<cdot>\\<^bsub>H\\<^esub> g (f y))", "apply (simp add:Group.mult_closed[of \"F\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gHom_comp_gsurjec:\"\\<lbrakk>Group F; Group G; Group H; gsurj\\<^bsub>F,G\\<^esub> f; \n  gsurj\\<^bsub>G,H\\<^esub> g\\<rbrakk>  \\<Longrightarrow> gsurj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; gsurj\\<^bsub>F,G\\<^esub> f;\n     gsurj\\<^bsub>G,H\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)", "apply (simp add:gsurjec_def,\n       simp add:gHomcomp,\n       (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G); g \\<in> gHom G H;\n     surj_to g (carrier G) (carrier H)\\<rbrakk>\n    \\<Longrightarrow> surj_to (g \\<circ>\\<^bsub>F\\<^esub> f) (carrier F)\n                       (carrier H)", "apply (simp add:cmpghom_def,\n        simp add:gHom_def, (erule conjE)+,\n        rule compose_surj, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gHom_comp_ginjec:\"\\<lbrakk>Group F; Group G; Group H; ginj\\<^bsub>F,G\\<^esub> f; ginj\\<^bsub>G,H\\<^esub> g\\<rbrakk> \\<Longrightarrow> \n                          ginj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; ginj\\<^bsub>F,G\\<^esub> f;\n     ginj\\<^bsub>G,H\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)", "apply (simp add:ginjec_def,\n       simp add:gHomcomp,\n       simp add:gHom_def,\n       (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; f \\<in> extensional (carrier F);\n     g \\<in> extensional (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G;\n     g \\<in> carrier G \\<rightarrow> carrier H;\n     \\<forall>x\\<in>carrier F.\n        \\<forall>y\\<in>carrier F.\n           f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n           f x \\<cdot>\\<^bsub>G\\<^esub> f y;\n     inj_on f (carrier F);\n     \\<forall>x\\<in>carrier G.\n        \\<forall>y\\<in>carrier G.\n           g (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n           g x \\<cdot>\\<^bsub>H\\<^esub> g y;\n     inj_on g (carrier G)\\<rbrakk>\n    \\<Longrightarrow> inj_on (g \\<circ>\\<^bsub>F\\<^esub> f) (carrier F)", "apply (simp add:cmpghom_def,\n       simp add:comp_inj)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ghom_unit_unit:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n                                                   f (\\<one>\\<^bsub>F\\<^esub>) = \\<one>\\<^bsub>G\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (frule Group.unit_closed[of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (frule gHom [of \"F\" \"G\" \"f\" \"\\<one>\\<^bsub>F\\<^esub>\" \"\\<one>\\<^bsub>F\\<^esub>\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F;\n     f (\\<one>\\<^bsub>F\\<^esub> \\<cdot>\\<^bsub>F\\<^esub>\n        \\<one>\\<^bsub>F\\<^esub>) =\n     f \\<one>\\<^bsub>F\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n     f \\<one>\\<^bsub>F\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.l_unit[of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F;\n     f \\<one>\\<^bsub>F\\<^esub> =\n     f \\<one>\\<^bsub>F\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n     f \\<one>\\<^bsub>F\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (frule gHom_mem[of \"F\" \"G\" \"f\" \"\\<one>\\<^bsub>F\\<^esub>\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F;\n     f \\<one>\\<^bsub>F\\<^esub> =\n     f \\<one>\\<^bsub>F\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n     f \\<one>\\<^bsub>F\\<^esub>;\n     f \\<one>\\<^bsub>F\\<^esub> \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F;\n     f \\<one>\\<^bsub>F\\<^esub> =\n     f \\<one>\\<^bsub>F\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n     f \\<one>\\<^bsub>F\\<^esub>;\n     f \\<one>\\<^bsub>F\\<^esub> \\<in> carrier G;\n     f \\<one>\\<^bsub>F\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n     f \\<one>\\<^bsub>F\\<^esub> =\n     f \\<one>\\<^bsub>F\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (rule Group.one_unique[of \"G\" \"f \\<one>\\<^bsub>F\\<^esub>\" \"f \\<one>\\<^bsub>F\\<^esub>\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ghom_inv_inv:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n   f (\\<rho>\\<^bsub>F\\<^esub> x) = \\<rho>\\<^bsub>G\\<^esub> (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> f (\\<rho>\\<^bsub>F\\<^esub> x) =\n                      \\<rho>\\<^bsub>G\\<^esub> f x", "apply (frule Group.i_closed[of \"F\" \"x\"], assumption+,\n       frule gHom [of \"F\" \"G\" \"f\" \"\\<rho>\\<^bsub>F\\<^esub> x\" \"x\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n     \\<rho>\\<^bsub>F\\<^esub> x \\<in> carrier F;\n     f (\\<rho>\\<^bsub>F\\<^esub> x \\<cdot>\\<^bsub>F\\<^esub> x) =\n     f (\\<rho>\\<^bsub>F\\<^esub> x) \\<cdot>\\<^bsub>G\\<^esub> f x\\<rbrakk>\n    \\<Longrightarrow> f (\\<rho>\\<^bsub>F\\<^esub> x) =\n                      \\<rho>\\<^bsub>G\\<^esub> f x", "apply (simp add:Group.l_i, simp add:ghom_unit_unit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n     \\<rho>\\<^bsub>F\\<^esub> x \\<in> carrier F;\n     \\<one>\\<^bsub>G\\<^esub> =\n     f (\\<rho>\\<^bsub>F\\<^esub> x) \\<cdot>\\<^bsub>G\\<^esub> f x\\<rbrakk>\n    \\<Longrightarrow> f (\\<rho>\\<^bsub>F\\<^esub> x) =\n                      \\<rho>\\<^bsub>G\\<^esub> f x", "apply (frule sym,\n       frule gHom_mem[of \"F\" \"G\" \"f\" \"x\"], assumption+ ,\n       frule gHom_mem[of \"F\" \"G\" \"f\" \"\\<rho>\\<^bsub>F\\<^esub> x\"], assumption+,\n       rule Group.l_i_unique[THEN sym, of \"G\" \"f x\" \"f (\\<rho>\\<^bsub>F\\<^esub> x)\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ghomTr3:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> carrier F;\n       y \\<in> carrier F; f (x \\<cdot>\\<^bsub>F\\<^esub> (\\<rho>\\<^bsub>F\\<^esub> y)) = \\<one>\\<^bsub>G\\<^esub> \\<rbrakk> \\<Longrightarrow> f x = f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n     y \\<in> carrier F;\n     f (x \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> y) =\n     \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> f x = f y", "apply (frule Group.i_closed[of \"F\" \"y\"], assumption+,\n       simp only:gHom ghom_inv_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n     y \\<in> carrier F;\n     f x \\<cdot>\\<^bsub>G\\<^esub> \\<rho>\\<^bsub>G\\<^esub> f y =\n     \\<one>\\<^bsub>G\\<^esub>;\n     \\<rho>\\<^bsub>F\\<^esub> y \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> f x = f y", "apply (rule Group.r_div_eq[of \"G\" \"f x\" \"f y\"], assumption,\n       (simp add:gHom_mem)+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iim_nonempty:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow>\n                       (iim F G f K) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> iim F G f K \\<noteq> {}", "apply (frule Group.sg_unit_closed[of \"G\" \"K\"], assumption+,\n       frule Group.unit_closed[of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n     \\<one>\\<^bsub>G\\<^esub> \\<in> K;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> iim F G f K \\<noteq> {}", "apply (frule ghom_unit_unit[of \"F\" \"G\" \"f\"], assumption+, simp add:iim_def,\n       frule sym, thin_tac \"f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n     f \\<one>\\<^bsub>F\\<^esub> \\<in> K;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F;\n     \\<one>\\<^bsub>G\\<^esub> = f \\<one>\\<^bsub>F\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. x \\<in> carrier F \\<and> f x \\<in> K", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ghomTr4:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K\\<rbrakk> \\<Longrightarrow> \n                  F \\<guillemotright> (iim F G f K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> F \\<guillemotright> iim F G f K", "apply (rule Group.sg_condition[of \"F\" \"iim F G f K\"], assumption+,\n       rule subsetI, simp add:iim_def,\n       simp add:iim_nonempty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> \\<forall>a b.\n                         a \\<in> iim F G f K \\<and>\n                         b \\<in> iim F G f K \\<longrightarrow>\n                         a \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> b\n                         \\<in> iim F G f K", "apply ((rule allI)+, rule impI, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n        a \\<in> iim F G f K; b \\<in> iim F G f K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> b\n                         \\<in> iim F G f K", "apply (simp add:iim_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n        a \\<in> carrier F \\<and> f a \\<in> K;\n        b \\<in> carrier F \\<and> f b \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> b\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> b)\n                         \\<in> K", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n        a \\<in> carrier F; f a \\<in> K; b \\<in> carrier F;\n        f b \\<in> K\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> b\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> b)\n                         \\<in> K", "apply (frule_tac a = b in Group.i_closed[of \"F\"], assumption+,\n       frule_tac a = a and b = \"\\<rho>\\<^bsub>F\\<^esub> b\" in Group.mult_closed[of \"F\"],\n        assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n        a \\<in> carrier F; f a \\<in> K; b \\<in> carrier F; f b \\<in> K;\n        \\<rho>\\<^bsub>F\\<^esub> b \\<in> carrier F;\n        a \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> b\n        \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> b)\n                         \\<in> K", "apply (simp add:gHom ghom_inv_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n        a \\<in> carrier F; f a \\<in> K; b \\<in> carrier F; f b \\<in> K;\n        \\<rho>\\<^bsub>F\\<^esub> b \\<in> carrier F;\n        a \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> b\n        \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f a \\<cdot>\\<^bsub>G\\<^esub>\n                         \\<rho>\\<^bsub>G\\<^esub> f b\n                         \\<in> K", "apply (frule_tac x = \"f b\" in Group.sg_i_closed[of \"G\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<guillemotright> K ;\n        a \\<in> carrier F; f a \\<in> K; b \\<in> carrier F; f b \\<in> K;\n        \\<rho>\\<^bsub>F\\<^esub> b \\<in> carrier F;\n        a \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> b\n        \\<in> carrier F;\n        \\<rho>\\<^bsub>G\\<^esub> f b \\<in> K\\<rbrakk>\n       \\<Longrightarrow> f a \\<cdot>\\<^bsub>G\\<^esub>\n                         \\<rho>\\<^bsub>G\\<^esub> f b\n                         \\<in> K", "apply (simp add:gHom_mem Group.sg_mult_closed)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) IdTr0: \"idmap (carrier G) \\<in> gHom G G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. idmap (carrier G) \\<in> gHom G G", "apply (simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. idmap (carrier G) \\<in> extensional (carrier G) \\<and>\n    idmap (carrier G) \\<in> carrier G \\<rightarrow> carrier G \\<and>\n    (\\<forall>x\\<in>carrier G.\n        \\<forall>y\\<in>carrier G.\n           idmap (carrier G) (x \\<cdot> y) =\n           idmap (carrier G) x \\<cdot> idmap (carrier G) y)", "apply (simp add:idmap_def extensional_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier G.\n       \\<forall>y\\<in>carrier G.\n          x \\<cdot> y \\<notin> carrier G \\<longrightarrow>\n          undefined = x \\<cdot> y", "apply (simp add:Pi_def mult_closed)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "abbreviation\n  IDMAP (\"(I\\<^bsub>_\\<^esub>)\" [999]1000) where\n   \"I\\<^bsub>F\\<^esub> == idmap (carrier F)\""], ["", "abbreviation\n  INVFUN (\"(3Ifn _ _ _)\" [88,88,89]88) where\n  \"Ifn F G f == invfun (carrier F) (carrier G) f\""], ["", "lemma IdTr1:\"\\<lbrakk>Group F; x \\<in> carrier F\\<rbrakk> \\<Longrightarrow> (I\\<^bsub>F\\<^esub>) x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> I\\<^bsub>F\\<^esub> x = x", "apply (simp add:idmap_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma IdTr2:\"Group F \\<Longrightarrow> gbij\\<^bsub>F,F\\<^esub> (I\\<^bsub>F\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group F \\<Longrightarrow> gbij\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group F \\<Longrightarrow>\n    gsurj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub> \\<and>\n    ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Group F \\<Longrightarrow> gsurj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>\n 2. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "(* gsurjec *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Group F \\<Longrightarrow> gsurj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>\n 2. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (simp add:gsurjec_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Group F \\<Longrightarrow>\n    I\\<^bsub>F\\<^esub> \\<in> gHom F F \\<and>\n    surj_to I\\<^bsub>F\\<^esub> (carrier F) (carrier F)\n 2. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Group F \\<Longrightarrow> I\\<^bsub>F\\<^esub> \\<in> gHom F F\n 2. Group F \\<Longrightarrow>\n    surj_to I\\<^bsub>F\\<^esub> (carrier F) (carrier F)\n 3. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (simp add:idmap_def gHom_def Group.mult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Group F \\<Longrightarrow>\n    surj_to I\\<^bsub>F\\<^esub> (carrier F) (carrier F)\n 2. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (simp add:surj_to_def image_def idmap_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "(* ginjec *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group F \\<Longrightarrow> ginj\\<^bsub>F,F\\<^esub> I\\<^bsub>F\\<^esub>", "apply (simp add:ginjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group F \\<Longrightarrow>\n    I\\<^bsub>F\\<^esub> \\<in> gHom F F \\<and>\n    inj_on I\\<^bsub>F\\<^esub> (carrier F)", "apply (simp add:idmap_def gHom_def Group.mult_closed)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Id_l_unit:\"\\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f = f", "apply (rule funcset_eq[of _ \"carrier G\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f\n                      \\<in> extensional (carrier G)\n 2. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f \\<in> extensional (carrier G)\n 3. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         (I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f) x =\n                         f x", "apply (simp add:cmpghom_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f \\<in> extensional (carrier G)\n 2. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         (I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f) x =\n                         f x", "apply (simp add:gbijec_def gsurjec_def gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         (I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f) x =\n                         f x", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>G\\<^esub> f) x =\n                         f x", "apply (simp add:cmpghom_def compose_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> I\\<^bsub>G\\<^esub> (f x) = f x", "apply (frule_tac x = x in gHom_mem[of \"G\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> f \\<in> gHom G G\n 2. \\<And>x.\n       \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier G\n 3. \\<And>x.\n       \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; x \\<in> carrier G;\n        f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> I\\<^bsub>G\\<^esub> (f x) = f x", "apply (simp add:gbijec_def gsurjec_def, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; x \\<in> carrier G;\n        f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> I\\<^bsub>G\\<^esub> (f x) = f x", "apply (simp add:IdTr1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Gkernel\""], ["", "lemma gkernTr1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>                    x \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> x \\<in> carrier F", "apply (simp add: gkernel_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkernTr1_1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<subseteq> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<subseteq> carrier F", "by (rule subsetI, simp add:gkernTr1)"], ["", "lemma gkernTr2:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> gker\\<^bsub>F,G\\<^esub> f; y \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n   \\<Longrightarrow> (x \\<cdot>\\<^bsub>F\\<^esub> y) \\<in> gker\\<^bsub>F,G\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> gker\\<^bsub>F,G\\<^esub> f;\n     y \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot>\\<^bsub>F\\<^esub> y\n                      \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (simp add:gkernel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> carrier F \\<and> f x = \\<one>\\<^bsub>G\\<^esub>;\n     y \\<in> carrier F \\<and> f y = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot>\\<^bsub>F\\<^esub> y \\<in> carrier F \\<and>\n                      f (x \\<cdot>\\<^bsub>F\\<^esub> y) =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:gHom, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n     f x = \\<one>\\<^bsub>G\\<^esub>; y \\<in> carrier F;\n     f y = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> x \\<cdot>\\<^bsub>F\\<^esub> y \\<in> carrier F \\<and>\n                      \\<one>\\<^bsub>G\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n                      \\<one>\\<^bsub>G\\<^esub> =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.mult_closed, \n       frule Group.unit_closed[of \"G\"], \n       simp add:Group.l_unit[of \"G\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkernTr3:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; x \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>\n                    (\\<rho>\\<^bsub>F\\<^esub> x) \\<in> gker\\<^bsub>F,G\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>F\\<^esub> x\n                      \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (simp add:gkernel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> carrier F \\<and> f x = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>F\\<^esub> x \\<in> carrier F \\<and>\n                      f (\\<rho>\\<^bsub>F\\<^esub> x) =\n                      \\<one>\\<^bsub>G\\<^esub>", "(* thm ghom_inv_inv [of \"F\" \"G\" \"f\" \"x\"] *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> carrier F \\<and> f x = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>F\\<^esub> x \\<in> carrier F \\<and>\n                      f (\\<rho>\\<^bsub>F\\<^esub> x) =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:ghom_inv_inv [of \"F\" \"G\" \"f\" \"x\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> carrier F \\<and> f x = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>F\\<^esub> x \\<in> carrier F \\<and>\n                      \\<rho>\\<^bsub>G\\<^esub> \\<one>\\<^bsub>G\\<^esub> =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.i_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     x \\<in> carrier F \\<and> f x = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>G\\<^esub> \\<one>\\<^bsub>G\\<^esub> =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.i_one)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkernTr6:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> (\\<one>\\<^bsub>F\\<^esub>) \\<in> gker\\<^bsub>F,G\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub>\n                      \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (simp add:gkernel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F \\<and>\n                      f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.unit_closed ghom_unit_unit [of \"F\" \"G\" \"f\" ])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkernTr7:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f", "apply (rule Group.sg_condition[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"], assumption+,\n       rule subsetI, simp add:gkernTr1,\n       frule gkernTr6[of \"F\" \"G\" \"f\"], assumption+, simp add:nonempty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a b.\n                         a \\<in> gker\\<^bsub>F,G\\<^esub> f \\<and>\n                         b \\<in> gker\\<^bsub>F,G\\<^esub> f \\<longrightarrow>\n                         a \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> b\n                         \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply ((rule allI)+, rule impI, erule conjE,\n        frule_tac x = b in gkernTr3[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        a \\<in> gker\\<^bsub>F,G\\<^esub> f;\n        b \\<in> gker\\<^bsub>F,G\\<^esub> f;\n        \\<rho>\\<^bsub>F\\<^esub> b \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> b\n                         \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (simp add:gkernTr2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gker_normal:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f", "apply (rule Group.cond_nsg[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"], assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier F.\n                         \\<forall>h\\<in>gker\\<^bsub>F,G\\<^esub> f.\n                            a \\<cdot>\\<^bsub>F\\<^esub>\n                            h \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> a\n                            \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (simp add:gkernTr7)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier F.\n                         \\<forall>h\\<in>gker\\<^bsub>F,G\\<^esub> f.\n                            a \\<cdot>\\<^bsub>F\\<^esub>\n                            h \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> a\n                            \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> gker\\<^bsub>F,G\\<^esub> f", "apply (simp add:gkernel_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            h \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (frule_tac a = a in Group.i_closed[of \"F\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            h \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (subst gHom [of \"F\" \"G\" \"f\" _], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub> h \\<in> carrier F\n 2. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\n 3. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            h) \\<cdot>\\<^bsub>G\\<^esub>\n                         f (\\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.mult_closed[of \"F\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\n 2. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            h) \\<cdot>\\<^bsub>G\\<^esub>\n                         f (\\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            h) \\<cdot>\\<^bsub>G\\<^esub>\n                         f (\\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:gHom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f a \\<cdot>\\<^bsub>G\\<^esub>\n                         \\<one>\\<^bsub>G\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n                         f (\\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.mult_closed[of \"F\"])+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f a \\<cdot>\\<^bsub>G\\<^esub>\n                         \\<one>\\<^bsub>G\\<^esub> \\<cdot>\\<^bsub>G\\<^esub>\n                         f (\\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (frule_tac x = a in gHom_mem[of \"F\" \"G\" \"f\"], assumption+,\n        simp add:Group.r_unit[of \"G\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        h \\<in> carrier F; f h = \\<one>\\<^bsub>G\\<^esub>;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F;\n        f a \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> f a \\<cdot>\\<^bsub>G\\<^esub>\n                         f (\\<rho>\\<^bsub>F\\<^esub> a) =\n                         \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:ghom_inv_inv, simp add:Group.r_i)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Group_coim:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> Group ( F / gker\\<^bsub>F,G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> Group (F / gker\\<^bsub>F,G\\<^esub> f)", "by (frule gker_normal[of \"F\" \"G\" \"f\"], assumption+,\n       simp add:Group.Group_Qg[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"])"], ["", "lemma gkern1:\"\\<lbrakk>Group F; Ugp E; f \\<in> gHom F E\\<rbrakk> \\<Longrightarrow> gker\\<^bsub>F,E\\<^esub> f = carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Ugp E; f \\<in> gHom F E\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,E\\<^esub> f = carrier F", "apply (frule Group_Ugp[of \"E\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Ugp E; f \\<in> gHom F E; Group E\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,E\\<^esub> f = carrier F", "apply (frule gkernTr1_1[of \"F\" \"E\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Ugp E; f \\<in> gHom F E; Group E;\n     gker\\<^bsub>F,E\\<^esub> f \\<subseteq> carrier F\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,E\\<^esub> f = carrier F", "apply (rule equalityI, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Ugp E; f \\<in> gHom F E; Group E;\n     gker\\<^bsub>F,E\\<^esub> f \\<subseteq> carrier F\\<rbrakk>\n    \\<Longrightarrow> carrier F \\<subseteq> gker\\<^bsub>F,E\\<^esub> f", "apply (rule subsetI,\n       thin_tac \"gker\\<^bsub>F,E\\<^esub> f \\<subseteq> carrier F\",\n       simp add:gkernel_def,\n       frule_tac x = x in gHom_mem[of \"F\" \"E\" \"f\"], assumption+,\n       simp add:Ugp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkern2:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; ginj\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>\n               gker\\<^bsub>F,G\\<^esub> f = {\\<one>\\<^bsub>F\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     ginj\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f = {\\<one>\\<^bsub>F\\<^esub>}", "apply (frule gkernTr6[of \"F\" \"G\" \"f\"], assumption+,\n       frule singleton_sub[of \"\\<one>\\<^bsub>F\\<^esub>\" \"gker\\<^bsub>F,G\\<^esub> f\"],\n       rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; ginj\\<^bsub>F,G\\<^esub> f;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> gker\\<^bsub>F,G\\<^esub> f;\n     {\\<one>\\<^bsub>F\\<^esub>}\n     \\<subseteq> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f\n                      \\<subseteq> {\\<one>\\<^bsub>F\\<^esub>}\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; ginj\\<^bsub>F,G\\<^esub> f;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> gker\\<^bsub>F,G\\<^esub> f;\n     {\\<one>\\<^bsub>F\\<^esub>}\n     \\<subseteq> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>F\\<^esub>}\n                      \\<subseteq> gker\\<^bsub>F,G\\<^esub> f", "apply (rule subsetI,\n        thin_tac \"{\\<one>\\<^bsub>F\\<^esub>} \\<subseteq> gker\\<^bsub>F,G\\<^esub> f\",\n        simp add:gkernel_def, (erule conjE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        ginj\\<^bsub>F,G\\<^esub> f; \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F;\n        f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>;\n        x \\<in> carrier F; f x = \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> x = \\<one>\\<^bsub>F\\<^esub>\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; ginj\\<^bsub>F,G\\<^esub> f;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> gker\\<^bsub>F,G\\<^esub> f;\n     {\\<one>\\<^bsub>F\\<^esub>}\n     \\<subseteq> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>F\\<^esub>}\n                      \\<subseteq> gker\\<^bsub>F,G\\<^esub> f", "apply (frule sym, thin_tac \"f \\<one>\\<^bsub>F\\<^esub> = \\<one>\\<^bsub>G\\<^esub>\", simp, thin_tac \"\\<one>\\<^bsub>G\\<^esub> = f \\<one>\\<^bsub>F\\<^esub>\",\n        simp add:ginjec_def, simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; ginj\\<^bsub>F,G\\<^esub> f;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> gker\\<^bsub>F,G\\<^esub> f;\n     {\\<one>\\<^bsub>F\\<^esub>}\n     \\<subseteq> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>F\\<^esub>}\n                      \\<subseteq> gker\\<^bsub>F,G\\<^esub> f", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkernTr9:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F; b \\<in> carrier F\\<rbrakk>\n             \\<Longrightarrow>  ((gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a = (gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> b) = (f a = f b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a =\n                       gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       b) =\n                      (f a = f b)", "(* thm r_cosEqVar1 [of \"F\" \"ker f (F \\<rightharpoonup> G) \" \"a\" \"b\"] *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a =\n                       gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       b) =\n                      (f a = f b)", "apply (frule gkernTr7[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a =\n                       gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       b) =\n                      (f a = f b)", "apply (subst Group.rcs_eq[THEN sym, of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\" \"a\" \"b\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> (b \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> a\n                       \\<in> gker\\<^bsub>F,G\\<^esub> f) =\n                      (f a = f b)", "apply (thin_tac \"F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (b \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> a\n                       \\<in> gker\\<^bsub>F,G\\<^esub> f) =\n                      (f a = f b)", "apply (simp add:gkernel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (b \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> a\n                       \\<in> carrier F \\<and>\n                       f (b \\<cdot>\\<^bsub>F\\<^esub>\n                          \\<rho>\\<^bsub>F\\<^esub> a) =\n                       \\<one>\\<^bsub>G\\<^esub>) =\n                      (f a = f b)", "apply (frule Group.i_closed[of \"F\" \"a\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (b \\<cdot>\\<^bsub>F\\<^esub> \\<rho>\\<^bsub>F\\<^esub> a\n                       \\<in> carrier F \\<and>\n                       f (b \\<cdot>\\<^bsub>F\\<^esub>\n                          \\<rho>\\<^bsub>F\\<^esub> a) =\n                       \\<one>\\<^bsub>G\\<^esub>) =\n                      (f a = f b)", "apply (simp add:Group.mult_closed[of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (f (b \\<cdot>\\<^bsub>F\\<^esub>\n                          \\<rho>\\<^bsub>F\\<^esub> a) =\n                       \\<one>\\<^bsub>G\\<^esub>) =\n                      (f a = f b)", "apply (simp add:gHom, simp add:ghom_inv_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (f b \\<cdot>\\<^bsub>G\\<^esub>\n                       \\<rho>\\<^bsub>G\\<^esub> f a =\n                       \\<one>\\<^bsub>G\\<^esub>) =\n                      (f a = f b)", "apply (frule gHom_mem[of \"F\" \"G\" \"f\" \"a\"], assumption+,\n       frule gHom_mem[of \"F\" \"G\" \"f\" \"b\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F;\n     f a \\<in> carrier G; f b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (f b \\<cdot>\\<^bsub>G\\<^esub>\n                       \\<rho>\\<^bsub>G\\<^esub> f a =\n                       \\<one>\\<^bsub>G\\<^esub>) =\n                      (f a = f b)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F;\n     f a \\<in> carrier G; f b \\<in> carrier G;\n     f b \\<cdot>\\<^bsub>G\\<^esub> \\<rho>\\<^bsub>G\\<^esub> f a =\n     \\<one>\\<^bsub>G\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> f a = f b\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F;\n     f a \\<in> carrier G; f b \\<in> carrier G; f a = f b\\<rbrakk>\n    \\<Longrightarrow> f b \\<cdot>\\<^bsub>G\\<^esub>\n                      \\<rho>\\<^bsub>G\\<^esub> f a =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (rule Group.r_div_eq[THEN sym, of \"G\" \"f b\" \"f a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     b \\<in> carrier F; \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F;\n     f a \\<in> carrier G; f b \\<in> carrier G; f a = f b\\<rbrakk>\n    \\<Longrightarrow> f b \\<cdot>\\<^bsub>G\\<^esub>\n                      \\<rho>\\<^bsub>G\\<^esub> f a =\n                      \\<one>\\<^bsub>G\\<^esub>", "apply (simp add:Group.r_i[of \"G\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gkernTr11:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G ; a \\<in> carrier F\\<rbrakk> \\<Longrightarrow> \n                  (iim F G f {f a}) = (gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> iim F G f {f a} =\n                      gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a", "apply (frule gkernTr7[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> iim F G f {f a} =\n                      gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> iim F G f {f a}\n                      \\<subseteq> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                  a\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\n                      \\<subseteq> iim F G f {f a}", "(** iim F G f {f a} \\<subseteq> ker\\<^sub>F\\<^sub>,\\<^sub>Gf \\<^sub>F a **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> iim F G f {f a}\n                      \\<subseteq> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                  a\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\n                      \\<subseteq> iim F G f {f a}", "apply (rule subsetI,\n        simp add:iim_def,\n        erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ; x \\<in> carrier F;\n        f x = f a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                 a\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\n                      \\<subseteq> iim F G f {f a}", "apply (frule_tac a1 = x in gkernTr9[THEN sym, of \"F\" \"G\" \"f\" _ \"a\"],\n            assumption+, simp,\n        frule_tac a = x in Group.a_in_rcs[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"], assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\n                      \\<subseteq> iim F G f {f a}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> iim F G f {f a}", "apply (simp add:gkernel_def rcs_def iim_def, erule exE, (erule conjE)+,\n        rotate_tac -1, frule sym, thin_tac \"h \\<cdot>\\<^bsub>F\\<^esub> a = x\", simp add:gHom,\n        thin_tac \"x = h \\<cdot>\\<^bsub>F\\<^esub> a\",\n        frule gHom_mem[of \"F\" \"G\" \"f\" \"a\"], assumption+,\n        simp add:Group.mult_closed Group.l_unit)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gbij_comp_bij:\"\\<lbrakk>Group F; Group G; Group H; gbij\\<^bsub>F,G\\<^esub> f; gbij\\<^bsub>G,H\\<^esub> g\\<rbrakk>\n                   \\<Longrightarrow> gbij\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; gbij\\<^bsub>F,G\\<^esub> f;\n     gbij\\<^bsub>G,H\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     gsurj\\<^bsub>G,H\\<^esub> g \\<and> ginj\\<^bsub>G,H\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f) \\<and>\n                      ginj\\<^bsub>F,H\\<^esub> (g \\<circ>\\<^bsub>F\\<^esub> f)", "apply (simp add:gHom_comp_gsurjec gHom_comp_ginjec)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gbij_automorph:\"\\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; gbij\\<^bsub>G,G\\<^esub> g\\<rbrakk>  \\<Longrightarrow> \n                            gbij\\<^bsub>G,G\\<^esub> (g \\<circ>\\<^bsub>G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f;\n     gbij\\<^bsub>G,G\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>G,G\\<^esub> (g \\<circ>\\<^bsub>G\\<^esub> f)", "apply (simp add:gbij_comp_bij)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma l_unit_gHom:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> (I\\<^bsub>G\\<^esub>) \\<circ>\\<^bsub>F\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> I\\<^bsub>G\\<^esub> \\<circ>\\<^bsub>F\\<^esub> f = f", "apply (simp add:cmpghom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> compose (carrier F) I\\<^bsub>G\\<^esub> f = f", "apply (rule funcset_eq[of _ \"carrier F\"],\n       simp add:compose_def, simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier F.\n                         compose (carrier F) I\\<^bsub>G\\<^esub> f x = f x", "apply (rule ballI,\n       simp add:idmap_def compose_def,\n       simp add:gHom_mem[of \"F\" \"G\" \"f\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma r_unit_gHom:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> f \\<circ>\\<^bsub>F\\<^esub> (I\\<^bsub>F\\<^esub>) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f \\<circ>\\<^bsub>F\\<^esub> I\\<^bsub>F\\<^esub> = f", "apply (simp add:cmpghom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> compose (carrier F) f I\\<^bsub>F\\<^esub> = f", "apply (rule funcset_eq[of _ \"carrier F\"],\n       simp add:compose_def, simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier F.\n                         compose (carrier F) f I\\<^bsub>F\\<^esub> x = f x", "apply (rule ballI,\n       simp add:idmap_def compose_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Image\""], ["", "lemma inv_gHom:\"\\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> (Ifn F G f) \\<in> gHom G F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> gHom G F", "apply (simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> extensional (carrier G) \\<and>\n                      f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> carrier G \\<rightarrow> carrier F \\<and>\n                      (\\<forall>x\\<in>carrier G.\n                          \\<forall>y\\<in>carrier G.\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              x \\<cdot>\\<^bsub>F\\<^esub>\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> extensional (carrier G)\n 2. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> carrier G \\<rightarrow> carrier F \\<and>\n                      (\\<forall>x\\<in>carrier G.\n                          \\<forall>y\\<in>carrier G.\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              x \\<cdot>\\<^bsub>F\\<^esub>\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              y)", "(** Ifn F G f \\<in> carrier G \\<rightarrow> carrier F **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> extensional (carrier G)\n 2. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> carrier G \\<rightarrow> carrier F \\<and>\n                      (\\<forall>x\\<in>carrier G.\n                          \\<forall>y\\<in>carrier G.\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              x \\<cdot>\\<^bsub>F\\<^esub>\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              y)", "apply (simp add:invfun_def restrict_def extensional_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> carrier G \\<rightarrow> carrier F \\<and>\n                      (\\<forall>x\\<in>carrier G.\n                          \\<forall>y\\<in>carrier G.\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              x \\<cdot>\\<^bsub>F\\<^esub>\n                             (f\\<inverse>\\<^bsub>carrier\n            G,carrier F\\<^esub>)\n                              y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n                      \\<in> carrier G \\<rightarrow> carrier F\n 2. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         \\<forall>y\\<in>carrier G.\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             x \\<cdot>\\<^bsub>F\\<^esub>\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             y", "apply (rule inv_func)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> f \\<in> carrier F \\<rightarrow> carrier G\n 2. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> inj_on f (carrier F)\n 3. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> surj_to f (carrier F) (carrier G)\n 4. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         \\<forall>y\\<in>carrier G.\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             x \\<cdot>\\<^bsub>F\\<^esub>\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             y", "apply (simp add:gbijec_def gsurjec_def gHom_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> inj_on f (carrier F)\n 2. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> surj_to f (carrier F) (carrier G)\n 3. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         \\<forall>y\\<in>carrier G.\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             x \\<cdot>\\<^bsub>F\\<^esub>\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             y", "apply (simp add:gbijec_def gsurjec_def ginjec_def)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     f \\<in> gHom F G \\<and>\n     surj_to f (carrier F) (carrier G) \\<and>\n     f \\<in> gHom F G \\<and> inj_on f (carrier F)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier G.\n                         \\<forall>y\\<in>carrier G.\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             x \\<cdot>\\<^bsub>F\\<^esub>\n                            (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                             y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G;\n        f \\<in> gHom F G \\<and>\n        surj_to f (carrier F) (carrier G) \\<and>\n        f \\<in> gHom F G \\<and> inj_on f (carrier F);\n        x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        f \\<in> gHom F G; surj_to f (carrier F) (carrier G);\n        f \\<in> gHom F G; inj_on f (carrier F)\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule gHom_func[of \"F\" \"G\" \"f\"], assumption+,\n       frule inv_func[of \"f\" \"carrier F\" \"carrier G\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        f \\<in> gHom F G; surj_to f (carrier F) (carrier G);\n        f \\<in> gHom F G; inj_on f (carrier F);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule_tac b = x in invfun_mem[of \"f\" \"carrier F\" \"carrier G\"],\n                 assumption+,\n       frule_tac b = y in invfun_mem[of \"f\" \"carrier F\" \"carrier G\"],\n                 assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        f \\<in> gHom F G; surj_to f (carrier F) (carrier G);\n        f \\<in> gHom F G; inj_on f (carrier F);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y\n        \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule_tac x = \"(Ifn F G f) x\" and y = \"(Ifn F G f) y\" in \n                      gHom[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        f \\<in> gHom F G; surj_to f (carrier F) (carrier G);\n        f \\<in> gHom F G; inj_on f (carrier F);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y) =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x) \\<cdot>\\<^bsub>G\\<^esub>\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y)\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (simp only:invfun_r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y) =\n        x \\<cdot>\\<^bsub>G\\<^esub> y\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule sym, thin_tac \"f ((Ifn F G f) x \\<cdot>\\<^bsub>F\\<^esub> (Ifn F G f) y) = x \\<cdot>\\<^bsub>G\\<^esub> y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        x \\<cdot>\\<^bsub>G\\<^esub> y =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y)\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule_tac a = x and b = y in Group.mult_closed[of \"G\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        x \\<cdot>\\<^bsub>G\\<^esub> y =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y);\n        x \\<cdot>\\<^bsub>G\\<^esub> y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule_tac b = \"x \\<cdot>\\<^bsub>G\\<^esub> y\" in invfun_r[of \"f\" \"carrier F\" \n                        \"carrier G\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        x \\<cdot>\\<^bsub>G\\<^esub> y =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y);\n        x \\<cdot>\\<^bsub>G\\<^esub> y \\<in> carrier G;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            (x \\<cdot>\\<^bsub>G\\<^esub> y)) =\n        x \\<cdot>\\<^bsub>G\\<^esub> y\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule_tac r = \"f ((Ifn F G f) (x \\<cdot>\\<^bsub>G\\<^esub> y))\" and s = \"x \\<cdot>\\<^bsub>G\\<^esub> y\" and t = \"f ((Ifn F G f) x \\<cdot>\\<^bsub>F\\<^esub> (Ifn F G f) y)\" in trans, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        x \\<cdot>\\<^bsub>G\\<^esub> y =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y);\n        x \\<cdot>\\<^bsub>G\\<^esub> y \\<in> carrier G;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            (x \\<cdot>\\<^bsub>G\\<^esub> y)) =\n        x \\<cdot>\\<^bsub>G\\<^esub> y;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            (x \\<cdot>\\<^bsub>G\\<^esub> y)) =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y)\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (thin_tac \"f ((Ifn F G f) (x \\<cdot>\\<^bsub>G\\<^esub> y)) = x \\<cdot>\\<^bsub>G\\<^esub> y\",\n        thin_tac \"x \\<cdot>\\<^bsub>G\\<^esub> y = f ((Ifn F G f) x \\<cdot>\\<^bsub>F\\<^esub> (Ifn F G f) y)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        x \\<cdot>\\<^bsub>G\\<^esub> y \\<in> carrier G;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            (x \\<cdot>\\<^bsub>G\\<^esub> y)) =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y)\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (frule_tac b = \"x \\<cdot>\\<^bsub>G\\<^esub> y\" in invfun_mem[of \"f\" \"carrier F\" \"carrier G\"],\n         assumption+,\n        frule_tac a = \"(Ifn F G f) x\" and b = \"(Ifn F G f) y\" in \n         Group.mult_closed[of \"F\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier G; y \\<in> carrier G;\n        True; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F); f \\<in> carrier F \\<rightarrow> carrier G;\n        f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>\n        \\<in> carrier G \\<rightarrow> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) x \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y \\<in> carrier F;\n        x \\<cdot>\\<^bsub>G\\<^esub> y \\<in> carrier G;\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            (x \\<cdot>\\<^bsub>G\\<^esub> y)) =\n        f ((f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n            x \\<cdot>\\<^bsub>F\\<^esub>\n           (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y);\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n         (x \\<cdot>\\<^bsub>G\\<^esub> y)\n        \\<in> carrier F;\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n         x \\<cdot>\\<^bsub>F\\<^esub>\n        (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y\n        \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G\\<^esub> y) =\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          x \\<cdot>\\<^bsub>F\\<^esub>\n                         (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>) y", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inv_gbijec_gbijec:\"\\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> gbij\\<^bsub>G,F\\<^esub> (Ifn F G f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "apply (frule inv_gHom [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                              G,carrier F\\<^esub>) \\<and>\n                      ginj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                              G,carrier F\\<^esub>)\n 2. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "(* gsurjec *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                              G,carrier F\\<^esub>)\n 2. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "apply (simp add:gsurjec_def ginjec_def, (erule conjE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F;\n     f \\<in> gHom F G; surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n     inj_on f (carrier F)\\<rbrakk>\n    \\<Longrightarrow> surj_to\n                       (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                       (carrier G) (carrier F)\n 2. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "apply (frule gHom_func[of \"F\" \"G\" \"f\"], simp add:invfun_surj,\n       assumption+, simp add:invfun_surj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "(* ginjec *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n     f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub> \\<in> gHom G F\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n                             G,carrier F\\<^esub>)", "apply (erule conjE, simp add:gsurjec_def ginjec_def, erule conjE,\n       frule gHom_func[of \"F\" \"G\" \"f\"], assumption+,\n       rule invfun_inj, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma l_inv_gHom:\"\\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow> (Ifn F G f) \\<circ>\\<^bsub>F\\<^esub> f = (I\\<^bsub>F\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier\n     G,carrier F\\<^esub>) \\<circ>\\<^bsub>F\\<^esub> f =\n                      I\\<^bsub>F\\<^esub>", "apply (rule funcset_eq[of _ \"carrier F\"],\n       simp add:cmpghom_def, simp add:idmap_def,\n       rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> ((f\\<inverse>\\<^bsub>carrier\n         G,carrier F\\<^esub>) \\<circ>\\<^bsub>F\\<^esub> f)\n                          x =\n                         I\\<^bsub>F\\<^esub> x", "apply (simp add:idmap_def cmpghom_def compose_def,\n        simp add:gbijec_def gsurjec_def ginjec_def, (erule conjE)+,\n        frule gHom_func[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; x \\<in> carrier F; f \\<in> gHom F G;\n        surj_to f (carrier F) (carrier G); f \\<in> gHom F G;\n        inj_on f (carrier F);\n        f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> (f\\<inverse>\\<^bsub>carrier G,carrier F\\<^esub>)\n                          (f x) =\n                         x", "apply (rule invfun_l, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma img_mult_closed:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; u \\<in> f `(carrier F);\nv \\<in> f `(carrier F)\\<rbrakk> \\<Longrightarrow> u \\<cdot>\\<^bsub>G\\<^esub> v \\<in> f `(carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; u \\<in> f ` carrier F;\n     v \\<in> f ` carrier F\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot>\\<^bsub>G\\<^esub> v \\<in> f ` carrier F", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     \\<exists>x\\<in>carrier F. u = f x;\n     \\<exists>x\\<in>carrier F. v = f x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>carrier F.\n                         u \\<cdot>\\<^bsub>G\\<^esub> v = f x", "apply ((erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        u = f x; xa \\<in> carrier F; v = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>carrier F.\n                            f x \\<cdot>\\<^bsub>G\\<^esub> f xa = f xb", "apply (subst gHom [of \"F\" \"G\" \"f\", THEN sym], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        u = f x; xa \\<in> carrier F; v = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>carrier F.\n                            f (x \\<cdot>\\<^bsub>F\\<^esub> xa) = f xb", "apply (frule_tac a = x and b = xa in Group.mult_closed [of \"F\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        u = f x; xa \\<in> carrier F; v = f xa;\n        x \\<cdot>\\<^bsub>F\\<^esub> xa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>carrier F.\n                            f (x \\<cdot>\\<^bsub>F\\<^esub> xa) = f xb", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma img_unit_closed:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n                                            \\<one>\\<^bsub>G\\<^esub> \\<in> f `(carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\\<^bsub>G\\<^esub> \\<in> f ` carrier F", "apply (cut_tac Group.unit_closed[of \"F\"],\n      frule ghom_unit_unit[THEN sym, of \"F\" \"G\" \"f\"], assumption+,\n      simp add:image_def, blast,\n      assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma imgTr7:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; u \\<in> f `(carrier F)\\<rbrakk>\n  \\<Longrightarrow> \\<rho>\\<^bsub>G\\<^esub> u  \\<in> f `(carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     u \\<in> f ` carrier F\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>G\\<^esub> u \\<in> f ` carrier F", "apply (simp add:image_def, erule bexE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        u = f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>carrier F.\n                            \\<rho>\\<^bsub>G\\<^esub> f x = f xa", "apply (subst ghom_inv_inv[THEN sym, of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        u = f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>carrier F.\n                            f (\\<rho>\\<^bsub>F\\<^esub> x) = f xa", "apply (frule_tac a = x in Group.i_closed[of \"F\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        u = f x; \\<rho>\\<^bsub>F\\<^esub> x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>carrier F.\n                            f (\\<rho>\\<^bsub>F\\<^esub> x) = f xa", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma imgTr8:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H; u \\<in> f ` H; \n                v \\<in> f` H \\<rbrakk> \\<Longrightarrow> u \\<cdot>\\<^bsub>G\\<^esub> v \\<in> f ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n     u \\<in> f ` H; v \\<in> f ` H\\<rbrakk>\n    \\<Longrightarrow> u \\<cdot>\\<^bsub>G\\<^esub> v \\<in> f ` H", "apply (simp add:image_def, (erule bexE)+, simp,\n       subst gHom [of \"F\" \"G\" \"f\" _, THEN sym], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa xb.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x; xa \\<in> H; v = f xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier F\n 2. \\<And>x xa xb.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x; xa \\<in> H; v = f xa\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> carrier F\n 3. \\<And>x xa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x; xa \\<in> H; v = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>H.\n                            f (x \\<cdot>\\<^bsub>F\\<^esub> xa) = f xb", "apply (simp only:Group.sg_subset_elem[of \"F\"],\n         simp only:Group.sg_subset_elem[of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x; xa \\<in> H; v = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>H.\n                            f (x \\<cdot>\\<^bsub>F\\<^esub> xa) = f xb", "apply (frule_tac x = x and y = xa in Group.sg_mult_closed[of \"F\" \"H\"],\n           assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x; xa \\<in> H; v = f xa;\n        x \\<cdot>\\<^bsub>F\\<^esub> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xb\\<in>H.\n                            f (x \\<cdot>\\<^bsub>F\\<^esub> xa) = f xb", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma imgTr9:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H; u \\<in> f ` H\\<rbrakk> \\<Longrightarrow> \n                    \\<rho>\\<^bsub>G\\<^esub> u \\<in> f ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n     u \\<in> f ` H\\<rbrakk>\n    \\<Longrightarrow> \\<rho>\\<^bsub>G\\<^esub> u \\<in> f ` H", "apply (simp add:image_def, erule bexE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            \\<rho>\\<^bsub>G\\<^esub> f x = f xa", "apply (frule_tac h = x in Group.sg_subset_elem[of \"F\" \"H\"], assumption+,\n       simp add:ghom_inv_inv[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n        x \\<in> H; u = f x; x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>H.\n                            f (\\<rho>\\<^bsub>F\\<^esub> x) = f xa", "apply (frule_tac x = x in Group.sg_i_closed [of \"F\" \"H\"], assumption+,\n       blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma imgTr10:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> \\<one>\\<^bsub>G\\<^esub> \\<in> f ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     F \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> \\<one>\\<^bsub>G\\<^esub> \\<in> f ` H", "apply (frule Group.sg_unit_closed[of \"F\" \"H\"], assumption+,\n       subst ghom_unit_unit[THEN sym, of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n     \\<one>\\<^bsub>F\\<^esub> \\<in> H\\<rbrakk>\n    \\<Longrightarrow> f \\<one>\\<^bsub>F\\<^esub> \\<in> f ` H", "apply (simp add:image_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma imgTr11:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> (f ` H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     F \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f ` H", "apply (frule gHom_func[of \"F\" \"G\" \"f\"], assumption+,\n       frule Group.sg_subset[of \"F\" \"H\"], assumption+,\n       frule image_sub[of \"f\" \"carrier F\" \"carrier G\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n     f \\<in> carrier F \\<rightarrow> carrier G; H \\<subseteq> carrier F;\n     f ` H \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f ` H", "apply (rule Group.sg_condition[of \"G\" \"f ` H\"], assumption+,\n       frule imgTr10[of \"F\" \"G\" \"f\" \"H\"], assumption+,\n       rule nonempty, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; F \\<guillemotright> H ;\n     f \\<in> carrier F \\<rightarrow> carrier G; H \\<subseteq> carrier F;\n     f ` H \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a b.\n                         a \\<in> f ` H \\<and>\n                         b \\<in> f ` H \\<longrightarrow>\n                         a \\<cdot>\\<^bsub>G\\<^esub>\n                         \\<rho>\\<^bsub>G\\<^esub> b\n                         \\<in> f ` H", "apply ((rule allI)+, rule impI, erule conjE,\n       frule_tac u = b in imgTr9[of \"F\" \"G\" \"f\" \"H\"], assumption+,\n       frule_tac u = a and v = \"\\<rho>\\<^bsub>G\\<^esub> b\" in imgTr8[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sg_gimg:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk>  \\<Longrightarrow> G \\<guillemotright> f`(carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f ` carrier F", "apply (frule Group.special_sg_G [of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     F \\<guillemotright> carrier F \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f ` carrier F", "apply (simp add:imgTr11)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Group_Img:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> Group (Img\\<^bsub>F,G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> Group (Img\\<^bsub>F,G\\<^esub> f)", "apply (frule sg_gimg [of \"F\" \"G\" \"f\"], assumption+,\n       simp add:Gimage_def Group.Group_Gp[of \"G\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Img_carrier:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> \n                         carrier (Img\\<^bsub>F,G\\<^esub> f) = f ` (carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> carrier (Img\\<^bsub>F,G\\<^esub> f) = f ` carrier F", "by (simp add:Gimage_def Gp_def)"], ["", "lemma hom_to_Img:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)", "by (simp add:gHom_def Gimage_def Gp_def)"], ["", "lemma gker_hom_to_img:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n                               gker\\<^bsub>F,(Img\\<^bsub>F,G\\<^esub> f)\\<^esub> f = gker\\<^bsub>F,G\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub> f =\n                      gker\\<^bsub>F,G\\<^esub> f", "by (simp add:gkernel_def Gimage_def,\n       frule sg_gimg[of \"F\" \"G\" \"f\"], assumption+,\n       simp add:Group.one_Gp_one[of \"G\" \"f ` (carrier F)\"])"], ["", "lemma Pj_im_subg:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> K; K \\<subseteq> H\\<rbrakk> \\<Longrightarrow> \n                         Pj G K ` H = carrier ((Gp G H) / K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> Pj G K ` H =\n                      carrier (\\<natural>\\<^bsub>G\\<^esub>H / K)", "apply (simp add: Qg_def [of \"Gp G H\" \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> Pj G K ` H = set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> Pj G K ` H\n                      \\<subseteq> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\n                      \\<subseteq> Pj G K ` H", "apply (simp add: Pj_def set_rcs_def Group.sg_subset_elem cong: image_cong_simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> (\\<bullet>\\<^bsub>G\\<^esub>) K ` H\n                      \\<subseteq> {C. \\<exists>a\n         \\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n   C = K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub> a}\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\n                      \\<subseteq> Pj G K ` H", "using Group.Gp_rcs Group.carrier_Gp Group.nsg_sg"], ["proof (prove)\nusing this:\n  \\<lbrakk>Group ?G; ?G \\<guillemotright> ?H ; ?G \\<guillemotright> ?K ;\n   ?H \\<subseteq> ?K; ?x \\<in> ?K\\<rbrakk>\n  \\<Longrightarrow> ?H \\<bullet>\\<^bsub>\\<natural>\\<^bsub>?G\\<^esub>?K\\<^esub>\n                    ?x =\n                    ?H \\<bullet>\\<^bsub>?G\\<^esub> ?x\n  \\<lbrakk>Group ?G; ?G \\<guillemotright> ?H \\<rbrakk>\n  \\<Longrightarrow> carrier (\\<natural>\\<^bsub>?G\\<^esub>?H) = ?H\n  \\<lbrakk>Group ?G; ?G \\<triangleright> ?H\\<rbrakk>\n  \\<Longrightarrow> ?G \\<guillemotright> ?H \n\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> (\\<bullet>\\<^bsub>G\\<^esub>) K ` H\n                      \\<subseteq> {C. \\<exists>a\n         \\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n   C = K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub> a}\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\n                      \\<subseteq> Pj G K ` H", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\n                      \\<subseteq> Pj G K ` H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H;\n        x \\<in> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Pj G K ` H", "apply (simp add:image_def Pj_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H;\n        x \\<in> set_rcs (\\<natural>\\<^bsub>G\\<^esub>H) K\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>xa\\<in>H \\<inter> carrier G.\n                             x = K \\<bullet>\\<^bsub>G\\<^esub> xa) \\<or>\n                         x = undefined \\<and>\n                         (\\<exists>x. x \\<in> H \\<and> x \\<notin> carrier G)", "apply (simp add:set_rcs_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H;\n        \\<exists>a\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n           x =\n           K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n           a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>xa\\<in>H \\<inter> carrier G.\n                             x = K \\<bullet>\\<^bsub>G\\<^esub> xa) \\<or>\n                         x = undefined \\<and>\n                         (\\<exists>x. x \\<in> H \\<and> x \\<notin> carrier G)", "apply (simp add:Group.Gp_carrier, erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H; a \\<in> H;\n        x =\n        K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>xa\\<in>H \\<inter> carrier G.\n                             x = K \\<bullet>\\<^bsub>G\\<^esub> xa) \\<or>\n                         x = undefined \\<and>\n                         (\\<exists>x. x \\<in> H \\<and> x \\<notin> carrier G)", "apply (frule Group.nsg_sg[of \"G\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H; a \\<in> H;\n        x = K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub> a;\n        G \\<guillemotright> K \\<rbrakk>\n       \\<Longrightarrow> (\\<exists>xa\\<in>H \\<inter> carrier G.\n                             x = K \\<bullet>\\<^bsub>G\\<^esub> xa) \\<or>\n                         x = undefined \\<and>\n                         (\\<exists>x. x \\<in> H \\<and> x \\<notin> carrier G)", "apply (frule_tac x = a in Group.Gp_rcs[of \"G\" \"K\" \"H\"], assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H; a \\<in> H; x = K \\<bullet>\\<^bsub>G\\<^esub> a;\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub> a =\n        K \\<bullet>\\<^bsub>G\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x\\<in>H \\<inter> carrier G.\n                             K \\<bullet>\\<^bsub>G\\<^esub> a =\n                             K \\<bullet>\\<^bsub>G\\<^esub> x) \\<or>\n                         K \\<bullet>\\<^bsub>G\\<^esub> a = undefined \\<and>\n                         (\\<exists>x. x \\<in> H \\<and> x \\<notin> carrier G)", "apply (frule_tac h = a in Group.sg_subset_elem[of \"G\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H; a \\<in> H; x = K \\<bullet>\\<^bsub>G\\<^esub> a;\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub> a =\n        K \\<bullet>\\<^bsub>G\\<^esub> a;\n        a \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x\\<in>H \\<inter> carrier G.\n                             K \\<bullet>\\<^bsub>G\\<^esub> a =\n                             K \\<bullet>\\<^bsub>G\\<^esub> x) \\<or>\n                         K \\<bullet>\\<^bsub>G\\<^esub> a = undefined \\<and>\n                         (\\<exists>x. x \\<in> H \\<and> x \\<notin> carrier G)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) subg_Qsubg:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> K; K \\<subseteq> H\\<rbrakk> \\<Longrightarrow> \n                            (G / K) \\<guillemotright>  carrier ((Gp G H) / K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K;\n     K \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> G / K \\<guillemotright> carrier (\\<natural>H / K)", "apply (frule Pj_ghom[of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K)\\<rbrakk>\n    \\<Longrightarrow> G / K \\<guillemotright> carrier (\\<natural>H / K)", "apply (frule nsg_sg [of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K \\<rbrakk>\n    \\<Longrightarrow> G / K \\<guillemotright> carrier (\\<natural>H / K)", "apply (frule Group_Qg[of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> G / K \\<guillemotright> carrier (\\<natural>H / K)", "apply (cut_tac imgTr11 [of \"G\" \"G / K\" \"Pj G K\" \"H\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> G / K \\<guillemotright> carrier (\\<natural>H / K) \n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Group G\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Group (G / K)\n 4. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Pj G K \\<in> gHom G (G / K)\n 5. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H", "apply (cut_tac Pj_im_subg [of \"G\" \"H\" \"K\"])"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H ;\n     Pj G K ` H = carrier (\\<natural>H / K)\\<rbrakk>\n    \\<Longrightarrow> G / K \\<guillemotright> carrier (\\<natural>H / K) \n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> Group G\n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H \n 4. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> G \\<triangleright> K\n 5. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> H\n 6. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Group G\n 7. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Group (G / K)\n 8. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Pj G K \\<in> gHom G (G / K)\n 9. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> Group G\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H \n 3. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> G \\<triangleright> K\n 4. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ; Group (G / K);\n     G / K \\<guillemotright> Pj G K ` H \\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> H\n 5. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Group G\n 6. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Group (G / K)\n 7. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> Pj G K \\<in> gHom G (G / K)\n 8. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     Pj G K \\<in> gHom G (G / K); G \\<guillemotright> K ;\n     Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H", "apply (rule Group_axioms | assumption)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Induced homomorphisms\""], ["", "lemma inducedhomTr:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; \n  S \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f); s1 \\<in> S; s2 \\<in> S \\<rbrakk> \\<Longrightarrow> f s1 = f s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     S \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f); s1 \\<in> S;\n     s2 \\<in> S\\<rbrakk>\n    \\<Longrightarrow> f s1 = f s2", "apply (simp add:set_rcs_def, erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; s1 \\<in> S; s2 \\<in> S;\n        a \\<in> carrier F;\n        S = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> f s1 = f s2", "apply (frule_tac a1 = a in gkernTr11[THEN sym, of \"F\" \"G\" \"f\"], assumption+,\n       simp, thin_tac \"S = iim F G f {f a}\",\n       thin_tac \"gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a = iim F G f {f a}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        s1 \\<in> iim F G f {f a}; s2 \\<in> iim F G f {f a};\n        a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f s1 = f s2", "apply (simp add:iim_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  induced_ghom :: \"[('a, 'more) Group_scheme, ('b, 'more1) Group_scheme, \n                ('a  \\<Rightarrow> 'b)] \\<Rightarrow> ('a set  \\<Rightarrow> 'b )\" where\n  \"induced_ghom F G f = (\\<lambda>X\\<in> (set_rcs F (gker\\<^bsub>F,G\\<^esub> f)). f (SOME  x. x \\<in> X))\""], ["", "abbreviation\n  INDUCED_GHOM :: \"['a \\<Rightarrow> 'b, ('a, 'm) Group_scheme, ('b, 'm1) Group_scheme]\n    \\<Rightarrow>  ('a set  \\<Rightarrow> 'b )\" (\"(3_\\<dieresis>\\<^bsub>_,_\\<^esub>)\" [82,82,83]82) where\n  \"f\\<dieresis>\\<^bsub>F,G\\<^esub> == induced_ghom F G f\""], ["", "lemma induced_ghom_someTr:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; \nX \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk> \\<Longrightarrow> f (SOME xa. xa \\<in> X) \\<in> f `(carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     X \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f (SOME xa. xa \\<in> X) \\<in> f ` carrier F", "apply (simp add:set_rcs_def, erule bexE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> f (SOME xa.\n                               xa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n  a)\n                         \\<in> f ` carrier F", "apply (frule gkernTr7 [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n       \\<Longrightarrow> f (SOME xa.\n                               xa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n  a)\n                         \\<in> f ` carrier F", "apply (rule someI2_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                     a\n 2. \\<And>a x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> f ` carrier F", "apply (frule_tac a = a in Group.a_in_rcs[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        a \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                     a\n 2. \\<And>a x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> f ` carrier F", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> f ` carrier F", "apply (frule_tac a = a and x = x in Group.rcs_subset_elem[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        X = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> f ` carrier F", "apply (simp add:image_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma induced_ghom_someTr1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n         f (SOME xa. xa \\<in> (gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a) = f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> f (SOME xa.\n                            xa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                     a) =\n                      f a", "apply (rule someI2_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa.\n                         aa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                  a\n 2. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x = f a", "apply (frule gkernTr7 [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa.\n                         aa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                  a\n 2. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x = f a", "apply (frule Group.a_in_rcs [of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\" \"a\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n     a \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa.\n                         aa \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                  a\n 2. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x = f a", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                a\\<rbrakk>\n       \\<Longrightarrow> f x = f a", "apply (simp add:gkernTr11 [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x \\<in> iim F G f {f a}\\<rbrakk>\n       \\<Longrightarrow> f x = f a", "apply (simp add:iim_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inducedHOMTr0:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk> \\<Longrightarrow>\n     (f\\<dieresis>\\<^bsub>F,G\\<^esub>) ((gker\\<^bsub>F,G\\<^esub> f) \\<bullet>\\<^bsub>F\\<^esub> a) = f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                        a) =\n                      f a", "apply (simp add:induced_ghom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a\n                       \\<in> set_rcs F\n                              (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                       f (SOME x.\n                             x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                     a) =\n                       f a) \\<and>\n                      (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a\n                       \\<notin> set_rcs F\n                                 (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                       undefined = f a)", "apply (frule gkernTr7[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a\n                       \\<in> set_rcs F\n                              (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                       f (SOME x.\n                             x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                     a) =\n                       f a) \\<and>\n                      (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                       a\n                       \\<notin> set_rcs F\n                                 (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                       undefined = f a)", "apply (simp add:Group.rcs_in_set_rcs[of \"F\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n     F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n    \\<Longrightarrow> f (SOME x.\n                            x \\<in> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                                    a) =\n                      f a", "apply (simp add:induced_ghom_someTr1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inducedHOMTr0_1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n                        (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in>  set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> set_rcs F\n                             (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x \\<in> carrier G", "apply (simp add:set_rcs_def, erule bexE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a)\n                         \\<in> carrier G", "apply (subst inducedHOMTr0[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> f a \\<in> carrier G", "apply (simp add:gHom_mem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inducedHOMTr0_2:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow>\n    (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow> f ` (carrier F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> set_rcs F\n                             (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            f ` carrier F", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x\n                         \\<in> f ` carrier F", "apply (simp add:set_rcs_def, erule bexE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a)\n                         \\<in> f ` carrier F", "apply (subst inducedHOMTr0[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> f a \\<in> f ` carrier F", "apply (simp add:image_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inducedHom:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> \n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in> gHom (F/(gker\\<^bsub>F,G\\<^esub> f)) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) G", "apply (simp add: gHom_def [of \"F/ gker\\<^bsub>F,G\\<^esub> f\" \"G\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> extensional\n                             (carrier\n                               (F / gker\\<^bsub>F,G\\<^esub> f)) \\<and>\n                      f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>G\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> extensional\n                             (carrier (F / gker\\<^bsub>F,G\\<^esub> f))\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>G\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (simp add:induced_ghom_def extensional_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> set_rcs F\n                                  (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                         x \\<notin> carrier\n                                     (F /\ngker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                         f (SOME xa. xa \\<in> x) = undefined\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>G\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_rcs F\n                                  (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                         x \\<notin> carrier\n                                     (F /\ngker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                         f (SOME xa. xa \\<in> x) = undefined\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>G\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule impI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f);\n        x \\<notin> carrier (F / gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> f (SOME xa. xa \\<in> x) = undefined\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>G\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (simp add:Qg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>G\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>G\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (simp add:Qg_def inducedHOMTr0_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>G\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f);\n        y \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                           y) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          x \\<cdot>\\<^bsub>G\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (simp add:Qg_def set_rcs_def, (erule bexE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (c_top F (gker\\<^bsub>F,G\\<^esub> f) x y) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          x \\<cdot>\\<^bsub>G\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (c_top F (gker\\<^bsub>F,G\\<^esub> f)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             a)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>G\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (frule gker_normal[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (c_top F (gker\\<^bsub>F,G\\<^esub> f)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             a)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>G\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (simp add:Group.c_top_welldef [THEN sym, of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           (a \\<cdot>\\<^bsub>F\\<^esub> aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>G\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (frule_tac a = a and b = aa in Group.mult_closed[of \"F\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           (a \\<cdot>\\<^bsub>F\\<^esub> aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>G\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (simp add:inducedHOMTr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>G\\<^esub> f aa", "apply (simp add:gHom)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma induced_ghom_ginjec: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> \n            ginj\\<^bsub>(F/(gker\\<^bsub>F,G\\<^esub> f)),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)", "apply (simp add:ginjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) G \\<and>\n                      inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f))", "apply (simp add:inducedHom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f))", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             y \\<longrightarrow>\n                            x = y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f);\n        y \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          y \\<longrightarrow>\n                         x = y", "apply (simp add:Qg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f);\n        y \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          y \\<longrightarrow>\n                         x = y", "apply (simp add:set_rcs_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        \\<exists>a\\<in>carrier F.\n           x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        \\<exists>a\\<in>carrier F.\n           y =\n           gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          y \\<longrightarrow>\n                         x = y", "apply ((erule bexE)+, rule impI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n         (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a) =\n        (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n         (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa)\\<rbrakk>\n       \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                         a =\n                         gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                         aa", "apply (simp add:inducedHOMTr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        f a = f aa\\<rbrakk>\n       \\<Longrightarrow> gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                         a =\n                         gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                         aa", "apply (simp add: gkernTr11[THEN sym])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inducedhomgsurjec:\"\\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f\\<rbrakk> \\<Longrightarrow>\n                                gsurj\\<^bsub>(F/(gker\\<^bsub>F,G\\<^esub> f)),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(F /\n                                    gker\\<^bsub>F,G\\<^esub> f),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)", "apply (simp add:gsurjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     f \\<in> gHom F G \\<and> surj_to f (carrier F) (carrier G)\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) G \\<and>\n                      surj_to (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f)) (carrier G)", "apply (simp add:inducedHom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     f \\<in> gHom F G \\<and> surj_to f (carrier F) (carrier G)\\<rbrakk>\n    \\<Longrightarrow> surj_to (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f)) (carrier G)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G)\\<rbrakk>\n    \\<Longrightarrow> surj_to (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f)) (carrier G)", "apply (frule gHom_func[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> surj_to (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f)) (carrier G)", "apply (rule surj_to_test)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier G.\n                         \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = b", "apply (simp add:Qg_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> set_rcs F\n                             (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier G.\n                         \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = b", "apply (frule inducedHOMTr0_2[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G;\n     f\\<dieresis>\\<^bsub>F,G\\<^esub>\n     \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           f ` carrier F\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> set_rcs F\n                             (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier G\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier G.\n                         \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = b", "apply (simp add:surj_to_def[of \"f\" \"carrier F\" \"carrier G\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     surj_to f (carrier F) (carrier G);\n     f \\<in> carrier F \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier G.\n                         \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = b", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        surj_to f (carrier F) (carrier G);\n        f \\<in> carrier F \\<rightarrow> carrier G;\n        b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = b", "apply (simp add:surj_to_def[of \"f\" \"carrier F\" \"carrier G\"],\n        frule sym, thin_tac \"f ` carrier F = carrier G\", simp,\n        thin_tac \"carrier G = f ` carrier F\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        b \\<in> f ` carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = b", "apply (simp add:image_def, erule bexE, simp,\n        thin_tac \"b = f x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x", "apply (simp add:Qg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x", "apply (frule_tac a = x in inducedHOMTr0[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n         (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x) =\n        f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x", "apply (frule gkernTr7[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n         (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x) =\n        f x;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x", "apply (frule_tac a = x in Group.rcs_in_set_rcs[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"],\n                              assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; x \\<in> carrier F;\n        (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n         (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x) =\n        f x;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma homomtr: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk> \\<Longrightarrow> \n                  (f\\<dieresis>\\<^bsub>F,G\\<^esub>) \\<in> gHom (F / (gker\\<^bsub>F,G\\<^esub> f)) (Img\\<^bsub>F,G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                             (Img\\<^bsub>F,G\\<^esub> f)", "apply (simp add:gHom_def [of \"F / (gker\\<^bsub>F,G\\<^esub> f)\" _])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> extensional\n                             (carrier\n                               (F / gker\\<^bsub>F,G\\<^esub> f)) \\<and>\n                      f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier (Img\\<^bsub>F,G\\<^esub> f) \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> extensional\n                             (carrier (F / gker\\<^bsub>F,G\\<^esub> f))\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier (Img\\<^bsub>F,G\\<^esub> f) \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (simp add:induced_ghom_def extensional_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> set_rcs F\n                                  (gker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                         x \\<notin> carrier\n                                     (F /\ngker\\<^bsub>F,G\\<^esub> f) \\<longrightarrow>\n                         f (SOME xa. xa \\<in> x) = undefined\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier (Img\\<^bsub>F,G\\<^esub> f) \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule allI, (rule impI)+, simp add:Qg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier (Img\\<^bsub>F,G\\<^esub> f) \\<and>\n                      (\\<forall>x\\<in>carrier\n (F / gker\\<^bsub>F,G\\<^esub> f).\n                          \\<forall>y\\<in>carrier\n    (F / gker\\<^bsub>F,G\\<^esub> f).\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                               y) =\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                              x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                             (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,G\\<^esub>\n                      \\<in> carrier\n                             (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n                            carrier (Img\\<^bsub>F,G\\<^esub> f)\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (rule Pi_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x\n                         \\<in> carrier (Img\\<^bsub>F,G\\<^esub> f)\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (simp add:Gimage_def Qg_def Gp_def, simp add:set_rcs_def, erule bexE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x\n                         \\<in> f ` carrier F\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a)\n                         \\<in> f ` carrier F\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (simp add:inducedHOMTr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                              y) =\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                             x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        x \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f);\n        y \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (x \\<cdot>\\<^bsub>F / gker\\<^bsub>F,G\\<^esub> f\\<^esub>\n                           y) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          x \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y", "apply (simp add:Qg_def set_rcs_def, (erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (c_top F (gker\\<^bsub>F,G\\<^esub> f)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             a)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (frule gker_normal[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (c_top F (gker\\<^bsub>F,G\\<^esub> f)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             a)\n                            (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                             aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (simp add:Group.c_top_welldef[THEN sym, of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           (a \\<cdot>\\<^bsub>F\\<^esub> aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (frule_tac a = a and b = aa in Group.mult_closed[of \"F\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           (a \\<cdot>\\<^bsub>F\\<^esub> aa)) =\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           a) \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                         (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n                          (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub>\n                           aa)", "apply (simp add:inducedHOMTr0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                         f aa", "apply (simp add:Gimage_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f ` carrier F\\<^esub>\n                         f aa", "apply (subst Group.Gp_mult_induced[of \"G\" \"f ` carrier F\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> f ` carrier F \n 2. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f a \\<in> f ` carrier F\n 3. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f aa \\<in> f ` carrier F\n 4. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>G\\<^esub> f aa", "apply (simp add:sg_gimg)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f a \\<in> f ` carrier F\n 2. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f aa \\<in> f ` carrier F\n 3. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>G\\<^esub> f aa", "apply (simp add:image_def, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f aa \\<in> f ` carrier F\n 2. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>G\\<^esub> f aa", "apply (simp add:image_def, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y a aa.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; a \\<in> carrier F;\n        x = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> a;\n        aa \\<in> carrier F;\n        y = gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> aa;\n        F \\<triangleright> gker\\<^bsub>F,G\\<^esub> f;\n        a \\<cdot>\\<^bsub>F\\<^esub> aa \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f (a \\<cdot>\\<^bsub>F\\<^esub> aa) =\n                         f a \\<cdot>\\<^bsub>G\\<^esub> f aa", "apply (simp add:gHom)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma homom2img: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow> \n   (f\\<dieresis>\\<^bsub>F,(Img\\<^bsub>F,G\\<^esub> f)\\<^esub>) \\<in> gHom (F / (gker\\<^bsub>F,G\\<^esub> f)) (Img\\<^bsub>F,G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                             (Img\\<^bsub>F,G\\<^esub> f)", "apply (frule hom_to_Img[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                             (Img\\<^bsub>F,G\\<^esub> f)", "apply (frule inducedHom[of \"F\" \"Img\\<^bsub>F,G\\<^esub> f\" \"f\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> Group (Img\\<^bsub>F,G\\<^esub> f)\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\n 3. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub> f)\n            (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                             (Img\\<^bsub>F,G\\<^esub> f)", "apply (simp add:Group_Img)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub> f)\n            (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                             (Img\\<^bsub>F,G\\<^esub> f)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub> f)\n            (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n                      \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                             (Img\\<^bsub>F,G\\<^esub> f)", "apply (simp add:gker_hom_to_img[of \"F\" \"G\" \"f\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma homom2img1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; X \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,(Img\\<^bsub>F,G\\<^esub> f)\\<^esub>) X = (f\\<dieresis>\\<^bsub>F,G\\<^esub>) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     X \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                       X =\n                      (f\\<dieresis>\\<^bsub>F,G\\<^esub>) X", "apply (frule gker_hom_to_img [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     X \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f);\n     gker\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub> f =\n     gker\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                       X =\n                      (f\\<dieresis>\\<^bsub>F,G\\<^esub>) X", "apply (simp add:induced_ghom_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Homomorphism therems\""], ["", "definition\n  iota :: \"('a, 'm) Group_scheme \\<Rightarrow> ('a \\<Rightarrow> 'a)\"  \n(* should be used exclusively as an inclusion map *)\n          (\"(\\<iota>\\<^bsub>_\\<^esub>)\" [1000]999) where\n  \"\\<iota>\\<^bsub>F\\<^esub> = (\\<lambda>x \\<in> carrier F. x)\""], ["", "lemma iotahomTr0:\"\\<lbrakk>Group G; G \\<guillemotright> H; h \\<in> H \\<rbrakk> \\<Longrightarrow> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>) h = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; h \\<in> H\\<rbrakk>\n    \\<Longrightarrow> (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                       h =\n                      h", "apply (simp add:iota_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; h \\<in> H\\<rbrakk>\n    \\<Longrightarrow> h \\<notin> carrier\n                                  (\\<natural>\\<^bsub>G\\<^esub>H) \\<longrightarrow>\n                      undefined = h", "apply (simp add:Gp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iotahom:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> \n                \\<iota>\\<^bsub>(Gp G H)\\<^esub> \\<in> gHom (Gp G H) (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)", "apply (simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> extensional\n                             (carrier (\\<natural>\\<^bsub>G\\<^esub>H)) \\<and>\n                      \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H) \\<rightarrow>\n                            carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<and>\n                      (\\<forall>x\\<in>carrier\n (\\<natural>\\<^bsub>G\\<^esub>H).\n                          \\<forall>y\\<in>carrier\n    (\\<natural>\\<^bsub>G\\<^esub>H).\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                               y) =\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> extensional\n                             (carrier (\\<natural>\\<^bsub>G\\<^esub>H))\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H) \\<rightarrow>\n                            carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<and>\n                      (\\<forall>x\\<in>carrier\n (\\<natural>\\<^bsub>G\\<^esub>H).\n                          \\<forall>y\\<in>carrier\n    (\\<natural>\\<^bsub>G\\<^esub>H).\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                               y) =\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              y)", "apply (simp add:iota_def extensional_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H) \\<rightarrow>\n                            carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<and>\n                      (\\<forall>x\\<in>carrier\n (\\<natural>\\<^bsub>G\\<^esub>H).\n                          \\<forall>y\\<in>carrier\n    (\\<natural>\\<^bsub>G\\<^esub>H).\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                               y) =\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                             (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                              y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H) \\<rightarrow>\n                            carrier\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n                         \\<forall>y\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                              y) =\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             y", "apply (simp add:Pi_def restrict_def iota_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> carrier\n                                  (\\<natural>\\<^bsub>G\\<^esub>H) \\<longrightarrow>\n                         x \\<in> carrier\n                                  (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n                         \\<forall>y\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                              y) =\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             y", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> carrier (\\<natural>\\<^bsub>G\\<^esub>H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier\n                                  (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n                         \\<forall>y\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                              y) =\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             y", "apply (simp add:Gp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n                         \\<forall>y\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                              y) =\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             y", "apply (frule Group.nsg_sg[of \"G\" \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> H; G \\<guillemotright> N \\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n                         \\<forall>y\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                              y) =\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             y", "apply (frule Group.l_sub_smult[of \"G\" \"H\" \"N\"], assumption+, \n                                                   simp add: subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (\\<natural>\\<^bsub>G\\<^esub>H).\n                         \\<forall>y\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                              y) =\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> carrier (\\<natural>\\<^bsub>G\\<^esub>H);\n        y \\<in> carrier (\\<natural>\\<^bsub>G\\<^esub>H)\\<rbrakk>\n       \\<Longrightarrow> (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                          (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                           y) =\n                         (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                         (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                          y", "apply (simp add:iota_def, simp add:Group.Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                          y\n                          \\<in> H \\<longrightarrow>\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                          y =\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                          y) \\<and>\n                         (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                          y\n                          \\<notin> H \\<longrightarrow>\n                          undefined =\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                          y)", "apply (frule Group.smult_sg_nsg[of \"G\" \"H\" \"N\"], assumption+,\n        frule Group.l_sub_smult[of \"G\" \"H\" \"N\"], assumption+,\n        simp add:Group.nsg_sg,\n        frule_tac c = x in subsetD[of \"H\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+,\n        frule_tac c = y in subsetD[of \"H\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> H; y \\<in> H;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        H \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        x \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        y \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                          y\n                          \\<in> H \\<longrightarrow>\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                          y =\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                          y) \\<and>\n                         (x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H\\<^esub>\n                          y\n                          \\<notin> H \\<longrightarrow>\n                          undefined =\n                          x \\<cdot>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                          y)", "apply (simp add:Group.Gp_mult_induced[of \"G\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        x \\<in> H; y \\<in> H;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        H \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        x \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        y \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot>\\<^bsub>G\\<^esub> y\n                         \\<notin> H \\<longrightarrow>\n                         undefined = x \\<cdot>\\<^bsub>G\\<^esub> y", "apply (simp add:Group.sg_mult_closed)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iotaTr0: \"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> \n               ginj\\<^bsub>(Gp G H),(Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>", "apply (simp add:ginjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N) \\<and>\n                      inj_on\n                       (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                       (carrier (\\<natural>\\<^bsub>G\\<^esub>H))", "apply (simp add:iotahom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> inj_on\n                       (\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                       (carrier (\\<natural>\\<^bsub>G\\<^esub>H))", "apply (simp add:inj_on_def iota_def Gp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem homomthm1:\"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n     gbij\\<^bsub>(F/ (gkernel F G f)), (Gimage F G f)\\<^esub> (f\\<dieresis>\\<^bsub>F, (Gimage F G f)\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (frule homom2img [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n            (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n            (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(F /\n                                    gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) \\<and>\n                      ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (frule hom_to_Img [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(F /\n                                    gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) \\<and>\n                      ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (frule Group_coim[of \"F\" \"G\" \"f\"], assumption+,\n       frule gHom_func[of \"F / (gker\\<^bsub>F,G\\<^esub> f)\" \"Img\\<^bsub>F,G\\<^esub> f\" \n        \"f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\"], simp add:Group_Img, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(F /\n                                    gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) \\<and>\n                      ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(F /\n                                    gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "(** gsurjec **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(F /\n                                    gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (simp add:gsurjec_def,\n        rule surj_to_test[of \"f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\" \n        \"carrier (F / gker\\<^bsub>F,G\\<^esub> f)\" \"carrier (Img\\<^bsub>F,G\\<^esub> f)\"], assumption+,\n        rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n               (Img\\<^bsub>F,G\\<^esub> f);\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group (F / gker\\<^bsub>F,G\\<^esub> f);\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              carrier (Img\\<^bsub>F,G\\<^esub> f);\n        b \\<in> carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                             a =\n                            b\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (thin_tac \"f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub> \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n                        (Img\\<^bsub>F,G\\<^esub> f)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group (F / gker\\<^bsub>F,G\\<^esub> f);\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              carrier (Img\\<^bsub>F,G\\<^esub> f);\n        b \\<in> carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                             a =\n                            b\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (simp add:Img_carrier, simp add:image_def, erule bexE, simp,\n        simp add:Qg_def,\n        frule gkernTr7[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group\n         \\<lparr>carrier = set_rcs F (gker\\<^bsub>F,G\\<^esub> f),\n            Group.top = c_top F (gker\\<^bsub>F,G\\<^esub> f),\n            iop = c_iop F (gker\\<^bsub>F,G\\<^esub> f),\n            one = gker\\<^bsub>F,G\\<^esub> f\\<rparr>;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              {y. \\<exists>x\\<in>carrier F. y = f x};\n        x \\<in> carrier F; b = f x;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f \\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                             a =\n                            f x\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (frule_tac a = x in Group.rcs_in_set_rcs[of \"F\" \"gker\\<^bsub>F,G\\<^esub> f\"],\n               assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group\n         \\<lparr>carrier = set_rcs F (gker\\<^bsub>F,G\\<^esub> f),\n            Group.top = c_top F (gker\\<^bsub>F,G\\<^esub> f),\n            iop = c_iop F (gker\\<^bsub>F,G\\<^esub> f),\n            one = gker\\<^bsub>F,G\\<^esub> f\\<rparr>;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              {y. \\<exists>x\\<in>carrier F. y = f x};\n        x \\<in> carrier F; b = f x;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                             a =\n                            f x\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (simp add:homom2img1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group\n         \\<lparr>carrier = set_rcs F (gker\\<^bsub>F,G\\<^esub> f),\n            Group.top = c_top F (gker\\<^bsub>F,G\\<^esub> f),\n            iop = c_iop F (gker\\<^bsub>F,G\\<^esub> f),\n            one = gker\\<^bsub>F,G\\<^esub> f\\<rparr>;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              {y. \\<exists>x\\<in>carrier F. y = f x};\n        x \\<in> carrier F; b = f x;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (frule_tac a = x in inducedHOMTr0[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b x.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group\n         \\<lparr>carrier = set_rcs F (gker\\<^bsub>F,G\\<^esub> f),\n            Group.top = c_top F (gker\\<^bsub>F,G\\<^esub> f),\n            iop = c_iop F (gker\\<^bsub>F,G\\<^esub> f),\n            one = gker\\<^bsub>F,G\\<^esub> f\\<rparr>;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              {y. \\<exists>x\\<in>carrier F. y = f x};\n        x \\<in> carrier F; b = f x;\n        F \\<guillemotright> gker\\<^bsub>F,G\\<^esub> f ;\n        gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f);\n        (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n         (gker\\<^bsub>F,G\\<^esub> f \\<bullet>\\<^bsub>F\\<^esub> x) =\n        f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set_rcs F\n   (gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,G\\<^esub>) a = f x\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "(** gsurjec done **)\n(** ginjec **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (frule induced_ghom_ginjec[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f);\n     ginj\\<^bsub>(F /\n                  gker\\<^bsub>F,G\\<^esub> f),G\\<^esub> (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(F /\n                                   gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)", "apply (simp add:ginjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,G\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) G \\<and>\n     inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n      (carrier (F / gker\\<^bsub>F,G\\<^esub> f))\\<rbrakk>\n    \\<Longrightarrow> inj_on\n                       (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f))", "apply (frule conjunct2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,G\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) G \\<and>\n     inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n      (carrier (F / gker\\<^bsub>F,G\\<^esub> f));\n     inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n      (carrier (F / gker\\<^bsub>F,G\\<^esub> f))\\<rbrakk>\n    \\<Longrightarrow> inj_on\n                       (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f))", "apply (thin_tac \"f\\<dieresis>\\<^bsub>F,G\\<^esub> \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) G \\<and>\n     inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>) (carrier (F / gker\\<^bsub>F,G\\<^esub> f))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f);\n     inj_on (f\\<dieresis>\\<^bsub>F,G\\<^esub>)\n      (carrier (F / gker\\<^bsub>F,G\\<^esub> f))\\<rbrakk>\n    \\<Longrightarrow> inj_on\n                       (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                       (carrier (F / gker\\<^bsub>F,G\\<^esub> f))", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f) (Img\\<^bsub>F,G\\<^esub> f);\n     f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n     Group (F / gker\\<^bsub>F,G\\<^esub> f);\n     f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n     \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n           carrier (Img\\<^bsub>F,G\\<^esub> f);\n     \\<forall>x\\<in>carrier (F / gker\\<^bsub>F,G\\<^esub> f).\n        \\<forall>y\\<in>carrier (F / gker\\<^bsub>F,G\\<^esub> f).\n           (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n           (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y \\<longrightarrow>\n           x = y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier\n(F / gker\\<^bsub>F,G\\<^esub> f).\n                         \\<forall>y\\<in>carrier\n   (F / gker\\<^bsub>F,G\\<^esub> f).\n                            (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                             x =\n                            (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\n                             y \\<longrightarrow>\n                            x = y", "apply ((rule ballI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n               (Img\\<^bsub>F,G\\<^esub> f);\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group (F / gker\\<^bsub>F,G\\<^esub> f);\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              carrier (Img\\<^bsub>F,G\\<^esub> f);\n        \\<forall>x\\<in>carrier (F / gker\\<^bsub>F,G\\<^esub> f).\n           \\<forall>y\\<in>carrier (F / gker\\<^bsub>F,G\\<^esub> f).\n              (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n              (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y \\<longrightarrow>\n              x = y;\n        x \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f);\n        y \\<in> carrier (F / gker\\<^bsub>F,G\\<^esub> f);\n        (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) x =\n        (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:Qg_def, fold Qg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> gHom (F / gker\\<^bsub>F,G\\<^esub> f)\n               (Img\\<^bsub>F,G\\<^esub> f);\n        f \\<in> gHom F (Img\\<^bsub>F,G\\<^esub> f);\n        Group (F / gker\\<^bsub>F,G\\<^esub> f);\n        f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>\n        \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f) \\<rightarrow>\n              carrier (Img\\<^bsub>F,G\\<^esub> f);\n        \\<forall>x\\<in>set_rcs F (gker\\<^bsub>F,G\\<^esub> f).\n           \\<forall>y\\<in>set_rcs F (gker\\<^bsub>F,G\\<^esub> f).\n              (f\\<dieresis>\\<^bsub>F,G\\<^esub>) x =\n              (f\\<dieresis>\\<^bsub>F,G\\<^esub>) y \\<longrightarrow>\n              x = y;\n        x \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f);\n        y \\<in> set_rcs F (gker\\<^bsub>F,G\\<^esub> f);\n        (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) x =\n        (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:homom2img1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isomTr0 [simp]:\"Group F \\<Longrightarrow> F \\<cong> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group F \\<Longrightarrow> F \\<cong> F", "by (frule IdTr2 [of \"F\"], simp add:isomorphic_def,\n       blast)"], ["", "lemma isomTr1:\"\\<lbrakk>Group F; Group G; F \\<cong>  G \\<rbrakk> \\<Longrightarrow> G \\<cong> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; F \\<cong> G\\<rbrakk>\n    \\<Longrightarrow> G \\<cong> F", "apply (simp add:isomorphic_def, erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f. gbij\\<^bsub>G,F\\<^esub> f", "apply (frule_tac f = f in inv_gbijec_gbijec[of \"F\" \"G\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>Group F; Group G; gbij\\<^bsub>F,G\\<^esub> f;\n        gbij\\<^bsub>G,F\\<^esub> (f\\<inverse>\\<^bsub>carrier\n               G,carrier F\\<^esub>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f. gbij\\<^bsub>G,F\\<^esub> f", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isomTr2:\"\\<lbrakk>Group F; Group G; Group H; F \\<cong> G; G \\<cong> H \\<rbrakk> \\<Longrightarrow> F \\<cong> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H; F \\<cong> G; G \\<cong> H\\<rbrakk>\n    \\<Longrightarrow> F \\<cong> H", "apply (simp add:isomorphic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Group H;\n     \\<exists>f. gbij\\<^bsub>F,G\\<^esub> f;\n     \\<exists>f. gbij\\<^bsub>G,H\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> \\<exists>f. gbij\\<^bsub>F,H\\<^esub> f", "apply (erule exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f fa.\n       \\<lbrakk>Group F; Group G; Group H; gbij\\<^bsub>F,G\\<^esub> f;\n        gbij\\<^bsub>G,H\\<^esub> fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f. gbij\\<^bsub>F,H\\<^esub> f", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f fa.\n       \\<lbrakk>Group F; Group G; Group H;\n        gsurj\\<^bsub>F,G\\<^esub> f \\<and> ginj\\<^bsub>F,G\\<^esub> f;\n        gsurj\\<^bsub>G,H\\<^esub> fa \\<and>\n        ginj\\<^bsub>G,H\\<^esub> fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            gsurj\\<^bsub>F,H\\<^esub> f \\<and>\n                            ginj\\<^bsub>F,H\\<^esub> f", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f fa.\n       \\<lbrakk>Group F; Group G; Group H; gsurj\\<^bsub>F,G\\<^esub> f;\n        ginj\\<^bsub>F,G\\<^esub> f; gsurj\\<^bsub>G,H\\<^esub> fa;\n        ginj\\<^bsub>G,H\\<^esub> fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            gsurj\\<^bsub>F,H\\<^esub> f \\<and>\n                            ginj\\<^bsub>F,H\\<^esub> f", "apply (frule gHom_comp_gsurjec [of \"F\" \"G\" \"H\" _ _], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f fa.\n       \\<lbrakk>Group F; Group G; Group H; gsurj\\<^bsub>F,G\\<^esub> f;\n        ginj\\<^bsub>F,G\\<^esub> f; gsurj\\<^bsub>G,H\\<^esub> fa;\n        ginj\\<^bsub>G,H\\<^esub> fa;\n        gsurj\\<^bsub>F,H\\<^esub> (fa \\<circ>\\<^bsub>F\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            gsurj\\<^bsub>F,H\\<^esub> f \\<and>\n                            ginj\\<^bsub>F,H\\<^esub> f", "apply (frule gHom_comp_ginjec [of \"F\" \"G\" \"H\" _ _], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f fa.\n       \\<lbrakk>Group F; Group G; Group H; gsurj\\<^bsub>F,G\\<^esub> f;\n        ginj\\<^bsub>F,G\\<^esub> f; gsurj\\<^bsub>G,H\\<^esub> fa;\n        ginj\\<^bsub>G,H\\<^esub> fa;\n        gsurj\\<^bsub>F,H\\<^esub> (fa \\<circ>\\<^bsub>F\\<^esub> f);\n        ginj\\<^bsub>F,H\\<^esub> (fa \\<circ>\\<^bsub>F\\<^esub> f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            gsurj\\<^bsub>F,H\\<^esub> f \\<and>\n                            ginj\\<^bsub>F,H\\<^esub> f", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma gisom1: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G \\<rbrakk> \\<Longrightarrow>\n     (F/ (gker\\<^bsub>F,G\\<^esub> f)) \\<cong> (Img\\<^bsub>F,G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> (F / gker\\<^bsub>F,G\\<^esub> f) \\<cong>\n                      (Img\\<^bsub>F,G\\<^esub> f)", "apply (simp add:isomorphic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fa.\n                         gbij\\<^bsub>(F /\ngker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> fa", "apply (frule homomthm1 [of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     gbij\\<^bsub>(F /\n                  gker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> (f\\<dieresis>\\<^bsub>F,Img\\<^bsub>F,G\\<^esub> f\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fa.\n                         gbij\\<^bsub>(F /\ngker\\<^bsub>F,G\\<^esub> f),Img\\<^bsub>F,G\\<^esub> f\\<^esub> fa", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma homomth2Tr0: \"\\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow>   \n                           F \\<triangleright> (iim F G f N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> F \\<triangleright> iim F G f N", "apply (frule Group.cond_nsg[of \"F\" \"iim F G f N\"],\n       frule Group.nsg_sg[of \"G\" \"N\"], assumption+,\n       simp add:ghomTr4[of \"F\" \"G\" \"f\" \"N\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; f \\<in> gHom F G;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>carrier F.\n                         \\<forall>h\\<in>iim F G f N.\n                            a \\<cdot>\\<^bsub>F\\<^esub>\n                            h \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> a\n                            \\<in> iim F G f N\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N;\n     F \\<triangleright> iim F G f N\\<rbrakk>\n    \\<Longrightarrow> F \\<triangleright> iim F G f N", "apply ((rule ballI)+,\n       simp add:iim_def, erule conjE,\n       frule_tac a = a in Group.i_closed[of \"F\"], assumption+,\n       frule_tac a = a and b = h in Group.mult_closed[of \"F\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N;\n        a \\<in> carrier F; h \\<in> carrier F; f h \\<in> N;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F;\n        a \\<cdot>\\<^bsub>F\\<^esub> h \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>F\\<^esub>\n                         h \\<cdot>\\<^bsub>F\\<^esub>\n                         \\<rho>\\<^bsub>F\\<^esub> a\n                         \\<in> carrier F \\<and>\n                         f (a \\<cdot>\\<^bsub>F\\<^esub>\n                            h \\<cdot>\\<^bsub>F\\<^esub>\n                            \\<rho>\\<^bsub>F\\<^esub> a)\n                         \\<in> N\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N;\n     F \\<triangleright> iim F G f N\\<rbrakk>\n    \\<Longrightarrow> F \\<triangleright> iim F G f N", "apply (simp add:gHom ghom_inv_inv Group.mult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a h.\n       \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N;\n        a \\<in> carrier F; h \\<in> carrier F; f h \\<in> N;\n        \\<rho>\\<^bsub>F\\<^esub> a \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f a \\<cdot>\\<^bsub>G\\<^esub>\n                         f h \\<cdot>\\<^bsub>G\\<^esub>\n                         \\<rho>\\<^bsub>G\\<^esub> f a\n                         \\<in> N\n 2. \\<lbrakk>Group F; Group G; f \\<in> gHom F G; G \\<triangleright> N;\n     F \\<triangleright> iim F G f N\\<rbrakk>\n    \\<Longrightarrow> F \\<triangleright> iim F G f N", "apply (frule_tac x = a in gHom_mem[of \"F\" \"G\" \"f\"], assumption+,\n       simp add:Group.nsgPr1_1,\n       assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma kern_comp_gHom:\"\\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow>\n                  gker\\<^bsub>F, (G/N)\\<^esub> ((Pj G N) \\<circ>\\<^bsub>F\\<^esub> f) = iim F G f N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>F,(G /\n                                     N)\\<^esub> (Pj G\n            N \\<circ>\\<^bsub>F\\<^esub> f) =\n                      iim F G f N", "apply (simp add:gkernel_def iim_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F.\n                       (Pj G N \\<circ>\\<^bsub>F\\<^esub> f) x =\n                       \\<one>\\<^bsub>G / N\\<^esub>} =\n                      {x \\<in> carrier F. f x \\<in> N}", "apply (simp add:Group.Qg_one[of \"G\" \"N\"] cmpghom_def compose_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> carrier F \\<longrightarrow>\n                           Pj G N (f x) = N) \\<and>\n                          x \\<in> carrier F} =\n                      {x \\<in> carrier F. f x \\<in> N}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> carrier F \\<longrightarrow>\n                           Pj G N (f x) = N) \\<and>\n                          x \\<in> carrier F}\n                      \\<subseteq> {x \\<in> carrier F. f x \\<in> N}\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (rule subsetI, simp, erule conjE, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; Pj G N (f x) = N; x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> N\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (simp add:gsurjec_def, frule conjunct1, fold gsurjec_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; Pj G N (f x) = N; x \\<in> carrier F;\n        f \\<in> gHom F G\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> N\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (frule_tac x = x in gHom_mem[of \"F\" \"G\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; Pj G N (f x) = N; x \\<in> carrier F;\n        f \\<in> gHom F G; f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> N\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (simp add:Group.Pj_mem[of \"G\" \"N\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; N \\<bullet>\\<^bsub>G\\<^esub> f x = N;\n        x \\<in> carrier F; f \\<in> gHom F G; f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> N\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (frule Group.nsg_sg[of \"G\" \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; N \\<bullet>\\<^bsub>G\\<^esub> f x = N;\n        x \\<in> carrier F; f \\<in> gHom F G; f x \\<in> carrier G;\n        G \\<guillemotright> N \\<rbrakk>\n       \\<Longrightarrow> f x \\<in> N\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (frule_tac a = \"f x\" in Group.a_in_rcs[of \"G\" \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; N \\<bullet>\\<^bsub>G\\<^esub> f x = N;\n        x \\<in> carrier F; f \\<in> gHom F G; f x \\<in> carrier G;\n        G \\<guillemotright> N ;\n        f x \\<in> N \\<bullet>\\<^bsub>G\\<^esub> f x\\<rbrakk>\n       \\<Longrightarrow> f x \\<in> N\n 2. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n     G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier F. f x \\<in> N}\n                      \\<subseteq> {x. (x \\<in> carrier F \\<longrightarrow>\n Pj G N (f x) = N) \\<and>\nx \\<in> carrier F}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N;\n        x \\<in> {x \\<in> carrier F. f x \\<in> N}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {x. (x \\<in> carrier F \\<longrightarrow>\nPj G N (f x) = N) \\<and>\n                                     x \\<in> carrier F}", "apply (simp, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; x \\<in> carrier F; f x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> Pj G N (f x) = N", "apply (frule Group.nsg_sg[of \"G\" \"N\"], assumption,\n        frule_tac h = \"f x\" in Group.sg_subset_elem[of \"G\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; x \\<in> carrier F; f x \\<in> N;\n        G \\<guillemotright> N ; f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> Pj G N (f x) = N", "apply (simp add:Group.Pj_mem[of \"G\" \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group F; Group G; gsurj\\<^bsub>F,G\\<^esub> f;\n        G \\<triangleright> N; x \\<in> carrier F; f x \\<in> N;\n        G \\<guillemotright> N ; f x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> N \\<bullet>\\<^bsub>G\\<^esub> f x = N", "apply (simp add:Group.rcs_fixed2[of \"G\" \"N\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma QgrpUnit_1:\"\\<lbrakk>Group G; Ugp E; G \\<triangleright> H; (G / H) \\<cong> E \\<rbrakk> \\<Longrightarrow> carrier G = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<triangleright> H;\n     (G / H) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> carrier G = H", "apply (simp add:isomorphic_def, erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>Group G; Ugp E; G \\<triangleright> H;\n        gbij\\<^bsub>(G / H),E\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> carrier G = H", "apply (frule Group.Group_Qg[of \"G\" \"H\"], assumption+,\n       simp add:gbijec_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>Group G; Ugp E; G \\<triangleright> H; Group (G / H);\n        gsurj\\<^bsub>(G / H),E\\<^esub> f;\n        ginj\\<^bsub>(G / H),E\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> carrier G = H", "apply (frule_tac f = f in gkern2[of \"G / H\" \"E\"],\n       simp add:Ugp_def, simp add:gsurjec_def, assumption,\n       simp add:gsurjec_def, frule conjunct1, fold gsurjec_def,\n       frule_tac f = f in gkern1[of \"G/H\" \"E\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>Group G; Ugp E; G \\<triangleright> H; Group (G / H);\n        gsurj\\<^bsub>(G / H),E\\<^esub> f; ginj\\<^bsub>(G / H),E\\<^esub> f;\n        gker\\<^bsub>(G / H),E\\<^esub> f = {\\<one>\\<^bsub>G / H\\<^esub>};\n        f \\<in> gHom (G / H) E;\n        gker\\<^bsub>(G / H),E\\<^esub> f = carrier (G / H)\\<rbrakk>\n       \\<Longrightarrow> carrier G = H", "apply (simp, thin_tac \"gker\\<^bsub>(G / H),E\\<^esub> f = {\\<one>\\<^bsub>G / H\\<^esub>}\",\n        thin_tac \"gsurj\\<^bsub>(G / H),E\\<^esub> f\", thin_tac \"ginj\\<^bsub>(G / H),E\\<^esub> f\",\n        thin_tac \"Group (G / H)\", thin_tac \"f \\<in> gHom (G / H) E\",\n        simp add:Group.Qg_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<triangleright> H;\n     set_rcs G H = {\\<one>\\<^bsub>G / H\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> carrier G = H", "apply (rule contrapos_pp, simp+,\n       frule Group.nsg_sg[of \"G\" \"H\"], assumption+,\n       frule Group.sg_subset[of \"G\" \"H\"], assumption+,\n       frule sets_not_eq[of \"carrier G\" \"H\"], assumption, erule bexE,\n       frule_tac a = a in Group.rcs_in_set_rcs[of \"G\" \"H\"], assumption+,\n       simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>Group G; Ugp E; G \\<triangleright> H;\n        set_rcs G H = {\\<one>\\<^bsub>G / H\\<^esub>}; carrier G \\<noteq> H;\n        G \\<guillemotright> H ; H \\<subseteq> carrier G; a \\<in> carrier G;\n        a \\<notin> H;\n        H \\<bullet>\\<^bsub>G\\<^esub> a =\n        \\<one>\\<^bsub>G / H\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "apply (thin_tac \"set_rcs G H = {\\<one>\\<^bsub>G / H\\<^esub>}\", simp add:Qg_def,\n        frule_tac a = a in Group.a_in_rcs[of \"G\" \"H\"], assumption+,\n        simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma QgrpUnit_2:\"\\<lbrakk>Group G; Ugp E; G \\<triangleright> H; carrier G = H\\<rbrakk> \\<Longrightarrow> (G/H) \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<triangleright> H; carrier G = H\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (frule Group.Group_Qg [of \"G\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<triangleright> H; carrier G = H;\n     Group (G / H)\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (simp add:Group.Qg_unit_group[THEN sym, of \"G\" \"H\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<triangleright> H; set_rcs G H = {H};\n     Group (G / H)\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (simp add:Ugp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n     G \\<triangleright> H; set_rcs G H = {H}; Group (G / H)\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (frule Group.Qg_carrier[of \"G\" \"H\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n     G \\<triangleright> H; set_rcs G H = {H}; Group (G / H);\n     carrier (G / H) = {H}\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (thin_tac \"set_rcs G H = {H}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n     G \\<triangleright> H; Group (G / H); carrier (G / H) = {H}\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (frule Group.Qg_one[of \"G\" \"H\"], assumption+, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> H; Group (G / H);\n     carrier (G / H) = {H}; \\<one>\\<^bsub>G / H\\<^esub> = H; Group E;\n     carrier E = {\\<one>\\<^bsub>E\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> (G / H) \\<cong> E", "apply (rule Ugps_isomorphic[of \"G / H\" \"E\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<triangleright> H; Group (G / H);\n     carrier (G / H) = {H}; \\<one>\\<^bsub>G / H\\<^esub> = H; Group E;\n     carrier E = {\\<one>\\<^bsub>E\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> Ugp (G / H)\n 2. \\<lbrakk>Group G; G \\<triangleright> H; Group (G / H);\n     carrier (G / H) = {H}; \\<one>\\<^bsub>G / H\\<^esub> = H; Group E;\n     carrier E = {\\<one>\\<^bsub>E\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> Ugp E", "apply (simp add:Ugp_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma QgrpUnit_3:\"\\<lbrakk>Group G; Ugp E; G \\<guillemotright> H; G \\<guillemotright> H1; (Gp G H) \\<triangleright> H1;\n                    ((Gp G H) / H1) \\<cong> E \\<rbrakk> \\<Longrightarrow> H = H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H ;\n     G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     (\\<natural>\\<^bsub>G\\<^esub>H / H1) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> H = H1", "apply (frule Group.Group_Gp[of \"G\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H ;\n     G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     (\\<natural>\\<^bsub>G\\<^esub>H / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H)\\<rbrakk>\n    \\<Longrightarrow> H = H1", "apply (frule QgrpUnit_1 [of \"Gp G H\" \"E\" \"H1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H ;\n     G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     (\\<natural>\\<^bsub>G\\<^esub>H / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     carrier (\\<natural>\\<^bsub>G\\<^esub>H) = H1\\<rbrakk>\n    \\<Longrightarrow> H = H1", "apply (simp add:Group.Gp_carrier)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma QgrpUnit_4:\"\\<lbrakk>Group G; Ugp E; G \\<guillemotright> H; G \\<guillemotright> H1; (Gp G H) \\<triangleright> H1;\n\\<not> ((Gp G H) / H1) \\<cong> E \\<rbrakk> \\<Longrightarrow> H \\<noteq> H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H ;\n     G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H / H1) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> H \\<noteq> H1", "apply (frule Group.Group_Gp[of \"G\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H ;\n     G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H)\\<rbrakk>\n    \\<Longrightarrow> H \\<noteq> H1", "apply (rule contrapos_pp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H ;\n     G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H); \\<not> H \\<noteq> H1\\<rbrakk>\n    \\<Longrightarrow> \\<not> True", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H1 / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H1); H = H1\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule QgrpUnit_2 [of \"Gp G H1\" \"E\" \"H1\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H1 / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H1); H = H1\\<rbrakk>\n    \\<Longrightarrow> carrier (\\<natural>\\<^bsub>G\\<^esub>H1) = H1\n 2. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H1 / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H1); H = H1;\n     (\\<natural>\\<^bsub>G\\<^esub>H1 / H1) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:Group.Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; G \\<guillemotright> H1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<triangleright> H1;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>H1 / H1) \\<cong> E;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H1); H = H1;\n     (\\<natural>\\<^bsub>G\\<^esub>H1 / H1) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  Qmp :: \"[('a, 'm) Group_scheme, 'a set, 'a set] \\<Rightarrow> ('a set \\<Rightarrow> 'a set)\" where\n  \"Qmp G H N = (\\<lambda>X\\<in> set_rcs G H. {z. \\<exists> x \\<in> X. \\<exists> y \\<in> N. (y \\<cdot>\\<^bsub>G\\<^esub> x = z)})\""], ["", "abbreviation\n  QP :: \"[_, 'a set, 'a set] \\<Rightarrow> ('a set \\<Rightarrow> 'a set)\"\n    (\"(3Qm\\<^bsub>_ _,_\\<^esub>)\" [82,82,83]82) where\n  \"Qm\\<^bsub>G H,N\\<^esub> == Qmp G H N\""], ["", "(* \"\\<lbrakk> Group G; G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow>\n           Qmp\\<^bsub>G H,N\\<^esub>  \\<in> gHom (G / H) (G / N)\"  *)\n\n  (* show Qmp G H N is a welldefined map from G/H to G/N. step1 *)"], ["", "lemma (in Group) QmpTr0:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N ; a \\<in> carrier G\\<rbrakk> \\<Longrightarrow>\n                                          Qmp G H N (H \\<bullet> a) = (N \\<bullet> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> a) =\n                      N \\<bullet> a", "apply (frule_tac a = a in rcs_in_set_rcs[of \"H\"], assumption,\n       simp add:Qmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G;\n     H \\<bullet> a \\<in> set_rcs G H\\<rbrakk>\n    \\<Longrightarrow> {z. \\<exists>x\\<in>H \\<bullet> a.\n                             \\<exists>y\\<in>N. y \\<cdot> x = z} =\n                      N \\<bullet> a", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G;\n     H \\<bullet> a \\<in> set_rcs G H\\<rbrakk>\n    \\<Longrightarrow> {z. \\<exists>x\\<in>H \\<bullet> a.\n                             \\<exists>y\\<in>N. y \\<cdot> x = z}\n                      \\<subseteq> N \\<bullet> a\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G;\n     H \\<bullet> a \\<in> set_rcs G H\\<rbrakk>\n    \\<Longrightarrow> N \\<bullet> a\n                      \\<subseteq> {z. \\<exists>x\\<in>H \\<bullet> a.\n   \\<exists>y\\<in>N. y \\<cdot> x = z}", "apply (rule subsetI, simp, (erule bexE)+,\n        thin_tac \"H \\<bullet> a \\<in> set_rcs G H\",\n        simp add:rcs_def, erule bexE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n        H \\<subseteq> N; a \\<in> carrier G; y \\<in> N; y \\<cdot> xa = x;\n        h \\<in> H; h \\<cdot> a = xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h\\<in>N. h \\<cdot> a = x\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G;\n     H \\<bullet> a \\<in> set_rcs G H\\<rbrakk>\n    \\<Longrightarrow> N \\<bullet> a\n                      \\<subseteq> {z. \\<exists>x\\<in>H \\<bullet> a.\n   \\<exists>y\\<in>N. y \\<cdot> x = z}", "apply (frule sym, thin_tac \"y \\<cdot> xa = x\", frule sym, thin_tac \"h \\<cdot> a = xa\",\n        simp,\n        frule_tac h = y in sg_subset_elem[of \"N\"], assumption+,\n        frule_tac h = h in sg_subset_elem[of \"H\"], assumption+,\n        frule_tac c = h in subsetD[of \"H\" \"N\"], assumption+,\n        frule_tac x = y and y = h in sg_mult_closed[of \"N\"], assumption+,\n        subst tassoc[THEN sym], assumption+, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G;\n     H \\<bullet> a \\<in> set_rcs G H\\<rbrakk>\n    \\<Longrightarrow> N \\<bullet> a\n                      \\<subseteq> {z. \\<exists>x\\<in>H \\<bullet> a.\n   \\<exists>y\\<in>N. y \\<cdot> x = z}", "apply (rule subsetI,\n       thin_tac \"H \\<bullet> a \\<in> set_rcs G H\",\n       simp add:rcs_def, erule bexE,\n       frule sg_unit_closed[of \"H\"],\n       frule l_unit[of \"a\"], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* show Qmp G H N is a welldefined map from G/H to G/N. step2 *)"], ["", "lemma (in Group) QmpTr1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N; a \\<in> carrier G; b \\<in> carrier G; \n                      H \\<bullet> a = H \\<bullet> b\\<rbrakk> \\<Longrightarrow> N \\<bullet> a = N \\<bullet> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; a \\<in> carrier G; b \\<in> carrier G;\n     H \\<bullet> a = H \\<bullet> b\\<rbrakk>\n    \\<Longrightarrow> N \\<bullet> a = N \\<bullet> b", "apply (simp add:rcs_eq[THEN sym, of \"H\" \"a\" \"b\"],\n       frule subsetD[of \"H\" \"N\" \"b \\<cdot> \\<rho> a\"], assumption+,\n       simp add:rcs_eq[of \"N\" \"a\" \"b\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) QmpTr2:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N ; X \\<in> carrier (G/H)\\<rbrakk>\n                        \\<Longrightarrow> (Qmp G H N) X \\<in> carrier (G/N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N; X \\<in> carrier (G / H)\\<rbrakk>\n    \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>) X \\<in> carrier (G / N)", "by (simp add:Qg_carrier[of \"H\"] set_rcs_def, erule bexE, simp add: QmpTr0,\n       simp add:Qg_carrier rcs_in_set_rcs)"], ["", "lemma (in Group) QmpTr2_1:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow> \n                           Qmp G H N \\<in> carrier (G/H) \\<rightarrow> carrier (G/N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> N ;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow> carrier (G / N)", "by (simp add:QmpTr2 [of \"H\" \"N\"])"], ["", "lemma (in Group) QmpTr3:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N; X \\<in> carrier (G/H); \n       Y \\<in> carrier (G/H)\\<rbrakk> \\<Longrightarrow> \n     (Qmp G H N) (c_top G H X Y) = c_top G N ((Qmp G H N) X) ((Qmp G H N) Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     X \\<in> carrier (G / H); Y \\<in> carrier (G / H)\\<rbrakk>\n    \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>) (c_top G H X Y) =\n                      c_top G N ((Qm\\<^bsub>G H,N\\<^esub>) X)\n                       ((Qm\\<^bsub>G H,N\\<^esub>) Y)", "apply (frule nsg_sg[of \"H\"], frule nsg_sg[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     X \\<in> carrier (G / H); Y \\<in> carrier (G / H);\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>) (c_top G H X Y) =\n                      c_top G N ((Qm\\<^bsub>G H,N\\<^esub>) X)\n                       ((Qm\\<^bsub>G H,N\\<^esub>) Y)", "apply (simp add:Qg_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     X \\<in> set_rcs G H; Y \\<in> set_rcs G H; G \\<guillemotright> H ;\n     G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>) (c_top G H X Y) =\n                      c_top G N ((Qm\\<^bsub>G H,N\\<^esub>) X)\n                       ((Qm\\<^bsub>G H,N\\<^esub>) Y)", "apply (simp add:set_rcs_def, (erule bexE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> carrier G;\n        X = H \\<bullet> a; aa \\<in> carrier G; Y = H \\<bullet> aa\\<rbrakk>\n       \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>)\n                          (c_top G H (H \\<bullet> a) (H \\<bullet> aa)) =\n                         c_top G N\n                          ((Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> a))\n                          ((Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> aa))", "apply (subst c_top_welldef [THEN sym], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> carrier G;\n        X = H \\<bullet> a; aa \\<in> carrier G; Y = H \\<bullet> aa\\<rbrakk>\n       \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>)\n                          (H \\<bullet> (a \\<cdot> aa)) =\n                         c_top G N\n                          ((Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> a))\n                          ((Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> aa))", "apply (frule_tac  a = a and b = aa in mult_closed, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> carrier G;\n        X = H \\<bullet> a; aa \\<in> carrier G; Y = H \\<bullet> aa;\n        a \\<cdot> aa \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>)\n                          (H \\<bullet> (a \\<cdot> aa)) =\n                         c_top G N\n                          ((Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> a))\n                          ((Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> aa))", "apply (simp add:QmpTr0)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> carrier G;\n        X = H \\<bullet> a; aa \\<in> carrier G; Y = H \\<bullet> aa;\n        a \\<cdot> aa \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> N \\<bullet> (a \\<cdot> aa) =\n                         c_top G N (N \\<bullet> a) (N \\<bullet> aa)", "apply (subst c_top_welldef [THEN sym], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; a \\<in> carrier G;\n        X = H \\<bullet> a; aa \\<in> carrier G; Y = H \\<bullet> aa;\n        a \\<cdot> aa \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> N \\<bullet> (a \\<cdot> aa) =\n                         N \\<bullet> (a \\<cdot> aa)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Gp_s_mult_nsg:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N; a \\<in> N \\<rbrakk> \\<Longrightarrow>\n                                 H \\<bullet>\\<^bsub>(Gp G N)\\<^esub> a =  H \\<bullet> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     a \\<in> N\\<rbrakk>\n    \\<Longrightarrow> H \\<bullet>\\<^bsub>\\<natural>N\\<^esub> a =\n                      H \\<bullet> a", "by (frule nsg_sg[of \"H\"], frule nsg_sg[of \"N\"], \n                          rule Gp_rcs[of \"H\" \"N\" \"a\"], assumption+)"], ["", "lemma (in Group) QmpTr5:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N; X \\<in> carrier (G/H); \n      Y \\<in> carrier (G/H) \\<rbrakk> \\<Longrightarrow> (Qmp G H N) ( X \\<cdot>\\<^bsub>(G / H)\\<^esub> Y) =\n                              ((Qmp G H N) X) \\<cdot>\\<^bsub>(G / N)\\<^esub> ((Qmp G H N) Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     X \\<in> carrier (G / H); Y \\<in> carrier (G / H)\\<rbrakk>\n    \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>)\n                       (X \\<cdot>\\<^bsub>G / H\\<^esub> Y) =\n                      (Qm\\<^bsub>G H,N\\<^esub>)\n                       X \\<cdot>\\<^bsub>G / N\\<^esub>\n                      (Qm\\<^bsub>G H,N\\<^esub>) Y", "by (frule nsg_sg[of \"H\"], frule nsg_sg[of \"N\"],\n       (subst Qg_def)+, simp,\n       simp add:QmpTr3 [of \"H\" \"N\" \"X\" \"Y\"])"], ["", "lemma (in Group) QmpTr:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow>\n                            (Qm\\<^bsub>G H,N\\<^esub>) \\<in> gHom (G / H) (G / N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)", "apply (simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> extensional (carrier (G / H)) \\<and>\n                      Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow>\n                            carrier (G / N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / H).\n                          \\<forall>y\\<in>carrier (G / H).\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              x \\<cdot>\\<^bsub>G / N\\<^esub>\n                             (Qm\\<^bsub>G H,N\\<^esub>) y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> extensional (carrier (G / H))\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow>\n                            carrier (G / N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / H).\n                          \\<forall>y\\<in>carrier (G / H).\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              x \\<cdot>\\<^bsub>G / N\\<^esub>\n                             (Qm\\<^bsub>G H,N\\<^esub>) y)", "apply (simp add:Qmp_def extensional_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> set_rcs G H \\<longrightarrow>\n                         x \\<notin> carrier (G / H) \\<longrightarrow>\n                         {z. \\<exists>x\\<in>x.\n                                \\<exists>y\\<in>N. y \\<cdot> x = z} =\n                         undefined\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow>\n                            carrier (G / N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / H).\n                          \\<forall>y\\<in>carrier (G / H).\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              x \\<cdot>\\<^bsub>G / N\\<^esub>\n                             (Qm\\<^bsub>G H,N\\<^esub>) y)", "apply (rule allI, (rule impI)+, simp add:Qg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow>\n                            carrier (G / N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / H).\n                          \\<forall>y\\<in>carrier (G / H).\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                             (Qm\\<^bsub>G H,N\\<^esub>)\n                              x \\<cdot>\\<^bsub>G / N\\<^esub>\n                             (Qm\\<^bsub>G H,N\\<^esub>) y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow> carrier (G / N)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (G / H).\n                         \\<forall>y\\<in>carrier (G / H).\n                            (Qm\\<^bsub>G H,N\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                            (Qm\\<^bsub>G H,N\\<^esub>)\n                             x \\<cdot>\\<^bsub>G / N\\<^esub>\n                            (Qm\\<^bsub>G H,N\\<^esub>) y", "apply (rule QmpTr2_1[of \"H\" \"N\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> H \n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> N \n 3. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> N\n 4. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (G / H).\n                         \\<forall>y\\<in>carrier (G / H).\n                            (Qm\\<^bsub>G H,N\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                            (Qm\\<^bsub>G H,N\\<^esub>)\n                             x \\<cdot>\\<^bsub>G / N\\<^esub>\n                            (Qm\\<^bsub>G H,N\\<^esub>) y", "apply (simp add:nsg_sg)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (G / H).\n                         \\<forall>y\\<in>carrier (G / H).\n                            (Qm\\<^bsub>G H,N\\<^esub>)\n                             (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                            (Qm\\<^bsub>G H,N\\<^esub>)\n                             x \\<cdot>\\<^bsub>G / N\\<^esub>\n                            (Qm\\<^bsub>G H,N\\<^esub>) y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        x \\<in> carrier (G / H); y \\<in> carrier (G / H)\\<rbrakk>\n       \\<Longrightarrow> (Qm\\<^bsub>G H,N\\<^esub>)\n                          (x \\<cdot>\\<^bsub>G / H\\<^esub> y) =\n                         (Qm\\<^bsub>G H,N\\<^esub>)\n                          x \\<cdot>\\<^bsub>G / N\\<^esub>\n                         (Qm\\<^bsub>G H,N\\<^esub>) y", "apply (simp add:QmpTr5)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Qmpgsurjec:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow> \n                                      gsurj\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G /\n                                    H),(G /\n  N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)", "apply (frule nsg_sg[of \"H\"], frule nsg_sg[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G /\n                                    H),(G /\n  N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)", "apply (frule QmpTr [of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N ;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G /\n                                    H),(G /\n  N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)", "apply (simp add:gsurjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N ;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> surj_to (Qm\\<^bsub>G H,N\\<^esub>) (carrier (G / H))\n                       (carrier (G / N))", "apply (rule surj_to_test)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N ;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> Qm\\<^bsub>G H,N\\<^esub>\n                      \\<in> carrier (G / H) \\<rightarrow> carrier (G / N)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N ;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier (G / N).\n                         \\<exists>a\\<in>carrier (G / H).\n                            (Qm\\<^bsub>G H,N\\<^esub>) a = b", "apply (simp add:QmpTr2_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N ;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier (G / N).\n                         \\<exists>a\\<in>carrier (G / H).\n                            (Qm\\<^bsub>G H,N\\<^esub>) a = b", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ;\n        Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N);\n        b \\<in> carrier (G / N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier (G / H).\n                            (Qm\\<^bsub>G H,N\\<^esub>) a = b", "apply (simp add:Qg_carrier,\n        simp add:set_rcs_def[of \"G\" \"N\"], erule bexE,\n        frule_tac a = a in QmpTr0[of \"H\" \"N\"], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ;\n        Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N);\n        a \\<in> carrier G; b = N \\<bullet> a;\n        (Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> a) = N \\<bullet> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa\\<in>set_rcs G H.\n                            (Qm\\<^bsub>G H,N\\<^esub>) aa = N \\<bullet> a", "apply (frule_tac a = a in rcs_in_set_rcs[of \"H\"], assumption+,\n        blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gkerQmp:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N \\<rbrakk> \\<Longrightarrow>\n               gker\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>) = carrier ((Gp G N)/ H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>(G /\n                                   H),(G /\n N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>) =\n                      carrier (\\<natural>N / H)", "apply (frule nsg_sg[of \"H\"], frule nsg_sg[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> gker\\<^bsub>(G /\n                                   H),(G /\n N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>) =\n                      carrier (\\<natural>N / H)", "apply (simp add:gkernel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier (G / H).\n                       (Qm\\<^bsub>G H,N\\<^esub>) x =\n                       \\<one>\\<^bsub>G / N\\<^esub>} =\n                      carrier (\\<natural>N / H)", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> {x \\<in> carrier (G / H).\n                       (Qm\\<^bsub>G H,N\\<^esub>) x =\n                       \\<one>\\<^bsub>G / N\\<^esub>}\n                      \\<subseteq> carrier (\\<natural>N / H)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> carrier (\\<natural>N / H)\n                      \\<subseteq> {x \\<in> carrier (G / H).\n                                   (Qm\\<^bsub>G H,N\\<^esub>) x =\n                                   \\<one>\\<^bsub>G / N\\<^esub>}", "apply (rule subsetI,\n        simp add:Qg_carrier set_rcs_def, erule conjE, erule bexE, simp,\n        simp add:Qg_one)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ;\n        (Qm\\<^bsub>G H,N\\<^esub>) (H \\<bullet> a) = N; a \\<in> carrier G;\n        x = H \\<bullet> a\\<rbrakk>\n       \\<Longrightarrow> H \\<bullet> a \\<in> carrier (\\<natural>N / H)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> carrier (\\<natural>N / H)\n                      \\<subseteq> {x \\<in> carrier (G / H).\n                                   (Qm\\<^bsub>G H,N\\<^esub>) x =\n                                   \\<one>\\<^bsub>G / N\\<^esub>}", "apply (simp add:QmpTr0,\n        frule_tac a = a in a_in_rcs[of \"N\"], assumption+, simp,\n        frule Group_Gp[of \"N\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; N \\<bullet> a = N;\n        a \\<in> carrier G; x = H \\<bullet> a; a \\<in> N;\n        Group (\\<natural>N)\\<rbrakk>\n       \\<Longrightarrow> H \\<bullet> a \\<in> carrier (\\<natural>N / H)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> carrier (\\<natural>N / H)\n                      \\<subseteq> {x \\<in> carrier (G / H).\n                                   (Qm\\<^bsub>G H,N\\<^esub>) x =\n                                   \\<one>\\<^bsub>G / N\\<^esub>}", "apply (simp add:Group.Qg_carrier, simp add:set_rcs_def, simp add:Gp_carrier,\n        simp add:Gp_rcs, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     G \\<guillemotright> H ; G \\<guillemotright> N \\<rbrakk>\n    \\<Longrightarrow> carrier (\\<natural>N / H)\n                      \\<subseteq> {x \\<in> carrier (G / H).\n                                   (Qm\\<^bsub>G H,N\\<^esub>) x =\n                                   \\<one>\\<^bsub>G / N\\<^esub>}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ;\n        x \\<in> carrier (\\<natural>N / H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {x \\<in> carrier (G / H).\n                                  (Qm\\<^bsub>G H,N\\<^esub>) x =\n                                  \\<one>\\<^bsub>G / N\\<^esub>}", "apply (frule Group_Gp[of \"N\"],\n        simp add:Group.Qg_carrier Qg_one set_rcs_def, erule bexE,\n        simp add:Qg_carrier, thin_tac \"x = H \\<bullet>\\<^bsub>\\<natural>N\\<^esub> a\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n        G \\<guillemotright> H ; G \\<guillemotright> N ; Group (\\<natural>N);\n        a \\<in> carrier (\\<natural>N)\\<rbrakk>\n       \\<Longrightarrow> H \\<bullet>\\<^bsub>\\<natural>N\\<^esub> a\n                         \\<in> set_rcs G H \\<and>\n                         (Qm\\<^bsub>G H,N\\<^esub>)\n                          (H \\<bullet>\\<^bsub>\\<natural>N\\<^esub> a) =\n                         N", "apply (simp add:Gp_carrier, simp add:Gp_rcs,\n        frule_tac h = a in sg_subset_elem[of \"N\"], assumption,\n        simp add:rcs_in_set_rcs, simp add:QmpTr0,\n        simp add:rcs_fixed2[of \"N\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem (in Group) homom2:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N\\<rbrakk> \\<Longrightarrow>\n          gbij\\<^bsub>((G/H)/(carrier ((Gp G N)/H))),(G/N)\\<^esub> ((Qm\\<^bsub>G H,N\\<^esub>)\\<dieresis>\\<^bsub>(G/H),(G/N)\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule QmpTr [of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>) \\<and>\n                      ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule Group_Qg[of \"H\"], frule Group_Qg[of \"N\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule inducedHom [of \"G/H\" \"G/N\" \" Qmp G H N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N);\n     Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G / H),(G / N)\\<^esub>\n     \\<in> gHom\n            (G / H /\n             gker\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>))\n            (G / N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "(** show  surj_to **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N);\n     Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G / H),(G / N)\\<^esub>\n     \\<in> gHom\n            (G / H /\n             gker\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>))\n            (G / N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule Qmpgsurjec [of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N);\n     Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G / H),(G / N)\\<^esub>\n     \\<in> gHom\n            (G / H /\n             gker\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>))\n            (G / N);\n     gsurj\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule inducedhomgsurjec [of \"G/H\" \"G/N\" \"Qm\\<^bsub>G H,N\\<^esub>\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N);\n     Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G / H),(G / N)\\<^esub>\n     \\<in> gHom\n            (G / H /\n             gker\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>))\n            (G / N);\n     gsurj\\<^bsub>(G / H),(G / N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>);\n     gsurj\\<^bsub>(G / H /\n                   gker\\<^bsub>(G /\n                                H),(G /\n                                    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)),(G /\n                                     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                H),(G / N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(G / H /\n                                    carrier\n                                     (\\<natural>N /\nH)),(G /\n     N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                      H),(G / N)\\<^esub>)\n 2. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (simp add:gkerQmp [of \"H\" \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "(** show ginj **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule QmpTr [of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N);\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule Group_Qg[of \"H\"], frule Group_Qg[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N);\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (frule induced_ghom_ginjec [of \"G/H\" \"G/N\" \"Qmp G H N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N);\n     Qm\\<^bsub>G H,N\\<^esub> \\<in> gHom (G / H) (G / N); Group (G / H);\n     Group (G / N);\n     ginj\\<^bsub>(G / H /\n                  gker\\<^bsub>(G /\n                               H),(G /\n                                   N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>)),(G /\n                                    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n               H),(G / N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> ginj\\<^bsub>(G / H /\n                                   carrier\n                                    (\\<natural>N /\n                                     H)),(G /\n    N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n                     H),(G / N)\\<^esub>)", "apply (simp add:gkerQmp [of \"H\" \"N\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Isomorphims\""], ["", "theorem (in Group) isom2:\"\\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N\\<rbrakk> \\<Longrightarrow>\n               ((G/H)/(carrier ((Gp G N)/H))) \\<cong>  (G/N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N;\n     H \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> (G / H / carrier (\\<natural>N / H)) \\<cong> (G / N)", "apply (frule homom2 [of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     gbij\\<^bsub>(G / H /\n                  carrier\n                   (\\<natural>N /\n                    H)),(G /\n                         N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n    H),(G / N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> (G / H / carrier (\\<natural>N / H)) \\<cong> (G / N)", "apply (simp add:isomorphic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> H; G \\<triangleright> N; H \\<subseteq> N;\n     gbij\\<^bsub>(G / H /\n                  carrier\n                   (\\<natural>N /\n                    H)),(G /\n                         N)\\<^esub> (Qm\\<^bsub>G H,N\\<^esub>\\<dieresis>\\<^bsub>(G /\n    H),(G / N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>f.\n                         gbij\\<^bsub>(G / H /\ncarrier (\\<natural>N / H)),(G / N)\\<^esub> f", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem homom3:\"\\<lbrakk> Group F; Group G; G \\<triangleright> N; gsurj\\<^bsub>F,G\\<^esub> f; \n         N1 = (iim F G f) N \\<rbrakk> \\<Longrightarrow> (F / N1) \\<cong> (G / N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (frule Group.Pj_gsurjec [of \"G\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (frule Group.Group_Qg[of \"G\" \"N\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N)\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (frule gHom_comp_gsurjec [of \"F\" \"G\" \"G / N\" \"f\" \"Pj G N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N);\n     gsurj\\<^bsub>F,(G /\n                     N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f)\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (frule inducedhomgsurjec [of \"F\" \"G / N\" \"(Pj G N) \\<circ>\\<^bsub>F\\<^esub> f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N);\n     gsurj\\<^bsub>F,(G / N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f);\n     gsurj\\<^bsub>(F /\n                   gker\\<^bsub>F,(G /\n                                  N)\\<^esub> (Pj G\n         N \\<circ>\\<^bsub>F\\<^esub> f)),(G /\n   N)\\<^esub> (Pj G\n                N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n                            N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (frule induced_ghom_ginjec [of \"F\" \"G / N\" \"(Pj G N) \\<circ>\\<^bsub>F\\<^esub> f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N);\n     gsurj\\<^bsub>F,(G / N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f);\n     gsurj\\<^bsub>(F /\n                   gker\\<^bsub>F,(G /\n                                  N)\\<^esub> (Pj G\n         N \\<circ>\\<^bsub>F\\<^esub> f)),(G /\n   N)\\<^esub> (Pj G\n                N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n                            N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> Pj G N \\<circ>\\<^bsub>F\\<^esub> f \\<in> gHom F (G / N)\n 2. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N);\n     gsurj\\<^bsub>F,(G / N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f);\n     gsurj\\<^bsub>(F /\n                   gker\\<^bsub>F,(G /\n                                  N)\\<^esub> (Pj G\n         N \\<circ>\\<^bsub>F\\<^esub> f)),(G /\n   N)\\<^esub> (Pj G\n                N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n                            N)\\<^esub>);\n     ginj\\<^bsub>(F /\n                  gker\\<^bsub>F,(G /\n                                 N)\\<^esub> (Pj G\n        N \\<circ>\\<^bsub>F\\<^esub> f)),(G /\n  N)\\<^esub> (Pj G\n               N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n                           N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (simp add:gsurjec_def [of \"F\" \"G / N\" \"(Pj G N) \\<circ>\\<^bsub>F\\<^esub> f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N);\n     gsurj\\<^bsub>F,(G / N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f);\n     gsurj\\<^bsub>(F /\n                   gker\\<^bsub>F,(G /\n                                  N)\\<^esub> (Pj G\n         N \\<circ>\\<^bsub>F\\<^esub> f)),(G /\n   N)\\<^esub> (Pj G\n                N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n                            N)\\<^esub>);\n     ginj\\<^bsub>(F /\n                  gker\\<^bsub>F,(G /\n                                 N)\\<^esub> (Pj G\n        N \\<circ>\\<^bsub>F\\<^esub> f)),(G /\n  N)\\<^esub> (Pj G\n               N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n                           N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (simp add:kern_comp_gHom[of \"F\" \"G\" \"f\" \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; N1 = iim F G f N;\n     gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N; Group (G / N);\n     gsurj\\<^bsub>F,(G / N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f);\n     gsurj\\<^bsub>(F /\n                   iim F G f\n                    N),(G /\n                        N)\\<^esub> (Pj G\n                                     N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n           N)\\<^esub>);\n     ginj\\<^bsub>(F /\n                  iim F G f\n                   N),(G /\n                       N)\\<^esub> (Pj G\n                                    N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n          N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> (F / iim F G f N) \\<cong> (G / N)", "apply (frule sym, thin_tac \"N1 = iim F G f N\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; G \\<triangleright> N;\n     gsurj\\<^bsub>F,G\\<^esub> f; gsurj\\<^bsub>G,(G / N)\\<^esub> Pj G N;\n     Group (G / N);\n     gsurj\\<^bsub>F,(G / N)\\<^esub> (Pj G N \\<circ>\\<^bsub>F\\<^esub> f);\n     gsurj\\<^bsub>(F /\n                   N1),(G /\n                        N)\\<^esub> (Pj G\n                                     N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n           N)\\<^esub>);\n     ginj\\<^bsub>(F /\n                  N1),(G /\n                       N)\\<^esub> (Pj G\n                                    N \\<circ>\\<^bsub>F\\<^esub> f\\<dieresis>\\<^bsub>F,(G /\n          N)\\<^esub>);\n     iim F G f N = N1\\<rbrakk>\n    \\<Longrightarrow> (F / N1) \\<cong> (G / N)", "apply (simp add:isomorphic_def gbijec_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) homom3Tr1:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow> H \\<inter> N =  \ngker\\<^bsub>(Gp G H),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))/N)\\<^esub> \n               ((Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> N =\n                      gker\\<^bsub>(\\<natural>H),(\\<natural>H \\<diamondop> N /\n           N)\\<^esub> (Pj (\\<natural>H \\<diamondop> N)\n                        N \\<circ>\\<^bsub>(\\<natural>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>H)\\<^esub>)", "apply (simp add:gkernel_def, frule nsg_sg,\n       simp add:Gp_carrier[of \"H\"],\n       frule smult_sg_nsg, assumption+,\n       frule Gp_smult_nsg[of \"H\" \"N\"], assumption,\n       frule Group_Gp [of \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> N =\n                      {x \\<in> H.\n                       (Pj (\\<natural>H \\<diamondop> N)\n                         N \\<circ>\\<^bsub>(\\<natural>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>H)\\<^esub>)\n                        x =\n                       \\<one>\\<^bsub>\\<natural>H \\<diamondop> N / N\\<^esub>}", "apply (simp add:Group.Qg_one[of \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"],\n        simp add:iota_def Gp_carrier, simp add:cmpghom_def compose_def,\n        simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> N =\n                      {x. (x \\<in> H \\<longrightarrow>\n                           Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\n                          x \\<in> H}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> N\n                      \\<subseteq> {x. (x \\<in> H \\<longrightarrow>\n Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\nx \\<in> H}\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> H \\<longrightarrow>\n                           Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\n                          x \\<in> H}\n                      \\<subseteq> H \\<inter> N", "apply (rule subsetI, simp, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N); x \\<in> H; x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> Pj (\\<natural>H \\<diamondop> N) N x = N\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> H \\<longrightarrow>\n                           Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\n                          x \\<in> H}\n                      \\<subseteq> H \\<inter> N", "apply (frule_tac h = x in sg_subset_elem[of \"H\"], assumption+,\n        subst Group.Pj_mem, assumption+,\n        simp add:Gp_carrier,\n        frule l_sub_smult[of \"H\" \"N\"], assumption+,\n        rule_tac c = x in subsetD[of \"H\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N); x \\<in> H; x \\<in> N;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> N \\<bullet>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub>\n                         x =\n                         N\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> H \\<longrightarrow>\n                           Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\n                          x \\<in> H}\n                      \\<subseteq> H \\<inter> N", "apply (frule r_sub_smult[of \"H\" \"N\"], assumption+,\n         frule_tac c = x in subsetD[of \"N\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+,\n         simp add:Gp_rcs[of \"N\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N); x \\<in> H; x \\<in> N;\n        x \\<in> carrier G; N \\<subseteq> H \\<diamondop> N;\n        x \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> N \\<bullet> x = N\n 2. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> H \\<longrightarrow>\n                           Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\n                          x \\<in> H}\n                      \\<subseteq> H \\<inter> N", "apply (simp add:rcs_fixed2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n     G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n     \\<natural>H \\<diamondop> N \\<triangleright> N;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> {x. (x \\<in> H \\<longrightarrow>\n                           Pj (\\<natural>H \\<diamondop> N) N x = N) \\<and>\n                          x \\<in> H}\n                      \\<subseteq> H \\<inter> N", "apply (rule subsetI, simp, erule conjE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (frule_tac h = x in sg_subset_elem[of \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (frule l_sub_smult[of \"H\" \"N\"], assumption+,\n        frule r_sub_smult[of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (frule_tac x = x in Group.Pj_mem[of \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier (\\<natural>H \\<diamondop> N)\n 2. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N;\n        Pj (\\<natural>H \\<diamondop> N) N x =\n        N \\<bullet>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (simp add:Gp_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H \\<diamondop> N\n 2. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N;\n        Pj (\\<natural>H \\<diamondop> N) N x =\n        N \\<bullet>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (\n        rule_tac c = x in subsetD[of \"H\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N;\n        Pj (\\<natural>H \\<diamondop> N) N x =\n        N \\<bullet>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (frule_tac c = x in subsetD[of \"H\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        Pj (\\<natural>H \\<diamondop> N) N x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N;\n        Pj (\\<natural>H \\<diamondop> N) N x =\n        N \\<bullet>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> x;\n        x \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (simp only:Group.Gp_rcs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N);\n        N \\<bullet>\\<^bsub>\\<natural>H \\<diamondop> N\\<^esub> x = N;\n        x \\<in> H; x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N;\n        Pj (\\<natural>H \\<diamondop> N) N x = N;\n        x \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (simp only:Gp_rcs[of \"N\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> N;\n        G \\<guillemotright> N ; G \\<guillemotright> H \\<diamondop> N ;\n        \\<natural>H \\<diamondop> N \\<triangleright> N;\n        Group (\\<natural>H \\<diamondop> N); N \\<bullet> x = N; x \\<in> H;\n        x \\<in> carrier G; H \\<subseteq> H \\<diamondop> N;\n        N \\<subseteq> H \\<diamondop> N;\n        Pj (\\<natural>H \\<diamondop> N) N x = N;\n        x \\<in> H \\<diamondop> N\\<rbrakk>\n       \\<Longrightarrow> x \\<in> N", "apply (frule_tac a = x in a_in_rcs[of \"N\"], assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"An automorphism groups\""], ["", "definition\n  automg :: \"_  \\<Rightarrow> \n      \\<lparr> carrier :: ('a \\<Rightarrow> 'a) set, top :: ['a \\<Rightarrow> 'a,'a \\<Rightarrow> 'a] \\<Rightarrow> ('a \\<Rightarrow> 'a),\n        iop :: ('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a), one :: ('a \\<Rightarrow> 'a)\\<rparr>\" where\n  \"automg G =  \\<lparr> carrier = {f. gbij\\<^bsub>G,G\\<^esub> f}, \n        top = \\<lambda>g\\<in>{f. gbij\\<^bsub>G,G\\<^esub> f}. \\<lambda>f\\<in>{f. gbij\\<^bsub>G,G\\<^esub> f}. ( g \\<circ>\\<^bsub>G\\<^esub> f), \n        iop = \\<lambda>f\\<in>{f. gbij\\<^bsub>G,G\\<^esub> f}. (Ifn G G f), one = I\\<^bsub>G\\<^esub> \\<rparr>\""], ["", "lemma automgroupTr1:\"\\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; gbij\\<^bsub>G,G\\<^esub> g; gbij\\<^bsub>G,G\\<^esub> h\\<rbrakk> \\<Longrightarrow>\n                        (h \\<circ>\\<^bsub>G\\<^esub> g) \\<circ>\\<^bsub>G\\<^esub> f =  h \\<circ>\\<^bsub>G\\<^esub> (g \\<circ>\\<^bsub>G\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; gbij\\<^bsub>G,G\\<^esub> f; gbij\\<^bsub>G,G\\<^esub> g;\n     gbij\\<^bsub>G,G\\<^esub> h\\<rbrakk>\n    \\<Longrightarrow> h \\<circ>\\<^bsub>G\\<^esub> g \\<circ>\\<^bsub>G\\<^esub> f =\n                      h \\<circ>\\<^bsub>G\\<^esub> (g \\<circ>\\<^bsub>G\\<^esub> f)", "apply (simp add:cmpghom_def, \n       unfold gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G;\n     gsurj\\<^bsub>G,G\\<^esub> f \\<and> ginj\\<^bsub>G,G\\<^esub> f;\n     gsurj\\<^bsub>G,G\\<^esub> g \\<and> ginj\\<^bsub>G,G\\<^esub> g;\n     gsurj\\<^bsub>G,G\\<^esub> h \\<and> ginj\\<^bsub>G,G\\<^esub> h\\<rbrakk>\n    \\<Longrightarrow> compose (carrier G) (compose (carrier G) h g) f =\n                      compose (carrier G) h (compose (carrier G) g f)", "apply (frule conjunct1, rotate_tac 2, frule conjunct1,\n        rotate_tac 1, frule conjunct1, fold gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>gbij\\<^bsub>G,G\\<^esub> h; gsurj\\<^bsub>G,G\\<^esub> f; Group G;\n     gbij\\<^bsub>G,G\\<^esub> f; gsurj\\<^bsub>G,G\\<^esub> g;\n     gbij\\<^bsub>G,G\\<^esub> g; gsurj\\<^bsub>G,G\\<^esub> h\\<rbrakk>\n    \\<Longrightarrow> compose (carrier G) (compose (carrier G) h g) f =\n                      compose (carrier G) h (compose (carrier G) g f)", "apply (simp add:gsurjec_def, (erule conjE)+,\n        frule gHom_func[of \"G\" \"G\" \"f\"], assumption+,\n        frule gHom_func[of \"G\" \"G\" \"g\"], assumption+,\n        frule gHom_func[of \"G\" \"G\" \"h\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>gbij\\<^bsub>G,G\\<^esub> h; Group G; gbij\\<^bsub>G,G\\<^esub> f;\n     gbij\\<^bsub>G,G\\<^esub> g; f \\<in> gHom G G;\n     surj_to f (carrier G) (carrier G); g \\<in> gHom G G;\n     surj_to g (carrier G) (carrier G); h \\<in> gHom G G;\n     surj_to h (carrier G) (carrier G);\n     f \\<in> carrier G \\<rightarrow> carrier G;\n     g \\<in> carrier G \\<rightarrow> carrier G;\n     h \\<in> carrier G \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> compose (carrier G) (compose (carrier G) h g) f =\n                      compose (carrier G) h (compose (carrier G) g f)", "apply (simp add:compose_assoc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma automgroup:\"Group G  \\<Longrightarrow> Group (automg G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group G \\<Longrightarrow> Group (automg G)", "apply (unfold Group_def [of \"automg G\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group G \\<Longrightarrow>\n    ((\\<cdot>\\<^bsub>automg G\\<^esub>)\n     \\<in> carrier (automg G) \\<rightarrow>\n           carrier (automg G) \\<rightarrow> carrier (automg G) \\<and>\n     (\\<forall>a b c.\n         a \\<in> carrier (automg G) \\<longrightarrow>\n         b \\<in> carrier (automg G) \\<longrightarrow>\n         c \\<in> carrier (automg G) \\<longrightarrow>\n         a \\<cdot>\\<^bsub>automg G\\<^esub> b \\<cdot>\\<^bsub>automg G\\<^esub>\n         c =\n         a \\<cdot>\\<^bsub>automg G\\<^esub>\n         (b \\<cdot>\\<^bsub>automg G\\<^esub> c)) \\<and>\n     iop (automg G)\n     \\<in> carrier (automg G) \\<rightarrow> carrier (automg G)) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (automg G) \\<longrightarrow>\n        \\<rho>\\<^bsub>automg G\\<^esub> a \\<cdot>\\<^bsub>automg G\\<^esub> a =\n        \\<one>\\<^bsub>automg G\\<^esub>) \\<and>\n    \\<one>\\<^bsub>automg G\\<^esub> \\<in> carrier (automg G) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (automg G) \\<longrightarrow>\n        \\<one>\\<^bsub>automg G\\<^esub> \\<cdot>\\<^bsub>automg G\\<^esub> a =\n        a)", "apply(auto simp: automg_def Pi_def gbij_comp_bij automgroupTr1 IdTr2 Id_l_unit l_inv_gHom inv_gbijec_gbijec)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Complete system of representatives\""], ["", "definition\n  gcsrp :: \"_ \\<Rightarrow> 'a set \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"gcsrp G H S == \\<exists>f. (bij_to f (set_rcs G H) S)\""], ["", "(** G_csrp is defined iff H is a nsg **)"], ["", "definition\n  gcsrp_map::\"_ \\<Rightarrow> 'a set \\<Rightarrow> 'a set \\<Rightarrow> 'a\" where\n  \"gcsrp_map G H == \\<lambda>X\\<in>(set_rcs G H). SOME x. x \\<in> X\""], ["", "lemma (in Group) gcsrp_func:\"G \\<guillemotright> H \\<Longrightarrow> gcsrp_map G H \\<in> set_rcs G H \\<rightarrow> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    gcsrp_map G H \\<in> set_rcs G H \\<rightarrow> UNIV", "by (simp add:set_rcs_def)"], ["", "lemma (in Group) gcsrp_func1:\"G \\<guillemotright> H \\<Longrightarrow> \n       gcsrp_map G H \\<in> set_rcs G H \\<rightarrow> (gcsrp_map G H) ` (set_rcs G H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    gcsrp_map G H\n    \\<in> set_rcs G H \\<rightarrow> gcsrp_map G H ` set_rcs G H", "by (simp add:set_rcs_def)"], ["", "lemma (in Group) gcsrp_map_bij:\"G \\<guillemotright> H \\<Longrightarrow>\n         bij_to (gcsrp_map G H) (set_rcs G H) ((gcsrp_map G H) `(set_rcs G H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    bij_to (gcsrp_map G H) (set_rcs G H) (gcsrp_map G H ` set_rcs G H)", "apply (simp add:bij_to_def, rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    surj_to (gcsrp_map G H) (set_rcs G H) (gcsrp_map G H ` set_rcs G H)\n 2. G \\<guillemotright> H  \\<Longrightarrow>\n    inj_on (gcsrp_map G H) (set_rcs G H)", "apply (rule surj_to_test)"], ["proof (prove)\ngoal (3 subgoals):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    gcsrp_map G H\n    \\<in> set_rcs G H \\<rightarrow> gcsrp_map G H ` set_rcs G H\n 2. G \\<guillemotright> H  \\<Longrightarrow>\n    \\<forall>b\\<in>gcsrp_map G H ` set_rcs G H.\n       \\<exists>a\\<in>set_rcs G H. gcsrp_map G H a = b\n 3. G \\<guillemotright> H  \\<Longrightarrow>\n    inj_on (gcsrp_map G H) (set_rcs G H)", "apply (rule Pi_I)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<guillemotright> H ; x \\<in> set_rcs G H\\<rbrakk>\n       \\<Longrightarrow> gcsrp_map G H x \\<in> gcsrp_map G H ` set_rcs G H\n 2. G \\<guillemotright> H  \\<Longrightarrow>\n    \\<forall>b\\<in>gcsrp_map G H ` set_rcs G H.\n       \\<exists>a\\<in>set_rcs G H. gcsrp_map G H a = b\n 3. G \\<guillemotright> H  \\<Longrightarrow>\n    inj_on (gcsrp_map G H) (set_rcs G H)", "apply (simp add:image_def, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    \\<forall>b\\<in>gcsrp_map G H ` set_rcs G H.\n       \\<exists>a\\<in>set_rcs G H. gcsrp_map G H a = b\n 2. G \\<guillemotright> H  \\<Longrightarrow>\n    inj_on (gcsrp_map G H) (set_rcs G H)", "apply (rule ballI, simp add:image_def, erule bexE, simp, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    inj_on (gcsrp_map G H) (set_rcs G H)", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    \\<forall>x\\<in>set_rcs G H.\n       \\<forall>y\\<in>set_rcs G H.\n          gcsrp_map G H x = gcsrp_map G H y \\<longrightarrow> x = y", "apply ((rule ballI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<guillemotright> H ; x \\<in> set_rcs G H;\n        y \\<in> set_rcs G H; gcsrp_map G H x = gcsrp_map G H y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:gcsrp_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<guillemotright> H ; x \\<in> set_rcs G H;\n        y \\<in> set_rcs G H;\n        (SOME xa. xa \\<in> x) = (SOME x. x \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule_tac X = x in rcs_nonempty, assumption+,\n        frule_tac X = y in rcs_nonempty, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<guillemotright> H ; x \\<in> set_rcs G H;\n        y \\<in> set_rcs G H; (SOME xa. xa \\<in> x) = (SOME x. x \\<in> y);\n        x \\<noteq> {}; y \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule_tac A = x in nonempty_some, \n        frule_tac A = y in nonempty_some, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<guillemotright> H ; x \\<in> set_rcs G H;\n        y \\<in> set_rcs G H; (SOME xa. xa \\<in> x) = (SOME x. x \\<in> y);\n        x \\<noteq> {}; y \\<noteq> {}; (SOME x. x \\<in> y) \\<in> x;\n        (SOME x. x \\<in> y) \\<in> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (rule_tac X = x and Y = y in rcs_meet[of \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<guillemotright> H ; x \\<in> set_rcs G H;\n        y \\<in> set_rcs G H; (SOME xa. xa \\<in> x) = (SOME x. x \\<in> y);\n        x \\<noteq> {}; y \\<noteq> {}; (SOME x. x \\<in> y) \\<in> x;\n        (SOME x. x \\<in> y) \\<in> y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y \\<noteq> {}", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) image_gcsrp:\"G \\<guillemotright> H \\<Longrightarrow> \n                   gcsrp G H ((gcsrp_map G H) `(set_rcs G H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    gcsrp G H (gcsrp_map G H ` set_rcs G H)", "apply (simp add:gcsrp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow>\n    \\<exists>f. bij_to f (set_rcs G H) (gcsrp_map G H ` set_rcs G H)", "apply (frule gcsrp_map_bij[of \"H\"], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gcsrp_exists:\"G \\<guillemotright> H \\<Longrightarrow> \\<exists>S. gcsrp G H S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<guillemotright> H  \\<Longrightarrow> \\<exists>S. gcsrp G H S", "by (frule image_gcsrp[of \"H\"], blast)"], ["", "definition\n gcsrp_top :: \"[_ , 'a set] \\<Rightarrow>  'a \\<Rightarrow>  'a  \\<Rightarrow> 'a\" where\n \"gcsrp_top G H == \\<lambda>x \\<in> ((gcsrp_map G H) `(set_rcs G H)).\n                     \\<lambda>y \\<in> ((gcsrp_map G H) `(set_rcs G H)).\n gcsrp_map G H \n  (c_top G H  \n  ((invfun (set_rcs G H) ((gcsrp_map G H) `(set_rcs G H)) (gcsrp_map G H)) x) \n  ((invfun (set_rcs G H) ((gcsrp_map G H) `(set_rcs G H)) (gcsrp_map G H)) y))\""], ["", "definition\n  gcsrp_iop::\"[_ , 'a set] \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"gcsrp_iop G H = (\\<lambda>x \\<in> ((gcsrp_map G H) `(set_rcs G H)).\n    gcsrp_map G H \n    (c_iop G H\n    ((invfun (set_rcs G H) ((gcsrp_map G H) `(set_rcs G H)) (gcsrp_map G H)) x)))\""], ["", "definition\n  gcsrp_one::\"[_ , 'a set] \\<Rightarrow> 'a\" where\n  \"gcsrp_one G H = gcsrp_map G H H\""], ["", "definition\n  Gcsrp :: \"_ \\<Rightarrow> 'a set \\<Rightarrow> 'a Group\" where\n  \"Gcsrp G N = \\<lparr>carrier = (gcsrp_map G N) `(set_rcs G N),\n                top = gcsrp_top G N, iop = gcsrp_iop G N, one = gcsrp_one G N\\<rparr>\""], ["", "lemma (in Group) gcsrp_top_closed:\"\\<lbrakk>Group G; G \\<triangleright> N;\n  a \\<in> ((gcsrp_map G N) `(set_rcs G N)); b \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk>\n \\<Longrightarrow> gcsrp_top G N a b \\<in> (gcsrp_map G N) `(set_rcs G N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N a b \\<in> gcsrp_map G N ` set_rcs G N", "apply (frule nsg_sg[of \"N\"],\n       frule gcsrp_func1[of \"N\"],\n       frule gcsrp_map_bij[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N a b \\<in> gcsrp_map G N ` set_rcs G N", "apply (frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"a\"], assumption+,\n       frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"b\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      b\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N a b \\<in> gcsrp_map G N ` set_rcs G N", "apply (frule Qg_top_closed[of \"N\" \"invfun (set_rcs G N) \n             (gcsrp_map G N ` set_rcs G N) (gcsrp_map G N) a\"\n       \"invfun (set_rcs G N) \n             (gcsrp_map G N ` set_rcs G N) (gcsrp_map G N) b\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      b\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N a b \\<in> gcsrp_map G N ` set_rcs G N", "apply (simp add:gcsrp_top_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gcsrp_tassoc:\"\\<lbrakk>Group G; G \\<triangleright> N;\n       a \\<in> ((gcsrp_map G N) `(set_rcs G N)); \n        b \\<in> ((gcsrp_map G N) `(set_rcs G N));\n         c \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk> \\<Longrightarrow>\n      (gcsrp_top G N (gcsrp_top G N a b) c) =\n               (gcsrp_top G N a (gcsrp_top G N b c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N;\n     c \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_top G N a b) c =\n                      gcsrp_top G N a (gcsrp_top G N b c)", "apply (frule nsg_sg[of \"N\"],\n       frule gcsrp_func1[of \"N\"],\n       frule gcsrp_map_bij[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N;\n     c \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_top G N a b) c =\n                      gcsrp_top G N a (gcsrp_top G N b c)", "apply (frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"a\"], assumption+,\n       frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"b\"], assumption+,\n       frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"c\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N;\n     c \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      b\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      c\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_top G N a b) c =\n                      gcsrp_top G N a (gcsrp_top G N b c)", "apply (frule Qg_top_closed[of \"N\" \"invfun (set_rcs G N) \n             (gcsrp_map G N ` set_rcs G N) (gcsrp_map G N) a\"\n       \"invfun (set_rcs G N) \n             (gcsrp_map G N ` set_rcs G N) (gcsrp_map G N) b\"], assumption+,\n       frule Qg_top_closed[of \"N\" \"invfun (set_rcs G N) \n             (gcsrp_map G N ` set_rcs G N) (gcsrp_map G N) b\"\n       \"invfun (set_rcs G N) \n             (gcsrp_map G N ` set_rcs G N) (gcsrp_map G N) c\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N;\n     c \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      b\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      c\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        c)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_top G N a b) c =\n                      gcsrp_top G N a (gcsrp_top G N b c)", "apply (simp add:gcsrp_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N;\n     c \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      b\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      c\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        c)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                       (c_top G N\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           (gcsrp_map G N\n                             (c_top G N\n                               ((gcsrp_map G\n                                  N\\<inverse>\\<^bsub>gcsrp_map G N `\n               set_rcs G N,set_rcs G N\\<^esub>)\n                                 a)\n                               ((gcsrp_map G\n                                  N\\<inverse>\\<^bsub>gcsrp_map G N `\n               set_rcs G N,set_rcs G N\\<^esub>)\n                                 b))))\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           c)) =\n                      gcsrp_map G N\n                       (c_top G N\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           a)\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           (gcsrp_map G N\n                             (c_top G N\n                               ((gcsrp_map G\n                                  N\\<inverse>\\<^bsub>gcsrp_map G N `\n               set_rcs G N,set_rcs G N\\<^esub>)\n                                 b)\n                               ((gcsrp_map G\n                                  N\\<inverse>\\<^bsub>gcsrp_map G N `\n               set_rcs G N,set_rcs G N\\<^esub>)\n                                 c)))))", "apply (simp add:invfun_l1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N;\n     b \\<in> gcsrp_map G N ` set_rcs G N;\n     c \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      b\n     \\<in> set_rcs G N;\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      c\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n     \\<in> set_rcs G N;\n     c_top G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        b)\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        c)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                       (c_top G N\n                         (c_top G N\n                           ((gcsrp_map G\n                              N\\<inverse>\\<^bsub>gcsrp_map G N `\n           set_rcs G N,set_rcs G N\\<^esub>)\n                             a)\n                           ((gcsrp_map G\n                              N\\<inverse>\\<^bsub>gcsrp_map G N `\n           set_rcs G N,set_rcs G N\\<^esub>)\n                             b))\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           c)) =\n                      gcsrp_map G N\n                       (c_top G N\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           a)\n                         (c_top G N\n                           ((gcsrp_map G\n                              N\\<inverse>\\<^bsub>gcsrp_map G N `\n           set_rcs G N,set_rcs G N\\<^esub>)\n                             b)\n                           ((gcsrp_map G\n                              N\\<inverse>\\<^bsub>gcsrp_map G N `\n           set_rcs G N,set_rcs G N\\<^esub>)\n                             c)))", "apply (simp add:Qg_tassoc[of \"N\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gcsrp_l_one:\"\\<lbrakk>Group G; G \\<triangleright> N;\n       a \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk> \\<Longrightarrow>\n             (gcsrp_top G N (gcsrp_one G N) a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_one G N) a = a", "apply (frule nsg_sg[of \"N\"],\n       frule gcsrp_func1[of \"N\"],\n       frule gcsrp_map_bij[of \"N\"],\n       frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_one G N) a = a", "apply (simp add:gcsrp_top_def gcsrp_one_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> (gcsrp_map G N N\n                       \\<in> gcsrp_map G N ` set_rcs G N \\<longrightarrow>\n                       gcsrp_map G N\n                        (c_top G N\n                          ((gcsrp_map G\n                             N\\<inverse>\\<^bsub>gcsrp_map G N `\n          set_rcs G N,set_rcs G N\\<^esub>)\n                            (gcsrp_map G N N))\n                          ((gcsrp_map G\n                             N\\<inverse>\\<^bsub>gcsrp_map G N `\n          set_rcs G N,set_rcs G N\\<^esub>)\n                            a)) =\n                       a) \\<and>\n                      (gcsrp_map G N N\n                       \\<notin> gcsrp_map G N `\n                                set_rcs G N \\<longrightarrow>\n                       undefined a = a)", "apply (frule Qg_unit_closed[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N; G \\<guillemotright> N ;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     N \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> (gcsrp_map G N N\n                       \\<in> gcsrp_map G N ` set_rcs G N \\<longrightarrow>\n                       gcsrp_map G N\n                        (c_top G N\n                          ((gcsrp_map G\n                             N\\<inverse>\\<^bsub>gcsrp_map G N `\n          set_rcs G N,set_rcs G N\\<^esub>)\n                            (gcsrp_map G N N))\n                          ((gcsrp_map G\n                             N\\<inverse>\\<^bsub>gcsrp_map G N `\n          set_rcs G N,set_rcs G N\\<^esub>)\n                            a)) =\n                       a) \\<and>\n                      (gcsrp_map G N N\n                       \\<notin> gcsrp_map G N `\n                                set_rcs G N \\<longrightarrow>\n                       undefined a = a)", "apply (simp add:Pi_def invfun_l1 Qg_unit invfun_r1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gcsrp_l_i:\"\\<lbrakk>G \\<triangleright> N; a \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk> \\<Longrightarrow>\n       gcsrp_top G N (gcsrp_iop G N a) a = gcsrp_one G N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_iop G N a) a = gcsrp_one G N", "apply (frule nsg_sg[of \"N\"],\n       frule gcsrp_func1[of \"N\"],\n       frule gcsrp_map_bij[of \"N\"],\n       frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; a \\<in> gcsrp_map G N ` set_rcs G N;\n     G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_iop G N a) a = gcsrp_one G N", "apply (frule Qg_iop_closed[of \"N\" \"invfun (set_rcs G N) (gcsrp_map G N ` \n                       set_rcs G N) (gcsrp_map G N) a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; a \\<in> gcsrp_map G N ` set_rcs G N;\n     G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     c_iop G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_top G N (gcsrp_iop G N a) a = gcsrp_one G N", "apply (simp add:gcsrp_top_def gcsrp_one_def gcsrp_iop_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; a \\<in> gcsrp_map G N ` set_rcs G N;\n     G \\<guillemotright> N ;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     c_iop G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                       (c_top G N\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           (gcsrp_map G N\n                             (c_iop G N\n                               ((gcsrp_map G\n                                  N\\<inverse>\\<^bsub>gcsrp_map G N `\n               set_rcs G N,set_rcs G N\\<^esub>)\n                                 a))))\n                         ((gcsrp_map G\n                            N\\<inverse>\\<^bsub>gcsrp_map G N `\n         set_rcs G N,set_rcs G N\\<^esub>)\n                           a)) =\n                      gcsrp_map G N N", "apply (simp add:invfun_l1 Qg_i)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gcsrp_i_closed:\"\\<lbrakk>G \\<triangleright> N; a \\<in> ((gcsrp_map G N) `(set_rcs G N))\\<rbrakk>\n      \\<Longrightarrow> gcsrp_iop G N a \\<in> ((gcsrp_map G N) `(set_rcs G N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N;\n     a \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_iop G N a \\<in> gcsrp_map G N ` set_rcs G N", "apply (frule nsg_sg[of \"N\"],\n       frule gcsrp_func1[of \"N\"],\n       frule gcsrp_map_bij[of \"N\"],\n       frule invfun_mem1[of \"gcsrp_map G N\" \"set_rcs G N\"\n          \"(gcsrp_map G N) ` (set_rcs G N)\" \"a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; a \\<in> gcsrp_map G N ` set_rcs G N;\n     G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_iop G N a \\<in> gcsrp_map G N ` set_rcs G N", "apply (frule Qg_iop_closed[of \"N\" \"invfun (set_rcs G N) (gcsrp_map G N ` \n                       set_rcs G N) (gcsrp_map G N) a\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; a \\<in> gcsrp_map G N ` set_rcs G N;\n     G \\<guillemotright> N ;\n     gcsrp_map G N\n     \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N;\n     bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n     (gcsrp_map G\n       N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n      a\n     \\<in> set_rcs G N;\n     c_iop G N\n      ((gcsrp_map G\n         N\\<inverse>\\<^bsub>gcsrp_map G N ` set_rcs G N,set_rcs G N\\<^esub>)\n        a)\n     \\<in> set_rcs G N\\<rbrakk>\n    \\<Longrightarrow> gcsrp_iop G N a \\<in> gcsrp_map G N ` set_rcs G N", "apply (simp add:gcsrp_iop_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Group_Gcsrp:\"G \\<triangleright> N \\<Longrightarrow> Group (Gcsrp G N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow> Group (Gcsrp G N)", "apply (simp add:Group_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    (\\<cdot>\\<^bsub>Gcsrp G N\\<^esub>)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow>\n          carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        (\\<forall>b.\n            b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n            (\\<forall>c.\n                c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                c =\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))) \\<and>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    (\\<cdot>\\<^bsub>Gcsrp G N\\<^esub>)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow>\n          carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        (\\<forall>b.\n            b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n            (\\<forall>c.\n                c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                c =\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))) \\<and>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule Pi_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<triangleright> N; x \\<in> carrier (Gcsrp G N)\\<rbrakk>\n       \\<Longrightarrow> (\\<cdot>\\<^bsub>Gcsrp G N\\<^esub>) x\n                         \\<in> carrier (Gcsrp G N) \\<rightarrow>\n                               carrier (Gcsrp G N)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        (\\<forall>b.\n            b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n            (\\<forall>c.\n                c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                c =\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))) \\<and>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (simp add:Gcsrp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<triangleright> N;\n        x \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n       \\<Longrightarrow> gcsrp_top G N x\n                         \\<in> gcsrp_map G N ` set_rcs G N \\<rightarrow>\n                               gcsrp_map G N ` set_rcs G N\n 2. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        (\\<forall>b.\n            b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n            (\\<forall>c.\n                c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                c =\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))) \\<and>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule Pi_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>G \\<triangleright> N; x \\<in> gcsrp_map G N ` set_rcs G N;\n        xa \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n       \\<Longrightarrow> gcsrp_top G N x xa\n                         \\<in> gcsrp_map G N ` set_rcs G N\n 2. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        (\\<forall>b.\n            b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n            (\\<forall>c.\n                c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                c =\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))) \\<and>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule_tac a = x and b = xa in gcsrp_top_closed[of \"N\"], rule Group_axioms, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        (\\<forall>b.\n            b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n            (\\<forall>c.\n                c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                c =\n                a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))) \\<and>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n       (\\<forall>b.\n           b \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n           (\\<forall>c.\n               c \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n               a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n               b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n               c =\n               a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n               (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)))\n 2. G \\<triangleright> N \\<Longrightarrow>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule allI, rule impI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>G \\<triangleright> N; a \\<in> carrier (Gcsrp G N);\n        b \\<in> carrier (Gcsrp G N); c \\<in> carrier (Gcsrp G N)\\<rbrakk>\n       \\<Longrightarrow> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                         b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                         c =\n                         a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                         (b \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> c)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (simp add:Gcsrp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>G \\<triangleright> N; a \\<in> gcsrp_map G N ` set_rcs G N;\n        b \\<in> gcsrp_map G N ` set_rcs G N;\n        c \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n       \\<Longrightarrow> gcsrp_top G N (gcsrp_top G N a b) c =\n                         gcsrp_top G N a (gcsrp_top G N b c)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule_tac a = a and b = b and c = c in gcsrp_tassoc[of \"N\"], rule Group_axioms, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    iop (Gcsrp G N)\n    \\<in> carrier (Gcsrp G N) \\<rightarrow> carrier (Gcsrp G N)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule Pi_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G \\<triangleright> N; x \\<in> carrier (Gcsrp G N)\\<rbrakk>\n       \\<Longrightarrow> \\<rho>\\<^bsub>Gcsrp G N\\<^esub> x\n                         \\<in> carrier (Gcsrp G N)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (simp add:Gcsrp_def, rule gcsrp_i_closed[of \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n        a =\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub>) \\<and>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n       \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n       a =\n       \\<one>\\<^bsub>Gcsrp G N\\<^esub>\n 2. G \\<triangleright> N \\<Longrightarrow>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>G \\<triangleright> N; a \\<in> carrier (Gcsrp G N)\\<rbrakk>\n       \\<Longrightarrow> \\<rho>\\<^bsub>Gcsrp G N\\<^esub> a \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                         a =\n                         \\<one>\\<^bsub>Gcsrp G N\\<^esub>\n 2. G \\<triangleright> N \\<Longrightarrow>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (simp add:Gcsrp_def,\n        rule  gcsrp_l_i[of \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N) \\<and>\n    (\\<forall>a.\n        a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n        \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n        a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<in> carrier (Gcsrp G N)\n 2. G \\<triangleright> N \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n       \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n       a", "apply (frule Qg_unit_closed[of \"N\"],\n        simp add:Gcsrp_def gcsrp_one_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    \\<forall>a.\n       a \\<in> carrier (Gcsrp G N) \\<longrightarrow>\n       \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub> a =\n       a", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>G \\<triangleright> N; a \\<in> carrier (Gcsrp G N)\\<rbrakk>\n       \\<Longrightarrow> \\<one>\\<^bsub>Gcsrp G N\\<^esub> \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                         a =\n                         a", "apply (simp add:Gcsrp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>G \\<triangleright> N;\n        a \\<in> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n       \\<Longrightarrow> gcsrp_top G N (gcsrp_one G N) a = a", "apply (rule gcsrp_l_one[of \"N\"], rule Group_axioms, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) gcsrp_map_gbijec:\"G \\<triangleright> N \\<Longrightarrow> \n                  gbij\\<^bsub>(G/N), (Gcsrp G N)\\<^esub> (gcsrp_map G N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    gbij\\<^bsub>(G / N),Gcsrp G N\\<^esub> gcsrp_map G N", "apply (simp add:gbijec_def gsurjec_def ginjec_def Qg_carrier Gcsrp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    gcsrp_map G N\n    \\<in> gHom (G / N)\n           \\<lparr>carrier = gcsrp_map G N ` set_rcs G N,\n              Group.top = gcsrp_top G N, iop = gcsrp_iop G N,\n              one = gcsrp_one G N\\<rparr> \\<and>\n    surj_to (gcsrp_map G N) (set_rcs G N)\n     (gcsrp_map G N ` set_rcs G N) \\<and>\n    gcsrp_map G N\n    \\<in> gHom (G / N)\n           \\<lparr>carrier = gcsrp_map G N ` set_rcs G N,\n              Group.top = gcsrp_top G N, iop = gcsrp_iop G N,\n              one = gcsrp_one G N\\<rparr> \\<and>\n    inj_on (gcsrp_map G N) (set_rcs G N)", "apply (frule nsg_sg[of \"N\"],\n       frule gcsrp_map_bij[of \"N\"], simp add:bij_to_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                      \\<in> gHom (G / N)\n                             \\<lparr>carrier = gcsrp_map G N ` set_rcs G N,\n                                Group.top = gcsrp_top G N,\n                                iop = gcsrp_iop G N,\n                                one = gcsrp_one G N\\<rparr>", "apply (fold Gcsrp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N \\<in> gHom (G / N) (Gcsrp G N)", "apply (simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                      \\<in> extensional (carrier (G / N)) \\<and>\n                      gcsrp_map G N\n                      \\<in> carrier (G / N) \\<rightarrow>\n                            carrier (Gcsrp G N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / N).\n                          \\<forall>y\\<in>carrier (G / N).\n                             gcsrp_map G N\n                              (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                             gcsrp_map G N\n                              x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                             gcsrp_map G N y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N \\<in> extensional (carrier (G / N))\n 2. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                      \\<in> carrier (G / N) \\<rightarrow>\n                            carrier (Gcsrp G N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / N).\n                          \\<forall>y\\<in>carrier (G / N).\n                             gcsrp_map G N\n                              (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                             gcsrp_map G N\n                              x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                             gcsrp_map G N y)", "apply (simp add:Qg_carrier gcsrp_map_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                      \\<in> carrier (G / N) \\<rightarrow>\n                            carrier (Gcsrp G N) \\<and>\n                      (\\<forall>x\\<in>carrier (G / N).\n                          \\<forall>y\\<in>carrier (G / N).\n                             gcsrp_map G N\n                              (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                             gcsrp_map G N\n                              x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                             gcsrp_map G N y)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> gcsrp_map G N\n                      \\<in> carrier (G / N) \\<rightarrow>\n                            carrier (Gcsrp G N)\n 2. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (G / N).\n                         \\<forall>y\\<in>carrier (G / N).\n                            gcsrp_map G N\n                             (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                            gcsrp_map G N x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                            gcsrp_map G N y", "apply (simp add:Qg_carrier Gcsrp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     surj_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N) \\<and>\n     inj_on (gcsrp_map G N) (set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (G / N).\n                         \\<forall>y\\<in>carrier (G / N).\n                            gcsrp_map G N\n                             (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                            gcsrp_map G N x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                            gcsrp_map G N y", "apply (fold bij_to_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n     bij_to (gcsrp_map G N) (set_rcs G N)\n      (gcsrp_map G N ` set_rcs G N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>carrier (G / N).\n                         \\<forall>y\\<in>carrier (G / N).\n                            gcsrp_map G N\n                             (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                            gcsrp_map G N x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                            gcsrp_map G N y", "apply (rule ballI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n        bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n        x \\<in> carrier (G / N); y \\<in> carrier (G / N)\\<rbrakk>\n       \\<Longrightarrow> gcsrp_map G N (x \\<cdot>\\<^bsub>G / N\\<^esub> y) =\n                         gcsrp_map G N x \\<cdot>\\<^bsub>Gcsrp G N\\<^esub>\n                         gcsrp_map G N y", "apply (simp add:Qg_def Gcsrp_def gcsrp_top_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n        bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n        x \\<in> set_rcs G N; y \\<in> set_rcs G N\\<rbrakk>\n       \\<Longrightarrow> gcsrp_map G N (c_top G N x y) =\n                         gcsrp_map G N\n                          (c_top G N\n                            ((gcsrp_map G\n                               N\\<inverse>\\<^bsub>gcsrp_map G N `\n            set_rcs G N,set_rcs G N\\<^esub>)\n                              (gcsrp_map G N x))\n                            ((gcsrp_map G\n                               N\\<inverse>\\<^bsub>gcsrp_map G N `\n            set_rcs G N,set_rcs G N\\<^esub>)\n                              (gcsrp_map G N y)))", "apply (frule gcsrp_func1[of \"N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> N ;\n        bij_to (gcsrp_map G N) (set_rcs G N) (gcsrp_map G N ` set_rcs G N);\n        x \\<in> set_rcs G N; y \\<in> set_rcs G N;\n        gcsrp_map G N\n        \\<in> set_rcs G N \\<rightarrow> gcsrp_map G N ` set_rcs G N\\<rbrakk>\n       \\<Longrightarrow> gcsrp_map G N (c_top G N x y) =\n                         gcsrp_map G N\n                          (c_top G N\n                            ((gcsrp_map G\n                               N\\<inverse>\\<^bsub>gcsrp_map G N `\n            set_rcs G N,set_rcs G N\\<^esub>)\n                              (gcsrp_map G N x))\n                            ((gcsrp_map G\n                               N\\<inverse>\\<^bsub>gcsrp_map G N `\n            set_rcs G N,set_rcs G N\\<^esub>)\n                              (gcsrp_map G N y)))", "apply (simp add:invfun_l1[of \"gcsrp_map G N\" \"set_rcs G N\" \n                                 \"gcsrp_map G N ` set_rcs G N\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Qg_equiv_Gcsrp:\"G \\<triangleright> N \\<Longrightarrow> (G / N) \\<cong> Gcsrp G N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow> (G / N) \\<cong> Gcsrp G N", "apply (simp add:isomorphic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<triangleright> N \\<Longrightarrow>\n    \\<exists>f. gbij\\<^bsub>(G / N),Gcsrp G N\\<^esub> f", "apply (frule gcsrp_map_gbijec[of \"N\"], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Zassenhaus\""], ["", "text\\<open>we show \\<open>H \\<rightarrow> H N/N\\<close> is gsurjective\\<close>"], ["", "lemma (in Group) homom4Tr1:\"\\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow>  Group ((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>H \\<diamondop> N / N)", "apply (frule Gp_smult_sg_nsg[of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n     Group (\\<natural>H \\<diamondop> N)\\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>H \\<diamondop> N / N)", "apply (frule Gp_smult_nsg [of \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H ;\n     Group (\\<natural>H \\<diamondop> N);\n     \\<natural>H \\<diamondop> N \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>H \\<diamondop> N / N)", "apply (simp add:Group.Group_Qg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma homom3Tr2:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<triangleright> N\\<rbrakk> \\<Longrightarrow>  \n gsurj\\<^bsub>(Gp G H),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))/N)\\<^esub> \n                      ((Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                             N)\\<^esub> (Pj\n    (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n    N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)", "apply (frule iotahom[of \"G\" \"H\" \"N\"], assumption+,\n        frule Group.Gp_smult_nsg[of \"G\" \"H\" \"N\"], assumption+,\n        frule Group.smult_sg_nsg[of \"G\" \"H\" \"N\"], assumption+,\n        frule Group.Gp_smult_sg_nsg[of \"G\" \"H\" \"N\"], assumption+,\n        frule Group.Pj_gsurjec [of \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"], assumption,\n        frule Group.Group_Gp[of \"G\" \"H\"], assumption+,\n        frule Group.Group_Qg[of \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"], assumption+,\n        frule gHomcomp[of \"Gp G H\" \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"(Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N\" \n        \"\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\" \"Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n     \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n      N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                  N;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n       N)\\<rbrakk>\n    \\<Longrightarrow> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                       N\n                      \\<in> gHom\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                              N)\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n     \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n      N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                  N;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n      N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n             N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                             N)\\<^esub> (Pj\n    (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n    N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)", "apply (simp add:gsurjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n     \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n      N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                  N;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n      N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n             N)\\<rbrakk>\n    \\<Longrightarrow> gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                             N)\\<^esub> (Pj\n    (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n    N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)", "apply (subst gsurjec_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n     \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n      N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                  N;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n      N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n             N)\\<rbrakk>\n    \\<Longrightarrow> surj_to\n                       (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                       (carrier (\\<natural>\\<^bsub>G\\<^esub>H))\n                       (carrier\n                         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                          N))", "apply (rule surj_to_test,\n        simp add:gHom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n     \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n      N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                  N;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n      N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n     \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n             N)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>b\\<in>carrier\n(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N).\n                         \\<exists>a\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                              N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             a =\n                            b", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n        \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n               (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n         N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                     N;\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n        \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n               (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                N);\n        b \\<in> carrier\n                 (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                  N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>carrier\n   (\\<natural>\\<^bsub>G\\<^esub>H).\n                            (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                              N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             a =\n                            b", "apply (simp add:Group.Qg_carrier[of \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"],\n        simp add:set_rcs_def, erule bexE,\n        frule Group.nsg_sg[of \"G\" \"N\"], assumption,\n        frule Group.r_sub_smult[of \"G\" \"H\" \"N\"], assumption+,\n        simp add:Group.Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n        \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n               (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n         N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                     N;\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n        \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n               (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                N);\n        a \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        b =\n        N \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n        a;\n        G \\<guillemotright> N ;\n        N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa\\<in>H.\n                            (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                              N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             aa =\n                            N \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n                            a", "apply (simp add:Group.Gp_rcs[of \"G\" \"N\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n        \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n               (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n         N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                     N;\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n        \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n               (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                N);\n        a \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        b = N \\<bullet>\\<^bsub>G\\<^esub> a; G \\<guillemotright> N ;\n        N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa\\<in>H.\n                            (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                              N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             aa =\n                            N \\<bullet>\\<^bsub>G\\<^esub> a", "apply (thin_tac \"\\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H) (\\<natural>\\<^bsub>G\\<^esub>(H \\<diamondop>\\<^bsub>G\\<^esub> N))\",\n        thin_tac \"gsurj\\<^bsub>(Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)),((\\<natural>\\<^bsub>G\\<^esub>(H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\\<^esub> Pj (\\<natural>\\<^bsub>G\\<^esub>(H \\<diamondop>\\<^bsub>G\\<^esub> N)) N\",\n        thin_tac \"Pj (\\<natural>\\<^bsub>G\\<^esub>(H \\<diamondop>\\<^bsub>G\\<^esub> N)) N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H) ((\\<natural>\\<^bsub>G\\<^esub>(H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        a \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        b = N \\<bullet>\\<^bsub>G\\<^esub> a; G \\<guillemotright> N ;\n        N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa\\<in>H.\n                            (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                              N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\n                             aa =\n                            N \\<bullet>\\<^bsub>G\\<^esub> a", "apply (simp add:cmpghom_def compose_def,\n        simp add:Group.Gp_carrier iota_def,\n        frule Group.smult_commute_sg_nsg[of \"G\" \"H\" \"N\"], assumption+,\n        frule_tac a = a in eq_set_inc[of _ \"H \\<diamondop>\\<^bsub>G\\<^esub> N\" \"N \\<diamondop>\\<^bsub>G\\<^esub> H\"], assumption+,\n        thin_tac \"H \\<diamondop>\\<^bsub>G\\<^esub> N = N \\<diamondop>\\<^bsub>G\\<^esub> H\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        a \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        b = N \\<bullet>\\<^bsub>G\\<^esub> a; G \\<guillemotright> N ;\n        N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        a \\<in> N \\<diamondop>\\<^bsub>G\\<^esub> H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa\\<in>H.\n                            Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                             N aa =\n                            N \\<bullet>\\<^bsub>G\\<^esub> a", "apply (simp add:s_top_def[of \"G\" \"N\" \"H\"], (erule bexE)+,\n       rotate_tac -1, frule sym, thin_tac \"x \\<cdot>\\<^bsub>G\\<^esub> y = a\", \n       frule_tac h = y in Group.sg_subset_elem[of \"G\" \"H\"], assumption+,\n       simp add:Group.rcs_fixed1[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a x y.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        x \\<cdot>\\<^bsub>G\\<^esub> y\n        \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        b = N \\<bullet>\\<^bsub>G\\<^esub> y; G \\<guillemotright> N ;\n        N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N; x \\<in> N;\n        y \\<in> H; a = x \\<cdot>\\<^bsub>G\\<^esub> y;\n        y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>H.\n                            Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                             N a =\n                            N \\<bullet>\\<^bsub>G\\<^esub> y", "apply (frule Group.l_sub_smult[of \"G\" \"H\" \"N\"], assumption+,\n        frule_tac x1 = y in Group.Pj_mem[THEN sym, of \"Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)\" \"N\"],\n        assumption+, simp add:Group.Gp_carrier, simp add: subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a x y.\n       \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<triangleright> N;\n        \\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N \\<triangleright> N;\n        G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n        Group (\\<natural>\\<^bsub>G\\<^esub>H);\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n        x \\<cdot>\\<^bsub>G\\<^esub> y\n        \\<in> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        b = N \\<bullet>\\<^bsub>G\\<^esub> y; G \\<guillemotright> N ;\n        N \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N; x \\<in> N;\n        y \\<in> H; a = x \\<cdot>\\<^bsub>G\\<^esub> y; y \\<in> carrier G;\n        H \\<subseteq> H \\<diamondop>\\<^bsub>G\\<^esub> N;\n        N \\<bullet>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N\\<^esub>\n        y =\n        Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N) N\n         y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>H.\n                            Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                             N a =\n                            N \\<bullet>\\<^bsub>G\\<^esub> y", "apply (frule_tac c = y in subsetD[of \"H\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], assumption+,\n       simp add:Group.Gp_rcs[of \"G\" \"N\" \"H \\<diamondop>\\<^bsub>G\\<^esub> N\"], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem homom4:\"\\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow>gbij\\<^bsub>((Gp G H)/(H \\<inter> N)),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\\<^esub> (((Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>))\\<dieresis>\\<^bsub>(Gp G H),((Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) / N)\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule homom3Tr2 [of \"G\" \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule Group.Gp_smult_sg_nsg, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule Group.homom4Tr1[of \"G\" \"N\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n       N)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule Group.Group_Gp [of \"G\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule induced_ghom_ginjec [of \"Gp G H\" \"(Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)/N)\" \"(Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H)\\<rbrakk>\n    \\<Longrightarrow> Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                       N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\n                      \\<in> gHom (\\<natural>\\<^bsub>G\\<^esub>H)\n                             (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                              N)\n 2. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     ginj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                  gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                                     N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                    N)\\<^esub> (Pj\n           (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n           N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                   N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (simp add:gsurjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     ginj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                  gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                                     N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                    N)\\<^esub> (Pj\n           (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n           N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                   N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule inducedhomgsurjec [of \"Gp G H\" \"(Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N))/N\" \"(Pj (Gp G (H \\<diamondop>\\<^bsub>G\\<^esub> N)) N) \\<circ>\\<^bsub>(Gp G H)\\<^esub> (\\<iota>\\<^bsub>(Gp G H)\\<^esub>)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     ginj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                  gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                                     N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                    N)\\<^esub> (Pj\n           (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n           N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                   N)\\<^esub>);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                   gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                         N)\\<^esub> (Pj\n(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\nN \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                     N)\\<^esub> (Pj\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n            N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                    N)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply (frule Group.homom3Tr1[of \"G\" \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     ginj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                  gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                                     N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                    N)\\<^esub> (Pj\n           (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n           N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                   N)\\<^esub>);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                   gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                         N)\\<^esub> (Pj\n(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\nN \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                     N)\\<^esub> (Pj\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n            N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                    N)\\<^esub>);\n     H \\<inter> N =\n     gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n           N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                        N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   (H \\<inter>\n                                    N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub>)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n            N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                         N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N);\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     ginj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                  gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                                     N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                    N)\\<^esub> (Pj\n           (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n           N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                   N)\\<^esub>);\n     gsurj\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                   gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                         N)\\<^esub> (Pj\n(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\nN \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                     N)\\<^esub> (Pj\n            (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n            N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                    N)\\<^esub>);\n     H \\<inter> N =\n     gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n           N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                        N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)\\<rbrakk>\n    \\<Longrightarrow> gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                                   gker\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n   N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n               N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                            N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                                    N)\\<^esub>)", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) homom4_2:\"\\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> Group ((Gp G H) / (H \\<inter> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>H / (H \\<inter> N))", "by (frule Group_Gp[of \"H\"],\n    frule inter_Gp_nsg[of \"N\" \"H\"], assumption,\n    rule Group.Group_Qg, assumption+)"], ["", "lemma isom4:\"\\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow>\n                 ((Gp G H)/(H \\<inter> N)) \\<cong>  ((Gp G (N \\<diamondop>\\<^bsub>G\\<^esub> H)) / N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H /\n                       (H \\<inter> N)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N)", "apply (frule homom4 [of \"G\" \"N\" \"H\"], assumption+,\n       frule Group.smult_sg_nsg[of \"G\" \"H\" \"N\"], assumption+,\n       frule Group.smult_commute_sg_nsg[of \"G\" \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     gbij\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H /\n                  (H \\<inter>\n                   N)),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\\<^esub> (Pj (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N)\n                                     N \\<circ>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub> \\<iota>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H)\\<^esub>\\<dieresis>\\<^bsub>(\\<natural>\\<^bsub>G\\<^esub>H),(\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n       N)\\<^esub>);\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N ;\n     H \\<diamondop>\\<^bsub>G\\<^esub> N =\n     N \\<diamondop>\\<^bsub>G\\<^esub> H\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H /\n                       (H \\<inter> N)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N)", "apply (simp add:isomorphic_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ZassenhausTr5:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n      Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>\n   ((Gp G (H \\<inter> K))/((H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))) \\<cong> \n                          ((Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)))/(H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (frule Group.ZassenhausTr2_1 [of \"G\" \"H\" \"H1\" \"K\"], assumption+,\n       frule Group.Group_Gp [of \"G\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K)\"], assumption+,\n       frule Group.ZassenhausTr3 [of \"G\" \"H\" \"H1\" \"K\" \"K1\"], assumption+,\n       frule Group.inter_sgs [of \"G\" \"H\" \"K\"], assumption+,\n       frule Group.r_sub_smult[of \"G\" \"H1\" \"H \\<inter> K\"], assumption+,\n       frule Group.sg_sg[of \"G\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\" \"H \\<inter> K\"], assumption+,\n       frule isom4 [of \"Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K)\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\" \"H \\<inter> K\"], \n                                                             assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H \\<inter>\n                            K /\n      (H \\<inter> K \\<inter>\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (simp add:Int_commute[of \"H \\<inter> K\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H \\<inter>\n                            K /\n      ((H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1) \\<inter>\n       (H \\<inter> K))) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (frule Group.Group_Gp[of \"G\" \"H\"], assumption,\n       frule Group.Group_Gp[of \"G\" \"K\"], assumption,\n       frule Group.nsg_sg[of \"Gp G H\" \"H1\"], assumption+,\n       frule Group.sg_subset[of \"Gp G H\" \"H1\"], assumption+,\n       frule Group.nsg_sg[of \"Gp G K\" \"K1\"], assumption+, \n       frule Group.sg_subset[of \"Gp G K\" \"K1\"], assumption+, \n       simp add:Group.Gp_carrier,\n       frule Group.inter_sgs[of \"G\" \"H\" \"K1\"], assumption+,\n       cut_tac subset_self[of \"H\"],\n       frule Int_mono[of \"H\" \"H\" \"K1\" \"K\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H \\<inter>\n                            K /\n      ((H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1) \\<inter>\n       (H \\<inter> K))) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ; H \\<subseteq> H;\n     H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (simp add:Group.s_topTr6_1[of \"G\" \"H1\" \"H \\<inter> K1\" \"H \\<inter> K\"],\n       simp add:Int_assoc[THEN sym, of \"H1\" \"H\" \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H \\<inter>\n                            K /\n      (H1 \\<inter> H \\<inter>\n       K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ;\n     H \\<inter> K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (simp add:Int_absorb2[of \"H1\" \"H\"],\n       simp add:Group.Gp_inherited[of \"G\" \"H \\<inter> K\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ;\n     H \\<inter> K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (frule Group.s_top_mono[of \"G\" \"H1\" \"H \\<inter> K\" \"H1\" \"H \\<inter> K1\"],\n        frule Group.sg_subset[of \"G\" \"H\"], assumption+,\n        rule subset_trans[of \"H1\" \"H\" \"carrier G\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ;\n     H \\<inter> K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K \\<subseteq> carrier G\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ;\n     H \\<inter> K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H1 \\<subseteq> H1\n 3. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ;\n     H \\<inter> K1 \\<subseteq> K\\<rbrakk>\n    \\<Longrightarrow> H \\<inter> K1 \\<subseteq> H \\<inter> K\n 4. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ; H \\<inter> K1 \\<subseteq> K;\n     H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\n     \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (rule Group.sg_subset[of \"G\" \"H \\<inter> K\"], assumption+, simp,\n         simp,\n         (frule Group.ZassenhausTr2_1[of \"G\" \"H\" \"H1\" \"K\"], assumption+,\n          frule Group.subg_sg_sg[of \"G\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\"],\n                                  assumption+, simp add:Group.nsg_sg))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K1 \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub> H \\<inter>\n             K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ; H \\<inter> K1 \\<subseteq> K;\n     H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\n     \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                    K1 \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (simp add:Group.s_top_induced[of \"G\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\" \"H \\<inter> K\"],\n         simp add:Group.s_top_assoc[of \"G\" \"H1\" \"H \\<inter> K1\" \"H \\<inter> K\"],\n         cut_tac subset_self[of \"H\"],\n         frule Int_mono[of \"H\" \"H\" \"K1\" \"K\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter>\n                        K1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K) /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ; H \\<inter> K1 \\<subseteq> K;\n     H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\n     \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1 ;\n     H \\<subseteq> H; H \\<inter> K1 \\<subseteq> H \\<inter> K\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (simp add:Group.K_absorb_HK[of \"G\" \"H \\<inter> K1\" \"H \\<inter> K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1;\n     G \\<guillemotright> H \\<inter> K ;\n     H \\<inter> K \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<guillemotright> H \\<inter> K ;\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                       K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group (\\<natural>\\<^bsub>G\\<^esub>H);\n     Group (\\<natural>\\<^bsub>G\\<^esub>K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<guillemotright> H1 ; H1 \\<subseteq> H;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<guillemotright> K1 ; K1 \\<subseteq> K;\n     G \\<guillemotright> H \\<inter> K1 ; H \\<inter> K1 \\<subseteq> K;\n     H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\n     \\<subseteq> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                    K1 \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                  K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (cut_tac subset_self[of \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"],\n         simp add:Group.Gp_inherited[of \"G\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ZassenhausTr5_1:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>   ((Gp G (K \\<inter> H))/((K1 \\<inter> H) \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1))) \\<cong> \n                          ((Gp G (K1 \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H)))/(K1 \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "(* thm ZassenhausTr5 [of \"G\" \"K\" \"K1\" \"H\" \"H1\"] *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (simp add:ZassenhausTr5 [of \"G\" \"K\" \"K1\" \"H\" \"H1\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ZassenhausTr5_2: \"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow>\n      ((Gp G (H \\<inter> K))/((H1 \\<inter> K) \\<diamondop>\\<^bsub>G\\<^esub> (H \\<inter> K1))) = \n                       ((Gp G (K \\<inter> H))/((K1 \\<inter> H) \\<diamondop>\\<^bsub>G\\<^esub> (K \\<inter> H1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                      (H1 \\<inter>\n                       K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1) =\n                      \\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                      (K1 \\<inter>\n                       H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1)", "by (simp add:Group.ZassenhausTr3_3[of \"G\" \"H\" \"H1\" \"K\" \"K1\"],\n       simp add:Int_commute[of \"H\" \"K\"])"], ["", "lemma ZassenhausTr6_1:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Group  (Gp G (H \\<inter> K) / (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                        (H1 \\<inter>\n                         K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (frule Group.inter_sgs [of \"G\" \"H\" \"K\"], assumption+,\n       frule Group.Group_Gp [of \"G\" \"H \\<inter> K\"], assumption+,\n       frule Group.ZassenhausTr3_5 [of \"G\" \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H \\<inter> K ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K);\n     \\<natural>\\<^bsub>G\\<^esub>H \\<inter>\n                                K \\<triangleright> H1 \\<inter>\n             K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                        (H1 \\<inter>\n                         K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (rule Group.Group_Qg, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ZassenhausTr6_2:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Group (Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K) / (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n        K /\n                        (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (frule Group.ZassenhausTr2_1 [of \"G\" \"H\" \"H1\" \"K\"], assumption+,\n       frule Group.Group_Gp [of \"G\" \"H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K\"], assumption+,\n       frule Group.ZassenhausTr3 [of \"G\" \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K);\n     \\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                           K \\<triangleright> H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n   K1\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n        K /\n                        (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))", "apply (simp add:Group.Group_Qg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ZassenhausTr6_3:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> Group (Gp G (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H) / (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n        H /\n                        (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (frule Group.ZassenhausTr2_1 [of \"G\" \"K\" \"K1\" \"H\"], assumption+,\n       frule Group.Group_Gp [of \"G\" \"K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H\"], assumption+,\n       frule Group.ZassenhausTr3[of \"G\" \"K\" \"K1\" \"H\" \"H1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     G \\<guillemotright> K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H ;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H);\n     \\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                           H \\<triangleright> K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n   H1\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n        H /\n                        (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (simp add:Group.Group_Qg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem Zassenhaus:\"\\<lbrakk>Group G; G \\<guillemotright> H; G \\<guillemotright> H1; G \\<guillemotright> K; G \\<guillemotright> K1; Gp G H \\<triangleright> H1; \n       Gp G K \\<triangleright> K1\\<rbrakk> \\<Longrightarrow> (Gp G (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K) / (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong> \n                              (Gp G (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H) / (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (frule ZassenhausTr6_1[of \"G\" \"K\" \"K1\" \"H\" \"H1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (frule ZassenhausTr6_3 [of \"G\" \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (frule ZassenhausTr6_2 [of \"G\" \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (rule isomTr2[of \"(\\<natural>\\<^bsub>G\\<^esub>(H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K)) / (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)\" \n             \"(\\<natural>\\<^bsub>G\\<^esub>(K \\<inter> H)) / (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1)\"\n             \"(\\<natural>\\<^bsub>G\\<^esub>(K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H)) / (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (frule ZassenhausTr5_1[of \"G\" \"K\" \"K1\" \"H\" \"H1\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                            K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (simp add:Int_commute[of \"K\" \"H\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                            K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (simp add:Group.ZassenhausTr3_3[THEN sym, of \"G\" \"H\" \"H1\" \"K\" \"K1\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n       (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1));\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n      (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                            K /\n      (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n       K /\n                       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                   K1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H \\<inter> K /\n                       (H1 \\<inter>\n                        K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\n 2. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (rule isomTr1[of  \"(\\<natural>\\<^bsub>G\\<^esub>(H \\<inter> K)) / (H1 \\<inter> K \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)\" \n                        \"(\\<natural>\\<^bsub>G\\<^esub>(H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K)) / (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<guillemotright> H ; G \\<guillemotright> H1 ;\n     G \\<guillemotright> K ; G \\<guillemotright> K1 ;\n     \\<natural>\\<^bsub>G\\<^esub>H \\<triangleright> H1;\n     \\<natural>\\<^bsub>G\\<^esub>K \\<triangleright> K1;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n       (K1 \\<inter> H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                             H /\n       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter>\n                             K /\n       (H1 \\<diamondop>\\<^bsub>G\\<^esub> H \\<inter> K1))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>K \\<inter> H /\n                       (K1 \\<inter>\n                        H \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n                  H1)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter>\n       H /\n                       (K1 \\<diamondop>\\<^bsub>G\\<^esub> K \\<inter> H1))", "apply (rule ZassenhausTr5_1[of \"G\" \"H\" \"H1\" \"K\" \"K1\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Chain of groups I\""], ["", "definition\n  d_gchain :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"d_gchain G n g = (if n=0 then G \\<guillemotright> g 0 else (\\<forall>l\\<le> n. G \\<guillemotright> (g l) \\<and> \n            (\\<forall>l \\<le> (n - Suc 0). g (Suc l) \\<subseteq> g l )))\""], ["", "(**  g 0 \\<supseteq> \\<dots> \\<supseteq> g n  **)"], ["", "definition\n  D_gchain :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"D_gchain G n g = (if n = 0 then G \\<guillemotright> (g 0) else (d_gchain G n g) \\<and> \n      (\\<forall>l \\<le> (n - Suc 0). (g (Suc l)) \\<subset> (g l)))\""], ["", "(**  g 0 \\<supset> \\<dots> \\<supset> g n **)"], ["", "definition\n  td_gchain :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"td_gchain G n g = (if n=0 then g 0 = carrier G \\<and> g 0 = {\\<one>\\<^bsub>G\\<^esub>} else \n       d_gchain G n g \\<and> g 0 = carrier G \\<and> g n = {\\<one>\\<^bsub>G\\<^esub>})\""], ["", "(**  g 0 \\<supseteq> \\<dots> \\<supseteq> g n with g 0 = carrier G and g n = {e}  **)"], ["", "definition\n  tD_gchain :: \"[_, nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"tD_gchain G n g = (if n=0 then g 0 = carrier G \\<and> g 0 = {\\<one>\\<^bsub>G\\<^esub>} else \n        D_gchain G n g \\<and> (g 0 = carrier G) \\<and> (g n = {\\<one>\\<^bsub>G\\<^esub>}))\""], ["", "(**  g 0 \\<supset> \\<dots> \\<supset> g n with g 0 = carrier G and g n = {e}  **)"], ["", "definition\n  w_cmpser :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"w_cmpser G n g = (if n = 0 then d_gchain G n g else d_gchain G n g \\<and>  \n    (\\<forall>l \\<le> (n - 1). (Gp G (g l)) \\<triangleright> (g (Suc l))))\""], ["", "(**  g 0 \\<rhd> \\<dots> \\<rhd> g n ** with g l \\<supseteq> g (Suc l) **)"], ["", "definition\n  W_cmpser :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"W_cmpser G n g = (if n = 0 then d_gchain G 0 g else D_gchain G n g \\<and> \n    (\\<forall>l \\<le> (n - 1). (Gp G (g l)) \\<triangleright> (g (Suc l))))\""], ["", "(**  g 0 \\<rhd> \\<dots> \\<rhd> g n  with g i \\<supset> g (Suc i) **)"], ["", "definition\n  tw_cmpser :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"tw_cmpser G n g = (if n = 0 then td_gchain G 0 g else td_gchain G n g \\<and> \n    (\\<forall>l \\<le> (n - 1). (Gp G (g l)) \\<triangleright> (g (Suc l))))\""], ["", "(**  g 0 \\<rhd> \\<dots> \\<rhd> g n with g 0 = carrier G and g n = {e}  **)"], ["", "definition\n  tW_cmpser :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> bool\" where\n  \"tW_cmpser G n g = (if n = 0 then td_gchain G 0 g else tD_gchain G n g \\<and> \n     (\\<forall>l \\<le> (n - 1). (Gp G (g l)) \\<triangleright> (g (Suc l))))\""], ["", "(* g 0 \\<rhd> \\<dots> \\<rhd> g n with g 0 = carrier G, g n = {e} and g (Suc i) \\<subset> g i*)"], ["", "definition\n  Qw_cmpser :: \"[_ , nat \\<Rightarrow> 'a set] \\<Rightarrow> (nat \\<Rightarrow> ('a set) Group)\" where\n  \"Qw_cmpser G f l = ((Gp G (f l)) / (f (Suc l)))\""], ["", "(* f 0 \\<rhd> \\<dots> \\<rhd> f (n+1), Qw_cmpser G n f is (f 0)/(f 1),\\<dots>,f n/f (n+1) *)"], ["", "definition\n  red_chn :: \"[_ , nat, (nat \\<Rightarrow> 'a set)] \\<Rightarrow> (nat \\<Rightarrow> 'a set)\" where\n  \"red_chn G n f = (SOME g. g \\<in> {h.(tW_cmpser G (card (f ` {i. i \\<le> n}) - 1) h)\n    \\<and> h `{i. i \\<le> (card (f ` {i. i \\<le> n}) - 1)} = f `{i. i \\<le> n}})\""], ["", "definition\n  chain_cutout :: \"[nat, (nat \\<Rightarrow> 'a set) ] \\<Rightarrow> (nat \\<Rightarrow> 'a set)\" where\n  \"chain_cutout l f = (\\<lambda>j. f (slide l j))\""], ["", "lemma (in Group) d_gchainTr0:\"\\<lbrakk>0 < n; d_gchain G n f; k \\<le> (n - 1)\\<rbrakk>\n                        \\<Longrightarrow> f (Suc k) \\<subseteq> f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; k \\<le> n - 1\\<rbrakk>\n    \\<Longrightarrow> f (Suc k) \\<subseteq> f k", "apply (simp add:d_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     \\<forall>l\\<le>n.\n        G \\<guillemotright> f l  \\<and>\n        (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l);\n     k \\<le> n - Suc 0\\<rbrakk>\n    \\<Longrightarrow> f (Suc k) \\<subseteq> f k", "apply (frule_tac a = k in forall_spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n;\n     \\<forall>l\\<le>n.\n        G \\<guillemotright> f l  \\<and>\n        (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l);\n     k \\<le> n - Suc 0\\<rbrakk>\n    \\<Longrightarrow> k \\<le> n\n 2. \\<lbrakk>0 < n;\n     \\<forall>l\\<le>n.\n        G \\<guillemotright> f l  \\<and>\n        (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l);\n     k \\<le> n - Suc 0;\n     G \\<guillemotright> f k  \\<and>\n     (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l)\\<rbrakk>\n    \\<Longrightarrow> f (Suc k) \\<subseteq> f k", "apply (rule Nat.le_trans, assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     \\<forall>l\\<le>n.\n        G \\<guillemotright> f l  \\<and>\n        (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l);\n     k \\<le> n - Suc 0;\n     G \\<guillemotright> f k  \\<and>\n     (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l)\\<rbrakk>\n    \\<Longrightarrow> f (Suc k) \\<subseteq> f k", "apply (erule conjE, rotate_tac 2,\n       frule_tac a = k in forall_spec, assumption, \n       thin_tac \"\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l\",\n       thin_tac \"\\<forall>l\\<le>n. G \\<guillemotright> f l  \\<and> (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> n - Suc 0; G \\<guillemotright> f k ; 0 < n;\n     f (Suc k) \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> f (Suc k) \\<subseteq> f k", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) d_gchain_mem_sg:\"d_gchain G n f \\<Longrightarrow> \\<forall>i\\<le> n. G \\<guillemotright> (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G n f \\<Longrightarrow>\n    \\<forall>i\\<le>n. G \\<guillemotright> f i", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       d_gchain G n f \\<Longrightarrow>\n       i \\<le> n \\<longrightarrow> G \\<guillemotright> f i", "apply (rule impI, simp add:d_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>if n = 0 then G \\<guillemotright> f 0 \n                else \\<forall>l\\<le>n.\n                        G \\<guillemotright> f l  \\<and>\n                        (\\<forall>l\\<le>n - Suc 0.\n                            f (Suc l) \\<subseteq> f l);\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> f i", "apply (case_tac \"n = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>if n = 0 then G \\<guillemotright> f 0 \n                else \\<forall>l\\<le>n.\n                        G \\<guillemotright> f l  \\<and>\n                        (\\<forall>l\\<le>n - Suc 0.\n                            f (Suc l) \\<subseteq> f l);\n        i \\<le> n; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> f i", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) d_gchain_pre:\"d_gchain G (Suc n) f \\<Longrightarrow> d_gchain G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G (Suc n) f \\<Longrightarrow> d_gchain G n f", "apply (simp add:d_gchain_def, rule impI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>Suc n.\n                G \\<guillemotright> f l  \\<and>\n                (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n     0 < n; \\<exists>l. l \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subseteq> f l", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n.\n                   G \\<guillemotright> f l  \\<and>\n                   (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        0 < n; \\<exists>l. l \\<le> n; l \\<le> n - Suc 0\\<rbrakk>\n       \\<Longrightarrow> f (Suc l) \\<subseteq> f l", "apply (frule_tac a = l in forall_spec, arith)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n.\n                   G \\<guillemotright> f l  \\<and>\n                   (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        0 < n; \\<exists>l. l \\<le> n; l \\<le> n - Suc 0;\n        G \\<guillemotright> f l  \\<and>\n        (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l)\\<rbrakk>\n       \\<Longrightarrow> f (Suc l) \\<subseteq> f l", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n.\n                   G \\<guillemotright> f l  \\<and>\n                   (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        0 < n; \\<exists>l. l \\<le> n; l \\<le> n - Suc 0;\n        G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l\\<rbrakk>\n       \\<Longrightarrow> f (Suc l) \\<subseteq> f l", "apply (thin_tac \"\\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<and> (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l)\",\n       frule_tac a = l in forall_spec, arith, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) d_gchainTr1:\"0 < n \\<longrightarrow> (\\<forall>f. d_gchain G n f \\<longrightarrow> \n                     (\\<forall>l \\<le> n. \\<forall>j \\<le> n. l < j \\<longrightarrow> f j \\<subseteq> f l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<longrightarrow>\n    (\\<forall>f.\n        d_gchain G n f \\<longrightarrow>\n        (\\<forall>l\\<le>n.\n            \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l))", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < 0 \\<longrightarrow>\n    (\\<forall>f.\n        d_gchain G 0 f \\<longrightarrow>\n        (\\<forall>l\\<le>0.\n            \\<forall>j\\<le>0. l < j \\<longrightarrow> f j \\<subseteq> f l))\n 2. \\<And>n.\n       0 < n \\<longrightarrow>\n       (\\<forall>f.\n           d_gchain G n f \\<longrightarrow>\n           (\\<forall>l\\<le>n.\n               \\<forall>j\\<le>n.\n                  l < j \\<longrightarrow>\n                  f j \\<subseteq> f l)) \\<Longrightarrow>\n       0 < Suc n \\<longrightarrow>\n       (\\<forall>f.\n           d_gchain G (Suc n) f \\<longrightarrow>\n           (\\<forall>l\\<le>Suc n.\n               \\<forall>j\\<le>Suc n.\n                  l < j \\<longrightarrow> f j \\<subseteq> f l))", "apply (rule impI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<longrightarrow>\n       (\\<forall>f.\n           d_gchain G n f \\<longrightarrow>\n           (\\<forall>l\\<le>n.\n               \\<forall>j\\<le>n.\n                  l < j \\<longrightarrow>\n                  f j \\<subseteq> f l)) \\<Longrightarrow>\n       0 < Suc n \\<longrightarrow>\n       (\\<forall>f.\n           d_gchain G (Suc n) f \\<longrightarrow>\n           (\\<forall>l\\<le>Suc n.\n               \\<forall>j\\<le>Suc n.\n                  l < j \\<longrightarrow> f j \\<subseteq> f l))", "(** n **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<longrightarrow>\n       (\\<forall>f.\n           d_gchain G n f \\<longrightarrow>\n           (\\<forall>l\\<le>n.\n               \\<forall>j\\<le>n.\n                  l < j \\<longrightarrow>\n                  f j \\<subseteq> f l)) \\<Longrightarrow>\n       0 < Suc n \\<longrightarrow>\n       (\\<forall>f.\n           d_gchain G (Suc n) f \\<longrightarrow>\n           (\\<forall>l\\<le>Suc n.\n               \\<forall>j\\<le>Suc n.\n                  l < j \\<longrightarrow> f j \\<subseteq> f l))", "apply (rule impI, rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<le>Suc n.\n                            \\<forall>j\\<le>Suc n.\n                               l < j \\<longrightarrow> f j \\<subseteq> f l", "apply ((rule allI, rule impI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f; l \\<le> Suc n; j \\<le> Suc n;\n        l < j\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "(** case n = 0 **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f; l \\<le> Suc n; j \\<le> Suc n;\n        l < j\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (case_tac \"n = 0\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l j.\n       \\<lbrakk>d_gchain G (Suc 0) f; j \\<le> Suc 0; l < j; n = 0\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l\n 2. \\<And>n f l j.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f; l \\<le> Suc n; j \\<le> Suc n;\n        l < j; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (case_tac \"j = 0\", simp, \n        frule le_imp_less_or_eq, thin_tac \"j \\<le> Suc 0\",\n        simp, simp add:d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l j.\n       \\<lbrakk>\\<forall>l\\<le>Suc 0.\n                   G \\<guillemotright> f l  \\<and>\n                   f (Suc 0) \\<subseteq> f 0;\n        l = 0; n = 0; j = Suc 0\\<rbrakk>\n       \\<Longrightarrow> f (Suc 0) \\<subseteq> f 0\n 2. \\<And>n f l j.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f; l \\<le> Suc n; j \\<le> Suc n;\n        l < j; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (frule_tac a = 0 in forall_spec, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f; l \\<le> Suc n; j \\<le> Suc n;\n        l < j; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "(** case 0 < n **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>0 < n \\<longrightarrow>\n                (\\<forall>f.\n                    d_gchain G n f \\<longrightarrow>\n                    (\\<forall>l\\<le>n.\n                        \\<forall>j\\<le>n.\n                           l < j \\<longrightarrow> f j \\<subseteq> f l));\n        0 < Suc n; d_gchain G (Suc n) f; l \\<le> Suc n; j \\<le> Suc n;\n        l < j; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "(** case j = n **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (case_tac \"j = Suc n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j = Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l\n 2. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (frule d_gchain_pre, \n        frule_tac a = f in forall_spec, assumption,\n        thin_tac \"\\<forall>f. d_gchain G n f \\<longrightarrow> (\\<forall>l\\<le>n. \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l)\",\n        thin_tac \"d_gchain G n f\",\n        simp add:d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l j.\n       \\<lbrakk>\\<forall>l\\<le>Suc n.\n                   G \\<guillemotright> f l  \\<and>\n                   (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        l < Suc n; 0 < n; j = Suc n;\n        \\<forall>l\\<le>n.\n           \\<forall>j\\<le>n.\n              l < j \\<longrightarrow> f j \\<subseteq> f l\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subseteq> f l\n 2. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (frule_tac a = n in forall_spec, simp,\n        thin_tac \"\\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<and> (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l)\",\n        erule conjE,\n        rotate_tac -1,\n        frule_tac a = n in forall_spec, simp,\n        thin_tac \"\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l\",\n        frule_tac x = l and n = n in Suc_less_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l j.\n       \\<lbrakk>l < Suc n; 0 < n; j = Suc n;\n        \\<forall>l\\<le>n.\n           \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l;\n        G \\<guillemotright> f n ; f (Suc n) \\<subseteq> f n;\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subseteq> f l\n 2. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (case_tac \"l = n\", simp,\n         thin_tac \"l < Suc n\",\n         frule_tac x = l and y = n in le_imp_less_or_eq, \n         thin_tac \"l \\<le> n\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l.\n       \\<lbrakk>\\<forall>l\\<le>n.\n                   \\<forall>j\\<le>n.\n                      l < j \\<longrightarrow> f j \\<subseteq> f l;\n        G \\<guillemotright> f n ; f (Suc n) \\<subseteq> f n; l < n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subseteq> f l\n 2. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (frule_tac a = l in forall_spec, simp,\n         thin_tac \"\\<forall>l\\<le>n. \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f l.\n       \\<lbrakk>G \\<guillemotright> f n ; f (Suc n) \\<subseteq> f n; l < n;\n        \\<forall>j\\<le>n.\n           l < j \\<longrightarrow> f j \\<subseteq> f l\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subseteq> f l\n 2. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (\n         frule_tac a = n in forall_spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f l.\n       \\<lbrakk>G \\<guillemotright> f n ; f (Suc n) \\<subseteq> f n; l < n;\n        \\<forall>j\\<le>n.\n           l < j \\<longrightarrow> f j \\<subseteq> f l\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 2. \\<And>n f l.\n       \\<lbrakk>G \\<guillemotright> f n ; f (Suc n) \\<subseteq> f n; l < n;\n        \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l;\n        l < n \\<longrightarrow> f n \\<subseteq> f l\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subseteq> f l\n 3. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (simp,\n         thin_tac \"\\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f l j.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<forall>l\\<le>n.\n                       \\<forall>j\\<le>n.\n                          l < j \\<longrightarrow> f j \\<subseteq> f l);\n        d_gchain G (Suc n) f; j \\<le> Suc n; l < j; 0 < n;\n        j \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> f j \\<subseteq> f l", "apply (simp add: d_gchain_pre)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) d_gchainTr2:\"\\<lbrakk>0 < n; d_gchain G n f; l \\<le> n; j \\<le> n; l \\<le> j \\<rbrakk>\n                               \\<Longrightarrow> f j \\<subseteq> f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; l \\<le> n; j \\<le> n; l \\<le> j\\<rbrakk>\n    \\<Longrightarrow> f j \\<subseteq> f l", "apply (case_tac \"l = j\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; l \\<le> n; j \\<le> n; l \\<le> j;\n     l \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> f j \\<subseteq> f l", "apply (metis Group.d_gchainTr1 [OF Group_axioms] antisym_conv2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchainTr1:\"\\<lbrakk>d_gchain G n f;\n       f l \\<in> (f ` {i. i \\<le> n}) - {f 0}\\<rbrakk> \\<Longrightarrow> \n    f (LEAST j. f j \\<in> (f ` {i. i \\<le> n}) - {f 0}) \\<in> (f ` {i. i \\<le> n} - {f 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f l \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                      \\<in> f ` {i. i \\<le> n} - {f 0}", "apply (rule LeastI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f l \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> f ?k \\<in> f ` {i. i \\<le> n} - {f 0}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchainTr1_0:\"\\<lbrakk>d_gchain G n f; \n                 f l \\<in> (f ` {i. i \\<le> n}) - {f 0}\\<rbrakk>  \\<Longrightarrow> \n                 0 < (LEAST j. f j \\<in> (f ` {i. i \\<le> n}) - {f 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f l \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> 0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})", "apply (frule im_d_gchainTr1 [of \"n\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f l \\<in> f ` {i. i \\<le> n} - {f 0};\n     f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n     \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> 0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})", "apply (rule contrapos_pp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f l \\<in> f ` {i. i \\<le> n} - {f 0};\n     f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n     \\<in> f ` {i. i \\<le> n} - {f 0};\n     \\<not> 0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> \\<not> True", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchainTr1_1:\n      \"\\<lbrakk>d_gchain G n f; \\<exists> i. f i \\<in> (f ` {i. i \\<le> n}) - {f 0}\\<rbrakk>  \\<Longrightarrow>\n  f (LEAST j. f j \\<in> ((f ` {i. i \\<le> n}) - {f 0})) \\<in> ((f` {i. i \\<le> n}) - {f 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<exists>i. f i \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                      \\<in> f ` {i. i \\<le> n} - {f 0}", "apply (subgoal_tac \"\\<forall>i. f i \\<in> f ` {i. i \\<le> n} - {f 0} \\<longrightarrow> \n        f (LEAST j. f j \\<in> f `{i. i \\<le> n} - {f 0}) \\<in> f ` {i. i\\<le> n} - {f 0}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<exists>i. f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     \\<forall>i.\n        f i \\<in> f ` {i. i \\<le> n} - {f 0} \\<longrightarrow>\n        f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n        \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                      \\<in> f ` {i. i \\<le> n} - {f 0}\n 2. \\<lbrakk>d_gchain G n f;\n     \\<exists>i. f i \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         f i\n                         \\<in> f ` {i. i \\<le> n} - {f 0} \\<longrightarrow>\n                         f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                         \\<in> f ` {i. i \\<le> n} - {f 0}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<exists>i. f i \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         f i\n                         \\<in> f ` {i. i \\<le> n} - {f 0} \\<longrightarrow>\n                         f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                         \\<in> f ` {i. i \\<le> n} - {f 0}", "apply (thin_tac \"\\<exists>i. f i \\<in> f `{i. i \\<le> n} - {f 0}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G n f \\<Longrightarrow>\n    \\<forall>i.\n       f i \\<in> f ` {i. i \\<le> n} - {f 0} \\<longrightarrow>\n       f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n       \\<in> f ` {i. i \\<le> n} - {f 0}", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       d_gchain G n f \\<Longrightarrow>\n       f i \\<in> f ` {i. i \\<le> n} - {f 0} \\<longrightarrow>\n       f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n       \\<in> f ` {i. i \\<le> n} - {f 0}", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f;\n        f i \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n       \\<Longrightarrow> f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                         \\<in> f ` {i. i \\<le> n} - {f 0}", "apply (rule im_d_gchainTr1 [of \"n\" \"f\" _], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchainsTr1_2:\"\n      \\<lbrakk>d_gchain G n f; i \\<le> n; f i \\<in> f `{i. i \\<le> n} - {f 0}\\<rbrakk>  \\<Longrightarrow>\n          (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                      \\<le> i", "by (rule Least_le, assumption)"], ["", "lemma (in Group) im_d_gchainsTr1_3:\"\\<lbrakk>d_gchain G n f; \\<exists>i \\<le> n. \n                 f i \\<in> f` {i. i \\<le> n} - {f 0};\n                 k < (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0}))\\<rbrakk> \\<Longrightarrow> f k = f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<exists>i\\<le>n. f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     k < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> f k = f 0", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f;\n        k < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n        i \\<le> n \\<and> f i \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n       \\<Longrightarrow> f k = f 0", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f;\n        k < (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0);\n        i \\<le> n \\<and>\n        f i \\<in> f ` {i. i \\<le> n} \\<and> f i \\<noteq> f 0;\n        f k \\<noteq> f 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac i = i in im_d_gchainsTr1_2 [of \"n\" \"f\" _ ], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f;\n        k < (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0);\n        i \\<le> n \\<and>\n        f i \\<in> f ` {i. i \\<le> n} \\<and> f i \\<noteq> f 0;\n        f k \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\n        \\<le> i\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f;\n        k < (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0);\n        f k \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\n        \\<le> i;\n        i \\<le> n; f i \\<in> f ` {i. i \\<le> n}; f i \\<noteq> f 0\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac x = k and \n                 y = \"LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0\" and\n                 z = i in less_le_trans, assumption,\n       frule_tac x = k and \n                 y = i and\n                 z = n in less_le_trans, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f;\n        k < (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0);\n        f k \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\n        \\<le> i;\n        i \\<le> n; f i \\<in> f ` {i. i \\<le> n}; f i \\<noteq> f 0; k < i;\n        k < n\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac i = k in im_d_gchainsTr1_2 [of \"n\" \"f\" _ ], simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_gdchainsTr1_4:\"\\<lbrakk>d_gchain G n f;\n       \\<exists>v\\<in>f `{i. i \\<le> n}. v \\<notin> {f 0}; i < (LEAST j. f j \\<in> (f `{i. i \\<le> n}) \\<and> \n       f j \\<noteq> f 0) \\<rbrakk> \\<Longrightarrow> f i = f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<exists>v\\<in>f ` {i. i \\<le> n}. v \\<notin> {f 0};\n     i < (LEAST j.\n             f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\\<rbrakk>\n    \\<Longrightarrow> f i = f 0", "apply (rule im_d_gchainsTr1_3 [of \"n\" \"f\" \"i\"], assumption,\n       thin_tac \"i < (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\",\n       simp add:image_def, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<exists>v\\<in>f ` {i. i \\<le> n}. v \\<notin> {f 0};\n     i < (LEAST j.\n             f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\\<rbrakk>\n    \\<Longrightarrow> i < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchainsTr1_5:\"\\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; \nf i \\<in> (f ` {i. i \\<le> n} - {f 0}); (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) = j\\<rbrakk> \n\\<Longrightarrow>         f `{i. i \\<le> (j - (Suc 0))} = {f 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> j - Suc 0} = {f 0}", "apply (frule im_d_gchainTr1_0 [of \"n\" \"f\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> j - Suc 0} = {f 0}", "apply (subst image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> {y. \\<exists>x\\<in>{i. i \\<le> j - Suc 0}. y = f x} =\n                      {f 0}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> {y. \\<exists>x\\<in>{i. i \\<le> j - Suc 0}. y = f x}\n                      \\<subseteq> {f 0}\n 2. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> {f 0}\n                      \\<subseteq> {y. \\<exists>x\\<in>{i. i \\<le> j - Suc 0}.\n   y = f x}", "apply (rule subsetI, simp, erule exE, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; f i \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0) = j;\n        0 < j; xa \\<le> j - Suc 0; x = f xa\\<rbrakk>\n       \\<Longrightarrow> x = f 0\n 2. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> {f 0}\n                      \\<subseteq> {y. \\<exists>x\\<in>{i. i \\<le> j - Suc 0}.\n   y = f x}", "apply (frule_tac x = xa and y = \"j - Suc 0\" and \n        z = \"(LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\" in le_less_trans,\n        simp,\n        frule_tac k = xa in im_d_gchainsTr1_3[of \"n\" \"f\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; f i \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0) = j;\n        0 < j; xa \\<le> j - Suc 0; x = f xa;\n        xa < (LEAST j.\n                 f j \\<in> f ` {i. i \\<le> n} \\<and>\n                 f j \\<noteq> f 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            f i \\<in> f ` {i. i \\<le> n} - {f 0}\n 2. \\<And>x xa.\n       \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; f i \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0) = j;\n        0 < j; xa \\<le> j - Suc 0; x = f xa;\n        xa < (LEAST j.\n                 f j \\<in> f ` {i. i \\<le> n} \\<and>\n                 f j \\<noteq> f 0)\\<rbrakk>\n       \\<Longrightarrow> xa < (LEAST j.\n                                  f j \\<in> f ` {i. i \\<le> n} - {f 0})\n 3. \\<And>x xa.\n       \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; f i \\<noteq> f 0;\n        (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0) = j;\n        0 < j; xa \\<le> j - Suc 0; x = f xa;\n        xa < (LEAST j.\n                 f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0);\n        f xa = f 0\\<rbrakk>\n       \\<Longrightarrow> x = f 0\n 4. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> {f 0}\n                      \\<subseteq> {y. \\<exists>x\\<in>{i. i \\<le> j - Suc 0}.\n   y = f x}", "apply (simp, blast, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\\<rbrakk>\n    \\<Longrightarrow> {f 0}\n                      \\<subseteq> {y. \\<exists>x\\<in>{i. i \\<le> j - Suc 0}.\n   y = f x}", "apply (rule subsetI, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchains1:\"\\<lbrakk>0 < n; d_gchain G n f; i \\<le> n; \n                 f i \\<in> (f ` {i. i \\<le> n} - {f 0}); \n                 (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) = j \\<rbrakk> \\<Longrightarrow> \n                         f `{i. i \\<le> n} = {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}", "apply (frule im_d_gchainTr1_0 [of \"n\" \"f\" \"i\"], assumption+,\n       frule im_d_gchainsTr1_2 [of \"n\" \"f\" \"i\"], assumption+,\n       frule Nset_nset_1 [of \"n\" \"j - Suc 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i\\<rbrakk>\n    \\<Longrightarrow> j - Suc 0 < n\n 2. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}", "apply (subst im_set_un2, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> j - Suc 0} \\<union> f ` nset j n =\n                      {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}", "apply (subst im_d_gchainsTr1_5[of \"n\" \"f\" \"i\" \"j\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> 0 < n\n 2. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 3. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 4. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> f i \\<in> f ` {i. i \\<le> n} - {f 0}\n 5. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j\n 6. \\<lbrakk>0 < n; d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` {i. i \\<le> n} - {f 0};\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) = j;\n     0 < (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0});\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i;\n     {j. j \\<le> n} =\n     {ja. ja \\<le> j - Suc 0} \\<union> nset (Suc (j - Suc 0)) n\\<rbrakk>\n    \\<Longrightarrow> {f 0} \\<union> f ` nset j n =\n                      {f 0} \\<union> {f i |i. j \\<le> i \\<and> i \\<le> n}", "apply (simp, assumption, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n     f i \\<noteq> f 0;\n     (LEAST ja.\n         f ja \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n         f ja \\<noteq> f 0) =\n     j;\n     0 < j; j \\<le> i;\n     {j. j \\<le> n} = {ja. ja \\<le> j - Suc 0} \\<union> nset j n\\<rbrakk>\n    \\<Longrightarrow> insert (f 0) (f ` nset j n) =\n                      insert (f 0) {f i |i. j \\<le> i \\<and> i \\<le> n}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n     f i \\<noteq> f 0;\n     (LEAST ja.\n         f ja \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n         f ja \\<noteq> f 0) =\n     j;\n     0 < j; j \\<le> i;\n     {j. j \\<le> n} = {ja. ja \\<le> j - Suc 0} \\<union> nset j n\\<rbrakk>\n    \\<Longrightarrow> insert (f 0) (f ` nset j n)\n                      \\<subseteq> insert (f 0)\n                                   {f i |i. j \\<le> i \\<and> i \\<le> n}\n 2. \\<lbrakk>d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n     f i \\<noteq> f 0;\n     (LEAST ja.\n         f ja \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n         f ja \\<noteq> f 0) =\n     j;\n     0 < j; j \\<le> i;\n     {j. j \\<le> n} = {ja. ja \\<le> j - Suc 0} \\<union> nset j n\\<rbrakk>\n    \\<Longrightarrow> insert (f 0) {f i |i. j \\<le> i \\<and> i \\<le> n}\n                      \\<subseteq> insert (f 0) (f ` nset j n)", "apply (rule subsetI, simp, erule disjE, simp,\n        simp add:image_def nset_def, erule exE, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; i \\<le> n;\n     f i \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n     f i \\<noteq> f 0;\n     (LEAST ja.\n         f ja \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n         f ja \\<noteq> f 0) =\n     j;\n     0 < j; j \\<le> i;\n     {j. j \\<le> n} = {ja. ja \\<le> j - Suc 0} \\<union> nset j n\\<rbrakk>\n    \\<Longrightarrow> insert (f 0) {f i |i. j \\<le> i \\<and> i \\<le> n}\n                      \\<subseteq> insert (f 0) (f ` nset j n)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f; i \\<le> n;\n        f i \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n        f i \\<noteq> f 0;\n        (LEAST ja.\n            f ja \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n            f ja \\<noteq> f 0) =\n        j;\n        0 < j; j \\<le> i;\n        {j. j \\<le> n} = {ja. ja \\<le> j - Suc 0} \\<union> nset j n;\n        x \\<in> insert (f 0) {f i |i. j \\<le> i \\<and> i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert (f 0) (f ` nset j n)", "apply (simp, erule disjE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f; i \\<le> n;\n        f i \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n        f i \\<noteq> f 0;\n        (LEAST ja.\n            f ja \\<in> f ` ({i. i \\<le> j - Suc 0} \\<union> nset j n) \\<and>\n            f ja \\<noteq> f 0) =\n        j;\n        0 < j; j \\<le> i;\n        {j. j \\<le> n} = {ja. ja \\<le> j - Suc 0} \\<union> nset j n;\n        \\<exists>i. x = f i \\<and> j \\<le> i \\<and> i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> x = f 0 \\<or> x \\<in> f ` nset j n", "apply (erule exE, simp add:nset_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchains1_1:\"\\<lbrakk>d_gchain G n f; f n \\<noteq> f 0\\<rbrakk>  \\<Longrightarrow> \n      f `{i. i \\<le> n} = {f 0} \\<union> \n         {f i |i. (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<le> i \\<and> i \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union>\n                      {f i |i.\n                       (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                       \\<le> i \\<and>\n                       i \\<le> n}", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; n = 0\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union>\n                      {f i |i.\n                       (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                       \\<le> i \\<and>\n                       i \\<le> n}\n 2. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union>\n                      {f i |i.\n                       (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                       \\<le> i \\<and>\n                       i \\<le> n}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      {f 0} \\<union>\n                      {f i |i.\n                       (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                       \\<le> i \\<and>\n                       i \\<le> n}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      insert (f 0)\n                       {f i |i.\n                        (LEAST j.\n                            f j \\<in> f ` {i. i \\<le> n} \\<and>\n                            f j \\<noteq> f 0)\n                        \\<le> i \\<and>\n                        i \\<le> n}", "apply (frule im_d_gchains1 [of \"n\" \"f\" \"n\" \n                \"(LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\"], assumption+,\n       simp add:n_in_Nsetn)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f n \\<in> f ` {i. i \\<le> n} - {f 0}\n 2. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) =\n                      (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n 3. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; 0 < n;\n     f ` {i. i \\<le> n} =\n     {f 0} \\<union>\n     {f i |i.\n      (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i \\<and>\n      i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      insert (f 0)\n                       {f i |i.\n                        (LEAST j.\n                            f j \\<in> f ` {i. i \\<le> n} \\<and>\n                            f j \\<noteq> f 0)\n                        \\<le> i \\<and>\n                        i \\<le> n}", "apply (cut_tac n_in_Nsetn[of \"n\"], simp,\n       simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0; 0 < n;\n     f ` {i. i \\<le> n} =\n     {f 0} \\<union>\n     {f i |i.\n      (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<le> i \\<and>\n      i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> n} =\n                      insert (f 0)\n                       {f i |i.\n                        (LEAST j.\n                            f j \\<in> f ` {i. i \\<le> n} \\<and>\n                            f j \\<noteq> f 0)\n                        \\<le> i \\<and>\n                        i \\<le> n}", "apply (simp cong del: image_cong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) d_gchains_leastTr:\"\\<lbrakk>d_gchain G n f; f n \\<noteq> f 0\\<rbrakk>  \\<Longrightarrow>  \n               (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<in> {i. i \\<le> n} \\<and> \n               f  (LEAST j. f j \\<in> (f `{i. i \\<le> n} - {f 0})) \\<noteq> f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0\\<rbrakk>\n    \\<Longrightarrow> (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n                      \\<in> {i. i \\<le> n} \\<and>\n                      f (LEAST j.\n                            f j \\<in> f ` {i. i \\<le> n} - {f 0}) \\<noteq>\n                      f 0", "apply (frule im_d_gchainsTr1_2 [of \"n\" \"f\" \"n\"],\n       simp add:n_in_Nsetn,\n       simp add:image_def, blast,\n       frule mem_of_Nset[of \"LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0}\" \"n\"],\n       simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0;\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\n     \\<le> n\\<rbrakk>\n    \\<Longrightarrow> f (LEAST j.\n                            f j \\<in> f ` {i. i \\<le> n} \\<and>\n                            f j \\<noteq> f 0) \\<noteq>\n                      f 0", "apply (frule im_d_gchainTr1[of \"n\" \"f\" \"n\"],\n       simp add:image_def, cut_tac n_in_Nsetn[of \"n\"], blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; f n \\<noteq> f 0;\n     (LEAST j. f j \\<in> f ` {i. i \\<le> n} \\<and> f j \\<noteq> f 0)\n     \\<le> n;\n     f (LEAST j. f j \\<in> f ` {i. i \\<le> n} - {f 0})\n     \\<in> f ` {i. i \\<le> n} - {f 0}\\<rbrakk>\n    \\<Longrightarrow> f (LEAST j.\n                            f j \\<in> f ` {i. i \\<le> n} \\<and>\n                            f j \\<noteq> f 0) \\<noteq>\n                      f 0", "apply (simp add:image_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_d_gchainTr2:\"\\<lbrakk>d_gchain G n f; j \\<le> n; f j \\<noteq> f 0\\<rbrakk> \\<Longrightarrow>\n                                 \\<forall>i \\<le> n. f 0 = f i \\<longrightarrow> \\<not> j \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; j \\<le> n; f j \\<noteq> f 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n.\n                         f 0 = f i \\<longrightarrow> \\<not> j \\<le> i", "apply (case_tac \"n = 0\", simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; j \\<le> n; f j \\<noteq> f 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n.\n                         f 0 = f i \\<longrightarrow> \\<not> j \\<le> i", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f; j \\<le> n; f j \\<noteq> f 0; 0 < n;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f 0 = f i \\<longrightarrow> \\<not> j \\<le> i", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f; f j \\<noteq> f i; 0 < n; i \\<le> n;\n        f 0 = f i \\<and> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> False", "apply (case_tac \"j = i\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f; f j \\<noteq> f i; 0 < n; i \\<le> n;\n        f 0 = f i \\<and> j \\<le> i; j \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule d_gchainTr2 [of \"n\" \"f\" \"0\" \"j\"], assumption+,\n       simp, (erule conjE)+,\n       rule_tac i = j and j = i and k = n in le_trans, assumption+,\n       simp,\n       (erule conjE)+,\n       frule_tac l = j and j = i in d_gchainTr2 [of \"n\" \"f\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>d_gchain G n f; f j \\<noteq> f i; 0 < n; i \\<le> n;\n        j \\<noteq> i; f j \\<subseteq> f 0; f 0 = f i; j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 2. \\<And>i.\n       \\<lbrakk>d_gchain G n f; f j \\<noteq> f i; 0 < n; i \\<le> n;\n        j \\<noteq> i; f j \\<subseteq> f 0; f 0 = f i; j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 3. \\<And>i.\n       \\<lbrakk>d_gchain G n f; f j \\<noteq> f i; 0 < n; i \\<le> n;\n        j \\<noteq> i; f j \\<subseteq> f 0; f 0 = f i; j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> j \\<le> i\n 4. \\<And>i.\n       \\<lbrakk>d_gchain G n f; f j \\<noteq> f i; 0 < n; i \\<le> n;\n        j \\<noteq> i; f j \\<subseteq> f 0; f 0 = f i; j \\<le> i;\n        f i \\<subseteq> f j\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) D_gchain_pre:\"\\<lbrakk>D_gchain G (Suc n) f\\<rbrakk> \\<Longrightarrow> D_gchain G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D_gchain G (Suc n) f \\<Longrightarrow> D_gchain G n f", "apply (simp add:D_gchain_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. f (Suc l) \\<subset> f l\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow>\n                       G \\<guillemotright> f 0 ) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)", "apply (case_tac \"n = 0\", rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. f (Suc l) \\<subset> f l\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow>\n                       G \\<guillemotright> f 0 ) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)\n 2. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. f (Suc l) \\<subset> f l; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow>\n                       G \\<guillemotright> f 0 ) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)", "apply (simp, insert lessI [of \"0::nat\"], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; d_gchain G (Suc 0) f; f (Suc 0) \\<subset> f 0\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f 0 \n 2. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. f (Suc l) \\<subset> f l; n \\<noteq> 0;\n     0 < Suc 0\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow>\n                       G \\<guillemotright> f 0 ) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)", "apply (simp add:d_gchain_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. f (Suc l) \\<subset> f l; 0 < n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (frule d_gchain_pre [of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. f (Suc l) \\<subset> f l; 0 < n;\n     d_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) D_gchain0:\"\\<lbrakk>D_gchain G n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk> \\<Longrightarrow>\n                             f j \\<subset> f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>D_gchain G n f; i \\<le> n; j \\<le> n; i < j; n = 0\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i\n 2. \\<lbrakk>D_gchain G n f; i \\<le> n; j \\<le> n; i < j;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (cut_tac d_gchainTr1[of \"n\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; j \\<le> n; i < j;\n     \\<forall>f.\n        d_gchain G n f \\<longrightarrow>\n        (\\<forall>l\\<le>n.\n            \\<forall>j\\<le>n.\n               l < j \\<longrightarrow> f j \\<subseteq> f l)\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (simp add:D_gchain_def, frule conjunct1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f \\<and>\n             (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     j \\<le> n; i < j;\n     \\<forall>f.\n        d_gchain G n f \\<longrightarrow>\n        (\\<forall>l\\<le>n.\n            \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l);\n     d_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (frule_tac a = f in forall_spec, assumption,\n        thin_tac \"\\<forall>f. d_gchain G n f \\<longrightarrow> (\\<forall>l\\<le>n. \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f \\<and>\n             (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     j \\<le> n; i < j; d_gchain G n f;\n     \\<forall>l\\<le>n.\n        \\<forall>j\\<le>n.\n           l < j \\<longrightarrow> f j \\<subseteq> f l\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (frule_tac a = i in forall_spec,\n        frule_tac x = i and y = j and z = n in less_le_trans, assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f \\<and>\n             (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     j \\<le> n; i < j; d_gchain G n f;\n     \\<forall>l\\<le>n.\n        \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l;\n     \\<forall>j\\<le>n. i < j \\<longrightarrow> f j \\<subseteq> f i\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply ( thin_tac \"\\<forall>l\\<le>n. \\<forall>j\\<le>n. l < j \\<longrightarrow> f j \\<subseteq> f l\",\n        frule_tac a = j in forall_spec, assumption, \n        thin_tac \"\\<forall>j\\<le>n. i < j \\<longrightarrow> f j \\<subseteq> f i\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l; j \\<le> n;\n     i < j; d_gchain G n f; f j \\<subseteq> f i\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (frule Suc_leI[of i j],\n       frule less_le_trans[of i j n], assumption+,\n       frule less_le_diff[of i n])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l; j \\<le> n;\n     i < j; d_gchain G n f; f j \\<subseteq> f i; Suc i \\<le> j; i < n;\n     i \\<le> n - Suc 0\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (frule_tac a = i in forall_spec, assumption,\n       thin_tac \"\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i", "apply (cut_tac d_gchainTr2[of \"n\" \"f\" \"Suc i\" \"j\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0; f (Suc i) \\<subset> f i;\n     f j \\<subseteq> f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> f j \\<subset> f i\n 2. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> 0 < n\n 3. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 4. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> Suc i \\<le> n\n 5. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 6. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> Suc i \\<le> j", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> 0 < n\n 2. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 3. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> Suc i \\<le> n\n 4. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 5. \\<lbrakk>j \\<le> n; i < j; d_gchain G n f; f j \\<subseteq> f i;\n     Suc i \\<le> j; i < n; i \\<le> n - Suc 0;\n     f (Suc i) \\<subset> f i\\<rbrakk>\n    \\<Longrightarrow> Suc i \\<le> j", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) D_gchain1:\"D_gchain G n f \\<Longrightarrow> inj_on f {i. i \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D_gchain G n f \\<Longrightarrow> inj_on f {i. i \\<le> n}", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>D_gchain G n f; n = 0\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n}\n 2. \\<lbrakk>D_gchain G n f; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n}", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n}", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; 0 < n\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n}", "(** case 0 < n **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; 0 < n\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n}", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; 0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<le>n.\n                         \\<forall>y\\<le>n. f x = f y \\<longrightarrow> x = y", "apply ((rule allI)+, rule impI, rule contrapos_pp, simp+, erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>D_gchain G n f; 0 < n; x \\<le> n;\n        y \\<le> n \\<and> f x = f y \\<and> x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac x = x and y = y in less_linear, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>D_gchain G n f; x \\<le> n;\n        y \\<le> n \\<and> f x = f y \\<and> x \\<noteq> y;\n        x < y \\<or> y < x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule disjE, (erule conjE)+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>D_gchain G n f; x \\<le> n; x < y; y \\<le> n; f x = f y;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>D_gchain G n f; x \\<le> n;\n        y \\<le> n \\<and> f x = f y \\<and> x \\<noteq> y; y < x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac i = x and j = y in D_gchain0 [of \"n\" \"f\"], assumption+,\n        simp,\n        simp, frule_tac i = y and j = x in D_gchain0 [of \"n\" \"f\"],\n        simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) card_im_D_gchain:\"\\<lbrakk>0 < n; D_gchain G n f\\<rbrakk> \n                                   \\<Longrightarrow> card (f `{i. i \\<le> n}) = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; D_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> n}) = Suc n", "apply (frule D_gchain1 [of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; D_gchain G n f; inj_on f {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> n}) = Suc n", "apply (subst card_image, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) w_cmpser_gr:\"\\<lbrakk>0 < r; w_cmpser G r f; i \\<le> r\\<rbrakk>\n                             \\<Longrightarrow> G \\<guillemotright>  (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; w_cmpser G r f; i \\<le> r\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "by (simp add:w_cmpser_def, erule conjE, simp add:d_gchain_def)"], ["", "lemma (in Group) w_cmpser_ns:\"\\<lbrakk>0 < r; w_cmpser G r f; i \\<le> (r - 1)\\<rbrakk> \\<Longrightarrow>\n                                 (Gp G (f i)) \\<triangleright> (f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; w_cmpser G r f; i \\<le> r - 1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) w_cmpser_pre:\"w_cmpser G (Suc n) f \\<Longrightarrow> w_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w_cmpser G (Suc n) f \\<Longrightarrow> w_cmpser G n f", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G (Suc n) f \\<and>\n    (\\<forall>l\\<le>n.\n        \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    (n = 0 \\<longrightarrow> d_gchain G 0 f) \\<and>\n    (0 < n \\<longrightarrow> d_gchain G n f)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow> d_gchain G 0 f) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)", "apply (case_tac \"n = 0\", rotate_tac -1, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; d_gchain G (Suc 0) f;\n     \\<natural>f 0 \\<triangleright> f (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> d_gchain G 0 f\n 2. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l);\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow> d_gchain G 0 f) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)", "apply (rule d_gchain_pre [of \"0\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l);\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow> d_gchain G 0 f) \\<and>\n                      (0 < n \\<longrightarrow> d_gchain G n f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l);\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (frule d_gchain_pre [of \"n\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l); 0 < n;\n     d_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) W_cmpser_pre:\"W_cmpser G (Suc n) f \\<Longrightarrow> W_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W_cmpser G (Suc n) f \\<Longrightarrow> W_cmpser G n f", "apply (simp add:W_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. D_gchain G (Suc n) f \\<and>\n    (\\<forall>l\\<le>n.\n        \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    (n = 0 \\<longrightarrow> d_gchain G 0 f) \\<and>\n    (0 < n \\<longrightarrow> D_gchain G n f)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> (n = 0 \\<longrightarrow> d_gchain G 0 f) \\<and>\n                      (0 < n \\<longrightarrow> D_gchain G n f)", "apply (case_tac \"n = 0\", simp,\n        simp add:D_gchain_def, erule conjE,\n        rule d_gchain_pre, assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G (Suc n) f;\n     \\<forall>l\\<le>n. \\<natural>f l \\<triangleright> f (Suc l);\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f", "apply (frule D_gchain_pre, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) td_gchain_n:\"\\<lbrakk>td_gchain G n f; carrier G \\<noteq> {\\<one>}\\<rbrakk> \\<Longrightarrow> 0 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>td_gchain G n f; carrier G \\<noteq> {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> 0 < n", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then f 0 = carrier G \\<and> f 0 = {\\<one>}\n             else d_gchain G n f \\<and>\n                  f 0 = carrier G \\<and> f n = {\\<one>};\n     carrier G \\<noteq> {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> 0 < n", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f 0 = carrier G \\<and> f 0 = {\\<one>};\n     carrier G \\<noteq> {\\<one>}; n = 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule conjE, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Existence of reduced chain\""], ["", "lemma (in Group) D_gchain_is_d_gchain:\"D_gchain G n f \\<Longrightarrow> d_gchain G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D_gchain G n f \\<Longrightarrow> d_gchain G n f", "apply (simp add:D_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. if n = 0 then G \\<guillemotright> f 0 \n    else d_gchain G n f \\<and>\n         (\\<forall>l\\<le>n - Suc 0.\n             f (Suc l) \\<subset> f l) \\<Longrightarrow>\n    d_gchain G n f", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if n = 0 then G \\<guillemotright> f 0 \n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 2. \\<lbrakk>if n = 0 then G \\<guillemotright> f 0 \n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0;\n     if n = 0 then G \\<guillemotright> f 0 \n     else d_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l)\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 2. \\<lbrakk>if n = 0 then G \\<guillemotright> f 0 \n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (simp add:d_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then G \\<guillemotright> f 0 \n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l);\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0;\n     if n = 0 then G \\<guillemotright> f 0 \n     else d_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - Suc 0. f (Suc l) \\<subset> f l)\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_d_gchains:\"\\<lbrakk>d_gchain G n f; d_gchain G m g; \n  g 0 \\<subseteq> f n \\<rbrakk> \\<Longrightarrow>  d_gchain G (Suc (n + m)) (jointfun n f m g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (case_tac \"m = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; n = 0;\n     m = 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; n = 0;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:d_gchain_def [of \"G\" \"Suc (n + m)\" _])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>d_gchain G 0 f; d_gchain G 0 g; g 0 \\<subseteq> f 0; n = 0;\n     m = 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc 0) (jointfun 0 f 0 g)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; n = 0;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:jointfun_def sliden_def d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; n = 0;\n     m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:jointfun_def sliden_def d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<guillemotright> f 0 ;\n     \\<forall>l\\<le>m.\n        G \\<guillemotright> g l  \\<and>\n        (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n     g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l.\n                         (l = 0 \\<longrightarrow>\n                          (\\<forall>l>0.\n                              l \\<le> m \\<longrightarrow>\n                              g l \\<subseteq> g (l - Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          l \\<le> Suc m \\<longrightarrow>\n                          (\\<forall>l>0.\n                              l \\<le> m \\<longrightarrow>\n                              g l \\<subseteq> g (l - Suc 0)))\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> (l = 0 \\<longrightarrow>\n                          (\\<forall>l>0.\n                              l \\<le> m \\<longrightarrow>\n                              g l \\<subseteq> g (l - Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          l \\<le> Suc m \\<longrightarrow>\n                          (\\<forall>l>0.\n                              l \\<le> m \\<longrightarrow>\n                              g l \\<subseteq> g (l - Suc 0)))\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> l = 0 \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 2. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; l = 0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l>0.\n                            l \\<le> m \\<longrightarrow>\n                            g l \\<subseteq> g (l - Suc 0)\n 2. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule allI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; l = 0\\<rbrakk>\n       \\<Longrightarrow> 0 < la \\<longrightarrow>\n                         la \\<le> m \\<longrightarrow>\n                         g la \\<subseteq> g (la - Suc 0)\n 2. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule impI)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; l = 0; 0 < la;\n        la \\<le> m\\<rbrakk>\n       \\<Longrightarrow> g la \\<subseteq> g (la - Suc 0)\n 2. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; l = 0; 0 < la; la \\<le> m\\<rbrakk>\n       \\<Longrightarrow> g la \\<subseteq> g (la - Suc 0)\n 2. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (frule_tac a = la in forall_spec, assumption,\n        thin_tac \"\\<forall>l\\<le>m. G \\<guillemotright> g l  \\<and> (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l)\",\n        erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ; g 0 \\<subseteq> f 0; n = 0; l = 0;\n        0 < la; la \\<le> m; G \\<guillemotright> g la ;\n        \\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l\\<rbrakk>\n       \\<Longrightarrow> g la \\<subseteq> g (la - Suc 0)\n 2. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 3. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (frule_tac a = \"la - Suc 0\" in forall_spec,\n        thin_tac \"\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l\",\n        rule diff_le_mono, assumption, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m\\<rbrakk>\n       \\<Longrightarrow> 0 < l \\<longrightarrow>\n                         l \\<le> Suc m \\<longrightarrow>\n                         (\\<forall>l>0.\n                             l \\<le> m \\<longrightarrow>\n                             g l \\<subseteq> g (l - Suc 0))\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule impI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; 0 < l; l \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l>0.\n                            l \\<le> m \\<longrightarrow>\n                            g l \\<subseteq> g (l - Suc 0)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (frule_tac m = l and n = \"Suc m\" and l = \"Suc 0\" in diff_le_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; 0 < l; l \\<le> Suc m;\n        l - Suc 0 \\<le> Suc m - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l>0.\n                            l \\<le> m \\<longrightarrow>\n                            g l \\<subseteq> g (l - Suc 0)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; 0 < l; l \\<le> Suc m;\n        l - Suc 0 \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l>0.\n                            l \\<le> m \\<longrightarrow>\n                            g l \\<subseteq> g (l - Suc 0)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (rule allI, rule impI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f 0; n = 0; 0 < m; 0 < l; l \\<le> Suc m;\n        l - Suc 0 \\<le> m; 0 < la; la \\<le> m\\<rbrakk>\n       \\<Longrightarrow> g la \\<subseteq> g (la - Suc 0)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (frule_tac a = la in forall_spec,assumption,\n              thin_tac \"\\<forall>l\\<le>m. G \\<guillemotright> g l  \\<and> (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l)\",\n              erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ; g 0 \\<subseteq> f 0; n = 0; 0 < m;\n        0 < l; l \\<le> Suc m; l - Suc 0 \\<le> m; 0 < la; la \\<le> m;\n        G \\<guillemotright> g la ;\n        \\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l\\<rbrakk>\n       \\<Longrightarrow> g la \\<subseteq> g (la - Suc 0)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (frule_tac a = \"la - Suc 0\" in forall_spec, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>G \\<guillemotright> f 0 ; g 0 \\<subseteq> f 0; n = 0; 0 < m;\n        0 < l; l \\<le> Suc m; l - Suc 0 \\<le> m; 0 < la; la \\<le> m;\n        G \\<guillemotright> g la ;\n        \\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l;\n        g (Suc (la - Suc 0)) \\<subseteq> g (la - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> g la \\<subseteq> g (la - Suc 0)\n 2. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:d_gchain_def [of \"G\" _ \"jointfun n f m g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>Suc (n + m).\n                         G \\<guillemotright> jointfun n f m g l  \\<and>\n                         (\\<forall>l\\<le>n + m.\n                             jointfun n f m g (Suc l)\n                             \\<subseteq> jointfun n f m g l)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m)\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> jointfun n f m g l  \\<and>\n                         (\\<forall>l\\<le>n + m.\n                             jointfun n f m g (Suc l)\n                             \\<subseteq> jointfun n f m g l)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m)\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> jointfun n f m g l \n 2. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                            jointfun n f m g (Suc l)\n                            \\<subseteq> jointfun n f m g l", "apply (case_tac \"l \\<le> n\", simp add:jointfun_def d_gchain_def[of _ n f])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); \\<not> l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> jointfun n f m g l \n 2. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                            jointfun n f m g (Suc l)\n                            \\<subseteq> jointfun n f m g l", "apply (simp add:jointfun_def sliden_def,\n        frule_tac m = l and n = \"Suc (n + m)\" and l = \"Suc n\" in diff_le_mono,\n        thin_tac \"l \\<le> Suc (n + m)\", simp add:d_gchain_def[of _ m g])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>d_gchain G n f;\n        if m = 0 then G \\<guillemotright> g 0 \n        else \\<forall>l\\<le>m.\n                G \\<guillemotright> g l  \\<and>\n                (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f n; 0 < n; \\<not> l \\<le> n;\n        l - Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> g (l - Suc n) \n 2. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                            jointfun n f m g (Suc l)\n                            \\<subseteq> jointfun n f m g l", "apply (case_tac \"m = 0\", simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                            jointfun n f m g (Suc l)\n                            \\<subseteq> jointfun n f m g l", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc la)\n                         \\<subseteq> jointfun n f m g la", "apply (case_tac \"Suc la \\<le> n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; Suc la \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc la)\n                         \\<subseteq> jointfun n f m g la\n 2. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; \\<not> Suc la \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc la)\n                         \\<subseteq> jointfun n f m g la", "apply (simp add:jointfun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n;\n        l \\<le> Suc (n + m); Suc la \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f (Suc la) \\<subseteq> f la\n 2. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; \\<not> Suc la \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc la)\n                         \\<subseteq> jointfun n f m g la", "apply (rule_tac l = la and j = \"Suc la\" in d_gchainTr2[of n f],\n        simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; \\<not> Suc la \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc la)\n                         \\<subseteq> jointfun n f m g la", "apply (simp add:jointfun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; \\<not> Suc la \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (la \\<le> n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc la))\n                          \\<subseteq> f la) \\<and>\n                         (\\<not> la \\<le> n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc la))\n                          \\<subseteq> g (sliden (Suc n) la))", "apply (cut_tac y = \"Suc la\" and x = n in not_less [symmetric], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; n < Suc la\\<rbrakk>\n       \\<Longrightarrow> (la \\<le> n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc la))\n                          \\<subseteq> f la) \\<and>\n                         (\\<not> la \\<le> n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc la))\n                          \\<subseteq> g (sliden (Suc n) la))", "apply (frule_tac m = n and n = \"Suc la\" in Suc_leI,\n        thin_tac \"n < Suc la\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; n \\<le> la\\<rbrakk>\n       \\<Longrightarrow> (la = n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc n)) \\<subseteq> f n) \\<and>\n                         (la \\<noteq> n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc la))\n                          \\<subseteq> g (sliden (Suc n) la))", "apply (case_tac \"la = n\", simp add:sliden_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; n \\<le> la;\n        la \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> (la = n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc n)) \\<subseteq> f n) \\<and>\n                         (la \\<noteq> n \\<longrightarrow>\n                          g (sliden (Suc n) (Suc la))\n                          \\<subseteq> g (sliden (Suc n) la))", "apply (frule not_sym, thin_tac \"la \\<noteq> n\", \n       frule_tac x = n and y = la in le_imp_less_or_eq, \n       thin_tac \"n \\<le> la\", simp,\n       frule_tac m = n and n = la in Suc_leI, simp add:sliden_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; d_gchain G m g; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; Suc n \\<le> la\\<rbrakk>\n       \\<Longrightarrow> g (la - n) \\<subseteq> g (la - Suc n)", "apply (simp add:d_gchain_def[of _ m g])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f n; 0 < n; l \\<le> Suc (n + m); la \\<le> n + m;\n        Suc n \\<le> la\\<rbrakk>\n       \\<Longrightarrow> g (la - n) \\<subseteq> g (la - Suc n)", "apply (cut_tac m = la and n = \"n + m\" and l = \"Suc n\" in diff_le_mono,\n         assumption, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f;\n        \\<forall>l\\<le>m.\n           G \\<guillemotright> g l  \\<and>\n           (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l);\n        g 0 \\<subseteq> f n; 0 < n; l \\<le> Suc (n + m); la \\<le> n + m;\n        Suc n \\<le> la; la - Suc n \\<le> m - Suc 0\\<rbrakk>\n       \\<Longrightarrow> g (la - n) \\<subseteq> g (la - Suc n)", "apply (frule_tac a = m in forall_spec, simp,\n        thin_tac \"\\<forall>l\\<le>m. G \\<guillemotright> g l  \\<and> (\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l)\",\n        erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; Suc n \\<le> la;\n        la - Suc n \\<le> m - Suc 0; G \\<guillemotright> g m ;\n        \\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l\\<rbrakk>\n       \\<Longrightarrow> g (la - n) \\<subseteq> g (la - Suc n)", "apply (\n        frule_tac a = \"la - Suc n\" in forall_spec, assumption,\n        thin_tac \"\\<forall>l\\<le>m - Suc 0. g (Suc l) \\<subseteq> g l\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l la.\n       \\<lbrakk>d_gchain G n f; g 0 \\<subseteq> f n; 0 < n;\n        l \\<le> Suc (n + m); la \\<le> n + m; Suc n \\<le> la;\n        la - Suc n \\<le> m - Suc 0; G \\<guillemotright> g m ;\n        g (Suc (la - Suc n)) \\<subseteq> g (la - Suc n)\\<rbrakk>\n       \\<Longrightarrow> g (la - n) \\<subseteq> g (la - Suc n)", "apply (cut_tac n1 = n and i1 = la  in jointgd_tool4[THEN sym], simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_D_gchains:\"\\<lbrakk>D_gchain G n f; D_gchain G m g; \n       g 0 \\<subset> f n \\<rbrakk> \\<Longrightarrow>  D_gchain G (Suc (n + m)) (jointfun n f m g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:D_gchain_def [of \"G\" \"Suc (n + m)\" _])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g) \\<and>\n                      (\\<forall>l\\<le>n + m.\n                          jointfun n f m g (Suc l)\n                          \\<subset> jointfun n f m g l)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 2. \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (rule joint_d_gchains[of n f m g],\n       simp add:D_gchain_is_d_gchain,\n       simp add:D_gchain_is_d_gchain,\n       simp add:psubset_imp_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (case_tac \"Suc l \\<le> n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l\n 2. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; \\<not> Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (simp add:jointfun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f (Suc l) \\<subset> f l\n 2. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; \\<not> Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (rule_tac i = l and j = \"Suc l\" in D_gchain0[of n f], assumption,\n        cut_tac x = l and y = \"Suc l\" and z = n in less_le_trans)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> l < Suc l\n 2. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Suc l \\<le> n\n 3. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        Suc l \\<le> n; l < n\\<rbrakk>\n       \\<Longrightarrow> l \\<le> n\n 4. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Suc l \\<le> n\n 5. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> l < Suc l\n 6. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; \\<not> Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; \\<not> Suc l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (simp add:nat_not_le_less,\n        frule_tac m = n and n = \"Suc l\" in Suc_leI, thin_tac \"n < Suc l\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n \\<le> l\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (case_tac \"l = n\", simp add:jointfun_def sliden_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n \\<le> l; l \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (frule not_sym, thin_tac \"l \\<noteq> n\",\n        frule_tac x = n and y = l in le_imp_less_or_eq,\n        thin_tac \"n \\<le> l\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l\\<rbrakk>\n       \\<Longrightarrow> jointfun n f m g (Suc l)\n                         \\<subset> jointfun n f m g l", "apply (simp add:jointfun_def sliden_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l\\<rbrakk>\n       \\<Longrightarrow> g (l - n) \\<subset> g (l - Suc n)", "apply (frule_tac m = l and n = \"n + m\" and l = n in  diff_le_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l; l - n \\<le> n + m - n\\<rbrakk>\n       \\<Longrightarrow> g (l - n) \\<subset> g (l - Suc n)", "apply (simp add:diff_add_assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l; l - n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> g (l - n) \\<subset> g (l - Suc n)", "apply (rule_tac i = \"l - Suc n\" and j = \"l - n\" in D_gchain0[of m g],\n         assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l; l - n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> l - Suc n \\<le> m\n 2. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l; l - n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> l - n \\<le> m\n 3. \\<And>l.\n       \\<lbrakk>D_gchain G n f; D_gchain G m g; g 0 \\<subset> f n;\n        l \\<le> n + m; n < l; l - n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> l - Suc n < l - n", "apply (arith, assumption, arith)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) w_cmpser_is_d_gchain:\"w_cmpser G n f \\<Longrightarrow> d_gchain G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w_cmpser G n f \\<Longrightarrow> d_gchain G n f", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. if n = 0 then d_gchain G n f\n    else d_gchain G n f \\<and>\n         (\\<forall>l\\<le>n - 1.\n             \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    d_gchain G n f", "apply (case_tac \"n=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if n = 0 then d_gchain G n f\n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 2. \\<lbrakk>if n = 0 then d_gchain G n f\n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0;\n     if n = 0 then d_gchain G n f\n     else d_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f\n 2. \\<lbrakk>if n = 0 then d_gchain G n f\n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then d_gchain G n f\n             else d_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0;\n     if n = 0 then d_gchain G n f\n     else d_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> d_gchain G n f", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_w_cmpser:\"\\<lbrakk>w_cmpser G n f; w_cmpser G m g; \n Gp G (f n) \\<triangleright> (g 0)\\<rbrakk> \\<Longrightarrow> w_cmpser G (Suc (n + m)) (jointfun n f m g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:w_cmpser_def [of _ \"Suc (n + m)\" _])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g) \\<and>\n                      (\\<forall>l\\<le>n + m.\n                          \\<natural>jointfun n f m g\n                                     l \\<triangleright> jointfun n f m g\n                   (Suc l))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 2. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule w_cmpser_is_d_gchain[of \"n\" \"f\"],\n        frule w_cmpser_is_d_gchain[of \"m\" \"g\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; d_gchain G n f;\n     d_gchain G m g\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (n + m)) (jointfun n f m g)\n 2. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (rule joint_d_gchains, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; d_gchain G n f;\n     d_gchain G m g\\<rbrakk>\n    \\<Longrightarrow> g 0 \\<subseteq> f n\n 2. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule d_gchain_mem_sg[of \"n\" \"f\"],\n         cut_tac n_in_Nsetn[of \"n\"],\n         frule_tac a = n in forall_spec, simp,\n         thin_tac \"\\<forall>i \\<le> n. G \\<guillemotright> f i\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; d_gchain G n f; d_gchain G m g;\n     n \\<in> {i. i \\<le> n}; G \\<guillemotright> f n \\<rbrakk>\n    \\<Longrightarrow> g 0 \\<subseteq> f n\n 2. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule Group_Gp[of \"f n\"],\n         frule Group.nsg_sg[of \"Gp G (f n)\" \"g 0\"], assumption,\n         frule Group.sg_subset[of \"Gp G (f n)\" \"g 0\"], assumption,\n         simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; n = 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun 0 f m g\n                                    l \\<triangleright> jointfun 0 f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:jointfun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0\\<rbrakk>\n       \\<Longrightarrow> (l = 0 \\<longrightarrow>\n                          \\<natural>f 0 \\<triangleright> g\n                    (sliden (Suc 0) (Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          \\<natural>g (sliden (Suc 0)\n  l) \\<triangleright> g (sliden (Suc 0) (Suc l)))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (case_tac \"l = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0; l = 0\\<rbrakk>\n       \\<Longrightarrow> (l = 0 \\<longrightarrow>\n                          \\<natural>f 0 \\<triangleright> g\n                    (sliden (Suc 0) (Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          \\<natural>g (sliden (Suc 0)\n  l) \\<triangleright> g (sliden (Suc 0) (Suc l)))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0;\n        l \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (l = 0 \\<longrightarrow>\n                          \\<natural>f 0 \\<triangleright> g\n                    (sliden (Suc 0) (Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          \\<natural>g (sliden (Suc 0)\n  l) \\<triangleright> g (sliden (Suc 0) (Suc l)))\n 3. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; n = 0; l = 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f 0 \\<triangleright> g\n                   (sliden (Suc 0) (Suc 0))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0;\n        l \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (l = 0 \\<longrightarrow>\n                          \\<natural>f 0 \\<triangleright> g\n                    (sliden (Suc 0) (Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          \\<natural>g (sliden (Suc 0)\n  l) \\<triangleright> g (sliden (Suc 0) (Suc l)))\n 3. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:sliden_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0;\n        l \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> (l = 0 \\<longrightarrow>\n                          \\<natural>f 0 \\<triangleright> g\n                    (sliden (Suc 0) (Suc 0))) \\<and>\n                         (0 < l \\<longrightarrow>\n                          \\<natural>g (sliden (Suc 0)\n  l) \\<triangleright> g (sliden (Suc 0) (Suc l)))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; w_cmpser G m g;\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0; 0 < l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc 0)\n l) \\<triangleright> g (sliden (Suc 0) (Suc l))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:w_cmpser_def [of _ \"m\" \"g\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f;\n        d_gchain G m g \\<and>\n        (\\<forall>l\\<le>m - Suc 0.\n            \\<natural>g l \\<triangleright> g (Suc l));\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0; 0 < l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc 0)\n l) \\<triangleright> g (sliden (Suc 0) (Suc l))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (case_tac \"m = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f;\n        d_gchain G m g \\<and>\n        (\\<forall>l\\<le>m - Suc 0.\n            \\<natural>g l \\<triangleright> g (Suc l));\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0; 0 < l;\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc 0)\n l) \\<triangleright> g (sliden (Suc 0) (Suc l))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f;\n        d_gchain G m g \\<and>\n        (\\<forall>l\\<le>m - Suc 0.\n            \\<natural>g l \\<triangleright> g (Suc l));\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0; 0 < l;\n        m \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc 0)\n l) \\<triangleright> g (sliden (Suc 0) (Suc l))\n 3. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:sliden_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f;\n        d_gchain G m g \\<and>\n        (\\<forall>l\\<le>m - Suc 0.\n            \\<natural>g l \\<triangleright> g (Suc l));\n        \\<natural>f 0 \\<triangleright> g 0; l \\<le> m; n = 0; 0 < l;\n        m \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc 0)\n l) \\<triangleright> g (sliden (Suc 0) (Suc l))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; \\<natural>f 0 \\<triangleright> g 0;\n        l \\<le> m; n = 0; 0 < l; m \\<noteq> 0; d_gchain G m g;\n        \\<forall>l\\<le>m - Suc 0.\n           \\<natural>g l \\<triangleright> g (Suc l)\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc 0)\n l) \\<triangleright> g (sliden (Suc 0) (Suc l))\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:sliden_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; \\<natural>f 0 \\<triangleright> g 0;\n        l \\<le> m; n = 0; 0 < l; d_gchain G m g;\n        \\<forall>l\\<le>m - Suc 0.\n           \\<natural>g l \\<triangleright> g (Suc l)\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (l - Suc 0) \\<triangleright> g l\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac x = 0 and y = l and z = m in less_le_trans, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; \\<natural>f 0 \\<triangleright> g 0;\n        l \\<le> m; n = 0; 0 < l; d_gchain G m g;\n        \\<forall>l\\<le>m - Suc 0. \\<natural>g l \\<triangleright> g (Suc l);\n        0 < m\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (l - Suc 0) \\<triangleright> g l\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac m = l and n = m and l = \"Suc 0\" in diff_le_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; \\<natural>f 0 \\<triangleright> g 0;\n        l \\<le> m; n = 0; 0 < l; d_gchain G m g;\n        \\<forall>l\\<le>m - Suc 0. \\<natural>g l \\<triangleright> g (Suc l);\n        0 < m; l - Suc 0 \\<le> m - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (l - Suc 0) \\<triangleright> g l\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac a = \"l - Suc 0\" in forall_spec, assumption,\n        thin_tac \"\\<forall>l\\<le>(m - Suc 0). (\\<natural>(g l)) \\<triangleright> (g (Suc l))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G 0 f; \\<natural>f 0 \\<triangleright> g 0;\n        l \\<le> m; n = 0; 0 < l; d_gchain G m g; 0 < m;\n        l - Suc 0 \\<le> m - Suc 0;\n        \\<natural>g (l -\n                     Suc 0) \\<triangleright> g (Suc (l - Suc 0))\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (l - Suc 0) \\<triangleright> g l\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (case_tac \"l \\<le> n - Suc 0\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        l \\<le> n - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; n \\<noteq> 0;\n        \\<not> l \\<le> n - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule less_pre_n [of \"n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        l \\<le> n - Suc 0; n - Suc 0 < n\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; n \\<noteq> 0;\n        \\<not> l \\<le> n - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac x = l in le_less_trans[of _ \"n - Suc 0\" \"n\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        l \\<le> n - Suc 0; n - Suc 0 < n; l < n\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; n \\<noteq> 0;\n        \\<not> l \\<le> n - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:jointfun_def w_cmpser_def [of _ \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; n \\<noteq> 0;\n        \\<not> l \\<le> n - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:nat_not_le_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        n - Suc 0 < l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac n = l in Suc_leI [of \"n - Suc 0\" _], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        n \\<le> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (case_tac \"n = l\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n = l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n = l; l = n\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (thin_tac \"n = l\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        l = n\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; 0 < n; l = n\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    n \\<triangleright> jointfun n f m g\n                  (Suc n)\n 2. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:jointfun_def sliden_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac m = n and n = l in noteq_le_less, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l; n < l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule_tac m = n and n = l in Suc_leI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n; n \\<le> l;\n        n \\<noteq> l; n < l; Suc n \\<le> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:jointfun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        Suc n \\<le> l\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc n)\n l) \\<triangleright> g (sliden (Suc n) (Suc l))", "apply (frule_tac m = l and n = \"n + m\" and l = \"Suc n\" in diff_le_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        Suc n \\<le> l; l - Suc n \\<le> n + m - Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc n)\n l) \\<triangleright> g (sliden (Suc n) (Suc l))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; w_cmpser G m g;\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        Suc n \\<le> l; l - Suc n \\<le> m - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (sliden (Suc n)\n l) \\<triangleright> g (sliden (Suc n) (Suc l))", "apply (simp add:sliden_def w_cmpser_def [of _ \"m\" _])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f;\n        d_gchain G m g \\<and>\n        (\\<forall>l\\<le>m - Suc 0.\n            \\<natural>g l \\<triangleright> g (Suc l));\n        \\<natural>f n \\<triangleright> g 0; l \\<le> n + m; 0 < n;\n        Suc n \\<le> l; l - Suc n \\<le> m - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (l - Suc n) \\<triangleright> g (l - n)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>w_cmpser G n f; \\<natural>f n \\<triangleright> g 0;\n        l \\<le> n + m; 0 < n; Suc n \\<le> l; l - Suc n \\<le> m - Suc 0;\n        d_gchain G m g;\n        \\<forall>l\\<le>m - Suc 0.\n           \\<natural>g l \\<triangleright> g (Suc l)\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (l - Suc n) \\<triangleright> g (l - n)", "apply (simp add:jointgd_tool4)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) W_cmpser_is_D_gchain:\"W_cmpser G n f \\<Longrightarrow> D_gchain G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W_cmpser G n f \\<Longrightarrow> D_gchain G n f", "apply (simp add:W_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. if n = 0 then d_gchain G 0 f\n    else D_gchain G n f \\<and>\n         (\\<forall>l\\<le>n - 1.\n             \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    D_gchain G n f", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f\n 2. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0;\n     if n = 0 then d_gchain G 0 f\n     else D_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f\n 2. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; d_gchain G 0 f\\<rbrakk> \\<Longrightarrow> D_gchain G 0 f\n 2. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f", "apply (simp add:D_gchain_def d_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0;\n     if n = 0 then d_gchain G 0 f\n     else D_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> D_gchain G n f", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) W_cmpser_is_w_cmpser:\"W_cmpser G n f \\<Longrightarrow> w_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W_cmpser G n f \\<Longrightarrow> w_cmpser G n f", "apply (simp add:W_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. if n = 0 then d_gchain G 0 f\n    else D_gchain G n f \\<and>\n         (\\<forall>l\\<le>n - 1.\n             \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    w_cmpser G n f", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f\n 2. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0;\n     if n = 0 then d_gchain G 0 f\n     else D_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f\n 2. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; d_gchain G 0 f\\<rbrakk> \\<Longrightarrow> w_cmpser G 0 f\n 2. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then d_gchain G 0 f\n             else D_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0;\n     if n = 0 then d_gchain G 0 f\n     else D_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     D_gchain G n f \\<and>\n     (\\<forall>l\\<le>n - Suc 0.\n         \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; D_gchain G n f;\n     \\<forall>l\\<le>n - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (frule D_gchain_is_d_gchain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; D_gchain G n f;\n     \\<forall>l\\<le>n - Suc 0. \\<natural>f l \\<triangleright> f (Suc l);\n     d_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) tw_cmpser_is_w_cmpser:\"tw_cmpser G n f \\<Longrightarrow> w_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tw_cmpser G n f \\<Longrightarrow> w_cmpser G n f", "apply (simp add:tw_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. if n = 0 then td_gchain G 0 f\n    else td_gchain G n f \\<and>\n         (\\<forall>l\\<le>n - 1.\n             \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    w_cmpser G n f", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0;\n     if n = 0 then td_gchain G 0 f\n     else td_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; td_gchain G 0 f\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G 0 f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:td_gchain_def w_cmpser_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; f 0 = carrier G \\<and> f 0 = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> d_gchain G 0 f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; f 0 = carrier G \\<and> f 0 = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> carrier G \n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:special_sg_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else td_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0;\n     if n = 0 then td_gchain G 0 f\n     else td_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     td_gchain G n f \\<and>\n     (\\<forall>l\\<le>n - Suc 0.\n         \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; td_gchain G n f;\n     \\<forall>l\\<le>n - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     d_gchain G n f \\<and> f 0 = carrier G \\<and> f n = {\\<one>};\n     \\<forall>l\\<le>n - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     \\<forall>l\\<le>n - Suc 0. \\<natural>f l \\<triangleright> f (Suc l);\n     d_gchain G n f; f 0 = carrier G; f n = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) tW_cmpser_is_W_cmpser:\"tW_cmpser G n f \\<Longrightarrow> W_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tW_cmpser G n f \\<Longrightarrow> W_cmpser G n f", "apply (simp add:tW_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. if n = 0 then td_gchain G 0 f\n    else tD_gchain G n f \\<and>\n         (\\<forall>l\\<le>n - 1.\n             \\<natural>f l \\<triangleright> f (Suc l)) \\<Longrightarrow>\n    W_cmpser G n f", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; td_gchain G 0 f\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G 0 f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; f 0 = carrier G \\<and> f 0 = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G 0 f\n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (simp add:W_cmpser_def d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = 0; f 0 = carrier G \\<and> f 0 = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> carrier G \n 2. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (simp add:special_sg_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if n = 0 then td_gchain G 0 f\n             else tD_gchain G n f \\<and>\n                  (\\<forall>l\\<le>n - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     tD_gchain G n f \\<and>\n     (\\<forall>l\\<le>n - Suc 0.\n         \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; tD_gchain G n f;\n     \\<forall>l\\<le>n - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (simp add:tD_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     D_gchain G n f \\<and> f 0 = carrier G \\<and> f n = {\\<one>};\n     \\<forall>l\\<le>n - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n;\n     \\<forall>l\\<le>n - Suc 0. \\<natural>f l \\<triangleright> f (Suc l);\n     D_gchain G n f; f 0 = carrier G; f n = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G n f", "apply (simp add:W_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_W_cmpser:\"\\<lbrakk>W_cmpser G n f; W_cmpser G m g; \n      (Gp G (f n)) \\<triangleright> (g 0); g 0 \\<subset> f n\\<rbrakk> \\<Longrightarrow> \n      W_cmpser G (Suc (n + m)) (jointfun n f m g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G (Suc (n + m)) (jointfun n f m g)", "apply (simp add:W_cmpser_def [of _ \"Suc (n + m)\" _])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (Suc (n + m)) (jointfun n f m g) \\<and>\n                      (\\<forall>l\\<le>n + m.\n                          \\<natural>jointfun n f m g\n                                     l \\<triangleright> jointfun n f m g\n                   (Suc l))", "apply (frule W_cmpser_is_D_gchain [of \"n\" \"f\"],\n        frule W_cmpser_is_D_gchain [of \"m\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n; D_gchain G n f;\n     D_gchain G m g\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (Suc (n + m)) (jointfun n f m g) \\<and>\n                      (\\<forall>l\\<le>n + m.\n                          \\<natural>jointfun n f m g\n                                     l \\<triangleright> jointfun n f m g\n                   (Suc l))", "apply (simp add:joint_D_gchains)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n; D_gchain G n f;\n     D_gchain G m g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule W_cmpser_is_w_cmpser [of \"n\" _],\n       frule W_cmpser_is_w_cmpser [of \"m\" _])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n; D_gchain G n f;\n     D_gchain G m g; w_cmpser G n f; w_cmpser G m g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (frule joint_w_cmpser [of \"n\" \"f\" \"m\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G m g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n; D_gchain G n f;\n     D_gchain G m g; w_cmpser G n f; w_cmpser G m g;\n     w_cmpser G (Suc (n + m)) (jointfun n f m g)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n + m.\n                         \\<natural>jointfun n f m g\n                                    l \\<triangleright> jointfun n f m g\n                  (Suc l)", "apply (simp add:w_cmpser_def [of _ \"Suc (n + m)\" _])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_d_gchain_n0:\"\\<lbrakk>d_gchain G n f; d_gchain G 0 g;\n       g 0 \\<subseteq> f n \\<rbrakk> \\<Longrightarrow>  d_gchain G (Suc n) (jointfun n f 0 g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G 0 g; g 0 \\<subseteq> f n\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc n) (jointfun n f 0 g)", "apply (frule joint_d_gchains [of \"n\" \"f\" \"0\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f; d_gchain G 0 g; g 0 \\<subseteq> f n;\n     d_gchain G (Suc (n + 0)) (jointfun n f 0 g)\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc n) (jointfun n f 0 g)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_D_gchain_n0:\"\\<lbrakk>D_gchain G n f; D_gchain G 0 g; \n       g 0 \\<subset> f n \\<rbrakk> \\<Longrightarrow>  D_gchain G (Suc n) (jointfun n f 0 g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; D_gchain G 0 g; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (Suc n) (jointfun n f 0 g)", "apply (frule joint_D_gchains [of \"n\" \"f\" \"0\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D_gchain G n f; D_gchain G 0 g; g 0 \\<subset> f n;\n     D_gchain G (Suc (n + 0)) (jointfun n f 0 g)\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (Suc n) (jointfun n f 0 g)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_w_cmpser_n0:\"\\<lbrakk>w_cmpser G n f; w_cmpser G 0 g; \n      (Gp G (f n)) \\<triangleright> (g 0)\\<rbrakk> \\<Longrightarrow>  w_cmpser G (Suc n) (jointfun n f 0 g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G 0 g;\n     \\<natural>f n \\<triangleright> g 0\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G (Suc n) (jointfun n f 0 g)", "apply (frule joint_w_cmpser [of \"n\" \"f\" \"0\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w_cmpser G n f; w_cmpser G 0 g;\n     \\<natural>f n \\<triangleright> g 0;\n     w_cmpser G (Suc (n + 0)) (jointfun n f 0 g)\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G (Suc n) (jointfun n f 0 g)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) joint_W_cmpser_n0:\"\\<lbrakk>W_cmpser G n f; W_cmpser G 0 g; \n      (Gp G (f n)) \\<triangleright> (g 0); g 0 \\<subset> f n \\<rbrakk> \\<Longrightarrow>  \n                       W_cmpser G (Suc n) (jointfun n f 0 g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G 0 g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G (Suc n) (jointfun n f 0 g)", "apply (frule joint_W_cmpser [of \"n\" \"f\" \"0\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G n f; W_cmpser G 0 g;\n     \\<natural>f n \\<triangleright> g 0; g 0 \\<subset> f n;\n     W_cmpser G (Suc (n + 0)) (jointfun n f 0 g)\\<rbrakk>\n    \\<Longrightarrow> W_cmpser G (Suc n) (jointfun n f 0 g)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  simple_Group :: \"_ \\<Rightarrow> bool\" where\n  \"simple_Group G \\<longleftrightarrow> {N. G \\<guillemotright> N} = {carrier G, {\\<one>\\<^bsub>G\\<^esub>}}\""], ["", "definition\n  compseries:: \"[_ , nat, nat \\<Rightarrow> 'a set] \\<Rightarrow> bool\" where\n  \"compseries G n f \\<longleftrightarrow> tW_cmpser G n f \\<and> (if n = 0 then f 0 = {\\<one>\\<^bsub>G\\<^esub>} else \n    (\\<forall>i \\<le> (n - 1). (simple_Group ((Gp G (f i))/(f (Suc i))))))\""], ["", "definition\n  length_twcmpser :: \"[_ , nat, nat \\<Rightarrow> 'a set] \\<Rightarrow> nat\" where\n  \"length_twcmpser G n f = card (f `{i. i \\<le> n}) - Suc 0\""], ["", "lemma (in Group) compseriesTr0:\"\\<lbrakk>compseries G n f; i \\<le> n\\<rbrakk> \\<Longrightarrow>\n                                    G \\<guillemotright> (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "apply (simp add:compseries_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tW_cmpser G n f \\<and>\n             (if n = 0 then f 0 = {\\<one>}\n              else \\<forall>i\\<le>n - 1.\n                      simple_Group (\\<natural>f i / f (Suc i)));\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "apply (frule conjunct1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tW_cmpser G n f \\<and>\n             (if n = 0 then f 0 = {\\<one>}\n              else \\<forall>i\\<le>n - 1.\n                      simple_Group (\\<natural>f i / f (Suc i)));\n     i \\<le> n; tW_cmpser G n f\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "apply (fold compseries_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; i \\<le> n; tW_cmpser G n f\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "apply (frule tW_cmpser_is_W_cmpser,\n        frule W_cmpser_is_w_cmpser, \n        frule w_cmpser_is_d_gchain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; i \\<le> n; tW_cmpser G n f; W_cmpser G n f;\n     w_cmpser G n f; d_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "apply (frule d_gchain_mem_sg[of \"n\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; i \\<le> n; tW_cmpser G n f; W_cmpser G n f;\n     w_cmpser G n f; d_gchain G n f;\n     \\<forall>i\\<le>n. G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f i", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseriesTr1:\"compseries G n f \\<Longrightarrow> tW_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compseries G n f \\<Longrightarrow> tW_cmpser G n f", "apply (simp add:compseries_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseriesTr2:\"compseries G n f \\<Longrightarrow> f 0 = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compseries G n f \\<Longrightarrow> f 0 = carrier G", "apply (frule compseriesTr1, simp add:tW_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1. \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G\n 2. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1. \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1. \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f;\n     tD_gchain G n f \\<and>\n     (\\<forall>l\\<le>n - Suc 0. \\<natural>f l \\<triangleright> f (Suc l));\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G", "apply (erule conjE, simp add:tD_gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseriesTr3:\"compseries G n f \\<Longrightarrow> f n = {\\<one>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compseries G n f \\<Longrightarrow> f n = {\\<one>}", "apply (frule compseriesTr1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; tW_cmpser G n f\\<rbrakk>\n    \\<Longrightarrow> f n = {\\<one>}", "apply (simp add:tW_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1.\n              \\<natural>f l \\<triangleright> f (Suc l))\\<rbrakk>\n    \\<Longrightarrow> f n = {\\<one>}", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1. \\<natural>f l \\<triangleright> f (Suc l));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> f n = {\\<one>}\n 2. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1. \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f n = {\\<one>}", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>compseries G 0 f; f 0 = carrier G \\<and> f 0 = {\\<one>};\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> carrier G = {\\<one>}\n 2. \\<lbrakk>compseries G n f;\n     if n = 0 then td_gchain G 0 f\n     else tD_gchain G n f \\<and>\n          (\\<forall>l\\<le>n - 1. \\<natural>f l \\<triangleright> f (Suc l));\n     n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f n = {\\<one>}", "apply (auto del:equalityI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; 0 < n; tD_gchain G n f;\n     \\<forall>l\\<le>n - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> f n = {\\<one>}", "apply (simp add:tD_gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseriesTr4:\"compseries G n f \\<Longrightarrow> w_cmpser G n f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compseries G n f \\<Longrightarrow> w_cmpser G n f", "apply (frule compseriesTr1,\n       frule tW_cmpser_is_W_cmpser)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G n f; tW_cmpser G n f; W_cmpser G n f\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G n f", "apply (rule W_cmpser_is_w_cmpser, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) im_jointfun1Tr1:\"\\<forall>l \\<le> n. G \\<guillemotright> (f l) \\<Longrightarrow>\n                               f \\<in> {i. i \\<le> n} \\<rightarrow> Collect (sg G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<le>n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f \\<in> {i. i \\<le> n} \\<rightarrow> Collect (sg G)", "apply (simp add:Pi_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nset_Suc_im:\"\\<forall>l \\<le> (Suc n). G \\<guillemotright> (f l) \\<Longrightarrow>\n                 insert (f (Suc n)) (f ` {i. i \\<le> n}) = f ` {i. i \\<le> (Suc n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    insert (f (Suc n)) (f ` {i. i \\<le> n}) = f ` {i. i \\<le> Suc n}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    insert (f (Suc n)) (f ` {i. i \\<le> n})\n    \\<subseteq> f ` {i. i \\<le> Suc n}\n 2. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. G \\<guillemotright> f l ;\n        x \\<in> insert (f (Suc n)) (f ` {i. i \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> f ` {i. i \\<le> Suc n}\n 2. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. G \\<guillemotright> f l ;\n        x = f (Suc n) \\<or> (\\<exists>xa\\<le>n. x = f xa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<le>Suc n. x = f xa\n 2. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. G \\<guillemotright> f l ;\n        x = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<le>Suc n. x = f xa\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. G \\<guillemotright> f l ;\n        \\<exists>xa\\<le>n. x = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<le>Suc n. x = f xa\n 3. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. G \\<guillemotright> f l ;\n        \\<exists>xa\\<le>n. x = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<le>Suc n. x = f xa\n 2. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (erule exE, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. G \\<guillemotright> f l ; xa \\<le> n;\n        x = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<le>Suc n. x = f xa\n 2. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac x = xa and y = n and z = \"Suc n\" in le_less_trans,\n         simp,\n         frule_tac x = xa and y = \"Suc n\" in less_imp_le, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<le>Suc n. G \\<guillemotright> f l  \\<Longrightarrow>\n    f ` {i. i \\<le> Suc n}\n    \\<subseteq> insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac Nset_Suc [of \"n\"], simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  NfuncPair_neq_at::\"[nat \\<Rightarrow> 'a set, nat \\<Rightarrow> 'a set, nat] \\<Rightarrow> bool\" where\n  \"NfuncPair_neq_at f g i \\<longleftrightarrow> f i \\<noteq> g i\""], ["", "lemma LeastTr0:\"\\<lbrakk> (i::nat) < (LEAST l. P (l))\\<rbrakk> \\<Longrightarrow> \\<not> P (i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < (LEAST l. P l) \\<Longrightarrow> \\<not> P i", "apply (rule not_less_Least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < (LEAST l. P l) \\<Longrightarrow> i < (LEAST x. P x)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) funeq_LeastTr1:\"\\<lbrakk>\\<forall>l\\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n  (l :: nat) < (LEAST k. (NfuncPair_neq_at f g k)) \\<rbrakk> \\<Longrightarrow> f l = g l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     l < (LEAST k. NfuncPair_neq_at f g k)\\<rbrakk>\n    \\<Longrightarrow> f l = g l", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     l < (LEAST k. NfuncPair_neq_at f g k); f l \\<noteq> g l\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule  LeastTr0 [of \"l\" \"NfuncPair_neq_at f g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     l < (LEAST k. NfuncPair_neq_at f g k); f l \\<noteq> g l;\n     \\<not> NfuncPair_neq_at f g l\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:NfuncPair_neq_at_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) funeq_LeastTr1_1:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright>  g l; \n  (l :: nat) < (LEAST k. (f k \\<noteq>  g k)) \\<rbrakk> \\<Longrightarrow> f l = g l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     l < (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> f l = g l", "apply (rule funeq_LeastTr1[of \"n\" \"f\" \"g\" \"l\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     l < (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> l < (LEAST k. NfuncPair_neq_at f g k)", "apply (simp add:NfuncPair_neq_at_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_1:\"\\<lbrakk>i \\<le> n; \\<forall>l \\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l;\n       NfuncPair_neq_at f g i\\<rbrakk> \\<Longrightarrow> \n        NfuncPair_neq_at f g (LEAST k. (NfuncPair_neq_at f g k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     NfuncPair_neq_at f g i\\<rbrakk>\n    \\<Longrightarrow> NfuncPair_neq_at f g (LEAST k. NfuncPair_neq_at f g k)", "apply (simp add: LeastI [of \"NfuncPair_neq_at f g\" \"i\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_2:\"\\<lbrakk>i \\<le> n; \\<forall>l \\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l;\n        NfuncPair_neq_at f g i\\<rbrakk> \\<Longrightarrow> \n                          (LEAST k. (NfuncPair_neq_at f g k)) \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     NfuncPair_neq_at f g i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. NfuncPair_neq_at f g k) \\<le> i", "apply (simp add: Least_le [of \"NfuncPair_neq_at f g\" \"i\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_2_1:\"\\<lbrakk>i \\<le> (n::nat); \\<forall>l \\<le> n. G \\<guillemotright> f l;\n       \\<forall>l \\<le> n. G \\<guillemotright> g l; f i \\<noteq> g i\\<rbrakk> \\<Longrightarrow> (LEAST k. (f k \\<noteq> g k)) \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> i", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; f i \\<noteq> g i;\n     \\<not> (LEAST k. f k \\<noteq> g k) \\<le> i\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:nat_not_le_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; f i \\<noteq> g i;\n     i < (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule Nfunc_LeastTr2_2 [of \"i\" \"n\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; f i \\<noteq> g i;\n     i < (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> NfuncPair_neq_at f g i\n 2. \\<lbrakk>i \\<le> n; \\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; f i \\<noteq> g i;\n     i < (LEAST k. f k \\<noteq> g k);\n     (LEAST k. NfuncPair_neq_at f g k) \\<le> i\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:NfuncPair_neq_at_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_3:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      i \\<le> n; f i \\<noteq> g i\\<rbrakk>  \\<Longrightarrow>  \n      f (LEAST k. (f k \\<noteq>  g k)) \\<noteq> g (LEAST k. (f k \\<noteq>  g k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> f (LEAST k. f k \\<noteq> g k) \\<noteq>\n                      g (LEAST k. f k \\<noteq> g k)", "apply (frule  Nfunc_LeastTr2_1 [of \"i\" \"n\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> NfuncPair_neq_at f g i\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i;\n     NfuncPair_neq_at f g (LEAST k. NfuncPair_neq_at f g k)\\<rbrakk>\n    \\<Longrightarrow> f (LEAST k. f k \\<noteq> g k) \\<noteq>\n                      g (LEAST k. f k \\<noteq> g k)", "apply (simp add:NfuncPair_neq_at_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma  (in Group) Nfunc_LeastTr2_4:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      i \\<le> n; f i \\<noteq> g i\\<rbrakk> \\<Longrightarrow>(LEAST k. (f k \\<noteq> g k)) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> n", "apply (frule_tac i = i in Nfunc_LeastTr2_2 [of  _ \"n\" \"f\" \"g\"], \n                                      assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> NfuncPair_neq_at f g i\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i; (LEAST k. NfuncPair_neq_at f g k) \\<le> i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> n", "apply (simp add:NfuncPair_neq_at_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i; (LEAST k. NfuncPair_neq_at f g k) \\<le> i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> n", "apply (frule le_trans [of \"(LEAST k. NfuncPair_neq_at f g k)\" \"i\" \"n\"],\n                                  assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; i \\<le> n;\n     f i \\<noteq> g i; (LEAST k. NfuncPair_neq_at f g k) \\<le> i;\n     (LEAST k. NfuncPair_neq_at f g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> n", "apply (simp add:NfuncPair_neq_at_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_5:\"\\<lbrakk>\\<forall>l\\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      \\<exists>i \\<le> n. (f i \\<noteq> g i)\\<rbrakk>  \\<Longrightarrow>  \n      f (LEAST k. (f k \\<noteq> g k)) \\<noteq> g ((LEAST k. f k \\<noteq> g k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     \\<exists>i\\<le>n. f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> f (LEAST k. f k \\<noteq> g k) \\<noteq>\n                      g (LEAST k. f k \\<noteq> g k)", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n        i \\<le> n \\<and> f i \\<noteq> g i\\<rbrakk>\n       \\<Longrightarrow> f (LEAST k. f k \\<noteq> g k) \\<noteq>\n                         g (LEAST k. f k \\<noteq> g k)", "apply (rule_tac i = i in Nfunc_LeastTr2_3[of n f g], assumption+, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_6:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l;\n       \\<exists>i \\<le> n. (f i \\<noteq> g i)\\<rbrakk> \\<Longrightarrow> (LEAST k. (f k \\<noteq> g k)) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     \\<exists>i\\<le>n. f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> n", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n        i \\<le> n \\<and> f i \\<noteq> g i\\<rbrakk>\n       \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<le> n", "apply (rule_tac i = i in  Nfunc_LeastTr2_4, assumption+, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_Least_sym:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n     \\<exists>i \\<le> n. (f i \\<noteq> g i)\\<rbrakk> \\<Longrightarrow> \n           (LEAST k. (f k \\<noteq> g k)) = (LEAST k. (g k \\<noteq> f k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n     \\<exists>i\\<le>n. f i \\<noteq> g i\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) =\n                      (LEAST k. g k \\<noteq> f k)", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n        i \\<le> n \\<and> f i \\<noteq> g i\\<rbrakk>\n       \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) =\n                         (LEAST k. g k \\<noteq> f k)", "apply (frule_tac i = i in Nfunc_LeastTr2_4 [of n f g], assumption+,\n        simp+,\n        frule_tac i = i in Nfunc_LeastTr2_3 [of n f g _], assumption+,\n        simp+,\n        frule_tac i = i in Nfunc_LeastTr2_4 [of n g f], assumption+,\n        simp+, rule not_sym, simp,\n        frule_tac i = i in Nfunc_LeastTr2_3 [of n g f _], assumption+,\n        simp+, rule not_sym, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n        i \\<le> n \\<and> f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        f (LEAST k. f k \\<noteq> g k) \\<noteq>\n        g (LEAST k. f k \\<noteq> g k);\n        (LEAST k. g k \\<noteq> f k) \\<le> n;\n        g (LEAST k. g k \\<noteq> f k) \\<noteq>\n        f (LEAST k. g k \\<noteq> f k)\\<rbrakk>\n       \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) =\n                         (LEAST k. g k \\<noteq> f k)", "apply (frule_tac i = \"(LEAST k. f k \\<noteq> g k)\" in \n           Nfunc_LeastTr2_2_1 [of _ \"n\" \"g\" \"f\"], assumption+,\n         rule not_sym, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n        i \\<le> n \\<and> f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        f (LEAST k. f k \\<noteq> g k) \\<noteq>\n        g (LEAST k. f k \\<noteq> g k);\n        (LEAST k. g k \\<noteq> f k) \\<le> n;\n        g (LEAST k. g k \\<noteq> f k) \\<noteq>\n        f (LEAST k. g k \\<noteq> f k);\n        (LEAST k. g k \\<noteq> f k)\n        \\<le> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n       \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) =\n                         (LEAST k. g k \\<noteq> f k)", "apply (\n        frule_tac i = \"(LEAST k. g k \\<noteq> f k)\" in \n           Nfunc_LeastTr2_2_1 [of _ n f g], assumption+,\n           rule not_sym, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ;\n        i \\<le> n \\<and> f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        f (LEAST k. f k \\<noteq> g k) \\<noteq>\n        g (LEAST k. f k \\<noteq> g k);\n        (LEAST k. g k \\<noteq> f k) \\<le> n;\n        g (LEAST k. g k \\<noteq> f k) \\<noteq>\n        f (LEAST k. g k \\<noteq> f k);\n        (LEAST k. g k \\<noteq> f k) \\<le> (LEAST k. f k \\<noteq> g k);\n        (LEAST k. f k \\<noteq> g k)\n        \\<le> (LEAST k. g k \\<noteq> f k)\\<rbrakk>\n       \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) =\n                         (LEAST k. g k \\<noteq> f k)", "apply (rule le_antisym, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Nfunc_iNJTr:\"\\<lbrakk>inj_on g {i. i \\<le> (n::nat)}; i \\<le> n; j \\<le> n; i < j \\<rbrakk> \\<Longrightarrow> g i \\<noteq> g j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>inj_on g {i. i \\<le> n}; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> g i \\<noteq> g j", "apply (unfold inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>{i. i \\<le> n}.\n                \\<forall>y\\<in>{i. i \\<le> n}.\n                   g x = g y \\<longrightarrow> x = y;\n     i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> g i \\<noteq> g j", "apply (simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<le>n.\n                \\<forall>y\\<le>n. g x = g y \\<longrightarrow> x = y;\n     j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> g i \\<noteq> g j", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<le>n.\n                \\<forall>y\\<le>n. g x = g y \\<longrightarrow> x = y;\n     j \\<le> n; i < j; g i = g j\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule_tac a = i in forall_spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x\\<le>n.\n                \\<forall>y\\<le>n. g x = g y \\<longrightarrow> x = y;\n     j \\<le> n; i < j; g i = g j\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 2. \\<lbrakk>\\<forall>x\\<le>n.\n                \\<forall>y\\<le>n. g x = g y \\<longrightarrow> x = y;\n     j \\<le> n; i < j; g i = g j;\n     \\<forall>y\\<le>n. g i = g y \\<longrightarrow> i = y\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule_tac x = i and y = j and z = n in less_le_trans, assumption+,\n       simp add:less_imp_le,\n       thin_tac \"\\<forall>x\\<le>n. \\<forall>y\\<le>n. g x = g y \\<longrightarrow> x = y\",\n       rotate_tac -1,\n       frule_tac a = j in forall_spec, assumption,\n       thin_tac \"\\<forall>y\\<le>n. g i = g y \\<longrightarrow> i = y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<le> n; i < j; g i = g j;\n     g i = g j \\<longrightarrow> i = j\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_7:\"\\<lbrakk>\\<forall>l \\<le> (n::nat). G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n      inj_on g {i. i \\<le> n}; \\<exists>i \\<le> n. (f i \\<noteq> g i); \n      f k = g (LEAST k.(f k \\<noteq> g k))\\<rbrakk> \\<Longrightarrow>(LEAST k.(f k \\<noteq> g k)) < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) < k", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     \\<not> (LEAST k. f k \\<noteq> g k) < k\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:nat_not_le_less[THEN sym, of \"LEAST k. f k \\<noteq> g k\" \"k\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule le_imp_less_or_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or>\n     k = (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (case_tac \"k = (LEAST k. f k \\<noteq> g k)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k = (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f (LEAST k. f k \\<noteq> g k) = g (LEAST k. f k \\<noteq> g k);\n     k = (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule  Nfunc_LeastTr2_5 [of \"n\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f (LEAST k. f k \\<noteq> g k) = g (LEAST k. f k \\<noteq> g k);\n     k = (LEAST k. f k \\<noteq> g k);\n     f (LEAST k. f k \\<noteq> g k) \\<noteq>\n     g (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule funeq_LeastTr1_1 [of \"n\" \"f\" \"g\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k)\\<rbrakk>\n    \\<Longrightarrow> k < (LEAST k. f k \\<noteq> g k)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k); f k = g k\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k); f k = g k\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule Nfunc_LeastTr2_6 [of \"n\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k < (LEAST k. f k \\<noteq> g k) \\<or> k = (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k); f k = g k;\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     g k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k);\n     f k = g (LEAST k. f k \\<noteq> g k);\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule_tac le_trans[of \"k\" \"LEAST k. f k \\<noteq> g k\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     g k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k);\n     f k = g (LEAST k. f k \\<noteq> g k);\n     (LEAST k. f k \\<noteq> g k) \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule mem_of_Nset[of \"k\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     g k = g (LEAST k. f k \\<noteq> g k);\n     k \\<le> (LEAST k. f k \\<noteq> g k);\n     k \\<noteq> (LEAST k. f k \\<noteq> g k);\n     f k = g (LEAST k. f k \\<noteq> g k);\n     (LEAST k. f k \\<noteq> g k) \\<le> n; k \\<le> n;\n     k \\<in> {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:inj_on_def[of \"g\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) Nfunc_LeastTr2_8:\"\\<lbrakk>\\<forall>l \\<le> n. G \\<guillemotright> f l; \\<forall>l \\<le> n. G \\<guillemotright> g l; \n     inj_on g {i. i \\<le> n}; \\<exists>i \\<le> n. f i \\<noteq> g i; f `{i. i \\<le> n} = g `{i. i \\<le> n}\\<rbrakk>\n \\<Longrightarrow> \n  \\<exists> k \\<in>(nset (Suc (LEAST i. (f i \\<noteq> g i))) n). f k = g (LEAST i. (f i \\<noteq> g i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k\\<in>nset (Suc (LEAST i. f i \\<noteq> g i))\nn.\n                         f k = g (LEAST i. f i \\<noteq> g i)", "apply (frule_tac Nfunc_LeastTr2_6 [of \"n\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k\\<in>nset (Suc (LEAST i. f i \\<noteq> g i))\nn.\n                         f k = g (LEAST i. f i \\<noteq> g i)", "apply (cut_tac mem_in_image2[of \"LEAST k. f k \\<noteq> g k\" \"{i. i \\<le> n}\" \"g\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n;\n     g (LEAST k. f k \\<noteq> g k) \\<in> g ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k\\<in>nset (Suc (LEAST i. f i \\<noteq> g i))\nn.\n                         f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (frule sym, thin_tac \"f ` {i. i \\<le> n} = g ` {i. i \\<le> n}\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     (LEAST k. f k \\<noteq> g k) \\<le> n;\n     g (LEAST k. f k \\<noteq> g k) \\<in> f ` {i. i \\<le> n};\n     g ` {i. i \\<le> n} = f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k\\<in>nset (Suc (LEAST i. f i \\<noteq> g i))\nn.\n                         f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (thin_tac \"g ` {i. i \\<le> n} = f ` {i. i \\<le> n}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     (LEAST k. f k \\<noteq> g k) \\<le> n;\n     g (LEAST k. f k \\<noteq> g k) \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k\\<in>nset (Suc (LEAST i. f i \\<noteq> g i))\nn.\n                         f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (simp add:image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     (LEAST k. f k \\<noteq> g k) \\<le> n;\n     \\<exists>x\\<le>n. g (LEAST k. f k \\<noteq> g k) = f x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k\\<in>nset (Suc (LEAST i. f i \\<noteq> g i))\nn.\n                         f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (rotate_tac -1, erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>nset\n   (Suc (LEAST i. f i \\<noteq> g i)) n.\n                            f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (frule_tac k = x in Nfunc_LeastTr2_7[of \"n\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x\\<rbrakk>\n       \\<Longrightarrow> f x = g (LEAST k. f k \\<noteq> g k)\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x;\n        (LEAST k. f k \\<noteq> g k) < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>nset\n   (Suc (LEAST i. f i \\<noteq> g i)) n.\n                            f k = g (LEAST i. f i \\<noteq> g i)\n 3. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n; x \\<le> n;\n        g (LEAST k. f k \\<noteq> g k) = f x\\<rbrakk>\n       \\<Longrightarrow> f x = g (LEAST k. f k \\<noteq> g k)\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x;\n        (LEAST k. f k \\<noteq> g k) < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>nset\n   (Suc (LEAST i. f i \\<noteq> g i)) n.\n                            f k = g (LEAST i. f i \\<noteq> g i)\n 3. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (rule sym, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x;\n        (LEAST k. f k \\<noteq> g k) < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>nset\n   (Suc (LEAST i. f i \\<noteq> g i)) n.\n                            f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (frule_tac m = \"(LEAST k. f k \\<noteq> g k)\" and n = x in Suc_leI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        (LEAST k. f k \\<noteq> g k) \\<le> n;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x;\n        (LEAST k. f k \\<noteq> g k) < x;\n        Suc (LEAST k. f k \\<noteq> g k) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>nset\n   (Suc (LEAST i. f i \\<noteq> g i)) n.\n                            f k = g (LEAST i. f i \\<noteq> g i)\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply (simp add:nset_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n        \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n        \\<exists>i\\<le>n. f i \\<noteq> g i;\n        x \\<le> n \\<and> g (LEAST k. f k \\<noteq> g k) = f x;\n        Suc (LEAST k. f k \\<noteq> g k) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<ge>Suc (LEAST i. f i \\<noteq> g i).\n                            k \\<le> n \\<and> f k = f x\n 2. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>n. G \\<guillemotright> f l ;\n     \\<forall>l\\<le>n. G \\<guillemotright> g l ; inj_on g {i. i \\<le> n};\n     \\<exists>i\\<le>n. f i \\<noteq> g i;\n     f ` {i. i \\<le> n} = g ` {i. i \\<le> n};\n     (LEAST k. f k \\<noteq> g k) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (LEAST k. f k \\<noteq> g k) \\<in> {i. i \\<le> n}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchainTr1:\"\\<lbrakk>d_gchain G n f; \n       D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; \n       g ` {i. i \\<le> (card (f ` {i. i \\<le> n}) - Suc 0)} = f ` {i. i \\<le> n}\\<rbrakk> \\<Longrightarrow> \n       g (card (f ` {i. i \\<le> n}) - Suc 0) = f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g (card (f ` {i. i \\<le> n}) - Suc 0) = f n", "apply (case_tac \"n = 0\", simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n\\<rbrakk>\n    \\<Longrightarrow> g (card (f ` {i. i \\<le> n}) - Suc 0) = f n", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n; g (card (f ` {i. i \\<le> n}) - Suc 0) \\<noteq> f n\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cut_tac n_in_Nsetn[of \"card (f ` {i. i \\<le> n}) - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n; g (card (f ` {i. i \\<le> n}) - Suc 0) \\<noteq> f n;\n     card (f ` {i. i \\<le> n}) - Suc 0\n     \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule mem_in_image2[of \"card (f ` {i. i \\<le> n}) - Suc 0\" \n                           \"{i. i \\<le> (card (f ` {i. i \\<le> n}) - Suc 0)}\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n; g (card (f ` {i. i \\<le> n}) - Suc 0) \\<noteq> f n;\n     card (f ` {i. i \\<le> n}) - Suc 0\n     \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g (card (f ` {i. i \\<le> n}) - Suc 0)\n     \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cut_tac n_in_Nsetn[of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n; g (card (f ` {i. i \\<le> n}) - Suc 0) \\<noteq> f n;\n     card (f ` {i. i \\<le> n}) - Suc 0\n     \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g (card (f ` {i. i \\<le> n}) - Suc 0)\n     \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     n \\<in> {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule mem_in_image2[of \"n\" \"{i. i \\<le> n}\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n; g (card (f ` {i. i \\<le> n}) - Suc 0) \\<noteq> f n;\n     card (f ` {i. i \\<le> n}) - Suc 0\n     \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g (card (f ` {i. i \\<le> n}) - Suc 0)\n     \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     n \\<in> {i. i \\<le> n}; f n \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 < n; g (card (f ` {i. i \\<le> n}) - Suc 0) \\<noteq> f n;\n     g (card (f ` {i. i \\<le> n}) - Suc 0) \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:image_def[of \"f\" \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n     g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n     {y. \\<exists>x\\<le>n. y = f x};\n     0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n     \\<exists>x\\<le>n.\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        x \\<le> n \\<and>\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac l = x in d_gchainTr2[of \"n\" \"f\" _ \"n\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        x \\<le> n \\<and>\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        x \\<le> n \\<and>\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        x \\<le> n \\<and>\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        x \\<le> n \\<and>\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x;\n        f n \\<subseteq> f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; f x \\<noteq> f n;\n        x \\<le> n \\<and>\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x;\n        f n \\<subseteq> f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; f x \\<noteq> f n; f n \\<subseteq> f x; x \\<le> n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rotate_tac -1, frule sym,\n        thin_tac \"g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) = f x\",\n        simp,\n        thin_tac \"f x = g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        g ` {i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac mem_in_image2[of \"n\" \"{i. i \\<le> n}\" \"f\"],\n        unfold image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n;\n        f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (frule sym,\n        thin_tac \"{y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}. y = g x} =\n         {y. \\<exists>x\\<le>n. y = f x}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (cut_tac eq_set_inc[of \"f n\" \"{y. \\<exists>x \\<le> n. y = f x}\"\n         \"{y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}. y = g x}\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x};\n        f n\n        \\<in> {y. \\<exists>x\\<in>{i. i \\<le> card\n        {y. \\<exists>x\\<le>n. y = f x} -\n       Suc 0}.\n                     y = g x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (thin_tac \"{y. \\<exists>x\\<le>n. y = f x} =\n         {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}. y = g x}\",\n        thin_tac \"f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x}\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n;\n        f n\n        \\<in> {y. \\<exists>x\\<in>{i. i \\<le> card\n        {y. \\<exists>x\\<le>n. y = f x} -\n       Suc 0}.\n                     y = g x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply  (simp, erule exE, erule conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (case_tac \"xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\", simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (frule D_gchain_is_d_gchain[of \"card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\" g])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (case_tac \"card {y. \\<exists>x \\<le> n. y = f x} - Suc 0 = 0\", \n         simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        card {y. \\<exists>x\\<le>n. y = f x} - Suc 0 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (frule nat_nonzero_pos[of \"card {y. \\<exists>x \\<le> n. y = f x} - Suc 0\"],\n        thin_tac \"card {y. \\<exists>x\\<le>n. y = f x} - Suc 0 \\<noteq> 0\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (frule_tac l = xa in d_gchainTr2[of \n  \"card {y. \\<exists>x \\<le> n. y = f x} - Suc 0\" \"g\" _ \n                 \"card {y. \\<exists>x \\<le> n. y = f x} - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\n                         \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n                                  Suc 0\n 3. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0)\n        \\<subseteq> g xa\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 6. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 7. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n                                  Suc 0\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0)\n        \\<subseteq> g xa\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 6. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> g xa;\n        g xa \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n = g xa;\n        xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        d_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        0 < card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0)\n        \\<subseteq> g xa\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 5. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply (frule_tac A = \"g xa\" and \n        B = \"g (card {y. \\<exists>x \\<le> n. y = f x} - Suc 0)\" in equalityI,\n        assumption+, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0;\n        f n = g xa;\n        \\<not> xa \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> f n \\<in> {y. \\<exists>x\\<le>n. y = f x}\n 3. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g; 0 < n;\n        g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n; f n \\<in> {y. \\<exists>x\\<in>{i. i \\<le> n}. y = f x};\n        {y. \\<exists>x\\<le>n. y = f x} =\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x}\\<rbrakk>\n       \\<Longrightarrow> {y. \\<exists>x\\<le>n. y = f x} =\n                         {y. \\<exists>x\n\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} - Suc 0}.\n                                y = g x}\n 4. \\<And>x.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) g;\n        {y. \\<exists>x\\<in>{i. i \\<le> card {y. \\<exists>x\\<le>n. y = f x} -\n Suc 0}.\n               y = g x} =\n        {y. \\<exists>x\\<le>n. y = f x};\n        0 < n; g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0) \\<noteq> f n;\n        f n \\<subseteq> g (card {y. \\<exists>x\\<le>n. y = f x} - Suc 0);\n        x \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<in> {i. i \\<le> n}", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchainTr1_1:\"\\<lbrakk>d_gchain G (n::nat) f; \n       D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; \n       g ` {i. i \\<le> (card (f ` {i. i \\<le> n}) - Suc 0)} = f ` {i. i \\<le> n}\\<rbrakk> \\<Longrightarrow>\n       g 0 = f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (cut_tac Nset_inc_0[of \"n\"],\n        frule mem_in_image2[of \"0\" \"{i. i \\<le> n}\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 \\<in> {i. i \\<le> n}; f 0 \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n        frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     0 \\<in> {i. i \\<le> n}; f 0 \\<in> f ` {i. i \\<le> n};\n     f ` {i. i \\<le> n} =\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply ( \n       thin_tac \"g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} = f ` {i. i \\<le> n}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     0 \\<in> {i. i \\<le> n}; f 0 \\<in> f ` {i. i \\<le> n};\n     f ` {i. i \\<le> n} =\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n       frule eq_set_inc[of \"f 0\" \"f ` {i. i \\<le> n}\" \n                 \"g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     0 \\<in> {i. i \\<le> n}; f 0 \\<in> f ` {i. i \\<le> n};\n     f ` {i. i \\<le> n} =\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (       \n thin_tac \"f 0 \\<in> f ` {i. i \\<le> n}\",\n        thin_tac \"0 \\<in> {i. i \\<le> n}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f ` {i. i \\<le> n} =\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (cut_tac Nset_inc_0[of \"card (f ` {i. i \\<le> n}) - Suc 0\"],\n        frule mem_in_image2[of \"0\" \"{i. i \\<le> (card (f ` {i. i \\<le> n}) - Suc 0)}\"\n         \"g\"],\n        frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f ` {i. i \\<le> n} =\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     0 \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n       frule eq_set_inc[of \"g 0\" \"g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\" \n               \"f ` {i. i \\<le> n}\"], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f ` {i. i \\<le> n} =\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     0 \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     g 0 \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n       thin_tac \"f ` {i. i \\<le> n} = g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     0 \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     g 0 \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n       thin_tac \"0 \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n     f ` {i. i \\<le> n};\n     g 0 \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n       thin_tac \"g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} = f ` {i. i \\<le> n}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (\n       thin_tac \"g 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (case_tac \"n = 0\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0", "apply (cut_tac mem_in_image3[of \"f 0\" \"g\" \n                \"{i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\"],\n        frule mem_in_image3[of \"g 0\" \"f\" \n                    \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n;\n     \\<exists>a\\<in>{i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}.\n        f 0 = g a;\n     \\<exists>a\\<in>{i. i \\<le> n}. g 0 = f a\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0\n 2. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply (\n        thin_tac \"f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}\",\n        thin_tac \"g 0 \\<in> f ` {i. i \\<le> n}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n     \\<exists>a\\<in>{i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}.\n        f 0 = g a;\n     \\<exists>a\\<in>{i. i \\<le> n}. g 0 = f a\\<rbrakk>\n    \\<Longrightarrow> g 0 = f 0\n 2. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply (erule bexE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}; f 0 = g a;\n        aa \\<in> {i. i \\<le> n}; g 0 = f aa\\<rbrakk>\n       \\<Longrightarrow> g 0 = f 0\n 2. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply (\n        frule_tac j = aa in d_gchainTr2[of \"n\" \"f\" \"0\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a aa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}; f 0 = g a;\n        aa \\<in> {i. i \\<le> n}; g 0 = f aa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> n\n 2. \\<And>a aa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}; f 0 = g a;\n        aa \\<in> {i. i \\<le> n}; g 0 = f aa\\<rbrakk>\n       \\<Longrightarrow> aa \\<le> n\n 3. \\<And>a aa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}; f 0 = g a;\n        aa \\<in> {i. i \\<le> n}; g 0 = f aa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> aa\n 4. \\<And>a aa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<in> {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}; f 0 = g a;\n        aa \\<in> {i. i \\<le> n}; g 0 = f aa; f aa \\<subseteq> f 0\\<rbrakk>\n       \\<Longrightarrow> g 0 = f 0\n 5. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa.\n       \\<lbrakk>d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<le> card (f ` {i. i \\<le> n}) - Suc 0; f 0 = g a; aa \\<le> n;\n        g 0 = f aa; f aa \\<subseteq> g a\\<rbrakk>\n       \\<Longrightarrow> f aa = g a\n 2. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply (rotate_tac -2, frule sym, thin_tac \"g 0 = f aa\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa.\n       \\<lbrakk>g 0 \\<subseteq> g a; d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<le> card (f ` {i. i \\<le> n}) - Suc 0; f 0 = g a; aa \\<le> n;\n        f aa = g 0\\<rbrakk>\n       \\<Longrightarrow> g 0 = g a\n 2. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply (case_tac \"a = 0\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa.\n       \\<lbrakk>g 0 \\<subseteq> g a; d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g; 0 < n;\n        a \\<le> card (f ` {i. i \\<le> n}) - Suc 0; f 0 = g a; aa \\<le> n;\n        f aa = g 0; a \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> g 0 = g a\n 2. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply (simp,\n       frule_tac j = a in D_gchain0[of \"card (f ` {i. i \\<le> n}) - Suc 0\" g 0],\n       simp add:Nset_inc_0, assumption+,\n       simp add:psubset_contr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n     f 0 \\<in> g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0};\n     g 0 \\<in> f ` {i. i \\<le> n}; 0 < n\\<rbrakk>\n    \\<Longrightarrow> f 0\n                      \\<in> g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchainTr2:\"d_gchain G (Suc n) f \n               \\<Longrightarrow> D_gchain G 0 (constmap {0::nat} {f (Suc n)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G (Suc n) f \\<Longrightarrow>\n    D_gchain G 0 (constmap {0} {f (Suc n)})", "apply (simp add:D_gchain_def constmap_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G (Suc n) f \\<Longrightarrow> G \\<guillemotright> f (Suc n)", "apply (simp add:d_gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) last_mem_excluded:\"\\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n)\\<rbrakk> \\<Longrightarrow>\n                                   f (Suc n) \\<notin> f ` {i. i \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<notin> f ` {i. i \\<le> n}", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n     f (Suc n) \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule mem_in_image3[of \"f (Suc n)\" \"f\" \"{i. i \\<le> n}\"], erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; a \\<in> {i. i \\<le> n};\n        f (Suc n) = f a\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac zero_less_Suc[of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; a \\<in> {i. i \\<le> n};\n        f (Suc n) = f a; 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac l = a in d_gchainTr2[of \"Suc n\" \"f\" _ \"n\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; a \\<in> {i. i \\<le> n};\n        f (Suc n) = f a; 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> a \\<le> Suc n\n 2. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; a \\<in> {i. i \\<le> n};\n        f (Suc n) = f a; 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 3. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; a \\<in> {i. i \\<le> n};\n        f (Suc n) = f a; 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> a \\<le> n\n 4. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; a \\<in> {i. i \\<le> n};\n        f (Suc n) = f a; 0 < Suc n; f n \\<subseteq> f a\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f a; a \\<le> n;\n        f (Suc n) = f a; f n \\<subseteq> f a\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule sym, thin_tac \"f (Suc n) = f a\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac l = n and j = \"Suc n\" in  d_gchainTr2[of \"Suc n\" \"f\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> 0 < Suc n\n 2. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> d_gchain G (Suc n) f\n 3. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 4. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 5. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 6. \\<And>a.\n       \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n); a \\<le> n;\n        f n \\<subseteq> f (Suc n); f a = f (Suc n);\n        f (Suc n) \\<subseteq> f n\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchainTr4:\"\\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n)\\<rbrakk> \\<Longrightarrow>\n                card (f ` {i. i \\<le> (Suc n)}) = Suc (card (f ` {i. i \\<le> n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) =\n                      Suc (card (f ` {i. i \\<le> n}))", "apply (cut_tac image_Nset_Suc [of \"f\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n     f ` {j. j \\<le> Suc n} =\n     insert (f (Suc n)) (f ` {j. j \\<le> n})\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) =\n                      Suc (card (f ` {i. i \\<le> n}))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n     f ` {j. j \\<le> Suc n} =\n     insert (f (Suc n)) (f ` {j. j \\<le> n})\\<rbrakk>\n    \\<Longrightarrow> card (insert (f (Suc n)) (f ` {i. i \\<le> n})) =\n                      Suc (card (f ` {i. i \\<le> n}))", "apply (rule card_insert_disjoint)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n     f ` {j. j \\<le> Suc n} =\n     insert (f (Suc n)) (f ` {j. j \\<le> n})\\<rbrakk>\n    \\<Longrightarrow> finite (f ` {i. i \\<le> n})\n 2. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n     f ` {j. j \\<le> Suc n} =\n     insert (f (Suc n)) (f ` {j. j \\<le> n})\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<notin> f ` {i. i \\<le> n}", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G (Suc n) f; f n \\<noteq> f (Suc n);\n     f ` {j. j \\<le> Suc n} =\n     insert (f (Suc n)) (f ` {j. j \\<le> n})\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<notin> f ` {i. i \\<le> n}", "apply (simp add:last_mem_excluded)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchainTr5:\"d_gchain G n f \\<Longrightarrow> 0 < card (f ` {i. i\\<le> n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G n f \\<Longrightarrow> 0 < card (f ` {i. i \\<le> n})", "apply (simp add:image_Nsetn_card_pos)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchainTr6:\"\\<forall>f. d_gchain G n f \\<longrightarrow> \n      (\\<exists>g. D_gchain G (card (f `{i. i \\<le> n}) - 1) g \\<and> \n                  (g ` {i. i \\<le> (card (f `{i. i \\<le> n}) - 1)} = f `{i. i \\<le> n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       d_gchain G n f \\<longrightarrow>\n       (\\<exists>g.\n           D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n           f ` {i. i \\<le> n})", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>f.\n       d_gchain G 0 f \\<longrightarrow>\n       (\\<exists>g.\n           D_gchain G (card (f ` {i. i \\<le> 0}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> 0}) - 1} =\n           f ` {i. i \\<le> 0})\n 2. \\<And>n.\n       \\<forall>f.\n          d_gchain G n f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          d_gchain G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       d_gchain G 0 f \\<Longrightarrow>\n       \\<exists>g.\n          D_gchain G (card (f ` {i. i \\<le> 0}) - 1) g \\<and>\n          g ` {i. i \\<le> card (f ` {i. i \\<le> 0}) - 1} =\n          f ` {i. i \\<le> 0}\n 2. \\<And>n.\n       \\<forall>f.\n          d_gchain G n f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          d_gchain G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (simp add:image_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       d_gchain G 0 f \\<Longrightarrow>\n       \\<exists>g. D_gchain G 0 g \\<and> g 0 = f 0\n 2. \\<And>n.\n       \\<forall>f.\n          d_gchain G n f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          d_gchain G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (simp add:D_gchain_def d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       G \\<guillemotright> f 0  \\<Longrightarrow>\n       \\<exists>g. G \\<guillemotright> g 0  \\<and> g 0 = f 0\n 2. \\<And>n.\n       \\<forall>f.\n          d_gchain G n f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          d_gchain G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f.\n          d_gchain G n f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          d_gchain G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "(** n **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f.\n          d_gchain G n f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          d_gchain G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (case_tac \"f (Suc n) = f n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) = f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (cut_tac n = n in Nset_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) = f n;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (cut_tac n = n in n_in_Nsetn,\n        frule_tac a = n and A = \"{i. i \\<le> n}\" and f = f in mem_in_image2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) = f n;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        n \\<in> {i. i \\<le> n}; f n \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) = f n;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        n \\<in> {i. i \\<le> n}; f n \\<in> f ` {i. i \\<le> n};\n        f n = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (thin_tac \"f (Suc n) = f n\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0)\n                        g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; f n = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (subst insert_absorb, assumption)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0)\n                        g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; f n = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n                            f ` {i. i \\<le> n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule_tac n = n and f = f in d_gchain_pre, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule_tac n = n and f = f in d_gchain_pre)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   d_gchain G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule_tac a = f in forall_spec, assumption,\n        thin_tac \"\\<forall>f. d_gchain G n f \\<longrightarrow>\n               (\\<exists>g. D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                    g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                    f ` {i. i \\<le> n})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f;\n        \\<exists>g.\n           D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n           f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (erule exE, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - 1) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n        f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (simp add:image_Nset_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = n and f = f in ex_redchainTr2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = \"card (f ` {i. i \\<le> n}) - Suc 0\" and f = g and \n       g = \"constmap {0} {f (Suc n)}\" in joint_D_gchain_n0, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add: ex_redchainTr1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0 \\<subset> f n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add: constmap_def Nset_inc_0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac n = n in zero_less_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = \"Suc n\" and f = f and l = n and j = \"Suc n\" in \n        d_gchainTr2, assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 4. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n;\n        f (Suc n) \\<subseteq> f n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 5. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 3. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n;\n        f (Suc n) \\<subseteq> f n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 4. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> Suc n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n;\n        f (Suc n) \\<subseteq> f n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 3. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n)); 0 < Suc n;\n        f (Suc n) \\<subseteq> f n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 2. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:psubset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac f = f and n = n in image_Nsetn_card_pos,\n        cut_tac k = n in finite_Collect_le_nat, \n        frule_tac F = \"{i. i \\<le> n}\" and h = f in finite_imageI,\n        frule_tac n = n and f = f in last_mem_excluded,\n        rule not_sym, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n}); finite {na. na \\<le> n};\n        finite (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac n = \"card (f ` {i. i \\<le> n}) - Suc 0\" and f = g and m = 0 and \n        g = \"constmap {0} {f (Suc n)}\" in im_jointfun1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n};\n        jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n         (constmap {0} {f (Suc n)}) `\n        {j. j \\<le> Suc (card (f ` {i. i \\<le> n}) - Suc 0 + 0)} =\n        g ` {j. j \\<le> card (f ` {i. i \\<le> n}) - Suc 0} \\<union>\n        constmap {0} {f (Suc n)} ` {j. j \\<le> 0}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n};\n        jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n         (constmap {0} {f (Suc n)}) `\n        {j. j \\<le> card (f ` {i. i \\<le> n})} =\n        insert (constmap {0} {f (Suc n)} 0) (f ` {i. i \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:Nset_0 constmap_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>d_gchain G (Suc n) f; f (Suc n) \\<noteq> f n;\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        D_gchain G 0 (\\<lambda>x\\<in>{0}. f (Suc n));\n        D_gchain G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (\\<lambda>x\\<in>{0}. f (Suc n)));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n};\n        jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n         (\\<lambda>x\\<in>{0}. f (Suc n)) `\n        {j. j \\<le> card (f ` {i. i \\<le> n})} =\n        insert (f (Suc n)) (f ` {i. i \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            D_gchain G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_redchain:\"d_gchain G n f \\<Longrightarrow>\n      (\\<exists>g. D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and> \n       g ` {i. i \\<le> (card (f ` {i. i \\<le> n}) - 1)} = f ` {i. i \\<le> n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G n f \\<Longrightarrow>\n    \\<exists>g.\n       D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} = f ` {i. i \\<le> n}", "apply (cut_tac ex_redchainTr6 [of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d_gchain G n f;\n     \\<forall>f.\n        d_gchain G n f \\<longrightarrow>\n        (\\<exists>g.\n            D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n            g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n            f ` {i. i \\<le> n})\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         D_gchain G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                         g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                         f ` {i. i \\<le> n}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) const_W_cmpser:\"d_gchain G (Suc n) f \\<Longrightarrow>\n                         W_cmpser G 0 (constmap {0::nat} {f (Suc n)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d_gchain G (Suc n) f \\<Longrightarrow>\n    W_cmpser G 0 (constmap {0} {f (Suc n)})", "apply (simp add:W_cmpser_def d_gchain_def constmap_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_W_cmpserTr0m:\"\\<forall>f. w_cmpser G m f \\<longrightarrow>  \n  (\\<exists>g. (W_cmpser G (card (f `{i. i \\<le> m}) - 1) g \\<and> \n           g `{i. i \\<le> (card (f `{i. i \\<le> m}) - 1)} = f `{i. i \\<le> m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       w_cmpser G m f \\<longrightarrow>\n       (\\<exists>g.\n           W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n           f ` {i. i \\<le> m})", "apply (induct_tac m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>f.\n       w_cmpser G 0 f \\<longrightarrow>\n       (\\<exists>g.\n           W_cmpser G (card (f ` {i. i \\<le> 0}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> 0}) - 1} =\n           f ` {i. i \\<le> 0})\n 2. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "(********* induct_step m = 0 ***************)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>f.\n       w_cmpser G 0 f \\<longrightarrow>\n       (\\<exists>g.\n           W_cmpser G (card (f ` {i. i \\<le> 0}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> 0}) - 1} =\n           f ` {i. i \\<le> 0})\n 2. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       w_cmpser G 0 f \\<Longrightarrow>\n       \\<exists>g.\n          W_cmpser G (card (f ` {i. i \\<le> 0}) - 1) g \\<and>\n          g ` {i. i \\<le> card (f ` {i. i \\<le> 0}) - 1} =\n          f ` {i. i \\<le> 0}\n 2. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       w_cmpser G 0 f \\<Longrightarrow>\n       \\<exists>g. W_cmpser G 0 g \\<and> g 0 = f 0\n 2. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (simp add:w_cmpser_def W_cmpser_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       d_gchain G 0 f \\<Longrightarrow>\n       \\<exists>g. d_gchain G 0 g \\<and> g 0 = f 0\n 2. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "(********** induct_step  m ****************)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>f.\n          w_cmpser G n f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n              f ` {i. i \\<le> n}) \\<Longrightarrow>\n       \\<forall>f.\n          w_cmpser G (Suc n) f \\<longrightarrow>\n          (\\<exists>g.\n              W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1) g \\<and>\n              g ` {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n              f ` {i. i \\<le> Suc n})", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (case_tac \"f (Suc n) = f n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) = f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (cut_tac n = n in Nset_Suc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) = f n;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (cut_tac n = n in n_in_Nsetn,\n        frule_tac a = n and A = \"{i. i \\<le> n}\" and f = f in mem_in_image2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) = f n;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        n \\<in> {i. i \\<le> n}; f n \\<in> f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) = f n;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        n \\<in> {i. i \\<le> n}; f n \\<in> f ` {i. i \\<le> n};\n        f n = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (thin_tac \"f (Suc n) = f n\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0)\n                        g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; f n = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (subst insert_absorb, assumption)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0)\n                        g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f;\n        {j. j \\<le> Suc n} = insert (Suc n) {j. j \\<le> n};\n        f (Suc n) \\<in> f ` {i. i \\<le> n}; f n = f (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n                            f ` {i. i \\<le> n}\n 2. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule_tac n = n and f = f in  w_cmpser_pre, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule_tac n = n and f = f in w_cmpser_pre)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<forall>f.\n                   w_cmpser G n f \\<longrightarrow>\n                   (\\<exists>g.\n                       W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                       g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                       f ` {i. i \\<le> n});\n        w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (frule_tac a = f in forall_spec, assumption,\n        thin_tac \"\\<forall>f. w_cmpser G n f \\<longrightarrow>\n               (\\<exists>g. W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n                    g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n                    f ` {i. i \\<le> n})\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f;\n        \\<exists>g.\n           W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g \\<and>\n           g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n           f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (erule exE, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - 1) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - 1} =\n        f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> Suc n}) - 1)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> Suc n}) - 1} =\n                            f ` {i. i \\<le> Suc n}", "apply (simp add:image_Nset_Suc,\n       frule_tac n = \"Suc n\" and f = f in w_cmpser_is_d_gchain,\n       frule_tac n = n and f = f in const_W_cmpser)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = \"card (f ` {i. i \\<le> n}) - Suc 0\" and f = g and \n       g = \"constmap {0::nat} {f (Suc n)}\" in joint_W_cmpser_n0, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (card (f ` {i. i \\<le> n}) -\nSuc 0) \\<triangleright> constmap {0} {f (Suc n)} 0\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 3. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = \"card (f ` {i. i \\<le> n}) - Suc 0\" and f = g in \n                      W_cmpser_is_D_gchain)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (card (f ` {i. i \\<le> n}) -\nSuc 0) \\<triangleright> constmap {0} {f (Suc n)} 0\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 3. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule d_gchain_pre)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        d_gchain G n f\\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (card (f ` {i. i \\<le> n}) -\nSuc 0) \\<triangleright> constmap {0} {f (Suc n)} 0\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 3. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (subst ex_redchainTr1, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        d_gchain G n f\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f n \\<triangleright> constmap {0}\n                   {f (Suc n)} 0\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 3. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:constmap_def Nset_inc_0)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (\\<lambda>x\\<in>{0}. f (Suc n));\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        d_gchain G n f\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f n \\<triangleright> f (Suc n)\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 3. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f;\n        W_cmpser G 0 (constmap {0} {f (Suc n)})\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule d_gchain_pre)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        d_gchain G n f\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = \"card (f ` {i. i \\<le> n}) - Suc 0\" and f = g in \n                      W_cmpser_is_D_gchain)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        d_gchain G n f;\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (frule_tac n = n and f = f and g = g in ex_redchainTr1, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g (card (f ` {i. i \\<le> n}) - Suc 0) = f n\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0\n                         \\<subset> g (card (f ` {i. i \\<le> n}) - Suc 0)\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        d_gchain G n f; D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g (card (f ` {i. i \\<le> n}) - Suc 0) = f n\\<rbrakk>\n       \\<Longrightarrow> constmap {0} {f (Suc n)} 0 \\<subset> f n\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:constmap_def Nset_inc_0,\n        thin_tac \"d_gchain G n f\", simp add:d_gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        W_cmpser G 0 (\\<lambda>x\\<in>{0}. f (Suc n));\n        D_gchain G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g (card (f ` {i. i \\<le> n}) - Suc 0) = f n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<subset> f n\n 2. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac n = \"Suc n\" in n_in_Nsetn,\n        frule_tac x = \"Suc n\" in spec, simp,\n        simp add:psubset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac f = f and n = n in image_Nsetn_card_pos,\n        cut_tac k = n in finite_Collect_le_nat, \n        frule_tac F = \"{i. i \\<le> n}\" and h = f in finite_imageI,\n        frule_tac n = n and f = f in last_mem_excluded,\n        rule not_sym, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (Suc (card (f ` {i. i \\<le> n}) - Suc 0))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n}); finite {na. na \\<le> n};\n        finite (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G\n                             (card\n                               (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n                              Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card\n   (insert (f (Suc n)) (f ` {i. i \\<le> n})) -\n  Suc 0} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (cut_tac n = \"card (f ` {i. i \\<le> n}) - Suc 0\" and f = g and m = 0 and \n        g = \"constmap {0::nat} {f (Suc n)}\" in im_jointfun1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n};\n        jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n         (constmap {0} {f (Suc n)}) `\n        {j. j \\<le> Suc (card (f ` {i. i \\<le> n}) - Suc 0 + 0)} =\n        g ` {j. j \\<le> card (f ` {i. i \\<le> n}) - Suc 0} \\<union>\n        constmap {0} {f (Suc n)} ` {j. j \\<le> 0}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (constmap {0} {f (Suc n)});\n        W_cmpser G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (constmap {0} {f (Suc n)}));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n};\n        jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n         (constmap {0} {f (Suc n)}) `\n        {j. j \\<le> card (f ` {i. i \\<le> n})} =\n        insert (constmap {0} {f (Suc n)} 0) (f ` {i. i \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply (simp add:Nset_0 constmap_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f g.\n       \\<lbrakk>w_cmpser G (Suc n) f; f (Suc n) \\<noteq> f n;\n        w_cmpser G n f; W_cmpser G (card (f ` {i. i \\<le> n}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> n}) - Suc 0} =\n        f ` {i. i \\<le> n};\n        d_gchain G (Suc n) f; W_cmpser G 0 (\\<lambda>x\\<in>{0}. f (Suc n));\n        W_cmpser G (card (f ` {i. i \\<le> n}))\n         (jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n           (\\<lambda>x\\<in>{0}. f (Suc n)));\n        0 < card (f ` {i. i \\<le> n});\n        f (Suc n) \\<notin> f ` {i. i \\<le> n};\n        jointfun (card (f ` {i. i \\<le> n}) - Suc 0) g 0\n         (\\<lambda>x\\<in>{0}. f (Suc n)) `\n        {j. j \\<le> card (f ` {i. i \\<le> n})} =\n        insert (f (Suc n)) (f ` {i. i \\<le> n})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            W_cmpser G (card (f ` {i. i \\<le> n})) g \\<and>\n                            g ` {i. i \\<le> card (f ` {i. i \\<le> n})} =\n                            insert (f (Suc n)) (f ` {i. i \\<le> n})", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_W_cmpser:\"w_cmpser G m f \\<Longrightarrow>\n       \\<exists>g. W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g  \\<and>  \n              g ` {i. i \\<le> (card (f ` {i. i \\<le> m}) - 1)} = f ` {i. i \\<le> m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w_cmpser G m f \\<Longrightarrow>\n    \\<exists>g.\n       W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n       g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} = f ` {i. i \\<le> m}", "apply (cut_tac ex_W_cmpserTr0m [of \"m\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w_cmpser G m f;\n     \\<forall>f.\n        w_cmpser G m f \\<longrightarrow>\n        (\\<exists>g.\n            W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n            g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n            f ` {i. i \\<le> m})\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n                         g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n                         f ` {i. i \\<le> m}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Existence of reduced chain and composition series\""], ["", "lemma (in Group) ex_W_cmpserTr3m1:\"\\<lbrakk>tw_cmpser G (m::nat) f; \n       W_cmpser G ((card (f ` {i. i \\<le> m})) - 1) g; \n       g ` {i. i \\<le> ((card (f ` {i. i \\<le> m})) - 1)} = f `{i. i \\<le> m}\\<rbrakk> \\<Longrightarrow> \n      tW_cmpser G ((card (f ` {i. i \\<le> m})) - 1) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f; W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n     f ` {i. i \\<le> m}\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g", "apply (frule_tac tw_cmpser_is_w_cmpser [of \"m\" \"f\"],\n       frule_tac w_cmpser_is_d_gchain [of \"m\" \"f\"],\n       frule_tac W_cmpser_is_D_gchain [of \"(card (f ` {i. i \\<le> m}) - 1)\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f; W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} = f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - 1) g\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g", "apply (frule ex_redchainTr1 [of \"m\" \"f\" \"g\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f; W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} = f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - 1) g\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g\n 2. \\<lbrakk>tw_cmpser G m f; W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} = f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - 1) g\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 3. \\<lbrakk>tw_cmpser G m f; W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} = f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - 1) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply (frule_tac ex_redchainTr1_1 [of \"m\" \"f\" \"g\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m\\<rbrakk>\n    \\<Longrightarrow> D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply (simp add:tW_cmpser_def tw_cmpser_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply (case_tac \"m = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; m = 0\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply (cut_tac card_image_le [of \"{0::nat}\" \"f\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; m \\<noteq> 0;\n     card (f ` {0}) \\<le> card {0}\\<rbrakk>\n    \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> finite {0}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply (simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g", "apply (simp add:tW_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply (case_tac \"card (f ` {i. i \\<le> m}) \\<le> Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tw_cmpser G m f; W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> td_gchain G 0 g\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply (simp add:td_gchain_def tw_cmpser_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply (case_tac \"m = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; m = 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 2. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply (thin_tac \"f 0 = f m\", thin_tac \"g 0 = f m\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; card (f ` {i. i \\<le> m}) \\<le> Suc 0;\n     m = 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 2. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>td_gchain G 0 f; W_cmpser G 0 g; w_cmpser G 0 f;\n     d_gchain G 0 f; D_gchain G 0 g; m = 0\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G \\<and> f 0 = {\\<one>}\n 2. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply ( simp add:td_gchain_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>f 0 = carrier G \\<and> f 0 = {\\<one>}; W_cmpser G 0 g;\n     w_cmpser G 0 f; d_gchain G 0 f; D_gchain G 0 g; m = 0\\<rbrakk>\n    \\<Longrightarrow> carrier G = {\\<one>}\n 2. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 3. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply ( erule conjE, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>td_gchain G m f \\<and>\n             (\\<forall>l\\<le>m - Suc 0.\n                 \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G 0 g; {f m} = f ` {i. i \\<le> m}; w_cmpser G m f;\n     d_gchain G m f; D_gchain G 0 g; f 0 = f m; g 0 = f m;\n     card (f ` {i. i \\<le> m}) \\<le> Suc 0; 0 < m\\<rbrakk>\n    \\<Longrightarrow> f m = carrier G \\<and> f m = {\\<one>}\n 2. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply (simp add:td_gchain_def[of \"G\" \"m\" \"f\"], (erule conjE)+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> (card (f ` {i. i \\<le> m})\n                       \\<le> Suc 0 \\<longrightarrow>\n                       td_gchain G 0 g) \\<and>\n                      (\\<not> card (f ` {i. i \\<le> m})\n                              \\<le> Suc 0 \\<longrightarrow>\n                       tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                        g \\<and>\n                       (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n Suc (Suc 0).\n                           \\<natural>g l \\<triangleright> g (Suc l)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> tD_gchain G (card (f ` {i. i \\<le> m}) - Suc 0)\n                       g \\<and>\n                      (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\nSuc (Suc 0).\n                          \\<natural>g l \\<triangleright> g (Suc l))", "apply (simp add:tD_gchain_def tw_cmpser_def td_gchain_def [of _ \"m\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G \\<and>\n                      f m = {\\<one>} \\<and>\n                      (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\nSuc (Suc 0).\n                          \\<natural>g l \\<triangleright> g (Suc l))", "apply (case_tac \"m = 0\", simp add:card1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if m = 0 then td_gchain G 0 f\n             else td_gchain G m f \\<and>\n                  (\\<forall>l\\<le>m - 1.\n                      \\<natural>f l \\<triangleright> f (Suc l));\n     W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = f m; g 0 = f 0;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> f 0 = carrier G \\<and>\n                      f m = {\\<one>} \\<and>\n                      (\\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\nSuc (Suc 0).\n                          \\<natural>g l \\<triangleright> g (Suc l))", "apply (simp, erule conjE, simp add:td_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m};\n     w_cmpser G m f; d_gchain G m f;\n     D_gchain G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n     g (card (f ` {i. i \\<le> m}) - Suc 0) = {\\<one>}; g 0 = carrier G;\n     \\<not> card (f ` {i. i \\<le> m}) \\<le> Suc 0; 0 < m;\n     f 0 = carrier G \\<and> f m = {\\<one>};\n     \\<forall>l\\<le>m - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>card (f ` {i. i \\<le> m}) -\n                                     Suc (Suc 0).\n                         \\<natural>g l \\<triangleright> g (Suc l)", "apply (simp add:W_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) ex_W_cmpserTr3m:\"tw_cmpser G m f \\<Longrightarrow> \n           \\<exists>g. tW_cmpser G ((card (f ` {i. i \\<le> m})) - 1) g \\<and> \n               g `{ i. i \\<le> (card (f `{i. i \\<le> m}) - 1)} = f ` {i. i \\<le> m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tw_cmpser G m f \\<Longrightarrow>\n    \\<exists>g.\n       tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n       g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} = f ` {i. i \\<le> m}", "apply (frule tw_cmpser_is_w_cmpser[of \"m\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f; w_cmpser G m f\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         tW_cmpser G (card (f ` {i. i \\<le> m}) - 1)\n                          g \\<and>\n                         g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n                         f ` {i. i \\<le> m}", "apply (frule ex_W_cmpser [of \"m\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f; w_cmpser G m f;\n     \\<exists>g.\n        W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n        f ` {i. i \\<le> m}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g.\n                         tW_cmpser G (card (f ` {i. i \\<le> m}) - 1)\n                          g \\<and>\n                         g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n                         f ` {i. i \\<le> m}", "apply (auto del:equalityI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>tw_cmpser G m f; w_cmpser G m f;\n        W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n        f ` {i. i \\<le> m}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                            f ` {i. i \\<le> m}", "apply (frule_tac g = g in ex_W_cmpserTr3m1 [of \"m\" \"f\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>tw_cmpser G m f; w_cmpser G m f;\n        W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n        f ` {i. i \\<le> m}\\<rbrakk>\n       \\<Longrightarrow> W_cmpser G (card (f ` {i. i \\<le> m}) - 1) g\n 2. \\<And>g.\n       \\<lbrakk>tw_cmpser G m f; w_cmpser G m f;\n        W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n        f ` {i. i \\<le> m}\\<rbrakk>\n       \\<Longrightarrow> g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n                         f ` {i. i \\<le> m}\n 3. \\<And>g.\n       \\<lbrakk>tw_cmpser G m f; w_cmpser G m f;\n        W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n        f ` {i. i \\<le> m};\n        tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                            f ` {i. i \\<le> m}", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>tw_cmpser G m f; w_cmpser G m f;\n        W_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g;\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n        f ` {i. i \\<le> m};\n        tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0)\n                             g \\<and>\n                            g `\n                            {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                            f ` {i. i \\<le> m}", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  red_ch_cd :: \"[_ , nat \\<Rightarrow> 'a set, nat, nat \\<Rightarrow> 'a set ] \\<Rightarrow> bool\" where\n  \"red_ch_cd G f m g \\<longleftrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and> \n                 (g `{i . i \\<le> (card (f ` {i. i \\<le> m}) - 1)} = f` {i. i \\<le> m})\""], ["", "definition\n  red_chain :: \"[_ , nat, nat \\<Rightarrow> 'a set] \\<Rightarrow> (nat \\<Rightarrow> 'a set)\" where\n  \"red_chain G m f = (SOME g. g \\<in> {h. red_ch_cd G f m h})\""], ["", "lemma (in Group) red_chainTr0m1_1:\"tw_cmpser G m f \\<Longrightarrow> \n       (SOME g. g \\<in> {h. red_ch_cd G f m h}) \\<in> {h. red_ch_cd G f m h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tw_cmpser G m f \\<Longrightarrow>\n    (SOME g. g \\<in> {h. red_ch_cd G f m h}) \\<in> {h. red_ch_cd G f m h}", "apply (rule nonempty_some [of \"{h. red_ch_cd G f m h}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. tw_cmpser G m f \\<Longrightarrow> {h. red_ch_cd G f m h} \\<noteq> {}", "apply (frule ex_W_cmpserTr3m [of \"m\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     \\<exists>g.\n        tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) g \\<and>\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n        f ` {i. i \\<le> m}\\<rbrakk>\n    \\<Longrightarrow> {h. red_ch_cd G f m h} \\<noteq> {}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     \\<exists>g.\n        tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0) g \\<and>\n        g ` {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n        f ` {i. i \\<le> m}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. red_ch_cd G f m x", "apply (simp add:red_ch_cd_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) red_chain_m:\"tw_cmpser G m f \\<Longrightarrow> \n      tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) (red_chain G m f) \\<and> \n      (red_chain G m f) `{i. i \\<le> (card (f `{i. i \\<le> m}) - 1)} = f ` {i. i \\<le> m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tw_cmpser G m f \\<Longrightarrow>\n    tW_cmpser G (card (f ` {i. i \\<le> m}) - 1) (red_chain G m f) \\<and>\n    red_chain G m f ` {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n    f ` {i. i \\<le> m}", "apply (frule red_chainTr0m1_1 [of \"m\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     (SOME g. g \\<in> {h. red_ch_cd G f m h})\n     \\<in> {h. red_ch_cd G f m h}\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - 1)\n                       (red_chain G m f) \\<and>\n                      red_chain G m f `\n                      {i. i \\<le> card (f ` {i. i \\<le> m}) - 1} =\n                      f ` {i. i \\<le> m}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     red_ch_cd G f m (Eps (red_ch_cd G f m))\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0)\n                       (red_chain G m f) \\<and>\n                      red_chain G m f `\n                      {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}", "apply (simp add:red_ch_cd_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tw_cmpser G m f;\n     tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0)\n      (Eps (red_ch_cd G f m)) \\<and>\n     Eps (red_ch_cd G f m) `\n     {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n     f ` {i. i \\<le> m}\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G (card (f ` {i. i \\<le> m}) - Suc 0)\n                       (red_chain G m f) \\<and>\n                      red_chain G m f `\n                      {i. i \\<le> card (f ` {i. i \\<le> m}) - Suc 0} =\n                      f ` {i. i \\<le> m}", "apply (simp add:red_chain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Chain of groups II\""], ["", "definition\n  Gchain :: \"[nat, nat \\<Rightarrow> (('a set), 'more) Group_scheme] \\<Rightarrow> bool\" where\n  \"Gchain n g \\<longleftrightarrow> (\\<forall>l \\<le> n. Group (g l))\""], ["", "definition\n  isom_Gchains :: \"[nat, nat \\<Rightarrow> nat, nat \\<Rightarrow> (('a set), 'more) Group_scheme, \n            nat \\<Rightarrow> (('a set), 'more) Group_scheme]  \\<Rightarrow> bool\" where\n  \"isom_Gchains n f g h \\<longleftrightarrow> (\\<forall>i \\<le> n. (g i) \\<cong> (h (f i)))\""], ["", "(* g, h are sequences of groups and f is gbijection of Nset to Nset *)"], ["", "definition\n Gch_bridge :: \"[nat, nat \\<Rightarrow> (('a set), 'more) Group_scheme, nat \\<Rightarrow> \n             (('a set), 'more) Group_scheme, nat \\<Rightarrow> nat]  \\<Rightarrow> bool\" where\n \"Gch_bridge n g h f \\<longleftrightarrow> (\\<forall>l \\<le> n. f l \\<le> n) \\<and> inj_on f {i. i \\<le> n} \\<and> \n                         isom_Gchains n f g h\""], ["", "lemma Gchain_pre:\"Gchain (Suc n) g \\<Longrightarrow> Gchain n g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gchain (Suc n) g \\<Longrightarrow> Gchain n g", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) isom_unit:\"\\<lbrakk>G \\<guillemotright> H; G \\<guillemotright> K; H = {\\<one>}\\<rbrakk>  \\<Longrightarrow> \n                                    Gp G H \\<cong> Gp G K \\<longrightarrow> K = {\\<one>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<guillemotright> K ;\n     H = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>H) \\<cong> (\\<natural>K) \\<longrightarrow>\n                      K = {\\<one>}", "apply (simp add:isomorphic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n     H = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>f.\n                          gbij\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f) \\<longrightarrow>\n                      K = {\\<one>}", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n     H = {\\<one>};\n     \\<exists>f.\n        gbij\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f\\<rbrakk>\n    \\<Longrightarrow> K = {\\<one>}", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>};\n        gbij\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (simp add:gbijec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>};\n        gsurj\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f \\<and>\n        ginj\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>};\n        gsurj\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f;\n        ginj\\<^bsub>(\\<natural>{\\<one>}),(\\<natural>K)\\<^esub> f\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (simp add:gsurjec_def ginjec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K) \\<and>\n        surj_to f (carrier (\\<natural>{\\<one>})) (carrier (\\<natural>K));\n        inj_on f (carrier (\\<natural>{\\<one>}))\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>}; inj_on f (carrier (\\<natural>{\\<one>}));\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        surj_to f (carrier (\\<natural>{\\<one>}))\n         (carrier (\\<natural>K))\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>}; f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        surj_to f {\\<one>} K\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (simp add:surj_to_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>}; f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        {f \\<one>} = K\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (cut_tac a = \"f \\<one>\" in finite1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>}; f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        {f \\<one>} = K; finite {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (frule sg_unit_closed [of \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>}; f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        {f \\<one>} = K; finite {f \\<one>}; \\<one> \\<in> K\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (frule singleton_sub[of \"\\<one>\" \"K\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ;\n        H = {\\<one>}; f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        {f \\<one>} = K; finite {f \\<one>}; \\<one> \\<in> K;\n        {\\<one>} \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (rotate_tac 4, frule sym, thin_tac \"{f \\<one>} = K\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> K = {\\<one>}", "apply (rule card_seteq[THEN sym, of \"K\" \"{\\<one>}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> finite K\n 2. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> {\\<one>} \\<subseteq> K\n 3. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> card K \\<le> card {\\<one>}", "apply (simp add:finite1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> {\\<one>} \\<subseteq> K\n 2. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> card K \\<le> card {\\<one>}", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>finite {f \\<one>}; \\<one> \\<in> K; {\\<one>} \\<subseteq> K;\n        G \\<guillemotright> {\\<one>} ; G \\<guillemotright> K ; H = {\\<one>};\n        f \\<in> gHom (\\<natural>{\\<one>}) (\\<natural>K);\n        K = {f \\<one>}\\<rbrakk>\n       \\<Longrightarrow> card K \\<le> card {\\<one>}", "apply (simp add:card1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr4:\"\\<lbrakk>Group F; Group G; Ugp E; F \\<cong> G; F \\<cong> E\\<rbrakk> \\<Longrightarrow>\n                                 G \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; Ugp E; F \\<cong> G; F \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> G \\<cong> E", "apply (simp add:Ugp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G;\n     Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>}; F \\<cong> G;\n     F \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> G \\<cong> E", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; F \\<cong> G; F \\<cong> E; Group E;\n     carrier E = {\\<one>\\<^bsub>E\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> G \\<cong> E", "apply (frule isomTr1 [of \"F\" \"G\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group F; Group G; F \\<cong> G; F \\<cong> E; Group E;\n     carrier E = {\\<one>\\<^bsub>E\\<^esub>}; G \\<cong> F\\<rbrakk>\n    \\<Longrightarrow> G \\<cong> E", "apply (rule isomTr2 [of \"G\" \"F\" \"E\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_cmp:\"\\<lbrakk>Gchain n g; Gchain n h; f1 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}; \n           f2 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}; isom_Gchains n (cmp f2 f1) g h\\<rbrakk> \\<Longrightarrow> \n             isom_Gchains n f1 g (cmp h f2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain n g; Gchain n h;\n     f1 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n};\n     f2 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n};\n     isom_Gchains n (cmp f2 f1) g h\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n f1 g (cmp h f2)", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain n g; Gchain n h;\n     f1 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n};\n     f2 \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n};\n     \\<forall>i\\<le>n. g i \\<cong> h (cmp f2 f1 i)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n. g i \\<cong> cmp h f2 (f1 i)", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_transp:\"\\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk> \\<Longrightarrow> \n                 isom_Gchains n (transpos i j) f (cmp  f (transpos i j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (transpos i j) f (cmp f (transpos i j))", "apply (rule isom_gch_cmp [of \"n\" \"f\" _ \"transpos i j\" \"transpos i j\"],\n                                                                 assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> transpos i j\n                      \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}\n 2. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> transpos i j\n                      \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}\n 3. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (cmp (transpos i j) (transpos i j)) f f", "apply (rule transpos_hom, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 2. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> transpos i j\n                      \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}\n 3. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (cmp (transpos i j) (transpos i j)) f f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> transpos i j\n                      \\<in> {i. i \\<le> n} \\<rightarrow> {i. i \\<le> n}\n 2. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (cmp (transpos i j) (transpos i j)) f f", "apply (rule transpos_hom, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 2. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (cmp (transpos i j) (transpos i j)) f f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (cmp (transpos i j) (transpos i j)) f f", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain n f; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ia\\<le>n.\n                         f ia \\<cong>\n                         f (cmp (transpos i j) (transpos i j) ia)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f ia \\<cong>\n                         f (cmp (transpos i j) (transpos i j) ia)", "apply (frule less_le_trans [of \"i\" \"j\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n; i < n\\<rbrakk>\n       \\<Longrightarrow> f ia \\<cong>\n                         f (cmp (transpos i j) (transpos i j) ia)", "apply (frule less_imp_le [of \"i\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n; i < n;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f ia \\<cong>\n                         f (cmp (transpos i j) (transpos i j) ia)", "apply (frule_tac k = ia in cmp_transpos1 [of \"i\" \"n\" \"j\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n; i < n;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> i \\<noteq> j\n 2. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n; i < n;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> ia \\<le> n\n 3. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n; i < n; i \\<le> n;\n        cmp (transpos i j) (transpos i j) ia = ia\\<rbrakk>\n       \\<Longrightarrow> f ia \\<cong>\n                         f (cmp (transpos i j) (transpos i j) ia)", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>Gchain n f; j \\<le> n; i < j; ia \\<le> n;\n        cmp (transpos i j) (transpos i j) ia = ia\\<rbrakk>\n       \\<Longrightarrow> f ia \\<cong> f ia", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr0:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n;\n i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow>\n {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} ={i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n                      {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n                      {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> h i \\<cong> E} -\n                                  {i, j}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia);\n        x \\<le> n \\<and>\n        g x \\<cong> E \\<and> x \\<noteq> i \\<and> x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (cut_tac x = x in transpos_id_1 [of \"i\" \"n\" \"j\"], simp+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (subgoal_tac \"g x \\<cong> h (transpos i j x)\",\n       thin_tac \"\\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (subgoal_tac \"Group (g x)\", subgoal_tac \"Group (h x)\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x); Group (h x)\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (simp add:Ugp_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n        Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n; g x \\<cong> E;\n        x \\<noteq> i; x \\<noteq> j; transpos i j x = x; g x \\<cong> h x;\n        Group (g x); Group (h x)\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (erule conjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x); Group (h x); Group E;\n        carrier E = {\\<one>\\<^bsub>E\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (frule_tac F = \"g x\" and G = \"h x\" in isomTr1, assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x); Group (h x); Group E;\n        carrier E = {\\<one>\\<^bsub>E\\<^esub>}; h x \\<cong> g x\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (rule_tac F = \"h x\" and G = \"g x\" and H = E in isomTr2, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (simp add:Gchain_def, simp add:Gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (thin_tac \"transpos i j x = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        g x \\<cong> E; x \\<noteq> i; x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                  {i, j}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia);\n        x \\<le> n \\<and>\n        h x \\<cong> E \\<and> x \\<noteq> i \\<and> x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E", "apply (cut_tac x = x in transpos_id_1 [of \"i\" \"n\" \"j\"], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E", "apply (subgoal_tac \"g x \\<cong> h (transpos i j x)\",\n       thin_tac \"\\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h (transpos i j x)\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply (subgoal_tac \"Group (g x)\",\n       subgoal_tac \"Group (h x)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x); Group (h x)\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply (simp add:Ugp_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n        Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n; h x \\<cong> E;\n        x \\<noteq> i; x \\<noteq> j; transpos i j x = x; g x \\<cong> h x;\n        Group (g x); Group (h x)\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply (erule conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x); Group (h x); Group E;\n        carrier E = {\\<one>\\<^bsub>E\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 4. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply (rule_tac F = \"g x\" and G = \"h x\" and H = E in isomTr2, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x; Group (g x)\\<rbrakk>\n       \\<Longrightarrow> Group (h x)\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j; x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j; transpos i j x = x;\n        g x \\<cong> h x\\<rbrakk>\n       \\<Longrightarrow> Group (g x)\n 3. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply (simp add:Gchain_def, simp add:Gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j;\n        transpos i j x = x\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply (thin_tac \"transpos i j x = x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n        \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia); x \\<le> n;\n        h x \\<cong> E; x \\<noteq> i; x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> g x \\<cong> h (transpos i j x)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr1:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E; \n      i \\<noteq> j\\<rbrakk> \\<Longrightarrow> \n      insert j ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) = {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> insert j\n                       ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) =\n                      {i. i \\<le> n \\<and> g i \\<cong> E} - {i}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> insert j\n                       ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n 2. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n                      \\<subseteq> insert j\n                                   ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                                    {i, j})", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n        i \\<noteq> j;\n        x \\<in> insert j\n                 ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n 2. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n                      \\<subseteq> insert j\n                                   ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                                    {i, j})", "apply (simp add:CollectI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n        i \\<noteq> j;\n        x = j \\<or>\n        x \\<le> n \\<and>\n        g x \\<cong> E \\<and> x \\<noteq> i \\<and> x \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n \\<and> g x \\<cong> E \\<and> x \\<noteq> i\n 2. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n                      \\<subseteq> insert j\n                                   ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                                    {i, j})", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n                      \\<subseteq> insert j\n                                   ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                                    {i, j})", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g j \\<cong> E;\n        i \\<noteq> j;\n        x \\<in> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert j\n                                  ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                                   {i, j})", "apply (simp add:CollectI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr2:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; i < j;\n      g i \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> n \\<and> g i \\<cong> E} = insert i ({i. i \\<le> n \\<and>  g i \\<cong> E} - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; i < j;\n     g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      insert i ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; i < j;\n     g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> insert i\n                                   ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                                    {i})\n 2. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; i < j;\n     g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert i ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; i < j;\n     g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert i ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; j \\<le> n; i < j; g i \\<cong> E;\n        x = i \\<or> x \\<le> n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n \\<and> g x \\<cong> E", "apply (erule disjE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain n g; j \\<le> n; i < j; g i \\<cong> E;\n        x \\<le> n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n \\<and> g x \\<cong> E", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr3:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})", "apply (rule finite_subset[of \"{i. i \\<le> n \\<and> g i \\<cong> E} - {i}\" \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n                      \\<subseteq> {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n}", "apply (rule subsetI, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr4:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})", "apply (rule finite_subset[of \"{i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}\" \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}\n                      \\<subseteq> {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n}", "apply (rule subsetI, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr5_1:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> (n::nat);\n      j \\<le> n; i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow> g i \\<cong> h j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h\\<rbrakk>\n    \\<Longrightarrow> g i \\<cong> h j", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> g i \\<cong> h j", "apply (frule_tac a = i in forall_spec,\n       frule_tac x = i and y = j and z = n in less_le_trans,\n       assumption+, simp,\n       thin_tac \"\\<forall>ia \\<le> n. g ia \\<cong> h (transpos i j ia)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     g i \\<cong> h (transpos i j i)\\<rbrakk>\n    \\<Longrightarrow> g i \\<cong> h j", "apply (simp add:transpos_ij_1 [of \"i\" \"n\" \"j\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr5_2:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; \n      j \\<le> n; i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow> g j \\<cong> h i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h\\<rbrakk>\n    \\<Longrightarrow> g j \\<cong> h i", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     \\<forall>ia\\<le>n. g ia \\<cong> h (transpos i j ia)\\<rbrakk>\n    \\<Longrightarrow> g j \\<cong> h i", "apply (frule_tac x = j in spec,\n       thin_tac \"\\<forall>ia\\<le> n. g ia \\<cong> h (transpos i j ia)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; j \\<le> n; i < j;\n     j \\<le> n \\<longrightarrow> g j \\<cong> h (transpos i j j)\\<rbrakk>\n    \\<Longrightarrow> g j \\<cong> h i", "apply (simp add:transpos_ij_2 [of \"i\" \"n\" \"j\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr6:\"\\<lbrakk>Gchain n g; i \\<le> n\\<rbrakk> \\<Longrightarrow> Group (g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain n g; i \\<le> n\\<rbrakk> \\<Longrightarrow> Group (g i)", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr7:\"\\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; \n      Group (h i); Group (g j); \\<not> g j \\<cong> E\\<rbrakk> \\<Longrightarrow>  \\<not> h i \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h i \\<cong> E", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule isomTr2 [of \"g j\" \"h i\" \"E\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group E\n 2. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> g j \\<cong> h i\n 3. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h i \\<cong> E\n 4. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E;\n     g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:Ugp_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> g j \\<cong> h i\n 2. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h i \\<cong> E\n 3. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E;\n     g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; i \\<le> n; j \\<le> n; g j \\<cong> h i; Group (h i);\n     Group (g j); \\<not> g j \\<cong> E; h i \\<cong> E;\n     g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_transpTr8_1:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; \n      g i \\<cong> E; \\<not> g j \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> n \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E} - { j }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      {i. i \\<le> n \\<and> g i \\<cong> E} - {j}", "by auto"], ["", "lemma isom_gch_units_transpTr8_2:\"\\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n;\n       \\<not> g i \\<cong> E; \\<not> g j \\<cong> E\\<rbrakk> \\<Longrightarrow> \n       {i. i \\<le> n \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; i \\<le> n; j \\<le> n; \\<not> g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}", "by auto"], ["", "lemma isom_gch_units_transp:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; \n      i < j; isom_Gchains n (transpos i j) g h\\<rbrakk> \\<Longrightarrow>  \n       card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr0 [of \"E\" \"n\" \"g\" \"h\" \"i\" \"j\"], \n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr6 [of \"n\" \"g\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr6 [of \"n\" \"h\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr6 [of \"n\" \"g\" \"j\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr6 [of \"n\" \"h\" \"j\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (unfold Ugp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n     Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule conjunct1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group E \\<and> carrier E = {\\<one>\\<^bsub>E\\<^esub>};\n     Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (fold Ugp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr5_1 [of \"E\" \"n\" \"g\" \"h\" \"i\" \"j\"], \n                                                          assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr5_2 [of \"E\" \"n\" \"g\" \"h\" \"i\" \"j\"], \n                                                          assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (case_tac \"g i \\<cong> E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (case_tac \"g j \\<cong> E\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "(** g i \\<cong> E and g j \\<cong> E **)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr2 [of \"E\" \"n\" \"g\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert i\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr2 [of \"E\" \"n\" \"h\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h i \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert i\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr4 [of \"g j\" \"h i\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert i\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr3, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E} - {i}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E} - {i}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      Suc (card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr3, assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E} - {i}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      Suc (card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} - {i})) =\n                      Suc (card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr1[THEN sym, of \"E\" \"n\" \"g\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                               {i, j}))) =\n                      Suc (card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                               {i, j}))) =\n                      Suc (card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr1[THEN sym, of \"E\" \"n\" \"h\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h j \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                               {i, j}))) =\n                      Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> h i \\<cong> E} -\n                               {i, j})))\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr4 [of \"g i\" \"h j\" \"E\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                               {i, j}))) =\n                      Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> h i \\<cong> E} -\n                               {i, j})))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                               {i, j}))) =\n                      Suc (card\n                            (insert j\n                              ({i. i \\<le> n \\<and> h i \\<cong> E} -\n                               {i, j})))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr8_1 [of \"E\" \"n\" \"g\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {j}) =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr8_1 [of \"E\" \"n\" \"h\" \"j\" \"i\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h j \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h i \\<cong> E\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {j}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr4 [of \"g i\" \"h j\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h i \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {j}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr7 [of \"E\" \"i\" \"n\" \"j\" \"g\" \"h\"], \n                                                        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {j}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr1 [THEN sym, of \"E\" \"n\" \"g\" \"j\" \"i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> j \\<noteq> i\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert i\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {j, i})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert i\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {j, i})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite ({i. i \\<le> n \\<and> g i \\<cong> E} - {j, i})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                 {j, i}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr4, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E} -\n                                 {j, i}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr1 [THEN sym, of \"E\" \"n\" \"h\" \"i\" \"j\"],\n                                                                assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h j \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      card\n                       (insert j\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr4 [of \"g i\" \"h j\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      card\n                       (insert j\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      card\n                       (insert j\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> j \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E} -\n                                 {i, j}\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      Suc (card\n                            ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr4, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> j \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E} -\n                                 {i, j}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      Suc (card\n                            ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E;\n     \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      Suc (card\n                            ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (insert Nset_2 [of \"j\" \"i\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; g i \\<cong> E; \\<not> g j \\<cong> E;\n     {j, i} = {i, j}\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> n \\<and> g i \\<cong> E} -\n                             {j, i})) =\n                      Suc (card\n                            ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (case_tac \"g j \\<cong> E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr8_1 [of \"E\" \"n\" \"g\" \"j\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i}) =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr8_1 [of \"E\" \"n\" \"h\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h i \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h j \\<cong> E\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {j})\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr4 [of \"g j\" \"h i\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h j \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {j})\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr7 [of \"E\" \"j\" \"n\" \"i\" \"g\" \"h\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {j})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr1 [THEN sym, of \"E\" \"n\" \"g\" \"i\" \"j\"],\n                                                              assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> j\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert j\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {j})\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert j\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {j})\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr1 [THEN sym, of \"E\" \"n\" \"h\" \"j\" \"i\"],\n                                                              assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h i \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> j \\<noteq> i\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert j\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {j, i}))\n 4. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr4 [of \"g j\" \"h i\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> j \\<noteq> i\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert j\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {j, i}))\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert j\n                         ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j})) =\n                      card\n                       (insert i\n                         ({i. i \\<le> n \\<and> h i \\<cong> E} - {j, i}))\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr8_2 [of \"E\" \"n\" \"g\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (subst isom_gch_units_transpTr8_2 [of \"E\" \"n\" \"h\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h i \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h j \\<cong> E\n 3. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j})", "apply (rule isom_gch_units_transpTr7[of \"E\" \"i\" \"n\" \"j\" \"g\" \"h\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> h j \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j})", "apply (rule isom_gch_units_transpTr7[of \"E\" \"j\" \"n\" \"i\" \"g\" \"h\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) g h;\n     {i. i \\<le> n \\<and> g i \\<cong> E} - {i, j} =\n     {i. i \\<le> n \\<and> h i \\<cong> E} - {i, j};\n     Group (g i); Group (h i); Group (g j); Group (h j); Group E;\n     g i \\<cong> h j; g j \\<cong> h i; \\<not> g i \\<cong> E;\n     {j, i} = {i, j}; \\<not> g j \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card ({i. i \\<le> n \\<and> g i \\<cong> E} - {i, j}) =\n                      card ({i. i \\<le> n \\<and> h i \\<cong> E} - {i, j})", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma TR_isom_gch_units:\"\\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk> \\<Longrightarrow>\n      card {k. k \\<le> n \\<and> f k \\<cong> E} = card {k. k \\<le> n \\<and> \n      (cmp f (transpos i j)) k \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> card {k. k \\<le> n \\<and> f k \\<cong> E} =\n                      card\n                       {k. k \\<le> n \\<and>\n                           cmp f (transpos i j) k \\<cong> E}", "apply (frule isom_gch_transp [of \"n\" \"f\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> card {k. k \\<le> n \\<and> f k \\<cong> E} =\n                      card\n                       {k. k \\<le> n \\<and>\n                           cmp f (transpos i j) k \\<cong> E}", "(* apply (subgoal_tac \"Gchain n (cmp f (transpos i j))\") *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> card {k. k \\<le> n \\<and> f k \\<cong> E} =\n                      card\n                       {k. k \\<le> n \\<and>\n                           cmp f (transpos i j) k \\<cong> E}", "apply (rule isom_gch_units_transp [of \"E\" \"n\" \"f\" _ \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> Gchain n (cmp f (transpos i j))\n 2. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 3. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 4. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i < j\n 5. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (transpos i j) f (cmp f (transpos i j))", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n. Group (cmp f (transpos i j) l)\n 2. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 3. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 4. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i < j\n 5. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (transpos i j) f (cmp f (transpos i j))", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n        isom_Gchains n (transpos i j) f (cmp f (transpos i j));\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp f (transpos i j) l)\n 2. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 3. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 4. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i < j\n 5. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (transpos i j) f (cmp f (transpos i j))", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n        isom_Gchains n (transpos i j) f (\\<lambda>x. f (transpos i j x));\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (f (transpos i j l))\n 2. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 3. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 4. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i < j\n 5. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (transpos i j) f (cmp f (transpos i j))", "apply (cut_tac l = l in transpos_mem [of \"i\" \"n\" \"j\"],\n       frule_tac x = i and y = j and z = n in less_le_trans, assumption+,\n       simp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n        isom_Gchains n (transpos i j) f (\\<lambda>x. f (transpos i j x));\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 2. \\<And>l.\n       \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n        isom_Gchains n (transpos i j) f (\\<lambda>x. f (transpos i j x));\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> i \\<noteq> j\n 3. \\<And>l.\n       \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n        isom_Gchains n (transpos i j) f (\\<lambda>x. f (transpos i j x));\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> l \\<le> n\n 4. \\<And>l.\n       \\<lbrakk>Ugp E; \\<forall>l\\<le>n. Group (f l); j \\<le> n; i < j;\n        isom_Gchains n (transpos i j) f (\\<lambda>x. f (transpos i j x));\n        l \\<le> n; transpos i j l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (f (transpos i j l))\n 5. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 6. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> j \\<le> n\n 7. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> i < j\n 8. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     isom_Gchains n (transpos i j) f (cmp f (transpos i j))\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (transpos i j) f (cmp f (transpos i j))", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma TR_isom_gch_units_1:\"\\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>  \\<Longrightarrow>  \n      card {k. k \\<le> n \\<and> f k \\<cong> E} = card {k. k \\<le> n \\<and> f (transpos i j k) \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j\\<rbrakk>\n    \\<Longrightarrow> card {k. k \\<le> n \\<and> f k \\<cong> E} =\n                      card\n                       {k. k \\<le> n \\<and> f (transpos i j k) \\<cong> E}", "apply (frule TR_isom_gch_units [of \"E\" \"n\" \"f\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n f; i \\<le> n; j \\<le> n; i < j;\n     card {k. k \\<le> n \\<and> f k \\<cong> E} =\n     card {k. k \\<le> n \\<and> cmp f (transpos i j) k \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> card {k. k \\<le> n \\<and> f k \\<cong> E} =\n                      card\n                       {k. k \\<le> n \\<and> f (transpos i j k) \\<cong> E}", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_tgch_unitsTr0_1:\"\\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> (Suc n) \\<and> g i \\<cong> E} = insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> g i \\<cong> E}\n                      \\<subseteq> insert (Suc n)\n                                   {i. i \\<le> n \\<and> g i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<in> {i. i \\<le> Suc n \\<and> g i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert (Suc n)\n                                  {i. i \\<le> n \\<and> g i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (simp add:CollectI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<le> Suc n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x = Suc n \\<or> x \\<le> n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (case_tac \"x = Suc n\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<le> Suc n \\<and> g x \\<cong> E; x = Suc n\\<rbrakk>\n       \\<Longrightarrow> x = Suc n \\<or> x \\<le> n\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<le> Suc n \\<and> g x \\<cong> E; x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x = Suc n \\<or> x \\<le> n\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<le> Suc n \\<and> g x \\<cong> E; x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x = Suc n \\<or> x \\<le> n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<noteq> Suc n; x \\<le> Suc n; g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x = Suc n \\<or> x \\<le> n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<in> insert (Suc n) {i. i \\<le> n \\<and> g i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (simp add:CollectI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x = Suc n \\<or> x \\<le> n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n \\<and> g x \\<cong> E", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x = Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n \\<and> g x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<le> n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n \\<and> g x \\<cong> E", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; g (Suc n) \\<cong> E;\n        x \\<le> n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n \\<and> g x \\<cong> E", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_tgch_unitsTr0_2:\"Ugp E  \\<Longrightarrow> finite ({i. i \\<le> (n::nat) \\<and> g i \\<cong> E})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugp E \\<Longrightarrow> finite {i. i \\<le> n \\<and> g i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> n \\<and> g i \\<cong> E}\" \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Ugp E \\<Longrightarrow>\n    {i. i \\<le> n \\<and> g i \\<cong> E} \\<subseteq> {i. i \\<le> n}\n 2. Ugp E \\<Longrightarrow> finite {i. i \\<le> n}", "apply (rule subsetI, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_tgch_unitsTr0_3:\"\\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n      \\<Longrightarrow> {i. i \\<le> (Suc n) \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      {i. i \\<le> n \\<and> g i \\<cong> E}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n \\<and> g i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E;\n        x \\<le> Suc n \\<and> g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (case_tac \"x = Suc n\", simp, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E;\n        x \\<noteq> Suc n; x \\<le> Suc n; g x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply arith"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) g; \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> Suc n \\<and> g i \\<cong> E}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_tgch_unitsTr0:\"\\<lbrakk>Ugp E; \n      card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}; \n      Gchain (Suc n) g \\<and> Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f; \n      f (Suc n) = Suc n\\<rbrakk> \\<Longrightarrow> \n      card {i. i \\<le> (Suc n) \\<and> g i \\<cong> E} = \n                                card {i. i \\<le> (Suc n) \\<and> h i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     Gchain (Suc n) g \\<and>\n     Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n     f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr6 [of \"Suc n\" \"g\" \"Suc n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Group (g (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:n_in_Nsetn)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Group (g (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_units_transpTr6 [of \"Suc n\" \"h\" \"Suc n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Group (g (Suc n))\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Group (g (Suc n)); Group (h (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:n_in_Nsetn)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Group (g (Suc n)); Group (h (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:Gch_bridge_def isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n     inj_on f {i. i \\<le> Suc n} \\<and>\n     (\\<forall>i\\<le>Suc n. g i \\<cong> h (f i));\n     Group (g (Suc n)); Group (h (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>i\\<le>Suc n. g i \\<cong> h (f i)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rotate_tac -1, \n        frule_tac a = \"Suc n\" in forall_spec,\n        thin_tac \"\\<forall>i\\<le>Suc n. g i \\<cong> h (f i)\", simp+,\n        thin_tac \"\\<forall>i\\<le>Suc n. g i \\<cong> h (f i)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n)\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (case_tac \"g (Suc n) \\<cong> E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_tgch_unitsTr0_1 [of \"E\" \"n\" \"g\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert (Suc n)\n                         {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_tgch_unitsTr0_1 [of \"E\" \"n\" \"h\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h (Suc n) \\<cong> E\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert (Suc n)\n                         {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr4 [of \"g (Suc n)\" \"h (Suc n)\" \"E\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert (Suc n)\n                         {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n \\<and> g i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> n \\<and> g i \\<cong> E}\" \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> g i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E}\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 5. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> g i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      card\n                       (insert (Suc n) {i. i \\<le> n \\<and> h i \\<cong> E})\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      Suc (card {i. i \\<le> n \\<and> h i \\<cong> E})\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> n \\<and> h i \\<cong> E}\" \"{i. i \\<le> n}\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> h i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      Suc (card {i. i \\<le> n \\<and> h i \\<cong> E})\n 5. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      Suc (card {i. i \\<le> n \\<and> h i \\<cong> E})\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<notin> {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      Suc (card {i. i \\<le> n \\<and> h i \\<cong> E})\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc (card {i. i \\<le> n \\<and> g i \\<cong> E}) =\n                      Suc (card {i. i \\<le> n \\<and> h i \\<cong> E})\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (cut_tac isom_gch_units_transpTr7[of E \"Suc n\" \"Suc n\" \"Suc n\" g h])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E;\n     \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Ugp E\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 5. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> g (Suc n) \\<cong> h (Suc n)\n 6. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (h (Suc n))\n 7. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (g (Suc n))\n 8. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> g (Suc n) \\<cong> E", "apply (subgoal_tac \"{i. i \\<le> Suc n \\<and> g i \\<cong> E} = {i. i \\<le> n \\<and> g i \\<cong> E}\",\n        subgoal_tac \"{i. i \\<le> Suc n \\<and> h i \\<cong> E} = {i. i \\<le> n \\<and> h i \\<cong> E}\",\n        simp)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E;\n     \\<not> h (Suc n) \\<cong> E;\n     {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n     {i. i \\<le> n \\<and> g i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} =\n                      {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E;\n     \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      {i. i \\<le> n \\<and> g i \\<cong> E}\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Ugp E\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 5. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 6. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> g (Suc n) \\<cong> h (Suc n)\n 7. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (h (Suc n))\n 8. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (g (Suc n))\n 9. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> g (Suc n) \\<cong> E", "apply (rule equalityI, rule subsetI, simp,\n        erule conjE, case_tac \"x = Suc n\", simp,\n        frule_tac x = x and y = \"Suc n\" in le_imp_less_or_eq,\n        thin_tac \"x \\<le> Suc n\", simp,\n        rule subsetI, simp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E;\n     \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                      {i. i \\<le> n \\<and> g i \\<cong> E}\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Ugp E\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 5. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> g (Suc n) \\<cong> h (Suc n)\n 6. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (h (Suc n))\n 7. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (g (Suc n))\n 8. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> g (Suc n) \\<cong> E", "apply (rule equalityI, rule subsetI, simp,\n        erule conjE, case_tac \"x = Suc n\", simp,\n        frule_tac m = x and n = \"Suc n\" in noteq_le_less, assumption+,\n        simp,        \n        rule subsetI, simp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Ugp E\n 2. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 4. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> g (Suc n) \\<cong> h (Suc n)\n 5. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (h (Suc n))\n 6. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Group (g (Suc n))\n 7. \\<lbrakk>Ugp E;\n     card {i. i \\<le> n \\<and> g i \\<cong> E} =\n     card {i. i \\<le> n \\<and> h i \\<cong> E};\n     f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Group (g (Suc n)); Group (h (Suc n));\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     g (Suc n) \\<cong> h (Suc n); \\<not> g (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> g (Suc n) \\<cong> E", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_1:\" \\<lbrakk>Ugp E; Gchain (Suc n) g \\<and>  Gchain (Suc n) h \n       \\<and> Gch_bridge (Suc n) g h f; f (Suc n) = Suc n\\<rbrakk> \\<Longrightarrow> \n           Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     Gchain (Suc n) g \\<and>\n     Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n     f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f", "apply (frule Gchain_pre [of \"n\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Gchain n g\\<rbrakk>\n    \\<Longrightarrow> Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f", "apply (frule Gchain_pre [of \"n\" \"h\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Gchain n g; Gchain n h\\<rbrakk>\n    \\<Longrightarrow> Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; Gchain n g; Gchain n h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g h f", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n     inj_on f {i. i \\<le> Suc n} \\<and> isom_Gchains (Suc n) f g h;\n     Gchain n g; Gchain n h\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>n. f l \\<le> n) \\<and>\n                      inj_on f {i. i \\<le> n} \\<and> isom_Gchains n f g h", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>n. f l \\<le> n) \\<and>\n                      inj_on f {i. i \\<le> n} \\<and> isom_Gchains n f g h", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n. f l \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n} \\<and> isom_Gchains n f g h", "apply (rule Nset_injTr2, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n} \\<and> isom_Gchains n f g h", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> n}\n 2. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n f g h", "apply (rule Nset_injTr1, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) = Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n     Gchain n g; Gchain n h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n f g h", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_2:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i\\<le>(Suc n)};\n        \\<forall>l \\<le> (Suc n). f l \\<le> (Suc n)\\<rbrakk> \\<Longrightarrow> \n        (cmp (transpos (f (Suc n)) (Suc n)) f) (Suc n) = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f (Suc n)) = Suc n", "apply (cut_tac n_in_Nsetn[of \"Suc n\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f (Suc n)) = Suc n", "apply (frule_tac a = \"Suc n\" in forall_spec, \n      simp,\n      thin_tac \"\\<forall>l\\<le>Suc n. f l \\<le> Suc n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     f (Suc n) \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f (Suc n)) = Suc n", "apply (rule transpos_ij_1, assumption+, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_3:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; \n     \\<forall>l \\<le> (Suc n). f l \\<le> (Suc n); inj_on f {i. i \\<le> (Suc n)}\\<rbrakk> \\<Longrightarrow> \n      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> (Suc n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}", "apply (cut_tac n_in_Nsetn[of \"Suc n\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}", "apply (frule_tac a = \"Suc n\" in forall_spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     f (Suc n) \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}", "apply (frule transpos_hom [of \"f (Suc n)\" \"Suc n\" \"Suc n\"], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}", "thm transpos_inj"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}", "apply (cut_tac transpos_inj [of \"f (Suc n)\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n};\n     inj_on (transpos (f (Suc n)) (Suc n)) {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<le> Suc n\n 3. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 4. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<noteq> Suc n", "apply (cut_tac cmp_inj_1 [of f \"{i. i \\<le> (Suc n)}\" \"{i. i \\<le> (Suc n)}\"\n       \"transpos (f (Suc n)) (Suc n)\" \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n};\n     inj_on (transpos (f (Suc n)) (Suc n)) {i. i \\<le> Suc n};\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n      {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n};\n     inj_on (transpos (f (Suc n)) (Suc n)) {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> f \\<in> {i. i \\<le> Suc n} \\<rightarrow>\n                              {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n};\n     inj_on (transpos (f (Suc n)) (Suc n)) {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on f {i. i \\<le> Suc n}\n 4. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n};\n     inj_on (transpos (f (Suc n)) (Suc n)) {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> transpos (f (Suc n)) (Suc n)\n                      \\<in> {i. i \\<le> Suc n} \\<rightarrow>\n                            {i. i \\<le> Suc n}\n 5. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n};\n     inj_on (transpos (f (Suc n)) (Suc n)) {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (transpos (f (Suc n)) (Suc n))\n                       {i. i \\<le> Suc n}\n 6. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<le> Suc n\n 7. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 8. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     transpos (f (Suc n)) (Suc n)\n     \\<in> {i. i \\<le> Suc n} \\<rightarrow> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> f (Suc n) \\<noteq> Suc n", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_4:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i\\<le>(Suc n)};\n                   \\<forall>l \\<le> (Suc n). f l \\<le> (Suc n)\\<rbrakk> \\<Longrightarrow> \n                    inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n}", "apply (frule isom_gch_unitsTr1_3 [of \"E\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n      {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n}", "apply (frule isom_gch_unitsTr1_2 [of \"E\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n}", "apply (rule Nset_injTr1 [of \"n\" \"(cmp (transpos (f (Suc n)) (Suc n)) f)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>Suc n.\n                         cmp (transpos (f (Suc n)) (Suc n)) f l \\<le> Suc n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        inj_on f {i. i \\<le> Suc n}; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f l \\<le> Suc n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        inj_on f {i. i \\<le> Suc n}; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on (\\<lambda>x. transpos (f (Suc n)) (Suc n) (f x))\n         {i. i \\<le> Suc n};\n        transpos (f (Suc n)) (Suc n) (f (Suc n)) = Suc n;\n        l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; inj_on f {i. i \\<le> Suc n};\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n     cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n    \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n", "apply (cut_tac l = \"f l\" in transpos_mem[of \"f (Suc n)\" \"Suc n\" \"Suc n\"], \n       simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_5:\"\\<lbrakk>Ugp E; Gchain (Suc n) g \\<and> Gchain (Suc n) h \\<and> \n      Gch_bridge (Suc n) g h f; f (Suc n) \\<noteq> Suc n \\<rbrakk> \\<Longrightarrow> \n      Gchain n g \\<and> Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and> \n      Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n))) \n                               (cmp (transpos (f (Suc n)) (Suc n)) f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E;\n     Gchain (Suc n) g \\<and>\n     Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n     f (Suc n) \\<noteq> Suc n\\<rbrakk>\n    \\<Longrightarrow> Gchain n g \\<and>\n                      Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain n g \\<and>\n                      Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gchain_pre [of \"n\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain n (cmp h (transpos (f (Suc n)) (Suc n)))\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     \\<forall>l\\<le>Suc n. Group (g l); \\<forall>l\\<le>Suc n. Group (h l);\n     Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n.\n                         Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l);\n        (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n        inj_on f {i. i \\<le> Suc n} \\<and> isom_Gchains (Suc n) f g h;\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (frule conjunct1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l);\n        (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n        inj_on f {i. i \\<le> Suc n} \\<and> isom_Gchains (Suc n) f g h;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (fold Gch_bridge_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (cut_tac n_in_Nsetn[of \"Suc n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (cut_tac l = l in transpos_mem [of \"f (Suc n)\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<le> Suc n\n 2. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<noteq> Suc n\n 4. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> l \\<le> Suc n\n 5. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n};\n        transpos (f (Suc n)) (Suc n) l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 6. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (g l);\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        l \\<le> n; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        transpos (f (Suc n)) (Suc n) l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h;\n     (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n     inj_on f {i. i \\<le> Suc n} \\<and> isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>n.\n                          cmp (transpos (f (Suc n)) (Suc n)) f l\n                          \\<le> n) \\<and>\n                      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>n.\n                          cmp (transpos (f (Suc n)) (Suc n)) f l\n                          \\<le> n) \\<and>\n                      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n.\n                         cmp (transpos (f (Suc n)) (Suc n)) f l \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (cut_tac n_in_Nsetn[of \"Suc n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n.\n                         cmp (transpos (f (Suc n)) (Suc n)) f l \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule allI, rule impI, simp add:cmp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (frule isom_gch_unitsTr1_2 [of \"E\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (frule isom_gch_unitsTr1_3 [of \"E\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n         {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (cut_tac l = \"f l\" in transpos_mem[of \"f (Suc n)\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n         {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<le> Suc n\n 2. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n         {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n         {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<noteq> Suc n\n 4. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n         {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> f l \\<le> Suc n\n 5. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n        transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 6. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        inj_on (cmp (transpos (f (Suc n)) (Suc n)) f) {i. i \\<le> Suc n};\n        transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (simp add:inj_on_def[of \"cmp (transpos (f (Suc n)) (Suc n)) f\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        \\<forall>x\\<le>Suc n.\n           \\<forall>y\\<le>Suc n.\n              cmp (transpos (f (Suc n)) (Suc n)) f x =\n              cmp (transpos (f (Suc n)) (Suc n)) f y \\<longrightarrow>\n              x = y;\n        transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rotate_tac -2,\n        frule_tac a = \"Suc n\" in forall_spec, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>x\\<le>Suc n.\n                   \\<forall>y\\<le>Suc n.\n                      cmp (transpos (f (Suc n)) (Suc n)) f x =\n                      cmp (transpos (f (Suc n)) (Suc n)) f\n                       y \\<longrightarrow>\n                      x = y;\n        transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n; Ugp E;\n        f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        \\<forall>y\\<le>Suc n.\n           cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n           cmp (transpos (f (Suc n)) (Suc n)) f y \\<longrightarrow>\n           Suc n = y\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (\n        thin_tac \"\\<forall>x\\<le>Suc n.\n            \\<forall>y\\<le>Suc n.\n               cmp (transpos (f (Suc n)) (Suc n)) f x =\n               cmp (transpos (f (Suc n)) (Suc n)) f y \\<longrightarrow>\n               x = y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n; Ugp E;\n        f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        \\<forall>y\\<le>Suc n.\n           cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n           cmp (transpos (f (Suc n)) (Suc n)) f y \\<longrightarrow>\n           Suc n = y\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (\n        rotate_tac -1,\n        frule_tac x = l in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>y\\<le>Suc n.\n                   cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                   cmp (transpos (f (Suc n)) (Suc n)) f y \\<longrightarrow>\n                   Suc n = y;\n        transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n; Ugp E;\n        f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        l \\<le> Suc n \\<longrightarrow>\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n        cmp (transpos (f (Suc n)) (Suc n)) f l \\<longrightarrow>\n        Suc n = l\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (\n        thin_tac \"\\<forall>y\\<le>Suc n.\n            cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n            cmp (transpos (f (Suc n)) (Suc n)) f y \\<longrightarrow>\n            Suc n = y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n; Ugp E;\n        f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g; Gchain (Suc n) h;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        l \\<le> Suc n \\<longrightarrow>\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n        cmp (transpos (f (Suc n)) (Suc n)) f l \\<longrightarrow>\n        Suc n = l\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (metis Nfunc_iNJTr comp_transpos_1 le_SucE le_SucI le_refl less_Suc_eq_le transpos_ij_2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> n} \\<and>\n                      isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (simp add:isom_gch_unitsTr1_4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains n (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       g (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (simp add:isom_Gchains_def[of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n.\n                         g i \\<cong>\n                         cmp h (transpos (f (Suc n)) (Suc n))\n                          (cmp (transpos (f (Suc n)) (Suc n)) f i)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         cmp h (transpos (f (Suc n)) (Suc n))\n                          (cmp (transpos (f (Suc n)) (Suc n)) f i)", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply (cut_tac l = \"f i\" in transpos_mem[of \"f (Suc n)\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<le> Suc n\n 2. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<noteq> Suc n\n 4. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> f i \\<le> Suc n\n 5. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply (cut_tac k = \"f i\" in cmp_transpos1 [of \"f (Suc n)\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<le> Suc n\n 2. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<noteq> Suc n\n 4. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> f i \\<le> Suc n\n 5. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) (transpos (f (Suc n)) (Suc n))\n         (f i) =\n        f i\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) (transpos (f (Suc n)) (Suc n))\n         (f i) =\n        f i\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n;\n        transpos (f (Suc n)) (Suc n) (transpos (f (Suc n)) (Suc n) (f i)) =\n        f i\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong> h (f i)", "apply (thin_tac \"transpos (f (Suc n)) (Suc n) (transpos (f (Suc n)) (Suc n) (f i)) = f i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h; i \\<le> n;\n        transpos (f (Suc n)) (Suc n) (f i) \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong> h (f i)", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_6:\"\\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g \\<and> \n       Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f\\<rbrakk>  \\<Longrightarrow> Gchain (Suc n) g \\<and>\n          Gchain (Suc n) (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n          Gch_bridge (Suc n) g (cmp h (transpos (f (Suc n)) (Suc n)))\n           (cmp (transpos (f (Suc n)) (Suc n)) f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n     Gchain (Suc n) g \\<and>\n     Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n) g \\<and>\n                      Gchain (Suc n)\n                       (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n) g \\<and>\n                      Gchain (Suc n)\n                       (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n)\n                       (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gch_bridge_def, frule conjunct1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h;\n     (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n     inj_on f {i. i \\<le> Suc n} \\<and> isom_Gchains (Suc n) f g h;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n)\n                       (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      (\\<forall>l\\<le>Suc n.\n                          cmp (transpos (f (Suc n)) (Suc n)) f l\n                          \\<le> Suc n) \\<and>\n                      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (frule conjunct2, fold Gch_bridge_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n)\n                       (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                      Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n) (cmp h (transpos (f (Suc n)) (Suc n)))\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (thin_tac \"Gchain (Suc n) g\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) h;\n     Gch_bridge (Suc n) g h f; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n) (cmp h (transpos (f (Suc n)) (Suc n)))\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gchain_def, rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos (f (Suc n)) (Suc n)) l)\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (h (transpos (f (Suc n)) (Suc n) l))\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (cut_tac n_in_Nsetn[of \"Suc n\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        \\<forall>l\\<le>Suc n. Group (h l); Gch_bridge (Suc n) g h f;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h; l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Group (h (transpos (f (Suc n)) (Suc n) l))\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (cut_tac l = l in transpos_mem [of \"f (Suc n)\" \"Suc n\" \"Suc n\"],\n       simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; Gch_bridge (Suc n) g h f;\n     \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n     isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (Suc n) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))\n                       (cmp (transpos (f (Suc n)) (Suc n)) f)", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>Suc n.\n                          cmp (transpos (f (Suc n)) (Suc n)) f l\n                          \\<le> Suc n) \\<and>\n                      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (cut_tac n_in_Nsetn[of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>Suc n.\n                          cmp (transpos (f (Suc n)) (Suc n)) f l\n                          \\<le> Suc n) \\<and>\n                      inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>Suc n.\n                         cmp (transpos (f (Suc n)) (Suc n)) f l \\<le> Suc n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        Suc n \\<in> {i. i \\<le> Suc n}; l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f l \\<le> Suc n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n        l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> transpos (f (Suc n)) (Suc n) (f l) \\<le> Suc n\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule_tac l = \"f l\" in transpos_mem [of \"f (Suc n)\" \"Suc n\" \"Suc n\"],\n       simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n} \\<and>\n                      isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> inj_on (cmp (transpos (f (Suc n)) (Suc n)) f)\n                       {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (rule isom_gch_unitsTr1_3 [of \"E\" \"f\" \"n\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n     Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n     inj_on f {i. i \\<le> Suc n}; isom_Gchains (Suc n) f g h\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains (Suc n)\n                       (cmp (transpos (f (Suc n)) (Suc n)) f) g\n                       (cmp h (transpos (f (Suc n)) (Suc n)))", "apply (simp add:isom_Gchains_def, rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n};\n        \\<forall>i\\<le>Suc n. g i \\<cong> h (f i); i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         cmp h (transpos (f (Suc n)) (Suc n))\n                          (cmp (transpos (f (Suc n)) (Suc n)) f i)", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n};\n        \\<forall>i\\<le>Suc n. g i \\<cong> h (f i); i \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply (cut_tac k = \"f i\" in cmp_transpos1 [of \"f (Suc n)\" \"Suc n\" \"Suc n\"], \n       simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n; Gchain (Suc n) g;\n        Gchain (Suc n) h; \\<forall>l\\<le>Suc n. f l \\<le> Suc n;\n        inj_on f {i. i \\<le> Suc n};\n        \\<forall>i\\<le>Suc n. g i \\<cong> h (f i); i \\<le> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) (transpos (f (Suc n)) (Suc n))\n         (f i) =\n        f i\\<rbrakk>\n       \\<Longrightarrow> g i \\<cong>\n                         h (transpos (f (Suc n)) (Suc n)\n                             (transpos (f (Suc n)) (Suc n) (f i)))", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_0:\"\\<lbrakk>Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> (Suc n)\\<rbrakk>\n \\<Longrightarrow> Gchain (Suc n) (cmp h (transpos k (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> Gchain (Suc n) (cmp h (transpos k (Suc n)))", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n     k \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>Suc n.\n                         Group (cmp h (transpos k (Suc n)) l)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (cmp h (transpos k (Suc n)) l)", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (h (transpos k (Suc n) l))", "apply (insert n_in_Nsetn [of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Group (h (transpos k (Suc n) l))", "apply (cut_tac l = l in transpos_mem [of \"k\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> k \\<le> Suc n\n 2. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 3. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> k \\<noteq> Suc n\n 4. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n;\n        Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> l \\<le> Suc n\n 5. \\<And>l.\n       \\<lbrakk>\\<forall>l\\<le>Suc n. Group (h l); k \\<noteq> Suc n;\n        k \\<le> Suc n; l \\<le> Suc n; Suc n \\<in> {i. i \\<le> Suc n};\n        transpos k (Suc n) l \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Group (h (transpos k (Suc n) l))", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_1:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> (Suc n)\\<rbrakk>\n \\<Longrightarrow> {i. i \\<le> (Suc n) \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} - {k , Suc n} =\n                            {i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k , Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n;\n     k \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and>\n                          cmp h (transpos k (Suc n)) i \\<cong> E} -\n                      {k, Suc n} =\n                      {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n}", "apply (cut_tac n_in_Nsetn[of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and>\n                          cmp h (transpos k (Suc n)) i \\<cong> E} -\n                      {k, Suc n} =\n                      {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        x \\<noteq> k; x \\<le> Suc n; cmp h (transpos k (Suc n)) x \\<cong> E;\n        x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        x \\<noteq> k; x \\<le> Suc n; h x \\<cong> E;\n        x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> cmp h (transpos k (Suc n)) x \\<cong> E", "apply (frule_tac x = x in transpos_id_1 [of \"k\" \"Suc n\" \"Suc n\"], simp+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        x \\<noteq> k; x \\<le> Suc n; cmp h (transpos k (Suc n)) x \\<cong> E;\n        x \\<noteq> Suc n; transpos k (Suc n) x = x\\<rbrakk>\n       \\<Longrightarrow> h x \\<cong> E\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        x \\<noteq> k; x \\<le> Suc n; h x \\<cong> E;\n        x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> cmp h (transpos k (Suc n)) x \\<cong> E", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        x \\<noteq> k; x \\<le> Suc n; h x \\<cong> E;\n        x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> cmp h (transpos k (Suc n)) x \\<cong> E", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        x \\<noteq> k; x \\<le> Suc n; h x \\<cong> E;\n        x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> h (transpos k (Suc n) x) \\<cong> E", "apply (cut_tac x = x in transpos_id_1 [of \"k\" \"Suc n\" \"Suc n\"], simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_2:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n            k \\<le> (Suc n);  h (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow> \n                          cmp h (transpos k (Suc n)) k \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> cmp h (transpos k (Suc n)) k \\<cong> E", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h (transpos k (Suc n) k) \\<cong> E", "apply (subst transpos_ij_1 [of \"k\" \"Suc n\" \"Suc n\"], simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_3:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n       k \\<le> (Suc n); h k \\<cong> E\\<rbrakk> \\<Longrightarrow> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h (transpos k (Suc n) (Suc n)) \\<cong> E", "apply (subst transpos_ij_2 [of \"k\" \"Suc n\" \"Suc n\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> k \\<noteq> Suc n\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h k \\<cong> E", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> k \\<noteq> Suc n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> h k \\<cong> E", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_4:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n;  \n      k \\<le> (Suc n); \\<not> h (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow>\n                \\<not>  cmp h (transpos k (Suc n)) k \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> cmp h (transpos k (Suc n)) k \\<cong> E", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h (Suc n) \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h (Suc n) \\<cong> E; h (transpos k (Suc n) k) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (insert n_in_Nsetn [of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h (Suc n) \\<cong> E; h (transpos k (Suc n) k) \\<cong> E;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add: transpos_ij_1 [of \"k\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_5:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); \\<not> h k \\<cong> E\\<rbrakk> \\<Longrightarrow>\n              \\<not>  cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> \\<not> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:cmp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h k \\<cong> E; h (transpos k (Suc n) (Suc n)) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> False", "apply (insert n_in_Nsetn [of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h k \\<cong> E; h (transpos k (Suc n) (Suc n)) \\<cong> E;\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:transpos_ij_2 [of \"k\" \"Suc n\" \"Suc n\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_6:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n    k \\<le> (Suc n); h (Suc n) \\<cong> E; h k \\<cong> E\\<rbrakk> \\<Longrightarrow> \n    {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} = \n    insert k (insert (Suc n) ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h (Suc n) \\<cong> E; h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} =\n                      insert k\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_7:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); h (Suc n) \\<cong> E; \\<not> h k \\<cong> E\\<rbrakk> \\<Longrightarrow> \n      {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} = \n       insert (Suc n) ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     h (Suc n) \\<cong> E; \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} =\n                      insert (Suc n)\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_8:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); \\<not> h (Suc n) \\<cong> E;  h k \\<cong> E\\<rbrakk> \\<Longrightarrow> \n     {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} = \n       insert k ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h (Suc n) \\<cong> E; h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} =\n                      insert k\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7_9:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n      k \\<le> (Suc n); \\<not> h (Suc n) \\<cong> E; \\<not> h k \\<cong> E\\<rbrakk> \\<Longrightarrow>\n      {i. i \\<le> (Suc n) \\<and>  h i \\<cong> E} =\n      {i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     \\<not> h (Suc n) \\<cong> E; \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} =\n                      {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1_7:\"\\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; \n    k \\<le> (Suc n)\\<rbrakk> \\<Longrightarrow> card {i. i \\<le> (Suc n) \\<and> \n    cmp h (transpos k (Suc n)) i \\<cong> E} =  card {i. i \\<le> (Suc n) \\<and> h i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n;\n     k \\<le> Suc n\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (cut_tac finite_Collect_le_nat[of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_1 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n}\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (cut_tac n_in_Nsetn[of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (case_tac \"h (Suc n) \\<cong> E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (case_tac \"h k \\<cong> E\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_6 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_2 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_3 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_0 [of \"n\" \"h\" \"k\" ], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_6 [of \"E\" \"n\" \"cmp h (transpos k (Suc n))\" \"k\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and>\n                                cmp h (transpos k (Suc n)) i \\<cong> E} -\n                            {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and>\n                              cmp h (transpos k (Suc n)) i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"insert (Suc n) \n           ({i. i \\<le> (Suc n) \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n           {k, Suc n})\" \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n)\n                       ({i. i \\<le> Suc n \\<and>\n                            cmp h (transpos k (Suc n)) i \\<cong> E} -\n                        {k, Suc n})\n                      \\<subseteq> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n        {k, Suc n} =\n        {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n        h (Suc n) \\<cong> E; h k \\<cong> E;\n        cmp h (transpos k (Suc n)) k \\<cong> E;\n        cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n        Gchain (Suc n) (cmp h (transpos k (Suc n)));\n        x = Suc n \\<or>\n        x \\<le> Suc n \\<and>\n        h x \\<cong> E \\<and> x \\<noteq> k \\<and> x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n        {k, Suc n} =\n        {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n        h (Suc n) \\<cong> E; h k \\<cong> E;\n        cmp h (transpos k (Suc n)) k \\<cong> E;\n        cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n        Gchain (Suc n) (cmp h (transpos k (Suc n))); x = Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n\n 2. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n        {k, Suc n} =\n        {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n        h (Suc n) \\<cong> E; h k \\<cong> E;\n        cmp h (transpos k (Suc n)) k \\<cong> E;\n        cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n        Gchain (Suc n) (cmp h (transpos k (Suc n)));\n        x \\<le> Suc n \\<and>\n        h x \\<cong> E \\<and> x \\<noteq> k \\<and> x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 7. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n        {k, Suc n} =\n        {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n        h (Suc n) \\<cong> E; h k \\<cong> E;\n        cmp h (transpos k (Suc n)) k \\<cong> E;\n        cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n        Gchain (Suc n) (cmp h (transpos k (Suc n)));\n        x \\<le> Suc n \\<and>\n        h x \\<cong> E \\<and> x \\<noteq> k \\<and> x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and>\n cmp h (transpos k (Suc n)) i \\<cong> E} -\n                                   {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)+"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ({i. i \\<le> Suc n \\<and>\n                            cmp h (transpos k (Suc n)) i \\<cong> E} -\n                        {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> (Suc n) \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} - {k, Suc n}\" \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and>\n                          cmp h (transpos k (Suc n)) i \\<cong> E} -\n                      {k, Suc n}\n                      \\<subseteq> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      card\n                       (insert k\n                         (insert (Suc n)\n                           ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                            {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)+"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                   {k, Suc n})\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"insert (Suc n) ({i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n})\" \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> insert (Suc n)\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})\n                      \\<subseteq> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                   {k, Suc n})\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n        {k, Suc n} =\n        {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n        h (Suc n) \\<cong> E; h k \\<cong> E;\n        cmp h (transpos k (Suc n)) k \\<cong> E;\n        cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n        Gchain (Suc n) (cmp h (transpos k (Suc n)));\n        x = Suc n \\<or>\n        x \\<le> Suc n \\<and>\n        h x \\<cong> E \\<and> x \\<noteq> k \\<and> x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                   {k, Suc n})\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule disjE, simp add:n_in_Nsetn)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n        {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n        {k, Suc n} =\n        {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n        h (Suc n) \\<cong> E; h k \\<cong> E;\n        cmp h (transpos k (Suc n)) k \\<cong> E;\n        cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n        Gchain (Suc n) (cmp h (transpos k (Suc n)));\n        x \\<le> Suc n \\<and>\n        h x \\<cong> E \\<and> x \\<noteq> k \\<and> x \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc n\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                   {k, Suc n})\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                   {k, Suc n})\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> insert (Suc n)\n                                  ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                   {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (card\n                            (insert (Suc n)\n                              ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                  {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n}\"\n         \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n}\n                      \\<subseteq> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                  {k, Suc n})))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 6. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                  {k, Suc n})))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                  {k, Suc n})))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E; h k \\<cong> E;\n     cmp h (transpos k (Suc n)) k \\<cong> E;\n     cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and>\ncmp h (transpos k (Suc n)) i \\<cong> E} -\n                                  {k, Suc n}))) =\n                      Suc (Suc (card\n                                 ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                  {k, Suc n})))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_7[of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_0[of \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_8[of \"E\" \"n\" \"cmp h (transpos k (Suc n))\" \n        \"k\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> cmp h (transpos k (Suc n)) k \\<cong> E\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and>\n                              cmp h (transpos k (Suc n)) i \\<cong> E} -\n                          {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst cmp_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> h (transpos k (Suc n) (Suc n)) \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> cmp h (transpos k (Suc n)) k \\<cong> E\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and>\n                              cmp h (transpos k (Suc n)) i \\<cong> E} -\n                          {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst transpos_ij_2[of \"k\" \"Suc n\" \"Suc n\"], assumption+, simp+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {Suc n};\n     h (Suc n) \\<cong> E; \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> cmp h (transpos k (Suc n)) k \\<cong> E\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and>\n                              cmp h (transpos k (Suc n)) i \\<cong> E} -\n                          {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:cmp_def, simp add:transpos_ij_1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and>\n                              cmp h (transpos k (Suc n)) i \\<cong> E} -\n                          {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ({i. i \\<le> Suc n \\<and>\n                            cmp h (transpos k (Suc n)) i \\<cong> E} -\n                        {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> {i. i \\<le> Suc n \\<and>\n                                     cmp h (transpos k (Suc n)) i \\<cong>\n                                     E} -\n                                 {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> (Suc n) \\<and> \n         cmp h (transpos k (Suc n)) i \\<cong> E} - {k, Suc n}\" \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and>\n                          cmp h (transpos k (Suc n)) i \\<cong> E} -\n                      {k, Suc n}\n                      \\<subseteq> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> {i. i \\<le> Suc n \\<and>\n                                     cmp h (transpos k (Suc n)) i \\<cong>\n                                     E} -\n                                 {k, Suc n}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> {i. i \\<le> Suc n \\<and>\n                                     cmp h (transpos k (Suc n)) i \\<cong>\n                                     E} -\n                                 {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> {i. i \\<le> Suc n \\<and>\n                                     cmp h (transpos k (Suc n)) i \\<cong>\n                                     E} -\n                                 {k, Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule finite_subset[of \"{i. i \\<le> (Suc n) \\<and> h i \\<cong> E} - {k, Suc n}\" \n         \"{i. i \\<le> (Suc n)}\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n}\n                      \\<subseteq> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 5. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule subsetI, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                               {k, Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (case_tac \"h k \\<cong> E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_8 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_3 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_4 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule isom_gch_unitsTr1_7_0 [of \"n\" \"h\" \"k\" ], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_7 [of \"E\" \"n\" \"cmp h (transpos k (Suc n))\" \n                                                     \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       (insert (Suc n)\n                         ({i. i \\<le> Suc n \\<and>\n                              cmp h (transpos k (Suc n)) i \\<cong> E} -\n                          {k, Suc n})) =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ({i. i \\<le> Suc n \\<and>\n                            cmp h (transpos k (Suc n)) i \\<cong> E} -\n                        {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr4, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc n\n                      \\<notin> {i. i \\<le> Suc n \\<and>\n                                   cmp h (transpos k (Suc n)) i \\<cong> E} -\n                               {k, Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      card\n                       (insert k\n                         ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                          {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst card_insert_disjoint)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                 {k, Suc n}\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 4. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule isom_gch_units_transpTr4, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> k \\<notin> {i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                                 {k, Suc n}\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 3. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     h k \\<cong> E; cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> Suc (card\n                            ({i. i \\<le> Suc n \\<and>\n                                 cmp h (transpos k (Suc n)) i \\<cong> E} -\n                             {k, Suc n})) =\n                      Suc (card\n                            ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                             {k, Suc n}))\n 2. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subst isom_gch_unitsTr1_7_9 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply (frule_tac isom_gch_unitsTr1_7_4 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) k \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply (frule_tac isom_gch_unitsTr1_7_5 [of \"E\" \"n\" \"h\" \"k\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E; \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply (frule isom_gch_unitsTr1_7_0 [of \"n\" \"h\" \"k\" ], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E; \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       {i. i \\<le> Suc n \\<and>\n                           cmp h (transpos k (Suc n)) i \\<cong> E} =\n                      card\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply (subst isom_gch_unitsTr1_7_9 [of \"E\" \"n\" \" cmp h (transpos k (Suc n))\" \"k\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain (Suc n) h; k \\<noteq> Suc n; k \\<le> Suc n;\n     finite {na. na \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> cmp h (transpos k (Suc n)) i \\<cong> E} -\n     {k, Suc n} =\n     {i. i \\<le> Suc n \\<and> h i \\<cong> E} - {k, Suc n};\n     Suc n \\<in> {i. i \\<le> Suc n}; \\<not> h (Suc n) \\<cong> E;\n     \\<not> h k \\<cong> E; \\<not> cmp h (transpos k (Suc n)) k \\<cong> E;\n     \\<not> cmp h (transpos k (Suc n)) (Suc n) \\<cong> E;\n     Gchain (Suc n) (cmp h (transpos k (Suc n)))\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({i. i \\<le> Suc n \\<and>\n                            cmp h (transpos k (Suc n)) i \\<cong> E} -\n                        {k, Suc n}) =\n                      card\n                       ({i. i \\<le> Suc n \\<and> h i \\<cong> E} -\n                        {k, Suc n})", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_unitsTr1:\"Ugp E \\<Longrightarrow> \\<forall>g. \\<forall>h. \\<forall>f. Gchain n g \\<and> \n      Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>  card {i. i \\<le> n \\<and> g i \\<cong> E} = \n           card {i. i \\<le> n \\<and> h i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugp E \\<Longrightarrow>\n    \\<forall>g h f.\n       Gchain n g \\<and>\n       Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n       card {i. i \\<le> n \\<and> g i \\<cong> E} =\n       card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Ugp E \\<Longrightarrow>\n    \\<forall>g h f.\n       Gchain 0 g \\<and>\n       Gchain 0 h \\<and> Gch_bridge 0 g h f \\<longrightarrow>\n       card {i. i \\<le> 0 \\<and> g i \\<cong> E} =\n       card {i. i \\<le> 0 \\<and> h i \\<cong> E}\n 2. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g h f.\n       \\<lbrakk>Ugp E; Gchain 0 g; Gchain 0 h; Gch_bridge 0 g h f\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> 0 \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> 0 \\<and> h i \\<cong> E}\n 2. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:Gch_bridge_def isom_Gchains_def Collect_conv_if)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g h f.\n       \\<lbrakk>Ugp E; Gchain 0 g; Gchain 0 h;\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> (g 0 \\<cong> E \\<longrightarrow>\n                          h 0 \\<cong> E) \\<and>\n                         (\\<not> g 0 \\<cong> E \\<longrightarrow>\n                          \\<not> h 0 \\<cong> E)\n 2. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply rule"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g h f.\n       \\<lbrakk>Ugp E; Gchain 0 g; Gchain 0 h;\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> g 0 \\<cong> E \\<longrightarrow> h 0 \\<cong> E\n 2. \\<And>g h f.\n       \\<lbrakk>Ugp E; Gchain 0 g; Gchain 0 h;\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> \\<not> g 0 \\<cong> E \\<longrightarrow>\n                         \\<not> h 0 \\<cong> E\n 3. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>g h f.\n       \\<lbrakk>Ugp E; Group (g 0); Group (h 0);\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> g 0 \\<cong> E \\<longrightarrow> h 0 \\<cong> E\n 2. \\<And>g h f.\n       \\<lbrakk>Ugp E; Gchain 0 g; Gchain 0 h;\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> \\<not> g 0 \\<cong> E \\<longrightarrow>\n                         \\<not> h 0 \\<cong> E\n 3. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply(metis isom_gch_unitsTr4)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g h f.\n       \\<lbrakk>Ugp E; Gchain 0 g; Gchain 0 h;\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> \\<not> g 0 \\<cong> E \\<longrightarrow>\n                         \\<not> h 0 \\<cong> E\n 2. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g h f.\n       \\<lbrakk>Ugp E; Group (g 0); Group (h 0);\n        f 0 = 0 \\<and> g 0 \\<cong> h (f 0)\\<rbrakk>\n       \\<Longrightarrow> \\<not> g 0 \\<cong> E \\<longrightarrow>\n                         \\<not> h 0 \\<cong> E\n 2. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (metis Ugp_def isomTr2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "(***** n ******)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>g h f.\n                            Gchain (Suc n) g \\<and>\n                            Gchain (Suc n) h \\<and>\n                            Gch_bridge (Suc n) g h f \\<longrightarrow>\n                            card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                            card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule allI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> Gchain (Suc n) g \\<and>\n                         Gchain (Suc n) h \\<and>\n                         Gch_bridge (Suc n) g h f \\<longrightarrow>\n                         card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "(** n ** case f (Suc n) = Suc n **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (case_tac \"f (Suc n) = Suc n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subgoal_tac \"card {i. i \\<le> n \\<and> g i \\<cong> E} =  card {i. i \\<le> n \\<and> h i \\<cong> E}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (thin_tac \" \\<forall>g h f.\n             Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n             card {i. i \\<le> n \\<and> g i \\<cong> E} =\n             card {i. i \\<le> n \\<and> h i \\<cong> E}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card {i. i \\<le> n \\<and> h i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}\n 3. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule isom_tgch_unitsTr0, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule_tac n = n and g = g and h = h and f = f in \n            isom_gch_unitsTr1_1 [of \"E\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n;\n        Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f;\n        Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (thin_tac \"Gchain (Suc n) g \\<and> Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f;\n        Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "(**** n **** f (Suc n) \\<noteq> Suc n ***)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (frule_tac n = n and g = g and h = h and f = f in isom_gch_unitsTr1_5 [of \"E\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f)\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subgoal_tac \"card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and>  \n                       (cmp h (transpos (f (Suc n)) (Suc n))) i \\<cong> E}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f);\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f)\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and>\n                              cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong>\n                              E}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f)\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and>\n                              cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong>\n                              E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f);\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        \\<forall>g h f.\n           Gchain n g \\<and>\n           Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n           card {i. i \\<le> n \\<and> g i \\<cong> E} =\n           card {i. i \\<le> n \\<and> h i \\<cong> E};\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f);\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (thin_tac \"\\<forall>g h f.\n             Gchain n g \\<and> Gchain n h \\<and> Gch_bridge n g h f \\<longrightarrow>\n             card {i. i \\<le> n \\<and> g i \\<cong> E} =\n             card {i. i \\<le> n \\<and> h i \\<cong> E}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        Gchain n g \\<and>\n        Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n        Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n         (cmp (transpos (f (Suc n)) (Suc n)) f);\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (thin_tac \"Gchain n g \\<and>\n          Gchain n (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n          Gch_bridge n g (cmp h (transpos (f (Suc n)) (Suc n)))\n           (cmp (transpos (f (Suc n)) (Suc n)) f)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (subgoal_tac \"cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n", "apply (frule_tac n = n and g = g and h = \"cmp h (transpos (f (Suc n)) (Suc n))\" and f = \"cmp (transpos (f (Suc n)) (Suc n)) f\"  in  isom_tgch_unitsTr0 [of \"E\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> Gchain (Suc n) g \\<and>\n                         Gchain (Suc n)\n                          (cmp h (transpos (f (Suc n)) (Suc n))) \\<and>\n                         Gch_bridge (Suc n) g\n                          (cmp h (transpos (f (Suc n)) (Suc n)))\n                          (cmp (transpos (f (Suc n)) (Suc n)) f)\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n\n 3. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 4. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n", "apply (rule isom_gch_unitsTr1_6, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n", "apply (thin_tac \"card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and>\n                          cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        Gchain (Suc n) g; Gchain (Suc n) h;\n        Gch_bridge (Suc n) g h f\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        Gchain (Suc n) g; Gchain (Suc n) h;\n        (\\<forall>l\\<le>Suc n. f l \\<le> Suc n) \\<and>\n        inj_on f {i. i \\<le> Suc n} \\<and>\n        isom_Gchains (Suc n) f g h\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        card {i. i \\<le> n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        Gchain (Suc n) g; Gchain (Suc n) h;\n        \\<forall>l\\<le>Suc n. f l \\<le> Suc n; inj_on f {i. i \\<le> Suc n};\n        isom_Gchains (Suc n) f g h\\<rbrakk>\n       \\<Longrightarrow> cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) =\n                         Suc n\n 2. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr1_2, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E;\n        Gchain (Suc n) g \\<and>\n        Gchain (Suc n) h \\<and> Gch_bridge (Suc n) g h f;\n        f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong>\n                              E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        Gchain (Suc n) g; Gchain (Suc n) h;\n        Gch_bridge (Suc n) g h f\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong>\n                              E} =\n                         card {i. i \\<le> Suc n \\<and> h i \\<cong> E}", "apply (rule isom_gch_unitsTr1_7, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n g h f.\n       \\<lbrakk>Ugp E; f (Suc n) \\<noteq> Suc n;\n        cmp (transpos (f (Suc n)) (Suc n)) f (Suc n) = Suc n;\n        card {i. i \\<le> Suc n \\<and> g i \\<cong> E} =\n        card\n         {i. i \\<le> Suc n \\<and>\n             cmp h (transpos (f (Suc n)) (Suc n)) i \\<cong> E};\n        Gchain (Suc n) g; Gchain (Suc n) h;\n        Gch_bridge (Suc n) g h f\\<rbrakk>\n       \\<Longrightarrow> f (Suc n) \\<le> Suc n", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; Gch_bridge n g h f\\<rbrakk> \\<Longrightarrow>  \n      card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h; Gch_bridge n g h f\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (simp add:isom_gch_unitsTr1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isom_gch_units_1:\"\\<lbrakk>Ugp E; Gchain n g; Gchain n h; \\<exists>f. Gch_bridge n g h f\\<rbrakk>\n \\<Longrightarrow>  card {i. i \\<le> n \\<and> g i \\<cong> E} = card {i. i \\<le> n \\<and> h i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ugp E; Gchain n g; Gchain n h;\n     \\<exists>f. Gch_bridge n g h f\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                      card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (auto del:equalityI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>Ugp E; Gchain n g; Gchain n h; Gch_bridge n g h f\\<rbrakk>\n       \\<Longrightarrow> card {i. i \\<le> n \\<and> g i \\<cong> E} =\n                         card {i. i \\<le> n \\<and> h i \\<cong> E}", "apply (simp add:isom_gch_units)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \"Jordan Hoelder theorem\""], ["", "subsection \\<open>\\<open>Rfn_tools\\<close>. Tools to treat refinement of a cmpser, rtos.\\<close>"], ["", "lemma rfn_tool1:\"\\<lbrakk> 0 < (r::nat); (k::nat) = i * r + j; j < r \\<rbrakk> \n                                                  \\<Longrightarrow> (k div r) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "assume p1: \"0 < r\" and p2: \"k = i * r + j\" and p3: \"j < r\""], ["proof (state)\nthis:\n  0 < r\n  k = i * r + j\n  j < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "from p1 and p2"], ["proof (chain)\npicking this:\n  0 < r\n  k = i * r + j", "have q1: \"(j + i * r) div r = i + j div r\""], ["proof (prove)\nusing this:\n  0 < r\n  k = i * r + j\n\ngoal (1 subgoal):\n 1. (j + i * r) div r = i + j div r", "apply (simp add:div_mult_self1 [of \"r\" \"j\" \"i\" ])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (j + i * r) div r = i + j div r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "from p1 and p3"], ["proof (chain)\npicking this:\n  0 < r\n  j < r", "have q2: \"j div r = 0\""], ["proof (prove)\nusing this:\n  0 < r\n  j < r\n\ngoal (1 subgoal):\n 1. j div r = 0", "apply (simp add:div_if)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  j div r = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "from q1 and q2"], ["proof (chain)\npicking this:\n  (j + i * r) div r = i + j div r\n  j div r = 0", "have q3:\"(j + i * r) div r = i\""], ["proof (prove)\nusing this:\n  (j + i * r) div r = i + j div r\n  j div r = 0\n\ngoal (1 subgoal):\n 1. (j + i * r) div r = i", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (j + i * r) div r = i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "from q3"], ["proof (chain)\npicking this:\n  (j + i * r) div r = i", "have q4: \"(i * r + j) div r = i\""], ["proof (prove)\nusing this:\n  (j + i * r) div r = i\n\ngoal (1 subgoal):\n 1. (i * r + j) div r = i", "apply (simp add:add.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (i * r + j) div r = i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; k = i * r + j; j < r\\<rbrakk>\n    \\<Longrightarrow> k div r = i", "from p2 and q4"], ["proof (chain)\npicking this:\n  k = i * r + j\n  (i * r + j) div r = i", "show ?thesis"], ["proof (prove)\nusing this:\n  k = i * r + j\n  (i * r + j) div r = i\n\ngoal (1 subgoal):\n 1. k div r = i", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  k div r = i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_mult_pos:\"\\<lbrakk> 0 < (r::nat); 0 < s\\<rbrakk> \\<Longrightarrow> 0 < r * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> 0 < r * s", "by simp"], ["", "lemma rfn_tool1_1:\"\\<lbrakk> 0 < (r::nat); j < r \\<rbrakk> \n                             \\<Longrightarrow> (i * r + j) div r = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; j < r\\<rbrakk> \\<Longrightarrow> (i * r + j) div r = i", "apply (rule rfn_tool1 [of \"r\" \"i * r + j\" \"i\" \"j\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; j < r\\<rbrakk> \\<Longrightarrow> i * r + j = i * r + j\n 2. \\<lbrakk>0 < r; j < r\\<rbrakk> \\<Longrightarrow> j < r", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool2:\"(a::nat) < s \\<Longrightarrow> a \\<le> s - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < s \\<Longrightarrow> a \\<le> s - Suc 0", "apply (rule less_le_diff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a < s \\<Longrightarrow> a < s", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool3:\"(0::nat) \\<le> m \\<Longrightarrow> (m + n) - n = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> m \\<Longrightarrow> m + n - n = m", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool11:\"\\<lbrakk>0 < b; (a::nat) \\<le> b - Suc 0\\<rbrakk> \\<Longrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; a \\<le> b - Suc 0\\<rbrakk> \\<Longrightarrow> a < b", "apply (frule le_less_trans [of \"a\" \"b - Suc 0\" \"b\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < b; a \\<le> b - Suc 0\\<rbrakk>\n    \\<Longrightarrow> b - Suc 0 < b\n 2. \\<lbrakk>0 < b; a \\<le> b - Suc 0; a < b\\<rbrakk>\n    \\<Longrightarrow> a < b", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma  rfn_tool12:\"\\<lbrakk>0 < (s::nat); (i::nat) mod s = s - 1 \\<rbrakk> \\<Longrightarrow>\n                     Suc (i div s) = (Suc i) div s \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "assume p1:\"0 < s\" and p2:\"i mod s = s - 1\""], ["proof (state)\nthis:\n  0 < s\n  i mod s = s - 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "have q1:\"i div s * s + i mod s = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i div s * s + i mod s = i", "apply (insert div_mult_mod_eq [of \"i\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. i div s * s + i mod s = i \\<Longrightarrow> i div s * s + i mod s = i", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  i div s * s + i mod s = i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "have q2:\"Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)", "apply (insert add_Suc_right [THEN sym, of \"i div s * s\" \"i mod s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (i div s * s + i mod s) =\n    i div s * s + Suc (i mod s) \\<Longrightarrow>\n    Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "from p1 and p2 and q2"], ["proof (chain)\npicking this:\n  0 < s\n  i mod s = s - 1\n  Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)", "have q3:\"Suc (i div s * s + i mod s) = i div s * s + s\""], ["proof (prove)\nusing this:\n  0 < s\n  i mod s = s - 1\n  Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)\n\ngoal (1 subgoal):\n 1. Suc (i div s * s + i mod s) = i div s * s + s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Suc (i div s * s + i mod s) = i div s * s + s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "from q3"], ["proof (chain)\npicking this:\n  Suc (i div s * s + i mod s) = i div s * s + s", "have q4:\"Suc (i div s * s + i mod s) = Suc (i div s) * s \""], ["proof (prove)\nusing this:\n  Suc (i div s * s + i mod s) = i div s * s + s\n\ngoal (1 subgoal):\n 1. Suc (i div s * s + i mod s) = Suc (i div s) * s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Suc (i div s * s + i mod s) = Suc (i div s) * s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) = Suc i div s", "from p1 and q1 and q4"], ["proof (chain)\npicking this:\n  0 < s\n  i div s * s + i mod s = i\n  Suc (i div s * s + i mod s) = Suc (i div s) * s", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < s\n  i div s * s + i mod s = i\n  Suc (i div s * s + i mod s) = Suc (i div s) * s\n\ngoal (1 subgoal):\n 1. Suc (i div s) = Suc i div s", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Suc (i div s) = Suc i div s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  rfn_tool12_1:\"\\<lbrakk>0 < (s::nat); (l::nat) mod s < s - 1 \\<rbrakk> \\<Longrightarrow>\n                     Suc (l mod s) = (Suc l) mod s \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; l mod s < s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc (l mod s) = Suc l mod s", "apply (insert div_mult_mod_eq [of \"l\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; l mod s < s - 1; l div s * s + l mod s = l\\<rbrakk>\n    \\<Longrightarrow> Suc (l mod s) = Suc l mod s", "apply (insert add_Suc_right [THEN sym, of \"l div s * s\" \"l mod s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; l mod s < s - 1; l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc (l mod s) = Suc l mod s", "apply (insert mod_mult_self1  [of \"Suc (l mod s)\" \"l div s\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; l mod s < s - 1; l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     (Suc (l mod s) + l div s * s) mod s = Suc (l mod s) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc (l mod s) = Suc l mod s", "apply (frule Suc_mono [of \"l mod s\" \"s - 1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; l mod s < s - 1; l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     (Suc (l mod s) + l div s * s) mod s = Suc (l mod s) mod s;\n     Suc (l mod s) < Suc (s - 1)\\<rbrakk>\n    \\<Longrightarrow> Suc (l mod s) = Suc l mod s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma  rfn_tool12_2:\"\\<lbrakk>0 < (s::nat); (i::nat) mod s = s - Suc 0\\<rbrakk> \\<Longrightarrow>\n                                               (Suc i) mod s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply (insert div_mult_mod_eq [THEN sym, of \"i\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - Suc 0; i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply (insert add_Suc_right [THEN sym, of \"i div s * s\" \"i mod s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i mod s = s - Suc 0; i = i div s * s + i mod s;\n     Suc (i div s * s + i mod s) = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool13:\"\\<lbrakk> (0::nat) < r; a = b \\<rbrakk> \\<Longrightarrow> a mod r = b mod r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; a = b\\<rbrakk> \\<Longrightarrow> a mod r = b mod r", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool13_1:\"\\<lbrakk> (0::nat) < r; a = b \\<rbrakk> \\<Longrightarrow> a div r = b div r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; a = b\\<rbrakk> \\<Longrightarrow> a div r = b div r", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Tr1:\"\\<lbrakk> (0::nat) < r; 0 < s; l \\<le> s * r\\<rbrakk> \\<Longrightarrow> l div s \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> s * r\\<rbrakk>\n    \\<Longrightarrow> l div s \\<le> r", "apply (frule_tac m = l and n = \"s * r\" and k = s in div_le_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> s * r; l div s \\<le> s * r div s\\<rbrakk>\n    \\<Longrightarrow> l div s \\<le> r", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Tr2:\"\\<lbrakk>(0::nat) < r; 0 < s; l < s * r\\<rbrakk> \\<Longrightarrow> l div s \\<le> r - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r\\<rbrakk>\n    \\<Longrightarrow> l div s \\<le> r - Suc 0", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r;\n     \\<not> l div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add: not_less [symmetric, of \"l div s\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; r - Suc 0 < l div s\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule Suc_leI [of \"r - Suc 0\" \"l div s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; r - Suc 0 < l div s;\n     Suc (r - Suc 0) \\<le> l div s\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; r \\<le> l div s\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule less_imp_le [of \"l\" \"s * r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; r \\<le> l div s;\n     l \\<le> s * r\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule div_le_mono [of \"l\" \"s * r\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; r \\<le> l div s; l \\<le> s * r;\n     l div s \\<le> s * r div s\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; l div s = r\\<rbrakk>\n    \\<Longrightarrow> False", "apply (insert div_mult_mod_eq [THEN sym, of \"l\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; l div s = r;\n     l = l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; l div s = r;\n     l = l div s * s + l mod s; r = l div s\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \"r = l div s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; l div s = r;\n     l = l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; l div s = r;\n     l = r * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:mult.commute [of \"r\" \"s\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Tr3:\"\\<lbrakk>(0::nat) < r; 0 < s; l < s * r\\<rbrakk> \\<Longrightarrow> Suc (l div s) \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) \\<le> r", "apply (frule_tac div_Tr2[of \"r\" \"s\"], assumption+,\n       cut_tac n1 = \"l div s\" and m1 = \"r - Suc 0\" in  Suc_le_mono[THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < s * r; l div s \\<le> r - Suc 0;\n     (l div s \\<le> r - Suc 0) =\n     (Suc (l div s) \\<le> Suc (r - Suc 0))\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) \\<le> r", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Tr3_1:\"\\<lbrakk>(0::nat) < r; 0 < s; l mod s = s - 1\\<rbrakk> \\<Longrightarrow>  Suc l div s = Suc (l div s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc l div s = Suc (l div s)", "apply (frule rfn_tool12 [of \"s\" \"l\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l mod s = s - 1;\n     Suc (l div s) = Suc l div s\\<rbrakk>\n    \\<Longrightarrow> Suc l div s = Suc (l div s)", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc (l div s) = Suc l div s; 0 < r; 0 < s;\n     l mod s = s - 1\\<rbrakk>\n    \\<Longrightarrow> Suc l div s = Suc (l div s)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Tr3_2:\"\\<lbrakk>(0::nat) < r; 0 < s; l mod s < s - 1\\<rbrakk> \\<Longrightarrow> \n                                       l div s = Suc l div s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l mod s < s - 1\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply (frule Suc_mono [of \"l mod s\" \"s - 1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l mod s < s - 1;\n     Suc (l mod s) < Suc (s - 1)\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply (cut_tac div_mult_mod_eq [of \"l\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply (cut_tac add_Suc_right [THEN sym, of \"l div s * s\" \"l mod s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s)\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply (cut_tac zero_less_Suc[of \"l mod s\"],\n       frule less_trans[of \"0\" \"Suc (l mod s)\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     0 < Suc (l mod s); 0 < s\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply (frule rfn_tool13_1 [of \"s\" \"Suc (l div s * s + l mod s)\" \"l div s * s + Suc (l mod s)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     0 < Suc (l mod s); 0 < s;\n     Suc (l div s * s + l mod s) div s =\n     (l div s * s + Suc (l mod s)) div s\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s", "apply (subgoal_tac \"s \\<noteq> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     0 < Suc (l mod s); 0 < s;\n     Suc (l div s * s + l mod s) div s =\n     (l div s * s + Suc (l mod s)) div s;\n     s \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s\n 2. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     0 < Suc (l mod s); 0 < s;\n     Suc (l div s * s + l mod s) div s =\n     (l div s * s + Suc (l mod s)) div s\\<rbrakk>\n    \\<Longrightarrow> s \\<noteq> 0", "apply (frule div_mult_self1 [of \"s\" \"Suc (l mod s)\" \"l div s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     0 < Suc (l mod s); 0 < s;\n     Suc (l div s * s + l mod s) div s =\n     (l div s * s + Suc (l mod s)) div s;\n     s \\<noteq> 0;\n     (Suc (l mod s) + l div s * s) div s =\n     l div s + Suc (l mod s) div s\\<rbrakk>\n    \\<Longrightarrow> l div s = Suc l div s\n 2. \\<lbrakk>0 < r; l mod s < s - Suc 0; Suc (l mod s) < s;\n     l div s * s + l mod s = l;\n     Suc (l div s * s + l mod s) = l div s * s + Suc (l mod s);\n     0 < Suc (l mod s); 0 < s;\n     Suc (l div s * s + l mod s) div s =\n     (l div s * s + Suc (l mod s)) div s\\<rbrakk>\n    \\<Longrightarrow> s \\<noteq> 0", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mod_div_injTr:\"\\<lbrakk>(0::nat) < r; x mod r = y mod r; x div r = y div r\\<rbrakk>\n                      \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; x mod r = y mod r; x div r = y div r\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply (cut_tac div_mult_mod_eq[of \"x\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; x mod r = y mod r; x div r = y div r;\n     x div r * r + x mod r = x\\<rbrakk>\n    \\<Longrightarrow> x = y", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  rtos :: \"[nat, nat] \\<Rightarrow> (nat \\<Rightarrow> nat)\" where\n  \"rtos r s i = (if i < r * s then (i mod s) * r + i div s else r * s)\""], ["", "lemma rtos_hom0:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r * s - Suc 0)\\<rbrakk> \\<Longrightarrow>\n   i div s < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (frule div_Tr2 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < s * r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (simp add:mult.commute [of \"r\" \"s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < s * r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (rule le_less_trans, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> s * r - Suc 0 < s * r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (rule le_less_trans, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 < r", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_hom1:\"\\<lbrakk>(0::nat) < r; 0 < s; l \\<le> (r * s - Suc 0)\\<rbrakk> \\<Longrightarrow> \n (rtos r s) l \\<le> (s * r - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s l \\<le> s * r - Suc 0", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (l < r * s \\<longrightarrow>\n                       l mod s * r + l div s \\<le> s * r - Suc 0) \\<and>\n                      (\\<not> l < r * s \\<longrightarrow>\n                       r * s \\<le> s * r - Suc 0)", "apply (frule le_less_trans [of \"l\" \"r * s - Suc 0\" \"r * s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r * s - Suc 0 < r * s\n 2. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s\\<rbrakk>\n    \\<Longrightarrow> (l < r * s \\<longrightarrow>\n                       l mod s * r + l div s \\<le> s * r - Suc 0) \\<and>\n                      (\\<not> l < r * s \\<longrightarrow>\n                       r * s \\<le> s * r - Suc 0)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s\\<rbrakk>\n    \\<Longrightarrow> (l < r * s \\<longrightarrow>\n                       l mod s * r + l div s \\<le> s * r - Suc 0) \\<and>\n                      (\\<not> l < r * s \\<longrightarrow>\n                       r * s \\<le> s * r - Suc 0)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s\\<rbrakk>\n    \\<Longrightarrow> l mod s * r + l div s \\<le> s * r - Suc 0", "apply (frule mod_less_divisor [of \"s\" \"l\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s;\n     l mod s < s\\<rbrakk>\n    \\<Longrightarrow> l mod s * r + l div s \\<le> s * r - Suc 0", "apply (frule less_le_diff [of \"l mod s\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s; l mod s < s;\n     l mod s \\<le> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> l mod s * r + l div s \\<le> s * r - Suc 0", "apply (frule_tac i = \"l mod s\" and j = \"s - Suc 0\" and k = r and l = r in\n         mult_le_mono, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s; l mod s < s;\n     l mod s \\<le> s - Suc 0; l mod s * r \\<le> (s - Suc 0) * r\\<rbrakk>\n    \\<Longrightarrow> l mod s * r + l div s \\<le> s * r - Suc 0", "apply (frule_tac i = \"l mod s * r\" and j = \"(s - Suc 0) * r\" and k = \"l div s\" and l = \"r - Suc 0\" in add_le_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s; l mod s < s;\n     l mod s \\<le> s - Suc 0; l mod s * r \\<le> (s - Suc 0) * r\\<rbrakk>\n    \\<Longrightarrow> l div s \\<le> r - Suc 0\n 2. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s; l mod s < s;\n     l mod s \\<le> s - Suc 0; l mod s * r \\<le> (s - Suc 0) * r;\n     l mod s * r + l div s \\<le> (s - Suc 0) * r + (r - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> l mod s * r + l div s \\<le> s * r - Suc 0", "apply (rule div_Tr2, assumption+, simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0; l < r * s; l mod s < s;\n     l mod s \\<le> s - Suc 0; l mod s * r \\<le> (s - Suc 0) * r;\n     l mod s * r + l div s \\<le> (s - Suc 0) * r + (r - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> l mod s * r + l div s \\<le> s * r - Suc 0", "apply (simp add:diff_mult_distrib)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_hom2:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; l \\<le> (r * s - Suc 0)\\<rbrakk> \\<Longrightarrow> \n rtos r s l \\<le> (r * s - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s l \\<le> r * s - Suc 0", "apply (insert  rtos_hom1 [of \"r\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0;\n     \\<And>l.\n        \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0\\<rbrakk>\n        \\<Longrightarrow> rtos r s l \\<le> s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s l \\<le> r * s - Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l \\<le> r * s - Suc 0;\n     \\<And>l.\n        l \\<le> r * s - Suc 0 \\<Longrightarrow>\n        rtos r s l \\<le> s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s l \\<le> r * s - Suc 0", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_hom3:\"\\<lbrakk>(0::nat) < r; 0 < s; i \\<le> (r * s - Suc 0) \\<rbrakk> \\<Longrightarrow>\n                   (rtos r s i div r) = i mod s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s i div r = i mod s", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (i < r * s \\<longrightarrow> i div s div r = 0) \\<and>\n                      (\\<not> i < r * s \\<longrightarrow> s = i)", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r * s - Suc 0 < r * s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> (i < r * s \\<longrightarrow> i div s div r = 0) \\<and>\n                      (\\<not> i < r * s \\<longrightarrow> s = i)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> (i < r * s \\<longrightarrow> i div s div r = 0) \\<and>\n                      (\\<not> i < r * s \\<longrightarrow> s = i)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i div s div r = 0", "apply (auto simp add: div_mult2_eq [symmetric] mult.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_hom3_1:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r * s - Suc 0) \\<rbrakk> \\<Longrightarrow>\n  (rtos r s i mod  r) = i div s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s i mod r = i div s", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow> i div s mod r = i div s", "apply (simp add:rfn_tool11 [of \"r * s\" \"i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s", "apply (frule rtos_hom0 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i div s < r\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s", "apply (simp add:mem_of_Nset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_hom5:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r *s - Suc 0); \ni div s = r - Suc 0 \\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) div r = Suc (i mod s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) div r = Suc (i mod s)", "apply (frule mult_less_mono2[of \"0\" \"s\" \"r\"],\n        simp only:mult.commute,\n        simp only:mult_0_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i div s = r - Suc 0;\n     0 < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) div r = Suc (i mod s)", "apply (frule rfn_tool11 [of \"r * s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i div s = r - Suc 0;\n     0 < r * s; i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) div r = Suc (i mod s)", "apply (simp add: rtos_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_hom7:\"\\<lbrakk>(0::nat) < r; (0::nat) < s; i \\<le> (r * s - Suc 0); \n                   i div s = r - Suc 0 \\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) mod r = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = 0", "apply (frule rtos_hom0 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i div s = r - Suc 0;\n     i div s < r\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = 0", "apply (simp add: rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i \\<le> r * s - Suc 0; i div s = r - Suc 0;\n     r - Suc 0 < r\\<rbrakk>\n    \\<Longrightarrow> \\<not> i < r * s \\<longrightarrow>\n                      Suc (r * s) mod r = 0", "apply (frule mult_less_mono2[of \"0\" \"s\" \"r\"],\n        simp only:mult.commute,\n        simp only:mult_0_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < s; i \\<le> r * s - Suc 0; i div s = r - Suc 0;\n     r - Suc 0 < r; 0 < r * s\\<rbrakk>\n    \\<Longrightarrow> \\<not> i < r * s \\<longrightarrow>\n                      Suc (r * s) mod r = 0", "apply (simp add: rfn_tool11 [of \"r * s\" \"i\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_inj:\"\\<lbrakk> (0::nat) < r; (0::nat) < s \\<rbrakk> \\<Longrightarrow> \n                   inj_on (rtos r s) {i. i \\<le> (r * s - Suc 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<le>r * s - Suc 0.\n                         \\<forall>y\\<le>r * s - Suc 0.\n                            rtos r s x = rtos r s y \\<longrightarrow> x = y", "apply ((rule allI, rule impI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; x \\<le> r * s - Suc 0; y \\<le> r * s - Suc 0;\n        rtos r s x = rtos r s y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule_tac i1 = x in rtos_hom3_1[THEN sym, of \"r\" \"s\"], assumption+,\n        frule_tac i1 = x in rtos_hom3[THEN sym, of \"r\" \"s\"], assumption+,\n        frule_tac i = y in rtos_hom3_1[of \"r\" \"s\"], assumption+,\n        frule_tac i = y in rtos_hom3[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; x \\<le> r * s - Suc 0; y \\<le> r * s - Suc 0;\n        rtos r s x = rtos r s y; x div s = rtos r s x mod r;\n        x mod s = rtos r s x div r; rtos r s y mod r = y div s;\n        rtos r s y div r = y mod s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; x \\<le> r * s - Suc 0; y \\<le> r * s - Suc 0;\n        rtos r s x = rtos r s y; x div s = y div s; x mod s = y mod s;\n        rtos r s y mod r = y div s; rtos r s y div r = y mod s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (rule_tac x = x and y = y in mod_div_injTr[of \"s\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_rs_Tr1:\"\\<lbrakk>(0::nat) < r; 0 < s \\<rbrakk> \\<Longrightarrow> rtos r s (r * s) = r * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> rtos r s (r * s) = r * s", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_rs_Tr2:\"\\<lbrakk>(0::nat) < r; 0 < s \\<rbrakk> \\<Longrightarrow>\n                                 \\<forall>l \\<le> (r * s). rtos r s l \\<le> (r * s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>r * s. rtos r s l \\<le> r * s", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (case_tac \"l = r * s\", simp add:rtos_rs_Tr1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l \\<le> r * s; l \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (frule le_imp_less_or_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l \\<le> r * s; l \\<noteq> r * s;\n        l < r * s \\<or> l = r * s\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (thin_tac \"l \\<le> r * s\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (frule mult_less_mono2[of \"0\" \"s\" \"r\"],\n        simp only:mult.commute,\n        simp only:mult_0_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s; 0 < r * s\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (frule_tac  r = r and s = s and l = l in rtos_hom2, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s; 0 < r * s\\<rbrakk>\n       \\<Longrightarrow> l \\<le> r * s - Suc 0\n 2. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s; 0 < r * s;\n        rtos r s l \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (rule less_le_diff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s; 0 < r * s\\<rbrakk>\n       \\<Longrightarrow> l < r * s\n 2. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s; 0 < r * s;\n        rtos r s l \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>0 < r; 0 < s; l < r * s; 0 < r * s;\n        rtos r s l \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s", "apply (metis le_pre_le)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_rs_Tr3:\"\\<lbrakk>(0::nat) < r; 0 < s \\<rbrakk> \\<Longrightarrow>\n                             inj_on (rtos r s) {i. i \\<le> (r * s)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> inj_on (rtos r s) {i. i \\<le> r * s}", "apply (frule rtos_inj [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s;\n     inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> inj_on (rtos r s) {i. i \\<le> r * s}", "apply (simp add:inj_on_def [of _ \"{i. i \\<le> (r * s)}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s;\n     inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<le>r * s.\n                         \\<forall>y\\<le>r * s.\n                            rtos r s x = rtos r s y \\<longrightarrow> x = y", "apply ((rule allI, rule impI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (case_tac \"x = r * s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x = r * s\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        y \\<le> r * s; rtos r s (r * s) = rtos r s y; x = r * s;\n        r * s \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule not_sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        y \\<le> r * s; rtos r s (r * s) = rtos r s y; x = r * s;\n        r * s \\<noteq> y; y \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule mult_less_mono2[of \"0\" \"s\" \"r\"],\n        simp only:mult.commute, simp only:mult_0_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        y \\<le> r * s; rtos r s (r * s) = rtos r s y; x = r * s;\n        r * s \\<noteq> y; y \\<noteq> r * s; 0 < r * s\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (cut_tac x = y and n = \"r * s - Suc 0\" in Nset_pre, simp+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        y \\<le> r * s; rtos r s (r * s) = rtos r s y; x = r * s;\n        y \\<noteq> r * s; y \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule_tac l = y in rtos_hom1[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        y \\<le> r * s; rtos r s (r * s) = rtos r s y; x = r * s;\n        y \\<noteq> r * s; y \\<le> r * s - Suc 0;\n        rtos r s y \\<le> s * r - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp only: rtos_rs_Tr1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s;\n        inj_on (rtos r s) {i. i \\<le> rtos r s y - Suc 0};\n        y \\<le> rtos r s y; r * s = rtos r s y; x = rtos r s y;\n        y \\<noteq> rtos r s y; y \\<le> rtos r s y - Suc 0;\n        rtos r s y \\<le> s * r - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule sym, thin_tac \"r * s = rtos r s y\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        y \\<le> r * s; x = r * s; y \\<noteq> r * s; y \\<le> r * s - Suc 0;\n        r * s \\<le> s * r - Suc 0; rtos r s y = r * s\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; x = r * s; y = 0; r * s \\<le> r * s - Suc 0;\n        rtos r s 0 = r * s\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add: not_less [symmetric, of \"r * s\" \"r * s - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule mult_less_mono2[of \"0\" \"s\" \"r\"],\n       simp only:mult.commute, simp only:mult_0_right,\n       cut_tac x = x in Nset_pre[of _ \"r * s - Suc 0\"], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (case_tac \"y = r * s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y = r * s\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add: rtos_rs_Tr1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; rtos r s x = r * s; x \\<noteq> r * s;\n        x \\<le> r * s - Suc 0; y = r * s\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule_tac l = x in rtos_hom1[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; rtos r s x = r * s; x \\<noteq> r * s;\n        x \\<le> r * s - Suc 0; y = r * s;\n        rtos r s x \\<le> s * r - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; rtos r s 0 = r * s; x = 0; y = r * s;\n        r * s \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add: not_less [symmetric, of \"r * s\" \"r * s - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (cut_tac x = y in Nset_pre[of _ \"r * s - Suc 0\"], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s;\n        y \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (frule rtos_inj[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>0 < r; 0 < s; inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n        x \\<le> r * s; y \\<le> r * s; rtos r s x = rtos r s y;\n        x \\<noteq> r * s; x \\<le> r * s - Suc 0; y \\<noteq> r * s;\n        y \\<le> r * s - Suc 0;\n        inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Qw_cmpser:\"\\<lbrakk>Group G; w_cmpser G (Suc n) f \\<rbrakk> \\<Longrightarrow> \n                               Gchain n (Qw_cmpser G f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc n) f\\<rbrakk>\n    \\<Longrightarrow> Gchain n (Qw_cmpser G f)", "apply (simp add:Gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc n) f\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>n. Group (Qw_cmpser G f l)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; w_cmpser G (Suc n) f; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (Qw_cmpser G f l)", "apply (simp  add:Qw_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; w_cmpser G (Suc n) f; l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply (simp add:w_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G;\n        d_gchain G (Suc n) f \\<and>\n        (\\<forall>l\\<le>n.\n            \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l));\n        l \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n; d_gchain G (Suc n) f;\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f\n l \\<triangleright> f (Suc l)\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply (simp add:d_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n;\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f\n l \\<triangleright> f (Suc l)\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply (cut_tac c = l in subsetD[of \"{i. i \\<le> n}\" \"{i. i \\<le> (Suc n)}\"], \n        rule subsetI, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n;\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l);\n        l \\<in> {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply (frule_tac H = \"f l\" in Group.Group_Gp[of \"G\"],\n        frule_tac a = l in forall_spec, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n;\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l);\n        Group (\\<natural>\\<^bsub>G\\<^esub>f l)\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply (frule_tac G = \"Gp G (f l)\" and N = \"f (Suc l)\" in Group.Group_Qg)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n;\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l);\n        Group (\\<natural>\\<^bsub>G\\<^esub>f l)\\<rbrakk>\n       \\<Longrightarrow> \\<natural>\\<^bsub>G\\<^esub>f\n               l \\<triangleright> f (Suc l)\n 2. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n;\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l);\n        Group (\\<natural>\\<^bsub>G\\<^esub>f l);\n        Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Group G; l \\<le> n;\n        \\<forall>l\\<le>Suc n.\n           G \\<guillemotright> f l  \\<and>\n           (\\<forall>l\\<le>n. f (Suc l) \\<subseteq> f l);\n        \\<forall>l\\<le>n.\n           \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l);\n        Group (\\<natural>\\<^bsub>G\\<^esub>f l);\n        Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))\\<rbrakk>\n       \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>f l / f (Suc l))", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  wcsr_rfns :: \"[_ , nat, nat \\<Rightarrow> 'a set, nat] \\<Rightarrow> (nat \\<Rightarrow> 'a set) set\" where\n  \"wcsr_rfns G r f s = {h. tw_cmpser G (s * r) h \\<and> \n                                 (\\<forall>i \\<le> r. h (i * s) = f i)}\""], ["", "(** where f \\<in> tw_cmpser G r **)\n  (**  0-+-+-2-+-+-4-+-+-6  h \n      f 0   f 1   f 2   f 3  **)"], ["", "definition\n  trivial_rfn :: \"[_ , nat, nat \\<Rightarrow> 'a set, nat] \\<Rightarrow> (nat \\<Rightarrow> 'a set)\" where\n  \"trivial_rfn G r f s k == if k < (s * r) then f (k div s) else f r\""], ["", "lemma (in Group) rfn_tool8:\"\\<lbrakk>compseries G r f; 0 < r\\<rbrakk> \\<Longrightarrow> d_gchain G r f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>compseries G r f; 0 < r\\<rbrakk>\n    \\<Longrightarrow> d_gchain G r f", "apply (simp add:compseries_def tW_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tD_gchain G r f \\<and>\n             (\\<forall>l\\<le>r - Suc 0.\n                 \\<natural>f l \\<triangleright> f (Suc l)) \\<and>\n             (\\<forall>i\\<le>r - Suc 0.\n                 simple_Group (\\<natural>f i / f (Suc i)));\n     0 < r\\<rbrakk>\n    \\<Longrightarrow> d_gchain G r f", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; tD_gchain G r f;\n     \\<forall>l\\<le>r - Suc 0. \\<natural>f l \\<triangleright> f (Suc l);\n     \\<forall>i\\<le>r - Suc 0.\n        simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> d_gchain G r f", "apply (simp add:tD_gchain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r;\n     D_gchain G r f \\<and> f 0 = carrier G \\<and> f r = {\\<one>};\n     \\<forall>l\\<le>r - Suc 0. \\<natural>f l \\<triangleright> f (Suc l);\n     \\<forall>i\\<le>r - Suc 0.\n        simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> d_gchain G r f", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r;\n     \\<forall>l\\<le>r - Suc 0. \\<natural>f l \\<triangleright> f (Suc l);\n     \\<forall>i\\<le>r - Suc 0. simple_Group (\\<natural>f i / f (Suc i));\n     D_gchain G r f; f 0 = carrier G; f r = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> d_gchain G r f", "apply (simp add:D_gchain_is_d_gchain)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) rfn_tool16:\"\\<lbrakk>0 < r; 0 < s; i \\<le> (s * r - Suc 0); \n G \\<guillemotright> f (i div s); (Gp G (f (i div s))) \\<triangleright> f (Suc (i div s)); \n (Gp G (f (i div s))) \\<guillemotright> (f (i div s) \\<inter> g (s - Suc 0))\\<rbrakk>  \\<Longrightarrow> \n (Gp G ((f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (s - Suc 0))))) \\<triangleright> \n                                                   (f (Suc (i div s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> s * r - Suc 0;\n     G \\<guillemotright> f (i div s) ;\n     \\<natural>f (i div s) \\<triangleright> f (Suc (i div s));\n     \\<natural>f (i div\n                  s) \\<guillemotright> f (i div s) \\<inter>\n g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> \\<natural>f (Suc (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (s - Suc 0) \\<triangleright> f (Suc (i div s))", "apply (rule ZassenhausTr4_1 [of \"f (i div s)\" \"f (Suc (i div s))\" \"g (s - Suc 0)\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>Show existence of the trivial refinement. This is not necessary\nto prove JHS\\<close>"], ["", "lemma rfn_tool30:\"\\<lbrakk>0 < r; 0 < s; l div s * s + s < s * r\\<rbrakk> \n                \\<Longrightarrow> Suc (l div s) < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l div s * s + s < s * r\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) < r", "apply (simp add:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l div s * s + s < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) < r", "apply (cut_tac add_mult_distrib[THEN sym, of \"l div s\" \"s\" \"1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l div s * s + s < r * s;\n     l div s * s + 1 * s = (l div s + 1) * s\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) < r", "apply (simp only:nat_mult_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; (l div s + 1) * s < r * s;\n     l div s * s + s = (l div s + 1) * s\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) < r", "apply (thin_tac \"l div s * s + s = (l div s + 1) * s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; (l div s + 1) * s < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) < r", "apply (cut_tac mult_less_cancel2[of \"l div s + 1\" \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; (l div s + 1) * s < r * s;\n     ((l div s + 1) * s < r * s) = (0 < s \\<and> l div s + 1 < r)\\<rbrakk>\n    \\<Longrightarrow> Suc (l div s) < r", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) simple_grouptr0:\"\\<lbrakk>G \\<guillemotright> H; G \\<triangleright> K; K \\<subseteq> H; simple_Group (G / K)\\<rbrakk>\n  \\<Longrightarrow> H = carrier G \\<or> H = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     simple_Group (G / K)\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:simple_Group_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     {N. G / K \\<guillemotright> N } =\n     {carrier (G / K), {\\<one>\\<^bsub>G / K\\<^esub>}}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule subg_Qsubg[of \"H\" \"K\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     {N. G / K \\<guillemotright> N } =\n     {carrier (G / K), {\\<one>\\<^bsub>G / K\\<^esub>}};\n     G / K \\<guillemotright> carrier (\\<natural>H / K) \\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     {N. G / K \\<guillemotright> N } =\n     {carrier (G / K), {\\<one>\\<^bsub>G / K\\<^esub>}}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule in_set_with_P[of _ \"carrier ((Gp G H) / K)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     {N. G / K \\<guillemotright> N } =\n     {carrier (G / K), {\\<one>\\<^bsub>G / K\\<^esub>}};\n     carrier (\\<natural>H / K)\n     \\<in> {y. G / K \\<guillemotright> y }\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     {N. G / K \\<guillemotright> N } =\n     {carrier (G / K), {\\<one>\\<^bsub>G / K\\<^esub>}};\n     carrier (\\<natural>H / K) = carrier (G / K) \\<or>\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (thin_tac \"{N. G / K \\<guillemotright> N } = {carrier (G / K), {\\<one>\\<^bsub>G / K\\<^esub>}}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K) \\<or>\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K)\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule sg_subset[of \"H\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K);\n     H \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule equalityI[of \"H\" \"carrier G\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K);\n     H \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> carrier G \\<subseteq> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (rule subsetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        carrier (\\<natural>H / K) = carrier (G / K);\n        H \\<subseteq> carrier G; x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:Qg_carrier)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> set_rcs G K ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        carrier (\\<natural>H / K) = set_rcs G K; H \\<subseteq> carrier G;\n        x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule nsg_sg[of \"K\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> set_rcs G K ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        carrier (\\<natural>H / K) = set_rcs G K; H \\<subseteq> carrier G;\n        x \\<in> carrier G; G \\<guillemotright> K \\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule_tac a = x in rcs_in_set_rcs[of \"K\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> set_rcs G K ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        carrier (\\<natural>H / K) = set_rcs G K; H \\<subseteq> carrier G;\n        x \\<in> carrier G; G \\<guillemotright> K ;\n        K \\<bullet> x \\<in> set_rcs G K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule sym, thin_tac \"carrier ((\\<natural>H)/ K) = set_rcs G K\", simp,\n        thin_tac \"set_rcs G K = carrier ((\\<natural>H) / K)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        H \\<subseteq> carrier G; x \\<in> carrier G; G \\<guillemotright> K ;\n        K \\<bullet> x \\<in> carrier (\\<natural>H / K)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule Group_Gp[of \"H\"], simp add:Group.Qg_carrier[of \"Gp G H\" \"K\"],\n        simp add:set_rcs_def, erule bexE, simp add:Gp_carrier)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>G /\n                K \\<guillemotright> {C. \\<exists>a\\<in>H.\n     C = K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> a} ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        H \\<subseteq> carrier G; x \\<in> carrier G; G \\<guillemotright> K ;\n        Group (\\<natural>H); a \\<in> H;\n        K \\<bullet> x = K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:rcs_in_Gp[THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>G /\n                K \\<guillemotright> {C. \\<exists>a\\<in>H.\n     C = K \\<bullet> a} ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        H \\<subseteq> carrier G; x \\<in> carrier G; G \\<guillemotright> K ;\n        Group (\\<natural>H); a \\<in> H;\n        K \\<bullet> x = K \\<bullet> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule_tac a = x in a_in_rcs[of \"K\"], assumption+, simp,\n        thin_tac \"K \\<bullet> x = K \\<bullet> a\",\n        thin_tac \"G / K \\<guillemotright> {C. \\<exists>a\\<in>H. C = K \\<bullet> a}\",\n        simp add:rcs_def, erule bexE,\n        frule_tac c = h in subsetD[of \"K\" \"H\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a h.\n       \\<lbrakk>G \\<guillemotright> H ; G \\<triangleright> K;\n        K \\<subseteq> H; H \\<subseteq> carrier G; x \\<in> carrier G;\n        G \\<guillemotright> K ; Group (\\<natural>H); a \\<in> H; h \\<in> K;\n        h \\<cdot> a = x; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule_tac x = h and y = a in sg_mult_closed[of \"H\"], assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = carrier (G / K); H \\<subseteq> carrier G;\n     H = carrier G\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule equalityI[THEN sym, of \"K\" \"H\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> H \\<subseteq> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n        x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule Group_Gp[of \"H\"], simp add:Group.Qg_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {\\<one>\\<^bsub>G / K\\<^esub>} ;\n        G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {\\<one>\\<^bsub>G / K\\<^esub>}; x \\<in> H;\n        Group (\\<natural>H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:Qg_one)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H;\n        Group (\\<natural>H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule nsg_sg[of \"K\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K \\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule_tac a = x in Group.rcs_in_set_rcs[of \"Gp G H\" \"K\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K \\<rbrakk>\n       \\<Longrightarrow> \\<natural>H \\<guillemotright> K \n 2. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K \\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier (\\<natural>H)\n 3. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x\n        \\<in> set_rcs (\\<natural>H) K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 4. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:sg_sg)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K \\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier (\\<natural>H)\n 2. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x\n        \\<in> set_rcs (\\<natural>H) K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:Gp_carrier)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x\n        \\<in> set_rcs (\\<natural>H) K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 2. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (frule_tac a = x in Group.rcs_fixed[of \"Gp G H\" \"K\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> \\<natural>H \\<guillemotright> K \n 2. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier (\\<natural>H)\n 3. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\n 4. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K; x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 5. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:sg_sg)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier (\\<natural>H)\n 2. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\n 3. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K; x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 4. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply (simp add:Gp_carrier)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\\<rbrakk>\n       \\<Longrightarrow> K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K\n 2. \\<And>x.\n       \\<lbrakk>G / K \\<guillemotright> {K} ; G \\<guillemotright> H ;\n        G \\<triangleright> K; K \\<subseteq> H;\n        set_rcs (\\<natural>H) K = {K}; x \\<in> H; Group (\\<natural>H);\n        G \\<guillemotright> K ;\n        K \\<bullet>\\<^bsub>\\<natural>H\\<^esub> x = K; x \\<in> K\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K\n 3. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G / K \\<guillemotright> carrier (\\<natural>H / K) ;\n     G \\<guillemotright> H ; G \\<triangleright> K; K \\<subseteq> H;\n     carrier (\\<natural>H / K) = {\\<one>\\<^bsub>G / K\\<^esub>};\n     H = K\\<rbrakk>\n    \\<Longrightarrow> H = carrier G \\<or> H = K", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compser_nsg:\"\\<lbrakk>0 < n; compseries G n f; i \\<le> (n - 1)\\<rbrakk>\n                  \\<Longrightarrow>  Gp G (f i) \\<triangleright> (f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - 1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)", "apply (simp add:compseries_def tW_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseriesTr5:\"\\<lbrakk>0 < n; compseries G n f; i \\<le> (n - Suc 0)\\<rbrakk>\n          \\<Longrightarrow> (f (Suc i)) \\<subseteq>  (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0\\<rbrakk>\n    \\<Longrightarrow> f (Suc i) \\<subseteq> f i", "apply (frule compseriesTr4[of \"n\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     w_cmpser G n f\\<rbrakk>\n    \\<Longrightarrow> f (Suc i) \\<subseteq> f i", "apply (frule w_cmpser_is_d_gchain[of \"n\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0; w_cmpser G n f;\n     d_gchain G n f\\<rbrakk>\n    \\<Longrightarrow> f (Suc i) \\<subseteq> f i", "apply (simp add:d_gchain_def,\n     cut_tac n_in_Nsetn[of \"n\"],\n     frule_tac a = n in forall_spec, simp,\n     thin_tac \"\\<forall>l \\<le> n. G \\<guillemotright> f l  \\<and> (\\<forall>l \\<le> (n - Suc 0). f (Suc l) \\<subseteq> f l)\",\n     erule conjE, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) refine_cmpserTr0:\"\\<lbrakk>0 < n; compseries G n f; i \\<le> (n - 1);\n        G \\<guillemotright> H;  f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i\\<rbrakk> \\<Longrightarrow> H = f (Suc i) \\<or> H = f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - 1; G \\<guillemotright> H ;\n     f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (frule compseriesTr0 [of \"n\" \"f\" \"i\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - 1; G \\<guillemotright> H ;\n     f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i\\<rbrakk>\n    \\<Longrightarrow> i \\<le> n\n 2. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - 1; G \\<guillemotright> H ;\n     f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i;\n     G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (cut_tac lessI[of \"n - Suc 0\"], simp only:Suc_pred, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ;\n     f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i;\n     G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (frule Group_Gp [of \"f i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ;\n     f (Suc i) \\<subseteq> H \\<and> H \\<subseteq> f i;\n     G \\<guillemotright> f i ; Group (\\<natural>f i)\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H;\n     H \\<subseteq> f i\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (frule compseriesTr4[of \"n\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (frule w_cmpser_ns[of \"n\" \"f\" \"i\"], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (unfold compseries_def, frule conjunct2, fold compseries_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     \\<forall>i\\<le>n - Suc 0.\n        simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (frule_tac x = i in spec, \n        thin_tac \"\\<forall>i\\<le>n - Suc 0. simple_Group ((\\<natural>f i) / f (Suc i))\",\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (frule Group.simple_grouptr0 [of \"Gp G (f i)\" \"H\" \"f (Suc i)\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<guillemotright> H \n 2. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)\n 3. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> f (Suc i) \\<subseteq> H\n 4. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> simple_Group (\\<natural>f i / f (Suc i))\n 5. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i));\n     H = carrier (\\<natural>f i) \\<or> H = f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (simp add:sg_sg)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)\n 2. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> f (Suc i) \\<subseteq> H\n 3. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> simple_Group (\\<natural>f i / f (Suc i))\n 4. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i));\n     H = carrier (\\<natural>f i) \\<or> H = f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i));\n     H = carrier (\\<natural>f i) \\<or> H = f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply (simp add:Gp_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; compseries G n f; i \\<le> n - Suc 0;\n     G \\<guillemotright> H ; G \\<guillemotright> f i ;\n     Group (\\<natural>f i); f (Suc i) \\<subseteq> H; H \\<subseteq> f i;\n     w_cmpser G n f; \\<natural>f i \\<triangleright> f (Suc i);\n     simple_Group (\\<natural>f i / f (Suc i));\n     H = f i \\<or> H = f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> H = f (Suc i) \\<or> H = f i", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma div_Tr4:\"\\<lbrakk> (0::nat) < r; 0 < s; j < s * r \\<rbrakk> \\<Longrightarrow> j div s * s + s \\<le> r * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply (frule div_Tr2 [of \"r\" \"s\" \"j\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply (frule mult_le_mono [of \"j div s\" \"r - Suc 0\" \"s\" \"s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> s \\<le> s\n 2. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s \\<le> (r - Suc 0) * s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s \\<le> (r - Suc 0) * s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply (frule add_le_mono [of \"j div s * s\" \"(r - Suc 0) * s\" \"s\" \"s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s \\<le> (r - Suc 0) * s\\<rbrakk>\n    \\<Longrightarrow> s \\<le> s\n 2. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s \\<le> (r - Suc 0) * s;\n     j div s * s + s \\<le> (r - Suc 0) * s + s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s \\<le> (r - Suc 0) * s;\n     j div s * s + s \\<le> (r - Suc 0) * s + s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply (thin_tac \"j div s * s \\<le> (r - Suc 0) * s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s + s \\<le> (r - Suc 0) * s + s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply (cut_tac add_mult_distrib[THEN sym, of \"r - Suc 0\" \"s\" \"1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s + s \\<le> (r - Suc 0) * s + s;\n     (r - Suc 0) * s + 1 * s = (r - Suc 0 + 1) * s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply (simp only:nat_mult_1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; j < s * r; j div s \\<le> r - Suc 0;\n     j div s * s + s \\<le> (r - Suc 0 + 1) * s;\n     (r - Suc 0) * s + s = (r - Suc 0 + 1) * s\\<rbrakk>\n    \\<Longrightarrow> j div s * s + s \\<le> r * s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseries_is_tW_cmpser:\"\\<lbrakk>0 < r; compseries G r f\\<rbrakk> \\<Longrightarrow>\n        tW_cmpser G r f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f\\<rbrakk>\n    \\<Longrightarrow> tW_cmpser G r f", "by (simp add:compseries_def)"], ["", "lemma (in Group) compseries_is_td_gchain:\"\\<lbrakk>0 < r; compseries G r f\\<rbrakk> \\<Longrightarrow>\n        td_gchain G r f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f\\<rbrakk>\n    \\<Longrightarrow> td_gchain G r f", "apply (frule compseries_is_tW_cmpser, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; tW_cmpser G r f\\<rbrakk>\n    \\<Longrightarrow> td_gchain G r f", "apply (simp add:tW_cmpser_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; tD_gchain G r f;\n     \\<forall>l\\<le>r - Suc 0.\n        \\<natural>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> td_gchain G r f", "apply (thin_tac \"\\<forall>l\\<le>(r - Suc 0). (\\<natural>f l) \\<triangleright> (f (Suc l))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; tD_gchain G r f\\<rbrakk>\n    \\<Longrightarrow> td_gchain G r f", "apply (simp add:tD_gchain_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; D_gchain G r f; f 0 = carrier G;\n     f r = {\\<one>}\\<rbrakk>\n    \\<Longrightarrow> td_gchain G r f", "apply (frule D_gchain_is_d_gchain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; D_gchain G r f; f 0 = carrier G;\n     f r = {\\<one>}; d_gchain G r f\\<rbrakk>\n    \\<Longrightarrow> td_gchain G r f", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) compseries_is_D_gchain:\"\\<lbrakk>0 < r; compseries G r f\\<rbrakk> \\<Longrightarrow>\n             D_gchain G r f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f\\<rbrakk>\n    \\<Longrightarrow> D_gchain G r f", "apply (frule compseriesTr1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; tW_cmpser G r f\\<rbrakk>\n    \\<Longrightarrow> D_gchain G r f", "apply (frule tW_cmpser_is_W_cmpser)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; compseries G r f; tW_cmpser G r f;\n     W_cmpser G r f\\<rbrakk>\n    \\<Longrightarrow> D_gchain G r f", "apply (rule W_cmpser_is_D_gchain, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma divTr5:\"\\<lbrakk>0 < r; 0 < s; l < (r * s)\\<rbrakk>  \\<Longrightarrow>\n                 l div s * s \\<le> l \\<and> l  \\<le> (Suc (l div s)) * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s\\<rbrakk>\n    \\<Longrightarrow> l div s * s \\<le> l \\<and> l \\<le> Suc (l div s) * s", "apply (insert div_mult_mod_eq [THEN sym, of \"l\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> l div s * s \\<le> l \\<and> l \\<le> Suc (l div s) * s", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> l div s * s \\<le> l\n 2. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (insert le_add1 [of \"l div s * s\" \"l mod s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> l div s * s \\<le> l\n 2. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (frule mod_less_divisor [of \"s\" \"l\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s; l mod s < s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (frule less_imp_le [of \"l mod s\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s; l mod s < s;\n     l mod s \\<le> s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (insert self_le [of \"l div s * s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s; l mod s < s; l mod s \\<le> s;\n     l div s * s \\<le> l div s * s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (frule add_le_mono [of \"l div s * s\" \"l div s * s\" \"l mod s\" \"s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s; l mod s < s; l mod s \\<le> s;\n     l div s * s \\<le> l div s * s\\<rbrakk>\n    \\<Longrightarrow> l mod s \\<le> s\n 2. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s; l mod s < s; l mod s \\<le> s;\n     l div s * s \\<le> l div s * s;\n     l div s * s + l mod s \\<le> l div s * s + s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l div s * s \\<le> l div s * s + l mod s; l mod s < s; l mod s \\<le> s;\n     l div s * s \\<le> l div s * s;\n     l div s * s + l mod s \\<le> l div s * s + s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (thin_tac \"l div s * s \\<le> l div s * s + l mod s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l mod s < s; l mod s \\<le> s; l div s * s \\<le> l div s * s;\n     l div s * s + l mod s \\<le> l div s * s + s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply (thin_tac \"l div s * s \\<le> l div s * s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; l < r * s; l = l div s * s + l mod s;\n     l mod s < s; l mod s \\<le> s;\n     l div s * s + l mod s \\<le> l div s * s + s\\<rbrakk>\n    \\<Longrightarrow> l \\<le> Suc (l div s) * s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) rfn_compseries_iMTr1:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \nh \\<in> wcsr_rfns G r f s\\<rbrakk> \\<Longrightarrow>  f ` {i. i \\<le> r} \\<subseteq>  h ` {i. i \\<le> (s * r)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f;\n     h \\<in> wcsr_rfns G r f s\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}", "apply (simp add:wcsr_rfns_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f;\n     tw_cmpser G (s * r) h \\<and>\n     (\\<forall>i\\<le>r. h (i * s) = f i)\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f;\n        tw_cmpser G (s * r) h \\<and> (\\<forall>i\\<le>r. h (i * s) = f i);\n        x \\<in> f ` {i. i \\<le> r}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> h ` {i. i \\<le> s * r}", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f;\n        tw_cmpser G (s * r) h \\<and> (\\<forall>i\\<le>r. h (i * s) = f i);\n        \\<exists>xa\\<le>r. x = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<le>s * r. x = h xa", "apply (auto del:equalityI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        \\<forall>i\\<le>r. h (i * s) = f i; xa \\<le> r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply (frule_tac i = xa in mult_le_mono [of _ \"r\" \"s\" \"s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        \\<forall>i\\<le>r. h (i * s) = f i; xa \\<le> r\\<rbrakk>\n       \\<Longrightarrow> s \\<le> s\n 2. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        \\<forall>i\\<le>r. h (i * s) = f i; xa \\<le> r;\n        xa * s \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        \\<forall>i\\<le>r. h (i * s) = f i; xa \\<le> r;\n        xa * s \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply (simp add:mult.commute [of \"r\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        \\<forall>i\\<le>r. h (i * s) = f i; xa \\<le> r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply (frule_tac a = xa in forall_spec, assumption,\n       thin_tac \"\\<forall>i\\<le>r. h (i * s) = f i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        xa \\<le> r; h (xa * s) = f xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply (frule sym, thin_tac \"h (xa * s) = f xa\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        xa \\<le> r; f xa = h (xa * s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply (cut_tac a = xa in mult_mono[of _ r s s], simp, simp, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; tw_cmpser G (s * r) h;\n        xa \\<le> r; f xa = h (xa * s); xa * s \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>s * r. f xa = h x", "apply (simp only:mult.commute[of r s], blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_compseries_iMTr2:\"\\<lbrakk>0 < r; 0 < s; xa < s * r \\<rbrakk> \\<Longrightarrow>\n         xa div s * s \\<le> r * s \\<and> Suc (xa div s) * s \\<le> r * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r\\<rbrakk>\n    \\<Longrightarrow> xa div s * s \\<le> r * s \\<and>\n                      Suc (xa div s) * s \\<le> r * s", "apply (frule div_Tr1 [of \"r\" \"s\" \"xa\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r\\<rbrakk>\n    \\<Longrightarrow> xa \\<le> s * r\n 2. \\<lbrakk>0 < r; 0 < s; xa < s * r; xa div s \\<le> r\\<rbrakk>\n    \\<Longrightarrow> xa div s * s \\<le> r * s \\<and>\n                      Suc (xa div s) * s \\<le> r * s", "apply (simp add:less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r; xa div s \\<le> r\\<rbrakk>\n    \\<Longrightarrow> xa div s * s \\<le> r * s \\<and>\n                      Suc (xa div s) * s \\<le> r * s", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r; xa div s \\<le> r\\<rbrakk>\n    \\<Longrightarrow> xa div s * s \\<le> r * s\n 2. \\<lbrakk>0 < r; 0 < s; xa < s * r; xa div s \\<le> r\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (simp add:mult_le_mono [of \"xa div s\" \"r\" \"s\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r; xa div s \\<le> r\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (thin_tac \"xa div s \\<le> r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (frule div_Tr2[of \"r\" \"s\" \"xa\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa < s * r; xa div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (thin_tac \"xa < s * r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (frule le_less_trans [of \"xa div s\" \"r - Suc 0\" \"r\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; xa div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 < r\n 2. \\<lbrakk>0 < r; 0 < s; xa div s \\<le> r - Suc 0; xa div s < r\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa div s \\<le> r - Suc 0; xa div s < r\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (frule Suc_leI [of \"xa div s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa div s \\<le> r - Suc 0; xa div s < r;\n     Suc (xa div s) \\<le> r\\<rbrakk>\n    \\<Longrightarrow> Suc (xa div s) * s \\<le> r * s", "apply (rule mult_le_mono [of \"Suc (xa div s)\" \"r\" \"s\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; xa div s \\<le> r - Suc 0; xa div s < r;\n     Suc (xa div s) \\<le> r\\<rbrakk>\n    \\<Longrightarrow> s \\<le> s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) rfn_compseries_iMTr3:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \n      j \\<le> r; \\<forall>i \\<le> r. h (i * s) = f i\\<rbrakk> \\<Longrightarrow>  h (j * s) = f j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; j \\<le> r;\n     \\<forall>i\\<le>r. h (i * s) = f i\\<rbrakk>\n    \\<Longrightarrow> h (j * s) = f j", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) rfn_compseries_iM:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \n      h \\<in> wcsr_rfns G r f s\\<rbrakk>  \\<Longrightarrow> card (h `{i. i \\<le> (s * r)}) = r + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f;\n     h \\<in> wcsr_rfns G r f s\\<rbrakk>\n    \\<Longrightarrow> card (h ` {i. i \\<le> s * r}) = r + 1", "apply (frule compseries_is_D_gchain, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f\\<rbrakk>\n    \\<Longrightarrow> card (h ` {i. i \\<le> s * r}) = r + 1", "apply (frule D_gchain1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r}\\<rbrakk>\n    \\<Longrightarrow> card (h ` {i. i \\<le> s * r}) = r + 1", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r}\\<rbrakk>\n    \\<Longrightarrow> card (h ` {i. i \\<le> s * r}) = Suc r", "apply (subst card_Collect_le_nat[THEN sym, of \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r}\\<rbrakk>\n    \\<Longrightarrow> card (h ` {i. i \\<le> s * r}) = card {i. i \\<le> r}", "apply (subst card_image[THEN sym, of \"f\" \"{i. i \\<le> r}\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r}\\<rbrakk>\n    \\<Longrightarrow> card (h ` {i. i \\<le> s * r}) =\n                      card (f ` {i. i \\<le> r})", "apply (rule card_eq[of \"h ` {i. i \\<le> (s * r)}\" \"f ` {i. i \\<le> r}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r}\\<rbrakk>\n    \\<Longrightarrow> h ` {i. i \\<le> s * r} = f ` {i. i \\<le> r}", "apply (frule rfn_compseries_iMTr1[of \"r\" \"s\" \"f\" \"h\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r};\n     f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\\<rbrakk>\n    \\<Longrightarrow> h ` {i. i \\<le> s * r} = f ` {i. i \\<le> r}", "apply (rule equalityI[of \"h ` {i. i \\<le> (s * r)}\" \"f ` {i. i \\<le> r}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r};\n     f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\\<rbrakk>\n    \\<Longrightarrow> h ` {i. i \\<le> s * r} \\<subseteq> f ` {i. i \\<le> r}\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r};\n     f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r};\n     f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r};\n     f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\\<rbrakk>\n    \\<Longrightarrow> h ` {i. i \\<le> s * r} \\<subseteq> f ` {i. i \\<le> r}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n     D_gchain G r f; inj_on f {i. i \\<le> r};\n     f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\\<rbrakk>\n    \\<Longrightarrow> h ` {i. i \\<le> s * r} \\<subseteq> f ` {i. i \\<le> r}", "apply (rule subsetI,\n       thin_tac \"f ` {i. i \\<le> r} \\<subseteq> h ` {i. i \\<le> s * r}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n        D_gchain G r f; inj_on f {i. i \\<le> r};\n        x \\<in> h ` {i. i \\<le> s * r}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> f ` {i. i \\<le> r}", "apply (frule_tac b = x and f = h and A = \"{i. i \\<le> (s * r)}\" in mem_in_image3,\n       erule bexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n        D_gchain G r f; inj_on f {i. i \\<le> r};\n        x \\<in> h ` {i. i \\<le> s * r}; a \\<in> {i. i \\<le> s * r};\n        x = h a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> f ` {i. i \\<le> r}", "apply (simp add:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; h \\<in> wcsr_rfns G r f s;\n        D_gchain G r f; inj_on f {i. i \\<le> r}; a \\<le> r * s;\n        x = h a\\<rbrakk>\n       \\<Longrightarrow> h a \\<in> f ` {i. i \\<le> r}", "apply (simp add:wcsr_rfns_def, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (s * r) h; \\<forall>i\\<le>r. h (i * s) = f i\\<rbrakk>\n       \\<Longrightarrow> h a \\<in> f ` {i. i \\<le> r}", "apply (frule rfn_compseries_iMTr3[of \"r\" \"s\" \"f\" \"r\" \"h\"], assumption+,\n       simp add:n_in_Nsetn, assumption+, subst image_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (s * r) h; \\<forall>i\\<le>r. h (i * s) = f i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (case_tac \"a = s * r\", simp add:mult.commute[of \"s\" \"r\"],\n        cut_tac n_in_Nsetn[of \"r\"], blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (s * r) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> s * r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (simp add:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac m = a and n = \"r * s\" in noteq_le_less, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule tw_cmpser_is_w_cmpser, frule w_cmpser_is_d_gchain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac xa = a in rfn_compseries_iMTr2[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h\\<rbrakk>\n       \\<Longrightarrow> a < s * r\n 2. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h;\n        a div s * s \\<le> r * s \\<and>\n        Suc (a div s) * s \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h;\n        a div s * s \\<le> r * s \\<and>\n        Suc (a div s) * s \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac l = a in divTr5[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s;\n        a div s * s \\<le> a \\<and> a \\<le> Suc (a div s) * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule pos_mult_pos[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s;\n        a div s * s \\<le> a \\<and> a \\<le> Suc (a div s) * s;\n        0 < r * s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (erule conjE,\n        frule_tac l = \"a div s * s\" and j = a in d_gchainTr2[of \"r * s\" \"h\"],\n        assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac l = a and j = \"Suc (a div s) * s\" in d_gchainTr2[of \"r * s\" \n       \"h\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac i = a in rtos_hom0[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a\\<rbrakk>\n       \\<Longrightarrow> a \\<le> r * s - Suc 0\n 2. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (rule less_le_diff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a\\<rbrakk>\n       \\<Longrightarrow> a < r * s\n 2. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac x = \"a div s\" and y = r in less_imp_le,\n        frule_tac a = \"a div s\" in forall_spec, assumption,\n        frule_tac a = \"Suc (a div s)\" in forall_spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r; a div s \\<le> r;\n        h (a div s * s) = f (a div s)\\<rbrakk>\n       \\<Longrightarrow> Suc (a div s) \\<le> r\n 2. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r; a div s \\<le> r;\n        h (a div s * s) = f (a div s);\n        h (Suc (a div s) * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (cut_tac m = \"Suc (a div s)\" and k = s and n = r in mult_le_cancel2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r; a div s \\<le> r;\n        h (a div s * s) = f (a div s);\n        (Suc (a div s) * s \\<le> r * s) =\n        (0 < s \\<longrightarrow> Suc (a div s) \\<le> r)\\<rbrakk>\n       \\<Longrightarrow> Suc (a div s) \\<le> r\n 2. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r; a div s \\<le> r;\n        h (a div s * s) = f (a div s);\n        h (Suc (a div s) * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; \\<forall>i\\<le>r. h (i * s) = f i;\n        a \\<noteq> r * s; a < r * s; w_cmpser G (r * s) h;\n        d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r; a div s \\<le> r;\n        h (a div s * s) = f (a div s);\n        h (Suc (a div s) * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (thin_tac \"\\<forall>i \\<le> r. h (i * s) = f i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; a \\<le> r * s; x = h a;\n        tw_cmpser G (r * s) h; a \\<noteq> r * s; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h; a div s * s \\<le> r * s;\n        Suc (a div s) * s \\<le> r * s; 0 < r * s; a div s * s \\<le> a;\n        a \\<le> Suc (a div s) * s; h a \\<subseteq> h (a div s * s);\n        h (Suc (a div s) * s) \\<subseteq> h a; a div s < r; a div s \\<le> r;\n        h (a div s * s) = f (a div s);\n        h (Suc (a div s) * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (cut_tac i = \"a div s\" and H = \"h a\"in refine_cmpserTr0[of \"r\" \"f\"],\n        simp, assumption+,\n        cut_tac x = \"a div s\" and n = r in less_le_diff, assumption, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> G \\<guillemotright> h a \n 2. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> f (Suc (a div s)) \\<subseteq> h a \\<and>\n                         h a \\<subseteq> f (a div s)\n 3. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s));\n        h a = f (Suc (a div s)) \\<or> h a = f (a div s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (simp add:d_gchain_mem_sg[of \"r * s\" \"h\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> f (Suc (a div s)) \\<subseteq> h a \\<and>\n                         h a \\<subseteq> f (a div s)\n 2. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s));\n        h a = f (Suc (a div s)) \\<or> h a = f (a div s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s));\n        h a = f (Suc (a div s)) \\<or> h a = f (a div s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s));\n        h a = f (Suc (a div s))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x\n 2. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s)); h a = f (a div s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac m = \"a div s\" and n = r in Suc_leI, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>0 < s; compseries G r f; D_gchain G r f;\n        inj_on f {i. i \\<le> r}; x = h a; tw_cmpser G (r * s) h; a < r * s;\n        w_cmpser G (r * s) h; d_gchain G (r * s) h;\n        s + a div s * s \\<le> r * s; a \\<le> s + a div s * s;\n        h a \\<subseteq> f (a div s); f (Suc (a div s)) \\<subseteq> h a;\n        a div s < r; h (a div s * s) = f (a div s);\n        h (s + a div s * s) = f (Suc (a div s)); h a = f (a div s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>r. h a = f x", "apply (frule_tac x = \"a div s\" and y = r in less_imp_le, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  cmp_rfn :: \"[_ , nat, nat \\<Rightarrow> 'a set, nat, nat \\<Rightarrow> 'a set] \\<Rightarrow> (nat \\<Rightarrow> 'a set)\" where\n  \"cmp_rfn G r f s g = (\\<lambda>i. (if i < s * r then  \n      f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (i mod s)) else {\\<one>\\<^bsub>G\\<^esub>}))\""], ["", "(** refinement of compseries G r f by a compseries G s g **)"], ["", "lemma (in Group) cmp_rfn0:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; \n i \\<le> (r - 1); j \\<le> (s - 1)\\<rbrakk> \\<Longrightarrow> G \\<guillemotright> f (Suc i) \\<diamondop>\\<^bsub>G\\<^esub> ((f i ) \\<inter> (g j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - 1; j \\<le> s - 1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc i) \\<diamondop> f i \\<inter> g j", "apply (rule ZassenhausTr2_1[of \"f i\" \"f (Suc i)\" \"g j\"], simp,\n       rule compseriesTr0[of \"r\" \"f\" \"i\"], assumption+,\n       frule_tac le_less_trans[of i \"r - Suc 0\" r], simp+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - Suc 0; j \\<le> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f (Suc i) \n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - 1; j \\<le> s - 1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g j \n 3. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - 1; j \\<le> s - 1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)", "apply (rule compseriesTr0[of \"r\" \"f\" \"Suc i\"], assumption+, arith)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - 1; j \\<le> s - 1\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g j \n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - 1; j \\<le> s - 1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)", "apply(rule compseriesTr0[of \"s\" \"g\" \"j\"], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r - 1; j \\<le> s - 1\\<rbrakk>\n    \\<Longrightarrow> \\<natural>f i \\<triangleright> f (Suc i)", "apply (frule compseries_is_tW_cmpser[of \"r\" \"f\"], assumption+,\n       simp add:tW_cmpser_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) cmp_rfn1:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n  \\<Longrightarrow> f (Suc 0) \\<diamondop>\\<^bsub>G\\<^esub> ((f 0 ) \\<inter> (g 0)) = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> f 0 \\<inter> g 0 = carrier G", "apply (frule compseriesTr2 [of \"r\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G\\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> f 0 \\<inter> g 0 = carrier G", "apply (frule compseriesTr2 [of \"s\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G; g 0 = carrier G\\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> f 0 \\<inter> g 0 = carrier G", "apply (frule compseriesTr0 [of _ \"f\" \"Suc 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G; g 0 = carrier G\\<rbrakk>\n    \\<Longrightarrow> Suc 0 \\<le> r\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G; g 0 = carrier G;\n     G \\<guillemotright> f (Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> f 0 \\<inter> g 0 = carrier G", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G; g 0 = carrier G;\n     G \\<guillemotright> f (Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> f 0 \\<inter> g 0 = carrier G", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G; g 0 = carrier G;\n     G \\<guillemotright> f (Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> carrier G = carrier G", "apply (rule K_absorb_HK[of \"f (Suc 0)\" \"carrier G\"], assumption+,\n       simp add:special_sg_G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     f 0 = carrier G; g 0 = carrier G;\n     G \\<guillemotright> f (Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<subseteq> carrier G", "apply (rule sg_subset, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) cmp_rfn2:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n           l \\<le> (s * r)\\<rbrakk>  \\<Longrightarrow> G \\<guillemotright> cmp_rfn G r f s g l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> cmp_rfn G r f s g l", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply (case_tac \"l < s * r\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l < s * r\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) \n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply (frule_tac i = \"l div s\" and j = \"l mod s\" in cmp_rfn0 [of \"r\" \"s\"],\n                                                 assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l < s * r\\<rbrakk>\n    \\<Longrightarrow> l div s \\<le> r - 1\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l < s * r\\<rbrakk>\n    \\<Longrightarrow> l mod s \\<le> s - 1\n 3. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     G \\<guillemotright> f (Suc (l div\n                                 s)) \\<diamondop> f (l div s) \\<inter>\n            g (l mod s) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) \n 4. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply (simp add:div_Tr2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l < s * r\\<rbrakk>\n    \\<Longrightarrow> l mod s \\<le> s - 1\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     G \\<guillemotright> f (Suc (l div\n                                 s)) \\<diamondop> f (l div s) \\<inter>\n            g (l mod s) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) \n 3. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply (frule_tac m = l in mod_less_divisor [of \"s\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     l mod s < s\\<rbrakk>\n    \\<Longrightarrow> l mod s \\<le> s - 1\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     G \\<guillemotright> f (Suc (l div\n                                 s)) \\<diamondop> f (l div s) \\<inter>\n            g (l mod s) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) \n 3. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply (frule_tac x = \"l mod s\" and n = s in less_le_diff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     l mod s < s; l mod s \\<le> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> l mod s \\<le> s - 1\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     G \\<guillemotright> f (Suc (l div\n                                 s)) \\<diamondop> f (l div s) \\<inter>\n            g (l mod s) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) \n 3. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; l < s * r;\n     G \\<guillemotright> f (Suc (l div\n                                 s)) \\<diamondop> f (l div s) \\<inter>\n            g (l mod s) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) \n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r; \\<not> l < s * r\\<rbrakk>\n    \\<Longrightarrow> (l < s * r \\<longrightarrow>\n                       G \\<guillemotright> f\n      (Suc (l div s)) \\<diamondop> f (l div s) \\<inter> g (l mod s) ) \\<and>\n                      (l = s * r \\<longrightarrow>\n                       G \\<guillemotright> {\\<one>} )", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l = s * r\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> {\\<one>}", "apply (rule special_sg_e)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) cmp_rfn3:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n \\<Longrightarrow> cmp_rfn G r f s g 0 = carrier G \\<and> cmp_rfn G r f s g (s * r) = {\\<one>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g 0 = carrier G \\<and>\n                      cmp_rfn G r f s g (s * r) = {\\<one>}", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g 0 = carrier G\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (s * r) = {\\<one>}", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> f (Suc 0) \\<diamondop> f 0 \\<inter> g 0 = carrier G\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (s * r) = {\\<one>}", "apply (rule cmp_rfn1 [of \"r\" \"s\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (s * r) = {\\<one>}", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool20:\"\\<lbrakk>(0::nat) < m; a = b * m + c; c < m \\<rbrakk> \\<Longrightarrow>  a mod m = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < m; a = b * m + c; c < m\\<rbrakk>\n    \\<Longrightarrow> a mod m = c", "apply (simp add:add.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suci_mod_s_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0\\<rbrakk>\n        \\<Longrightarrow> (Suc i) mod s = Suc (i mod s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i mod s < s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i mod s)", "apply (insert div_mult_mod_eq [of \"i\" \"s\", THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i mod s)", "apply (subgoal_tac \"Suc i = i div s * s + Suc (i mod s)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i mod s)\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply (subgoal_tac \"Suc i mod s  = (i div s * s + Suc (i mod s)) mod s\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i mod s)\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = (i div s * s + Suc (i mod s)) mod s\n 3. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply (subgoal_tac \"Suc (i mod s) < s\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s;\n     Suc (i mod s) < s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i mod s)\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) < s\n 3. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = (i div s * s + Suc (i mod s)) mod s\n 4. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply (frule_tac m = s and a = \"Suc i\" and b = \"i div s\" and c = \"Suc (i mod s)\" in rfn_tool20, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) < s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = (i div s * s + Suc (i mod s)) mod s\n 3. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply (subgoal_tac \"Suc (i mod s) < Suc (s - Suc 0)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s;\n     Suc (i mod s) < Suc (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) < s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) < Suc (s - Suc 0)\n 3. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = (i div s * s + Suc (i mod s)) mod s\n 4. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s);\n     Suc i mod s = (i div s * s + Suc (i mod s)) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) < Suc (s - Suc 0)\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = (i div s * s + Suc (i mod s)) mod s\n 3. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply (simp del:Suc_pred)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s; Suc i = i div s * s + Suc (i mod s)\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = (i div s * s + Suc (i mod s)) mod s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i = i div s * s + Suc (i mod s)", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) inter_sgsTr1:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i < r * s\\<rbrakk>  \\<Longrightarrow> G \\<guillemotright> f (i div s) \\<inter> g (s - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f (i div s) \\<inter>\n    g (s - Suc 0)", "apply (rule inter_sgs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f (i div s) \n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0)", "apply (rule compseriesTr0, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0)", "apply (frule less_imp_le [of \"i\" \"r * s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i < r * s;\n     i \\<le> r * s\\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0)", "apply (frule div_Tr1 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i < r * s;\n     i \\<le> r * s\\<rbrakk>\n    \\<Longrightarrow> i \\<le> s * r\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i < r * s;\n     i \\<le> r * s; i div s \\<le> r\\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r\n 3. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0)", "apply (simp add:mult.commute, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0)", "apply (rule compseriesTr0, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) JHS_Tr0_2:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n\\<Longrightarrow> \\<forall>i \\<le> (s * r - Suc 0). Gp G (cmp_rfn G r f s g i) \\<triangleright> \n                                           cmp_rfn G r f s g (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>s * r - Suc 0.\n                         \\<natural>cmp_rfn G r f s g\n                                    i \\<triangleright> cmp_rfn G r f s g\n                  (Suc i)", "apply (frule compseriesTr4 [of \"r\" \"f\"], frule compseriesTr4 [of \"s\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     w_cmpser G r f; w_cmpser G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>s * r - Suc 0.\n                         \\<natural>cmp_rfn G r f s g\n                                    i \\<triangleright> cmp_rfn G r f s g\n                  (Suc i)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n        w_cmpser G r f; w_cmpser G s g; i \\<le> s * r - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>cmp_rfn G r f s g\n                                    i \\<triangleright> cmp_rfn G r f s g\n                  (Suc i)", "apply (frule pos_mult_pos [of \"s\" \"r\"], assumption+,\n        frule_tac a = i in  rfn_tool11 [of \"s * r\"], assumption+,\n        frule_tac l = i in div_Tr1 [of \"r\" \"s\"], assumption+,\n        simp add:less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n        w_cmpser G r f; w_cmpser G s g; i \\<le> s * r - Suc 0; 0 < s * r;\n        i < s * r; i div s \\<le> r\\<rbrakk>\n       \\<Longrightarrow> \\<natural>cmp_rfn G r f s g\n                                    i \\<triangleright> cmp_rfn G r f s g\n                  (Suc i)", "apply (frule_tac x = \"i div s\" in mem_of_Nset [of _ \"r\"],\n        thin_tac \"i div s \\<le> r\", thin_tac \"i \\<le> s * r - Suc 0\",\n        frule_tac l = i in div_Tr2 [of \"r\" \"s\"], assumption+,\n        frule_tac x = \"i div s\" in mem_of_Nset [of _ \"r - Suc 0\"],\n        frule_tac a = \"i div s\" in rfn_tool11 [of \"r\"], assumption+,\n        frule_tac m = \"i div s\" in Suc_leI [of _ \"r\"],\n        frule_tac x = \"Suc (i div s)\" in mem_of_Nset [of _ \"r\"],\n        thin_tac \"i div s < r\", thin_tac \"Suc (i div s) \\<le> r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n        w_cmpser G r f; w_cmpser G s g; 0 < s * r; i < s * r;\n        i div s \\<in> {i. i \\<le> r}; i div s \\<le> r - Suc 0;\n        i div s \\<in> {i. i \\<le> r - Suc 0};\n        Suc (i div s) \\<in> {i. i \\<le> r}\\<rbrakk>\n       \\<Longrightarrow> \\<natural>cmp_rfn G r f s g\n                                    i \\<triangleright> cmp_rfn G r f s g\n                  (Suc i)", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (case_tac \"Suc i < s * r\", simp,\n         case_tac \"i mod s = s - 1\",\n         cut_tac l = i in div_Tr3_1 [of \"r\" \"s\"],\n         simp+,  \n         cut_tac l = \"Suc i\" in div_Tr2 [of \"r\" \"s\"], simp+,\n         cut_tac x = \"Suc i div s\" in mem_of_Nset [of _ \"r - Suc 0\"],\n         simp,\n         cut_tac a = \"Suc i div s\" in  rfn_tool11 [of \"r\"], simp+,\n         cut_tac x = \"Suc i div s\" in less_mem_of_Nset [of _ \"r\"], simp,\n         cut_tac m = \"Suc i div s\" in Suc_leI [of _ \"r\"], simp,\n         frule_tac x = \"Suc (Suc i div s)\" in mem_of_Nset [of _ \"r\"],\n         frule w_cmpser_is_d_gchain [of\"r\" \"f\"],\n         frule_tac rfn_tool12_2 [of \"s\"], assumption+,\n         thin_tac \"i mod s = s - Suc 0\",\n         thin_tac \"Suc i div s \\<in> {i. i \\<le> r}\",\n         thin_tac \"Suc (Suc i div s) \\<le> r\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; Suc i < s * r; Suc i div s = Suc (i div s);\n        Suc (i div s) \\<le> r - Suc 0; Suc (i div s) < r;\n        Suc (Suc i div s) \\<in> {i. i \\<le> r}; d_gchain G r f;\n        Suc i mod s = 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (s -\n                      Suc 0) \\<triangleright> f\n         (Suc (Suc (i div\n                    s))) \\<diamondop> f (Suc (i div s)) \\<inter>\ng (Suc i mod s)\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s \\<noteq> s - 1\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 3. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (simp,\n         cut_tac l = \"i div s\" and j = \"Suc (i div s)\" in \n                       d_gchainTr2 [of \"r\" \"f\"], simp, assumption+,\n         cut_tac x = \"i div s\" and y = \"Suc (i div s)\" and z = r in \n          less_trans, simp, assumption, simp add:less_imp_le, \n          simp add:less_imp_le, simp,\n         cut_tac l = \"Suc (i div s)\" and j = \"Suc (Suc (i div s))\" in \n                       d_gchainTr2 [of \"r\" \"f\"], simp+,\n         thin_tac \"Suc i div s = Suc (i div s)\", thin_tac \"Suc i mod s = 0\",\n         cut_tac i = \"i div s\" in compseriesTr0 [of \"r\" \"f\"], assumption,\n         simp, \n         cut_tac i = \"Suc (i div s)\" in compseriesTr0 [of  \"r\" \"f\"],\n               assumption, simp add:less_imp_le,\n         cut_tac i = \"Suc (Suc (i div s))\" in compseriesTr0 [of \"r\" \"f\"],\n               assumption, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; Suc i < s * r; Suc (i div s) \\<le> r - Suc 0;\n        Suc (i div s) < r; d_gchain G r f;\n        f (Suc (i div s)) \\<subseteq> f (i div s);\n        f (Suc (Suc (i div s))) \\<subseteq> f (Suc (i div s));\n        G \\<guillemotright> f (i div s) ;\n        G \\<guillemotright> f (Suc (i div s)) ;\n        G \\<guillemotright> f (Suc (Suc (i div s))) \\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (s -\n                      Suc 0) \\<triangleright> f\n         (Suc (Suc (i div s))) \\<diamondop> f (Suc (i div s)) \\<inter> g 0\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s \\<noteq> s - 1\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 3. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (subst compseriesTr2 [of \"s\" \"g\"], assumption, \n        frule_tac H = \"f (i div s)\" in sg_subset,\n        frule_tac H = \"f (Suc (i div s))\" in sg_subset,\n        frule_tac A = \"f (Suc (i div s))\" in Int_absorb2 [of _ \"carrier G\"], \n        simp,\n        thin_tac \"f (Suc (i div s)) \\<inter> carrier G = f (Suc (i div s))\",\n        frule_tac H = \"f (Suc (Suc (i div s)))\" and K = \"f (Suc (i div s))\" in\n        K_absorb_HK, assumption+,\n        simp, \n        thin_tac \"f (Suc (Suc (i div s))) \\<diamondop>\\<^bsub>G\\<^esub> (f (Suc (i div s))) = \n                                                         f (Suc (i div s))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; Suc i < s * r; Suc (i div s) \\<le> r - Suc 0;\n        Suc (i div s) < r; d_gchain G r f;\n        f (Suc (i div s)) \\<subseteq> f (i div s);\n        f (Suc (Suc (i div s))) \\<subseteq> f (Suc (i div s));\n        G \\<guillemotright> f (i div s) ;\n        G \\<guillemotright> f (Suc (i div s)) ;\n        G \\<guillemotright> f (Suc (Suc (i div s))) ;\n        f (i div s) \\<subseteq> carrier G;\n        f (Suc (i div s)) \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (s - Suc 0) \\<triangleright> f (Suc (i div s))\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s \\<noteq> s - 1\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 3. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (rule rfn_tool16 [of \"r\" \"s\" _], simp+,\n       cut_tac x = \"Suc i\" and y = \"s * r\" and z = \"Suc (s *r)\" in \n       less_trans, assumption, simp,\n       thin_tac \"Suc i < s * r\", simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; Suc (i div s) \\<le> r - Suc 0; Suc (i div s) < r;\n        d_gchain G r f; f (Suc (i div s)) \\<subseteq> f (i div s);\n        f (Suc (Suc (i div s))) \\<subseteq> f (Suc (i div s));\n        G \\<guillemotright> f (i div s) ;\n        G \\<guillemotright> f (Suc (i div s)) ;\n        G \\<guillemotright> f (Suc (Suc (i div s))) ;\n        f (i div s) \\<subseteq> carrier G;\n        f (Suc (i div s)) \\<subseteq> carrier G; i < s * r\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (i div\ns) \\<triangleright> f (Suc (i div s))\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; Suc i < s * r; Suc (i div s) \\<le> r - Suc 0;\n        Suc (i div s) < r; d_gchain G r f;\n        f (Suc (i div s)) \\<subseteq> f (i div s);\n        f (Suc (Suc (i div s))) \\<subseteq> f (Suc (i div s));\n        G \\<guillemotright> f (i div s) ;\n        G \\<guillemotright> f (Suc (i div s)) ;\n        G \\<guillemotright> f (Suc (Suc (i div s))) ;\n        f (i div s) \\<subseteq> carrier G;\n        f (Suc (i div s)) \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (i div\ns) \\<guillemotright> f (i div s) \\<inter> g (s - Suc 0) \n 3. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s \\<noteq> s - 1\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 4. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (rule compser_nsg[of r f], simp+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; Suc i < s * r; Suc (i div s) \\<le> r - Suc 0;\n        Suc (i div s) < r; d_gchain G r f;\n        f (Suc (i div s)) \\<subseteq> f (i div s);\n        f (Suc (Suc (i div s))) \\<subseteq> f (Suc (i div s));\n        G \\<guillemotright> f (i div s) ;\n        G \\<guillemotright> f (Suc (i div s)) ;\n        G \\<guillemotright> f (Suc (Suc (i div s))) ;\n        f (i div s) \\<subseteq> carrier G;\n        f (Suc (i div s)) \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (i div\ns) \\<guillemotright> f (i div s) \\<inter> g (s - Suc 0) \n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s \\<noteq> s - 1\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 3. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (rule_tac  H = \"f (i div s) \\<inter> g (s - Suc 0)\" and K = \"f (i div s)\" in \n        sg_sg, assumption+,\n        cut_tac i = i in inter_sgsTr1 [of r s f g], simp+,\n        cut_tac x = i and y = \"Suc i\" and z = \"s * r\" in less_trans,\n        simp+,\n        cut_tac x = i and y = \"Suc i\" and z = \"r * s\" in less_trans,\n        simp+,\n        simp add:mult.commute, assumption+,\n        simp add:Int_lower1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s \\<noteq> s - 1\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (frule_tac m = i in mod_less_divisor [of \"s\"],\n        frule_tac x = \"i mod s\" in less_le_diff [of _ \"s\"],\n        simp, \n        frule_tac m = \"i mod s\" in noteq_le_less [of _ \"s - Suc 0\"], \n        assumption+,\n        thin_tac \"i mod s \\<noteq> s - Suc 0\", thin_tac \"i mod s \\<le> s - Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s < s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (Suc i div\n           s)) \\<diamondop> f (Suc i div s) \\<inter> g (Suc i mod s)\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (frule_tac x = \"i mod s\" and y = \"s - Suc 0\" and z = s in \n            less_trans, simp,\n        frule_tac k = \"i mod s\" in nat_pos2 [of _ s],\n        cut_tac l1 = i in div_Tr3_2 [THEN sym, of \"r\" \"s\"], simp+,\n        frule_tac i = \"i mod s\" in compser_nsg [of \"s\" \"g\"], assumption+,\n        simp, \n        frule_tac i = \"Suc (i div s)\" in compseriesTr0 [of \"r\" \"f\"], \n                  assumption+,\n        frule_tac m = \"i mod s\" in Suc_mono [of _ \"s - Suc 0\"],\n        simp only:Suc_pred)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s < s - Suc 0; 0 < s; Suc i div s = i div s;\n        \\<natural>g (i mod s) \\<triangleright> g (Suc (i mod s));\n        G \\<guillemotright> f (Suc (i div s)) ; Suc (i mod s) < s\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (i div s)) \\<diamondop> f (i div s) \\<inter> g (Suc i mod s)\n 2. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (frule_tac x = \"Suc (i mod s)\" in less_mem_of_Nset [of _ \"s\"],\n        cut_tac i = \"Suc (i mod s)\" in compseriesTr0 [of \"s\" \"g\"], simp+,\n        cut_tac H = \"f (i div s)\" and ?H1.0 = \"f (Suc (i div s))\" and \n        K = \"g (i mod s)\" and ?K1.0 = \"g (Suc (i mod s))\" in ZassenhausTr3,\n        rule_tac i = \"i div s\" in compseriesTr0 [of \"r\" \"f\"], assumption+,\n        frule_tac x = \"i div s\" and y = \"r - Suc 0\" and z = r in\n        le_less_trans, simp, simp, assumption+,\n        frule_tac i = \"i mod s\" in compseriesTr0 [of \"s\" \"g\"], \n        simp, simp, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s < s - Suc 0; Suc i div s = i div s;\n        \\<natural>g (i mod s) \\<triangleright> g (Suc (i mod s));\n        G \\<guillemotright> f (Suc (i div s)) ; Suc (i mod s) < s;\n        G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (i div\ns) \\<triangleright> f (Suc (i div s))\n 2. \\<And>i.\n       \\<lbrakk>compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s < s - Suc 0; Suc i div s = i div s;\n        \\<natural>g (i mod s) \\<triangleright> g (Suc (i mod s));\n        G \\<guillemotright> f (Suc (i div s)) ; Suc (i mod s) < s;\n        G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n       \\<Longrightarrow> \\<natural>g (i mod\ns) \\<triangleright> g (Suc (i mod s))\n 3. \\<And>i.\n       \\<lbrakk>compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i div s \\<le> r - Suc 0; Suc (i div s) \\<le> r;\n        Suc i < s * r; i mod s < s - Suc 0; Suc i div s = i div s;\n        \\<natural>g (i mod s) \\<triangleright> g (Suc (i mod s));\n        G \\<guillemotright> f (Suc (i div s)) ; Suc (i mod s) < s;\n        G \\<guillemotright> g (Suc (i mod s)) ;\n        \\<natural>f (Suc (i div\n                          s)) \\<diamondop> f (i div s) \\<inter>\n     g (i mod\n        s) \\<triangleright> f (Suc (i div\n                                    s)) \\<diamondop> f (i div s) \\<inter>\n               g (Suc (i mod s))\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod\n                      s) \\<triangleright> f\n     (Suc (i div s)) \\<diamondop> f (i div s) \\<inter> g (Suc i mod s)\n 4. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod\n                       s) \\<triangleright> f\n      (Suc (Suc i div\n            s)) \\<diamondop> f (Suc i div s) \\<inter>\n                             g (Suc i mod s)) \\<and>\n                         (\\<not> Suc i < s * r \\<longrightarrow>\n                          \\<natural>f (Suc\n  (i div\n   s)) \\<diamondop> f (i div s) \\<inter>\n                    g (i mod s) \\<triangleright> {\\<one>})", "apply (rule_tac i = \"i div s\" in compser_nsg[of r f], simp+,\n       cut_tac i = i in Suci_mod_s_2[of r s], simp+,\n       cut_tac x = \"Suc i\" and y = \"s * r\" and z = \"Suc (s *r)\" in \n       less_trans, assumption, simp,\n       thin_tac \"Suc i < s * r\", simp,\n       frule_tac x = i and n = \"s * r\" in less_le_diff,\n       simp add:mult.commute[of s r], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; w_cmpser G r f;\n        w_cmpser G s g; i < s * r; i div s \\<le> r - Suc 0;\n        Suc (i div s) \\<le> r; \\<not> Suc i < s * r\\<rbrakk>\n       \\<Longrightarrow> \\<natural>f (Suc\n (i div\n  s)) \\<diamondop> f (i div s) \\<inter>\n                   g (i mod s) \\<triangleright> {\\<one>}", "apply (cut_tac a = \"i mod s\" in rfn_tool11 [of \"s\"], simp+,\n       frule_tac m = i in mod_less_divisor [of \"s\"],\n       frule_tac x = \"i mod s\" in less_le_diff [of _ \"s\"], simp,\n       rule special_nsg_e,\n       cut_tac i = \"i div s\" and j = \"i mod s\" in cmp_rfn0[of r s f g],\n       simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) cmp_rfn4:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; \n      compseries G s g; l \\<le> (s * r - Suc 0)\\<rbrakk> \\<Longrightarrow>\n                 cmp_rfn G r f s g (Suc l) \\<subseteq> cmp_rfn G r f s g l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (Suc l)\n                      \\<subseteq> cmp_rfn G r f s g l", "apply (frule JHS_Tr0_2 [of \"r\" \"s\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r - Suc 0;\n     \\<forall>i\\<le>s * r - Suc 0.\n        \\<natural>cmp_rfn G r f s g\n                   i \\<triangleright> cmp_rfn G r f s g (Suc i)\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (Suc l)\n                      \\<subseteq> cmp_rfn G r f s g l", "apply (frule_tac a = l in forall_spec, simp,\n       thin_tac \"\\<forall>i \\<le> (s * r - Suc 0).\n        (\\<natural>(cmp_rfn G r f s g i)) \\<triangleright> (cmp_rfn G r f s g (Suc i))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r - Suc 0;\n     \\<natural>cmp_rfn G r f s g\n                l \\<triangleright> cmp_rfn G r f s g (Suc l)\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (Suc l)\n                      \\<subseteq> cmp_rfn G r f s g l", "apply (frule cmp_rfn2 [of \"r\" \"s\" \"f\" \"g\" \"l\"], assumption+,\n       frule le_less_trans [of \"l\" \"s * r - Suc 0\" \"s* r\"], simp,\n       simp add:less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n     l \\<le> s * r - Suc 0;\n     \\<natural>cmp_rfn G r f s g\n                l \\<triangleright> cmp_rfn G r f s g (Suc l);\n     G \\<guillemotright> cmp_rfn G r f s g l \\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g (Suc l)\n                      \\<subseteq> cmp_rfn G r f s g l", "apply (frule Group_Gp [of \"cmp_rfn G r f s g l\"],\n       frule Group.nsg_subset [of \"Gp G (cmp_rfn G r f s g l)\"  ], \n       assumption+, simp add:Gp_carrier)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) cmp_rfn5:\"\\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i \\<le> r. cmp_rfn G r f s g (i * s) = f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r\\<rbrakk>\n       \\<Longrightarrow> cmp_rfn G r f s g (i * s) = f i", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r\\<rbrakk>\n       \\<Longrightarrow> (i < r \\<longrightarrow>\n                          f (Suc i) \\<diamondop> f i \\<inter> g 0 =\n                          f i) \\<and>\n                         (i = r \\<longrightarrow> {\\<one>} = f r)", "apply (case_tac \"i < r\", simp,\n       frule_tac x = i in less_imp_le [of _ \"r\"],\n       frule_tac x = i in mem_of_Nset[of _ \"r\"],\n       frule_tac i = i in compseriesTr0 [of \"r\" \"f\"], assumption+,\n       thin_tac \"i \\<le> r\",\n       frule_tac m = i in Suc_leI [of _ \"r\"],\n       frule_tac x = \"Suc i\" in mem_of_Nset[of _ \"r\"],\n       frule_tac i = \"Suc i\" in compseriesTr0 [of \"r\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g; i < r;\n        i \\<in> {i. i \\<le> r}; G \\<guillemotright> f i ; Suc i \\<le> r;\n        Suc i \\<in> {i. i \\<le> r}; G \\<guillemotright> f (Suc i) \\<rbrakk>\n       \\<Longrightarrow> f (Suc i) \\<diamondop> f i \\<inter> g 0 = f i\n 2. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i \\<le> r;\n        \\<not> i < r\\<rbrakk>\n       \\<Longrightarrow> (i < r \\<longrightarrow>\n                          f (Suc i) \\<diamondop> f i \\<inter> g 0 =\n                          f i) \\<and>\n                         (i = r \\<longrightarrow> {\\<one>} = f r)", "apply (subst compseriesTr2 [of \"s\" \"g\"], assumption+,\n       frule_tac H = \"f i\" in sg_subset,\n       subst Int_absorb2, assumption+,\n       frule rfn_tool8, assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 < s; compseries G r f; compseries G s g;\n        G \\<guillemotright> f i ; Suc i \\<le> r;\n        G \\<guillemotright> f (Suc i) ; f i \\<subseteq> carrier G;\n        d_gchain G s g\\<rbrakk>\n       \\<Longrightarrow> f (Suc i) \\<diamondop> f i = f i\n 2. \\<And>i.\n       \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g; i \\<le> r;\n        \\<not> i < r\\<rbrakk>\n       \\<Longrightarrow> (i < r \\<longrightarrow>\n                          f (Suc i) \\<diamondop> f i \\<inter> g 0 =\n                          f i) \\<and>\n                         (i = r \\<longrightarrow> {\\<one>} = f r)", "apply (cut_tac n = i in zero_less_Suc,\n       frule_tac x = 0 and y = \"Suc i\" and z = r in less_le_trans, assumption+,\n       frule_tac l = i and j = \"Suc i\" in d_gchainTr2 [of \"r\" \"f\"],\n       frule compseries_is_D_gchain[of \"r\" \"f\"], assumption,\n        rule D_gchain_is_d_gchain, assumption+,\n       cut_tac x = i and y = \"Suc i\" and z = r in less_le_trans, simp+,\n       rule_tac K = \"f i\" and H = \"f (Suc i)\" in  K_absorb_HK, assumption+,\n       simp, frule compseries_is_td_gchain, assumption+,\n       simp add:td_gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Group) JHS_Tr0:\"\\<lbrakk>(0::nat) < r; 0 < s; compseries G r f; \n       compseries G s g\\<rbrakk> \\<Longrightarrow> cmp_rfn G r f s g \\<in> wcsr_rfns G r f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g \\<in> wcsr_rfns G r f s", "apply (simp add:wcsr_rfns_def,\n       frule cmp_rfn5 [of \"r\" \"s\" \"f\" \"g\"], assumption+,\n       simp,\n       thin_tac \"\\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> tw_cmpser G (s * r) (cmp_rfn G r f s g)", "apply (simp add:tw_cmpser_def, rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> td_gchain G (s * r) (cmp_rfn G r f s g)\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>s * r - Suc 0.\n                         \\<natural>cmp_rfn G r f s g\n                                    l \\<triangleright> cmp_rfn G r f s g\n                  (Suc l)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>s * r - Suc 0.\n                         \\<natural>cmp_rfn G r f s g\n                                    l \\<triangleright> cmp_rfn G r f s g\n                  (Suc l)\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> td_gchain G (s * r) (cmp_rfn G r f s g)", "apply (rule  JHS_Tr0_2 [of \"r\" \"s\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> td_gchain G (s * r) (cmp_rfn G r f s g)", "apply (simp add:td_gchain_def, rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (s * r) (cmp_rfn G r f s g)\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g 0 = carrier G \\<and>\n                      cmp_rfn G r f s g (s * r) = {\\<one>}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> cmp_rfn G r f s g 0 = carrier G \\<and>\n                      cmp_rfn G r f s g (s * r) = {\\<one>}\n 2. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (s * r) (cmp_rfn G r f s g)", "apply (rule cmp_rfn3, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (s * r) (cmp_rfn G r f s g)", "apply (simp add:d_gchain_def,\n       rule allI, rule impI, rule conjI, rule cmp_rfn2, assumption+,\n       rule allI, rule impI, rule cmp_rfn4, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rfn_tool17:\"(a::nat) = b \\<Longrightarrow> a - c = b - c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow> a - c = b - c", "by simp"], ["", "lemma isom4b:\"\\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H\\<rbrakk> \\<Longrightarrow> \n                  (Gp G (N \\<diamondop>\\<^bsub>G\\<^esub> H) / N) \\<cong> (Gp G H / (H \\<inter> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N))", "apply (frule isom4 [of \"G\" \"N\" \"H\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N))", "apply (rule isomTr1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> Group (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N))\n 2. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                        N)\n 3. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H /\n                       (H \\<inter> N)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N)", "apply (simp add:Group.homom4_2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                        N)\n 2. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H /\n                       (H \\<inter> N)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N)", "apply (frule Group.smult_sg_nsg[of \"G\" \"H\" \"N\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H / N);\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                        N)\n 2. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H /\n                       (H \\<inter> N)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N)", "apply (simp add:Group.smult_commute_sg_nsg[THEN sym, of \"G\" \"H\" \"N\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N / N);\n     G \\<guillemotright> H \\<diamondop>\\<^bsub>G\\<^esub> N \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>H \\<diamondop>\\<^bsub>G\\<^esub> N /\n                        N)\n 2. \\<lbrakk>Group G; G \\<triangleright> N; G \\<guillemotright> H ;\n     (\\<natural>\\<^bsub>G\\<^esub>H / (H \\<inter> N)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n      N)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>H /\n                       (H \\<inter> N)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>N \\<diamondop>\\<^bsub>G\\<^esub> H /\n                       N)", "apply (rule Group.homom4Tr1, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suc_rtos_div_r_1:\"\\<lbrakk> 0 < r; 0 < s; i \\<le> r * s - Suc 0; \n         Suc (rtos r s i) < r * s; i mod s = s - Suc 0; \n         i div s < r - Suc 0\\<rbrakk> \\<Longrightarrow>  Suc (rtos r s i) div r = i mod s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) div r = i mod s", "apply (simp add:rtos_def,\n       frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     Suc (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i mod s = s - Suc 0; i div s < r - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow>\n                      Suc ((s - Suc 0) * r + i div s) div r = s - Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     Suc ((s - Suc 0) * r + i div s) < r * s; i mod s = s - Suc 0;\n     i div s < r - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc ((s - Suc 0) * r + i div s) div r = s - Suc 0", "apply (subgoal_tac \"Suc ((s - Suc 0) * r + i div s) div r = \n                      ((s - Suc 0) * r + Suc (i div s)) div r\",\n       simp del: add_Suc add_Suc_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     Suc ((s - Suc 0) * r + i div s) < r * s; i mod s = s - Suc 0;\n     i div s < r - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc ((s - Suc 0) * r + i div s) div r =\n                      ((s - Suc 0) * r + Suc (i div s)) div r", "apply (subgoal_tac \"Suc (i div s) < Suc (r - Suc 0)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     Suc ((s - Suc 0) * r + i div s) < r * s; i mod s = s - Suc 0;\n     i div s < r - Suc 0; i < r * s;\n     Suc (i div s) < Suc (r - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> Suc ((s - Suc 0) * r + i div s) div r =\n                      ((s - Suc 0) * r + Suc (i div s)) div r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     Suc ((s - Suc 0) * r + i div s) < r * s; i mod s = s - Suc 0;\n     i div s < r - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) < Suc (r - Suc 0)", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suc_rtos_mod_r_1:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; i mod s = s - Suc 0; i  div s < r - Suc 0\\<rbrakk>\n         \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma i_div_s_less:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\ni mod s = s - Suc 0; Suc i < s * r \\<rbrakk>  \\<Longrightarrow> i div s < r - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0", "apply (frule_tac  r = r and s = s and l = i in div_Tr2, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < s * r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0", "apply (rule contrapos_pp, simp+, \n        subgoal_tac \"i div s = r - Suc 0\",\n        thin_tac \"i div s = r - Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0", "apply (simp add:rtos_def,\n       subgoal_tac \"(s - Suc 0) * r + r = r * s\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (s - Suc 0) * r + r < r * s; i mod s = s - Suc 0; Suc i < s * r;\n     i < r * s; i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (s - Suc 0) * r + r = r * s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0", "apply (thin_tac \"(s - Suc 0) * r + r < r * s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s = s - Suc 0;\n     Suc i < s * r; i < r * s; i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (s - Suc 0) * r + r = r * s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0", "apply (simp add:mult.commute, simp add:diff_mult_distrib2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s;\n     i mod s = s - Suc 0; Suc i < s * r; i < r * s;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_mod_r_1:\"\\<lbrakk> 0 < r; 0 < s; i \\<le> r * s - Suc 0; rtos r s i < r * s;\n  i mod s = s - Suc 0 \\<rbrakk>  \\<Longrightarrow> rtos r s i mod r = i div s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; rtos r s i < r * s;\n     i mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s i mod r = i div s", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow> i div s mod r = i div s", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i mod s = s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow> i div s mod r = i div s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (s - Suc 0) * r + i div s < r * s; i mod s = s - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s", "apply (rule rfn_tool20, assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (s - Suc 0) * r + i div s < r * s; i mod s = s - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (frule_tac r = r and s = s and l = i in div_Tr2, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (s - Suc 0) * r + i div s < r * s; i mod s = s - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < s * r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (s - Suc 0) * r + i div s < r * s; i mod s = s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (rule le_less_trans, assumption+, simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     (s - Suc 0) * r + i div s < r * s; i mod s = s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (rule le_less_trans, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suc_i_mod_s_0_1:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s = s - Suc 0\\<rbrakk>\n        \\<Longrightarrow> Suc i mod s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply (insert div_mult_mod_eq [of \"i\" \"s\", THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s = s - Suc 0;\n     i = i div s * s + i mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s = s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply (thin_tac \"i mod s = s - Suc 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0", "apply (subgoal_tac \"Suc i mod s = Suc (i div s * s + s - Suc 0) mod s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0;\n     Suc i mod s = Suc (i div s * s + s - Suc 0) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = 0\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i div s * s + s - Suc 0) mod s", "apply (thin_tac \"i = i div s * s + s - Suc 0\", simp del: add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i div s * s + s - Suc 0) mod s", "apply (subgoal_tac \"Suc (i div s * s + s - Suc 0) mod s = (i div s * s + s) mod s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0;\n     Suc (i div s * s + s - Suc 0) mod s = (i div s * s + s) mod s\\<rbrakk>\n    \\<Longrightarrow> Suc i mod s = Suc (i div s * s + s - Suc 0) mod s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s * s + s - Suc 0) mod s =\n                      (i div s * s + s) mod s", "apply (simp del: add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s * s + s - Suc 0) mod s =\n                      (i div s * s + s) mod s", "apply (subgoal_tac \"Suc (i div s * s + s - Suc 0) = i div s * s + s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0;\n     Suc (i div s * s + s - Suc 0) = i div s * s + s\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s * s + s - Suc 0) mod s =\n                      (i div s * s + s) mod s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s * s + s - Suc 0) = i div s * s + s", "apply (simp del: add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i = i div s * s + s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s * s + s - Suc 0) = i div s * s + s", "apply (rule Suc_pred [of \"i div s * s + s\"], simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* same as div_Tr3_2 *)"], ["", "lemma Suci_div_s_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i mod s < s - Suc 0\\<rbrakk>\n         \\<Longrightarrow> Suc i div s = i div s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i mod s < s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i div s = i div s", "apply (rule div_Tr3_2 [THEN sym], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i mod s < s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i mod s < s - 1", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_i_mod_r_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk> \\<Longrightarrow> rtos r s i mod r = i div s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s i mod r = i div s", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow> i div s mod r = i div s", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow> i div s mod r = i div s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s", "apply (frule_tac  r = r and s = s and l = i in div_Tr2, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < s * r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s", "apply (subgoal_tac \"i div s < r\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0; i div s < r\\<rbrakk>\n    \\<Longrightarrow> i div s mod r = i div s\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (rule rfn_tool20, assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0; i div s < r\\<rbrakk>\n    \\<Longrightarrow> i div s < r\n 2. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i < r * s;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r", "apply (rule le_less_trans, assumption+, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suc_rtos_i_mod_r_2:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; \n       i div s = r - Suc 0\\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) mod r = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = 0", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i div s = r - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = 0", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suc_rtos_i_mod_r_3:\"\\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; \n      i div s < r - Suc 0\\<rbrakk> \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0; i div s < r - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) mod r = Suc (i div s)", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Suc_rtos_div_r_3:\"\\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0; \n      Suc (rtos r s i) < r * s; i div s < r - Suc 0\\<rbrakk> \\<Longrightarrow> \n               Suc (rtos r s i) div r = i mod s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (rtos r s i) < r * s; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) div r = i mod s", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow>\n                      Suc (i mod s * r + i div s) div r = i mod s", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r * s - Suc 0 < r * s\n 2. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i div s < r - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow>\n                      Suc (i mod s * r + i div s) div r = i mod s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (if i < r * s then i mod s * r + i div s else r * s) < r * s;\n     i div s < r - Suc 0; i < r * s\\<rbrakk>\n    \\<Longrightarrow> i < r * s \\<longrightarrow>\n                      Suc (i mod s * r + i div s) div r = i mod s", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s * r + i div s) div r = i mod s", "apply (subst add_Suc_right[THEN sym, of \"i mod s * r\" \"i div s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> (i mod s * r + Suc (i div s)) div r = i mod s", "apply (subst add.commute[of \"i mod s * r\" \"Suc (i div s)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0;\n     i < r * s\\<rbrakk>\n    \\<Longrightarrow> (Suc (i div s) + i mod s * r) div r = i mod s", "apply (frule Suc_leI[of \"i div s\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0; i < r * s;\n     Suc (i div s) \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (Suc (i div s) + i mod s * r) div r = i mod s", "apply (frule le_less_trans[of \"Suc (i div s)\" \"r - Suc 0\" \"r\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0; i < r * s;\n     Suc (i div s) \\<le> r - Suc 0; Suc (i div s) < r\\<rbrakk>\n    \\<Longrightarrow> (Suc (i div s) + i mod s * r) div r = i mod s", "apply (subst div_mult_self1 [of \"r\" \"Suc (i div s)\" \"i mod s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0; i < r * s;\n     Suc (i div s) \\<le> r - Suc 0; Suc (i div s) < r\\<rbrakk>\n    \\<Longrightarrow> r \\<noteq> 0\n 2. \\<lbrakk>0 < r; 0 < s; i mod s < s - Suc 0; i \\<le> r * s - Suc 0;\n     Suc (i mod s * r + i div s) < r * s; i div s < r - Suc 0; i < r * s;\n     Suc (i div s) \\<le> r - Suc 0; Suc (i div s) < r\\<rbrakk>\n    \\<Longrightarrow> i mod s + Suc (i div s) div r = i mod s", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma r_s_div_s:\"\\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> (r * s - Suc 0) div s = r - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) div s = r - Suc 0", "apply (frule rfn_tool1_1 [of \"s\" \"s - Suc 0\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> s - Suc 0 < s\n 2. \\<lbrakk>0 < r; 0 < s;\n     ((r - Suc 0) * s + (s - Suc 0)) div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) div s = r - Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s;\n     ((r - Suc 0) * s + (s - Suc 0)) div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) div s = r - Suc 0", "apply (simp add:diff_mult_distrib)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma r_s_mod_s:\"\\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> (r * s - Suc 0) mod s = s - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) mod s = s - Suc 0", "apply (frule rfn_tool20 [of \"s\" \"(r - Suc 0) * s + (s - Suc 0)\" \"r - Suc 0\"\n        \"s - Suc 0\"], simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s;\n     ((r - Suc 0) * s + (s - Suc 0)) mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) mod s = s - Suc 0", "apply (simp add:diff_mult_distrib)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_r_s:\"\\<lbrakk>0 < r; 0 < s\\<rbrakk> \\<Longrightarrow> rtos r s (r * s - Suc 0) = r * s - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> rtos r s (r * s - Suc 0) = r * s - Suc 0", "apply (simp add:rtos_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) mod s * r + (r * s - Suc 0) div s =\n                      r * s - Suc 0", "apply (frule r_s_div_s [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; (r * s - Suc 0) div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) mod s * r + (r * s - Suc 0) div s =\n                      r * s - Suc 0", "apply (frule r_s_mod_s [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; (r * s - Suc 0) div s = r - Suc 0;\n     (r * s - Suc 0) mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (r * s - Suc 0) mod s * r + (r * s - Suc 0) div s =\n                      r * s - Suc 0", "apply (simp, simp add:diff_mult_distrib, simp add:mult.commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_rs_1:\"\\<lbrakk> 0 < r; 0 < s; rtos r s i < r * s;\n       \\<not> Suc (rtos r s i) < r * s\\<rbrakk> \\<Longrightarrow> rtos r s i = r * s - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; rtos r s i < r * s;\n     \\<not> Suc (rtos r s i) < r * s\\<rbrakk>\n    \\<Longrightarrow> rtos r s i = r * s - Suc 0", "apply (frule pos_mult_pos [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; rtos r s i < r * s;\n     \\<not> Suc (rtos r s i) < r * s; 0 < r * s\\<rbrakk>\n    \\<Longrightarrow> rtos r s i = r * s - Suc 0", "apply (frule less_le_diff [of \"rtos r s i\" \"r * s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; rtos r s i < r * s;\n     \\<not> Suc (rtos r s i) < r * s; 0 < r * s;\n     rtos r s i \\<le> r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> rtos r s i = r * s - Suc 0", "apply (simp add:nat_not_le_less[THEN sym, of \"Suc (rtos r s i)\" \"r * s\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtos_rs_i_rs:\"\\<lbrakk> 0 < r; 0 < s; i \\<le> r * s - Suc 0; \nrtos r s i = r * s - Suc 0\\<rbrakk> \\<Longrightarrow>  i = r * s - Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     rtos r s i = r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i = r * s - Suc 0", "apply (frule mem_of_Nset [of \"i\" \"r * s - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     rtos r s i = r * s - Suc 0; i \\<in> {i. i \\<le> r * s - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> i = r * s - Suc 0", "apply (frule rtos_r_s [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     rtos r s i = r * s - Suc 0; i \\<in> {i. i \\<le> r * s - Suc 0};\n     rtos r s (r * s - Suc 0) = r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i = r * s - Suc 0", "apply (frule rtos_inj[of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     rtos r s i = r * s - Suc 0; i \\<in> {i. i \\<le> r * s - Suc 0};\n     rtos r s (r * s - Suc 0) = r * s - Suc 0;\n     inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> i = r * s - Suc 0", "apply (cut_tac n_in_Nsetn[of \"r * s - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; 0 < s; i \\<le> r * s - Suc 0;\n     rtos r s i = r * s - Suc 0; i \\<in> {i. i \\<le> r * s - Suc 0};\n     rtos r s (r * s - Suc 0) = r * s - Suc 0;\n     inj_on (rtos r s) {i. i \\<le> r * s - Suc 0};\n     r * s - Suc 0 \\<in> {i. i \\<le> r * s - Suc 0}\\<rbrakk>\n    \\<Longrightarrow> i = r * s - Suc 0", "apply (simp add:inj_on_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1_1:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk> \\<Longrightarrow> f (Suc ((r * s - Suc 0) div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f ((r * s - Suc 0) div s) \\<inter> g ((r * s - Suc 0) mod s)) = f (r - Suc 0) \\<inter> g (s - Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f;\n     compseries G s g\\<rbrakk>\n    \\<Longrightarrow> f (Suc ((r * s - Suc 0) div\n                              s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                           ((r * s - Suc 0) div s) \\<inter>\n                          g ((r * s - Suc 0) mod s) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (frule r_s_div_s [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> f (Suc ((r * s - Suc 0) div\n                              s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                           ((r * s - Suc 0) div s) \\<inter>\n                          g ((r * s - Suc 0) mod s) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (frule r_s_mod_s [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0;\n     (r * s - Suc 0) mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> f (Suc ((r * s - Suc 0) div\n                              s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                           ((r * s - Suc 0) div s) \\<inter>\n                          g ((r * s - Suc 0) mod s) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0;\n     (r * s - Suc 0) mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                   (r - Suc 0) \\<inter>\n                  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (subst Group.compseriesTr3 [of \"G\" \"r\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0;\n     (r * s - Suc 0) mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> f\n   (r - Suc 0) \\<inter>\n  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"r - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0;\n     (r * s - Suc 0) mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0; (r * s - Suc 0) mod s = s - Suc 0;\n     G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> f\n   (r - Suc 0) \\<inter>\n  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (simp add:less_mem_of_Nset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0; (r * s - Suc 0) mod s = s - Suc 0;\n     G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> f\n   (r - Suc 0) \\<inter>\n  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"s - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0; (r * s - Suc 0) mod s = s - Suc 0;\n     G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> s - Suc 0 \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0; (r * s - Suc 0) mod s = s - Suc 0;\n     G \\<guillemotright> f (r - Suc 0) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> f\n   (r - Suc 0) \\<inter>\n  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (simp add:less_mem_of_Nset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0; (r * s - Suc 0) mod s = s - Suc 0;\n     G \\<guillemotright> f (r - Suc 0) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> f\n   (r - Suc 0) \\<inter>\n  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (frule Group.inter_sgs [of \"G\" \"f (r - (Suc 0))\" \"g (s - Suc 0)\"], \n                                                          assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     (r * s - Suc 0) div s = r - Suc 0; (r * s - Suc 0) mod s = s - Suc 0;\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> g (s - Suc 0) ;\n     G \\<guillemotright> f (r - Suc 0) \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> {\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> f\n   (r - Suc 0) \\<inter>\n  g (s - Suc 0) =\n                      f (r - Suc 0) \\<inter> g (s - Suc 0)", "apply (rule Group.s_top_l_unit, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1_2:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n k < r - Suc 0\\<rbrakk> \\<Longrightarrow> ((Gp G (f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> (f k \\<inter> g (s - Suc 0)))) / \n                               (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> (f (Suc k) \\<inter> g 0))) \\<cong>\n               ((Gp G (g s \\<diamondop>\\<^bsub>G\\<^esub> (g (s - Suc 0) \\<inter> f k))) /\n                          (g s \\<diamondop>\\<^bsub>G\\<^esub> (g (s - Suc 0) \\<inter> f (Suc k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> k \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule less_trans [of \"k\" \"r - Suc 0\" \"r\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 < r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; k < r\\<rbrakk>\n    \\<Longrightarrow> k \\<le> r\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; k < r\\<rbrakk>\n    \\<Longrightarrow> k \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Suc_leI [of \"k\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule le_less_trans [of \"Suc k\" \"r - Suc 0\" \"r\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 < r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0;\n     Suc k < r\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0;\n     Suc k < r\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"Suc k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0;\n     Suc k < r\\<rbrakk>\n    \\<Longrightarrow> Suc k \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0;\n     Suc k < r; G \\<guillemotright> f (Suc k) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k \\<le> r - Suc 0;\n     Suc k < r; G \\<guillemotright> f (Suc k) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (thin_tac \"Suc k \\<le> r - Suc 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Suc_leI[of \"Suc k\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"Suc (Suc k)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"s - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) \\<rbrakk>\n    \\<Longrightarrow> s - Suc 0 \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (subst Group.compseriesTr2 [of \"G\" \"s\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                carrier G)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter> f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (subst Group.compseriesTr3 [of \"G\" \"s\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k) \\<inter>\n                                carrier G)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (subst Int_absorb2 [of \"f (Suc k)\" \"carrier G\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f (Suc k) \\<subseteq> carrier G\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (rule Group.sg_subset, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       (f (Suc (Suc k)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                 (Suc k))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (subst Group.K_absorb_HK[of \"G\" \"f (Suc (Suc k))\" \"f (Suc k)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f (Suc (Suc k)) \\<subseteq> f (Suc k)\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (rule Group.compseriesTr5 [of \"G\" \"r\" \"f\" \"Suc k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Suc k \\<le> r - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (frule Suc_leI [of \"k\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ; Suc k \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc k \\<le> r - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (s - Suc 0) \\<inter>\n                              f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (subst Group.s_top_l_unit[of \"G\" \"g (s - Suc 0) \\<inter> f k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0) \\<inter> f k \n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (simp add:Group.inter_sgs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc k)))", "apply (subst Group.compseriesTr3[of \"G\" \"s\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       ({\\<one>\\<^bsub>G\\<^esub>} \\<diamondop>\\<^bsub>G\\<^esub> g\n     (s - Suc 0) \\<inter>\n    f (Suc k)))", "apply (subst Group.s_top_l_unit[of \"G\" \"g (s - Suc 0) \\<inter> f (Suc k)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (s - Suc 0) \\<inter> f (Suc k) \n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Group.inter_sgs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.Group_Gp [of \"G\" \"f k\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.compser_nsg [of \"G\" \"r\" \"f\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k)\\<rbrakk>\n    \\<Longrightarrow> k \\<le> r - 1\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:less_mem_of_Nset [of \"k\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule isom4b [of \"Gp G (f k)\" \"f (Suc k)\" \"f k \\<inter> g (s - Suc 0)\"], \n                                                          assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k)\\<rbrakk>\n    \\<Longrightarrow> \\<natural>\\<^bsub>G\\<^esub>f\n            k \\<guillemotright> f k \\<inter> g (s - Suc 0) \n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (rule Group.sg_sg, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k)\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f k \\<inter> g (s - Suc 0) \n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k)\\<rbrakk>\n    \\<Longrightarrow> f k \\<inter> g (s - Suc 0) \\<subseteq> f k\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (rule Group.inter_sgs, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k)\\<rbrakk>\n    \\<Longrightarrow> f k \\<inter> g (s - Suc 0) \\<subseteq> f k\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Int_lower1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.compseriesTr5[of \"G\" \"r\" \"f\" \"k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)))\\<rbrakk>\n    \\<Longrightarrow> k \\<le> r - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.s_top_induced[of \"G\" \"f k\" \"f (Suc k)\" \"f k \\<inter> g (s - Suc 0)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> f k \\<inter> g (s - Suc 0) \\<subseteq> f k\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     f (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                                     k \\<inter>\n                                    g (s - Suc 0) =\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n       g (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Int_lower1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ; Suc k < r;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                 k \\<inter>\n                g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     f (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                                     k \\<inter>\n                                    g (s - Suc 0) =\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n       g (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     f (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub> f\n                                     k \\<inter>\n                                    g (s - Suc 0) =\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n       g (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (thin_tac \"f (Suc k) \\<diamondop>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>(f k)\\<^esub> (f k \\<inter> g (s - Suc 0)) =\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> (f k \\<inter> g (s - Suc 0))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Suc_pos [of \"Suc k\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.cmp_rfn0 [of \"G\" \"r\" \"s\" \"f\" \"g\" \"k\" \"s - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r\\<rbrakk>\n    \\<Longrightarrow> k \\<le> r - 1\n 2. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r\\<rbrakk>\n    \\<Longrightarrow> s - Suc 0 \\<le> s - 1\n 3. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r\\<rbrakk>\n    \\<Longrightarrow> s - Suc 0 \\<le> s - 1\n 2. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.sg_inc_set_mult[of \"G\" \"f k\" \"f (Suc k)\" \"f k \\<inter> g (s - Suc 0)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f k \\<inter> g (s - Suc 0) \\<subseteq> f k\n 2. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Int_lower1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f\n                         (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n                         g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k; 0 < r;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Group.Gp_inherited [of \"G\" \"f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> (f k \\<inter> g (s - Suc 0))\" \"f k\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.inter_sgs [of \"G\" \"f k\" \"g (s - Suc 0)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (frule Group.Gp_inherited [of \"G\" \"f k \\<inter> g (s - Suc 0)\" \"f k\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> f k \\<inter> g (s - Suc 0) \\<subseteq> f k\n 2. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) ;\n     \\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                       g (s - Suc 0) =\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (rule Int_lower1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                        g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) ;\n     \\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                       g (s - Suc 0) =\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) ;\n     \\<natural>\\<^bsub>\\<natural>\\<^bsub>G\\<^esub>f k\\<^esub>f k \\<inter>\n                       g (s - Suc 0) =\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (thin_tac \"(Gp (Gp G (f k)) ((f k) \\<inter> (g (s - Suc 0)))) =\n                                        (Gp G ((f k) \\<inter> (g (s - Suc 0))))\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\n     \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (thin_tac \"f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0) \\<subseteq> f k\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                            k \\<inter>\n                           g (s - Suc 0) ;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (thin_tac \"G \\<guillemotright> f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter> g (s - Suc 0)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> g (s - Suc 0) \\<inter> f (Suc k)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Int_assoc [of \"f k\" \"g (s - Suc 0)\" \"f (Suc k)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> (g (s - Suc 0) \\<inter> f (Suc k))));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (g (s - Suc 0) \\<inter> f (Suc k)))", "apply (simp add:Int_commute [of \"g (s - Suc 0)\" \"f (Suc k)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> (f (Suc k) \\<inter> g (s - Suc 0))));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (f (Suc k) \\<inter> g (s - Suc 0)))", "apply (simp add:Int_assoc [of \"f k\" \"f (Suc k)\" \"g (s - Suc 0)\", THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f k \\<inter> f (Suc k) \\<inter> g (s - Suc 0)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (f (Suc k) \\<inter> g (s - Suc 0)))", "apply (simp add:Int_absorb1[of \"f (Suc k)\" \"f k\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < s; compseries G r f; compseries G s g;\n     k < r - Suc 0; G \\<guillemotright> f k ;\n     G \\<guillemotright> f (Suc k) ; Suc (Suc k) \\<le> r;\n     G \\<guillemotright> f (Suc (Suc k)) ;\n     G \\<guillemotright> g (s - Suc 0) ;\n     Group (\\<natural>\\<^bsub>G\\<^esub>f k);\n     \\<natural>\\<^bsub>G\\<^esub>f k \\<triangleright> f (Suc k);\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                    k \\<inter>\n                                   g (s - Suc 0) /\n      f (Suc k)) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>f k \\<inter> g (s - Suc 0) /\n      (f (Suc k) \\<inter> g (s - Suc 0)));\n     f (Suc k) \\<subseteq> f k;\n     G \\<guillemotright> f k \\<inter> g (s - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc k) \\<diamondop>\\<^bsub>G\\<^esub> f k \\<inter>\n             g (s - Suc 0) /\n                       f (Suc k)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n            f k /\n                       (f (Suc k) \\<inter> g (s - Suc 0)))", "apply (simp add:Int_commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1_3:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n       i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n       i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group (Gp G (f r \\<diamondop>\\<^bsub>G\\<^esub> (f (r - Suc 0) \\<inter> g (i mod s))) /\n        (f r \\<diamondop>\\<^bsub>G\\<^esub> (f (r - Suc 0) \\<inter> g (Suc (i mod s)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule nat_eq_le[of \"i div s\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule Group.compser_nsg [of \"G\" \"r\" \"f\" \"i div s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r - 1\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f\n                  (Suc (i div s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f\n                  (Suc (i div s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule Group.compser_nsg [of \"G\" \"s\" \"g\" \"i mod s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f\n                  (Suc (i div s))\\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule  Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"r - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule  Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"r\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> r \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule  Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"i mod s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (simp add:less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule  Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"Suc (i mod s)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule Suc_mono [of \"i mod s\" \"s - (Suc 0)\"],\n        simp add:less_mem_of_Nset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule Group.cmp_rfn0 [of \"G\" \"r\" \"s\" \"f\" \"g\" \"i div s\" \"i mod s\"], \n       assumption+, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (Suc (i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (i div s) \\<inter>\n                             g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (frule  Group.ZassenhausTr3 [of \"G\" \"f (r - Suc 0)\" \"f r\" \"g (i mod s)\" \n       \"g (Suc (i mod s))\"], assumption+, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (Suc (i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (i div s) \\<inter>\n                             g (i mod s) ;\n     \\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (r - Suc 0) \\<inter>\n                            g (i mod\n                               s) \\<triangleright> f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))", "apply (cut_tac Group.Group_Gp [of \"G\" \"f r \\<diamondop>\\<^bsub>G\\<^esub> (f (r - Suc 0) \\<inter> g (i mod s))\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (Suc (i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (i div s) \\<inter>\n                             g (i mod s) ;\n     \\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (r - Suc 0) \\<inter>\n                            g (i mod\n                               s) \\<triangleright> f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (Suc (i mod s));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (r - Suc 0) \\<inter>\n                     g (Suc (i mod s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (Suc (i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (i div s) \\<inter>\n                             g (i mod s) ;\n     \\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (r - Suc 0) \\<inter>\n                            g (i mod\n                               s) \\<triangleright> f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group G\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (Suc (i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (i div s) \\<inter>\n                             g (i mod s) ;\n     \\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (r - Suc 0) \\<inter>\n                            g (i mod\n                               s) \\<triangleright> f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter> g (i mod s)", "apply (rule Group.Group_Qg, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     i div s \\<le> r - Suc 0;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     G \\<guillemotright> f (r - Suc 0) ; G \\<guillemotright> f r ;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (Suc (i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (i div s) \\<inter>\n                             g (i mod s) ;\n     \\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (r - Suc 0) \\<inter>\n                            g (i mod\n                               s) \\<triangleright> f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f\n     r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter> g (i mod s)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1_4:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n       i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n       i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0\\<rbrakk> \\<Longrightarrow> \n      Group (Gp G (g (Suc (i mod s)) \\<diamondop>\\<^bsub>G\\<^esub> (g (i mod s) \\<inter> f (r - Suc 0))) /\n       (g (Suc (Suc (i mod s))) \\<diamondop>\\<^bsub>G\\<^esub> (g (Suc (i mod s)) \\<inter> f 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s)) \\<inter> f 0))", "apply (subst Group.compseriesTr2 [of \"G\" \"r\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s)) \\<inter> carrier G))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"Suc (i mod s)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s)) \\<inter> carrier G))", "apply (frule Suc_mono [of \"i mod s\" \"s - Suc 0\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s)) \\<inter> carrier G))", "apply (frule Group.sg_subset [of \"G\" \"g (Suc (i mod s))\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s)) \\<inter> carrier G))", "apply (subst Int_absorb2, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule Suc_mono [of \"i mod s\" \"s - Suc 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G;\n     Suc (i mod s) < Suc (s - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule less_mem_of_Nset [of \"i mod s\" \"s - Suc 0\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule Suc_leI [of \"Suc (i mod s)\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"Suc (Suc (i mod s))\"], \n             assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule less_le_diff [of \"Suc (i mod s)\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule Suc_pos [of \"Suc (i mod s)\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0; 0 < s\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (frule Group.compseriesTr5[of \"G\" \"s\" \"g\" \"Suc (i mod s)\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0; 0 < s;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        (g (Suc (Suc (i mod\ns))) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (i mod s))))", "apply (subst Group.K_absorb_HK[of \"G\" \"g (Suc (Suc (i mod s)))\"\n                                        \"g (Suc (i mod s))\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0; 0 < s;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"i mod s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0; 0 < s;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0; 0 < s;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))", "apply (frule mod_less_divisor [of \"s\" \"i\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (i mod s) < s;\n     i mod s \\<le> s - Suc 0; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0; 0 < s;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))", "apply (frule Group.cmp_rfn0 [of \"G\" \"s\" \"r\" \"g\" \"f\" \"i mod s\" \"r - Suc 0\"], \n        assumption+, simp, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))", "apply (cut_tac Group.compser_nsg [of \"G\" \"s\" \"g\" \"i mod s\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (frule Group.ZassenhausTr4_1 [of \"G\" \"g (i mod s)\" \"g (Suc (i mod s))\" \n                    \"f (r - Suc 0)\"], assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> \\<natural>\\<^bsub>G\\<^esub>g\n            (i mod s) \\<guillemotright> g (i mod s) \\<inter> f (r - Suc 0) \n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 6. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (rule Group.sg_sg, assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> g (i mod s) \\<inter>\n    f (r - Suc 0) \n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> g (i mod s) \\<inter> f (r - Suc 0)\n                      \\<subseteq> g (i mod s)\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 6. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 7. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (rule Group.inter_sgs, assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> G \\<guillemotright> f (r - Suc 0) \n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> g (i mod s) \\<inter> f (r - Suc 0)\n                      \\<subseteq> g (i mod s)\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 6. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 7. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (rule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"r - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> r - Suc 0 \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> g (i mod s) \\<inter> f (r - Suc 0)\n                      \\<subseteq> g (i mod s)\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 6. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 7. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> g (i mod s) \\<inter> f (r - Suc 0)\n                      \\<subseteq> g (i mod s)\n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 6. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (rule Int_lower1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0) /\n                        g (Suc (i mod s)))\n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (rule Group.Group_Qg)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (i mod\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                f (r - Suc 0))\n 2. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) ;\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g (Suc (i mod s));\n     \\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n                                    f (r -\n Suc 0) \\<triangleright> g (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> \\<natural>\\<^bsub>G\\<^esub>g\n            (Suc (i mod\n                  s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n              f (r - Suc 0) \\<triangleright> g (Suc (i mod s))\n 3. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> Group G\n 4. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> 0 < s\n 5. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> compseries G s g\n 6. \\<lbrakk>Group G; 0 < r; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     Suc i div s \\<le> r - Suc 0; i div s = r - Suc 0;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     g (Suc (i mod s)) \\<subseteq> carrier G; Suc (Suc (i mod s)) \\<le> s;\n     G \\<guillemotright> g (Suc (Suc (i mod s))) ;\n     Suc (i mod s) \\<le> s - Suc 0;\n     g (Suc (Suc (i mod s))) \\<subseteq> g (Suc (i mod s));\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (i mod s) \\<inter>\n                             f (r - Suc 0) \\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s - 1", "apply (rule Group.Group_Gp, assumption+, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1_5:\"\\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n      i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n      i mod s < s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n \\<Longrightarrow> (Gp G (f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (i mod s))) /\n        (f (Suc (i div s)) \\<diamondop>\\<^bsub>G\\<^esub> (f (i div s) \\<inter> g (Suc (i mod s))))) \\<cong>\n     (Gp G (g (Suc (i mod s)) \\<diamondop>\\<^bsub>G\\<^esub> (g (i mod s) \\<inter> f (i div s))) /\n       (g (Suc (Suc (rtos r s i) div r)) \\<diamondop>\\<^bsub>G\\<^esub> \n              (g (Suc (rtos r s i) div r) \\<inter> f (Suc (rtos r s i) mod r))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"i mod s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i mod s \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"Suc (i mod s)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) \\<rbrakk>\n    \\<Longrightarrow> Suc (i mod s) \\<le> s\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Suc_mono [of \"i mod s\" \"s - Suc 0\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"i div s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) \\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule less_trans [of \"i div s\" \"r - Suc 0\" \"r\"], simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ; i div s < r\\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"Suc (i div s)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) \\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Suc_mono [of \"i div s\" \"r - Suc 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     Suc (i div s) < Suc (r - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> Suc (i div s) \\<le> r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) \\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Group.compser_nsg [of \"G\" \"r\" \"f\" \"i div s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) \\<rbrakk>\n    \\<Longrightarrow> i div s \\<le> r - 1\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f\n                  (Suc (i div s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f\n                  (Suc (i div s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Group.compser_nsg [of \"G\" \"s\" \"g\" \"i mod s\"], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst Suc_rtos_i_mod_r_3 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (i div s))))", "apply (simp add:mult.commute, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (i div s))))", "apply (subst Suc_rtos_div_r_3 [of \"r\" \"s\" \"i\" ], assumption+)+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) < r * s\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0\n 4. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i < s * r;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (i mod\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (i div s))))", "apply (simp add:mult.commute)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i < r * s;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (i mod\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (i div s))))", "apply (subst Suc_rtos_div_r_3[of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i < r * s;\n     i mod s < s - Suc 0; i div s < r - Suc 0;\n     G \\<guillemotright> g (i mod s) ;\n     G \\<guillemotright> g (Suc (i mod s)) ;\n     G \\<guillemotright> f (i div s) ;\n     G \\<guillemotright> f (Suc (i div s)) ;\n     \\<natural>\\<^bsub>G\\<^esub>f (i div\n                                   s) \\<triangleright> f (Suc (i div s));\n     \\<natural>\\<^bsub>G\\<^esub>g (i mod\n                                   s) \\<triangleright> g\n                  (Suc (i mod s))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (i div s) /\n                       (g (Suc (i mod\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (i mod s) \\<inter>\n                            f (Suc (i div s))))", "apply (rule Zassenhaus [of \"G\" \"f (i div s)\" \"f (Suc (i div s))\" \"g (i mod s)\"\n \"g (Suc (i mod s))\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1_6:\" \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s\\<rbrakk> \\<Longrightarrow>\n  ((Gp G (cmp_rfn G r f s g i)) / (cmp_rfn G r f s g (Suc i))) \\<cong>\n  ((Gp G (g (Suc (rtos r s i div r)) \\<diamondop>\\<^bsub>G\\<^esub> \n      (g (rtos r s i div r) \\<inter> f (rtos r s i mod r)))) /\n      (g (Suc (Suc (rtos r s i) div r)) \\<diamondop>\\<^bsub>G\\<^esub>\n              (g (Suc (rtos r s i) div r) \\<inter> f (Suc (rtos r s i) mod r))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                       cmp_rfn G r f s g (Suc i)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s\\<rbrakk>\n    \\<Longrightarrow> (i < s * r \\<longrightarrow>\n                       (Suc i < s * r \\<longrightarrow>\n                        (\\<natural>\\<^bsub>G\\<^esub>f\n               (Suc (i div\n                     s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                 g (i mod s) /\n                         (f (Suc (Suc i div\n                                  s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (Suc i div s) \\<inter>\n                              g (Suc i mod s))) \\<cong>\n                        (\\<natural>\\<^bsub>G\\<^esub>g\n               (Suc (rtos r s i div\n                     r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                  (rtos r s i div r) \\<inter>\n                 f (rtos r s i mod r) /\n                         (g (Suc (Suc (rtos r s i) div\n                                  r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (Suc (rtos r s i) div r) \\<inter>\n                              f (Suc (rtos r s i) mod r)))) \\<and>\n                       (\\<not> Suc i < s * r \\<longrightarrow>\n                        (\\<natural>\\<^bsub>G\\<^esub>f\n               (Suc (i div\n                     s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                 g (i mod s) /\n                         {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                        (\\<natural>\\<^bsub>G\\<^esub>g\n               (Suc (rtos r s i div\n                     r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                  (rtos r s i div r) \\<inter>\n                 f (rtos r s i mod r) /\n                         (g (Suc (Suc (rtos r s i) div\n                                  r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (Suc (rtos r s i) div r) \\<inter>\n                              f (Suc (rtos r s i) mod r))))) \\<and>\n                      (\\<not> i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (frule le_less_trans [of \"i\" \"r * s - Suc 0\" \"r * s\"], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; i < r * s\\<rbrakk>\n    \\<Longrightarrow> (i < s * r \\<longrightarrow>\n                       (Suc i < s * r \\<longrightarrow>\n                        (\\<natural>\\<^bsub>G\\<^esub>f\n               (Suc (i div\n                     s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                 g (i mod s) /\n                         (f (Suc (Suc i div\n                                  s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (Suc i div s) \\<inter>\n                              g (Suc i mod s))) \\<cong>\n                        (\\<natural>\\<^bsub>G\\<^esub>g\n               (Suc (rtos r s i div\n                     r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                  (rtos r s i div r) \\<inter>\n                 f (rtos r s i mod r) /\n                         (g (Suc (Suc (rtos r s i) div\n                                  r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (Suc (rtos r s i) div r) \\<inter>\n                              f (Suc (rtos r s i) mod r)))) \\<and>\n                       (\\<not> Suc i < s * r \\<longrightarrow>\n                        (\\<natural>\\<^bsub>G\\<^esub>f\n               (Suc (i div\n                     s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                 g (i mod s) /\n                         {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                        (\\<natural>\\<^bsub>G\\<^esub>g\n               (Suc (rtos r s i div\n                     r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                  (rtos r s i div r) \\<inter>\n                 f (rtos r s i mod r) /\n                         (g (Suc (Suc (rtos r s i) div\n                                  r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                               (Suc (rtos r s i) div r) \\<inter>\n                              f (Suc (rtos r s i) mod r))))) \\<and>\n                      (\\<not> i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (simp add:mult.commute [of \"r\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (frule Suc_leI [of \"i\" \"s * r\"], thin_tac \"i < s * r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r;\n     Suc i \\<le> s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (case_tac \"\\<not> Suc i < s * r\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i = s * r\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (frule rfn_tool17 [of \"Suc i\" \"s * r\" \"Suc 0\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i = s * r;\n     Suc i - Suc 0 = s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (thin_tac \" Suc i = s * r\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r;\n     Suc i - Suc 0 = s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     Suc (rtos r s (s * r - Suc 0)) < s * r; i = s * r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc ((s * r - Suc 0) div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                ((s * r - Suc 0) div s) \\<inter>\n               g ((s * r - Suc 0) mod s) /\n                       {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s (s * r - Suc 0) div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s (s * r - Suc 0) div r) \\<inter>\n               f (rtos r s (s * r - Suc 0) mod r) /\n                       (g (Suc (Suc (rtos r s (s * r - Suc 0)) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s (s * r - Suc 0)) div r) \\<inter>\n                            f (Suc (rtos r s (s * r - Suc 0)) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (frule rtos_r_s [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     Suc (rtos r s (s * r - Suc 0)) < s * r; i = s * r - Suc 0;\n     rtos r s (r * s - Suc 0) = r * s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc ((s * r - Suc 0) div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                ((s * r - Suc 0) div s) \\<inter>\n               g ((s * r - Suc 0) mod s) /\n                       {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s (s * r - Suc 0) div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s (s * r - Suc 0) div r) \\<inter>\n               f (rtos r s (s * r - Suc 0) mod r) /\n                       (g (Suc (Suc (rtos r s (s * r - Suc 0)) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s (s * r - Suc 0)) div r) \\<inter>\n                            f (Suc (rtos r s (s * r - Suc 0)) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply (simp add:mult.commute [of \"r\" \"s\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "(* !! ??? *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     \\<not> \\<not> Suc i < s * r\\<rbrakk>\n    \\<Longrightarrow> (Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        (f (Suc (Suc i div\n                                 s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                              (Suc i div s) \\<inter>\n                             g (Suc i mod s))) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r)))) \\<and>\n                      (\\<not> Suc i < s * r \\<longrightarrow>\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              (Suc (i div\n                    s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n                g (i mod s) /\n                        {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                       (\\<natural>\\<^bsub>G\\<^esub>g\n              (Suc (rtos r s i div\n                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                 (rtos r s i div r) \\<inter>\n                f (rtos r s i mod r) /\n                        (g (Suc (Suc (rtos r s i) div\n                                 r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                              (Suc (rtos r s i) div r) \\<inter>\n                             f (Suc (rtos r s i) mod r))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule mod_less_divisor [of \"s\" \"i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule less_le_diff [of \"i mod s\" \"s\"], thin_tac \"i mod s < s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (case_tac \"i mod s = s - Suc 0\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule_tac div_Tr2 [of \"r\" \"s\" \"Suc i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc i < s * r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:le_imp_less_or_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst div_Tr3_1[of \"r\" \"s\" \"i\"], assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc i div s) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom3 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc i div s) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc i div s) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom3_1 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc i div s) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc i div s) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule div_Tr3_1 [of \"r\" \"s\" \"i\"], assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     Suc i div s = Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc i div s) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp, thin_tac \"Suc i div s = Suc (i div s)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (insert n_less_Suc [of \"i div s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule less_le_trans [of \"i div s\" \"Suc (i div s)\" \"r - Suc 0\"], \n                                                             assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s);\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst Suc_rtos_div_r_1 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s);\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s);\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> Suc (rtos r s i) < r * s\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s);\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i mod s = s - Suc 0\n 4. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s);\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0\n 5. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s = s - Suc 0;\n     Suc (i div s) \\<le> r - Suc 0; i div s < Suc (i div s);\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g (Suc (i mod\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 6. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute[of \"s\" \"r\"])+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i \\<le> r * s;\n     Suc i \\<noteq> r * s; i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (Suc (rtos r s i) div r) \\<inter>\n                    f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst Suc_rtos_mod_r_1 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i \\<le> r * s;\n     Suc i \\<noteq> r * s; i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (Suc (rtos r s i) div r) \\<inter>\n                    f (Suc (i div s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst Suc_i_mod_s_0_1 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i \\<le> r * s;\n     Suc i \\<noteq> r * s; i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (Suc (rtos r s i) div r) \\<inter>\n                    f (Suc (i div s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp only:Suc_rtos_div_r_1 [of \"r\" \"s\" \"i\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i \\<le> r * s;\n     Suc i \\<noteq> r * s; i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (rtos r s i div r) \\<inter>\n       f (i div s) /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc (i div s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom3[of \"r\" \"s\" \"i\"], assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i \\<le> r * s;\n     Suc i \\<noteq> r * s; i mod s = s - Suc 0; i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (s - Suc 0) /\n                       (f (Suc (Suc (i div\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> f\n                                   (Suc (i div s)) \\<inter>\n                                  g 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             s \\<diamondop>\\<^bsub>G\\<^esub> g (s - Suc 0) \\<inter>\n       f (i div s) /\n                       (g s \\<diamondop>\\<^bsub>G\\<^esub> g\n                     (s - Suc 0) \\<inter>\n                    f (Suc (i div s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i div s < Suc (i div s)\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule JHS_Tr1_2 [of \"G\" \"r\" \"s\" \"f\" \"g\" \"i div s\"], assumption+,\n        simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule noteq_le_less [of \"i mod s\" \"s - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<le> s - Suc 0;\n     i mod s \\<noteq> s - Suc 0; i mod s < s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (thin_tac \"i mod s \\<le> s - Suc 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s \\<noteq> s - Suc 0;\n     i mod s < s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (thin_tac \"i mod s \\<noteq> s - Suc 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule div_Tr2 [of \"r\" \"s\" \"Suc i\"], assumption+,\n        rule noteq_le_less, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (Suc i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst div_Tr3_2 [THEN sym, of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i mod s < s - 1\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc i mod s))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rfn_tool12_1 [THEN sym, of \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i mod s < s - 1\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (rtos r s i div\n                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom3 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (rtos r s i mod r) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom3_1 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0;\n     Suc i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (case_tac \"i div s = r - Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom5 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f (Suc (rtos r s i) mod r)))\n 4. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f (Suc (rtos r s i) mod r)))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f (Suc (rtos r s i) mod r)))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom7 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f 0))\n 4. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i div s = r - Suc 0\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f 0))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (assumption, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f 0))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule JHS_Tr1_3 [of \"G\" \"r\" \"s\" \"f\" \"g\" \"i\"], assumption+,\n       simp only:noteq_le_less,  assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f 0))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule JHS_Tr1_4 [of \"G\" \"r\" \"s\" \"f\" \"g\" \"i\"], assumption+,\n       simp only:noteq_le_less, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f 0))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom3 [of \"r\" \"s\" \"i\"], assumption+,\n        simp only:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (rtos r s i) div r) \\<inter>\n                                  f 0))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (subst rtos_hom5 [of \"r\" \"s\" \"i\"], assumption+,\n        simp only:mult.commute[of \"s\" \"r\"],\n               simp add:mem_of_Nset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (i mod s)) \\<inter>\n                                  f 0))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (rule isomTr1, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (Suc i div s) \\<inter>\n                     g (Suc (i mod s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (i mod s)) \\<inter>\n                                  f 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s))))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Suci_div_s_2[of \"r\" \"s\" \"i\"], assumption+,\n        simp only:mult.commute, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0));\n     Suc i div s = i div s\\<rbrakk>\n    \\<Longrightarrow> Group\n                       (\\<natural>\\<^bsub>G\\<^esub>f\n              r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n        g (i mod s) /\n                        (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                      (Suc i div s) \\<inter>\n                     g (Suc (i mod s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (i mod s)) \\<inter>\n                                  f 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s))))\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (i mod s)) \\<inter>\n                                  f 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (Suc i div s) \\<inter>\n                    g (Suc (i mod s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Suci_div_s_2[of \"r\" \"s\" \"i\"], assumption+,\n       simp only:mult.commute, assumption, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s = r - Suc 0;\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                               (r - Suc 0) \\<inter>\n                              g (i mod s) /\n       (f r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n    g (Suc (i mod s))));\n     Group\n      (\\<natural>\\<^bsub>G\\<^esub>g (Suc\n(i mod\n s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (r - Suc 0) /\n       (g (Suc (Suc (i mod\n                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (Suc (i mod s)) \\<inter>\n                  f 0));\n     Suc i div s = r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter>\n               f (r - Suc 0) /\n                       (g (Suc (Suc (i mod\n                                     s))) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                   (Suc (i mod s)) \\<inter>\n                                  f 0)) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>f\n             r \\<diamondop>\\<^bsub>G\\<^esub> f (r - Suc 0) \\<inter>\n       g (i mod s) /\n                       (f r \\<diamondop>\\<^bsub>G\\<^esub> f\n                     (r - Suc 0) \\<inter>\n                    g (Suc (i mod s))))\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (rule JHS_Tr1_2 [of \"G\" \"s\" \"r\" \"g\" \"f\" \"i mod s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule div_Tr2 [of \"r\" \"s\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> i < s * r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0; i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (rule le_less_trans [of \"i\" \"s * r - Suc 0\" \"s * r\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> s * r - Suc 0 < s * r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0; i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0; i div s \\<le> r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule noteq_le_less [of \"i div s\" \"r - Suc 0\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; Suc i div s \\<le> r - Suc 0;\n     i div s \\<noteq> r - Suc 0; i div s \\<le> r - Suc 0;\n     i div s < r - Suc 0\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (Suc i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule Suci_div_s_2[of \"r\" \"s\" \"i\"], assumption+,\n        simp only:mult.commute[of \"s\" \"r\"], assumption, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule JHS_Tr1_5[of \"G\" \"r\" \"s\" \"f\" \"g\" \"i\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s\\<rbrakk>\n    \\<Longrightarrow> Suc i < s * r\n 2. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s\\<rbrakk>\n    \\<Longrightarrow> i mod s < s - Suc 0\n 3. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s\\<rbrakk>\n    \\<Longrightarrow> i div s < r - Suc 0\n 4. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s;\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc (i div\n   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter> g (i mod s) /\n      (f (Suc (i div\n               s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n           g (Suc (i mod s)))) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (i div s) /\n      (g (Suc (Suc (rtos r s i) div\n               r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n            (Suc (rtos r s i) div r) \\<inter>\n           f (Suc (rtos r s i) mod r)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:noteq_le_less[of \"Suc i\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> s * r - Suc 0; Suc (rtos r s i) < s * r; Suc i \\<le> s * r;\n     Suc i \\<noteq> s * r; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s;\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc (i div\n   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter> g (i mod s) /\n      (f (Suc (i div\n               s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n           g (Suc (i mod s)))) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (i div s) /\n      (g (Suc (Suc (rtos r s i) div\n               r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n            (Suc (rtos r s i) div r) \\<inter>\n           f (Suc (rtos r s i) mod r)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (frule mem_of_Nset[of \"i\" \"s*r - Suc 0\"], \n                        simp add:mult.commute[of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n     i \\<le> r * s - Suc 0; Suc (rtos r s i) < r * s; Suc i \\<le> r * s;\n     Suc i \\<noteq> r * s; i mod s < s - Suc 0; i div s < r - Suc 0;\n     Suc i div s = i div s;\n     (\\<natural>\\<^bsub>G\\<^esub>f (Suc (i div\n   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter> g (i mod s) /\n      (f (Suc (i div\n               s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n           g (Suc (i mod s)))) \\<cong>\n     (\\<natural>\\<^bsub>G\\<^esub>g (Suc (i mod\n   s)) \\<diamondop>\\<^bsub>G\\<^esub> g (i mod s) \\<inter> f (i div s) /\n      (g (Suc (Suc (rtos r s i) div\n               r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n            (Suc (rtos r s i) div r) \\<inter>\n           f (Suc (rtos r s i) mod r)))\\<rbrakk>\n    \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n             (Suc (i div\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> f (i div s) \\<inter>\n               g (i mod s) /\n                       (f (Suc (i div\n                                s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                             (i div s) \\<inter>\n                            g (Suc (i mod s)))) \\<cong>\n                      (\\<natural>\\<^bsub>G\\<^esub>g\n             (Suc (i mod\n                   s)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                (rtos r s i div r) \\<inter>\n               f (i div s) /\n                       (g (Suc (Suc (rtos r s i) div\n                                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                             (Suc (rtos r s i) div r) \\<inter>\n                            f (Suc (rtos r s i) mod r)))", "apply (simp add:rtos_hom3 [of \"r\" \"s\" \"i\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_Tr1:\"\\<lbrakk> Group G; 0 < r; 0 < s; compseries G r f; compseries G s g\\<rbrakk>\n\\<Longrightarrow> isom_Gchains (r * s - 1) (rtos r s) (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f;\n     compseries G s g\\<rbrakk>\n    \\<Longrightarrow> isom_Gchains (r * s - 1) (rtos r s)\n                       (Qw_cmpser G (cmp_rfn G r f s g))\n                       (Qw_cmpser G (cmp_rfn G s g r f))", "apply (simp add:isom_Gchains_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f;\n     compseries G s g\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>r * s - Suc 0.\n                         Qw_cmpser G (cmp_rfn G r f s g) i \\<cong>\n                         Qw_cmpser G (cmp_rfn G s g r f) (rtos r s i)", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> Qw_cmpser G (cmp_rfn G r f s g) i \\<cong>\n                         Qw_cmpser G (cmp_rfn G s g r f) (rtos r s i)", "apply (frule pos_mult_pos [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; 0 < r * s\\<rbrakk>\n       \\<Longrightarrow> Qw_cmpser G (cmp_rfn G r f s g) i \\<cong>\n                         Qw_cmpser G (cmp_rfn G s g r f) (rtos r s i)", "apply (frule_tac b = \"r * s\" and a = i in rfn_tool11, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; 0 < r * s; i < r * s\\<rbrakk>\n       \\<Longrightarrow> Qw_cmpser G (cmp_rfn G r f s g) i \\<cong>\n                         Qw_cmpser G (cmp_rfn G s g r f) (rtos r s i)", "apply (simp add:Qw_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G s g r f\n                (rtos r s i) /\n                          cmp_rfn G s g r f (Suc (rtos r s i)))", "apply (simp only:cmp_rfn_def [of \"G\" \"s\" \"g\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>if rtos r s i < r * s\n               then g (Suc (rtos r s i div\n                            r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                         (rtos r s i div r) \\<inter>\n                        f (rtos r s i mod r)\n               else {\\<one>\\<^bsub>G\\<^esub>} /\n                          (if Suc (rtos r s i) < r * s\n                           then g (Suc (Suc (rtos r s i) div\n  r)) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (rtos r s i) div r) \\<inter>\n                                    f (Suc (rtos r s i) mod r)\n                           else {\\<one>\\<^bsub>G\\<^esub>}))", "apply (frule_tac l = i in rtos_hom1 [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s;\n        rtos r s i \\<le> s * r - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>if rtos r s i < r * s\n               then g (Suc (rtos r s i div\n                            r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                         (rtos r s i div r) \\<inter>\n                        f (rtos r s i mod r)\n               else {\\<one>\\<^bsub>G\\<^esub>} /\n                          (if Suc (rtos r s i) < r * s\n                           then g (Suc (Suc (rtos r s i) div\n  r)) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (rtos r s i) div r) \\<inter>\n                                    f (Suc (rtos r s i) mod r)\n                           else {\\<one>\\<^bsub>G\\<^esub>}))", "apply (frule_tac x = \"rtos r s i\" and y = \"s * r - Suc 0\" and z = \"s * r\" in\n          le_less_trans, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> s * r - Suc 0;\n        rtos r s i < s * r\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>if rtos r s i < r * s\n               then g (Suc (rtos r s i div\n                            r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                         (rtos r s i div r) \\<inter>\n                        f (rtos r s i mod r)\n               else {\\<one>\\<^bsub>G\\<^esub>} /\n                          (if Suc (rtos r s i) < r * s\n                           then g (Suc (Suc (rtos r s i) div\n  r)) \\<diamondop>\\<^bsub>G\\<^esub> g (Suc (rtos r s i) div r) \\<inter>\n                                    f (Suc (rtos r s i) mod r)\n                           else {\\<one>\\<^bsub>G\\<^esub>}))", "apply (simp add:mult.commute [of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        rtos r s i < r * s\\<rbrakk>\n       \\<Longrightarrow> (Suc (rtos r s i) < r * s \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                           cmp_rfn G r f s g (Suc i)) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc (rtos r s i div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    (rtos r s i div r) \\<inter>\n                   f (rtos r s i mod r) /\n                           (g (Suc (Suc (rtos r s i) div\n                                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                 (Suc (rtos r s i) div r) \\<inter>\n                                f (Suc (rtos r s i) mod r)))) \\<and>\n                         (\\<not> Suc (rtos r s i) < r * s \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                           cmp_rfn G r f s g (Suc i)) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc (rtos r s i div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    (rtos r s i div r) \\<inter>\n                   f (rtos r s i mod r) /\n                           {\\<one>\\<^bsub>G\\<^esub>}))", "apply (case_tac \"Suc (rtos r s i) < r * s\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        rtos r s i < r * s; \\<not> Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (Suc (rtos r s i) < r * s \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                           cmp_rfn G r f s g (Suc i)) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc (rtos r s i div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    (rtos r s i div r) \\<inter>\n                   f (rtos r s i mod r) /\n                           (g (Suc (Suc (rtos r s i) div\n                                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                 (Suc (rtos r s i) div r) \\<inter>\n                                f (Suc (rtos r s i) mod r)))) \\<and>\n                         (\\<not> Suc (rtos r s i) < r * s \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                           cmp_rfn G r f s g (Suc i)) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc (rtos r s i div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    (rtos r s i div r) \\<inter>\n                   f (rtos r s i mod r) /\n                           {\\<one>\\<^bsub>G\\<^esub>}))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        rtos r s i < r * s; \\<not> Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (Suc (rtos r s i) < r * s \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                           cmp_rfn G r f s g (Suc i)) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc (rtos r s i div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    (rtos r s i div r) \\<inter>\n                   f (rtos r s i mod r) /\n                           (g (Suc (Suc (rtos r s i) div\n                                    r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                 (Suc (rtos r s i) div r) \\<inter>\n                                f (Suc (rtos r s i) mod r)))) \\<and>\n                         (\\<not> Suc (rtos r s i) < r * s \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                           cmp_rfn G r f s g (Suc i)) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc (rtos r s i div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    (rtos r s i div r) \\<inter>\n                   f (rtos r s i mod r) /\n                           {\\<one>\\<^bsub>G\\<^esub>}))\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i < r * s; rtos r s i \\<le> r * s - Suc 0; rtos r s i < r * s;\n        \\<not> Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule_tac i = i in rtos_rs_1 [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i < r * s; rtos r s i \\<le> r * s - Suc 0; rtos r s i < r * s;\n        \\<not> Suc (rtos r s i) < r * s; rtos r s i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule_tac i = i in rtos_rs_i_rs [of \"r\" \"s\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i < r * s; rtos r s i \\<le> r * s - Suc 0; rtos r s i < r * s;\n        \\<not> Suc (rtos r s i) < r * s; rtos r s i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> i \\<le> r * s - Suc 0\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i < r * s; rtos r s i \\<le> r * s - Suc 0; rtos r s i < r * s;\n        \\<not> Suc (rtos r s i) < r * s; rtos r s i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> rtos r s i = r * s - Suc 0\n 3. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i < r * s; rtos r s i \\<le> r * s - Suc 0; rtos r s i < r * s;\n        \\<not> Suc (rtos r s i) < r * s; rtos r s i = r * s - Suc 0;\n        i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 4. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (rule less_le_diff, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i < r * s; rtos r s i \\<le> r * s - Suc 0; rtos r s i < r * s;\n        \\<not> Suc (rtos r s i) < r * s; rtos r s i = r * s - Suc 0;\n        i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (simp add:cmp_rfn_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (r * s - Suc 0) = r * s - Suc 0; i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (r * s - Suc 0 < s * r \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>f\n                 (Suc ((r * s - Suc 0) div\n                       s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                    ((r * s - Suc 0) div s) \\<inter>\n                   g ((r * s - Suc 0) mod s) /\n                           {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc ((r * s - Suc 0) div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    ((r * s - Suc 0) div r) \\<inter>\n                   f ((r * s - Suc 0) mod r) /\n                           {\\<one>\\<^bsub>G\\<^esub>})) \\<and>\n                         (\\<not> r * s - Suc 0 < s * r \\<longrightarrow>\n                          (\\<natural>\\<^bsub>G\\<^esub>{\\<one>\\<^bsub>G\\<^esub>} /\n                           {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                          (\\<natural>\\<^bsub>G\\<^esub>g\n                 (Suc ((r * s - Suc 0) div\n                       r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                    ((r * s - Suc 0) div r) \\<inter>\n                   f ((r * s - Suc 0) mod r) /\n                           {\\<one>\\<^bsub>G\\<^esub>}))\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (r * s - Suc 0) = r * s - Suc 0; i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f\n                (Suc ((r * s - Suc 0) div\n                      s)) \\<diamondop>\\<^bsub>G\\<^esub> f\n                   ((r * s - Suc 0) div s) \\<inter>\n                  g ((r * s - Suc 0) mod s) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc ((r * s - Suc 0) div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   ((r * s - Suc 0) div r) \\<inter>\n                  f ((r * s - Suc 0) mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (subst JHS_Tr1_1 [of \"G\" \"r\" \"s\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (r * s - Suc 0) = r * s - Suc 0; i = r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc ((r * s - Suc 0) div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   ((r * s - Suc 0) div r) \\<inter>\n                  f ((r * s - Suc 0) mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule JHS_Tr1_1 [of \"G\" \"s\" \"r\" \"g\" \"f\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (r * s - Suc 0) = r * s - Suc 0; i = r * s - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n             ((s * r - Suc 0) div r) \\<inter>\n            f ((s * r - Suc 0) mod r) =\n        g (s - Suc 0) \\<inter> f (r - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc ((r * s - Suc 0) div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   ((r * s - Suc 0) div r) \\<inter>\n                  f ((r * s - Suc 0) mod r) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (simp add:mult.commute [of \"r\" \"s\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n             ((s * r - Suc 0) div r) \\<inter>\n            f ((s * r - Suc 0) mod r) =\n        g (s - Suc 0) \\<inter> f (r - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g (s - Suc 0) \\<inter>\n               f (r - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (simp add:Int_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.compseriesTr0 [of \"G\" \"r\" \"f\" \"r - Suc 0\"], assumption+,\n       simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) \\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.compseriesTr0 [of \"G\" \"s\" \"g\" \"s - Suc 0\"], assumption+,\n       simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) ;\n        G \\<guillemotright> g (s - Suc 0) \\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.inter_sgs [of \"G\" \"f (r - (Suc 0))\" \"g (s - Suc 0)\"], \n                                                          assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) ;\n        G \\<guillemotright> g (s - Suc 0) ;\n        G \\<guillemotright> f (r - Suc 0) \\<inter> g (s - Suc 0) \\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.special_sg_e [of \"G\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) ;\n        G \\<guillemotright> g (s - Suc 0) ;\n        G \\<guillemotright> f (r - Suc 0) \\<inter> g (s - Suc 0) ;\n        G \\<guillemotright> {\\<one>\\<^bsub>G\\<^esub>} \\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.special_nsg_e [of \"G\" \"f (r - Suc 0) \\<inter> g (s - Suc 0)\"], \n                                                        assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) ;\n        G \\<guillemotright> g (s - Suc 0) ;\n        G \\<guillemotright> f (r - Suc 0) \\<inter> g (s - Suc 0) ;\n        G \\<guillemotright> {\\<one>\\<^bsub>G\\<^esub>} ;\n        \\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n                                   g (s -\nSuc 0) \\<triangleright> {\\<one>\\<^bsub>G\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.Group_Gp [of \"G\" \"f (r - Suc 0) \\<inter> g (s - Suc 0)\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) ;\n        G \\<guillemotright> g (s - Suc 0) ;\n        G \\<guillemotright> f (r - Suc 0) \\<inter> g (s - Suc 0) ;\n        G \\<guillemotright> {\\<one>\\<^bsub>G\\<^esub>} ;\n        \\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n                                   g (s -\nSuc 0) \\<triangleright> {\\<one>\\<^bsub>G\\<^esub>};\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n                                     g (s - Suc 0))\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (frule Group.Group_Qg[of \"Gp G (f (r - Suc 0) \\<inter> g (s - Suc 0))\" \"{\\<one>\\<^bsub>G\\<^esub>}\"],\n       assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        rtos r s (s * r - Suc 0) = s * r - Suc 0; i = s * r - Suc 0;\n        g (Suc ((s * r - Suc 0) div\n                r)) \\<diamondop>\\<^bsub>G\\<^esub> f\n             ((s * r - Suc 0) mod r) \\<inter>\n            g ((s * r - Suc 0) div r) =\n        f (r - Suc 0) \\<inter> g (s - Suc 0);\n        G \\<guillemotright> f (r - Suc 0) ;\n        G \\<guillemotright> g (s - Suc 0) ;\n        G \\<guillemotright> f (r - Suc 0) \\<inter> g (s - Suc 0) ;\n        G \\<guillemotright> {\\<one>\\<^bsub>G\\<^esub>} ;\n        \\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n                                   g (s -\nSuc 0) \\<triangleright> {\\<one>\\<^bsub>G\\<^esub>};\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter> g (s - Suc 0));\n        Group\n         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter> g (s - Suc 0) /\n          {\\<one>\\<^bsub>G\\<^esub>})\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>}) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>f (r - Suc 0) \\<inter>\n               g (s - Suc 0) /\n                          {\\<one>\\<^bsub>G\\<^esub>})\n 2. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (simp add:isomTr0[of \"(\\<natural>\\<^bsub>G\\<^esub>(f (r - Suc 0) \\<inter> g (s - Suc 0))) / {\\<one>\\<^bsub>G\\<^esub>}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>Group G; 0 < r; 0 < s; compseries G r f; compseries G s g;\n        i \\<le> r * s - Suc 0; i < r * s; rtos r s i \\<le> r * s - Suc 0;\n        Suc (rtos r s i) < r * s\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<^bsub>G\\<^esub>cmp_rfn G r f s g i /\n                          cmp_rfn G r f s g (Suc i)) \\<cong>\n                         (\\<natural>\\<^bsub>G\\<^esub>g\n                (Suc (rtos r s i div\n                      r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                   (rtos r s i div r) \\<inter>\n                  f (rtos r s i mod r) /\n                          (g (Suc (Suc (rtos r s i) div\n                                   r)) \\<diamondop>\\<^bsub>G\\<^esub> g\n                                (Suc (rtos r s i) div r) \\<inter>\n                               f (Suc (rtos r s i) mod r)))", "apply (rule JHS_Tr1_6, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma abc_SucTr0:\"\\<lbrakk>(0::nat) < a; c \\<le> b; a - Suc 0 = b - c\\<rbrakk> \\<Longrightarrow> a = (Suc b) - c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a; c \\<le> b; a - Suc 0 = b - c\\<rbrakk>\n    \\<Longrightarrow> a = Suc b - c", "apply (subgoal_tac \"Suc 0 \\<le> a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < a; c \\<le> b; a - Suc 0 = b - c; Suc 0 \\<le> a\\<rbrakk>\n    \\<Longrightarrow> a = Suc b - c\n 2. \\<lbrakk>0 < a; c \\<le> b; a - Suc 0 = b - c\\<rbrakk>\n    \\<Longrightarrow> Suc 0 \\<le> a", "apply (frule le_add_diff_inverse2 [of \"Suc 0\" \"a\", THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < a; c \\<le> b; a - Suc 0 = b - c; Suc 0 \\<le> a;\n     a = a - Suc 0 + Suc 0\\<rbrakk>\n    \\<Longrightarrow> a = Suc b - c\n 2. \\<lbrakk>0 < a; c \\<le> b; a - Suc 0 = b - c\\<rbrakk>\n    \\<Longrightarrow> Suc 0 \\<le> a", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_0:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk> \\<Longrightarrow> \n       f ` {i. i \\<le> (Suc 0)} = {f 0, f (Suc 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc 0} = {f 0, f (Suc 0)}", "apply (simp add:Nset_1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_1:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i\\<in>{i. i \\<le> n};\n (Qw_cmpser G f) i \\<cong> E\\<rbrakk> \\<Longrightarrow> f i = f (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)", "apply (subgoal_tac \"0 < Suc n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "apply (frule Group.w_cmpser_gr [of \"G\" \"Suc n\" \"f\" \"i\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n; G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n; G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     Qw_cmpser G f i \\<cong> E; G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "apply (frule Group.w_cmpser_gr [of \"G\" \"Suc n\" \"f\" \"Suc i\"], simp+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     Qw_cmpser G f i \\<cong> E; G \\<guillemotright> f i ;\n     G \\<guillemotright> f (Suc i) \\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "apply (frule Group.w_cmpser_ns [of \"G\" \"Suc n\" \"f\" \"i\"], simp+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     Qw_cmpser G f i \\<cong> E; G \\<guillemotright> f i ;\n     G \\<guillemotright> f (Suc i) ;\n     \\<natural>\\<^bsub>G\\<^esub>f i \\<triangleright> f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "apply (simp add:Qw_cmpser_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     (\\<natural>\\<^bsub>G\\<^esub>f i / f (Suc i)) \\<cong> E;\n     G \\<guillemotright> f i ; G \\<guillemotright> f (Suc i) ;\n     \\<natural>\\<^bsub>G\\<^esub>f i \\<triangleright> f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> f i = f (Suc i)\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<in> {i. i \\<le> n};\n     Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc n", "apply (rule QgrpUnit_3 [of \"G\" \"E\" \"f i\" \"f (Suc i)\"], assumption+, simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_2:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n \\<not> (Qw_cmpser G f) i \\<cong> E\\<rbrakk> \\<Longrightarrow> f i \\<noteq> f (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply (cut_tac zero_less_Suc[of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply (frule Group.w_cmpser_gr [of \"G\" \"Suc n\" \"f\" \"i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> Suc n\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n;\n     G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n;\n     G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply (frule Group.w_cmpser_gr [of \"G\" \"Suc n\" \"f\" \"Suc i\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n;\n     G \\<guillemotright> f i \\<rbrakk>\n    \\<Longrightarrow> Suc i \\<le> Suc n\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n; G \\<guillemotright> f i ;\n     G \\<guillemotright> f (Suc i) \\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n; G \\<guillemotright> f i ;\n     G \\<guillemotright> f (Suc i) \\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply (frule Group.w_cmpser_ns [of \"G\" \"Suc n\" \"f\" \"i\"], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> Qw_cmpser G f i \\<cong> E; 0 < Suc n; G \\<guillemotright> f i ;\n     G \\<guillemotright> f (Suc i) ;\n     \\<natural>\\<^bsub>G\\<^esub>f i \\<triangleright> f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply (simp add:Qw_cmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc n) f; i \\<le> n;\n     \\<not> (\\<natural>\\<^bsub>G\\<^esub>f i / f (Suc i)) \\<cong> E;\n     G \\<guillemotright> f i ; G \\<guillemotright> f (Suc i) ;\n     \\<natural>\\<^bsub>G\\<^esub>f i \\<triangleright> f (Suc i)\\<rbrakk>\n    \\<Longrightarrow> f i \\<noteq> f (Suc i)", "apply (rule QgrpUnit_4 [of \"G\" \"E\" \"f i\" \"f (Suc i)\"], assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_3:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n  f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk> \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> (Suc n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}", "apply (frule Group.w_cmpser_is_d_gchain, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     f (Suc n) \\<noteq> f (Suc (Suc n)); d_gchain G (Suc (Suc n)) f\\<rbrakk>\n    \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}", "apply (thin_tac \"w_cmpser G (Suc (Suc n)) f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f\\<rbrakk>\n    \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}", "apply (rule contrapos_pp, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule Group.d_gchainTr2 [of \"G\" \"Suc ((Suc n))\" \"f\" \"Suc n\" \"Suc (Suc n)\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> 0 < Suc (Suc n)\n 2. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (Suc n)) f\n 3. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc (Suc n)\n 4. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc n) \\<le> Suc (Suc n)\n 5. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc (Suc n)\n 6. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc (Suc n)) f\n 2. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc (Suc n)\n 3. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc n) \\<le> Suc (Suc n)\n 4. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc (Suc n)\n 5. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc (Suc n)\n 2. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc (Suc n) \\<le> Suc (Suc n)\n 3. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<le> Suc (Suc n)\n 4. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule psubsetI [of \"f (Suc (Suc n))\" \"f (Suc n)\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> f (Suc (Suc n)) \\<noteq> f (Suc n)\n 2. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n);\n     f (Suc (Suc n)) \\<subset> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (rule not_sym, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subseteq> f (Suc n);\n     f (Suc (Suc n)) \\<subset> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (thin_tac \"f (Suc (Suc n)) \\<subseteq> f (Suc n)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     f (Suc (Suc n)) \\<in> f ` {i. i \\<le> Suc n};\n     f (Suc (Suc n)) \\<subset> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n     d_gchain G (Suc (Suc n)) f;\n     \\<exists>x\\<le>Suc n. f (Suc (Suc n)) = f x;\n     f (Suc (Suc n)) \\<subset> f (Suc n)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n        d_gchain G (Suc (Suc n)) f; f (Suc (Suc n)) \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac zero_less_Suc[of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n        d_gchain G (Suc (Suc n)) f; f (Suc (Suc n)) \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x; 0 < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac f = f and l = x in Group.d_gchainTr2 [of \"G\" \"Suc ((Suc n))\" \n                              _ _ \"Suc (Suc n)\"], assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n        d_gchain G (Suc (Suc n)) f; f (Suc (Suc n)) \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x; 0 < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc (Suc n)\n 2. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n        d_gchain G (Suc (Suc n)) f; f (Suc (Suc n)) \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x; 0 < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Suc (Suc n) \\<le> Suc (Suc n)\n 3. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n        d_gchain G (Suc (Suc n)) f; f (Suc (Suc n)) \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x; 0 < Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> x \\<le> Suc (Suc n)\n 4. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f (Suc (Suc n));\n        d_gchain G (Suc (Suc n)) f; f (Suc (Suc n)) \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x; 0 < Suc (Suc n);\n        f (Suc (Suc n)) \\<subseteq> f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; Ugp E; f (Suc n) \\<noteq> f x;\n        d_gchain G (Suc (Suc n)) f; f x \\<subset> f (Suc n);\n        x \\<le> Suc n \\<and> f (Suc (Suc n)) = f x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac f = f and l = x in Group.d_gchainTr2 [of \"G\" \"Suc (Suc n)\" \n                              _ _ \"Suc n\"], simp+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_4:\"\\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk> \\<Longrightarrow>\n  card (f ` {i. i \\<le> Suc 0}) - 1 = Suc 0 - card {i. i = 0 \\<and> \n                                                Qw_cmpser G f i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc 0}) - 1 =\n                      Suc 0 -\n                      card {i. i = 0 \\<and> Qw_cmpser G f i \\<cong> E}", "(* card (f ` Nset (Suc 0)) - 1 =\n           Suc 0 - card {i. i \\<in> Nset 0 \\<and> Qw_cmpser G f i \\<cong> E}\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc 0}) - 1 =\n                      Suc 0 -\n                      card {i. i = 0 \\<and> Qw_cmpser G f i \\<cong> E}", "apply (auto simp add: length_wcmpser0_0 Collect_conv_if)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f;\n     Qw_cmpser G f 0 \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {f 0, f (Suc 0)} \\<le> Suc 0\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f;\n     \\<not> Qw_cmpser G f 0 \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {f 0, f (Suc 0)} - Suc 0 = Suc 0", "apply (frule_tac n = 0 and f = f and i = 0 in length_wcmpser0_1 [of \"G\" \"E\"],         assumption+, simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f;\n     \\<not> Qw_cmpser G f 0 \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card {f 0, f (Suc 0)} - Suc 0 = Suc 0", "apply (frule_tac f = f and i = 0 in length_wcmpser0_2 [of \"G\" \"E\" \"0\"], \n       (assumption | simp)+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_5:\" \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f; \n      w_cmpser G (Suc n) f;  \n        card (f ` {i. i \\<le> (Suc n)}) - 1 = Suc n - \n                     card {i. i \\<le> n  \\<and> Qw_cmpser G f i \\<cong> E}; \n        Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk> \\<Longrightarrow>\n      card (f ` {i . i \\<le> (Suc (Suc n))}) - 1 =\n             Suc (Suc n) - card {i. i \\<le> (Suc n) \\<and> Qw_cmpser G f i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (frule_tac n = \"Suc n\" and f = f and i = \"Suc n\" in \n                            length_wcmpser0_1 [of \"G\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Suc n \\<in> {i. i \\<le> Suc n}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n    \\<Longrightarrow> Qw_cmpser G f (Suc n) \\<cong> E\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (simp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"f ` {i. i \\<le> (Suc (Suc n))} = f ` {i. i \\<le> (Suc n)}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (rule equalityI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)}\n                      \\<subseteq> f ` {i. i \\<le> Suc n}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc n}\n                      \\<subseteq> f ` {i. i \\<le> Suc (Suc n)}\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (simp add:image_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> {y. \\<exists>x\\<le>Suc (Suc n). y = f x}\n                      \\<subseteq> {y. \\<exists>x\\<le>Suc n. y = f x}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - 1 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n))\\<rbrakk>\n    \\<Longrightarrow> f ` {i. i \\<le> Suc n}\n                      \\<subseteq> f ` {i. i \\<le> Suc (Suc n)}\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (auto del:equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n        xa \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f xa = f x\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (case_tac \"xa = Suc (Suc n)\", simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n        xa = Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f (Suc (Suc n)) = f x\n 2. \\<And>xa.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n        xa \\<le> Suc (Suc n); xa \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f xa = f x\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (thin_tac \" xa = Suc (Suc n)\", rotate_tac -2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) = f (Suc (Suc n)); Group G; Ugp E;\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f (Suc (Suc n)) = f x\n 2. \\<And>xa.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n        xa \\<le> Suc (Suc n); xa \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f xa = f x\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (frule sym, thin_tac \"f (Suc n) = f (Suc (Suc n))\",\n         simp, thin_tac \"f (Suc (Suc n)) = f (Suc n)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Qw_cmpser G f (Suc n) \\<cong> E; Group G; Ugp E;\n     w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f;\n     card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<le>Suc n. f (Suc n) = f x\n 2. \\<And>xa.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n        xa \\<le> Suc (Suc n); xa \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f xa = f x\n 3. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (cut_tac n_in_Nsetn[of \"Suc n\"], blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card {y. \\<exists>x\\<le>Suc n. y = f x} - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n        xa \\<le> Suc (Suc n); xa \\<noteq> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f xa = f x\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (frule_tac m = xa and n = \"Suc (Suc n)\" in noteq_le_less, assumption,\n         frule_tac x = xa in Suc_less_le[of _ \"Suc n\"], blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"{i. i \\<le> (Suc n) \\<and> Qw_cmpser G f i \\<cong> E} =\n              insert (Suc n) {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n};\n     {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E} =\n     insert (Suc n) {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      Suc (Suc n) -\n                      card\n                       {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      insert (Suc n)\n                       {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n     w_cmpser G (Suc n) f;\n     card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n     Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n     Qw_cmpser G f (Suc n) \\<cong> E; f (Suc n) = f (Suc (Suc n));\n     f ` {i. i \\<le> Suc (Suc n)} = f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E} =\n                      insert (Suc n)\n                       {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_6:\"\\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f\\<rbrakk> \\<Longrightarrow> \n                                          0 < card (f ` {i. i \\<le> (Suc n)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f\\<rbrakk>\n    \\<Longrightarrow> 0 < card (f ` {i. i \\<le> Suc n})", "apply (insert finite_Collect_le_nat [of \"Suc n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> 0 < card (f ` {i. i \\<le> Suc n})", "apply (frule finite_imageI [of \"{i. i \\<le> (Suc n)}\" \"f\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}; finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n    \\<Longrightarrow> 0 < card (f ` {i. i \\<le> Suc n})", "apply (subgoal_tac \"{f 0} \\<subseteq> f ` {i. i \\<le> (Suc n)}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}; finite (f ` {i. i \\<le> Suc n});\n     {f 0} \\<subseteq> f ` {i. i \\<le> Suc n}\\<rbrakk>\n    \\<Longrightarrow> 0 < card (f ` {i. i \\<le> Suc n})\n 2. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}; finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n    \\<Longrightarrow> {f 0} \\<subseteq> f ` {i. i \\<le> Suc n}", "apply (frule card_mono [of \"f ` {i. i \\<le> (Suc n)}\" \"{f 0}\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}; finite (f ` {i. i \\<le> Suc n});\n     {f 0} \\<subseteq> f ` {i. i \\<le> Suc n};\n     card {f 0} \\<le> card (f ` {i. i \\<le> Suc n})\\<rbrakk>\n    \\<Longrightarrow> 0 < card (f ` {i. i \\<le> Suc n})\n 2. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}; finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n    \\<Longrightarrow> {f 0} \\<subseteq> f ` {i. i \\<le> Suc n}", "apply (simp add:card1 [of \"f 0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> Suc n}; finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n    \\<Longrightarrow> {f 0} \\<subseteq> f ` {i. i \\<le> Suc n}", "apply (rule subsetI, simp add:image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f; x = f 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<le>Suc n. f 0 = f x", "apply (subgoal_tac \"0 \\<in> {i. i \\<le> (Suc n)}\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f; x = f 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<in> {i. i \\<le> Suc n}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0_7:\"\\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f\\<rbrakk> \\<Longrightarrow>\n                     card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<le> Suc n", "apply (insert finite_Collect_le_nat [of \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<le> Suc n", "apply (subgoal_tac \"{i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E} \\<subseteq> {i. i \\<le> n}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f; finite {na. na \\<le> n};\n     {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n     \\<subseteq> {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<le> Suc n\n 2. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n}", "apply (frule card_mono [of \"{i. i \\<le> n}\" \"{i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f; finite {na. na \\<le> n};\n     {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n     \\<subseteq> {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n}\n 2. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f; finite {na. na \\<le> n};\n     {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n     \\<subseteq> {i. i \\<le> n};\n     card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n     \\<le> card {i. i \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<le> Suc n\n 3. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n}", "apply (assumption, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; w_cmpser G (Suc (Suc n)) f;\n     finite {na. na \\<le> n}\\<rbrakk>\n    \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                      \\<subseteq> {i. i \\<le> n}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_wcmpser0:\"\\<lbrakk>Group G; Ugp E\\<rbrakk> \\<Longrightarrow>\\<forall>f. w_cmpser G (Suc n) f \\<longrightarrow>  \ncard (f ` {i. i \\<le> (Suc n)}) - 1 = (Suc  n) - (card {i. i \\<le> n \\<and> \n                                      ((Qw_cmpser G f) i \\<cong> E)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f.\n                         w_cmpser G (Suc n) f \\<longrightarrow>\n                         card (f ` {i. i \\<le> Suc n}) - 1 =\n                         Suc n -\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f.\n                         w_cmpser G (Suc 0) f \\<longrightarrow>\n                         card (f ` {i. i \\<le> Suc 0}) - 1 =\n                         Suc 0 -\n                         card\n                          {i. i \\<le> 0 \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                            card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                            Suc (Suc n) -\n                            card\n                             {i. i \\<le> Suc n \\<and>\n                                 Qw_cmpser G f i \\<cong> E}", "(*** n = 0 ***)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f.\n                         w_cmpser G (Suc 0) f \\<longrightarrow>\n                         card (f ` {i. i \\<le> Suc 0}) - 1 =\n                         Suc 0 -\n                         card\n                          {i. i \\<le> 0 \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                            card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                            Suc (Suc n) -\n                            card\n                             {i. i \\<le> Suc n \\<and>\n                                 Qw_cmpser G f i \\<cong> E}", "apply (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>Group G; Ugp E\\<rbrakk>\n       \\<Longrightarrow> w_cmpser G (Suc 0) f \\<longrightarrow>\n                         card (f ` {i. i \\<le> Suc 0}) - 1 =\n                         Suc 0 -\n                         card\n                          {i. i \\<le> 0 \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                            card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                            Suc (Suc n) -\n                            card\n                             {i. i \\<le> Suc n \\<and>\n                                 Qw_cmpser G f i \\<cong> E}", "apply (rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc 0) f\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc 0}) - 1 =\n                         Suc 0 -\n                         card\n                          {i. i \\<le> 0 \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                            card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                            Suc (Suc n) -\n                            card\n                             {i. i \\<le> Suc n \\<and>\n                                 Qw_cmpser G f i \\<cong> E}", "apply (frule_tac f = f in length_wcmpser0_4[of G E], assumption+, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                            card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                            Suc (Suc n) -\n                            card\n                             {i. i \\<le> Suc n \\<and>\n                                 Qw_cmpser G f i \\<cong> E}", "(**** n ****)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                            card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                            Suc (Suc n) -\n                            card\n                             {i. i \\<le> Suc n \\<and>\n                                 Qw_cmpser G f i \\<cong> E}", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n -\n           card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> w_cmpser G (Suc (Suc n)) f \\<longrightarrow>\n                         card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (frule_tac n = \"Suc n\" and f = f in Group.w_cmpser_pre [of \"G\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"card (f ` {i. i \\<le> (Suc n)}) - 1 =\n                 Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) - 1 =\n                         Suc n -\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) - 1 =\n                         Suc n -\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E;\n        \\<forall>f.\n           w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> Suc n}) - 1 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        w_cmpser G (Suc (Suc n)) f; w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (thin_tac \" \\<forall>f. w_cmpser G (Suc n) f \\<longrightarrow>\n                 card (f ` {i. i \\<le> (Suc n)}) - 1 =\n                 Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (case_tac \"Qw_cmpser G f (Suc n) \\<cong> E\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (rule length_wcmpser0_5, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (frule_tac n = \"Suc n\" and f = f and i = \"Suc n\" in \n                            length_wcmpser0_2 [of \"G\" \"E\"], assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> Suc n\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> \\<not> Qw_cmpser G f (Suc n) \\<cong> E\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> \\<not> Qw_cmpser G f (Suc n) \\<cong> E\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"f ` {i. i \\<le> (Suc (Suc n))} = \n                       insert (f (Suc (Suc n))) (f ` {i. i \\<le> (Suc n)})\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        f ` {i. i \\<le> Suc (Suc n)} =\n        insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc (Suc n)}) - 1 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        f ` {i. i \\<le> Suc (Suc n)} =\n        insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> card\n                          (insert (f (Suc (Suc n)))\n                            (f ` {i. i \\<le> Suc n})) -\n                         Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (thin_tac \"f ` {i. i \\<le> (Suc (Suc n))} =\n             insert (f (Suc (Suc n))) (f ` {i. i \\<le> (Suc n)})\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> card\n                          (insert (f (Suc (Suc n)))\n                            (f ` {i. i \\<le> Suc n})) -\n                         Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (subgoal_tac \"finite (f ` {i. i \\<le> (Suc n)})\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> card\n                          (insert (f (Suc (Suc n)))\n                            (f ` {i. i \\<le> Suc n})) -\n                         Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (subgoal_tac \"f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> (Suc n)}\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> card\n                          (insert (f (Suc (Suc n)))\n                            (f ` {i. i \\<le> Suc n})) -\n                         Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 4. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (subst card_insert_disjoint, assumption)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\n 4. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 5. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 4. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 4. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (rule length_wcmpser0_3, assumption+)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (subgoal_tac \"finite {i. i \\<le> (Suc n)}\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        finite {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> finite (f ` {i. i \\<le> Suc n})\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> finite {i. i \\<le> Suc n}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 4. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "apply (rule finite_imageI, assumption+, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n))\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (thin_tac \" \\<not> Qw_cmpser G f (Suc n) \\<cong> E\",\n        thin_tac \" w_cmpser G (Suc n) f\",\n        thin_tac \"f (Suc n) \\<noteq> f (Suc (Suc n))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"{i. i \\<le> (Suc (Suc n))} = {i. i\\<le>(Suc n)} \\<union> {Suc (Suc n)}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        {i. i \\<le> Suc (Suc n)} =\n        {i. i \\<le> Suc n} \\<union> {Suc (Suc n)}\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> Suc (Suc n)} =\n                         {i. i \\<le> Suc n} \\<union> {Suc (Suc n)}\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> Suc (Suc n)} =\n                         {i. i \\<le> Suc n} \\<union> {Suc (Suc n)}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        card (f ` {i. i \\<le> Suc n}) - 1 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        {i. i \\<le> Suc (Suc n)} =\n        {i. i \\<le> Suc n} \\<union> {Suc (Suc n)}\\<rbrakk>\n       \\<Longrightarrow> f ` {i. i \\<le> Suc (Suc n)} =\n                         insert (f (Suc (Suc n))) (f ` {i. i \\<le> Suc n})\n 3. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (rule_tac n = \"Suc n\" in Nset_un, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"card {i. i \\<le> (Suc n) \\<and> Qw_cmpser G f i \\<cong> E} =\n                        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n};\n        card {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E} =\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> Suc (card (f ` {i. i \\<le> Suc n})) - Suc 0 =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n));\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n};\n        card {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E} =\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (thin_tac \" card {i. i \\<le> (Suc n) \\<and> Qw_cmpser G f i \\<cong> E} =\n             card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\",\n        thin_tac \"\\<not> Qw_cmpser G f (Suc n) \\<cong> E\",\n        thin_tac \"f (Suc n) \\<noteq> f (Suc (Suc n))\",\n        thin_tac \"f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> (Suc n)}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n -\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (frule_tac n = n and f = f in length_wcmpser0_6 [of \"G\"], assumption+,\n        frule_tac n = n and f = f in length_wcmpser0_7 [of \"G\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        0 < card (f ` {i. i \\<le> Suc n});\n        card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> ?E54 n f}\n        \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) =\n                         Suc (Suc n) -\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (rule abc_SucTr0, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. i \\<le> Suc n \\<and>\n                              Qw_cmpser G f i \\<cong> E} =\n                         card\n                          {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (rule card_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f;\n        card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n        Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E};\n        \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        f (Suc n) \\<noteq> f (Suc (Suc n)); finite (f ` {i. i \\<le> Suc n});\n        f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> Suc n}\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> Suc n \\<and>\n                             Qw_cmpser G f i \\<cong> E} =\n                         {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (thin_tac \"card (f ` {i. i \\<le> (Suc n)}) - Suc 0 =\n             Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\",\n        thin_tac \"f (Suc n) \\<noteq> f (Suc (Suc n))\",\n        thin_tac \"f (Suc (Suc n)) \\<notin> f ` {i. i \\<le> (Suc n)}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f; \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> Suc n \\<and>\n                             Qw_cmpser G f i \\<cong> E} =\n                         {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f; \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}\n                         \\<subseteq> {i.\ni \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f; \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                         \\<subseteq> {i.\ni \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (rule subsetI, simp add:CollectI, erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n f x.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f; \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        x \\<le> Suc n; Qw_cmpser G f x \\<cong> E\\<rbrakk>\n       \\<Longrightarrow> x \\<le> n\n 2. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f; \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                         \\<subseteq> {i.\ni \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (case_tac \"x = Suc n\", simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>Group G; Ugp E; w_cmpser G (Suc (Suc n)) f;\n        w_cmpser G (Suc n) f; \\<not> Qw_cmpser G f (Suc n) \\<cong> E;\n        finite (f ` {i. i \\<le> Suc n})\\<rbrakk>\n       \\<Longrightarrow> {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\n                         \\<subseteq> {i.\ni \\<le> Suc n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (rule subsetI, simp add:CollectI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_of_twcmpser:\"\\<lbrakk>Group G; Ugp E; tw_cmpser G (Suc n) f \\<rbrakk> \\<Longrightarrow> \n      length_twcmpser G (Suc n) f = \n                     (Suc n) - (card {i. i \\<le> n \\<and> ((Qw_cmpser G f) i \\<cong> E)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; tw_cmpser G (Suc n) f\\<rbrakk>\n    \\<Longrightarrow> length_twcmpser G (Suc n) f =\n                      Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (unfold length_twcmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; tw_cmpser G (Suc n) f\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n                      Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (insert length_wcmpser0 [of \"G\" \"E\" \"n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; tw_cmpser G (Suc n) f;\n     \\<lbrakk>Group G; Ugp E\\<rbrakk>\n     \\<Longrightarrow> \\<forall>f.\n                          w_cmpser G (Suc n) f \\<longrightarrow>\n                          card (f ` {i. i \\<le> Suc n}) - 1 =\n                          Suc n -\n                          card\n                           {i. i \\<le> n \\<and>\n                               Qw_cmpser G f i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> card (f ` {i. i \\<le> Suc n}) - Suc 0 =\n                      Suc n -\n                      card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}", "apply (subgoal_tac \"w_cmpser G (Suc n) f\", rotate_tac -1,\n       simp, simp, \n       thin_tac \"\\<forall>f. w_cmpser G (Suc n) f \\<longrightarrow>\n           card (f ` {i. i \\<le> (Suc n)}) - Suc 0 =\n           Suc n - card {i. i \\<le> n \\<and> Qw_cmpser G f i \\<cong> E}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; tw_cmpser G (Suc n) f\\<rbrakk>\n    \\<Longrightarrow> w_cmpser G (Suc n) f", "apply (simp add:tw_cmpser_def w_cmpser_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; td_gchain G (Suc n) f;\n     \\<forall>l\\<le>n.\n        \\<natural>\\<^bsub>G\\<^esub>f l \\<triangleright> f (Suc l)\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc n) f", "apply (thin_tac \"\\<forall>i\\<le> n. Gp G (f i) \\<triangleright> f (Suc i)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; td_gchain G (Suc n) f\\<rbrakk>\n    \\<Longrightarrow> d_gchain G (Suc n) f", "apply (simp add:td_gchain_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma JHS_1:\"\\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0<r; 0 < s\\<rbrakk>\n \\<Longrightarrow> r =  r * s - card {i. i \\<le> (r * s - Suc 0) \\<and>\n            Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s\\<rbrakk>\n    \\<Longrightarrow> r =\n                      r * s -\n                      card\n                       {i. i \\<le> r * s - Suc 0 \\<and>\n                           Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}", "apply (frule_tac r = r and s = s and G = G and f = f and g = g in \n                   Group.JHS_Tr0, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s; cmp_rfn G r f s g \\<in> wcsr_rfns G r f s\\<rbrakk>\n    \\<Longrightarrow> r =\n                      r * s -\n                      card\n                       {i. i \\<le> r * s - Suc 0 \\<and>\n                           Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}", "apply (simp add:wcsr_rfns_def, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s; tw_cmpser G (s * r) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i\\<rbrakk>\n    \\<Longrightarrow> r =\n                      r * s -\n                      card\n                       {i. i \\<le> r * s - Suc 0 \\<and>\n                           Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}", "apply (frule_tac length_of_twcmpser [of \"G\" \"E\" \"r * s - Suc 0\" \n        \"cmp_rfn G r f s g\"], assumption+, simp add:mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s; tw_cmpser G (s * r) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     length_twcmpser G (Suc (r * s - Suc 0)) (cmp_rfn G r f s g) =\n     Suc (r * s - Suc 0) -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> r =\n                      r * s -\n                      card\n                       {i. i \\<le> r * s - Suc 0 \\<and>\n                           Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}", "apply (simp add:length_twcmpser_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s; tw_cmpser G (s * r) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     card (cmp_rfn G r f s g ` {i. i \\<le> r * s}) - Suc 0 =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> r =\n                      r * s -\n                      card\n                       {i. i \\<le> r * s - Suc 0 \\<and>\n                           Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}", "apply (frule Group.rfn_compseries_iM [of \"G\" \"r\" \"s\" \"f\" \"cmp_rfn G r f s g\"], assumption+, rule Group.JHS_Tr0 [of \"G\" \"r\" \"s\" \"f\" \"g\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s; tw_cmpser G (s * r) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     card (cmp_rfn G r f s g ` {i. i \\<le> r * s}) - Suc 0 =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     card (cmp_rfn G r f s g ` {i. i \\<le> s * r}) = r + 1\\<rbrakk>\n    \\<Longrightarrow> r =\n                      r * s -\n                      card\n                       {i. i \\<le> r * s - Suc 0 \\<and>\n                           Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E}", "apply (simp add:mult.commute [of \"s\" \"r\"])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma J_H_S:\"\\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0<r;\n               (0::nat)<s \\<rbrakk>  \\<Longrightarrow> r = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s\\<rbrakk>\n    \\<Longrightarrow> r = s", "apply (frule JHS_1 [of \"G\" \"E\" \"r\" \"f\" \"s\" \"g\"], assumption+,\n       frule JHS_1 [of \"G\" \"E\" \"s\" \"g\" \"r\" \"f\"], assumption+,\n       frule JHS_Tr1 [of \"G\" \"r\" \"s\" \"f\" \"g\"], assumption+,\n       frule Group.JHS_Tr0 [of \"G\" \"r\" \"s\" \"f\" \"g\"], assumption+,\n       frule Group.JHS_Tr0 [of \"G\" \"s\" \"r\" \"g\" \"f\"], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     s * r -\n     card\n      {i. i \\<le> s * r - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - 1) (rtos r s) (Qw_cmpser G (cmp_rfn G r f s g))\n      (Qw_cmpser G (cmp_rfn G s g r f));\n     cmp_rfn G r f s g \\<in> wcsr_rfns G r f s;\n     cmp_rfn G s g r f \\<in> wcsr_rfns G s g r\\<rbrakk>\n    \\<Longrightarrow> r = s", "apply (simp add:wcsr_rfns_def, (erule conjE)+,\n       frule Group.tw_cmpser_is_w_cmpser [of \"G\" \"s * r\" \"cmp_rfn G r f s g\"],\n                                                        assumption+,\n       frule Qw_cmpser [of \"G\" \"s * r - Suc 0\" \"cmp_rfn G r f s g\"],\n       simp add:pos_mult_pos [of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     s * r -\n     card\n      {i. i \\<le> s * r - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (s * r) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (s * r) (cmp_rfn G r f s g);\n     Gchain (s * r - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g))\\<rbrakk>\n    \\<Longrightarrow> r = s", "apply (frule Group.tw_cmpser_is_w_cmpser [of \"G\" \"r * s\" \"cmp_rfn G s g r f\"],\n                                                        assumption+,\n        frule Qw_cmpser [of \"G\" \"r * s - Suc 0\" \"cmp_rfn G s g r f\"],\n        simp add:pos_mult_pos [of \"r\" \"s\"],\n        simp add:mult.commute [of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> r = s", "apply (frule isom_gch_units [of \"E\" \"r * s - Suc 0\" \n \"Qw_cmpser G (cmp_rfn G r f s g)\" \"Qw_cmpser G (cmp_rfn G s g r f)\" \n                                               \"rtos r s\"], assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (r * s - Suc 0)\n                       (Qw_cmpser G (cmp_rfn G r f s g))\n                       (Qw_cmpser G (cmp_rfn G s g r f)) (rtos r s)\n 2. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f));\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E} =\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> r = s", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f));\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E} =\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E}\\<rbrakk>\n    \\<Longrightarrow> r = s\n 2. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (r * s - Suc 0)\n                       (Qw_cmpser G (cmp_rfn G r f s g))\n                       (Qw_cmpser G (cmp_rfn G s g r f)) (rtos r s)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> Gch_bridge (r * s - Suc 0)\n                       (Qw_cmpser G (cmp_rfn G r f s g))\n                       (Qw_cmpser G (cmp_rfn G s g r f)) (rtos r s)", "apply (simp add:Gch_bridge_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>l\\<le>r * s - Suc 0.\n                          rtos r s l \\<le> r * s - Suc 0) \\<and>\n                      inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>l\\<le>r * s - Suc 0.\n                         rtos r s l \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}", "apply (rule allI, rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n        0 < s;\n        r =\n        r * s -\n        card\n         {i. i \\<le> r * s - Suc 0 \\<and>\n             Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n        s =\n        r * s -\n        card\n         {i. i \\<le> r * s - Suc 0 \\<and>\n             Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n        isom_Gchains (r * s - Suc 0) (rtos r s)\n         (Qw_cmpser G (cmp_rfn G r f s g))\n         (Qw_cmpser G (cmp_rfn G s g r f));\n        tw_cmpser G (r * s) (cmp_rfn G r f s g);\n        \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n        tw_cmpser G (r * s) (cmp_rfn G s g r f);\n        \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n        w_cmpser G (r * s) (cmp_rfn G r f s g);\n        Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n        w_cmpser G (r * s) (cmp_rfn G s g r f);\n        Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f));\n        l \\<le> r * s - Suc 0\\<rbrakk>\n       \\<Longrightarrow> rtos r s l \\<le> r * s - Suc 0\n 2. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}", "apply (frule_tac l = l in rtos_hom1 [of \"r\" \"s\"], assumption+,\n        simp add:mult.commute [of \"s\" \"r\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Group G; Ugp E; compseries G r f; compseries G s g; 0 < r;\n     0 < s;\n     r =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G r f s g) i \\<cong> E};\n     s =\n     r * s -\n     card\n      {i. i \\<le> r * s - Suc 0 \\<and>\n          Qw_cmpser G (cmp_rfn G s g r f) i \\<cong> E};\n     isom_Gchains (r * s - Suc 0) (rtos r s)\n      (Qw_cmpser G (cmp_rfn G r f s g)) (Qw_cmpser G (cmp_rfn G s g r f));\n     tw_cmpser G (r * s) (cmp_rfn G r f s g);\n     \\<forall>i\\<le>r. cmp_rfn G r f s g (i * s) = f i;\n     tw_cmpser G (r * s) (cmp_rfn G s g r f);\n     \\<forall>i\\<le>s. cmp_rfn G s g r f (i * r) = g i;\n     w_cmpser G (r * s) (cmp_rfn G r f s g);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G r f s g));\n     w_cmpser G (r * s) (cmp_rfn G s g r f);\n     Gchain (r * s - Suc 0) (Qw_cmpser G (cmp_rfn G s g r f))\\<rbrakk>\n    \\<Longrightarrow> inj_on (rtos r s) {i. i \\<le> r * s - Suc 0}", "apply (rule rtos_inj, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}