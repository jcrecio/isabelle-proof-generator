{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Moebius.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma moebius_mat_eq_refl [simp]: \n  shows \"moebius_mat_eq x x\"", "lemma ex_mk_moebius:\n  shows \"\\<exists> a b c d. M = mk_moebius a b c d \\<and> mat_det (a, b, c, d) \\<noteq> 0\"", "lemma bij_moebius_pt [simp]:\n  shows \"bij (moebius_pt M)\"", "lemma moebius_pt_eq_I:                                          \n  assumes \"moebius_pt M z1 = moebius_pt M z2\"\n  shows \"z1 = z2\"", "lemma moebius_pt_neq_I [simp]:\n  assumes \"z1 \\<noteq> z2\"\n  shows \"moebius_pt M z1 \\<noteq> moebius_pt M z2\"", "lemma moebius_pt_bilinear:\n  assumes \"mat_det (a, b, c, d) \\<noteq> 0\"\n  shows \"moebius_pt (mk_moebius a b c d) z =\n            (if z \\<noteq> \\<infinity>\\<^sub>h then\n                 ((of_complex a) *\\<^sub>h z +\\<^sub>h (of_complex b)) :\\<^sub>h\n                 ((of_complex c) *\\<^sub>h z +\\<^sub>h (of_complex d))\n             else\n                 (of_complex a) :\\<^sub>h\n                 (of_complex c))\"", "lemma moebius_pt_moebius_id [simp]:\n  shows \"moebius_pt id_moebius = id\"", "lemma mk_moeibus_id [simp]:\n  shows \"mk_moebius a 0 0 a = id_moebius\"", "lemma moebius_inv:\n  shows \"moebius_pt (moebius_inv M) = inv (moebius_pt M)\"", "lemma is_moebius_inv [simp]:\n  assumes \"is_moebius m\"\n  shows \"is_moebius (inv m)\"", "lemma moebius_inv_mk_moebus [simp]:\n  assumes \"mat_det (a, b, c, d) \\<noteq> 0\"\n  shows \"moebius_inv (mk_moebius a b c d) =\n         mk_moebius (d/(a*d-b*c)) (-b/(a*d-b*c)) (-c/(a*d-b*c)) (a/(a*d-b*c))\"", "lemma moebius_comp: \n  shows \"moebius_pt (moebius_comp M1 M2) = moebius_pt M1 \\<circ> moebius_pt M2\"", "lemma moebius_pt_comp [simp]:\n  shows \"moebius_pt (moebius_comp M1 M2) z = moebius_pt M1 (moebius_pt M2 z)\"", "lemma is_moebius_comp [simp]:\n  assumes \"is_moebius m1\" and \"is_moebius m2\"\n  shows \"is_moebius (m1 \\<circ> m2)\"", "lemma moebius_comp_mk_moebius [simp]:\n  assumes \"mat_det (a, b, c, d) \\<noteq> 0\" and \"mat_det (a', b', c', d') \\<noteq> 0\"\n  shows \"moebius_comp (mk_moebius a b c d) (mk_moebius a' b' c' d') =\n           mk_moebius (a * a' + b * c') (a * b' + b * d') (c * a' + d * c') (c * b' + d * d')\"", "lemma moebius_comp_inv_left [simp]: \n  shows \"moebius_comp (moebius_inv M) M = id_moebius\"", "lemma moebius_comp_inv_right [simp]:\n  shows \"moebius_comp M (moebius_inv M) = id_moebius\"", "lemma moebius_pt_comp_inv_left [simp]:\n  shows \"moebius_pt (moebius_inv M) (moebius_pt M z) = z\"", "lemma moebius_pt_comp_inv_right [simp]: \n  shows \"moebius_pt M (moebius_pt (moebius_inv M) z) = z\"", "lemma moebius_pt_comp_inv_image_left [simp]:\n  shows \"moebius_pt (moebius_inv M) ` moebius_pt M ` A = A\"", "lemma moebius_pt_comp_inv_image_right [simp]:\n  shows \"moebius_pt M ` moebius_pt (moebius_inv M) ` A = A\"", "lemma moebius_pt_invert:\n  assumes \"moebius_pt M z1 = z2\"\n  shows \"moebius_pt (moebius_inv M) z2 = z1\"", "lemma moebius_pt_moebius_inv_in_set [simp]:\n  assumes \"moebius_pt M z \\<in> A\"\n  shows \"z \\<in> moebius_pt (moebius_inv M) ` A\"", "lemma moebius_reciprocal [simp]:\n  shows \"moebius_pt moebius_reciprocal = reciprocal\"", "lemma moebius_reciprocal_inv [simp]:\n  shows \"moebius_inv moebius_reciprocal = moebius_reciprocal\"", "lemma moebius_pt_moebius_similarity [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) z = (of_complex a) *\\<^sub>h z +\\<^sub>h (of_complex b)\"", "lemma moebius_pt_moebius_similarity':\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) = (\\<lambda> z. (of_complex a) *\\<^sub>h z +\\<^sub>h (of_complex b))\"", "lemma is_moebius_similarity':\n  assumes \"a \\<noteq> 0\\<^sub>h\" and \"a \\<noteq> \\<infinity>\\<^sub>h\" and \"b \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"(\\<lambda> z. a *\\<^sub>h z +\\<^sub>h b) = moebius_pt (moebius_similarity (to_complex a) (to_complex b))\"", "lemma is_moebius_similarity:\n  assumes \"a \\<noteq> 0\\<^sub>h\" and \"a \\<noteq> \\<infinity>\\<^sub>h\" and \"b \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"is_moebius (\\<lambda> z. a *\\<^sub>h z +\\<^sub>h b)\"", "lemma moebius_similarity_id [simp]:\n  shows \"moebius_similarity 1 0 = id_moebius\"", "lemma moebius_similarity_inv [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_inv (moebius_similarity a b) = moebius_similarity (1/a) (-b/a)\"", "lemma moebius_similarity_uminus [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"- moebius_similarity a b = moebius_similarity (1/a) (-b/a)\"", "lemma moebius_similarity_comp [simp]:\n  assumes \"a \\<noteq> 0\" and \"c \\<noteq> 0\"\n  shows \"moebius_comp (moebius_similarity a b) (moebius_similarity c d) = moebius_similarity (a*c) (a*d+b)\"", "lemma moebius_similarity_plus [simp]:\n  assumes \"a \\<noteq> 0\" and \"c \\<noteq> 0\"\n  shows \"moebius_similarity a b + moebius_similarity c d = moebius_similarity (a*c) (a*d+b)\"", "lemma moebius_similarity_inf [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma moebius_similarity_only_inf_to_inf:\n  assumes \"a \\<noteq> 0\"  \"moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h\"", "lemma moebius_similarity_inf_iff [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h \\<longleftrightarrow> z = \\<infinity>\\<^sub>h\"", "lemma inf_fixed_only_moebius_similarity:\n  assumes \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"\\<exists> a b. a \\<noteq> 0 \\<and> M = moebius_similarity a b\"", "lemma moebius_translation_comp [simp]:\n  shows \"moebius_comp (moebius_translation v1) (moebius_translation v2) = moebius_translation (v1 + v2)\"", "lemma moebius_translation_plus [simp]:\n  shows \"(moebius_translation v1) + (moebius_translation v2) = moebius_translation (v1 + v2)\"", "lemma moebius_translation_zero [simp]:\n  shows \"moebius_translation 0 = id_moebius\"", "lemma moebius_translation_inv [simp]:\n  shows \"moebius_inv (moebius_translation v1) = moebius_translation (-v1)\"", "lemma moebius_translation_uminus [simp]:\n  shows \"- (moebius_translation v1) = moebius_translation (-v1)\"", "lemma moebius_translation_inv_translation [simp]:\n  shows \"moebius_pt (moebius_translation v) (moebius_pt (moebius_translation (-v)) z) = z\"", "lemma moebius_inv_translation_translation [simp]:\n  shows \"moebius_pt (moebius_translation (-v)) (moebius_pt (moebius_translation v) z) = z\"", "lemma moebius_pt_moebius_translation [simp]:\n  shows \"moebius_pt (moebius_translation v) (of_complex z) = of_complex (z + v)\"", "lemma moebius_pt_moebius_translation_inf [simp]:\n  shows \"moebius_pt (moebius_translation v) \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma moebius_rotation_comp [simp]:\n  shows \"moebius_comp (moebius_rotation \\<phi>1) (moebius_rotation \\<phi>2) = moebius_rotation (\\<phi>1 + \\<phi>2)\"", "lemma moebius_rotation_plus [simp]:\n  shows \"(moebius_rotation \\<phi>1) + (moebius_rotation \\<phi>2) = moebius_rotation (\\<phi>1 + \\<phi>2)\"", "lemma moebius_rotation_zero [simp]:\n  shows \"moebius_rotation 0 = id_moebius\"", "lemma moebius_rotation_inv [simp]:\n  shows \"moebius_inv (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)\"", "lemma moebius_rotation_uminus [simp]:\n  shows \"- (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)\"", "lemma moebius_rotation_inv_rotation [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) (moebius_pt (moebius_rotation (-\\<phi>)) z) = z\"", "lemma moebius_inv_rotation_rotation [simp]:\n  shows \"moebius_pt (moebius_rotation (-\\<phi>)) (moebius_pt (moebius_rotation \\<phi>) z) = z\"", "lemma moebius_pt_moebius_rotation [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) (of_complex z) = of_complex (cis \\<phi> * z)\"", "lemma moebius_pt_moebius_rotation_inf [simp]:\n  shows \"moebius_pt (moebius_rotation v) \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma moebius_pt_rotation_inf_iff [simp]:\n  shows \"moebius_pt (moebius_rotation v) x = \\<infinity>\\<^sub>h \\<longleftrightarrow> x = \\<infinity>\\<^sub>h\"", "lemma moebius_pt_moebius_rotation_zero [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) 0\\<^sub>h = 0\\<^sub>h\"", "lemma moebius_pt_moebius_rotation_zero_iff [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) x = 0\\<^sub>h \\<longleftrightarrow> x = 0\\<^sub>h\"", "lemma moebius_rotation_preserve_cmod [simp]:\n  assumes \"u \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"cmod (to_complex (moebius_pt (moebius_rotation \\<phi>) u)) = cmod (to_complex u)\"", "lemma moebius_dilatation_comp [simp]:\n  assumes \"a1 > 0\" and \"a2 > 0\"\n  shows \"moebius_comp (moebius_dilatation a1) (moebius_dilatation a2) = moebius_dilatation (a1 * a2)\"", "lemma moebius_dilatation_plus [simp]:\n  assumes \"a1 > 0\" and \"a2 > 0\"\n  shows \"(moebius_dilatation a1) + (moebius_dilatation a2) = moebius_dilatation (a1 * a2)\"", "lemma moebius_dilatation_zero [simp]:\n  shows \"moebius_dilatation 1 = id_moebius\"", "lemma moebius_dilatation_inverse [simp]:\n  assumes \"a > 0\"\n  shows \"moebius_inv (moebius_dilatation a) = moebius_dilatation (1/a)\"", "lemma moebius_dilatation_uminus [simp]:\n  assumes \"a > 0\"\n  shows \"- (moebius_dilatation a) = moebius_dilatation (1/a)\"", "lemma moebius_pt_dilatation [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_dilatation a) (of_complex z) = of_complex (cor a * z)\"", "lemma moebius_rotation_dilatation:                                     \n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_rotation_dilatation a = moebius_rotation (arg a) + moebius_dilatation (cmod a)\"", "lemma conjugate_moebius:\n  shows \"conjugate \\<circ> moebius_pt M = moebius_pt (conjugate_moebius M) \\<circ> conjugate\"", "lemma similarity_decomposition:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_similarity a b = (moebius_translation b) + (moebius_rotation (arg a)) + (moebius_dilatation (cmod a))\"", "lemma moebius_decomposition:\n  assumes \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  shows \"mk_moebius a b c d =\n             moebius_translation (a/c) +\n             moebius_rotation_dilatation ((b*c - a*d)/(c*c)) +\n             moebius_reciprocal +\n             moebius_translation (d/c)\"", "lemma moebius_decomposition_similarity:\n  assumes \"a \\<noteq> 0\"\n  shows \"mk_moebius a b 0 d = moebius_similarity (a/d) (b/d)\"", "lemma wlog_moebius_decomposition:\n  assumes\n    trans: \"\\<And> v. P (moebius_translation v)\" and\n    rot: \"\\<And> \\<alpha>. P (moebius_rotation \\<alpha>)\" and\n    dil: \"\\<And> k. P (moebius_dilatation k)\" and\n    recip: \"P (moebius_reciprocal)\" and\n    comp: \"\\<And> M1 M2. \\<lbrakk>P M1; P M2\\<rbrakk> \\<Longrightarrow> P (M1 + M2)\"\n  shows \"P M\"", "lemma is_moebius_cross_ratio:\n  assumes \"z1 \\<noteq> z2\" and  \"z2 \\<noteq> z3\" and \"z1 \\<noteq> z3\"\n  shows \"is_moebius (\\<lambda> z. cross_ratio z z1 z2 z3)\"", "lemma ex_moebius_01inf:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  shows \"\\<exists> M. ((moebius_pt M z1 = 0\\<^sub>h) \\<and> (moebius_pt M z2 = 1\\<^sub>h) \\<and> (moebius_pt M z3 = \\<infinity>\\<^sub>h))\"", "lemma ex_moebius:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" \n          \"w1 \\<noteq> w2\" and \"w1 \\<noteq> w3\" and \"w2 \\<noteq> w3\"\n  shows \"\\<exists> M. ((moebius_pt M z1 = w1) \\<and> (moebius_pt M z2 = w2) \\<and> (moebius_pt M z3 = w3))\"", "lemma ex_moebius_1:\n  shows \"\\<exists> M. moebius_pt M z1 = w1\"", "lemma wlog_moebius_01inf:\n  fixes M::moebius\n  assumes \"P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\" and \"z1 \\<noteq> z2\" and \"z2 \\<noteq> z3\" and \"z1 \\<noteq> z3\"\n   \"\\<And> M a b c. P a b c \\<Longrightarrow> P (moebius_pt M a) (moebius_pt M b) (moebius_pt M c)\"\n  shows \"P z1 z2 z3\"", "lemma three_fixed_points_01inf:\n  assumes \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" and \"moebius_pt M 1\\<^sub>h = 1\\<^sub>h\" and \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"M = id_moebius\"", "lemma three_fixed_points:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  assumes \"moebius_pt M z1 = z1\" and \"moebius_pt M z2 = z2\" and \"moebius_pt M z3 = z3\"\n  shows \"M = id_moebius\"", "lemma unique_moebius_three_points:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  assumes \"moebius_pt M1 z1 = w1\" and \"moebius_pt M1 z2 = w2\" and \"moebius_pt M1 z3 = w3\"\n          \"moebius_pt M2 z1 = w1\" and \"moebius_pt M2 z2 = w2\" and \"moebius_pt M2 z3 = w3\"\n  shows \"M1 = M2\"", "lemma ex_unique_moebius_three_points:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" \n          \"w1 \\<noteq> w2\" and \"w1 \\<noteq> w3\" and \"w2 \\<noteq> w3\"\n  shows \"\\<exists>! M. ((moebius_pt M z1 = w1) \\<and> (moebius_pt M z2 = w2) \\<and> (moebius_pt M z3 = w3))\"", "lemma ex_unique_moebius_three_points_fun:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" \n          \"w1 \\<noteq> w2\" and \"w1 \\<noteq> w3\" and \"w2 \\<noteq> w3\"\n  shows \"\\<exists>! f. is_moebius f \\<and> (f z1 = w1) \\<and> (f z2 = w2) \\<and> (f z3 = w3)\"", "lemma unique_moebius_pt:\n  assumes \"moebius_pt M1 = moebius_pt M2\"\n  shows \"M1 = M2\"", "lemma is_cross_ratio_01inf:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" and \"is_moebius f\"\n  assumes \"f z1 = 0\\<^sub>h\" and \"f z2 = 1\\<^sub>h\" and \"f z3 = \\<infinity>\\<^sub>h\"\n  shows \"f = (\\<lambda> z. cross_ratio z z1 z2 z3)\"", "lemma moebius_preserve_cross_ratio [simp]:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  shows \"cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3) =\n         cross_ratio z z1 z2 z3\"", "lemma conjugate_cross_ratio [simp]:                                  \n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  shows \"cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n         conjugate (cross_ratio z z1 z2 z3)\"", "lemma cross_ratio_reciprocal [simp]:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\" and \"u \\<noteq> w\"\n  shows \"cross_ratio (reciprocal z) (reciprocal u) (reciprocal v) (reciprocal w) = \n         cross_ratio z u v w\"", "lemma cross_ratio_inversion [simp]:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\" and \"u \\<noteq> w\"\n  shows \"cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) = \n         conjugate (cross_ratio z u v w)\"", "lemma fixed_points_0inf':\n  assumes \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" and \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"\\<exists> k::complex_homo. (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and> (\\<forall> z. moebius_pt M z = k *\\<^sub>h z)\"", "lemma fixed_points_0inf:\n  assumes \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" and \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"\\<exists> k::complex_homo. (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and> moebius_pt M = (\\<lambda> z. k *\\<^sub>h z)\"", "lemma ex_cross_ratio:\n  assumes \"u \\<noteq> v\" and \"u \\<noteq> w\" and \"v \\<noteq> w\"\n  shows \"\\<exists> z. cross_ratio z u v w = c\"", "lemma unique_cross_ratio:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\" and \"u \\<noteq> w\"\n  assumes \"cross_ratio z u v w = cross_ratio z' u v w\"\n  shows \"z = z'\"", "lemma ex1_cross_ratio:\n  assumes \"u \\<noteq> v\" and \"u \\<noteq> w\" and \"v \\<noteq> w\"\n  shows \"\\<exists>! z. cross_ratio z u v w = c\"", "lemma ex1_pole:\n  shows \"\\<exists>! z. is_pole M z\"", "lemma pole_mk_moebius:\n  assumes \"is_pole (mk_moebius a b c d) z\" and \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  shows \"z = of_complex (-d/c)\"", "lemma pole_similarity:\n  assumes \"is_pole (moebius_similarity a b) z\" and \"a \\<noteq> 0\"\n  shows \"z = \\<infinity>\\<^sub>h\"", "lemma not_moebius_conjugate: \n  shows \"\\<not> is_moebius conjugate\"", "lemma conjugation_is_antihomography[simp]:\n  shows \"is_antihomography conjugate\"", "lemma inversion_is_antihomography [simp]: \n  shows \"is_antihomography inversion\"", "lemma homography_antihomography_exclusive:\n  assumes \"is_antihomography f\"\n  shows \"\\<not> is_homography f\"", "lemma similarity_scale_1:\n  assumes \"k \\<noteq> 0\"\n  shows \"similarity (k *\\<^sub>s\\<^sub>m I) M = similarity I M\"", "lemma similarity_scale_2:\n  shows \"similarity I (k *\\<^sub>s\\<^sub>m M) = k *\\<^sub>s\\<^sub>m (similarity I M)\"", "lemma mat_trace_mult_sm [simp]:\n  shows \"mat_trace (k *\\<^sub>s\\<^sub>m M) = k * mat_trace M\"", "lemma similarity_invar_moeibus_mb:\n  shows \"similarity_invar (moebius_mb I M) = similarity_invar M\"", "lemma similar_refl [simp]:\n  shows \"similar M M\"", "lemma similar_sym:\n  assumes \"similar M1 M2\"\n  shows \"similar M2 M1\"", "lemma similar_trans:\n  assumes \"similar M1 M2\" and \"similar M2 M3\"\n  shows \"similar M1 M3\""], "translations": [["", "lemma moebius_mat_eq_refl [simp]: \n  shows \"moebius_mat_eq x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mat_eq x x", "by transfer simp"], ["", "quotient_type moebius = moebius_mat / moebius_mat_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp moebius_mat_eq", "proof (rule equivpI)"], ["proof (state)\ngoal (3 subgoals):\n 1. reflp moebius_mat_eq\n 2. symp moebius_mat_eq\n 3. transp moebius_mat_eq", "show \"reflp moebius_mat_eq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp moebius_mat_eq", "unfolding reflp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. moebius_mat_eq x x", "by transfer auto"], ["proof (state)\nthis:\n  reflp moebius_mat_eq\n\ngoal (2 subgoals):\n 1. symp moebius_mat_eq\n 2. transp moebius_mat_eq", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. symp moebius_mat_eq\n 2. transp moebius_mat_eq", "show \"symp moebius_mat_eq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp moebius_mat_eq", "unfolding symp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. moebius_mat_eq x y \\<longrightarrow> moebius_mat_eq y x", "by transfer (auto simp add: symp_def, rule_tac x=\"1/k\" in exI, simp)"], ["proof (state)\nthis:\n  symp moebius_mat_eq\n\ngoal (1 subgoal):\n 1. transp moebius_mat_eq", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. transp moebius_mat_eq", "show \"transp moebius_mat_eq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp moebius_mat_eq", "unfolding transp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       moebius_mat_eq x y \\<longrightarrow>\n       moebius_mat_eq y z \\<longrightarrow> moebius_mat_eq x z", "by transfer (auto simp add: transp_def, rule_tac x=\"ka*k\" in exI, simp)"], ["proof (state)\nthis:\n  transp moebius_mat_eq\n\ngoal:\nNo subgoals!", "qed"], ["", "definition mk_moebius_cmat :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex_mat\" where\n [simp]: \"mk_moebius_cmat a b c d =\n           (let M = (a, b, c, d)\n             in if mat_det M \\<noteq> 0 then\n                M\n             else\n                eye)\""], ["", "lift_definition mk_moebius_mat :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> moebius_mat\" is mk_moebius_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex1 complex2 complex3 complex4.\n       mat_det\n        (mk_moebius_cmat complex1 complex2 complex3 complex4) \\<noteq>\n       0", "by simp"], ["", "lift_definition mk_moebius :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> moebius\" is mk_moebius_mat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ex_mk_moebius:\n  shows \"\\<exists> a b c d. M = mk_moebius a b c d \\<and> mat_det (a, b, c, d) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       M = mk_moebius a b c d \\<and> mat_det (a, b, c, d) \\<noteq> 0", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       mat_det M \\<noteq> 0 \\<Longrightarrow>\n       \\<exists>a b c d.\n          moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n          mat_det (a, b, c, d) \\<noteq> 0", "fix M :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       mat_det M \\<noteq> 0 \\<Longrightarrow>\n       \\<exists>a b c d.\n          moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n          mat_det (a, b, c, d) \\<noteq> 0", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       mat_det M \\<noteq> 0 \\<Longrightarrow>\n       \\<exists>a b c d.\n          moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n          mat_det (a, b, c, d) \\<noteq> 0", "obtain a b c d where \"M = (a, b, c, d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        M = (a, b, c, d) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases M, auto)"], ["proof (state)\nthis:\n  M = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       mat_det M \\<noteq> 0 \\<Longrightarrow>\n       \\<exists>a b c d.\n          moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n          mat_det (a, b, c, d) \\<noteq> 0", "hence \"moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and> mat_det (a, b, c, d) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  M = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n    mat_det (a, b, c, d) \\<noteq> 0", "using \\<open>mat_det M \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  M = (a, b, c, d)\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n    mat_det (a, b, c, d) \\<noteq> 0", "by auto (rule_tac x=1 in exI, simp)"], ["proof (state)\nthis:\n  moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       mat_det M \\<noteq> 0 \\<Longrightarrow>\n       \\<exists>a b c d.\n          moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n          mat_det (a, b, c, d) \\<noteq> 0", "thus \"\\<exists>a b c d. moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and> mat_det (a, b, c, d) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n       mat_det (a, b, c, d) \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  \\<exists>a b c d.\n     moebius_cmat_eq M (mk_moebius_cmat a b c d) \\<and>\n     mat_det (a, b, c, d) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Action on points\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>M?bius transformations are given as the action of M?bius group on the points of the\nextended complex plane (in homogeneous coordinates).\\<close>"], ["", "definition moebius_pt_cmat_cvec :: \"complex_mat \\<Rightarrow> complex_vec \\<Rightarrow> complex_vec\" where\n   [simp]: \"moebius_pt_cmat_cvec M z = M *\\<^sub>m\\<^sub>v z\""], ["", "lift_definition moebius_pt_mmat_hcoords :: \"moebius_mat \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex_homo_coords\" is moebius_pt_cmat_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>mat_det prod1 \\<noteq> 0; prod2 \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec prod1 prod2 \\<noteq> vec_zero", "by auto algebra+"], ["", "lift_definition moebius_pt :: \"moebius \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" is moebius_pt_mmat_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>moebius_mat_eq moebius_mat1 moebius_mat2;\n        complex_homo_coords1 \\<approx> complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_mmat_hcoords moebius_mat1\n                          complex_homo_coords1 \\<approx>\n                         moebius_pt_mmat_hcoords moebius_mat2\n                          complex_homo_coords2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec moebius_mat1\n                          complex_homo_coords1 \\<approx>\\<^sub>v\n                         moebius_pt_cmat_cvec moebius_mat2\n                          complex_homo_coords2", "fix M M' x x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec moebius_mat1\n                          complex_homo_coords1 \\<approx>\\<^sub>v\n                         moebius_pt_cmat_cvec moebius_mat2\n                          complex_homo_coords2", "assume \"moebius_cmat_eq M M'\" \"x \\<approx>\\<^sub>v x'\""], ["proof (state)\nthis:\n  moebius_cmat_eq M M'\n  x \\<approx>\\<^sub>v x'\n\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec moebius_mat1\n                          complex_homo_coords1 \\<approx>\\<^sub>v\n                         moebius_pt_cmat_cvec moebius_mat2\n                          complex_homo_coords2", "thus \"moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M' x'\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq M M'\n  x \\<approx>\\<^sub>v x'\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M' x'", "by (cases \"M\", cases \"x\", auto simp add: field_simps) (rule_tac x=\"k*ka\" in exI, simp)"], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M' x'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_moebius_pt [simp]:\n  shows \"bij (moebius_pt M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij (moebius_pt M)", "unfolding bij_def inj_on_def surj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>UNIV.\n        \\<forall>y\\<in>UNIV.\n           moebius_pt M x = moebius_pt M y \\<longrightarrow> x = y) \\<and>\n    (\\<forall>y. \\<exists>x. y = moebius_pt M x)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_pt M x = moebius_pt M y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>y. \\<exists>x. y = moebius_pt M x", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_pt M x = moebius_pt M y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>y. \\<exists>x. y = moebius_pt M x", "assume \"moebius_pt M x = moebius_pt M y\""], ["proof (state)\nthis:\n  moebius_pt M x = moebius_pt M y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_pt M x = moebius_pt M y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>y. \\<exists>x. y = moebius_pt M x", "thus \"x = y\""], ["proof (prove)\nusing this:\n  moebius_pt M x = moebius_pt M y\n\ngoal (1 subgoal):\n 1. x = y", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M x y Ma xa ya.\n       \\<lbrakk>mat_det M \\<noteq> 0; x \\<noteq> vec_zero;\n        y \\<noteq> vec_zero;\n        moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y;\n        moebius_pt_mmat_hcoords Ma xa \\<approx>\n        moebius_pt_mmat_hcoords Ma ya\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<^sub>v y", "fix M x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M x y Ma xa ya.\n       \\<lbrakk>mat_det M \\<noteq> 0; x \\<noteq> vec_zero;\n        y \\<noteq> vec_zero;\n        moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y;\n        moebius_pt_mmat_hcoords Ma xa \\<approx>\n        moebius_pt_mmat_hcoords Ma ya\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<^sub>v y", "assume \"mat_det M \\<noteq> 0\" \"moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n  moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y\n\ngoal (1 subgoal):\n 1. \\<And>M x y Ma xa ya.\n       \\<lbrakk>mat_det M \\<noteq> 0; x \\<noteq> vec_zero;\n        y \\<noteq> vec_zero;\n        moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y;\n        moebius_pt_mmat_hcoords Ma xa \\<approx>\n        moebius_pt_mmat_hcoords Ma ya\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<^sub>v y", "thus \"x \\<approx>\\<^sub>v y\""], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y\n\ngoal (1 subgoal):\n 1. x \\<approx>\\<^sub>v y", "using mult_sv_mv[of _ M x] mult_mv_inv[of _ M]"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  moebius_pt_cmat_cvec M x \\<approx>\\<^sub>v moebius_pt_cmat_cvec M y\n  ?k *\\<^sub>s\\<^sub>v (M *\\<^sub>m\\<^sub>v x) =\n  M *\\<^sub>m\\<^sub>v (?k *\\<^sub>s\\<^sub>v x)\n  \\<lbrakk>?x = M *\\<^sub>m\\<^sub>v ?y; mat_det M \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?y = mat_inv M *\\<^sub>m\\<^sub>v ?x\n\ngoal (1 subgoal):\n 1. x \\<approx>\\<^sub>v y", "unfolding moebius_pt_cmat_cvec_def"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  M *\\<^sub>m\\<^sub>v x \\<approx>\\<^sub>v M *\\<^sub>m\\<^sub>v y\n  ?k *\\<^sub>s\\<^sub>v (M *\\<^sub>m\\<^sub>v x) =\n  M *\\<^sub>m\\<^sub>v (?k *\\<^sub>s\\<^sub>v x)\n  \\<lbrakk>?x = M *\\<^sub>m\\<^sub>v ?y; mat_det M \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?y = mat_inv M *\\<^sub>m\\<^sub>v ?x\n\ngoal (1 subgoal):\n 1. x \\<approx>\\<^sub>v y", "by (metis complex_cvec_eq_def)"], ["proof (state)\nthis:\n  x \\<approx>\\<^sub>v y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = moebius_pt M x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = moebius_pt M x", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = moebius_pt M x", "show \"\\<exists>x. y = moebius_pt M x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. y = moebius_pt M x", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "fix y :: complex_vec and M :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "assume *: \"y \\<noteq> vec_zero\" \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  y \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "let ?iM = \"mat_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "let ?x = \"?iM *\\<^sub>m\\<^sub>v y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "have \"?x \\<noteq> vec_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_inv M *\\<^sub>m\\<^sub>v y \\<noteq> vec_zero", "using *"], ["proof (prove)\nusing this:\n  y \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mat_inv M *\\<^sub>m\\<^sub>v y \\<noteq> vec_zero", "by (metis mat_det_mult mat_eye_r mat_inv_r mult_cancel_right1 mult_mv_nonzero)"], ["proof (state)\nthis:\n  mat_inv M *\\<^sub>m\\<^sub>v y \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "moreover"], ["proof (state)\nthis:\n  mat_inv M *\\<^sub>m\\<^sub>v y \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "have \"y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M ?x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<approx>\\<^sub>v\n    moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v y)", "by (simp del: eye_def add: mat_inv_r[OF \\<open>mat_det M \\<noteq> 0\\<close>])"], ["proof (state)\nthis:\n  y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v y)\n\ngoal (1 subgoal):\n 1. \\<And>y M.\n       \\<lbrakk>y \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n                            y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "ultimately"], ["proof (chain)\npicking this:\n  mat_inv M *\\<^sub>m\\<^sub>v y \\<noteq> vec_zero\n  y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v y)", "show \"\\<exists>x\\<in>{v. v \\<noteq> vec_zero}. y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x\""], ["proof (prove)\nusing this:\n  mat_inv M *\\<^sub>m\\<^sub>v y \\<noteq> vec_zero\n  y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v y)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n       y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x", "by (rule_tac x=\"?x\" in bexI, simp_all)"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{v. v \\<noteq> vec_zero}.\n     y \\<approx>\\<^sub>v moebius_pt_cmat_cvec M x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. y = moebius_pt M x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_pt_eq_I:                                          \n  assumes \"moebius_pt M z1 = moebius_pt M z2\"\n  shows \"z1 = z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z1 = z2", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = moebius_pt M z2\n\ngoal (1 subgoal):\n 1. z1 = z2", "using bij_moebius_pt[of M]"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = moebius_pt M z2\n  bij (moebius_pt M)\n\ngoal (1 subgoal):\n 1. z1 = z2", "unfolding bij_def inj_on_def"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = moebius_pt M z2\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV.\n         moebius_pt M x = moebius_pt M y \\<longrightarrow> x = y) \\<and>\n  surj (moebius_pt M)\n\ngoal (1 subgoal):\n 1. z1 = z2", "by blast"], ["", "lemma moebius_pt_neq_I [simp]:\n  assumes \"z1 \\<noteq> z2\"\n  shows \"moebius_pt M z1 \\<noteq> moebius_pt M z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M z1 \\<noteq> moebius_pt M z2", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n\ngoal (1 subgoal):\n 1. moebius_pt M z1 \\<noteq> moebius_pt M z2", "by (auto simp add: moebius_pt_eq_I)"], ["", "definition is_moebius :: \"(complex_homo \\<Rightarrow> complex_homo) \\<Rightarrow> bool\" where\n  \"is_moebius f \\<longleftrightarrow> (\\<exists> M. f = moebius_pt M)\""], ["", "text \\<open>In the classic literature M?bius transformations are often expressed in the form\n$\\frac{az+b}{cz+d}$. The following lemma shows that when restricted to finite points, the action\nof M?bius transformations is bilinear.\\<close>"], ["", "lemma moebius_pt_bilinear:\n  assumes \"mat_det (a, b, c, d) \\<noteq> 0\"\n  shows \"moebius_pt (mk_moebius a b c d) z =\n            (if z \\<noteq> \\<infinity>\\<^sub>h then\n                 ((of_complex a) *\\<^sub>h z +\\<^sub>h (of_complex b)) :\\<^sub>h\n                 ((of_complex c) *\\<^sub>h z +\\<^sub>h (of_complex d))\n             else\n                 (of_complex a) :\\<^sub>h\n                 (of_complex c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b c d) z =\n    (if z \\<noteq> \\<infinity>\\<^sub>h\n     then (of_complex a *\\<^sub>h z +\\<^sub>h of_complex b) :\\<^sub>h\n          (of_complex c *\\<^sub>h z +\\<^sub>h of_complex d)\n     else of_complex a :\\<^sub>h of_complex c)", "unfolding divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b c d) z =\n    (if z \\<noteq> \\<infinity>\\<^sub>h\n     then (of_complex a *\\<^sub>h z +\\<^sub>h of_complex b) *\\<^sub>h\n          reciprocal (of_complex c *\\<^sub>h z +\\<^sub>h of_complex d)\n     else of_complex a *\\<^sub>h reciprocal (of_complex c))", "using assms"], ["proof (prove)\nusing this:\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b c d) z =\n    (if z \\<noteq> \\<infinity>\\<^sub>h\n     then (of_complex a *\\<^sub>h z +\\<^sub>h of_complex b) *\\<^sub>h\n          reciprocal (of_complex c *\\<^sub>h z +\\<^sub>h of_complex d)\n     else of_complex a *\\<^sub>h reciprocal (of_complex c))", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c d z aa ba ca da.\n       \\<lbrakk>z \\<noteq> vec_zero; mat_det (a, b, c, d) \\<noteq> 0;\n        mat_det (aa, ba, ca, da) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (mk_moebius_cmat a b c d)\n                          z \\<approx>\\<^sub>v\n                         (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n                          then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n                                of_complex_cvec b) *\\<^sub>v\n                               reciprocal_cvec\n                                (of_complex_cvec c *\\<^sub>v z +\\<^sub>v\n                                 of_complex_cvec d)\n                          else of_complex_cvec a *\\<^sub>v\n                               reciprocal_cvec (of_complex_cvec c))", "fix a b c d :: complex and z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c d z aa ba ca da.\n       \\<lbrakk>z \\<noteq> vec_zero; mat_det (a, b, c, d) \\<noteq> 0;\n        mat_det (aa, ba, ca, da) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (mk_moebius_cmat a b c d)\n                          z \\<approx>\\<^sub>v\n                         (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n                          then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n                                of_complex_cvec b) *\\<^sub>v\n                               reciprocal_cvec\n                                (of_complex_cvec c *\\<^sub>v z +\\<^sub>v\n                                 of_complex_cvec d)\n                          else of_complex_cvec a *\\<^sub>v\n                               reciprocal_cvec (of_complex_cvec c))", "obtain z1 z2 where zz: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>a b c d z aa ba ca da.\n       \\<lbrakk>z \\<noteq> vec_zero; mat_det (a, b, c, d) \\<noteq> 0;\n        mat_det (aa, ba, ca, da) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (mk_moebius_cmat a b c d)\n                          z \\<approx>\\<^sub>v\n                         (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n                          then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n                                of_complex_cvec b) *\\<^sub>v\n                               reciprocal_cvec\n                                (of_complex_cvec c *\\<^sub>v z +\\<^sub>v\n                                 of_complex_cvec d)\n                          else of_complex_cvec a *\\<^sub>v\n                               reciprocal_cvec (of_complex_cvec c))", "assume *: \"mat_det (a, b, c, d) \\<noteq> 0\" \"z \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  mat_det (a, b, c, d) \\<noteq> 0\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>a b c d z aa ba ca da.\n       \\<lbrakk>z \\<noteq> vec_zero; mat_det (a, b, c, d) \\<noteq> 0;\n        mat_det (aa, ba, ca, da) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (mk_moebius_cmat a b c d)\n                          z \\<approx>\\<^sub>v\n                         (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n                          then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n                                of_complex_cvec b) *\\<^sub>v\n                               reciprocal_cvec\n                                (of_complex_cvec c *\\<^sub>v z +\\<^sub>v\n                                 of_complex_cvec d)\n                          else of_complex_cvec a *\\<^sub>v\n                               reciprocal_cvec (of_complex_cvec c))", "let ?oc = \"of_complex_cvec\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c d z aa ba ca da.\n       \\<lbrakk>z \\<noteq> vec_zero; mat_det (a, b, c, d) \\<noteq> 0;\n        mat_det (aa, ba, ca, da) \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (mk_moebius_cmat a b c d)\n                          z \\<approx>\\<^sub>v\n                         (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n                          then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n                                of_complex_cvec b) *\\<^sub>v\n                               reciprocal_cvec\n                                (of_complex_cvec c *\\<^sub>v z +\\<^sub>v\n                                 of_complex_cvec d)\n                          else of_complex_cvec a *\\<^sub>v\n                               reciprocal_cvec (of_complex_cvec c))", "show \"moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n       (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n        then (?oc a *\\<^sub>v z +\\<^sub>v ?oc b) *\\<^sub>v\n             reciprocal_cvec (?oc c *\\<^sub>v z +\\<^sub>v ?oc d)\n        else ?oc a *\\<^sub>v\n             reciprocal_cvec (?oc c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "proof (cases \"z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))\n 2. \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "case True"], ["proof (state)\nthis:\n  z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (2 subgoals):\n 1. z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))\n 2. \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "using zz *"], ["proof (prove)\nusing this:\n  z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n  mat_det (a, b, c, d) \\<noteq> 0\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "by auto"], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n  (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n   then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n         of_complex_cvec b) *\\<^sub>v\n        reciprocal_cvec\n         (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n   else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))\n\ngoal (1 subgoal):\n 1. \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "case False"], ["proof (state)\nthis:\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "hence \"z2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "using zz inf_cvec_z2_zero_iff \\<open>z \\<noteq> vec_zero\\<close>"], ["proof (prove)\nusing this:\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n  (?z1.0, ?z2.0) \\<noteq> vec_zero \\<Longrightarrow>\n  ((?z1.0, ?z2.0) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (?z2.0 = 0)\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<Longrightarrow>\n    moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "thus ?thesis"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "using zz * False"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z = (z1, z2)\n  mat_det (a, b, c, d) \\<noteq> 0\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "using regular_homogenous_system[of a b c d z1 z2]"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z = (z1, z2)\n  mat_det (a, b, c, d) \\<noteq> 0\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<lbrakk>det2 a b c d \\<noteq> 0; a * z1 + b * z2 = 0;\n   c * z1 + d * z2 = 0\\<rbrakk>\n  \\<Longrightarrow> z1 = 0 \\<and> z2 = 0\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n    (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n     then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n           of_complex_cvec b) *\\<^sub>v\n          reciprocal_cvec\n           (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n     else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))", "by auto"], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n  (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n   then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n         of_complex_cvec b) *\\<^sub>v\n        reciprocal_cvec\n         (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n   else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec (mk_moebius_cmat a b c d) z \\<approx>\\<^sub>v\n  (if \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n   then (of_complex_cvec a *\\<^sub>v z +\\<^sub>v\n         of_complex_cvec b) *\\<^sub>v\n        reciprocal_cvec\n         (of_complex_cvec c *\\<^sub>v z +\\<^sub>v of_complex_cvec d)\n   else of_complex_cvec a *\\<^sub>v reciprocal_cvec (of_complex_cvec c))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>M?bius group\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>M?bius elements form a group under composition. This group is called the \\emph{projective\ngeneral linear group} and denoted by $PGL(2, \\mathbb{C})$ (the group $SGL(2, \\mathbb{C})$ containing elements\nwith the determinant $1$ can also be considered).\\<close>"], ["", "text \\<open>Identity M?bius transformation is represented by the identity matrix.\\<close>"], ["", "definition id_moebius_cmat :: \"complex_mat\" where\n  [simp]: \"id_moebius_cmat = eye\""], ["", "lift_definition id_moebius_mmat :: \"moebius_mat\" is id_moebius_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det id_moebius_cmat \\<noteq> 0", "by simp"], ["", "lift_definition id_moebius :: \"moebius\" is id_moebius_mmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma moebius_pt_moebius_id [simp]:\n  shows \"moebius_pt id_moebius = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt id_moebius = id", "unfolding id_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt id_moebius = (\\<lambda>x. x)", "apply (rule ext, transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<noteq> vec_zero \\<Longrightarrow>\n       moebius_pt_cmat_cvec id_moebius_cmat x \\<approx>\\<^sub>v x", "using eye_mv_l"], ["proof (prove)\nusing this:\n  eye *\\<^sub>m\\<^sub>v ?v = ?v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<noteq> vec_zero \\<Longrightarrow>\n       moebius_pt_cmat_cvec id_moebius_cmat x \\<approx>\\<^sub>v x", "by simp"], ["", "lemma mk_moeibus_id [simp]:\n  shows \"mk_moebius a 0 0 a = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_moebius a 0 0 a = id_moebius", "by (transfer, transfer, simp)"], ["", "text \\<open>The inverse M?bius transformation is obtained by taking the inverse representative matrix.\\<close>"], ["", "definition moebius_inv_cmat :: \"complex_mat \\<Rightarrow> complex_mat\" where\n  [simp]: \"moebius_inv_cmat M = mat_inv M\""], ["", "lift_definition moebius_inv_mmat :: \"moebius_mat \\<Rightarrow> moebius_mat\" is moebius_inv_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       mat_det prod \\<noteq> 0 \\<Longrightarrow>\n       mat_det (moebius_inv_cmat prod) \\<noteq> 0", "by (simp add: mat_det_inv)"], ["", "lift_definition moebius_inv :: \"moebius \\<Rightarrow> moebius\" is \"moebius_inv_mmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2.\n       moebius_mat_eq moebius_mat1 moebius_mat2 \\<Longrightarrow>\n       moebius_mat_eq (moebius_inv_mmat moebius_mat1)\n        (moebius_inv_mmat moebius_mat2)", "proof (transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        moebius_cmat_eq moebius_mat1 moebius_mat2\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq (moebius_inv_cmat moebius_mat1)\n                          (moebius_inv_cmat moebius_mat2)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        moebius_cmat_eq moebius_mat1 moebius_mat2\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq (moebius_inv_cmat moebius_mat1)\n                          (moebius_inv_cmat moebius_mat2)", "assume \"moebius_cmat_eq x y\""], ["proof (state)\nthis:\n  moebius_cmat_eq x y\n\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        moebius_cmat_eq moebius_mat1 moebius_mat2\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq (moebius_inv_cmat moebius_mat1)\n                          (moebius_inv_cmat moebius_mat2)", "thus \"moebius_cmat_eq (moebius_inv_cmat x) (moebius_inv_cmat y)\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq x y\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_inv_cmat x) (moebius_inv_cmat y)", "by (auto simp add: mat_inv_mult_sm) (rule_tac x=\"1/k\" in exI, simp)"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_inv_cmat x) (moebius_inv_cmat y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_inv:\n  shows \"moebius_pt (moebius_inv M) = inv (moebius_pt M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) = inv (moebius_pt M)", "proof (rule inv_equality[symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. moebius_pt (moebius_inv M) (moebius_pt M x) = x\n 2. \\<And>y. moebius_pt M (moebius_pt (moebius_inv M) y) = y", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. moebius_pt (moebius_inv M) (moebius_pt M x) = x\n 2. \\<And>y. moebius_pt M (moebius_pt (moebius_inv M) y) = y", "show \"moebius_pt (moebius_inv M) (moebius_pt M x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) (moebius_pt M x) = x", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M x.\n       \\<lbrakk>mat_det M \\<noteq> 0; x \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (moebius_inv_cmat M)\n                          (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n                         x", "fix M::complex_mat and x::complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M x.\n       \\<lbrakk>mat_det M \\<noteq> 0; x \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (moebius_inv_cmat M)\n                          (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n                         x", "assume \"mat_det M \\<noteq> 0\" \"x \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n  x \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>M x.\n       \\<lbrakk>mat_det M \\<noteq> 0; x \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec (moebius_inv_cmat M)\n                          (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n                         x", "show \"moebius_pt_cmat_cvec (moebius_inv_cmat M) (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (moebius_inv_cmat M)\n     (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n    x", "using eye_mv_l"], ["proof (prove)\nusing this:\n  eye *\\<^sub>m\\<^sub>v ?v = ?v\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec (moebius_inv_cmat M)\n     (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n    x", "by (simp add: mat_inv_l[OF \\<open>mat_det M \\<noteq> 0\\<close>])"], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec (moebius_inv_cmat M)\n   (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n  x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) (moebius_pt M x) = x\n\ngoal (1 subgoal):\n 1. \\<And>y. moebius_pt M (moebius_pt (moebius_inv M) y) = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. moebius_pt M (moebius_pt (moebius_inv M) y) = y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. moebius_pt M (moebius_pt (moebius_inv M) y) = y", "show \"moebius_pt M (moebius_pt (moebius_inv M) y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M (moebius_pt (moebius_inv M) y) = y", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M y.\n       \\<lbrakk>mat_det M \\<noteq> 0; y \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec M\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M)\n                            y) \\<approx>\\<^sub>v\n                         y", "fix M::complex_mat and y::complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M y.\n       \\<lbrakk>mat_det M \\<noteq> 0; y \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec M\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M)\n                            y) \\<approx>\\<^sub>v\n                         y", "assume \"mat_det M \\<noteq> 0\" \"y \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n  y \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>M y.\n       \\<lbrakk>mat_det M \\<noteq> 0; y \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> moebius_pt_cmat_cvec M\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M)\n                            y) \\<approx>\\<^sub>v\n                         y", "show \"moebius_pt_cmat_cvec M (moebius_pt_cmat_cvec (moebius_inv_cmat M) y) \\<approx>\\<^sub>v y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec M\n     (moebius_pt_cmat_cvec (moebius_inv_cmat M) y) \\<approx>\\<^sub>v\n    y", "using eye_mv_l"], ["proof (prove)\nusing this:\n  eye *\\<^sub>m\\<^sub>v ?v = ?v\n\ngoal (1 subgoal):\n 1. moebius_pt_cmat_cvec M\n     (moebius_pt_cmat_cvec (moebius_inv_cmat M) y) \\<approx>\\<^sub>v\n    y", "by (simp add: mat_inv_r[OF \\<open>mat_det M \\<noteq> 0\\<close>])"], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec M\n   (moebius_pt_cmat_cvec (moebius_inv_cmat M) y) \\<approx>\\<^sub>v\n  y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt M (moebius_pt (moebius_inv M) y) = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_moebius_inv [simp]:\n  assumes \"is_moebius m\"\n  shows \"is_moebius (inv m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_moebius (inv m)", "using assms"], ["proof (prove)\nusing this:\n  is_moebius m\n\ngoal (1 subgoal):\n 1. is_moebius (inv m)", "using moebius_inv"], ["proof (prove)\nusing this:\n  is_moebius m\n  moebius_pt (moebius_inv ?M) = inv (moebius_pt ?M)\n\ngoal (1 subgoal):\n 1. is_moebius (inv m)", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  \\<exists>M. m = moebius_pt M\n  moebius_pt (moebius_inv ?M) = inv (moebius_pt ?M)\n\ngoal (1 subgoal):\n 1. \\<exists>M. inv m = moebius_pt M", "by metis"], ["", "lemma moebius_inv_mk_moebus [simp]:\n  assumes \"mat_det (a, b, c, d) \\<noteq> 0\"\n  shows \"moebius_inv (mk_moebius a b c d) =\n         mk_moebius (d/(a*d-b*c)) (-b/(a*d-b*c)) (-c/(a*d-b*c)) (a/(a*d-b*c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv (mk_moebius a b c d) =\n    mk_moebius (d / (a * d - b * c)) (- b / (a * d - b * c))\n     (- c / (a * d - b * c)) (a / (a * d - b * c))", "using assms"], ["proof (prove)\nusing this:\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_inv (mk_moebius a b c d) =\n    mk_moebius (d / (a * d - b * c)) (- b / (a * d - b * c))\n     (- c / (a * d - b * c)) (a / (a * d - b * c))", "by (transfer, transfer) (auto, rule_tac x=1 in exI, simp_all add: field_simps)"], ["", "text \\<open>Composition of M?bius elements is obtained by multiplying their representing matrices.\\<close>"], ["", "definition moebius_comp_cmat :: \"complex_mat \\<Rightarrow> complex_mat \\<Rightarrow> complex_mat\" where\n  [simp]: \"moebius_comp_cmat M1 M2 = M1 *\\<^sub>m\\<^sub>m M2\""], ["", "lift_definition moebius_comp_mmat :: \"moebius_mat \\<Rightarrow> moebius_mat \\<Rightarrow> moebius_mat\" is moebius_comp_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>mat_det prod1 \\<noteq> 0; mat_det prod2 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> mat_det (moebius_comp_cmat prod1 prod2) \\<noteq> 0", "by simp"], ["", "lift_definition moebius_comp :: \"moebius \\<Rightarrow> moebius \\<Rightarrow> moebius\" is moebius_comp_mmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 moebius_mat3 moebius_mat4.\n       \\<lbrakk>moebius_mat_eq moebius_mat1 moebius_mat2;\n        moebius_mat_eq moebius_mat3 moebius_mat4\\<rbrakk>\n       \\<Longrightarrow> moebius_mat_eq\n                          (moebius_comp_mmat moebius_mat1 moebius_mat3)\n                          (moebius_comp_mmat moebius_mat2 moebius_mat4)", "by transfer (simp, (erule exE)+, rule_tac x=\"k*ka\" in exI, simp add: field_simps)"], ["", "lemma moebius_comp: \n  shows \"moebius_pt (moebius_comp M1 M2) = moebius_pt M1 \\<circ> moebius_pt M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp M1 M2) = moebius_pt M1 \\<circ> moebius_pt M2", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp M1 M2) =\n    (\\<lambda>x. moebius_pt M1 (moebius_pt M2 x))", "by (rule ext, transfer, transfer, simp)"], ["", "lemma moebius_pt_comp [simp]:\n  shows \"moebius_pt (moebius_comp M1 M2) z = moebius_pt M1 (moebius_pt M2 z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp M1 M2) z = moebius_pt M1 (moebius_pt M2 z)", "by (auto simp add: moebius_comp)"], ["", "lemma is_moebius_comp [simp]:\n  assumes \"is_moebius m1\" and \"is_moebius m2\"\n  shows \"is_moebius (m1 \\<circ> m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_moebius (m1 \\<circ> m2)", "using assms"], ["proof (prove)\nusing this:\n  is_moebius m1\n  is_moebius m2\n\ngoal (1 subgoal):\n 1. is_moebius (m1 \\<circ> m2)", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  \\<exists>M. m1 = moebius_pt M\n  \\<exists>M. m2 = moebius_pt M\n\ngoal (1 subgoal):\n 1. \\<exists>M. m1 \\<circ> m2 = moebius_pt M", "using moebius_comp"], ["proof (prove)\nusing this:\n  \\<exists>M. m1 = moebius_pt M\n  \\<exists>M. m2 = moebius_pt M\n  moebius_pt (moebius_comp ?M1.0 ?M2.0) =\n  moebius_pt ?M1.0 \\<circ> moebius_pt ?M2.0\n\ngoal (1 subgoal):\n 1. \\<exists>M. m1 \\<circ> m2 = moebius_pt M", "by metis"], ["", "lemma moebius_comp_mk_moebius [simp]:\n  assumes \"mat_det (a, b, c, d) \\<noteq> 0\" and \"mat_det (a', b', c', d') \\<noteq> 0\"\n  shows \"moebius_comp (mk_moebius a b c d) (mk_moebius a' b' c' d') =\n           mk_moebius (a * a' + b * c') (a * b' + b * d') (c * a' + d * c') (c * b' + d * d')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (mk_moebius a b c d) (mk_moebius a' b' c' d') =\n    mk_moebius (a * a' + b * c') (a * b' + b * d') (c * a' + d * c')\n     (c * b' + d * d')", "using mat_det_mult[of \"(a, b, c, d)\" \"(a', b', c', d')\"]"], ["proof (prove)\nusing this:\n  mat_det ((a, b, c, d) *\\<^sub>m\\<^sub>m (a', b', c', d')) =\n  mat_det (a, b, c, d) * mat_det (a', b', c', d')\n\ngoal (1 subgoal):\n 1. moebius_comp (mk_moebius a b c d) (mk_moebius a' b' c' d') =\n    mk_moebius (a * a' + b * c') (a * b' + b * d') (c * a' + d * c')\n     (c * b' + d * d')", "using assms"], ["proof (prove)\nusing this:\n  mat_det ((a, b, c, d) *\\<^sub>m\\<^sub>m (a', b', c', d')) =\n  mat_det (a, b, c, d) * mat_det (a', b', c', d')\n  mat_det (a, b, c, d) \\<noteq> 0\n  mat_det (a', b', c', d') \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_comp (mk_moebius a b c d) (mk_moebius a' b' c' d') =\n    mk_moebius (a * a' + b * c') (a * b' + b * d') (c * a' + d * c')\n     (c * b' + d * d')", "by (transfer, transfer) (auto, rule_tac x=1 in exI, simp)"], ["", "instantiation moebius :: group_add\nbegin"], ["", "definition plus_moebius :: \"moebius \\<Rightarrow> moebius \\<Rightarrow> moebius\" where\n  [simp]: \"plus_moebius = moebius_comp\""], ["", "definition uminus_moebius :: \"moebius \\<Rightarrow> moebius\" where\n  [simp]: \"uminus_moebius = moebius_inv\""], ["", "definition zero_moebius :: \"moebius\" where\n  [simp]: \"zero_moebius = id_moebius\""], ["", "definition minus_moebius :: \"moebius \\<Rightarrow> moebius \\<Rightarrow> moebius\" where\n  [simp]: \"minus_moebius A B = A + (-B)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(moebius, group_add_class)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a. 0 + a = a\n 3. \\<And>a. a + 0 = a\n 4. \\<And>a. - a + a = 0\n 5. \\<And>a b. a + - b = a - b", "fix a b c :: moebius"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a. 0 + a = a\n 3. \\<And>a. a + 0 = a\n 4. \\<And>a. - a + a = 0\n 5. \\<And>a b. a + - b = a - b", "show \"a + b + c = a + (b + c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b + c = a + (b + c)", "unfolding plus_moebius_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_comp a b) c = moebius_comp a (moebius_comp b c)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>mat_det a \\<noteq> 0; mat_det b \\<noteq> 0;\n        mat_det c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_comp_cmat (moebius_comp_cmat a b) c)\n                          (moebius_comp_cmat a (moebius_comp_cmat b c))", "fix a b c :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>mat_det a \\<noteq> 0; mat_det b \\<noteq> 0;\n        mat_det c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_comp_cmat (moebius_comp_cmat a b) c)\n                          (moebius_comp_cmat a (moebius_comp_cmat b c))", "assume \"mat_det a \\<noteq> 0\" \"mat_det b \\<noteq> 0\" \"mat_det c \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det a \\<noteq> 0\n  mat_det b \\<noteq> 0\n  mat_det c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>mat_det a \\<noteq> 0; mat_det b \\<noteq> 0;\n        mat_det c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_comp_cmat (moebius_comp_cmat a b) c)\n                          (moebius_comp_cmat a (moebius_comp_cmat b c))", "show \"moebius_cmat_eq (moebius_comp_cmat (moebius_comp_cmat a b) c) (moebius_comp_cmat a (moebius_comp_cmat b c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_comp_cmat (moebius_comp_cmat a b) c)\n     (moebius_comp_cmat a (moebius_comp_cmat b c))", "by simp (rule_tac x=\"1\" in exI, simp add: mult_mm_assoc)"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_comp_cmat (moebius_comp_cmat a b) c)\n   (moebius_comp_cmat a (moebius_comp_cmat b c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a + b + c = a + (b + c)\n\ngoal (4 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. a + 0 = a\n 3. \\<And>a. - a + a = 0\n 4. \\<And>a b. a + - b = a - b", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. a + 0 = a\n 3. \\<And>a. - a + a = 0\n 4. \\<And>a b. a + - b = a - b", "fix a :: moebius"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. a + 0 = a\n 3. \\<And>a. - a + a = 0\n 4. \\<And>a b. a + - b = a - b", "show \"a + 0 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + 0 = a", "unfolding plus_moebius_def zero_moebius_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp a id_moebius = a", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat a id_moebius_cmat) a", "fix A :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat a id_moebius_cmat) a", "assume \"mat_det A \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat a id_moebius_cmat) a", "thus \"moebius_cmat_eq (moebius_comp_cmat A id_moebius_cmat) A\""], ["proof (prove)\nusing this:\n  mat_det A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_comp_cmat A id_moebius_cmat) A", "using mat_eye_r"], ["proof (prove)\nusing this:\n  mat_det A \\<noteq> 0\n  ?A *\\<^sub>m\\<^sub>m eye = ?A\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_comp_cmat A id_moebius_cmat) A", "by simp"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_comp_cmat A id_moebius_cmat) A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a + 0 = a\n\ngoal (3 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. - a + a = 0\n 3. \\<And>a b. a + - b = a - b", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. - a + a = 0\n 3. \\<And>a b. a + - b = a - b", "fix a :: moebius"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. - a + a = 0\n 3. \\<And>a b. a + - b = a - b", "show \"0 + a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + a = a", "unfolding plus_moebius_def zero_moebius_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp id_moebius a = a", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat a) a", "fix A :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat a) a", "assume \"mat_det A \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat a) a", "thus \"moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat A) A\""], ["proof (prove)\nusing this:\n  mat_det A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat A) A", "using mat_eye_l"], ["proof (prove)\nusing this:\n  mat_det A \\<noteq> 0\n  eye *\\<^sub>m\\<^sub>m ?A = ?A\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat A) A", "by simp"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_comp_cmat id_moebius_cmat A) A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 + a = a\n\ngoal (2 subgoals):\n 1. \\<And>a. - a + a = 0\n 2. \\<And>a b. a + - b = a - b", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. - a + a = 0\n 2. \\<And>a b. a + - b = a - b", "fix a :: moebius"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. - a + a = 0\n 2. \\<And>a b. a + - b = a - b", "show \"- a + a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a + a = 0", "unfolding plus_moebius_def uminus_moebius_def zero_moebius_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_inv a) a = id_moebius", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat (moebius_inv_cmat a) a)\n        id_moebius_cmat", "fix a :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat (moebius_inv_cmat a) a)\n        id_moebius_cmat", "assume \"mat_det a \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       mat_det a \\<noteq> 0 \\<Longrightarrow>\n       moebius_cmat_eq (moebius_comp_cmat (moebius_inv_cmat a) a)\n        id_moebius_cmat", "thus \"moebius_cmat_eq (moebius_comp_cmat (moebius_inv_cmat a) a) id_moebius_cmat\""], ["proof (prove)\nusing this:\n  mat_det a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_comp_cmat (moebius_inv_cmat a) a)\n     id_moebius_cmat", "by (simp add: mat_inv_l)"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_comp_cmat (moebius_inv_cmat a) a) id_moebius_cmat\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - a + a = 0\n\ngoal (1 subgoal):\n 1. \\<And>a b. a + - b = a - b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a + - b = a - b", "fix a b :: moebius"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a + - b = a - b", "show \"a + - b = a - b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + - b = a - b", "unfolding minus_moebius_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + - b = a + - b", "by simp"], ["proof (state)\nthis:\n  a + - b = a - b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>Composition with inverse\\<close>"], ["", "lemma moebius_comp_inv_left [simp]: \n  shows \"moebius_comp (moebius_inv M) M = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_inv M) M = id_moebius", "by (metis left_minus plus_moebius_def uminus_moebius_def zero_moebius_def)"], ["", "lemma moebius_comp_inv_right [simp]:\n  shows \"moebius_comp M (moebius_inv M) = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp M (moebius_inv M) = id_moebius", "by (metis right_minus plus_moebius_def uminus_moebius_def zero_moebius_def)"], ["", "lemma moebius_pt_comp_inv_left [simp]:\n  shows \"moebius_pt (moebius_inv M) (moebius_pt M z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) (moebius_pt M z) = z", "by (subst moebius_pt_comp[symmetric], simp)"], ["", "lemma moebius_pt_comp_inv_right [simp]: \n  shows \"moebius_pt M (moebius_pt (moebius_inv M) z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M (moebius_pt (moebius_inv M) z) = z", "by (subst moebius_pt_comp[symmetric], simp)"], ["", "lemma moebius_pt_comp_inv_image_left [simp]:\n  shows \"moebius_pt (moebius_inv M) ` moebius_pt M ` A = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) ` moebius_pt M ` A = A", "by force"], ["", "lemma moebius_pt_comp_inv_image_right [simp]:\n  shows \"moebius_pt M ` moebius_pt (moebius_inv M) ` A = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M ` moebius_pt (moebius_inv M) ` A = A", "by force"], ["", "lemma moebius_pt_invert:\n  assumes \"moebius_pt M z1 = z2\"\n  shows \"moebius_pt (moebius_inv M) z2 = z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z2 = z1", "using assms[symmetric]"], ["proof (prove)\nusing this:\n  z2 = moebius_pt M z1\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z2 = z1", "by simp"], ["", "lemma moebius_pt_moebius_inv_in_set [simp]:\n  assumes \"moebius_pt M z \\<in> A\"\n  shows \"z \\<in> moebius_pt (moebius_inv M) ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt (moebius_inv M) ` A", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt M z \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt (moebius_inv M) ` A", "using image_iff"], ["proof (prove)\nusing this:\n  moebius_pt M z \\<in> A\n  (?z \\<in> ?f ` ?A) = (\\<exists>x\\<in>?A. ?z = ?f x)\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt (moebius_inv M) ` A", "by fastforce"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Special kinds of M?bius transformations\\<close>"], ["", "(* -------------------------------------------------------------------------- *)\n\n(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Reciprocal (1/z) as a M?bius transformation\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "definition moebius_reciprocal :: \"moebius\" where\n  \"moebius_reciprocal = mk_moebius 0 1 1 0\""], ["", "lemma moebius_reciprocal [simp]:\n  shows \"moebius_pt moebius_reciprocal = reciprocal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt moebius_reciprocal = reciprocal", "unfolding moebius_reciprocal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius 0 1 1 0) = reciprocal", "by (rule ext, transfer, transfer) (force simp add: split_def)"], ["", "lemma moebius_reciprocal_inv [simp]:\n  shows \"moebius_inv moebius_reciprocal = moebius_reciprocal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv moebius_reciprocal = moebius_reciprocal", "unfolding moebius_reciprocal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv (mk_moebius 0 1 1 0) = mk_moebius 0 1 1 0", "by (transfer, transfer) simp"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Euclidean similarities as a M?bius transform\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text\\<open>Euclidean similarities include Euclidean isometries (translations and rotations) and \ndilatations.\\<close>"], ["", "definition moebius_similarity :: \"complex \\<Rightarrow> complex \\<Rightarrow> moebius\" where\n  \"moebius_similarity a b = mk_moebius a b 0 1\""], ["", "lemma moebius_pt_moebius_similarity [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) z = (of_complex a) *\\<^sub>h z +\\<^sub>h (of_complex b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity a b) z =\n    of_complex a *\\<^sub>h z +\\<^sub>h of_complex b", "unfolding moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b 0 1) z =\n    of_complex a *\\<^sub>h z +\\<^sub>h of_complex b", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b 0 1) z =\n    of_complex a *\\<^sub>h z +\\<^sub>h of_complex b", "using mult_inf_right[of \"of_complex a\"]"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  of_complex a \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n  of_complex a *\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b 0 1) z =\n    of_complex a *\\<^sub>h z +\\<^sub>h of_complex b", "by (subst moebius_pt_bilinear, auto)"], ["", "text \\<open>Their action is a linear transformation of $\\mathbb{C}.$\\<close>"], ["", "lemma moebius_pt_moebius_similarity':\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) = (\\<lambda> z. (of_complex a) *\\<^sub>h z +\\<^sub>h (of_complex b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity a b) =\n    (\\<lambda>z. of_complex a *\\<^sub>h z +\\<^sub>h of_complex b)", "using moebius_pt_moebius_similarity[OF assms, symmetric]"], ["proof (prove)\nusing this:\n  of_complex a *\\<^sub>h ?z +\\<^sub>h of_complex ?b =\n  moebius_pt (moebius_similarity a ?b) ?z\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity a b) =\n    (\\<lambda>z. of_complex a *\\<^sub>h z +\\<^sub>h of_complex b)", "by simp"], ["", "lemma is_moebius_similarity':\n  assumes \"a \\<noteq> 0\\<^sub>h\" and \"a \\<noteq> \\<infinity>\\<^sub>h\" and \"b \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"(\\<lambda> z. a *\\<^sub>h z +\\<^sub>h b) = moebius_pt (moebius_similarity (to_complex a) (to_complex b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n    moebius_pt (moebius_similarity (to_complex a) (to_complex b))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n    moebius_pt (moebius_similarity (to_complex a) (to_complex b))", "obtain ka kb where *: \"a = of_complex ka\"  \"ka \\<noteq> 0\" \"b = of_complex kb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ka kb.\n        \\<lbrakk>a = of_complex ka; ka \\<noteq> 0;\n         b = of_complex kb\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\\<^sub>h\n  a \\<noteq> \\<infinity>\\<^sub>h\n  b \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>ka kb.\n        \\<lbrakk>a = of_complex ka; ka \\<noteq> 0;\n         b = of_complex kb\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of a]  inf_or_of_complex[of b]"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\\<^sub>h\n  a \\<noteq> \\<infinity>\\<^sub>h\n  b \\<noteq> \\<infinity>\\<^sub>h\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n  b = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. b = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>ka kb.\n        \\<lbrakk>a = of_complex ka; ka \\<noteq> 0;\n         b = of_complex kb\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = of_complex ka\n  ka \\<noteq> 0\n  b = of_complex kb\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n    moebius_pt (moebius_similarity (to_complex a) (to_complex b))", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = of_complex ka\n  ka \\<noteq> 0\n  b = of_complex kb\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n    moebius_pt (moebius_similarity (to_complex a) (to_complex b))", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  a = of_complex ka\n  ka \\<noteq> 0\n  b = of_complex kb\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n    moebius_pt (moebius_similarity (to_complex a) (to_complex b))", "using moebius_pt_moebius_similarity'[of ka kb]"], ["proof (prove)\nusing this:\n  a = of_complex ka\n  ka \\<noteq> 0\n  b = of_complex kb\n  ka \\<noteq> 0 \\<Longrightarrow>\n  moebius_pt (moebius_similarity ka kb) =\n  (\\<lambda>z. of_complex ka *\\<^sub>h z +\\<^sub>h of_complex kb)\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n    moebius_pt (moebius_similarity (to_complex a) (to_complex b))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n  moebius_pt (moebius_similarity (to_complex a) (to_complex b))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_moebius_similarity:\n  assumes \"a \\<noteq> 0\\<^sub>h\" and \"a \\<noteq> \\<infinity>\\<^sub>h\" and \"b \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"is_moebius (\\<lambda> z. a *\\<^sub>h z +\\<^sub>h b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_moebius (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b)", "using is_moebius_similarity'[OF assms]"], ["proof (prove)\nusing this:\n  (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n  moebius_pt (moebius_similarity (to_complex a) (to_complex b))\n\ngoal (1 subgoal):\n 1. is_moebius (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b)", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) =\n  moebius_pt (moebius_similarity (to_complex a) (to_complex b))\n\ngoal (1 subgoal):\n 1. \\<exists>M. (\\<lambda>z. a *\\<^sub>h z +\\<^sub>h b) = moebius_pt M", "by auto"], ["", "text \\<open>Euclidean similarities form a group.\\<close>"], ["", "lemma moebius_similarity_id [simp]:\n  shows \"moebius_similarity 1 0 = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_similarity 1 0 = id_moebius", "unfolding moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_moebius 1 0 0 1 = id_moebius", "by simp"], ["", "lemma moebius_similarity_inv [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_inv (moebius_similarity a b) = moebius_similarity (1/a) (-b/a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv (moebius_similarity a b) =\n    moebius_similarity (1 / a) (- b / a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_similarity a b) =\n    moebius_similarity (1 / a) (- b / a)", "unfolding moebius_similarity_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_inv (mk_moebius a b 0 1) = mk_moebius (1 / a) (- b / a) 0 1", "by simp"], ["", "lemma moebius_similarity_uminus [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"- moebius_similarity a b = moebius_similarity (1/a) (-b/a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - moebius_similarity a b = moebius_similarity (1 / a) (- b / a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - moebius_similarity a b = moebius_similarity (1 / a) (- b / a)", "by simp"], ["", "lemma moebius_similarity_comp [simp]:\n  assumes \"a \\<noteq> 0\" and \"c \\<noteq> 0\"\n  shows \"moebius_comp (moebius_similarity a b) (moebius_similarity c d) = moebius_similarity (a*c) (a*d+b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_similarity a b) (moebius_similarity c d) =\n    moebius_similarity (a * c) (a * d + b)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_comp (moebius_similarity a b) (moebius_similarity c d) =\n    moebius_similarity (a * c) (a * d + b)", "unfolding moebius_similarity_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_comp (mk_moebius a b 0 1) (mk_moebius c d 0 1) =\n    mk_moebius (a * c) (a * d + b) 0 1", "by simp"], ["", "lemma moebius_similarity_plus [simp]:\n  assumes \"a \\<noteq> 0\" and \"c \\<noteq> 0\"\n  shows \"moebius_similarity a b + moebius_similarity c d = moebius_similarity (a*c) (a*d+b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_similarity a b + moebius_similarity c d =\n    moebius_similarity (a * c) (a * d + b)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_similarity a b + moebius_similarity c d =\n    moebius_similarity (a * c) (a * d + b)", "by simp"], ["", "text \\<open>Euclidean similarities are the only M?bius group elements such that their action leaves the\n$\\infty_{h}$ fixed.\\<close>"], ["", "lemma moebius_similarity_inf [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity a b) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity a b) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "unfolding moebius_similarity_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius a b 0 1) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma moebius_similarity_only_inf_to_inf:\n  assumes \"a \\<noteq> 0\"  \"moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "by auto"], ["", "lemma moebius_similarity_inf_iff [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h \\<longleftrightarrow> z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h) =\n    (z = \\<infinity>\\<^sub>h)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h) =\n    (z = \\<infinity>\\<^sub>h)", "using moebius_similarity_only_inf_to_inf[of a b z]"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  \\<lbrakk>a \\<noteq> 0;\n   moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h) =\n    (z = \\<infinity>\\<^sub>h)", "by auto"], ["", "lemma inf_fixed_only_moebius_similarity:\n  assumes \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"\\<exists> a b. a \\<noteq> 0 \\<and> M = moebius_similarity a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b. a \\<noteq> 0 \\<and> M = moebius_similarity a b", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>a b. a \\<noteq> 0 \\<and> M = moebius_similarity a b", "unfolding moebius_similarity_def"], ["proof (prove)\nusing this:\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>a b. a \\<noteq> 0 \\<and> M = mk_moebius a b 0 1", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            a \\<noteq> 0 \\<and>\n                            moebius_cmat_eq M (mk_moebius_cmat a b 0 1)", "fix M :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            a \\<noteq> 0 \\<and>\n                            moebius_cmat_eq M (mk_moebius_cmat a b 0 1)", "obtain a b c d where MM: \"M = (a, b, c, d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        M = (a, b, c, d) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases M, auto)"], ["proof (state)\nthis:\n  M = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            a \\<noteq> 0 \\<and>\n                            moebius_cmat_eq M (mk_moebius_cmat a b 0 1)", "assume \"mat_det M \\<noteq> 0\" \"moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n  moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            a \\<noteq> 0 \\<and>\n                            moebius_cmat_eq M (mk_moebius_cmat a b 0 1)", "hence *: \"c = 0\" \"a \\<noteq> 0 \\<and> d \\<noteq> 0\""], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. c = 0 &&& a \\<noteq> 0 \\<and> d \\<noteq> 0", "using MM"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  \\<infinity>\\<^sub>v\n  M = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. c = 0 &&& a \\<noteq> 0 \\<and> d \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  c = 0\n  a \\<noteq> 0 \\<and> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            a \\<noteq> 0 \\<and>\n                            moebius_cmat_eq M (mk_moebius_cmat a b 0 1)", "show \"\\<exists>a b. a \\<noteq> 0 \\<and> moebius_cmat_eq M (mk_moebius_cmat a b 0 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<noteq> 0 \\<and> moebius_cmat_eq M (mk_moebius_cmat a b 0 1)", "proof (rule_tac x=\"a/d\" in exI, rule_tac x=\"b/d\" in exI)"], ["proof (state)\ngoal (1 subgoal):\n 1. a / d \\<noteq> 0 \\<and>\n    moebius_cmat_eq M (mk_moebius_cmat (a / d) (b / d) 0 1)", "show \"a/d \\<noteq> 0 \\<and> moebius_cmat_eq M (mk_moebius_cmat (a / d) (b / d) 0 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a / d \\<noteq> 0 \\<and>\n    moebius_cmat_eq M (mk_moebius_cmat (a / d) (b / d) 0 1)", "using MM *"], ["proof (prove)\nusing this:\n  M = (a, b, c, d)\n  c = 0\n  a \\<noteq> 0 \\<and> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a / d \\<noteq> 0 \\<and>\n    moebius_cmat_eq M (mk_moebius_cmat (a / d) (b / d) 0 1)", "by simp (rule_tac x=\"1/d\" in exI, simp)"], ["proof (state)\nthis:\n  a / d \\<noteq> 0 \\<and>\n  moebius_cmat_eq M (mk_moebius_cmat (a / d) (b / d) 0 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a b.\n     a \\<noteq> 0 \\<and> moebius_cmat_eq M (mk_moebius_cmat a b 0 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Euclidean similarities include translations, rotations, and dilatations.\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Translation\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "definition moebius_translation where\n  \"moebius_translation v = moebius_similarity 1 v\""], ["", "lemma moebius_translation_comp [simp]:\n  shows \"moebius_comp (moebius_translation v1) (moebius_translation v2) = moebius_translation (v1 + v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_translation v1) (moebius_translation v2) =\n    moebius_translation (v1 + v2)", "unfolding moebius_translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_similarity 1 v1) (moebius_similarity 1 v2) =\n    moebius_similarity 1 (v1 + v2)", "by (simp add: field_simps)"], ["", "lemma moebius_translation_plus [simp]:\n  shows \"(moebius_translation v1) + (moebius_translation v2) = moebius_translation (v1 + v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_translation v1 + moebius_translation v2 =\n    moebius_translation (v1 + v2)", "by simp"], ["", "lemma moebius_translation_zero [simp]:\n  shows \"moebius_translation 0 = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_translation 0 = id_moebius", "unfolding moebius_translation_def moebius_similarity_id"], ["proof (prove)\ngoal (1 subgoal):\n 1. id_moebius = id_moebius", "by simp"], ["", "lemma moebius_translation_inv [simp]:\n  shows \"moebius_inv (moebius_translation v1) = moebius_translation (-v1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv (moebius_translation v1) = moebius_translation (- v1)", "using moebius_translation_comp[of v1 \"-v1\"] moebius_translation_zero"], ["proof (prove)\nusing this:\n  moebius_comp (moebius_translation v1) (moebius_translation (- v1)) =\n  moebius_translation (v1 + - v1)\n  moebius_translation 0 = id_moebius\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_translation v1) = moebius_translation (- v1)", "using minus_unique[of \"moebius_translation v1\" \"moebius_translation (-v1)\"]"], ["proof (prove)\nusing this:\n  moebius_comp (moebius_translation v1) (moebius_translation (- v1)) =\n  moebius_translation (v1 + - v1)\n  moebius_translation 0 = id_moebius\n  moebius_translation v1 + moebius_translation (- v1) = 0 \\<Longrightarrow>\n  - moebius_translation v1 = moebius_translation (- v1)\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_translation v1) = moebius_translation (- v1)", "by simp"], ["", "lemma moebius_translation_uminus [simp]:\n  shows \"- (moebius_translation v1) = moebius_translation (-v1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - moebius_translation v1 = moebius_translation (- v1)", "by simp"], ["", "lemma moebius_translation_inv_translation [simp]:\n  shows \"moebius_pt (moebius_translation v) (moebius_pt (moebius_translation (-v)) z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation v)\n     (moebius_pt (moebius_translation (- v)) z) =\n    z", "using moebius_translation_inv[symmetric, of v]"], ["proof (prove)\nusing this:\n  moebius_translation (- v) = moebius_inv (moebius_translation v)\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation v)\n     (moebius_pt (moebius_translation (- v)) z) =\n    z", "by (simp del: moebius_translation_inv)"], ["", "lemma moebius_inv_translation_translation [simp]:\n  shows \"moebius_pt (moebius_translation (-v)) (moebius_pt (moebius_translation v) z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation (- v))\n     (moebius_pt (moebius_translation v) z) =\n    z", "using moebius_translation_inv[symmetric, of v]"], ["proof (prove)\nusing this:\n  moebius_translation (- v) = moebius_inv (moebius_translation v)\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation (- v))\n     (moebius_pt (moebius_translation v) z) =\n    z", "by (simp del: moebius_translation_inv)"], ["", "lemma moebius_pt_moebius_translation [simp]:\n  shows \"moebius_pt (moebius_translation v) (of_complex z) = of_complex (z + v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation v) (of_complex z) = of_complex (z + v)", "unfolding moebius_translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity 1 v) (of_complex z) = of_complex (z + v)", "by (simp add: field_simps)"], ["", "lemma moebius_pt_moebius_translation_inf [simp]:\n  shows \"moebius_pt (moebius_translation v) \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation v) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "unfolding moebius_translation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity 1 v) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "by simp"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Rotation\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "definition moebius_rotation where\n  \"moebius_rotation \\<phi> = moebius_similarity (cis \\<phi>) 0\""], ["", "lemma moebius_rotation_comp [simp]:\n  shows \"moebius_comp (moebius_rotation \\<phi>1) (moebius_rotation \\<phi>2) = moebius_rotation (\\<phi>1 + \\<phi>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_rotation \\<phi>1) (moebius_rotation \\<phi>2) =\n    moebius_rotation (\\<phi>1 + \\<phi>2)", "unfolding moebius_rotation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_similarity (cis \\<phi>1) 0)\n     (moebius_similarity (cis \\<phi>2) 0) =\n    moebius_similarity (cis (\\<phi>1 + \\<phi>2)) 0", "using moebius_similarity_comp[of \"cis \\<phi>1\" \"cis \\<phi>2\" 0 0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>cis \\<phi>1 \\<noteq> 0; cis \\<phi>2 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> moebius_comp (moebius_similarity (cis \\<phi>1) 0)\n                     (moebius_similarity (cis \\<phi>2) 0) =\n                    moebius_similarity (cis \\<phi>1 * cis \\<phi>2)\n                     (cis \\<phi>1 * 0 + 0)\n\ngoal (1 subgoal):\n 1. moebius_comp (moebius_similarity (cis \\<phi>1) 0)\n     (moebius_similarity (cis \\<phi>2) 0) =\n    moebius_similarity (cis (\\<phi>1 + \\<phi>2)) 0", "by (simp add: cis_mult)"], ["", "lemma moebius_rotation_plus [simp]:\n  shows \"(moebius_rotation \\<phi>1) + (moebius_rotation \\<phi>2) = moebius_rotation (\\<phi>1 + \\<phi>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_rotation \\<phi>1 + moebius_rotation \\<phi>2 =\n    moebius_rotation (\\<phi>1 + \\<phi>2)", "by simp"], ["", "lemma moebius_rotation_zero [simp]:\n  shows \"moebius_rotation 0 = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_rotation 0 = id_moebius", "unfolding moebius_rotation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_similarity (cis 0) 0 = id_moebius", "using moebius_similarity_id"], ["proof (prove)\nusing this:\n  moebius_similarity 1 0 = id_moebius\n\ngoal (1 subgoal):\n 1. moebius_similarity (cis 0) 0 = id_moebius", "by simp"], ["", "lemma moebius_rotation_inv [simp]:\n  shows \"moebius_inv (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)", "using moebius_rotation_comp[of \\<phi> \"-\\<phi>\"] moebius_rotation_zero"], ["proof (prove)\nusing this:\n  moebius_comp (moebius_rotation \\<phi>) (moebius_rotation (- \\<phi>)) =\n  moebius_rotation (\\<phi> + - \\<phi>)\n  moebius_rotation 0 = id_moebius\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)", "using minus_unique[of \"moebius_rotation \\<phi>\" \"moebius_rotation (-\\<phi>)\"]"], ["proof (prove)\nusing this:\n  moebius_comp (moebius_rotation \\<phi>) (moebius_rotation (- \\<phi>)) =\n  moebius_rotation (\\<phi> + - \\<phi>)\n  moebius_rotation 0 = id_moebius\n  moebius_rotation \\<phi> + moebius_rotation (- \\<phi>) =\n  0 \\<Longrightarrow>\n  - moebius_rotation \\<phi> = moebius_rotation (- \\<phi>)\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)", "by simp"], ["", "lemma moebius_rotation_uminus [simp]:\n  shows \"- (moebius_rotation \\<phi>) = moebius_rotation (- \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - moebius_rotation \\<phi> = moebius_rotation (- \\<phi>)", "by simp"], ["", "lemma moebius_rotation_inv_rotation [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) (moebius_pt (moebius_rotation (-\\<phi>)) z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation \\<phi>)\n     (moebius_pt (moebius_rotation (- \\<phi>)) z) =\n    z", "using moebius_rotation_inv[symmetric, of \\<phi>]"], ["proof (prove)\nusing this:\n  moebius_rotation (- \\<phi>) = moebius_inv (moebius_rotation \\<phi>)\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation \\<phi>)\n     (moebius_pt (moebius_rotation (- \\<phi>)) z) =\n    z", "by (simp del: moebius_rotation_inv)"], ["", "lemma moebius_inv_rotation_rotation [simp]:\n  shows \"moebius_pt (moebius_rotation (-\\<phi>)) (moebius_pt (moebius_rotation \\<phi>) z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- \\<phi>))\n     (moebius_pt (moebius_rotation \\<phi>) z) =\n    z", "using moebius_rotation_inv[symmetric, of \\<phi>]"], ["proof (prove)\nusing this:\n  moebius_rotation (- \\<phi>) = moebius_inv (moebius_rotation \\<phi>)\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- \\<phi>))\n     (moebius_pt (moebius_rotation \\<phi>) z) =\n    z", "by (simp del: moebius_rotation_inv)"], ["", "lemma moebius_pt_moebius_rotation [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) (of_complex z) = of_complex (cis \\<phi> * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation \\<phi>) (of_complex z) =\n    of_complex (cis \\<phi> * z)", "unfolding moebius_rotation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity (cis \\<phi>) 0) (of_complex z) =\n    of_complex (cis \\<phi> * z)", "by simp"], ["", "lemma moebius_pt_moebius_rotation_inf [simp]:\n  shows \"moebius_pt (moebius_rotation v) \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation v) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "unfolding moebius_rotation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity (cis v) 0) \\<infinity>\\<^sub>h =\n    \\<infinity>\\<^sub>h", "by simp"], ["", "lemma moebius_pt_rotation_inf_iff [simp]:\n  shows \"moebius_pt (moebius_rotation v) x = \\<infinity>\\<^sub>h \\<longleftrightarrow> x = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_rotation v) x = \\<infinity>\\<^sub>h) =\n    (x = \\<infinity>\\<^sub>h)", "unfolding moebius_rotation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_similarity (cis v) 0) x = \\<infinity>\\<^sub>h) =\n    (x = \\<infinity>\\<^sub>h)", "using cis_neq_zero moebius_similarity_only_inf_to_inf"], ["proof (prove)\nusing this:\n  cis ?a \\<noteq> 0\n  \\<lbrakk>?a \\<noteq> 0;\n   moebius_pt (moebius_similarity ?a ?b) ?z = \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> ?z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_similarity (cis v) 0) x = \\<infinity>\\<^sub>h) =\n    (x = \\<infinity>\\<^sub>h)", "by (simp del: moebius_pt_moebius_similarity)"], ["", "lemma moebius_pt_moebius_rotation_zero [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) 0\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation \\<phi>) 0\\<^sub>h = 0\\<^sub>h", "unfolding moebius_rotation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity (cis \\<phi>) 0) 0\\<^sub>h = 0\\<^sub>h", "by simp"], ["", "lemma moebius_pt_moebius_rotation_zero_iff [simp]:\n  shows \"moebius_pt (moebius_rotation \\<phi>) x = 0\\<^sub>h \\<longleftrightarrow> x = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_rotation \\<phi>) x = 0\\<^sub>h) = (x = 0\\<^sub>h)", "using moebius_pt_invert[of \"moebius_rotation \\<phi>\" x \"0\\<^sub>h\"]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation \\<phi>) x = 0\\<^sub>h \\<Longrightarrow>\n  moebius_pt (moebius_inv (moebius_rotation \\<phi>)) 0\\<^sub>h = x\n\ngoal (1 subgoal):\n 1. (moebius_pt (moebius_rotation \\<phi>) x = 0\\<^sub>h) = (x = 0\\<^sub>h)", "by auto"], ["", "lemma moebius_rotation_preserve_cmod [simp]:\n  assumes \"u \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"cmod (to_complex (moebius_pt (moebius_rotation \\<phi>) u)) = cmod (to_complex u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (to_complex (moebius_pt (moebius_rotation \\<phi>) u)) =\n    cmod (to_complex u)", "using assms"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. cmod (to_complex (moebius_pt (moebius_rotation \\<phi>) u)) =\n    cmod (to_complex u)", "using inf_or_of_complex[of u]"], ["proof (prove)\nusing this:\n  u \\<noteq> \\<infinity>\\<^sub>h\n  u = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. u = of_complex x)\n\ngoal (1 subgoal):\n 1. cmod (to_complex (moebius_pt (moebius_rotation \\<phi>) u)) =\n    cmod (to_complex u)", "by auto"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Dilatation\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "definition moebius_dilatation where\n  \"moebius_dilatation a = moebius_similarity (cor a) 0\""], ["", "lemma moebius_dilatation_comp [simp]:\n  assumes \"a1 > 0\" and \"a2 > 0\"\n  shows \"moebius_comp (moebius_dilatation a1) (moebius_dilatation a2) = moebius_dilatation (a1 * a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_comp (moebius_dilatation a1) (moebius_dilatation a2) =\n    moebius_dilatation (a1 * a2)", "using assms"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n\ngoal (1 subgoal):\n 1. moebius_comp (moebius_dilatation a1) (moebius_dilatation a2) =\n    moebius_dilatation (a1 * a2)", "unfolding moebius_dilatation_def"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n\ngoal (1 subgoal):\n 1. moebius_comp (moebius_similarity (cor a1) 0)\n     (moebius_similarity (cor a2) 0) =\n    moebius_similarity (cor (a1 * a2)) 0", "by simp"], ["", "lemma moebius_dilatation_plus [simp]:\n  assumes \"a1 > 0\" and \"a2 > 0\"\n  shows \"(moebius_dilatation a1) + (moebius_dilatation a2) = moebius_dilatation (a1 * a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_dilatation a1 + moebius_dilatation a2 =\n    moebius_dilatation (a1 * a2)", "using assms"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n\ngoal (1 subgoal):\n 1. moebius_dilatation a1 + moebius_dilatation a2 =\n    moebius_dilatation (a1 * a2)", "by simp"], ["", "lemma moebius_dilatation_zero [simp]:\n  shows \"moebius_dilatation 1 = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_dilatation 1 = id_moebius", "unfolding moebius_dilatation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_similarity (cor 1) 0 = id_moebius", "using moebius_similarity_id"], ["proof (prove)\nusing this:\n  moebius_similarity 1 0 = id_moebius\n\ngoal (1 subgoal):\n 1. moebius_similarity (cor 1) 0 = id_moebius", "by simp"], ["", "lemma moebius_dilatation_inverse [simp]:\n  assumes \"a > 0\"\n  shows \"moebius_inv (moebius_dilatation a) = moebius_dilatation (1/a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_inv (moebius_dilatation a) = moebius_dilatation (1 / a)", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_dilatation a) = moebius_dilatation (1 / a)", "unfolding moebius_dilatation_def"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. moebius_inv (moebius_similarity (cor a) 0) =\n    moebius_similarity (cor (1 / a)) 0", "by simp"], ["", "lemma moebius_dilatation_uminus [simp]:\n  assumes \"a > 0\"\n  shows \"- (moebius_dilatation a) = moebius_dilatation (1/a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - moebius_dilatation a = moebius_dilatation (1 / a)", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. - moebius_dilatation a = moebius_dilatation (1 / a)", "by simp"], ["", "lemma moebius_pt_dilatation [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_pt (moebius_dilatation a) (of_complex z) = of_complex (cor a * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_dilatation a) (of_complex z) =\n    of_complex (cor a * z)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_dilatation a) (of_complex z) =\n    of_complex (cor a * z)", "unfolding moebius_dilatation_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_similarity (cor a) 0) (of_complex z) =\n    of_complex (cor a * z)", "by simp"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Rotation-dilatation\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "definition moebius_rotation_dilatation where\n  \"moebius_rotation_dilatation a = moebius_similarity a 0\""], ["", "lemma moebius_rotation_dilatation:                                     \n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_rotation_dilatation a = moebius_rotation (arg a) + moebius_dilatation (cmod a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_rotation_dilatation a =\n    moebius_rotation (arg a) + moebius_dilatation (cmod a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_rotation_dilatation a =\n    moebius_rotation (arg a) + moebius_dilatation (cmod a)", "unfolding moebius_rotation_dilatation_def moebius_rotation_def moebius_dilatation_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_similarity a 0 =\n    moebius_similarity (cis (arg a)) 0 + moebius_similarity (cor (cmod a)) 0", "by simp"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Conjugate M?bius\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Conjugation is not a M?bius transformation, and conjugate M?bius transformations (obtained\nby conjugating each matrix element) do not represent conjugation function (although they are\nsomewhat related).\\<close>"], ["", "lift_definition conjugate_moebius_mmat :: \"moebius_mat \\<Rightarrow> moebius_mat\" is mat_cnj"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       mat_det prod \\<noteq> 0 \\<Longrightarrow>\n       mat_det (mat_cnj prod) \\<noteq> 0", "by auto"], ["", "lift_definition conjugate_moebius :: \"moebius \\<Rightarrow> moebius\" is conjugate_moebius_mmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2.\n       moebius_mat_eq moebius_mat1 moebius_mat2 \\<Longrightarrow>\n       moebius_mat_eq (conjugate_moebius_mmat moebius_mat1)\n        (conjugate_moebius_mmat moebius_mat2)", "by transfer (auto simp add: mat_cnj_def)"], ["", "lemma conjugate_moebius:\n  shows \"conjugate \\<circ> moebius_pt M = moebius_pt (conjugate_moebius M) \\<circ> conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate \\<circ> moebius_pt M =\n    moebius_pt (conjugate_moebius M) \\<circ> conjugate", "apply (rule ext, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       conjugate (moebius_pt M x) =\n       moebius_pt (conjugate_moebius M) (conjugate x)", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x M.\n       \\<lbrakk>x \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> conjugate_cvec\n                          (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n                         moebius_pt_cmat_cvec (mat_cnj M) (conjugate_cvec x)", "using vec_cnj_mult_mv"], ["proof (prove)\nusing this:\n  vec_cnj (?A *\\<^sub>m\\<^sub>v ?x) =\n  mat_cnj ?A *\\<^sub>m\\<^sub>v vec_cnj ?x\n\ngoal (1 subgoal):\n 1. \\<And>x M.\n       \\<lbrakk>x \\<noteq> vec_zero; mat_det M \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> conjugate_cvec\n                          (moebius_pt_cmat_cvec M x) \\<approx>\\<^sub>v\n                         moebius_pt_cmat_cvec (mat_cnj M) (conjugate_cvec x)", "by auto"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Decomposition of M\\\"obius transformations\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Every Euclidean similarity can be decomposed using translations, rotations, and dilatations.\\<close>"], ["", "lemma similarity_decomposition:\n  assumes \"a \\<noteq> 0\"\n  shows \"moebius_similarity a b = (moebius_translation b) + (moebius_rotation (arg a)) + (moebius_dilatation (cmod a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation (arg a) +\n    moebius_dilatation (cmod a)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation (arg a) +\n    moebius_dilatation (cmod a)", "have \"moebius_similarity a b = (moebius_translation b) + (moebius_rotation_dilatation a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation_dilatation a", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation_dilatation a", "unfolding moebius_rotation_dilatation_def moebius_translation_def moebius_similarity_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mk_moebius a b 0 1 = mk_moebius 1 b 0 1 + mk_moebius a 0 0 1", "by auto"], ["proof (state)\nthis:\n  moebius_similarity a b =\n  moebius_translation b + moebius_rotation_dilatation a\n\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation (arg a) +\n    moebius_dilatation (cmod a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_similarity a b =\n  moebius_translation b + moebius_rotation_dilatation a\n\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation (arg a) +\n    moebius_dilatation (cmod a)", "using moebius_rotation_dilatation [OF assms]"], ["proof (prove)\nusing this:\n  moebius_similarity a b =\n  moebius_translation b + moebius_rotation_dilatation a\n  moebius_rotation_dilatation a =\n  moebius_rotation (arg a) + moebius_dilatation (cmod a)\n\ngoal (1 subgoal):\n 1. moebius_similarity a b =\n    moebius_translation b + moebius_rotation (arg a) +\n    moebius_dilatation (cmod a)", "by (auto simp add: add.assoc simp del: plus_moebius_def)"], ["proof (state)\nthis:\n  moebius_similarity a b =\n  moebius_translation b + moebius_rotation (arg a) +\n  moebius_dilatation (cmod a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A very important fact is that every M?bius transformation can be\ncomposed of Euclidean similarities and a reciprocation.\\<close>"], ["", "lemma moebius_decomposition:\n  assumes \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  shows \"mk_moebius a b c d =\n             moebius_translation (a/c) +\n             moebius_rotation_dilatation ((b*c - a*d)/(c*c)) +\n             moebius_reciprocal +\n             moebius_translation (d/c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_moebius a b c d =\n    moebius_translation (a / c) +\n    moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n    moebius_reciprocal +\n    moebius_translation (d / c)", "using assms"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mk_moebius a b c d =\n    moebius_translation (a / c) +\n    moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n    moebius_reciprocal +\n    moebius_translation (d / c)", "unfolding moebius_rotation_dilatation_def moebius_translation_def moebius_similarity_def plus_moebius_def moebius_reciprocal_def"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mk_moebius a b c d =\n    moebius_comp\n     (moebius_comp\n       (moebius_comp (mk_moebius 1 (a / c) 0 1)\n         (mk_moebius ((b * c - a * d) / (c * c)) 0 0 1))\n       (mk_moebius 0 1 1 0))\n     (mk_moebius 1 (d / c) 0 1)", "by (simp add: field_simps) (transfer, transfer, auto simp add: field_simps, rule_tac x=\"1/c\" in exI, simp)"], ["", "lemma moebius_decomposition_similarity:\n  assumes \"a \\<noteq> 0\"\n  shows \"mk_moebius a b 0 d = moebius_similarity (a/d) (b/d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_moebius a b 0 d = moebius_similarity (a / d) (b / d)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mk_moebius a b 0 d = moebius_similarity (a / d) (b / d)", "unfolding moebius_similarity_def"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mk_moebius a b 0 d = mk_moebius (a / d) (b / d) 0 1", "by (transfer, transfer, auto, rule_tac x=\"1/d\" in exI, simp)"], ["", "text \\<open>Decomposition is used in many proofs. Namely, to show that every M?bius transformation has\nsome property, it suffices to show that reciprocation and all Euclidean similarities have that\nproperty, and that the property is preserved under compositions.\\<close>"], ["", "lemma wlog_moebius_decomposition:\n  assumes\n    trans: \"\\<And> v. P (moebius_translation v)\" and\n    rot: \"\\<And> \\<alpha>. P (moebius_rotation \\<alpha>)\" and\n    dil: \"\\<And> k. P (moebius_dilatation k)\" and\n    recip: \"P (moebius_reciprocal)\" and\n    comp: \"\\<And> M1 M2. \\<lbrakk>P M1; P M2\\<rbrakk> \\<Longrightarrow> P (M1 + M2)\"\n  shows \"P M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P M", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P M", "obtain a b c d where \"M = mk_moebius a b c d\" \"mat_det (a, b, c, d) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>M = mk_moebius a b c d;\n         mat_det (a, b, c, d) \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_mk_moebius[of M]"], ["proof (prove)\nusing this:\n  \\<exists>a b c d.\n     M = mk_moebius a b c d \\<and> mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>M = mk_moebius a b c d;\n         mat_det (a, b, c, d) \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  M = mk_moebius a b c d\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. P M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P M", "proof (cases \"c = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow> P M\n 2. c \\<noteq> 0 \\<Longrightarrow> P M", "case False"], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow> P M\n 2. c \\<noteq> 0 \\<Longrightarrow> P M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P M", "using moebius_decomposition[of c a d b] \\<open>mat_det (a, b, c, d) \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close> \\<open>M = mk_moebius a b c d\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> mk_moebius a b c d =\n                    moebius_translation (a / c) +\n                    moebius_rotation_dilatation\n                     ((b * c - a * d) / (c * c)) +\n                    moebius_reciprocal +\n                    moebius_translation (d / c)\n  mat_det (a, b, c, d) \\<noteq> 0\n  c \\<noteq> 0\n  M = mk_moebius a b c d\n\ngoal (1 subgoal):\n 1. P M", "using moebius_rotation_dilatation[of \"(b*c - a*d) / (c*c)\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> mk_moebius a b c d =\n                    moebius_translation (a / c) +\n                    moebius_rotation_dilatation\n                     ((b * c - a * d) / (c * c)) +\n                    moebius_reciprocal +\n                    moebius_translation (d / c)\n  mat_det (a, b, c, d) \\<noteq> 0\n  c \\<noteq> 0\n  M = mk_moebius a b c d\n  (b * c - a * d) / (c * c) \\<noteq> 0 \\<Longrightarrow>\n  moebius_rotation_dilatation ((b * c - a * d) / (c * c)) =\n  moebius_rotation (arg ((b * c - a * d) / (c * c))) +\n  moebius_dilatation (cmod ((b * c - a * d) / (c * c)))\n\ngoal (1 subgoal):\n 1. P M", "using trans[of \"a/c\"] rot[of \"arg ((b*c - a*d) / (c*c))\"] dil[of \"cmod ((b*c - a*d) / (c*c))\"] recip"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> mk_moebius a b c d =\n                    moebius_translation (a / c) +\n                    moebius_rotation_dilatation\n                     ((b * c - a * d) / (c * c)) +\n                    moebius_reciprocal +\n                    moebius_translation (d / c)\n  mat_det (a, b, c, d) \\<noteq> 0\n  c \\<noteq> 0\n  M = mk_moebius a b c d\n  (b * c - a * d) / (c * c) \\<noteq> 0 \\<Longrightarrow>\n  moebius_rotation_dilatation ((b * c - a * d) / (c * c)) =\n  moebius_rotation (arg ((b * c - a * d) / (c * c))) +\n  moebius_dilatation (cmod ((b * c - a * d) / (c * c)))\n  P (moebius_translation (a / c))\n  P (moebius_rotation (arg ((b * c - a * d) / (c * c))))\n  P (moebius_dilatation (cmod ((b * c - a * d) / (c * c))))\n  P moebius_reciprocal\n\ngoal (1 subgoal):\n 1. P M", "using comp"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> mk_moebius a b c d =\n                    moebius_translation (a / c) +\n                    moebius_rotation_dilatation\n                     ((b * c - a * d) / (c * c)) +\n                    moebius_reciprocal +\n                    moebius_translation (d / c)\n  mat_det (a, b, c, d) \\<noteq> 0\n  c \\<noteq> 0\n  M = mk_moebius a b c d\n  (b * c - a * d) / (c * c) \\<noteq> 0 \\<Longrightarrow>\n  moebius_rotation_dilatation ((b * c - a * d) / (c * c)) =\n  moebius_rotation (arg ((b * c - a * d) / (c * c))) +\n  moebius_dilatation (cmod ((b * c - a * d) / (c * c)))\n  P (moebius_translation (a / c))\n  P (moebius_rotation (arg ((b * c - a * d) / (c * c))))\n  P (moebius_dilatation (cmod ((b * c - a * d) / (c * c))))\n  P moebius_reciprocal\n  \\<lbrakk>P ?M1.0; P ?M2.0\\<rbrakk> \\<Longrightarrow> P (?M1.0 + ?M2.0)\n\ngoal (1 subgoal):\n 1. P M", "by (simp add: trans)"], ["proof (state)\nthis:\n  P M\n\ngoal (1 subgoal):\n 1. c = 0 \\<Longrightarrow> P M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = 0 \\<Longrightarrow> P M", "case True"], ["proof (state)\nthis:\n  c = 0\n\ngoal (1 subgoal):\n 1. c = 0 \\<Longrightarrow> P M", "hence \"M = moebius_similarity (a/d) (b/d)\""], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. M = moebius_similarity (a / d) (b / d)", "using \\<open>M = mk_moebius a b c d\\<close> \\<open>mat_det (a, b, c, d) \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  c = 0\n  M = mk_moebius a b c d\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. M = moebius_similarity (a / d) (b / d)", "using moebius_decomposition_similarity"], ["proof (prove)\nusing this:\n  c = 0\n  M = mk_moebius a b c d\n  mat_det (a, b, c, d) \\<noteq> 0\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  mk_moebius ?a ?b 0 ?d = moebius_similarity (?a / ?d) (?b / ?d)\n\ngoal (1 subgoal):\n 1. M = moebius_similarity (a / d) (b / d)", "by auto"], ["proof (state)\nthis:\n  M = moebius_similarity (a / d) (b / d)\n\ngoal (1 subgoal):\n 1. c = 0 \\<Longrightarrow> P M", "thus ?thesis"], ["proof (prove)\nusing this:\n  M = moebius_similarity (a / d) (b / d)\n\ngoal (1 subgoal):\n 1. P M", "using \\<open>c = 0\\<close> \\<open>mat_det (a, b, c, d) \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  M = moebius_similarity (a / d) (b / d)\n  c = 0\n  mat_det (a, b, c, d) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. P M", "using similarity_decomposition[of \"a/d\" \"b/d\"]"], ["proof (prove)\nusing this:\n  M = moebius_similarity (a / d) (b / d)\n  c = 0\n  mat_det (a, b, c, d) \\<noteq> 0\n  a / d \\<noteq> 0 \\<Longrightarrow>\n  moebius_similarity (a / d) (b / d) =\n  moebius_translation (b / d) + moebius_rotation (arg (a / d)) +\n  moebius_dilatation (cmod (a / d))\n\ngoal (1 subgoal):\n 1. P M", "using trans[of \"b/d\"] rot[of \"arg (a/d)\"] dil[of \"cmod (a/d)\"] comp"], ["proof (prove)\nusing this:\n  M = moebius_similarity (a / d) (b / d)\n  c = 0\n  mat_det (a, b, c, d) \\<noteq> 0\n  a / d \\<noteq> 0 \\<Longrightarrow>\n  moebius_similarity (a / d) (b / d) =\n  moebius_translation (b / d) + moebius_rotation (arg (a / d)) +\n  moebius_dilatation (cmod (a / d))\n  P (moebius_translation (b / d))\n  P (moebius_rotation (arg (a / d)))\n  P (moebius_dilatation (cmod (a / d)))\n  \\<lbrakk>P ?M1.0; P ?M2.0\\<rbrakk> \\<Longrightarrow> P (?M1.0 + ?M2.0)\n\ngoal (1 subgoal):\n 1. P M", "by simp"], ["proof (state)\nthis:\n  P M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P M\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Cross ratio and M?bius existence\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>For any fixed three points $z1$, $z2$ and $z3$, @{term \"cross_ratio z z1 z2 z3\"} can be seen as\na function of a single variable $z$.\\<close>"], ["", "lemma is_moebius_cross_ratio:\n  assumes \"z1 \\<noteq> z2\" and  \"z2 \\<noteq> z3\" and \"z1 \\<noteq> z3\"\n  shows \"is_moebius (\\<lambda> z. cross_ratio z z1 z2 z3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)", "have \"\\<exists> M. \\<forall> z. cross_ratio z z1 z2 z3 = moebius_pt M z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M. \\<forall>z. cross_ratio z z1 z2 z3 = moebius_pt M z", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z2 \\<noteq> z3\n  z1 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. \\<exists>M. \\<forall>z. cross_ratio z z1 z2 z3 = moebius_pt M z", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "fix z1 z2 z3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "assume vz: \"z1 \\<noteq> vec_zero\" \"z2 \\<noteq> vec_zero\" \"z3 \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z3 \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "obtain z1' z1'' where zz1: \"z1 = (z1', z1'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1' z1''.\n        z1 = (z1', z1'') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z1, auto)"], ["proof (state)\nthis:\n  z1 = (z1', z1'')\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "obtain z2' z2'' where zz2: \"z2 = (z2', z2'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z2' z2''.\n        z2 = (z2', z2'') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z2, auto)"], ["proof (state)\nthis:\n  z2 = (z2', z2'')\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "obtain z3' z3'' where zz3: \"z3 = (z3', z3'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z3' z3''.\n        z3 = (z3', z3'') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z3, auto)"], ["proof (state)\nthis:\n  z3 = (z3', z3'')\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "let ?m23 = \"z2'*z3''-z3'*z2''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "let ?m21 = \"z2'*z1''-z1'*z2''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "let ?m13 = \"z1'*z3''-z3'*z1''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "let ?M = \"(z1''*?m23, -z1'*?m23, z3''*?m21, -z3'*?m21)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "assume \"\\<not> z1 \\<approx>\\<^sub>v z2\" \"\\<not> z2 \\<approx>\\<^sub>v z3\" \"\\<not> z1 \\<approx>\\<^sub>v z3\""], ["proof (state)\nthis:\n  \\<not> z1 \\<approx>\\<^sub>v z2\n  \\<not> z2 \\<approx>\\<^sub>v z3\n  \\<not> z1 \\<approx>\\<^sub>v z3\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "hence *: \"?m23 \\<noteq> 0\" \"?m21 \\<noteq> 0\" \"?m13 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> z1 \\<approx>\\<^sub>v z2\n  \\<not> z2 \\<approx>\\<^sub>v z3\n  \\<not> z1 \\<approx>\\<^sub>v z3\n\ngoal (1 subgoal):\n 1. z2' * z3'' - z3' * z2'' \\<noteq> 0 &&&\n    z2' * z1'' - z1' * z2'' \\<noteq> 0 &&&\n    z1' * z3'' - z3' * z1'' \\<noteq> 0", "using vz zz1 zz2 zz3"], ["proof (prove)\nusing this:\n  \\<not> z1 \\<approx>\\<^sub>v z2\n  \\<not> z2 \\<approx>\\<^sub>v z3\n  \\<not> z1 \\<approx>\\<^sub>v z3\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z3 \\<noteq> vec_zero\n  z1 = (z1', z1'')\n  z2 = (z2', z2'')\n  z3 = (z3', z3'')\n\ngoal (1 subgoal):\n 1. z2' * z3'' - z3' * z2'' \\<noteq> 0 &&&\n    z2' * z1'' - z1' * z2'' \\<noteq> 0 &&&\n    z1' * z3'' - z3' * z1'' \\<noteq> 0", "using complex_cvec_eq_mix[of z1' z1'' z2' z2'']"], ["proof (prove)\nusing this:\n  \\<not> z1 \\<approx>\\<^sub>v z2\n  \\<not> z2 \\<approx>\\<^sub>v z3\n  \\<not> z1 \\<approx>\\<^sub>v z3\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z3 \\<noteq> vec_zero\n  z1 = (z1', z1'')\n  z2 = (z2', z2'')\n  z3 = (z3', z3'')\n  \\<lbrakk>(z1', z1'') \\<noteq> vec_zero;\n   (z2', z2'') \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1', z1'') \\<approx>\\<^sub>v (z2', z2'')) =\n                    (z1' * z2'' = z1'' * z2')\n\ngoal (1 subgoal):\n 1. z2' * z3'' - z3' * z2'' \\<noteq> 0 &&&\n    z2' * z1'' - z1' * z2'' \\<noteq> 0 &&&\n    z1' * z3'' - z3' * z1'' \\<noteq> 0", "using complex_cvec_eq_mix[of z1' z1'' z3' z3'']"], ["proof (prove)\nusing this:\n  \\<not> z1 \\<approx>\\<^sub>v z2\n  \\<not> z2 \\<approx>\\<^sub>v z3\n  \\<not> z1 \\<approx>\\<^sub>v z3\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z3 \\<noteq> vec_zero\n  z1 = (z1', z1'')\n  z2 = (z2', z2'')\n  z3 = (z3', z3'')\n  \\<lbrakk>(z1', z1'') \\<noteq> vec_zero;\n   (z2', z2'') \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1', z1'') \\<approx>\\<^sub>v (z2', z2'')) =\n                    (z1' * z2'' = z1'' * z2')\n  \\<lbrakk>(z1', z1'') \\<noteq> vec_zero;\n   (z3', z3'') \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1', z1'') \\<approx>\\<^sub>v (z3', z3'')) =\n                    (z1' * z3'' = z1'' * z3')\n\ngoal (1 subgoal):\n 1. z2' * z3'' - z3' * z2'' \\<noteq> 0 &&&\n    z2' * z1'' - z1' * z2'' \\<noteq> 0 &&&\n    z1' * z3'' - z3' * z1'' \\<noteq> 0", "using complex_cvec_eq_mix[of z2' z2'' z3' z3'']"], ["proof (prove)\nusing this:\n  \\<not> z1 \\<approx>\\<^sub>v z2\n  \\<not> z2 \\<approx>\\<^sub>v z3\n  \\<not> z1 \\<approx>\\<^sub>v z3\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z3 \\<noteq> vec_zero\n  z1 = (z1', z1'')\n  z2 = (z2', z2'')\n  z3 = (z3', z3'')\n  \\<lbrakk>(z1', z1'') \\<noteq> vec_zero;\n   (z2', z2'') \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1', z1'') \\<approx>\\<^sub>v (z2', z2'')) =\n                    (z1' * z2'' = z1'' * z2')\n  \\<lbrakk>(z1', z1'') \\<noteq> vec_zero;\n   (z3', z3'') \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1', z1'') \\<approx>\\<^sub>v (z3', z3'')) =\n                    (z1' * z3'' = z1'' * z3')\n  \\<lbrakk>(z2', z2'') \\<noteq> vec_zero;\n   (z3', z3'') \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z2', z2'') \\<approx>\\<^sub>v (z3', z3'')) =\n                    (z2' * z3'' = z2'' * z3')\n\ngoal (1 subgoal):\n 1. z2' * z3'' - z3' * z2'' \\<noteq> 0 &&&\n    z2' * z1'' - z1' * z2'' \\<noteq> 0 &&&\n    z1' * z3'' - z3' * z1'' \\<noteq> 0", "by (auto simp del: complex_cvec_eq_def simp add: field_simps)"], ["proof (state)\nthis:\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "have \"mat_det ?M = ?m21*?m23*?m13\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det\n     (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n      z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2'')) =\n    (z2' * z1'' - z1' * z2'') * (z2' * z3'' - z3' * z2'') *\n    (z1' * z3'' - z3' * z1'')", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2'')) =\n  (z2' * z1'' - z1' * z2'') * (z2' * z3'' - z3' * z2'') *\n  (z1' * z3'' - z3' * z1'')\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "hence \"mat_det ?M \\<noteq> 0\""], ["proof (prove)\nusing this:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2'')) =\n  (z2' * z1'' - z1' * z2'') * (z2' * z3'' - z3' * z2'') *\n  (z1' * z3'' - z3' * z1'')\n\ngoal (1 subgoal):\n 1. mat_det\n     (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n      z3'' * (z2' * z1'' - z1' * z2''),\n      - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n    0", "using *"], ["proof (prove)\nusing this:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2'')) =\n  (z2' * z1'' - z1' * z2'') * (z2' * z3'' - z3' * z2'') *\n  (z1' * z3'' - z3' * z1'')\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mat_det\n     (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n      z3'' * (z2' * z1'' - z1' * z2''),\n      - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n    0", "by simp"], ["proof (state)\nthis:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''),\n    - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "moreover"], ["proof (state)\nthis:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''),\n    - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "have \"\\<forall>z\\<in>{v. v \\<noteq> vec_zero}. cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v moebius_pt_cmat_cvec ?M z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "assume \"z \\<in> {v. v \\<noteq> vec_zero}\""], ["proof (state)\nthis:\n  z \\<in> {v. v \\<noteq> vec_zero}\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "hence \"z \\<noteq> vec_zero\""], ["proof (prove)\nusing this:\n  z \\<in> {v. v \\<noteq> vec_zero}\n\ngoal (1 subgoal):\n 1. z \\<noteq> vec_zero", "by simp"], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "obtain z' z'' where zz: \"z = (z', z'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z' z''. z = (z', z'') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z', z'')\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "let ?m01 = \"z'*z1''-z1'*z''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "let ?m03 = \"z'*z3''-z3'*z''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "have \"?m01 \\<noteq> 0 \\<or> ?m03 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "proof (cases \"z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0 \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n 2. \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0) \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "case True"], ["proof (state)\nthis:\n  z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0\n\ngoal (2 subgoals):\n 1. z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0 \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n 2. \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0) \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0\n\ngoal (1 subgoal):\n 1. z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "using * \\<open>z \\<noteq> vec_zero\\<close>  zz"], ["proof (prove)\nusing this:\n  z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n  z \\<noteq> vec_zero\n  z = (z', z'')\n\ngoal (1 subgoal):\n 1. z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0) \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0) \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "case False"], ["proof (state)\nthis:\n  \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0) \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "hence 1: \"z'' \\<noteq> 0 \\<and> z1'' \\<noteq> 0 \\<and> z3'' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0)\n\ngoal (1 subgoal):\n 1. z'' \\<noteq> 0 \\<and> z1'' \\<noteq> 0 \\<and> z3'' \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  z'' \\<noteq> 0 \\<and> z1'' \\<noteq> 0 \\<and> z3'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (z'' = 0 \\<or> z1'' = 0 \\<or> z3'' = 0) \\<Longrightarrow>\n    z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (z' * z1'' - z1' * z'' \\<noteq> 0 \\<or>\n            z' * z3'' - z3' * z'' \\<noteq> 0) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (z' * z1'' - z1' * z'' \\<noteq> 0 \\<or>\n          z' * z3'' - z3' * z'' \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z' * z1'' - z1' * z'' \\<noteq> 0 \\<or>\n            z' * z3'' - z3' * z'' \\<noteq> 0) \\<Longrightarrow>\n    False", "hence \"z' * z1'' - z1' * z'' = 0\" \"z' * z3'' - z3' * z'' = 0\""], ["proof (prove)\nusing this:\n  \\<not> (z' * z1'' - z1' * z'' \\<noteq> 0 \\<or>\n          z' * z3'' - z3' * z'' \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. z' * z1'' - z1' * z'' = 0 &&& z' * z3'' - z3' * z'' = 0", "by auto"], ["proof (state)\nthis:\n  z' * z1'' - z1' * z'' = 0\n  z' * z3'' - z3' * z'' = 0\n\ngoal (1 subgoal):\n 1. \\<not> (z' * z1'' - z1' * z'' \\<noteq> 0 \\<or>\n            z' * z3'' - z3' * z'' \\<noteq> 0) \\<Longrightarrow>\n    False", "hence \"z1'/z1'' = z3'/z3''\""], ["proof (prove)\nusing this:\n  z' * z1'' - z1' * z'' = 0\n  z' * z3'' - z3' * z'' = 0\n\ngoal (1 subgoal):\n 1. z1' / z1'' = z3' / z3''", "using 1 zz \\<open>z \\<noteq> vec_zero\\<close>"], ["proof (prove)\nusing this:\n  z' * z1'' - z1' * z'' = 0\n  z' * z3'' - z3' * z'' = 0\n  z'' \\<noteq> 0 \\<and> z1'' \\<noteq> 0 \\<and> z3'' \\<noteq> 0\n  z = (z', z'')\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. z1' / z1'' = z3' / z3''", "by (metis frac_eq_eq right_minus_eq)"], ["proof (state)\nthis:\n  z1' / z1'' = z3' / z3''\n\ngoal (1 subgoal):\n 1. \\<not> (z' * z1'' - z1' * z'' \\<noteq> 0 \\<or>\n            z' * z3'' - z3' * z'' \\<noteq> 0) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  z1' / z1'' = z3' / z3''\n\ngoal (1 subgoal):\n 1. False", "using * 1"], ["proof (prove)\nusing this:\n  z1' / z1'' = z3' / z3''\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n  z'' \\<noteq> 0 \\<and> z1'' \\<noteq> 0 \\<and> z3'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "using frac_eq_eq"], ["proof (prove)\nusing this:\n  z1' / z1'' = z3' / z3''\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n  z'' \\<noteq> 0 \\<and> z1'' \\<noteq> 0 \\<and> z3'' \\<noteq> 0\n  \\<lbrakk>?y \\<noteq> (0::?'a); ?z \\<noteq> (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> (?x / ?y = ?w / ?z) = (?x * ?z = ?w * ?y)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "note * = * this"], ["proof (state)\nthis:\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n  z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n       moebius_pt_cmat_cvec\n        (z1'' * (z2' * z3'' - z3' * z2''),\n         - z1' * (z2' * z3'' - z3' * z2''),\n         z3'' * (z2' * z1'' - z1' * z2''),\n         - z3' * (z2' * z1'' - z1' * z2''))\n        z", "show \"cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v moebius_pt_cmat_cvec ?M z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n    moebius_pt_cmat_cvec\n     (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n      z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2''))\n     z", "using * zz zz1 zz2 zz3 mult_mv_nonzero[of \"z\" ?M] \\<open>mat_det ?M \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  z2' * z3'' - z3' * z2'' \\<noteq> 0\n  z2' * z1'' - z1' * z2'' \\<noteq> 0\n  z1' * z3'' - z3' * z1'' \\<noteq> 0\n  z' * z1'' - z1' * z'' \\<noteq> 0 \\<or> z' * z3'' - z3' * z'' \\<noteq> 0\n  z = (z', z'')\n  z1 = (z1', z1'')\n  z2 = (z2', z2'')\n  z3 = (z3', z3'')\n  \\<lbrakk>z \\<noteq> vec_zero;\n   mat_det\n    (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n     z3'' * (z2' * z1'' - z1' * z2''),\n     - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n   0\\<rbrakk>\n  \\<Longrightarrow> (z1'' * (z2' * z3'' - z3' * z2''),\n                     - z1' * (z2' * z3'' - z3' * z2''),\n                     z3'' * (z2' * z1'' - z1' * z2''),\n                     - z3' * (z2' * z1'' - z1' * z2'')) *\\<^sub>m\\<^sub>v\n                    z \\<noteq>\n                    vec_zero\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''),\n    - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n    moebius_pt_cmat_cvec\n     (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n      z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2''))\n     z", "by simp (rule_tac x=\"1\" in exI, simp add: field_simps)"], ["proof (state)\nthis:\n  cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n  moebius_pt_cmat_cvec\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2''))\n   z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n     cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n     moebius_pt_cmat_cvec\n      (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n       z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2''))\n      z\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z3 z1a z2a z3a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        z3 \\<noteq> vec_zero; \\<not> z1 \\<approx>\\<^sub>v z2;\n        \\<not> z2 \\<approx>\\<^sub>v z3; \\<not> z1 \\<approx>\\<^sub>v z3;\n        \\<not> z1a \\<approx> z2a; \\<not> z2a \\<approx> z3a;\n        \\<not> z1a \\<approx> z3a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n                            \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                               cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n                               moebius_pt_cmat_cvec M z", "ultimately"], ["proof (chain)\npicking this:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''),\n    - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n  0\n  \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n     cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n     moebius_pt_cmat_cvec\n      (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n       z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2''))\n      z", "show \"\\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n              \\<forall>z\\<in>{v. v \\<noteq> vec_zero}. cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v moebius_pt_cmat_cvec M z\""], ["proof (prove)\nusing this:\n  mat_det\n   (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n    z3'' * (z2' * z1'' - z1' * z2''),\n    - z3' * (z2' * z1'' - z1' * z2'')) \\<noteq>\n  0\n  \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n     cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n     moebius_pt_cmat_cvec\n      (z1'' * (z2' * z3'' - z3' * z2''), - z1' * (z2' * z3'' - z3' * z2''),\n       z3'' * (z2' * z1'' - z1' * z2''), - z3' * (z2' * z1'' - z1' * z2''))\n      z\n\ngoal (1 subgoal):\n 1. \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n       \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n          cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n          moebius_pt_cmat_cvec M z", "by blast"], ["proof (state)\nthis:\n  \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n     \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n        cross_ratio_cvec z z1 z2 z3 \\<approx>\\<^sub>v\n        moebius_pt_cmat_cvec M z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>M. \\<forall>z. cross_ratio z z1 z2 z3 = moebius_pt M z\n\ngoal (1 subgoal):\n 1. is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>M. \\<forall>z. cross_ratio z z1 z2 z3 = moebius_pt M z\n\ngoal (1 subgoal):\n 1. is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)", "by (auto simp add: is_moebius_def)"], ["proof (state)\nthis:\n  is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Using properties of the cross-ratio, it is shown that there is a M?bius transformation\nmapping any three different points to $0_{hc}$, $1_{hc}$ and $\\infty_{hc}$, respectively.\\<close>"], ["", "lemma ex_moebius_01inf:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  shows \"\\<exists> M. ((moebius_pt M z1 = 0\\<^sub>h) \\<and> (moebius_pt M z2 = 1\\<^sub>h) \\<and> (moebius_pt M z3 = \\<infinity>\\<^sub>h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = 0\\<^sub>h \\<and>\n       moebius_pt M z2 = 1\\<^sub>h \\<and>\n       moebius_pt M z3 = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = 0\\<^sub>h \\<and>\n       moebius_pt M z2 = 1\\<^sub>h \\<and>\n       moebius_pt M z3 = \\<infinity>\\<^sub>h", "using is_moebius_cross_ratio[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close> \\<open>z1 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)\n\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = 0\\<^sub>h \\<and>\n       moebius_pt M z2 = 1\\<^sub>h \\<and>\n       moebius_pt M z3 = \\<infinity>\\<^sub>h", "using cross_ratio_0[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z1 \\<noteq> z3\\<close>] cross_ratio_1[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close>] cross_ratio_inf[OF \\<open>z1 \\<noteq> z3\\<close> \\<open>z2 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)\n  cross_ratio z1 z1 z2 z3 = 0\\<^sub>h\n  cross_ratio z2 z1 z2 z3 = 1\\<^sub>h\n  cross_ratio z3 z1 z2 z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = 0\\<^sub>h \\<and>\n       moebius_pt M z2 = 1\\<^sub>h \\<and>\n       moebius_pt M z3 = \\<infinity>\\<^sub>h", "by (metis is_moebius_def)"], ["", "text \\<open>There is a M?bius transformation mapping any three different points to any three different\npoints.\\<close>"], ["", "lemma ex_moebius:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" \n          \"w1 \\<noteq> w2\" and \"w1 \\<noteq> w3\" and \"w2 \\<noteq> w3\"\n  shows \"\\<exists> M. ((moebius_pt M z1 = w1) \\<and> (moebius_pt M z2 = w2) \\<and> (moebius_pt M z3 = w3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "obtain M1 where *: \"moebius_pt M1 z1 = 0\\<^sub>h \\<and> moebius_pt M1 z2 = 1\\<^sub>h \\<and> moebius_pt M1 z3 = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M1.\n        moebius_pt M1 z1 = 0\\<^sub>h \\<and>\n        moebius_pt M1 z2 = 1\\<^sub>h \\<and>\n        moebius_pt M1 z3 = \\<infinity>\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_01inf[OF assms(1-3)]"], ["proof (prove)\nusing this:\n  \\<exists>M.\n     moebius_pt M z1 = 0\\<^sub>h \\<and>\n     moebius_pt M z2 = 1\\<^sub>h \\<and>\n     moebius_pt M z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>M1.\n        moebius_pt M1 z1 = 0\\<^sub>h \\<and>\n        moebius_pt M1 z2 = 1\\<^sub>h \\<and>\n        moebius_pt M1 z3 = \\<infinity>\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M1 z1 = 0\\<^sub>h \\<and>\n  moebius_pt M1 z2 = 1\\<^sub>h \\<and> moebius_pt M1 z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "obtain M2 where **: \"moebius_pt M2 w1 = 0\\<^sub>h \\<and> moebius_pt M2 w2 = 1\\<^sub>h \\<and> moebius_pt M2 w3 = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M2.\n        moebius_pt M2 w1 = 0\\<^sub>h \\<and>\n        moebius_pt M2 w2 = 1\\<^sub>h \\<and>\n        moebius_pt M2 w3 = \\<infinity>\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_01inf[OF assms(4-6)]"], ["proof (prove)\nusing this:\n  \\<exists>M.\n     moebius_pt M w1 = 0\\<^sub>h \\<and>\n     moebius_pt M w2 = 1\\<^sub>h \\<and>\n     moebius_pt M w3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>M2.\n        moebius_pt M2 w1 = 0\\<^sub>h \\<and>\n        moebius_pt M2 w2 = 1\\<^sub>h \\<and>\n        moebius_pt M2 w3 = \\<infinity>\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M2 w1 = 0\\<^sub>h \\<and>\n  moebius_pt M2 w2 = 1\\<^sub>h \\<and> moebius_pt M2 w3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "let ?M = \"moebius_comp (moebius_inv M2) M1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "using * **"], ["proof (prove)\nusing this:\n  moebius_pt M1 z1 = 0\\<^sub>h \\<and>\n  moebius_pt M1 z2 = 1\\<^sub>h \\<and> moebius_pt M1 z3 = \\<infinity>\\<^sub>h\n  moebius_pt M2 w1 = 0\\<^sub>h \\<and>\n  moebius_pt M2 w2 = 1\\<^sub>h \\<and> moebius_pt M2 w3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "by (rule_tac x=\"?M\" in exI, auto simp add: moebius_pt_invert)"], ["proof (state)\nthis:\n  \\<exists>M.\n     moebius_pt M z1 = w1 \\<and>\n     moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ex_moebius_1:\n  shows \"\\<exists> M. moebius_pt M z1 = w1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "obtain z2 z3 where \"z1 \\<noteq> z2\" \"z1 \\<noteq> z3\" \"z2 \\<noteq> z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z2 z3.\n        \\<lbrakk>z1 \\<noteq> z2; z1 \\<noteq> z3; z2 \\<noteq> z3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_3_different_points[of z1]"], ["proof (prove)\nusing this:\n  \\<exists>z1a z2.\n     z1 \\<noteq> z1a \\<and> z1a \\<noteq> z2 \\<and> z1 \\<noteq> z2\n\ngoal (1 subgoal):\n 1. (\\<And>z2 z3.\n        \\<lbrakk>z1 \\<noteq> z2; z1 \\<noteq> z3; z2 \\<noteq> z3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "moreover"], ["proof (state)\nthis:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "obtain w2 w3 where \"w1 \\<noteq> w2\" \"w1 \\<noteq> w3\" \"w2 \\<noteq> w3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>w2 w3.\n        \\<lbrakk>w1 \\<noteq> w2; w1 \\<noteq> w3; w2 \\<noteq> w3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_3_different_points[of w1]"], ["proof (prove)\nusing this:\n  \\<exists>z1 z2. w1 \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> w1 \\<noteq> z2\n\ngoal (1 subgoal):\n 1. (\\<And>w2 w3.\n        \\<lbrakk>w1 \\<noteq> w2; w1 \\<noteq> w3; w2 \\<noteq> w3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w1 \\<noteq> w2\n  w1 \\<noteq> w3\n  w2 \\<noteq> w3\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "ultimately"], ["proof (chain)\npicking this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  w1 \\<noteq> w2\n  w1 \\<noteq> w3\n  w2 \\<noteq> w3", "show ?thesis"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  w1 \\<noteq> w2\n  w1 \\<noteq> w3\n  w2 \\<noteq> w3\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "using ex_moebius[of z1 z2 z3 w1 w2 w3]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  w1 \\<noteq> w2\n  w1 \\<noteq> w3\n  w2 \\<noteq> w3\n  \\<lbrakk>z1 \\<noteq> z2; z1 \\<noteq> z3; z2 \\<noteq> z3; w1 \\<noteq> w2;\n   w1 \\<noteq> w3; w2 \\<noteq> w3\\<rbrakk>\n  \\<Longrightarrow> \\<exists>M.\n                       moebius_pt M z1 = w1 \\<and>\n                       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_pt M z1 = w1", "by auto"], ["proof (state)\nthis:\n  \\<exists>M. moebius_pt M z1 = w1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma turns out to have very important applications in further proof development, as\nit enables so called ,,without-loss-of-generality (wlog)'' reasoning \\cite{wlog}. Namely, if the\nproperty is preserved under M?bius transformations, then instead of three arbitrary different\npoints one can consider only the case of points $0_{hc}$, $1_{hc}$, and $\\infty_{hc}$.\\<close>"], ["", "lemma wlog_moebius_01inf:\n  fixes M::moebius\n  assumes \"P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\" and \"z1 \\<noteq> z2\" and \"z2 \\<noteq> z3\" and \"z1 \\<noteq> z3\"\n   \"\\<And> M a b c. P a b c \\<Longrightarrow> P (moebius_pt M a) (moebius_pt M b) (moebius_pt M c)\"\n  shows \"P z1 z2 z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P z1 z2 z3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P z1 z2 z3", "from assms"], ["proof (chain)\npicking this:\n  P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\n  z1 \\<noteq> z2\n  z2 \\<noteq> z3\n  z1 \\<noteq> z3\n  P ?a ?b ?c \\<Longrightarrow>\n  P (moebius_pt ?M ?a) (moebius_pt ?M ?b) (moebius_pt ?M ?c)", "obtain M where *:\n    \"moebius_pt M z1 = 0\\<^sub>h\"  \"moebius_pt M z2 = 1\\<^sub>h\"   \"moebius_pt M z3 = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\n  z1 \\<noteq> z2\n  z2 \\<noteq> z3\n  z1 \\<noteq> z3\n  P ?a ?b ?c \\<Longrightarrow>\n  P (moebius_pt ?M ?a) (moebius_pt ?M ?b) (moebius_pt ?M ?c)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M z1 = 0\\<^sub>h; moebius_pt M z2 = 1\\<^sub>h;\n         moebius_pt M z3 = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_01inf[of z1 z2 z3]"], ["proof (prove)\nusing this:\n  P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\n  z1 \\<noteq> z2\n  z2 \\<noteq> z3\n  z1 \\<noteq> z3\n  P ?a ?b ?c \\<Longrightarrow>\n  P (moebius_pt ?M ?a) (moebius_pt ?M ?b) (moebius_pt ?M ?c)\n  \\<lbrakk>z1 \\<noteq> z2; z1 \\<noteq> z3; z2 \\<noteq> z3\\<rbrakk>\n  \\<Longrightarrow> \\<exists>M.\n                       moebius_pt M z1 = 0\\<^sub>h \\<and>\n                       moebius_pt M z2 = 1\\<^sub>h \\<and>\n                       moebius_pt M z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M z1 = 0\\<^sub>h; moebius_pt M z2 = 1\\<^sub>h;\n         moebius_pt M z3 = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M z1 = 0\\<^sub>h\n  moebius_pt M z2 = 1\\<^sub>h\n  moebius_pt M z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. P z1 z2 z3", "have **: \"moebius_pt (moebius_inv M) 0\\<^sub>h = z1\"  \"moebius_pt (moebius_inv M) 1\\<^sub>h = z2\" \"moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) 0\\<^sub>h = z1 &&&\n    moebius_pt (moebius_inv M) 1\\<^sub>h = z2 &&&\n    moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = z3", "by (subst *[symmetric], simp)+"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) 0\\<^sub>h = z1\n  moebius_pt (moebius_inv M) 1\\<^sub>h = z2\n  moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = z3\n\ngoal (1 subgoal):\n 1. P z1 z2 z3", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_inv M) 0\\<^sub>h = z1\n  moebius_pt (moebius_inv M) 1\\<^sub>h = z2\n  moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = z3\n\ngoal (1 subgoal):\n 1. P z1 z2 z3", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_inv M) 0\\<^sub>h = z1\n  moebius_pt (moebius_inv M) 1\\<^sub>h = z2\n  moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = z3\n  P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\n  z1 \\<noteq> z2\n  z2 \\<noteq> z3\n  z1 \\<noteq> z3\n  P ?a ?b ?c \\<Longrightarrow>\n  P (moebius_pt ?M ?a) (moebius_pt ?M ?b) (moebius_pt ?M ?c)\n\ngoal (1 subgoal):\n 1. P z1 z2 z3", "by auto"], ["proof (state)\nthis:\n  P z1 z2 z3\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Fixed points and M?bius transformation uniqueness\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "lemma three_fixed_points_01inf:\n  assumes \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" and \"moebius_pt M 1\\<^sub>h = 1\\<^sub>h\" and \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"M = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M = id_moebius", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt M 0\\<^sub>h = 0\\<^sub>h\n  moebius_pt M 1\\<^sub>h = 1\\<^sub>h\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. M = id_moebius", "by (transfer, transfer, auto)"], ["", "lemma three_fixed_points:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  assumes \"moebius_pt M z1 = z1\" and \"moebius_pt M z2 = z2\" and \"moebius_pt M z3 = z3\"\n  shows \"M = id_moebius\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M = id_moebius", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. M = id_moebius", "from assms"], ["proof (chain)\npicking this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  moebius_pt M z1 = z1\n  moebius_pt M z2 = z2\n  moebius_pt M z3 = z3", "obtain M' where *: \"moebius_pt M' z1 = 0\\<^sub>h\"  \"moebius_pt M' z2 = 1\\<^sub>h\"   \"moebius_pt M' z3 = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  moebius_pt M z1 = z1\n  moebius_pt M z2 = z2\n  moebius_pt M z3 = z3\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        \\<lbrakk>moebius_pt M' z1 = 0\\<^sub>h; moebius_pt M' z2 = 1\\<^sub>h;\n         moebius_pt M' z3 = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_01inf[of z1 z2 z3]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  moebius_pt M z1 = z1\n  moebius_pt M z2 = z2\n  moebius_pt M z3 = z3\n  \\<lbrakk>z1 \\<noteq> z2; z1 \\<noteq> z3; z2 \\<noteq> z3\\<rbrakk>\n  \\<Longrightarrow> \\<exists>M.\n                       moebius_pt M z1 = 0\\<^sub>h \\<and>\n                       moebius_pt M z2 = 1\\<^sub>h \\<and>\n                       moebius_pt M z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        \\<lbrakk>moebius_pt M' z1 = 0\\<^sub>h; moebius_pt M' z2 = 1\\<^sub>h;\n         moebius_pt M' z3 = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M' z1 = 0\\<^sub>h\n  moebius_pt M' z2 = 1\\<^sub>h\n  moebius_pt M' z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. M = id_moebius", "have **: \"moebius_pt (moebius_inv M') 0\\<^sub>h = z1\"  \"moebius_pt (moebius_inv M') 1\\<^sub>h = z2\" \"moebius_pt (moebius_inv M') \\<infinity>\\<^sub>h = z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M') 0\\<^sub>h = z1 &&&\n    moebius_pt (moebius_inv M') 1\\<^sub>h = z2 &&&\n    moebius_pt (moebius_inv M') \\<infinity>\\<^sub>h = z3", "by (subst *[symmetric], simp)+"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M') 0\\<^sub>h = z1\n  moebius_pt (moebius_inv M') 1\\<^sub>h = z2\n  moebius_pt (moebius_inv M') \\<infinity>\\<^sub>h = z3\n\ngoal (1 subgoal):\n 1. M = id_moebius", "have \"M' + M + (-M') = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' + M + - M' = 0", "unfolding zero_moebius_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. M' + M + - M' = id_moebius", "apply (rule three_fixed_points_01inf)"], ["proof (prove)\ngoal (3 subgoals):\n 1. moebius_pt (M' + M + - M') 0\\<^sub>h = 0\\<^sub>h\n 2. moebius_pt (M' + M + - M') 1\\<^sub>h = 1\\<^sub>h\n 3. moebius_pt (M' + M + - M') \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "using * ** assms"], ["proof (prove)\nusing this:\n  moebius_pt M' z1 = 0\\<^sub>h\n  moebius_pt M' z2 = 1\\<^sub>h\n  moebius_pt M' z3 = \\<infinity>\\<^sub>h\n  moebius_pt (moebius_inv M') 0\\<^sub>h = z1\n  moebius_pt (moebius_inv M') 1\\<^sub>h = z2\n  moebius_pt (moebius_inv M') \\<infinity>\\<^sub>h = z3\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  moebius_pt M z1 = z1\n  moebius_pt M z2 = z2\n  moebius_pt M z3 = z3\n\ngoal (3 subgoals):\n 1. moebius_pt (M' + M + - M') 0\\<^sub>h = 0\\<^sub>h\n 2. moebius_pt (M' + M + - M') 1\\<^sub>h = 1\\<^sub>h\n 3. moebius_pt (M' + M + - M') \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "by (simp add: moebius_comp[symmetric])+"], ["proof (state)\nthis:\n  M' + M + - M' = 0\n\ngoal (1 subgoal):\n 1. M = id_moebius", "thus ?thesis"], ["proof (prove)\nusing this:\n  M' + M + - M' = 0\n\ngoal (1 subgoal):\n 1. M = id_moebius", "by (metis eq_neg_iff_add_eq_0 minus_add_cancel zero_moebius_def)"], ["proof (state)\nthis:\n  M = id_moebius\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_moebius_three_points:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  assumes \"moebius_pt M1 z1 = w1\" and \"moebius_pt M1 z2 = w2\" and \"moebius_pt M1 z3 = w3\"\n          \"moebius_pt M2 z1 = w1\" and \"moebius_pt M2 z2 = w2\" and \"moebius_pt M2 z3 = w3\"\n  shows \"M1 = M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 = M2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. M1 = M2", "let ?M = \"moebius_comp (moebius_inv M2) M1\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 = M2", "have \"moebius_pt ?M z1 = z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1", "using \\<open>moebius_pt M1 z1 = w1\\<close> \\<open>moebius_pt M2 z1 = w1\\<close>"], ["proof (prove)\nusing this:\n  moebius_pt M1 z1 = w1\n  moebius_pt M2 z1 = w1\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1", "by (auto simp add: moebius_pt_invert)"], ["proof (state)\nthis:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1\n\ngoal (1 subgoal):\n 1. M1 = M2", "moreover"], ["proof (state)\nthis:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1\n\ngoal (1 subgoal):\n 1. M1 = M2", "have \"moebius_pt ?M z2 = z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2", "using \\<open>moebius_pt M1 z2 = w2\\<close> \\<open>moebius_pt M2 z2 = w2\\<close>"], ["proof (prove)\nusing this:\n  moebius_pt M1 z2 = w2\n  moebius_pt M2 z2 = w2\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2", "by (auto simp add: moebius_pt_invert)"], ["proof (state)\nthis:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2\n\ngoal (1 subgoal):\n 1. M1 = M2", "moreover"], ["proof (state)\nthis:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2\n\ngoal (1 subgoal):\n 1. M1 = M2", "have \"moebius_pt ?M z3 = z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp (moebius_inv M2) M1) z3 = z3", "using \\<open>moebius_pt M1 z3 = w3\\<close> \\<open>moebius_pt M2 z3 = w3\\<close>"], ["proof (prove)\nusing this:\n  moebius_pt M1 z3 = w3\n  moebius_pt M2 z3 = w3\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_comp (moebius_inv M2) M1) z3 = z3", "by (auto simp add: moebius_pt_invert)"], ["proof (state)\nthis:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z3 = z3\n\ngoal (1 subgoal):\n 1. M1 = M2", "ultimately"], ["proof (chain)\npicking this:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z3 = z3", "have \"?M = id_moebius\""], ["proof (prove)\nusing this:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z3 = z3\n\ngoal (1 subgoal):\n 1. moebius_comp (moebius_inv M2) M1 = id_moebius", "using assms three_fixed_points"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z1 = z1\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z2 = z2\n  moebius_pt (moebius_comp (moebius_inv M2) M1) z3 = z3\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  moebius_pt M1 z1 = w1\n  moebius_pt M1 z2 = w2\n  moebius_pt M1 z3 = w3\n  moebius_pt M2 z1 = w1\n  moebius_pt M2 z2 = w2\n  moebius_pt M2 z3 = w3\n  \\<lbrakk>?z1.0 \\<noteq> ?z2.0; ?z1.0 \\<noteq> ?z3.0; ?z2.0 \\<noteq> ?z3.0;\n   moebius_pt ?M ?z1.0 = ?z1.0; moebius_pt ?M ?z2.0 = ?z2.0;\n   moebius_pt ?M ?z3.0 = ?z3.0\\<rbrakk>\n  \\<Longrightarrow> ?M = id_moebius\n\ngoal (1 subgoal):\n 1. moebius_comp (moebius_inv M2) M1 = id_moebius", "by auto"], ["proof (state)\nthis:\n  moebius_comp (moebius_inv M2) M1 = id_moebius\n\ngoal (1 subgoal):\n 1. M1 = M2", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_comp (moebius_inv M2) M1 = id_moebius\n\ngoal (1 subgoal):\n 1. M1 = M2", "by (metis add_minus_cancel left_minus plus_moebius_def uminus_moebius_def zero_moebius_def)"], ["proof (state)\nthis:\n  M1 = M2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>There is a unique M?bius transformation mapping three different points to other three\ndifferent points.\\<close>"], ["", "lemma ex_unique_moebius_three_points:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" \n          \"w1 \\<noteq> w2\" and \"w1 \\<noteq> w3\" and \"w2 \\<noteq> w3\"\n  shows \"\\<exists>! M. ((moebius_pt M z1 = w1) \\<and> (moebius_pt M z2 = w2) \\<and> (moebius_pt M z3 = w3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "obtain M where *: \"moebius_pt M z1 = w1 \\<and> moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M z1 = w1 \\<and>\n        moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>M.\n     moebius_pt M z1 = w1 \\<and>\n     moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M z1 = w1 \\<and>\n        moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M z1 = w1 \\<and>\n  moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. \\<exists>!M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!M.\n       moebius_pt M z1 = w1 \\<and>\n       moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "unfolding Ex1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (moebius_pt x z1 = w1 \\<and>\n        moebius_pt x z2 = w2 \\<and> moebius_pt x z3 = w3) \\<and>\n       (\\<forall>y.\n           moebius_pt y z1 = w1 \\<and>\n           moebius_pt y z2 = w2 \\<and>\n           moebius_pt y z3 = w3 \\<longrightarrow>\n           y = x)", "proof (rule_tac x=\"M\" in exI, rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. moebius_pt M z1 = w1 \\<and>\n    moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n 2. \\<forall>y.\n       moebius_pt y z1 = w1 \\<and>\n       moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow>\n       y = M", "show \"\\<forall>y. moebius_pt y z1 = w1 \\<and> moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow> y = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y.\n       moebius_pt y z1 = w1 \\<and>\n       moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow>\n       y = M", "using *"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = w1 \\<and>\n  moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       moebius_pt y z1 = w1 \\<and>\n       moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow>\n       y = M", "using unique_moebius_three_points[OF assms(1-3)]"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = w1 \\<and>\n  moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n  \\<lbrakk>moebius_pt ?M1.0 z1 = ?w1.0; moebius_pt ?M1.0 z2 = ?w2.0;\n   moebius_pt ?M1.0 z3 = ?w3.0; moebius_pt ?M2.0 z1 = ?w1.0;\n   moebius_pt ?M2.0 z2 = ?w2.0; moebius_pt ?M2.0 z3 = ?w3.0\\<rbrakk>\n  \\<Longrightarrow> ?M1.0 = ?M2.0\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       moebius_pt y z1 = w1 \\<and>\n       moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow>\n       y = M", "by simp"], ["proof (state)\nthis:\n  \\<forall>y.\n     moebius_pt y z1 = w1 \\<and>\n     moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow>\n     y = M\n\ngoal (1 subgoal):\n 1. moebius_pt M z1 = w1 \\<and>\n    moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3", "qed (simp add: *)"], ["proof (state)\nthis:\n  \\<exists>!M.\n     moebius_pt M z1 = w1 \\<and>\n     moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ex_unique_moebius_three_points_fun:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" \n          \"w1 \\<noteq> w2\" and \"w1 \\<noteq> w3\" and \"w2 \\<noteq> w3\"\n  shows \"\\<exists>! f. is_moebius f \\<and> (f z1 = w1) \\<and> (f z2 = w2) \\<and> (f z3 = w3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!f.\n       is_moebius f \\<and> f z1 = w1 \\<and> f z2 = w2 \\<and> f z3 = w3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!f.\n       is_moebius f \\<and> f z1 = w1 \\<and> f z2 = w2 \\<and> f z3 = w3", "obtain M where \"moebius_pt M z1 = w1\" \"moebius_pt M z2 = w2\" \"moebius_pt M z3 = w3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M z1 = w1; moebius_pt M z2 = w2;\n         moebius_pt M z3 = w3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_unique_moebius_three_points[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>!M.\n     moebius_pt M z1 = w1 \\<and>\n     moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M z1 = w1; moebius_pt M z2 = w2;\n         moebius_pt M z3 = w3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M z1 = w1\n  moebius_pt M z2 = w2\n  moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. \\<exists>!f.\n       is_moebius f \\<and> f z1 = w1 \\<and> f z2 = w2 \\<and> f z3 = w3", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = w1\n  moebius_pt M z2 = w2\n  moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. \\<exists>!f.\n       is_moebius f \\<and> f z1 = w1 \\<and> f z2 = w2 \\<and> f z3 = w3", "using ex_unique_moebius_three_points[OF assms]"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = w1\n  moebius_pt M z2 = w2\n  moebius_pt M z3 = w3\n  \\<exists>!M.\n     moebius_pt M z1 = w1 \\<and>\n     moebius_pt M z2 = w2 \\<and> moebius_pt M z3 = w3\n\ngoal (1 subgoal):\n 1. \\<exists>!f.\n       is_moebius f \\<and> f z1 = w1 \\<and> f z2 = w2 \\<and> f z3 = w3", "unfolding Ex1_def"], ["proof (prove)\nusing this:\n  moebius_pt M z1 = w1\n  moebius_pt M z2 = w2\n  moebius_pt M z3 = w3\n  \\<exists>x.\n     (moebius_pt x z1 = w1 \\<and>\n      moebius_pt x z2 = w2 \\<and> moebius_pt x z3 = w3) \\<and>\n     (\\<forall>y.\n         moebius_pt y z1 = w1 \\<and>\n         moebius_pt y z2 = w2 \\<and> moebius_pt y z3 = w3 \\<longrightarrow>\n         y = x)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (is_moebius x \\<and>\n        x z1 = w1 \\<and> x z2 = w2 \\<and> x z3 = w3) \\<and>\n       (\\<forall>y.\n           is_moebius y \\<and>\n           y z1 = w1 \\<and> y z2 = w2 \\<and> y z3 = w3 \\<longrightarrow>\n           y = x)", "by (rule_tac x=\"moebius_pt M\" in exI) (auto simp add: is_moebius_def)"], ["proof (state)\nthis:\n  \\<exists>!f.\n     is_moebius f \\<and> f z1 = w1 \\<and> f z2 = w2 \\<and> f z3 = w3\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Different M?bius transformations produce different actions.\\<close>"], ["", "lemma unique_moebius_pt:\n  assumes \"moebius_pt M1 = moebius_pt M2\"\n  shows \"M1 = M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 = M2", "using assms unique_moebius_three_points[of \"0\\<^sub>h\" \"1\\<^sub>h\" \"\\<infinity>\\<^sub>h\"]"], ["proof (prove)\nusing this:\n  moebius_pt M1 = moebius_pt M2\n  \\<lbrakk>0\\<^sub>h \\<noteq> 1\\<^sub>h;\n   0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h;\n   1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h;\n   moebius_pt ?M1.0 0\\<^sub>h = ?w1.0; moebius_pt ?M1.0 1\\<^sub>h = ?w2.0;\n   moebius_pt ?M1.0 \\<infinity>\\<^sub>h = ?w3.0;\n   moebius_pt ?M2.0 0\\<^sub>h = ?w1.0; moebius_pt ?M2.0 1\\<^sub>h = ?w2.0;\n   moebius_pt ?M2.0 \\<infinity>\\<^sub>h = ?w3.0\\<rbrakk>\n  \\<Longrightarrow> ?M1.0 = ?M2.0\n\ngoal (1 subgoal):\n 1. M1 = M2", "by auto"], ["", "lemma is_cross_ratio_01inf:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\" and \"is_moebius f\"\n  assumes \"f z1 = 0\\<^sub>h\" and \"f z2 = 1\\<^sub>h\" and \"f z3 = \\<infinity>\\<^sub>h\"\n  shows \"f = (\\<lambda> z. cross_ratio z z1 z2 z3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>z. cross_ratio z z1 z2 z3)", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  is_moebius f\n  f z1 = 0\\<^sub>h\n  f z2 = 1\\<^sub>h\n  f z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. f = (\\<lambda>z. cross_ratio z z1 z2 z3)", "using cross_ratio_0[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z1 \\<noteq> z3\\<close>] cross_ratio_1[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close>] cross_ratio_inf[OF \\<open>z1 \\<noteq> z3\\<close> \\<open>z2 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  is_moebius f\n  f z1 = 0\\<^sub>h\n  f z2 = 1\\<^sub>h\n  f z3 = \\<infinity>\\<^sub>h\n  cross_ratio z1 z1 z2 z3 = 0\\<^sub>h\n  cross_ratio z2 z1 z2 z3 = 1\\<^sub>h\n  cross_ratio z3 z1 z2 z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. f = (\\<lambda>z. cross_ratio z z1 z2 z3)", "using is_moebius_cross_ratio[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close> \\<open>z1 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  is_moebius f\n  f z1 = 0\\<^sub>h\n  f z2 = 1\\<^sub>h\n  f z3 = \\<infinity>\\<^sub>h\n  cross_ratio z1 z1 z2 z3 = 0\\<^sub>h\n  cross_ratio z2 z1 z2 z3 = 1\\<^sub>h\n  cross_ratio z3 z1 z2 z3 = \\<infinity>\\<^sub>h\n  is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)\n\ngoal (1 subgoal):\n 1. f = (\\<lambda>z. cross_ratio z z1 z2 z3)", "using ex_unique_moebius_three_points_fun[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z1 \\<noteq> z3\\<close> \\<open>z2 \\<noteq> z3\\<close>, of \"0\\<^sub>h\" \"1\\<^sub>h\" \"\\<infinity>\\<^sub>h\"]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  is_moebius f\n  f z1 = 0\\<^sub>h\n  f z2 = 1\\<^sub>h\n  f z3 = \\<infinity>\\<^sub>h\n  cross_ratio z1 z1 z2 z3 = 0\\<^sub>h\n  cross_ratio z2 z1 z2 z3 = 1\\<^sub>h\n  cross_ratio z3 z1 z2 z3 = \\<infinity>\\<^sub>h\n  is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)\n  \\<lbrakk>0\\<^sub>h \\<noteq> 1\\<^sub>h;\n   0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h;\n   1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!f.\n                       is_moebius f \\<and>\n                       f z1 = 0\\<^sub>h \\<and>\n                       f z2 = 1\\<^sub>h \\<and> f z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. f = (\\<lambda>z. cross_ratio z z1 z2 z3)", "by auto"], ["", "text \\<open>M?bius transformations preserve cross-ratio.\\<close>"], ["", "lemma moebius_preserve_cross_ratio [simp]:\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  shows \"cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3) =\n         cross_ratio z z1 z2 z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "let ?f = \"\\<lambda> z. cross_ratio z z1 z2 z3\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "let ?M = \"moebius_pt M\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "let ?iM = \"inv ?M\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"(?f \\<circ> ?iM) (?M z1) = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z1) =\n    0\\<^sub>h", "using bij_moebius_pt[of M] cross_ratio_0[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z1 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  bij (moebius_pt M)\n  cross_ratio z1 z1 z2 z3 = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z1) =\n    0\\<^sub>h", "by (simp add: bij_def)"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z1) =\n  0\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z1) =\n  0\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"(?f \\<circ> ?iM) (?M z2) = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z2) =\n    1\\<^sub>h", "using bij_moebius_pt[of M]  cross_ratio_1[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  bij (moebius_pt M)\n  cross_ratio z2 z1 z2 z3 = 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z2) =\n    1\\<^sub>h", "by (simp add: bij_def)"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z2) =\n  1\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z2) =\n  1\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"(?f \\<circ> ?iM) (?M z3) = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z3) =\n    \\<infinity>\\<^sub>h", "using bij_moebius_pt[of M] cross_ratio_inf[OF \\<open>z1 \\<noteq> z3\\<close> \\<open>z2 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  bij (moebius_pt M)\n  cross_ratio z3 z1 z2 z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z3) =\n    \\<infinity>\\<^sub>h", "by (simp add: bij_def)"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z3) =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z3) =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"is_moebius (?f \\<circ> ?iM)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_moebius\n     ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))", "by (rule is_moebius_comp, rule is_moebius_cross_ratio[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close> \\<open>z1 \\<noteq> z3\\<close>], rule is_moebius_inv, auto simp add: is_moebius_def)"], ["proof (state)\nthis:\n  is_moebius\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "moreover"], ["proof (state)\nthis:\n  is_moebius\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"?M z1 \\<noteq> ?M z2\" \"?M z1 \\<noteq> ?M z3\"  \"?M z2 \\<noteq> ?M z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M z1 \\<noteq> moebius_pt M z2 &&&\n    moebius_pt M z1 \\<noteq> moebius_pt M z3 &&&\n    moebius_pt M z2 \\<noteq> moebius_pt M z3", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. moebius_pt M z1 \\<noteq> moebius_pt M z2 &&&\n    moebius_pt M z1 \\<noteq> moebius_pt M z3 &&&\n    moebius_pt M z2 \\<noteq> moebius_pt M z3", "by simp_all"], ["proof (state)\nthis:\n  moebius_pt M z1 \\<noteq> moebius_pt M z2\n  moebius_pt M z1 \\<noteq> moebius_pt M z3\n  moebius_pt M z2 \\<noteq> moebius_pt M z3\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z1) =\n  0\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z2) =\n  1\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n  moebius_pt M z1 \\<noteq> moebius_pt M z2\n  moebius_pt M z1 \\<noteq> moebius_pt M z3\n  moebius_pt M z2 \\<noteq> moebius_pt M z3", "have \"?f \\<circ> ?iM = (\\<lambda> z. cross_ratio z (?M z1) (?M z2) (?M z3))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z1) =\n  0\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z2) =\n  1\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n  moebius_pt M z1 \\<noteq> moebius_pt M z2\n  moebius_pt M z1 \\<noteq> moebius_pt M z3\n  moebius_pt M z2 \\<noteq> moebius_pt M z3\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n    (\\<lambda>z.\n        cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))", "using assms"], ["proof (prove)\nusing this:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z1) =\n  0\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z2) =\n  1\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n  moebius_pt M z1 \\<noteq> moebius_pt M z2\n  moebius_pt M z1 \\<noteq> moebius_pt M z3\n  moebius_pt M z2 \\<noteq> moebius_pt M z3\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n    (\\<lambda>z.\n        cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))", "using is_cross_ratio_01inf[of \"?M z1\" \"?M z2\" \"?M z3\" \"?f \\<circ> ?iM\"]"], ["proof (prove)\nusing this:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z1) =\n  0\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z2) =\n  1\\<^sub>h\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n  moebius_pt M z1 \\<noteq> moebius_pt M z2\n  moebius_pt M z1 \\<noteq> moebius_pt M z3\n  moebius_pt M z2 \\<noteq> moebius_pt M z3\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  \\<lbrakk>moebius_pt M z1 \\<noteq> moebius_pt M z2;\n   moebius_pt M z1 \\<noteq> moebius_pt M z3;\n   moebius_pt M z2 \\<noteq> moebius_pt M z3;\n   is_moebius\n    ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M));\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n    (moebius_pt M z1) =\n   0\\<^sub>h;\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n    (moebius_pt M z2) =\n   1\\<^sub>h;\n   ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n    (moebius_pt M z3) =\n   \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n                    inv (moebius_pt M) =\n                    (\\<lambda>z.\n                        cross_ratio z (moebius_pt M z1) (moebius_pt M z2)\n                         (moebius_pt M z3))\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n    (\\<lambda>z.\n        cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n  (\\<lambda>z.\n      cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n  (\\<lambda>z.\n      cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"(?f \\<circ> ?iM) (?M z) = cross_ratio z z1 z2 z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z) =\n    cross_ratio z z1 z2 z3", "using bij_moebius_pt[of M]"], ["proof (prove)\nusing this:\n  bij (moebius_pt M)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n     (moebius_pt M z) =\n    cross_ratio z z1 z2 z3", "by (simp add: bij_def)"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z) =\n  cross_ratio z z1 z2 z3\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z) =\n  cross_ratio z z1 z2 z3\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "have \"(\\<lambda> z. cross_ratio z (?M z1) (?M z2) (?M z3)) (?M z) = cross_ratio (?M z) (?M z1) (?M z2) (?M z3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3)", "by simp"], ["proof (state)\nthis:\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3) =\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3)\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n  (\\<lambda>z.\n      cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z) =\n  cross_ratio z z1 z2 z3\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3) =\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M) =\n  (\\<lambda>z.\n      cross_ratio z (moebius_pt M z1) (moebius_pt M z2) (moebius_pt M z3))\n  ((\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> inv (moebius_pt M))\n   (moebius_pt M z) =\n  cross_ratio z z1 z2 z3\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3) =\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3)\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_pt M z3) =\n    cross_ratio z z1 z2 z3", "by simp"], ["proof (state)\nthis:\n  cross_ratio (moebius_pt M z) (moebius_pt M z1) (moebius_pt M z2)\n   (moebius_pt M z3) =\n  cross_ratio z z1 z2 z3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugate_cross_ratio [simp]:                                  \n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> z3\" and \"z2 \\<noteq> z3\"\n  shows \"cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n         conjugate (cross_ratio z z1 z2 z3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "let ?f = \"\\<lambda> z. cross_ratio z z1 z2 z3\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "let ?M = \"conjugate\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "let ?iM = \"conjugate\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"(conjugate \\<circ> ?f \\<circ> ?iM) (?M z1) = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z1) =\n    0\\<^sub>h", "using cross_ratio_0[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z1 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  cross_ratio z1 z1 z2 z3 = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z1) =\n    0\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z1) =\n  0\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "moreover"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z1) =\n  0\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"(conjugate \\<circ> ?f \\<circ> ?iM) (?M z2) = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z2) =\n    1\\<^sub>h", "using cross_ratio_1[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  cross_ratio z2 z1 z2 z3 = 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z2) =\n    1\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z2) =\n  1\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "moreover"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z2) =\n  1\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"(conjugate \\<circ> ?f \\<circ> ?iM) (?M z3) = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z3) =\n    \\<infinity>\\<^sub>h", "using cross_ratio_inf[OF \\<open>z1 \\<noteq> z3\\<close> \\<open>z2 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  cross_ratio z3 z1 z2 z3 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z3) =\n    \\<infinity>\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z3) =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "moreover"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z3) =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"is_moebius (conjugate \\<circ> ?f \\<circ> ?iM)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_moebius\n     (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n      conjugate)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_moebius\n     (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n      conjugate)", "obtain M where \"?f = moebius_pt M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z z1 z2 z3) =\n        moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using is_moebius_cross_ratio[OF \\<open>z1 \\<noteq> z2\\<close> \\<open>z2 \\<noteq> z3\\<close> \\<open>z1 \\<noteq> z3\\<close>]"], ["proof (prove)\nusing this:\n  is_moebius (\\<lambda>z. cross_ratio z z1 z2 z3)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z z1 z2 z3) =\n        moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: is_moebius_def)"], ["proof (state)\nthis:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) = moebius_pt M\n\ngoal (1 subgoal):\n 1. is_moebius\n     (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n      conjugate)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) = moebius_pt M\n\ngoal (1 subgoal):\n 1. is_moebius\n     (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n      conjugate)", "using conjugate_moebius[of M]"], ["proof (prove)\nusing this:\n  (\\<lambda>z. cross_ratio z z1 z2 z3) = moebius_pt M\n  conjugate \\<circ> moebius_pt M =\n  moebius_pt (conjugate_moebius M) \\<circ> conjugate\n\ngoal (1 subgoal):\n 1. is_moebius\n     (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n      conjugate)", "by (auto simp add: comp_assoc is_moebius_def)"], ["proof (state)\nthis:\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "moreover"], ["proof (state)\nthis:\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"?M z1 \\<noteq> ?M z2\" \"?M z1 \\<noteq> ?M z3\"  \"?M z2 \\<noteq> ?M z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate z1 \\<noteq> conjugate z2 &&&\n    conjugate z1 \\<noteq> conjugate z3 &&&\n    conjugate z2 \\<noteq> conjugate z3", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. conjugate z1 \\<noteq> conjugate z2 &&&\n    conjugate z1 \\<noteq> conjugate z3 &&&\n    conjugate z2 \\<noteq> conjugate z3", "by (auto simp add: conjugate_inj)"], ["proof (state)\nthis:\n  conjugate z1 \\<noteq> conjugate z2\n  conjugate z1 \\<noteq> conjugate z3\n  conjugate z2 \\<noteq> conjugate z3\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "ultimately"], ["proof (chain)\npicking this:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z1) =\n  0\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z2) =\n  1\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n  conjugate z1 \\<noteq> conjugate z2\n  conjugate z1 \\<noteq> conjugate z3\n  conjugate z2 \\<noteq> conjugate z3", "have \"conjugate \\<circ> ?f \\<circ> ?iM = (\\<lambda> z. cross_ratio z (?M z1) (?M z2) (?M z3))\""], ["proof (prove)\nusing this:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z1) =\n  0\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z2) =\n  1\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n  conjugate z1 \\<noteq> conjugate z2\n  conjugate z1 \\<noteq> conjugate z3\n  conjugate z2 \\<noteq> conjugate z3\n\ngoal (1 subgoal):\n 1. conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate =\n    (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))", "using assms"], ["proof (prove)\nusing this:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z1) =\n  0\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z2) =\n  1\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n  conjugate z1 \\<noteq> conjugate z2\n  conjugate z1 \\<noteq> conjugate z3\n  conjugate z2 \\<noteq> conjugate z3\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n\ngoal (1 subgoal):\n 1. conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate =\n    (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))", "using is_cross_ratio_01inf[of \"?M z1\" \"?M z2\" \"?M z3\" \"conjugate \\<circ> ?f \\<circ> ?iM\"]"], ["proof (prove)\nusing this:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z1) =\n  0\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z2) =\n  1\\<^sub>h\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z3) =\n  \\<infinity>\\<^sub>h\n  is_moebius\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n  conjugate z1 \\<noteq> conjugate z2\n  conjugate z1 \\<noteq> conjugate z3\n  conjugate z2 \\<noteq> conjugate z3\n  z1 \\<noteq> z2\n  z1 \\<noteq> z3\n  z2 \\<noteq> z3\n  \\<lbrakk>conjugate z1 \\<noteq> conjugate z2;\n   conjugate z1 \\<noteq> conjugate z3; conjugate z2 \\<noteq> conjugate z3;\n   is_moebius\n    (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate);\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n    (conjugate z1) =\n   0\\<^sub>h;\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n    (conjugate z2) =\n   1\\<^sub>h;\n   (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate)\n    (conjugate z3) =\n   \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> conjugate \\<circ>\n                    (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n                    conjugate =\n                    (\\<lambda>z.\n                        cross_ratio z (conjugate z1) (conjugate z2)\n                         (conjugate z3))\n\ngoal (1 subgoal):\n 1. conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n    conjugate =\n    (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))", "by simp"], ["proof (state)\nthis:\n  conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate =\n  (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "moreover"], ["proof (state)\nthis:\n  conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate =\n  (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"(conjugate \\<circ> ?f \\<circ> ?iM) (?M z) = conjugate (cross_ratio z z1 z2 z3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ>\n     conjugate)\n     (conjugate z) =\n    conjugate (cross_ratio z z1 z2 z3)", "by simp"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z) =\n  conjugate (cross_ratio z z1 z2 z3)\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "moreover"], ["proof (state)\nthis:\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z) =\n  conjugate (cross_ratio z z1 z2 z3)\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "have \"(\\<lambda> z. cross_ratio z (?M z1) (?M z2) (?M z3)) (?M z) = cross_ratio (?M z) (?M z1) (?M z2) (?M z3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3)", "by simp"], ["proof (state)\nthis:\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3)\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "ultimately"], ["proof (chain)\npicking this:\n  conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate =\n  (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z) =\n  conjugate (cross_ratio z z1 z2 z3)\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3)", "show ?thesis"], ["proof (prove)\nusing this:\n  conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate =\n  (\\<lambda>z. cross_ratio z (conjugate z1) (conjugate z2) (conjugate z3))\n  (conjugate \\<circ> (\\<lambda>z. cross_ratio z z1 z2 z3) \\<circ> conjugate)\n   (conjugate z) =\n  conjugate (cross_ratio z z1 z2 z3)\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3)\n\ngoal (1 subgoal):\n 1. cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n    conjugate (cross_ratio z z1 z2 z3)", "by simp"], ["proof (state)\nthis:\n  cross_ratio (conjugate z) (conjugate z1) (conjugate z2) (conjugate z3) =\n  conjugate (cross_ratio z z1 z2 z3)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_reciprocal [simp]:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\" and \"u \\<noteq> w\"\n  shows \"cross_ratio (reciprocal z) (reciprocal u) (reciprocal v) (reciprocal w) = \n         cross_ratio z u v w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (reciprocal z) (reciprocal u) (reciprocal v)\n     (reciprocal w) =\n    cross_ratio z u v w", "using assms"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  v \\<noteq> w\n  u \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio (reciprocal z) (reciprocal u) (reciprocal v)\n     (reciprocal w) =\n    cross_ratio z u v w", "by (subst moebius_reciprocal[symmetric])+ (simp del: moebius_reciprocal)"], ["", "lemma cross_ratio_inversion [simp]:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\" and \"u \\<noteq> w\"\n  shows \"cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) = \n         conjugate (cross_ratio z u v w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) =\n    conjugate (cross_ratio z u v w)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) =\n    conjugate (cross_ratio z u v w)", "have \"reciprocal u \\<noteq> reciprocal v\" \"reciprocal u \\<noteq> reciprocal w\" \"reciprocal v \\<noteq> reciprocal w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reciprocal u \\<noteq> reciprocal v &&&\n    reciprocal u \\<noteq> reciprocal w &&&\n    reciprocal v \\<noteq> reciprocal w", "using assms"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  v \\<noteq> w\n  u \\<noteq> w\n\ngoal (1 subgoal):\n 1. reciprocal u \\<noteq> reciprocal v &&&\n    reciprocal u \\<noteq> reciprocal w &&&\n    reciprocal v \\<noteq> reciprocal w", "by ((subst moebius_reciprocal[symmetric])+, simp del: moebius_reciprocal)+"], ["proof (state)\nthis:\n  reciprocal u \\<noteq> reciprocal v\n  reciprocal u \\<noteq> reciprocal w\n  reciprocal v \\<noteq> reciprocal w\n\ngoal (1 subgoal):\n 1. cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) =\n    conjugate (cross_ratio z u v w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  reciprocal u \\<noteq> reciprocal v\n  reciprocal u \\<noteq> reciprocal w\n  reciprocal v \\<noteq> reciprocal w\n\ngoal (1 subgoal):\n 1. cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) =\n    conjugate (cross_ratio z u v w)", "using assms"], ["proof (prove)\nusing this:\n  reciprocal u \\<noteq> reciprocal v\n  reciprocal u \\<noteq> reciprocal w\n  reciprocal v \\<noteq> reciprocal w\n  u \\<noteq> v\n  v \\<noteq> w\n  u \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) =\n    conjugate (cross_ratio z u v w)", "unfolding inversion_def"], ["proof (prove)\nusing this:\n  reciprocal u \\<noteq> reciprocal v\n  reciprocal u \\<noteq> reciprocal w\n  reciprocal v \\<noteq> reciprocal w\n  u \\<noteq> v\n  v \\<noteq> w\n  u \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio ((conjugate \\<circ> reciprocal) z)\n     ((conjugate \\<circ> reciprocal) u) ((conjugate \\<circ> reciprocal) v)\n     ((conjugate \\<circ> reciprocal) w) =\n    conjugate (cross_ratio z u v w)", "by simp"], ["proof (state)\nthis:\n  cross_ratio (inversion z) (inversion u) (inversion v) (inversion w) =\n  conjugate (cross_ratio z u v w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fixed_points_0inf':\n  assumes \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" and \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"\\<exists> k::complex_homo. (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and> (\\<forall> z. moebius_pt M z = k *\\<^sub>h z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and>\n       (\\<forall>z. moebius_pt M z = k *\\<^sub>h z)", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt M 0\\<^sub>h = 0\\<^sub>h\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and>\n       (\\<forall>z. moebius_pt M z = k *\\<^sub>h z)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "fix M :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "obtain a b c d where MM: \"M = (a, b, c, d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        M = (a, b, c, d) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases M) auto"], ["proof (state)\nthis:\n  M = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "assume \"moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v\" \"moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v\n  moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "hence *: \"b = 0\" \"c = 0\" \"a \\<noteq> 0 \\<and> d \\<noteq> 0\""], ["proof (prove)\nusing this:\n  moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v\n  moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. b = 0 &&& c = 0 &&& a \\<noteq> 0 \\<and> d \\<noteq> 0", "using MM"], ["proof (prove)\nusing this:\n  moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v\n  moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  \\<infinity>\\<^sub>v\n  M = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. b = 0 &&& c = 0 &&& a \\<noteq> 0 \\<and> d \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  b = 0\n  c = 0\n  a \\<noteq> 0 \\<and> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "let ?z = \"(a, d)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "have \"?z \\<noteq> vec_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, d) \\<noteq> vec_zero", "using *"], ["proof (prove)\nusing this:\n  b = 0\n  c = 0\n  a \\<noteq> 0 \\<and> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (a, d) \\<noteq> vec_zero", "by simp"], ["proof (state)\nthis:\n  (a, d) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "moreover"], ["proof (state)\nthis:\n  (a, d) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "have \"\\<not> ?z \\<approx>\\<^sub>v 0\\<^sub>v \\<and> \\<not> ?z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (a, d) \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n    \\<not> (a, d) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "using *"], ["proof (prove)\nusing this:\n  b = 0\n  c = 0\n  a \\<noteq> 0 \\<and> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (a, d) \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n    \\<not> (a, d) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "by simp"], ["proof (state)\nthis:\n  \\<not> (a, d) \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n  \\<not> (a, d) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "moreover"], ["proof (state)\nthis:\n  \\<not> (a, d) \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n  \\<not> (a, d) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "have \"\\<forall>z\\<in>{v. v \\<noteq> vec_zero}. moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v ?z *\\<^sub>v z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n       moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v (a, d) *\\<^sub>v z", "using MM \\<open>mat_det M \\<noteq> 0\\<close> *"], ["proof (prove)\nusing this:\n  M = (a, b, c, d)\n  mat_det M \\<noteq> 0\n  b = 0\n  c = 0\n  a \\<noteq> 0 \\<and> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n       moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v (a, d) *\\<^sub>v z", "by force"], ["proof (state)\nthis:\n  \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n     moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v (a, d) *\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<And>M Ma.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        moebius_pt_cmat_cvec M 0\\<^sub>v \\<approx>\\<^sub>v 0\\<^sub>v;\n        moebius_pt_cmat_cvec M \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n        \\<infinity>\\<^sub>v;\n        moebius_pt_mmat_hcoords Ma 0\\<^sub>h\\<^sub>c \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        moebius_pt_mmat_hcoords Ma \\<infinity>\\<^sub>h\\<^sub>c \\<approx>\n        \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                            (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n                             \\<not> k \\<approx>\\<^sub>v\n                                    \\<infinity>\\<^sub>v) \\<and>\n                            (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n                                moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v\n                                k *\\<^sub>v z)", "ultimately"], ["proof (chain)\npicking this:\n  (a, d) \\<noteq> vec_zero\n  \\<not> (a, d) \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n  \\<not> (a, d) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n     moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v (a, d) *\\<^sub>v z", "show \"\\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n                   (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and> \\<not> k \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) \\<and>\n                   (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}. moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v k *\\<^sub>v z)\""], ["proof (prove)\nusing this:\n  (a, d) \\<noteq> vec_zero\n  \\<not> (a, d) \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n  \\<not> (a, d) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n     moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v (a, d) *\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n       (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n        \\<not> k \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) \\<and>\n       (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n           moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v k *\\<^sub>v z)", "by blast"], ["proof (state)\nthis:\n  \\<exists>k\\<in>{v. v \\<noteq> vec_zero}.\n     (\\<not> k \\<approx>\\<^sub>v 0\\<^sub>v \\<and>\n      \\<not> k \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) \\<and>\n     (\\<forall>z\\<in>{v. v \\<noteq> vec_zero}.\n         moebius_pt_cmat_cvec M z \\<approx>\\<^sub>v k *\\<^sub>v z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fixed_points_0inf:\n  assumes \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" and \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"\n  shows \"\\<exists> k::complex_homo. (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and> moebius_pt M = (\\<lambda> z. k *\\<^sub>h z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and>\n       moebius_pt M = (*\\<^sub>h) k", "using fixed_points_0inf'[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>k.\n     (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and>\n     (\\<forall>z. moebius_pt M z = k *\\<^sub>h z)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       (k \\<noteq> 0\\<^sub>h \\<and> k \\<noteq> \\<infinity>\\<^sub>h) \\<and>\n       moebius_pt M = (*\\<^sub>h) k", "by auto"], ["", "lemma ex_cross_ratio:\n  assumes \"u \\<noteq> v\" and \"u \\<noteq> w\" and \"v \\<noteq> w\"\n  shows \"\\<exists> z. cross_ratio z u v w = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "obtain M where \"(\\<lambda> z. cross_ratio z u v w) = moebius_pt M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z u v w) = moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms is_moebius_cross_ratio[of u v w]"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  u \\<noteq> w\n  v \\<noteq> w\n  \\<lbrakk>u \\<noteq> v; v \\<noteq> w; u \\<noteq> w\\<rbrakk>\n  \\<Longrightarrow> is_moebius (\\<lambda>z. cross_ratio z u v w)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z u v w) = moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  u \\<noteq> w\n  v \\<noteq> w\n  \\<lbrakk>u \\<noteq> v; v \\<noteq> w; u \\<noteq> w\\<rbrakk>\n  \\<Longrightarrow> \\<exists>M.\n                       (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z u v w) = moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "hence *: \"\\<forall> z. cross_ratio z u v w = moebius_pt M z\""], ["proof (prove)\nusing this:\n  (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n\ngoal (1 subgoal):\n 1. \\<forall>z. cross_ratio z u v w = moebius_pt M z", "by metis"], ["proof (state)\nthis:\n  \\<forall>z. cross_ratio z u v w = moebius_pt M z\n\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "let ?z = \"moebius_pt (-M) c\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "have \"cross_ratio ?z u v w = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt (- M) c) u v w = c", "using *"], ["proof (prove)\nusing this:\n  \\<forall>z. cross_ratio z u v w = moebius_pt M z\n\ngoal (1 subgoal):\n 1. cross_ratio (moebius_pt (- M) c) u v w = c", "by auto"], ["proof (state)\nthis:\n  cross_ratio (moebius_pt (- M) c) u v w = c\n\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "thus ?thesis"], ["proof (prove)\nusing this:\n  cross_ratio (moebius_pt (- M) c) u v w = c\n\ngoal (1 subgoal):\n 1. \\<exists>z. cross_ratio z u v w = c", "by auto"], ["proof (state)\nthis:\n  \\<exists>z. cross_ratio z u v w = c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_cross_ratio:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\" and \"u \\<noteq> w\"\n  assumes \"cross_ratio z u v w = cross_ratio z' u v w\"\n  shows \"z = z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = z'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. z = z'", "obtain M where \"(\\<lambda> z. cross_ratio z u v w) = moebius_pt M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z u v w) = moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using is_moebius_cross_ratio[OF assms(1-3)]"], ["proof (prove)\nusing this:\n  is_moebius (\\<lambda>z. cross_ratio z u v w)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z u v w) = moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  \\<exists>M. (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<lambda>z. cross_ratio z u v w) = moebius_pt M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n\ngoal (1 subgoal):\n 1. z = z'", "hence \"moebius_pt M z = moebius_pt M z'\""], ["proof (prove)\nusing this:\n  (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n\ngoal (1 subgoal):\n 1. moebius_pt M z = moebius_pt M z'", "using assms(4)"], ["proof (prove)\nusing this:\n  (\\<lambda>z. cross_ratio z u v w) = moebius_pt M\n  cross_ratio z u v w = cross_ratio z' u v w\n\ngoal (1 subgoal):\n 1. moebius_pt M z = moebius_pt M z'", "by metis"], ["proof (state)\nthis:\n  moebius_pt M z = moebius_pt M z'\n\ngoal (1 subgoal):\n 1. z = z'", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_pt M z = moebius_pt M z'\n\ngoal (1 subgoal):\n 1. z = z'", "using moebius_pt_eq_I"], ["proof (prove)\nusing this:\n  moebius_pt M z = moebius_pt M z'\n  moebius_pt ?M ?z1.0 = moebius_pt ?M ?z2.0 \\<Longrightarrow> ?z1.0 = ?z2.0\n\ngoal (1 subgoal):\n 1. z = z'", "by metis"], ["proof (state)\nthis:\n  z = z'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ex1_cross_ratio:\n  assumes \"u \\<noteq> v\" and \"u \\<noteq> w\" and \"v \\<noteq> w\"\n  shows \"\\<exists>! z. cross_ratio z u v w = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!z. cross_ratio z u v w = c", "using assms ex_cross_ratio[OF assms, of c] unique_cross_ratio[of u v w]"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  u \\<noteq> w\n  v \\<noteq> w\n  \\<exists>z. cross_ratio z u v w = c\n  \\<lbrakk>u \\<noteq> v; v \\<noteq> w; u \\<noteq> w;\n   cross_ratio ?z u v w = cross_ratio ?z' u v w\\<rbrakk>\n  \\<Longrightarrow> ?z = ?z'\n\ngoal (1 subgoal):\n 1. \\<exists>!z. cross_ratio z u v w = c", "by blast"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Pole\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "definition is_pole :: \"moebius \\<Rightarrow> complex_homo \\<Rightarrow> bool\" where\n  \"is_pole M z \\<longleftrightarrow> moebius_pt M z = \\<infinity>\\<^sub>h\""], ["", "lemma ex1_pole:\n  shows \"\\<exists>! z. is_pole M z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!z. is_pole M z", "using bij_moebius_pt[of M]"], ["proof (prove)\nusing this:\n  bij (moebius_pt M)\n\ngoal (1 subgoal):\n 1. \\<exists>!z. is_pole M z", "unfolding is_pole_def bij_def inj_on_def surj_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV.\n         moebius_pt M x = moebius_pt M y \\<longrightarrow> x = y) \\<and>\n  (\\<forall>y. \\<exists>x. y = moebius_pt M x)\n\ngoal (1 subgoal):\n 1. \\<exists>!z. moebius_pt M z = \\<infinity>\\<^sub>h", "unfolding Ex1_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV.\n         moebius_pt M x = moebius_pt M y \\<longrightarrow> x = y) \\<and>\n  (\\<forall>y. \\<exists>x. y = moebius_pt M x)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       moebius_pt M x = \\<infinity>\\<^sub>h \\<and>\n       (\\<forall>y.\n           moebius_pt M y = \\<infinity>\\<^sub>h \\<longrightarrow> y = x)", "by (metis UNIV_I)"], ["", "definition pole :: \"moebius \\<Rightarrow> complex_homo\" where\n  \"pole M = (THE z. is_pole M z)\""], ["", "lemma pole_mk_moebius:\n  assumes \"is_pole (mk_moebius a b c d) z\" and \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  shows \"z = of_complex (-d/c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "let ?t1 = \"moebius_translation (a / c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "let ?rd = \"moebius_rotation_dilatation ((b * c - a * d) / (c * c))\""], ["proof (state)\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "let ?r = \"moebius_reciprocal\""], ["proof (state)\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "let ?t2 = \"moebius_translation (d / c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "have \"moebius_pt (?rd + ?r + ?t2) z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     z =\n    \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  is_pole (mk_moebius a b c d) z\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     z =\n    \\<infinity>\\<^sub>h", "unfolding is_pole_def"], ["proof (prove)\nusing this:\n  moebius_pt (mk_moebius a b c d) z = \\<infinity>\\<^sub>h\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     z =\n    \\<infinity>\\<^sub>h", "apply (subst (asm) moebius_decomposition)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> c \\<noteq> 0\n 2. \\<lbrakk>c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> a * d - b * c \\<noteq> 0\n 3. \\<lbrakk>moebius_pt\n              (moebius_translation (a / c) +\n               moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              z =\n             \\<infinity>\\<^sub>h;\n     c \\<noteq> 0; a * d - b * c \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> moebius_pt\n                       (moebius_rotation_dilatation\n                         ((b * c - a * d) / (c * c)) +\n                        moebius_reciprocal +\n                        moebius_translation (d / c))\n                       z =\n                      \\<infinity>\\<^sub>h", "apply (auto simp add: moebius_comp[symmetric] moebius_translation_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>moebius_pt\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)))\n              (reciprocal (z +\\<^sub>h of_complex (d / c))) +\\<^sub>h\n             of_complex (a / c) =\n             \\<infinity>\\<^sub>h;\n     c \\<noteq> 0; a * d \\<noteq> b * c\\<rbrakk>\n    \\<Longrightarrow> moebius_pt\n                       (moebius_rotation_dilatation\n                         ((b * c - a * d) / (c * c)))\n                       (reciprocal (z +\\<^sub>h of_complex (d / c))) =\n                      \\<infinity>\\<^sub>h", "apply (subst moebius_similarity_only_inf_to_inf[of 1 \"a/c\"], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  moebius_pt\n   (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n    moebius_reciprocal +\n    moebius_translation (d / c))\n   z =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "hence \"moebius_pt (?r + ?t2) z = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  moebius_pt\n   (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n    moebius_reciprocal +\n    moebius_translation (d / c))\n   z =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_reciprocal + moebius_translation (d / c)) z =\n    \\<infinity>\\<^sub>h", "using \\<open>a*d - b*c \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  moebius_pt\n   (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n    moebius_reciprocal +\n    moebius_translation (d / c))\n   z =\n  \\<infinity>\\<^sub>h\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_reciprocal + moebius_translation (d / c)) z =\n    \\<infinity>\\<^sub>h", "unfolding moebius_rotation_dilatation_def"], ["proof (prove)\nusing this:\n  moebius_pt\n   (moebius_similarity ((b * c - a * d) / (c * c)) 0 + moebius_reciprocal +\n    moebius_translation (d / c))\n   z =\n  \\<infinity>\\<^sub>h\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_reciprocal + moebius_translation (d / c)) z =\n    \\<infinity>\\<^sub>h", "by (simp del: moebius_pt_moebius_similarity)"], ["proof (state)\nthis:\n  moebius_pt (moebius_reciprocal + moebius_translation (d / c)) z =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "hence \"moebius_pt ?t2 z = 0\\<^sub>h\""], ["proof (prove)\nusing this:\n  moebius_pt (moebius_reciprocal + moebius_translation (d / c)) z =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_translation (d / c)) z = 0\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  moebius_pt (moebius_translation (d / c)) z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_translation (d / c)) z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "using moebius_pt_invert[of ?t2 z \"0\\<^sub>h\"]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_translation (d / c)) z = 0\\<^sub>h\n  moebius_pt (moebius_translation (d / c)) z = 0\\<^sub>h \\<Longrightarrow>\n  moebius_pt (moebius_inv (moebius_translation (d / c))) 0\\<^sub>h = z\n\ngoal (1 subgoal):\n 1. z = of_complex (- d / c)", "by simp ((subst (asm) of_complex_zero[symmetric])+, simp del: of_complex_zero)"], ["proof (state)\nthis:\n  z = of_complex (- d / c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pole_similarity:\n  assumes \"is_pole (moebius_similarity a b) z\" and \"a \\<noteq> 0\"\n  shows \"z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  is_pole (moebius_similarity a b) z\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "unfolding is_pole_def"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "using moebius_similarity_only_inf_to_inf[of a b z]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\n  a \\<noteq> 0\n  \\<lbrakk>a \\<noteq> 0;\n   moebius_pt (moebius_similarity a b) z = \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "by simp"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Homographies and antihomographies\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Inversion is not a M?bius transformation (it is a canonical example of so called\nanti-M?bius transformations, or antihomographies). All antihomographies are compositions of\nhomographies and conjugation. The fundamental theorem of projective geometry (that we shall not\nprove) states that all automorphisms (bijective functions that preserve the cross-ratio) of\n$\\mathbb{C}P^1$ are either homographies or antihomographies.\\<close>"], ["", "definition is_homography :: \"(complex_homo \\<Rightarrow> complex_homo) \\<Rightarrow> bool\" where\n \"is_homography f \\<longleftrightarrow> is_moebius f\""], ["", "definition is_antihomography :: \"(complex_homo \\<Rightarrow> complex_homo) \\<Rightarrow> bool\" where\n \"is_antihomography f \\<longleftrightarrow> (\\<exists> f'. is_moebius f' \\<and> f = f' \\<circ> conjugate)\""], ["", "text \\<open>Conjugation is not a M?bius transformation, but is antihomograhpy.\\<close>"], ["", "lemma not_moebius_conjugate: \n  shows \"\\<not> is_moebius conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_moebius conjugate", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "assume \"is_moebius conjugate\""], ["proof (state)\nthis:\n  is_moebius conjugate\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  is_moebius conjugate", "obtain M where *: \"moebius_pt M = conjugate\""], ["proof (prove)\nusing this:\n  is_moebius conjugate\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M = conjugate \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  \\<exists>M. conjugate = moebius_pt M\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M = conjugate \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  moebius_pt M = conjugate\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "hence \"moebius_pt M 0\\<^sub>h = 0\\<^sub>h\" \"moebius_pt M 1\\<^sub>h = 1\\<^sub>h\" \"moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  moebius_pt M = conjugate\n\ngoal (1 subgoal):\n 1. moebius_pt M 0\\<^sub>h = 0\\<^sub>h &&&\n    moebius_pt M 1\\<^sub>h = 1\\<^sub>h &&&\n    moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "by auto"], ["proof (state)\nthis:\n  moebius_pt M 0\\<^sub>h = 0\\<^sub>h\n  moebius_pt M 1\\<^sub>h = 1\\<^sub>h\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "hence \"M = id_moebius\""], ["proof (prove)\nusing this:\n  moebius_pt M 0\\<^sub>h = 0\\<^sub>h\n  moebius_pt M 1\\<^sub>h = 1\\<^sub>h\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. M = id_moebius", "using three_fixed_points_01inf"], ["proof (prove)\nusing this:\n  moebius_pt M 0\\<^sub>h = 0\\<^sub>h\n  moebius_pt M 1\\<^sub>h = 1\\<^sub>h\n  moebius_pt M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n  \\<lbrakk>moebius_pt ?M 0\\<^sub>h = 0\\<^sub>h;\n   moebius_pt ?M 1\\<^sub>h = 1\\<^sub>h;\n   moebius_pt ?M \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> ?M = id_moebius\n\ngoal (1 subgoal):\n 1. M = id_moebius", "by auto"], ["proof (state)\nthis:\n  M = id_moebius\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "hence \"conjugate = id\""], ["proof (prove)\nusing this:\n  M = id_moebius\n\ngoal (1 subgoal):\n 1. conjugate = id", "using *"], ["proof (prove)\nusing this:\n  M = id_moebius\n  moebius_pt M = conjugate\n\ngoal (1 subgoal):\n 1. conjugate = id", "by simp"], ["proof (state)\nthis:\n  conjugate = id\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  conjugate = id\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "have \"conjugate ii\\<^sub>h \\<noteq> ii\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ii\\<^sub>h \\<noteq> ii\\<^sub>h", "using of_complex_inj[of \"\\<i>\" \"-\\<i>\"]"], ["proof (prove)\nusing this:\n  of_complex \\<i> = of_complex (- \\<i>) \\<Longrightarrow> \\<i> = - \\<i>\n\ngoal (1 subgoal):\n 1. conjugate ii\\<^sub>h \\<noteq> ii\\<^sub>h", "by (subst of_complex_ii[symmetric])+ (auto simp del: of_complex_ii)"], ["proof (state)\nthis:\n  conjugate ii\\<^sub>h \\<noteq> ii\\<^sub>h\n\ngoal (1 subgoal):\n 1. is_moebius conjugate \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  conjugate = id\n  conjugate ii\\<^sub>h \\<noteq> ii\\<^sub>h", "show False"], ["proof (prove)\nusing this:\n  conjugate = id\n  conjugate ii\\<^sub>h \\<noteq> ii\\<^sub>h\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugation_is_antihomography[simp]:\n  shows \"is_antihomography conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_antihomography conjugate", "unfolding is_antihomography_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f'. is_moebius f' \\<and> conjugate = f' \\<circ> conjugate", "by (rule_tac x=\"id\" in exI, metis fun.map_id0 id_apply is_moebius_def moebius_pt_moebius_id)"], ["", "lemma inversion_is_antihomography [simp]: \n  shows \"is_antihomography inversion\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_antihomography inversion", "using moebius_reciprocal"], ["proof (prove)\nusing this:\n  moebius_pt moebius_reciprocal = reciprocal\n\ngoal (1 subgoal):\n 1. is_antihomography inversion", "unfolding inversion_sym is_antihomography_def is_moebius_def"], ["proof (prove)\nusing this:\n  moebius_pt moebius_reciprocal = reciprocal\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       (\\<exists>M. f' = moebius_pt M) \\<and>\n       reciprocal \\<circ> conjugate = f' \\<circ> conjugate", "by metis"], ["", "text \\<open>Functions cannot simultaneously be homographies and antihomographies - the disjunction is exclusive.\\<close>"], ["", "lemma homography_antihomography_exclusive:\n  assumes \"is_antihomography f\"\n  shows \"\\<not> is_homography f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_homography f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. is_homography f \\<Longrightarrow> False", "assume \"is_homography f\""], ["proof (state)\nthis:\n  is_homography f\n\ngoal (1 subgoal):\n 1. is_homography f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  is_homography f", "obtain M where \"f = moebius_pt M\""], ["proof (prove)\nusing this:\n  is_homography f\n\ngoal (1 subgoal):\n 1. (\\<And>M. f = moebius_pt M \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding is_homography_def is_moebius_def"], ["proof (prove)\nusing this:\n  \\<exists>M. f = moebius_pt M\n\ngoal (1 subgoal):\n 1. (\\<And>M. f = moebius_pt M \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f = moebius_pt M\n\ngoal (1 subgoal):\n 1. is_homography f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f = moebius_pt M", "obtain M' where \"moebius_pt M = moebius_pt M' \\<circ> conjugate\""], ["proof (prove)\nusing this:\n  f = moebius_pt M\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        moebius_pt M = moebius_pt M' \\<circ> conjugate \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f = moebius_pt M\n  is_antihomography f\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        moebius_pt M = moebius_pt M' \\<circ> conjugate \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding is_antihomography_def is_moebius_def"], ["proof (prove)\nusing this:\n  f = moebius_pt M\n  \\<exists>f'.\n     (\\<exists>M. f' = moebius_pt M) \\<and> f = f' \\<circ> conjugate\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        moebius_pt M = moebius_pt M' \\<circ> conjugate \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M = moebius_pt M' \\<circ> conjugate\n\ngoal (1 subgoal):\n 1. is_homography f \\<Longrightarrow> False", "hence \"conjugate = moebius_pt (-M') \\<circ> moebius_pt M\""], ["proof (prove)\nusing this:\n  moebius_pt M = moebius_pt M' \\<circ> conjugate\n\ngoal (1 subgoal):\n 1. conjugate = moebius_pt (- M') \\<circ> moebius_pt M", "by auto"], ["proof (state)\nthis:\n  conjugate = moebius_pt (- M') \\<circ> moebius_pt M\n\ngoal (1 subgoal):\n 1. is_homography f \\<Longrightarrow> False", "hence \"conjugate = moebius_pt (-M' + M)\""], ["proof (prove)\nusing this:\n  conjugate = moebius_pt (- M') \\<circ> moebius_pt M\n\ngoal (1 subgoal):\n 1. conjugate = moebius_pt (- M' + M)", "by (simp add: moebius_comp)"], ["proof (state)\nthis:\n  conjugate = moebius_pt (- M' + M)\n\ngoal (1 subgoal):\n 1. is_homography f \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  conjugate = moebius_pt (- M' + M)\n\ngoal (1 subgoal):\n 1. False", "using not_moebius_conjugate"], ["proof (prove)\nusing this:\n  conjugate = moebius_pt (- M' + M)\n  \\<not> is_moebius conjugate\n\ngoal (1 subgoal):\n 1. False", "unfolding is_moebius_def"], ["proof (prove)\nusing this:\n  conjugate = moebius_pt (- M' + M)\n  \\<nexists>M. conjugate = moebius_pt M\n\ngoal (1 subgoal):\n 1. False", "by metis"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Classification of M?bius transformations\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>M?bius transformations can be classified to parabolic, elliptic and loxodromic. We do not\ndevelop this part of the theory in depth.\\<close>"], ["", "lemma similarity_scale_1:\n  assumes \"k \\<noteq> 0\"\n  shows \"similarity (k *\\<^sub>s\\<^sub>m I) M = similarity I M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similarity (k *\\<^sub>s\\<^sub>m I) M = similarity I M", "using assms"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. similarity (k *\\<^sub>s\\<^sub>m I) M = similarity I M", "unfolding similarity_def"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mat_inv (k *\\<^sub>s\\<^sub>m I) *\\<^sub>m\\<^sub>m M *\\<^sub>m\\<^sub>m\n    (k *\\<^sub>s\\<^sub>m I) =\n    mat_inv I *\\<^sub>m\\<^sub>m M *\\<^sub>m\\<^sub>m I", "using mat_inv_mult_sm[of k I]"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  k \\<noteq> 0 \\<Longrightarrow>\n  mat_inv (k *\\<^sub>s\\<^sub>m I) = (1 / k) *\\<^sub>s\\<^sub>m mat_inv I\n\ngoal (1 subgoal):\n 1. mat_inv (k *\\<^sub>s\\<^sub>m I) *\\<^sub>m\\<^sub>m M *\\<^sub>m\\<^sub>m\n    (k *\\<^sub>s\\<^sub>m I) =\n    mat_inv I *\\<^sub>m\\<^sub>m M *\\<^sub>m\\<^sub>m I", "by simp"], ["", "lemma similarity_scale_2:\n  shows \"similarity I (k *\\<^sub>s\\<^sub>m M) = k *\\<^sub>s\\<^sub>m (similarity I M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similarity I (k *\\<^sub>s\\<^sub>m M) =\n    k *\\<^sub>s\\<^sub>m similarity I M", "unfolding similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_inv I *\\<^sub>m\\<^sub>m (k *\\<^sub>s\\<^sub>m M) *\\<^sub>m\\<^sub>m\n    I =\n    k *\\<^sub>s\\<^sub>m (mat_inv I *\\<^sub>m\\<^sub>m M *\\<^sub>m\\<^sub>m I)", "by auto"], ["", "lemma mat_trace_mult_sm [simp]:\n  shows \"mat_trace (k *\\<^sub>s\\<^sub>m M) = k * mat_trace M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_trace (k *\\<^sub>s\\<^sub>m M) = k * mat_trace M", "by (cases M) (simp add: field_simps)"], ["", "definition moebius_mb_cmat :: \"complex_mat \\<Rightarrow> complex_mat \\<Rightarrow> complex_mat\" where\n  [simp]: \"moebius_mb_cmat I M = similarity I M\""], ["", "lift_definition moebius_mb_mmat :: \"moebius_mat \\<Rightarrow> moebius_mat \\<Rightarrow> moebius_mat\" is moebius_mb_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>mat_det prod1 \\<noteq> 0; mat_det prod2 \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> mat_det (moebius_mb_cmat prod1 prod2) \\<noteq> 0", "by (simp add: similarity_def mat_det_inv)"], ["", "lift_definition moebius_mb :: \"moebius \\<Rightarrow> moebius \\<Rightarrow> moebius\" is moebius_mb_mmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 moebius_mat3 moebius_mat4.\n       \\<lbrakk>moebius_mat_eq moebius_mat1 moebius_mat2;\n        moebius_mat_eq moebius_mat3 moebius_mat4\\<rbrakk>\n       \\<Longrightarrow> moebius_mat_eq\n                          (moebius_mb_mmat moebius_mat1 moebius_mat3)\n                          (moebius_mb_mmat moebius_mat2 moebius_mat4)", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 moebius_mat3 moebius_mat4.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0; mat_det moebius_mat3 \\<noteq> 0;\n        mat_det moebius_mat4 \\<noteq> 0;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        moebius_cmat_eq moebius_mat3 moebius_mat4\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_mb_cmat moebius_mat1 moebius_mat3)\n                          (moebius_mb_cmat moebius_mat2 moebius_mat4)", "fix M M' I I'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 moebius_mat3 moebius_mat4.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0; mat_det moebius_mat3 \\<noteq> 0;\n        mat_det moebius_mat4 \\<noteq> 0;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        moebius_cmat_eq moebius_mat3 moebius_mat4\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_mb_cmat moebius_mat1 moebius_mat3)\n                          (moebius_mb_cmat moebius_mat2 moebius_mat4)", "assume \"moebius_cmat_eq M M'\" \"moebius_cmat_eq I I'\""], ["proof (state)\nthis:\n  moebius_cmat_eq M M'\n  moebius_cmat_eq I I'\n\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 moebius_mat3 moebius_mat4.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0; mat_det moebius_mat3 \\<noteq> 0;\n        mat_det moebius_mat4 \\<noteq> 0;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        moebius_cmat_eq moebius_mat3 moebius_mat4\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_mb_cmat moebius_mat1 moebius_mat3)\n                          (moebius_mb_cmat moebius_mat2 moebius_mat4)", "thus \"moebius_cmat_eq (moebius_mb_cmat I M) (moebius_mb_cmat I' M')\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq M M'\n  moebius_cmat_eq I I'\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_mb_cmat I M) (moebius_mb_cmat I' M')", "by (auto simp add: similarity_scale_1 similarity_scale_2)"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_mb_cmat I M) (moebius_mb_cmat I' M')\n\ngoal:\nNo subgoals!", "qed"], ["", "definition similarity_invar_cmat :: \"complex_mat \\<Rightarrow> complex\" where\n  [simp]: \"similarity_invar_cmat M = (mat_trace M)\\<^sup>2 / mat_det M - 4\""], ["", "lift_definition similarity_invar_mmat :: \"moebius_mat \\<Rightarrow> complex\" is similarity_invar_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition similarity_invar :: \"moebius \\<Rightarrow> complex\" is similarity_invar_mmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2.\n       moebius_mat_eq moebius_mat1 moebius_mat2 \\<Longrightarrow>\n       similarity_invar_mmat moebius_mat1 =\n       similarity_invar_mmat moebius_mat2", "by transfer (auto simp add: power2_eq_square field_simps)"], ["", "lemma similarity_invar_moeibus_mb:\n  shows \"similarity_invar (moebius_mb I M) = similarity_invar M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similarity_invar (moebius_mb I M) = similarity_invar M", "by (transfer, transfer, simp)"], ["", "definition similar :: \"moebius \\<Rightarrow> moebius \\<Rightarrow> bool\" where\n  \"similar M1 M2 \\<longleftrightarrow> (\\<exists> I. moebius_mb I M1 = M2)\""], ["", "lemma similar_refl [simp]:\n  shows \"similar M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similar M M", "unfolding similar_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I. moebius_mb I M = M", "by (rule_tac x=\"id_moebius\" in exI) (transfer, transfer, simp)"], ["", "lemma similar_sym:\n  assumes \"similar M1 M2\"\n  shows \"similar M2 M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similar M2 M1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. similar M2 M1", "from assms"], ["proof (chain)\npicking this:\n  similar M1 M2", "obtain I where \"M2 = moebius_mb I M1\""], ["proof (prove)\nusing this:\n  similar M1 M2\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        M2 = moebius_mb I M1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding similar_def"], ["proof (prove)\nusing this:\n  \\<exists>I. moebius_mb I M1 = M2\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        M2 = moebius_mb I M1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  M2 = moebius_mb I M1\n\ngoal (1 subgoal):\n 1. similar M2 M1", "hence \"M1 = moebius_mb (moebius_inv I) M2\""], ["proof (prove)\nusing this:\n  M2 = moebius_mb I M1\n\ngoal (1 subgoal):\n 1. M1 = moebius_mb (moebius_inv I) M2", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M2 I M1 M2a Ia M1a.\n       \\<lbrakk>mat_det M2 \\<noteq> 0; mat_det I \\<noteq> 0;\n        mat_det M1 \\<noteq> 0; moebius_cmat_eq M2 (moebius_mb_cmat I M1);\n        moebius_mat_eq M2a (moebius_mb_mmat Ia M1a)\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq M1\n                          (moebius_mb_cmat (moebius_inv_cmat I) M2)", "fix M2 I M1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M2 I M1 M2a Ia M1a.\n       \\<lbrakk>mat_det M2 \\<noteq> 0; mat_det I \\<noteq> 0;\n        mat_det M1 \\<noteq> 0; moebius_cmat_eq M2 (moebius_mb_cmat I M1);\n        moebius_mat_eq M2a (moebius_mb_mmat Ia M1a)\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq M1\n                          (moebius_mb_cmat (moebius_inv_cmat I) M2)", "assume \"moebius_cmat_eq M2 (moebius_mb_cmat I M1)\" \"mat_det I \\<noteq> 0\""], ["proof (state)\nthis:\n  moebius_cmat_eq M2 (moebius_mb_cmat I M1)\n  mat_det I \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M2 I M1 M2a Ia M1a.\n       \\<lbrakk>mat_det M2 \\<noteq> 0; mat_det I \\<noteq> 0;\n        mat_det M1 \\<noteq> 0; moebius_cmat_eq M2 (moebius_mb_cmat I M1);\n        moebius_mat_eq M2a (moebius_mb_mmat Ia M1a)\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq M1\n                          (moebius_mb_cmat (moebius_inv_cmat I) M2)", "then"], ["proof (chain)\npicking this:\n  moebius_cmat_eq M2 (moebius_mb_cmat I M1)\n  mat_det I \\<noteq> 0", "obtain k where \"k \\<noteq> 0\" \"similarity I M1 = k *\\<^sub>s\\<^sub>m M2\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq M2 (moebius_mb_cmat I M1)\n  mat_det I \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0;\n         similarity I M1 = k *\\<^sub>s\\<^sub>m M2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  similarity I M1 = k *\\<^sub>s\\<^sub>m M2\n\ngoal (1 subgoal):\n 1. \\<And>M2 I M1 M2a Ia M1a.\n       \\<lbrakk>mat_det M2 \\<noteq> 0; mat_det I \\<noteq> 0;\n        mat_det M1 \\<noteq> 0; moebius_cmat_eq M2 (moebius_mb_cmat I M1);\n        moebius_mat_eq M2a (moebius_mb_mmat Ia M1a)\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq M1\n                          (moebius_mb_cmat (moebius_inv_cmat I) M2)", "thus \"moebius_cmat_eq M1 (moebius_mb_cmat (moebius_inv_cmat I) M2)\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  similarity I M1 = k *\\<^sub>s\\<^sub>m M2\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq M1 (moebius_mb_cmat (moebius_inv_cmat I) M2)", "using similarity_inv[of I M1 \"k *\\<^sub>s\\<^sub>m M2\", OF _ \\<open>mat_det I \\<noteq> 0\\<close>]"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  similarity I M1 = k *\\<^sub>s\\<^sub>m M2\n  similarity I M1 = k *\\<^sub>s\\<^sub>m M2 \\<Longrightarrow>\n  similarity (mat_inv I) (k *\\<^sub>s\\<^sub>m M2) = M1\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq M1 (moebius_mb_cmat (moebius_inv_cmat I) M2)", "by (auto simp add: similarity_scale_2) (rule_tac x=\"1/k\" in exI, simp)"], ["proof (state)\nthis:\n  moebius_cmat_eq M1 (moebius_mb_cmat (moebius_inv_cmat I) M2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M1 = moebius_mb (moebius_inv I) M2\n\ngoal (1 subgoal):\n 1. similar M2 M1", "thus ?thesis"], ["proof (prove)\nusing this:\n  M1 = moebius_mb (moebius_inv I) M2\n\ngoal (1 subgoal):\n 1. similar M2 M1", "unfolding similar_def"], ["proof (prove)\nusing this:\n  M1 = moebius_mb (moebius_inv I) M2\n\ngoal (1 subgoal):\n 1. \\<exists>I. moebius_mb I M2 = M1", "by auto"], ["proof (state)\nthis:\n  similar M2 M1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma similar_trans:\n  assumes \"similar M1 M2\" and \"similar M2 M3\"\n  shows \"similar M1 M3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. similar M1 M3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. similar M1 M3", "obtain I1 I2 where \"moebius_mb I1 M1 = M2\" \"moebius_mb I2 M2 = M3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I1 I2.\n        \\<lbrakk>moebius_mb I1 M1 = M2; moebius_mb I2 M2 = M3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  similar M1 M2\n  similar M2 M3\n\ngoal (1 subgoal):\n 1. (\\<And>I1 I2.\n        \\<lbrakk>moebius_mb I1 M1 = M2; moebius_mb I2 M2 = M3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: similar_def)"], ["proof (state)\nthis:\n  moebius_mb I1 M1 = M2\n  moebius_mb I2 M2 = M3\n\ngoal (1 subgoal):\n 1. similar M1 M3", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_mb I1 M1 = M2\n  moebius_mb I2 M2 = M3\n\ngoal (1 subgoal):\n 1. similar M1 M3", "unfolding similar_def"], ["proof (prove)\nusing this:\n  moebius_mb I1 M1 = M2\n  moebius_mb I2 M2 = M3\n\ngoal (1 subgoal):\n 1. \\<exists>I. moebius_mb I M1 = M3", "proof (rule_tac x=\"moebius_comp I1 I2\" in exI, transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I1 M1 M2 I2 M3 I1a M1a M2a I2a M3a.\n       \\<lbrakk>mat_det I1 \\<noteq> 0; mat_det M1 \\<noteq> 0;\n        mat_det M2 \\<noteq> 0; mat_det I2 \\<noteq> 0; mat_det M3 \\<noteq> 0;\n        moebius_cmat_eq (moebius_mb_cmat I1 M1) M2;\n        moebius_cmat_eq (moebius_mb_cmat I2 M2) M3;\n        moebius_cmat_eq (moebius_mb_cmat I1 M1) M2;\n        moebius_cmat_eq (moebius_mb_cmat I2 M2) M3;\n        moebius_mat_eq (moebius_mb_mmat I1a M1a) M2a;\n        moebius_mat_eq (moebius_mb_mmat I2a M2a) M3a\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_mb_cmat (moebius_comp_cmat I1 I2) M1) M3", "fix I1 I2 M1 M2 M3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I1 M1 M2 I2 M3 I1a M1a M2a I2a M3a.\n       \\<lbrakk>mat_det I1 \\<noteq> 0; mat_det M1 \\<noteq> 0;\n        mat_det M2 \\<noteq> 0; mat_det I2 \\<noteq> 0; mat_det M3 \\<noteq> 0;\n        moebius_cmat_eq (moebius_mb_cmat I1 M1) M2;\n        moebius_cmat_eq (moebius_mb_cmat I2 M2) M3;\n        moebius_cmat_eq (moebius_mb_cmat I1 M1) M2;\n        moebius_cmat_eq (moebius_mb_cmat I2 M2) M3;\n        moebius_mat_eq (moebius_mb_mmat I1a M1a) M2a;\n        moebius_mat_eq (moebius_mb_mmat I2a M2a) M3a\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_mb_cmat (moebius_comp_cmat I1 I2) M1) M3", "assume \"moebius_cmat_eq (moebius_mb_cmat I1 M1) M2\"\n           \"moebius_cmat_eq (moebius_mb_cmat I2 M2) M3\"\n           \"mat_det I1 \\<noteq> 0\" \"mat_det I2 \\<noteq> 0\""], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_mb_cmat I1 M1) M2\n  moebius_cmat_eq (moebius_mb_cmat I2 M2) M3\n  mat_det I1 \\<noteq> 0\n  mat_det I2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>I1 M1 M2 I2 M3 I1a M1a M2a I2a M3a.\n       \\<lbrakk>mat_det I1 \\<noteq> 0; mat_det M1 \\<noteq> 0;\n        mat_det M2 \\<noteq> 0; mat_det I2 \\<noteq> 0; mat_det M3 \\<noteq> 0;\n        moebius_cmat_eq (moebius_mb_cmat I1 M1) M2;\n        moebius_cmat_eq (moebius_mb_cmat I2 M2) M3;\n        moebius_cmat_eq (moebius_mb_cmat I1 M1) M2;\n        moebius_cmat_eq (moebius_mb_cmat I2 M2) M3;\n        moebius_mat_eq (moebius_mb_mmat I1a M1a) M2a;\n        moebius_mat_eq (moebius_mb_mmat I2a M2a) M3a\\<rbrakk>\n       \\<Longrightarrow> moebius_cmat_eq\n                          (moebius_mb_cmat (moebius_comp_cmat I1 I2) M1) M3", "thus \"moebius_cmat_eq (moebius_mb_cmat (moebius_comp_cmat I1 I2) M1) M3\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq (moebius_mb_cmat I1 M1) M2\n  moebius_cmat_eq (moebius_mb_cmat I2 M2) M3\n  mat_det I1 \\<noteq> 0\n  mat_det I2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. moebius_cmat_eq (moebius_mb_cmat (moebius_comp_cmat I1 I2) M1) M3", "by (auto simp add: similarity_scale_2) (rule_tac x=\"ka*k\" in exI, simp)"], ["proof (state)\nthis:\n  moebius_cmat_eq (moebius_mb_cmat (moebius_comp_cmat I1 I2) M1) M3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  similar M1 M3\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}