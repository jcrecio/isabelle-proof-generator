{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Circlines_Angle.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma mat_det_12_mm_l [simp]:\n  shows \"mat_det_12 (M *\\<^sub>m\\<^sub>m A) (M *\\<^sub>m\\<^sub>m B) = mat_det M * mat_det_12 A B\"", "lemma mat_det_12_mm_r [simp]:\n  shows \"mat_det_12 (A *\\<^sub>m\\<^sub>m M) (B *\\<^sub>m\\<^sub>m M) = mat_det M * mat_det_12 A B\"", "lemma mat_det_12_sm_l [simp]:\n  shows \"mat_det_12 (k *\\<^sub>s\\<^sub>m A) B = k * mat_det_12 A B\"", "lemma mat_det_12_sm_r [simp]:\n  shows \"mat_det_12 A (k *\\<^sub>s\\<^sub>m B) = k * mat_det_12 A B\"", "lemma mat_det_12_congruence [simp]:\n  shows \"mat_det_12 (congruence M A) (congruence M B) = (cor ((cmod (mat_det M))\\<^sup>2)) * mat_det_12 A B\"", "lemma cos_angle_den_scale [simp]:\n  assumes \"k1 > 0\" and \"k2 > 0\"\n  shows \"sqrt (Re ((k1\\<^sup>2 * mat_det H1) * (k2\\<^sup>2 * mat_det H2))) =\n         k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))\"", "lemma cos_angle_opposite1 [simp]: \n  shows \"cos_angle (opposite_ocircline H) H' = - cos_angle H H'\"", "lemma cos_angle_opposite2 [simp]: \n  shows \"cos_angle H (opposite_ocircline H') = - cos_angle H H'\"", "lemma Re_sgn:\n  assumes \"is_real A\" and \"A \\<noteq> 0\"\n  shows \"Re (sgn A) = sgn_bool (Re A > 0)\"", "lemma Re_mult_real3:\n  assumes \"is_real z1\" and \"is_real z2\" and \"is_real z3\"\n  shows \"Re (z1 * z2 * z3) = Re z1 * Re z2 * Re z3\"", "lemma sgn_sqrt [simp]: \n  shows \"sgn (sqrt x) = sgn x\"", "lemma real_circle_sgn_r:\n  assumes \"is_circle H\" and \"(a, r) = euclidean_circle H\"\n  shows \"sgn r = - circline_type H\"", "lemma cos_angle_eq_cos_ang_circ:\n  assumes\n  \"is_circle (of_ocircline H1)\" and \"is_circle (of_ocircline H2)\" and\n  \"circline_type (of_ocircline H1) < 0\" and \"circline_type (of_ocircline H2) < 0\"\n  \"(a1, r1) = euclidean_circle (of_ocircline H1)\" and \"(a2, r2) = euclidean_circle (of_ocircline H2)\" and\n  \"of_complex E \\<in> ocircline_set H1 \\<inter> ocircline_set H2\"\n  shows \"cos_angle H1 H2 = cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))\"", "lemma perpendicular_sym:\n  shows \"perpendicular H1 H2 \\<longleftrightarrow> perpendicular H2 H1\"", "lemma moebius_preserve_circline_angle [simp]:\n  shows \"cos_angle (moebius_ocircline M H1) (moebius_ocircline M H2) =\n         cos_angle H1 H2 \"", "lemma perpendicular_moebius [simp]:\n  assumes \"perpendicular H1 H2\"\n  shows \"perpendicular (moebius_circline M H1) (moebius_circline M H2)\""], "translations": [["", "lemma mat_det_12_mm_l [simp]:\n  shows \"mat_det_12 (M *\\<^sub>m\\<^sub>m A) (M *\\<^sub>m\\<^sub>m B) = mat_det M * mat_det_12 A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det_12 (M *\\<^sub>m\\<^sub>m A) (M *\\<^sub>m\\<^sub>m B) =\n    mat_det M * mat_det_12 A B", "by (cases M, cases A, cases B) (simp add: field_simps)"], ["", "lemma mat_det_12_mm_r [simp]:\n  shows \"mat_det_12 (A *\\<^sub>m\\<^sub>m M) (B *\\<^sub>m\\<^sub>m M) = mat_det M * mat_det_12 A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det_12 (A *\\<^sub>m\\<^sub>m M) (B *\\<^sub>m\\<^sub>m M) =\n    mat_det M * mat_det_12 A B", "by (cases M, cases A, cases B) (simp add: field_simps)"], ["", "lemma mat_det_12_sm_l [simp]:\n  shows \"mat_det_12 (k *\\<^sub>s\\<^sub>m A) B = k * mat_det_12 A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det_12 (k *\\<^sub>s\\<^sub>m A) B = k * mat_det_12 A B", "by (cases A, cases B) (simp add: field_simps)"], ["", "lemma mat_det_12_sm_r [simp]:\n  shows \"mat_det_12 A (k *\\<^sub>s\\<^sub>m B) = k * mat_det_12 A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det_12 A (k *\\<^sub>s\\<^sub>m B) = k * mat_det_12 A B", "by (cases A, cases B) (simp add: field_simps)"], ["", "lemma mat_det_12_congruence [simp]:\n  shows \"mat_det_12 (congruence M A) (congruence M B) = (cor ((cmod (mat_det M))\\<^sup>2)) * mat_det_12 A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det_12 (congruence M A) (congruence M B) =\n    cor ((cmod (mat_det M))\\<^sup>2) * mat_det_12 A B", "unfolding congruence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det_12 (mat_adj M *\\<^sub>m\\<^sub>m A *\\<^sub>m\\<^sub>m M)\n     (mat_adj M *\\<^sub>m\\<^sub>m B *\\<^sub>m\\<^sub>m M) =\n    cor ((cmod (mat_det M))\\<^sup>2) * mat_det_12 A B", "by ((subst mult_mm_assoc[symmetric])+, subst mat_det_12_mm_l, subst mat_det_12_mm_r, subst mat_det_adj) (auto simp add: field_simps complex_mult_cnj_cmod)"], ["", "definition cos_angle_cmat :: \"complex_mat \\<Rightarrow> complex_mat \\<Rightarrow> real\" where\n  [simp]: \"cos_angle_cmat H1 H2 = - Re (mat_det_12 H1 H2) / (2 * (sqrt (Re (mat_det H1 * mat_det H2))))\""], ["", "lift_definition cos_angle_clmat :: \"circline_mat \\<Rightarrow> circline_mat \\<Rightarrow> real\" is cos_angle_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cos_angle_den_scale [simp]:\n  assumes \"k1 > 0\" and \"k2 > 0\"\n  shows \"sqrt (Re ((k1\\<^sup>2 * mat_det H1) * (k2\\<^sup>2 * mat_det H2))) =\n         k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "let ?lhs = \"(k1\\<^sup>2 * mat_det H1) * (k2\\<^sup>2 * mat_det H2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "let ?rhs = \"mat_det H1 * mat_det H2\""], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "have 1: \"?lhs = (k1\\<^sup>2*k2\\<^sup>2) * ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2) =\n    cor (k1\\<^sup>2 * k2\\<^sup>2) * (mat_det H1 * mat_det H2)", "by simp"], ["proof (state)\nthis:\n  cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2) =\n  cor (k1\\<^sup>2 * k2\\<^sup>2) * (mat_det H1 * mat_det H2)\n\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "hence \"Re ?lhs = (k1\\<^sup>2*k2\\<^sup>2) * Re ?rhs\""], ["proof (prove)\nusing this:\n  cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2) =\n  cor (k1\\<^sup>2 * k2\\<^sup>2) * (mat_det H1 * mat_det H2)\n\ngoal (1 subgoal):\n 1. Re (cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2)) =\n    k1\\<^sup>2 * k2\\<^sup>2 * Re (mat_det H1 * mat_det H2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  Re (cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2)) =\n  k1\\<^sup>2 * k2\\<^sup>2 * Re (mat_det H1 * mat_det H2)\n\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  Re (cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2)) =\n  k1\\<^sup>2 * k2\\<^sup>2 * Re (mat_det H1 * mat_det H2)\n\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "using assms"], ["proof (prove)\nusing this:\n  Re (cor (k1\\<^sup>2) * mat_det H1 * (cor (k2\\<^sup>2) * mat_det H2)) =\n  k1\\<^sup>2 * k2\\<^sup>2 * Re (mat_det H1 * mat_det H2)\n  0 < k1\n  0 < k2\n\ngoal (1 subgoal):\n 1. sqrt\n     (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n          ((cor k2)\\<^sup>2 * mat_det H2))) =\n    k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))", "by (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  sqrt\n   (Re ((cor k1)\\<^sup>2 * mat_det H1 * ((cor k2)\\<^sup>2 * mat_det H2))) =\n  k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition cos_angle :: \"ocircline \\<Rightarrow> ocircline \\<Rightarrow> real\" is cos_angle_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>ocircline_eq_clmat circline_mat1 circline_mat2;\n        ocircline_eq_clmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> cos_angle_clmat circline_mat1 circline_mat3 =\n                         cos_angle_clmat circline_mat2 circline_mat4", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> mat_zero;\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        ocircline_eq_cmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat circline_mat1 circline_mat3 =\n                         cos_angle_cmat circline_mat2 circline_mat4", "fix H1 H2 H1' H2'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> mat_zero;\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        ocircline_eq_cmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat circline_mat1 circline_mat3 =\n                         cos_angle_cmat circline_mat2 circline_mat4", "assume \"ocircline_eq_cmat H1 H1'\" \"ocircline_eq_cmat H2 H2'\""], ["proof (state)\nthis:\n  ocircline_eq_cmat H1 H1'\n  ocircline_eq_cmat H2 H2'\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> mat_zero;\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        ocircline_eq_cmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat circline_mat1 circline_mat3 =\n                         cos_angle_cmat circline_mat2 circline_mat4", "then"], ["proof (chain)\npicking this:\n  ocircline_eq_cmat H1 H1'\n  ocircline_eq_cmat H2 H2'", "obtain k1 k2 :: real where\n  *:  \"k1 > 0\" \"H1' = cor k1 *\\<^sub>s\\<^sub>m H1\"\n      \"k2 > 0\" \"H2' = cor k2 *\\<^sub>s\\<^sub>m H2\""], ["proof (prove)\nusing this:\n  ocircline_eq_cmat H1 H1'\n  ocircline_eq_cmat H2 H2'\n\ngoal (1 subgoal):\n 1. (\\<And>k1 k2.\n        \\<lbrakk>0 < k1; H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n         H2' = cor k2 *\\<^sub>s\\<^sub>m H2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k1\n  H1' = cor k1 *\\<^sub>s\\<^sub>m H1\n  0 < k2\n  H2' = cor k2 *\\<^sub>s\\<^sub>m H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> mat_zero;\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        ocircline_eq_cmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat circline_mat1 circline_mat3 =\n                         cos_angle_cmat circline_mat2 circline_mat4", "thus \"cos_angle_cmat H1 H2 = cos_angle_cmat H1' H2'\""], ["proof (prove)\nusing this:\n  0 < k1\n  H1' = cor k1 *\\<^sub>s\\<^sub>m H1\n  0 < k2\n  H2' = cor k2 *\\<^sub>s\\<^sub>m H2\n\ngoal (1 subgoal):\n 1. cos_angle_cmat H1 H2 = cos_angle_cmat H1' H2'", "unfolding cos_angle_cmat_def"], ["proof (prove)\nusing this:\n  0 < k1\n  H1' = cor k1 *\\<^sub>s\\<^sub>m H1\n  0 < k2\n  H2' = cor k2 *\\<^sub>s\\<^sub>m H2\n\ngoal (1 subgoal):\n 1. - Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    - Re (mat_det_12 H1' H2') / (2 * sqrt (Re (mat_det H1' * mat_det H2')))", "apply (subst *)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k1; H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2\\<rbrakk>\n    \\<Longrightarrow> - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n                      - Re (mat_det_12 (cor k1 *\\<^sub>s\\<^sub>m H1)\n                             (cor k2 *\\<^sub>s\\<^sub>m H2)) /\n                      (2 *\n                       sqrt\n                        (Re (mat_det (cor k1 *\\<^sub>s\\<^sub>m H1) *\n                             mat_det (cor k2 *\\<^sub>s\\<^sub>m H2))))", "apply (subst mat_det_12_sm_l, subst mat_det_12_sm_r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k1; H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2\\<rbrakk>\n    \\<Longrightarrow> - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n                      - Re (cor k1 * (cor k2 * mat_det_12 H1 H2)) /\n                      (2 *\n                       sqrt\n                        (Re (mat_det (cor k1 *\\<^sub>s\\<^sub>m H1) *\n                             mat_det (cor k2 *\\<^sub>s\\<^sub>m H2))))", "apply (subst mat_det_mult_sm)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k1; H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2\\<rbrakk>\n    \\<Longrightarrow> - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n                      - Re (cor k1 * (cor k2 * mat_det_12 H1 H2)) /\n                      (2 *\n                       sqrt\n                        (Re (cor k1 * cor k1 * mat_det H1 *\n                             (cor k2 * cor k2 * mat_det H2))))", "apply (subst power2_eq_square[symmetric])+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k1; H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2\\<rbrakk>\n    \\<Longrightarrow> - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n                      - Re (cor k1 * (cor k2 * mat_det_12 H1 H2)) /\n                      (2 *\n                       sqrt\n                        (Re ((cor k1)\\<^sup>2 * mat_det H1 *\n                             ((cor k2)\\<^sup>2 * mat_det H2))))", "apply (subst cos_angle_den_scale, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k1; H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2; 0 < k1;\n     H1' = cor k1 *\\<^sub>s\\<^sub>m H1; 0 < k2;\n     H2' = cor k2 *\\<^sub>s\\<^sub>m H2\\<rbrakk>\n    \\<Longrightarrow> - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n                      - Re (cor k1 * (cor k2 * mat_det_12 H1 H2)) /\n                      (2 * (k1 * k2 * sqrt (Re (mat_det H1 * mat_det H2))))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  cos_angle_cmat H1 H2 = cos_angle_cmat H1' H2'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>M?bius transformations are conformal, meaning that they preserve oriented angle between\noriented circlines.\\<close>"], ["", "lemma cos_angle_opposite1 [simp]: \n  shows \"cos_angle (opposite_ocircline H) H' = - cos_angle H H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle (opposite_ocircline H) H' = - cos_angle H H'", "by (transfer, transfer, simp)"], ["", "lemma cos_angle_opposite2 [simp]: \n  shows \"cos_angle H (opposite_ocircline H') = - cos_angle H H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle H (opposite_ocircline H') = - cos_angle H H'", "by (transfer, transfer, simp)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Connection with the elementary angle definition between circles\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text\\<open>We want to connect algebraic definition of an angle with a traditional one and \nto prove equivalency between these two definitions. For the traditional definition of \nan angle we follow the approach suggested by Needham \\cite{needham}.\\<close>"], ["", "lemma Re_sgn:\n  assumes \"is_real A\" and \"A \\<noteq> 0\"\n  shows \"Re (sgn A) = sgn_bool (Re A > 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (sgn A) = sgn_bool (0 < Re A)", "using assms"], ["proof (prove)\nusing this:\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re (sgn A) = sgn_bool (0 < Re A)", "using More_Complex.Re_sgn complex_eq_if_Re_eq"], ["proof (prove)\nusing this:\n  is_real A\n  A \\<noteq> 0\n  is_real ?R \\<Longrightarrow> Re (sgn ?R) = sgn (Re ?R)\n  \\<lbrakk>is_real ?z1.0; is_real ?z2.0\\<rbrakk>\n  \\<Longrightarrow> (?z1.0 = ?z2.0) = (Re ?z1.0 = Re ?z2.0)\n\ngoal (1 subgoal):\n 1. Re (sgn A) = sgn_bool (0 < Re A)", "by auto"], ["", "lemma Re_mult_real3:\n  assumes \"is_real z1\" and \"is_real z2\" and \"is_real z3\"\n  shows \"Re (z1 * z2 * z3) = Re z1 * Re z2 * Re z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (z1 * z2 * z3) = Re z1 * Re z2 * Re z3", "using assms"], ["proof (prove)\nusing this:\n  is_real z1\n  is_real z2\n  is_real z3\n\ngoal (1 subgoal):\n 1. Re (z1 * z2 * z3) = Re z1 * Re z2 * Re z3", "by (metis Re_mult_real mult_reals)"], ["", "lemma sgn_sqrt [simp]: \n  shows \"sgn (sqrt x) = sgn x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (sqrt x) = sgn x", "by (simp add: sgn_root sqrt_def)"], ["", "lemma real_circle_sgn_r:\n  assumes \"is_circle H\" and \"(a, r) = euclidean_circle H\"\n  shows \"sgn r = - circline_type H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn r = - circline_type H", "using assms"], ["proof (prove)\nusing this:\n  is_circle H\n  (a, r) = euclidean_circle H\n\ngoal (1 subgoal):\n 1. sgn r = - circline_type H", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "fix H :: complex_mat and a r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "hence \"is_real A\" \"is_real D\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D", "using hermitean_elems hh"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "assume \"\\<not> circline_A0_cmat H\" \"(a, r) = euclidean_circle_cmat H\""], ["proof (state)\nthis:\n  \\<not> circline_A0_cmat H\n  (a, r) = euclidean_circle_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "hence \"A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat H\n  (a, r) = euclidean_circle_cmat H\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "using \\<open>\\<not> circline_A0_cmat H\\<close> HH"], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat H\n  (a, r) = euclidean_circle_cmat H\n  \\<not> circline_A0_cmat H\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "hence \"Re A * Re A > 0\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Re A * Re A", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n  is_real A\n\ngoal (1 subgoal):\n 1. 0 < Re A * Re A", "using complex_eq_if_Re_eq not_real_square_gt_zero"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n  is_real A\n  \\<lbrakk>is_real ?z1.0; is_real ?z2.0\\<rbrakk>\n  \\<Longrightarrow> (?z1.0 = ?z2.0) = (Re ?z1.0 = Re ?z2.0)\n  (\\<not> 0 < ?x * ?x) = (?x = 0)\n\ngoal (1 subgoal):\n 1. 0 < Re A * Re A", "by fastforce"], ["proof (state)\nthis:\n  0 < Re A * Re A\n\ngoal (1 subgoal):\n 1. \\<And>H a r Ha aa ra.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; (a, r) = euclidean_circle_cmat H;\n        \\<not> circline_A0_clmat Ha;\n        (aa, ra) = euclidean_circle_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> sgn r = - circline_type_cmat H", "thus \"sgn r = - circline_type_cmat H\""], ["proof (prove)\nusing this:\n  0 < Re A * Re A\n\ngoal (1 subgoal):\n 1. sgn r = - circline_type_cmat H", "using HH \\<open>(a, r) = euclidean_circle_cmat H\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 < Re A * Re A\n  H = (A, B, C, D)\n  (a, r) = euclidean_circle_cmat H\n  is_real A\n  is_real D\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn r = - circline_type_cmat H", "by (simp add: Re_divide_real sgn_minus[symmetric])"], ["proof (state)\nthis:\n  sgn r = - circline_type_cmat H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The definition of an angle using algebraic terms is not intuitive, and we want to connect it to\nthe more common definition given earlier that defines an\nangle between circlines as the angle between tangent vectors in the point of the intersection of the\ncirclines.\\<close>"], ["", "lemma cos_angle_eq_cos_ang_circ:\n  assumes\n  \"is_circle (of_ocircline H1)\" and \"is_circle (of_ocircline H2)\" and\n  \"circline_type (of_ocircline H1) < 0\" and \"circline_type (of_ocircline H2) < 0\"\n  \"(a1, r1) = euclidean_circle (of_ocircline H1)\" and \"(a2, r2) = euclidean_circle (of_ocircline H2)\" and\n  \"of_complex E \\<in> ocircline_set H1 \\<inter> ocircline_set H2\"\n  shows \"cos_angle H1 H2 = cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "let ?p1 = \"pos_oriented H1\" and ?p2 = \"pos_oriented H2\""], ["proof (state)\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "have \"E \\<in> circle a1 r1\" \"E \\<in> circle a2 r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E \\<in> circle a1 r1 &&& E \\<in> circle a2 r2", "using classic_circle[of \"of_ocircline H1\" a1 r1]  classic_circle[of \"of_ocircline H2\" a2 r2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_circle (of_ocircline H1);\n   (a1, r1) = euclidean_circle (of_ocircline H1);\n   circline_type (of_ocircline H1) \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> circline_set (of_ocircline H1) =\n                    of_complex ` circle a1 r1\n  \\<lbrakk>is_circle (of_ocircline H2);\n   (a2, r2) = euclidean_circle (of_ocircline H2);\n   circline_type (of_ocircline H2) \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> circline_set (of_ocircline H2) =\n                    of_complex ` circle a2 r2\n\ngoal (1 subgoal):\n 1. E \\<in> circle a1 r1 &&& E \\<in> circle a2 r2", "using assms of_complex_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_circle (of_ocircline H1);\n   (a1, r1) = euclidean_circle (of_ocircline H1);\n   circline_type (of_ocircline H1) \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> circline_set (of_ocircline H1) =\n                    of_complex ` circle a1 r1\n  \\<lbrakk>is_circle (of_ocircline H2);\n   (a2, r2) = euclidean_circle (of_ocircline H2);\n   circline_type (of_ocircline H2) \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> circline_set (of_ocircline H2) =\n                    of_complex ` circle a2 r2\n  is_circle (of_ocircline H1)\n  is_circle (of_ocircline H2)\n  circline_type (of_ocircline H1) < 0\n  circline_type (of_ocircline H2) < 0\n  (a1, r1) = euclidean_circle (of_ocircline H1)\n  (a2, r2) = euclidean_circle (of_ocircline H2)\n  of_complex E \\<in> ocircline_set H1 \\<inter> ocircline_set H2\n  of_complex ?x = of_complex ?y \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. E \\<in> circle a1 r1 &&& E \\<in> circle a2 r2", "by auto"], ["proof (state)\nthis:\n  E \\<in> circle a1 r1\n  E \\<in> circle a2 r2\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "hence *: \"cdist E a1 = r1\" \"cdist E a2 = r2\""], ["proof (prove)\nusing this:\n  E \\<in> circle a1 r1\n  E \\<in> circle a2 r2\n\ngoal (1 subgoal):\n 1. cdist E a1 = r1 &&& cdist E a2 = r2", "unfolding circle_def"], ["proof (prove)\nusing this:\n  E \\<in> {z. cmod (z - a1) = r1}\n  E \\<in> {z. cmod (z - a2) = r2}\n\ngoal (1 subgoal):\n 1. cdist E a1 = r1 &&& cdist E a2 = r2", "by (simp_all add: norm_minus_commute)"], ["proof (state)\nthis:\n  cdist E a1 = r1\n  cdist E a2 = r2\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "have \"r1 > 0\" \"r2 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < r1 &&& 0 < r2", "using assms(1-6) real_circle_sgn_r[of \"of_ocircline H1\" a1 r1]  real_circle_sgn_r[of \"of_ocircline H2\" a2 r2]"], ["proof (prove)\nusing this:\n  is_circle (of_ocircline H1)\n  is_circle (of_ocircline H2)\n  circline_type (of_ocircline H1) < 0\n  circline_type (of_ocircline H2) < 0\n  (a1, r1) = euclidean_circle (of_ocircline H1)\n  (a2, r2) = euclidean_circle (of_ocircline H2)\n  \\<lbrakk>is_circle (of_ocircline H1);\n   (a1, r1) = euclidean_circle (of_ocircline H1)\\<rbrakk>\n  \\<Longrightarrow> sgn r1 = - circline_type (of_ocircline H1)\n  \\<lbrakk>is_circle (of_ocircline H2);\n   (a2, r2) = euclidean_circle (of_ocircline H2)\\<rbrakk>\n  \\<Longrightarrow> sgn r2 = - circline_type (of_ocircline H2)\n\ngoal (1 subgoal):\n 1. 0 < r1 &&& 0 < r2", "using sgn_greater"], ["proof (prove)\nusing this:\n  is_circle (of_ocircline H1)\n  is_circle (of_ocircline H2)\n  circline_type (of_ocircline H1) < 0\n  circline_type (of_ocircline H2) < 0\n  (a1, r1) = euclidean_circle (of_ocircline H1)\n  (a2, r2) = euclidean_circle (of_ocircline H2)\n  \\<lbrakk>is_circle (of_ocircline H1);\n   (a1, r1) = euclidean_circle (of_ocircline H1)\\<rbrakk>\n  \\<Longrightarrow> sgn r1 = - circline_type (of_ocircline H1)\n  \\<lbrakk>is_circle (of_ocircline H2);\n   (a2, r2) = euclidean_circle (of_ocircline H2)\\<rbrakk>\n  \\<Longrightarrow> sgn r2 = - circline_type (of_ocircline H2)\n  ((0::?'a) < sgn ?a) = ((0::?'a) < ?a)\n\ngoal (1 subgoal):\n 1. 0 < r1 &&& 0 < r2", "by fastforce+"], ["proof (state)\nthis:\n  0 < r1\n  0 < r2\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "hence \"E \\<noteq> a1\" \"E \\<noteq> a2\""], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n\ngoal (1 subgoal):\n 1. E \\<noteq> a1 &&& E \\<noteq> a2", "using \\<open>cdist E a1 = r1\\<close> \\<open>cdist E a2 = r2\\<close>"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n  cdist E a1 = r1\n  cdist E a2 = r2\n\ngoal (1 subgoal):\n 1. E \\<noteq> a1 &&& E \\<noteq> a2", "by auto"], ["proof (state)\nthis:\n  E \\<noteq> a1\n  E \\<noteq> a2\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "let ?k = \"sgn_bool (?p1 = ?p2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "let ?xx = \"?k * (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) / (2 * r1 * r2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "have \"cos (ang_circ E a1 a2 ?p1 ?p2) = ?xx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2)) =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "using law_of_cosines[of a2 a1 E] * \\<open>r1 > 0\\<close> \\<open>r2 > 0\\<close> cos_ang_circ_simp[OF \\<open>E \\<noteq> a1\\<close> \\<open>E \\<noteq> a2\\<close>]"], ["proof (prove)\nusing this:\n  (cdist a2 a1)\\<^sup>2 =\n  (cdist E a1)\\<^sup>2 + (cdist E a2)\\<^sup>2 -\n  2 * cdist E a1 * cdist E a2 * cos (\\<angle> (a1 - E) (a2 - E))\n  cdist E a1 = r1\n  cdist E a2 = r2\n  0 < r1\n  0 < r2\n  cos (ang_circ E a1 a2 ?p1.0 ?p2.0) =\n  sgn_bool (?p1.0 = ?p2.0) * cos (arg (E - a2) - arg (E - a1))\n\ngoal (1 subgoal):\n 1. cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2)) =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "by (subst (asm) ang_vec_opposite_opposite'[OF \\<open>E \\<noteq> a1\\<close>[symmetric] \\<open>E \\<noteq> a2\\<close>[symmetric], symmetric]) simp"], ["proof (state)\nthis:\n  cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2)) =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "moreover"], ["proof (state)\nthis:\n  cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2)) =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "have \"cos_angle H1 H2 = ?xx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "using \\<open>r1 > 0\\<close> \\<open>r2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "using \\<open>(a1, r1) = euclidean_circle (of_ocircline H1)\\<close> \\<open>(a2, r2) = euclidean_circle (of_ocircline H2)\\<close>"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n  (a1, r1) = euclidean_circle (of_ocircline H1)\n  (a2, r2) = euclidean_circle (of_ocircline H2)\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "using \\<open>is_circle (of_ocircline H1)\\<close> \\<open>is_circle (of_ocircline H2)\\<close>"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n  (a1, r1) = euclidean_circle (of_ocircline H1)\n  (a2, r2) = euclidean_circle (of_ocircline H2)\n  is_circle (of_ocircline H1)\n  is_circle (of_ocircline H2)\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "using \\<open>circline_type (of_ocircline H1) < 0\\<close> \\<open>circline_type (of_ocircline H2) < 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n  (a1, r1) = euclidean_circle (of_ocircline H1)\n  (a2, r2) = euclidean_circle (of_ocircline H2)\n  is_circle (of_ocircline H1)\n  is_circle (of_ocircline H2)\n  circline_type (of_ocircline H1) < 0\n  circline_type (of_ocircline H2) < 0\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    sgn_bool (pos_oriented H1 = pos_oriented H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "fix a1 r1 H1 H2 a2 r2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "obtain A1 B1 C1 D1 where HH1: \"H1 = (A1, B1, C1, D1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1.\n        H1 = (A1, B1, C1, D1) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1) auto"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "obtain A2 B2 C2 D2 where HH2: \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A2 B2 C2 D2.\n        H2 = (A2, B2, C2, D2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H2) auto"], ["proof (state)\nthis:\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "have *: \"is_real A1\" \"is_real A2\" \"is_real D1\" \"is_real D2\" \"cnj B1 = C1\" \"cnj B2 = C2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (is_real A1 &&& is_real A2 &&& is_real D1) &&&\n    is_real D2 &&& cnj B1 = C1 &&& cnj B2 = C2", "using hh hermitean_elems[of A1 B1 C1 D1] hermitean_elems[of A2 B2 C2 D2] HH1 HH2"], ["proof (prove)\nusing this:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> is_real A1\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> is_real D1\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> B1 = cnj C1\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> cnj B1 = C1\n  hermitean (A2, B2, C2, D2) \\<Longrightarrow> is_real A2\n  hermitean (A2, B2, C2, D2) \\<Longrightarrow> is_real D2\n  hermitean (A2, B2, C2, D2) \\<Longrightarrow> B2 = cnj C2\n  hermitean (A2, B2, C2, D2) \\<Longrightarrow> cnj B2 = C2\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. (is_real A1 &&& is_real A2 &&& is_real D1) &&&\n    is_real D2 &&& cnj B1 = C1 &&& cnj B2 = C2", "by auto"], ["proof (state)\nthis:\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n  cnj B1 = C1\n  cnj B2 = C2\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "have \"cnj A1 = A1\" \"cnj A2 = A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj A1 = A1 &&& cnj A2 = A2", "using \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. cnj A1 = A1 &&& cnj A2 = A2", "by (case_tac[!] A1, case_tac[!] A2, auto simp add: Complex_eq)"], ["proof (state)\nthis:\n  cnj A1 = A1\n  cnj A2 = A2\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "assume \"\\<not> circline_A0_cmat (id H1)\" \"\\<not> circline_A0_cmat (id H2)\""], ["proof (state)\nthis:\n  \\<not> circline_A0_cmat (id H1)\n  \\<not> circline_A0_cmat (id H2)\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "hence \"A1 \\<noteq> 0\" \"A2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat (id H1)\n  \\<not> circline_A0_cmat (id H2)\n\ngoal (1 subgoal):\n 1. A1 \\<noteq> 0 &&& A2 \\<noteq> 0", "using HH1 HH2"], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat (id H1)\n  \\<not> circline_A0_cmat (id H2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. A1 \\<noteq> 0 &&& A2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "hence \"Re A1 \\<noteq> 0\" \"Re A2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re A1 \\<noteq> 0 &&& Re A2 \\<noteq> 0", "using \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. Re A1 \\<noteq> 0 &&& Re A2 \\<noteq> 0", "using complex.expand"], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  is_real A1\n  is_real A2\n  Re ?complex = Re ?complex' \\<and>\n  Im ?complex = Im ?complex' \\<Longrightarrow>\n  ?complex = ?complex'\n\ngoal (1 subgoal):\n 1. Re A1 \\<noteq> 0 &&& Re A2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  Re A1 \\<noteq> 0\n  Re A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "assume \"circline_type_cmat (id H1) < 0\" \"circline_type_cmat (id H2) < 0\""], ["proof (state)\nthis:\n  circline_type_cmat (id H1) < 0\n  circline_type_cmat (id H2) < 0\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "assume \"(a1, r1) = euclidean_circle_cmat (id H1)\" \"(a2, r2) = euclidean_circle_cmat (id H2)\""], ["proof (state)\nthis:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "assume \"r1 > 0\" \"r2 > 0\""], ["proof (state)\nthis:\n  0 < r1\n  0 < r2\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "let ?D12 = \"mat_det_12 H1 H2\" and ?D1 = \"mat_det H1\" and ?D2 = \"mat_det H2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "let ?x1 = \"(cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2\" and ?x2 = \"2*r1*r2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "let ?x = \"?x1 / ?x2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "have *:  \"Re (?D12) / (2 * (sqrt (Re (?D1 * ?D2)))) = Re (sgn A1) * Re (sgn A2) * ?x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "let ?M1 = \"(A1, B1, C1, D1)\" and ?M2 = \"(A2, B2, C2, D2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "let ?d1 = \"B1 * C1 - A1 * D1\" and ?d2 = \"B2 * C2 - A2 * D2\""], ["proof (state)\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have \"Re ?d1 > 0\" \"Re ?d2 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (B1 * C1 - A1 * D1) &&& 0 < Re (B2 * C2 - A2 * D2)", "using HH1 HH2 \\<open>circline_type_cmat (id H1) < 0\\<close>  \\<open>circline_type_cmat (id H2) < 0\\<close>"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  circline_type_cmat (id H1) < 0\n  circline_type_cmat (id H2) < 0\n\ngoal (1 subgoal):\n 1. 0 < Re (B1 * C1 - A1 * D1) &&& 0 < Re (B2 * C2 - A2 * D2)", "by auto"], ["proof (state)\nthis:\n  0 < Re (B1 * C1 - A1 * D1)\n  0 < Re (B2 * C2 - A2 * D2)\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "hence **: \"Re (?d1 / (A1 * A1)) > 0\" \"Re (?d2 / (A2 * A2)) > 0\""], ["proof (prove)\nusing this:\n  0 < Re (B1 * C1 - A1 * D1)\n  0 < Re (B2 * C2 - A2 * D2)\n\ngoal (1 subgoal):\n 1. 0 < Re ((B1 * C1 - A1 * D1) / (A1 * A1)) &&&\n    0 < Re ((B2 * C2 - A2 * D2) / (A2 * A2))", "using \\<open>is_real A1\\<close> \\<open>is_real A2\\<close> \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 < Re (B1 * C1 - A1 * D1)\n  0 < Re (B2 * C2 - A2 * D2)\n  is_real A1\n  is_real A2\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Re ((B1 * C1 - A1 * D1) / (A1 * A1)) &&&\n    0 < Re ((B2 * C2 - A2 * D2) / (A2 * A2))", "by (subst Re_divide_real, simp_all add: complex_neq_0 power2_eq_square)+"], ["proof (state)\nthis:\n  0 < Re ((B1 * C1 - A1 * D1) / (A1 * A1))\n  0 < Re ((B2 * C2 - A2 * D2) / (A2 * A2))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have ***: \"is_real (?d1 / (A1 * A1)) \\<and> is_real (?d2 / (A2 * A2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real ((B1 * C1 - A1 * D1) / (A1 * A1)) \\<and>\n    is_real ((B2 * C2 - A2 * D2) / (A2 * A2))", "using \\<open>is_real A1\\<close>  \\<open>is_real A2\\<close> \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close> \\<open>cnj B1 = C1\\<close>[symmetric] \\<open>cnj B2 = C2\\<close>[symmetric] \\<open>is_real D1\\<close> \\<open>is_real D2\\<close>"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  C1 = cnj B1\n  C2 = cnj B2\n  is_real D1\n  is_real D2\n\ngoal (1 subgoal):\n 1. is_real ((B1 * C1 - A1 * D1) / (A1 * A1)) \\<and>\n    is_real ((B2 * C2 - A2 * D2) / (A2 * A2))", "by (subst div_reals, simp, simp, simp)+"], ["proof (state)\nthis:\n  is_real ((B1 * C1 - A1 * D1) / (A1 * A1)) \\<and>\n  is_real ((B2 * C2 - A2 * D2) / (A2 * A2))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have \"cor ?x = mat_det_12 ?M1 ?M2 / (2 * sgn A1 * sgn A2 * cor (sqrt (Re ?d1) * sqrt (Re ?d2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "have \"A1*A2*cor ?x1 = mat_det_12 ?M1 ?M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "have 1: \"A1*A2*(cor ((cdist a2 a1)\\<^sup>2)) = ((B2*A1 - A2*B1)*(C2*A1 - C1*A2)) / (A1*A2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) =\n    (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "using \\<open>(a1, r1) = euclidean_circle_cmat (id H1)\\<close> \\<open>(a2, r2) = euclidean_circle_cmat (id H2)\\<close>"], ["proof (prove)\nusing this:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) =\n    (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "unfolding cdist_def cmod_square"], ["proof (prove)\nusing this:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (Re ((a1 - a2) * cnj (a1 - a2))) =\n    (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "using HH1 HH2 * \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close> \\<open>cnj A1 = A1\\<close> \\<open>cnj A2 = A2\\<close>"], ["proof (prove)\nusing this:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n  cnj B1 = C1\n  cnj B2 = C2\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  cnj A1 = A1\n  cnj A2 = A2\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (Re ((a1 - a2) * cnj (a1 - a2))) =\n    (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "unfolding Let_def"], ["proof (prove)\nusing this:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n  cnj B1 = C1\n  cnj B2 = C2\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  cnj A1 = A1\n  cnj A2 = A2\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (Re ((a1 - a2) * cnj (a1 - a2))) =\n    (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "apply (subst complex_of_real_Re)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(a1, r1) = euclidean_circle_cmat (id H1);\n     (a2, r2) = euclidean_circle_cmat (id H2); H1 = (A1, B1, C1, D1);\n     H2 = (A2, B2, C2, D2); is_real A1; is_real A2; is_real D1; is_real D2;\n     cnj B1 = C1; cnj B2 = C2; A1 \\<noteq> 0; A2 \\<noteq> 0; cnj A1 = A1;\n     cnj A2 = A2\\<rbrakk>\n    \\<Longrightarrow> is_real ((a1 - a2) * cnj (a1 - a2))\n 2. \\<lbrakk>(a1, r1) = euclidean_circle_cmat (id H1);\n     (a2, r2) = euclidean_circle_cmat (id H2); H1 = (A1, B1, C1, D1);\n     H2 = (A2, B2, C2, D2); is_real A1; is_real A2; is_real D1; is_real D2;\n     cnj B1 = C1; cnj B2 = C2; A1 \\<noteq> 0; A2 \\<noteq> 0; cnj A1 = A1;\n     cnj A2 = A2\\<rbrakk>\n    \\<Longrightarrow> A1 * A2 * ((a1 - a2) * cnj (a1 - a2)) =\n                      (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "apply (simp add: field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a1, r1) = euclidean_circle_cmat (id H1);\n     (a2, r2) = euclidean_circle_cmat (id H2); H1 = (A1, B1, C1, D1);\n     H2 = (A2, B2, C2, D2); is_real A1; is_real A2; is_real D1; is_real D2;\n     cnj B1 = C1; cnj B2 = C2; A1 \\<noteq> 0; A2 \\<noteq> 0; cnj A1 = A1;\n     cnj A2 = A2\\<rbrakk>\n    \\<Longrightarrow> A1 * A2 * ((a1 - a2) * cnj (a1 - a2)) =\n                      (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "apply (simp add: complex_mult_cnj_cmod power2_eq_square)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a1 = - (B1 / A1) \\<and>\n             r1 = sqrt (Re ((B1 * C1 - A1 * D1) / (A1 * A1)));\n     a2 = - (B2 / A2) \\<and>\n     r2 = sqrt (Re ((B2 * C2 - A2 * D2) / (A2 * A2)));\n     H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2); is_real A1; is_real A2;\n     is_real D1; is_real D2; cnj B1 = C1; cnj B2 = C2; A1 \\<noteq> 0;\n     A2 \\<noteq> 0; cnj A1 = A1; cnj A2 = A2\\<rbrakk>\n    \\<Longrightarrow> A1 * A2 *\n                      ((B2 / A2 - B1 / A1) * (C2 / A2 - C1 / A1)) =\n                      (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) =\n  (B2 * A1 - A2 * B1) * (C2 * A1 - C1 * A2) / (A1 * A2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "have 2: \"A1*A2*cor (-r1\\<^sup>2) = A2*D1 - B1*C1*A2/A1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 * A2 * cor (- r1\\<^sup>2) = A2 * D1 - B1 * C1 * A2 / A1", "using \\<open>(a1, r1) = euclidean_circle_cmat (id H1)\\<close>"], ["proof (prove)\nusing this:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (- r1\\<^sup>2) = A2 * D1 - B1 * C1 * A2 / A1", "using HH1 ** * *** \\<open>A1 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  H1 = (A1, B1, C1, D1)\n  0 < Re ((B1 * C1 - A1 * D1) / (A1 * A1))\n  0 < Re ((B2 * C2 - A2 * D2) / (A2 * A2))\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n  cnj B1 = C1\n  cnj B2 = C2\n  is_real ((B1 * C1 - A1 * D1) / (A1 * A1)) \\<and>\n  is_real ((B2 * C2 - A2 * D2) / (A2 * A2))\n  A1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (- r1\\<^sup>2) = A2 * D1 - B1 * C1 * A2 / A1", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  A1 * A2 * cor (- r1\\<^sup>2) = A2 * D1 - B1 * C1 * A2 / A1\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "have 3: \"A1*A2*cor (-r2\\<^sup>2) = A1*D2 - B2*C2*A1/A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 * A2 * cor (- r2\\<^sup>2) = A1 * D2 - B2 * C2 * A1 / A2", "using \\<open>(a2, r2) = euclidean_circle_cmat (id H2)\\<close>"], ["proof (prove)\nusing this:\n  (a2, r2) = euclidean_circle_cmat (id H2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (- r2\\<^sup>2) = A1 * D2 - B2 * C2 * A1 / A2", "using HH2 ** * *** \\<open>A2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (a2, r2) = euclidean_circle_cmat (id H2)\n  H2 = (A2, B2, C2, D2)\n  0 < Re ((B1 * C1 - A1 * D1) / (A1 * A1))\n  0 < Re ((B2 * C2 - A2 * D2) / (A2 * A2))\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n  cnj B1 = C1\n  cnj B2 = C2\n  is_real ((B1 * C1 - A1 * D1) / (A1 * A1)) \\<and>\n  is_real ((B2 * C2 - A2 * D2) / (A2 * A2))\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (- r2\\<^sup>2) = A1 * D2 - B2 * C2 * A1 / A2", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  A1 * A2 * cor (- r2\\<^sup>2) = A1 * D2 - B2 * C2 * A1 / A2\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "have \"A1*A2*cor((cdist a2 a1)\\<^sup>2) + A1*A2*cor(-r1\\<^sup>2) + A1*A2*cor(-r2\\<^sup>2) = mat_det_12 ?M1 ?M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) + A1 * A2 * cor (- r1\\<^sup>2) +\n    A1 * A2 * cor (- r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "using \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) + A1 * A2 * cor (- r1\\<^sup>2) +\n    A1 * A2 * cor (- r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "by (subst 1, subst 2, subst 3) (simp add: field_simps)"], ["proof (state)\nthis:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) + A1 * A2 * cor (- r1\\<^sup>2) +\n  A1 * A2 * cor (- r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2) + A1 * A2 * cor (- r1\\<^sup>2) +\n  A1 * A2 * cor (- r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "moreover"], ["proof (state)\nthis:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "have \"A1 * A2 * cor (?x2) = 2 * sgn A1 * sgn A2 * cor (sqrt (Re ?d1) * sqrt (Re ?d2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "have 1: \"sqrt (Re (?d1/ (A1 * A1))) = sqrt (Re ?d1) / \\<bar>Re A1\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (Re ((B1 * C1 - A1 * D1) / (A1 * A1))) =\n    sqrt (Re (B1 * C1 - A1 * D1)) / \\<bar>Re A1\\<bar>", "using \\<open>A1 \\<noteq> 0\\<close> \\<open>is_real A1\\<close>"], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  is_real A1\n\ngoal (1 subgoal):\n 1. sqrt (Re ((B1 * C1 - A1 * D1) / (A1 * A1))) =\n    sqrt (Re (B1 * C1 - A1 * D1)) / \\<bar>Re A1\\<bar>", "by (subst Re_divide_real, simp, simp, subst real_sqrt_divide, simp)"], ["proof (state)\nthis:\n  sqrt (Re ((B1 * C1 - A1 * D1) / (A1 * A1))) =\n  sqrt (Re (B1 * C1 - A1 * D1)) / \\<bar>Re A1\\<bar>\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "have 2: \"sqrt (Re (?d2/ (A2 * A2))) = sqrt (Re ?d2) / \\<bar>Re A2\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (Re ((B2 * C2 - A2 * D2) / (A2 * A2))) =\n    sqrt (Re (B2 * C2 - A2 * D2)) / \\<bar>Re A2\\<bar>", "using \\<open>A2 \\<noteq> 0\\<close> \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  A2 \\<noteq> 0\n  is_real A2\n\ngoal (1 subgoal):\n 1. sqrt (Re ((B2 * C2 - A2 * D2) / (A2 * A2))) =\n    sqrt (Re (B2 * C2 - A2 * D2)) / \\<bar>Re A2\\<bar>", "by (subst Re_divide_real, simp, simp, subst real_sqrt_divide, simp)"], ["proof (state)\nthis:\n  sqrt (Re ((B2 * C2 - A2 * D2) / (A2 * A2))) =\n  sqrt (Re (B2 * C2 - A2 * D2)) / \\<bar>Re A2\\<bar>\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "have \"sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn A1 = A1 / cor \\<bar>Re A1\\<bar>", "using \\<open>is_real A1\\<close>"], ["proof (prove)\nusing this:\n  is_real A1\n\ngoal (1 subgoal):\n 1. sgn A1 = A1 / cor \\<bar>Re A1\\<bar>", "unfolding sgn_eq"], ["proof (prove)\nusing this:\n  is_real A1\n\ngoal (1 subgoal):\n 1. A1 / cor (cmod A1) = A1 / cor \\<bar>Re A1\\<bar>", "by (simp add: cmod_eq_Re)"], ["proof (state)\nthis:\n  sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "moreover"], ["proof (state)\nthis:\n  sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "have \"sgn A2 = A2 / cor \\<bar>Re A2\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn A2 = A2 / cor \\<bar>Re A2\\<bar>", "using \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  is_real A2\n\ngoal (1 subgoal):\n 1. sgn A2 = A2 / cor \\<bar>Re A2\\<bar>", "unfolding sgn_eq"], ["proof (prove)\nusing this:\n  is_real A2\n\ngoal (1 subgoal):\n 1. A2 / cor (cmod A2) = A2 / cor \\<bar>Re A2\\<bar>", "by (simp add: cmod_eq_Re)"], ["proof (state)\nthis:\n  sgn A2 = A2 / cor \\<bar>Re A2\\<bar>\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "ultimately"], ["proof (chain)\npicking this:\n  sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\n  sgn A2 = A2 / cor \\<bar>Re A2\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\n  sgn A2 = A2 / cor \\<bar>Re A2\\<bar>\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "using \\<open>(a1, r1) = euclidean_circle_cmat (id H1)\\<close> \\<open>(a2, r2) = euclidean_circle_cmat (id H2)\\<close>  HH1 HH2"], ["proof (prove)\nusing this:\n  sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\n  sgn A2 = A2 / cor \\<bar>Re A2\\<bar>\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "using *** \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  sgn A1 = A1 / cor \\<bar>Re A1\\<bar>\n  sgn A2 = A2 / cor \\<bar>Re A2\\<bar>\n  (a1, r1) = euclidean_circle_cmat (id H1)\n  (a2, r2) = euclidean_circle_cmat (id H2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real ((B1 * C1 - A1 * D1) / (A1 * A1)) \\<and>\n  is_real ((B2 * C2 - A2 * D2) / (A2 * A2))\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor (2 * r1 * r2) =\n    2 * sgn A1 * sgn A2 *\n    cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "by simp (subst 1, subst 2, simp)"], ["proof (state)\nthis:\n  A1 * A2 * cor (2 * r1 * r2) =\n  2 * sgn A1 * sgn A2 *\n  cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A1 * A2 * cor (2 * r1 * r2) =\n  2 * sgn A1 * sgn A2 *\n  cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "ultimately"], ["proof (chain)\npicking this:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n  A1 * A2 * cor (2 * r1 * r2) =\n  2 * sgn A1 * sgn A2 *\n  cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))", "have \"(A1 * A2 * cor ?x1) / (A1 * A2 * (cor ?x2)) =\n               mat_det_12 ?M1 ?M2 / (2 * sgn A1 * sgn A2 * cor (sqrt (Re ?d1) * sqrt (Re ?d2)))\""], ["proof (prove)\nusing this:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2)\n  A1 * A2 * cor (2 * r1 * r2) =\n  2 * sgn A1 * sgn A2 *\n  cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2)))\n\ngoal (1 subgoal):\n 1. A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n    (A1 * A2 * cor (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "by simp"], ["proof (state)\nthis:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n  (A1 * A2 * cor (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "thus ?thesis"], ["proof (prove)\nusing this:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n  (A1 * A2 * cor (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "using \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  A1 * A2 * cor ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n  (A1 * A2 * cor (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 * sgn A1 * sgn A2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "by simp"], ["proof (state)\nthis:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "hence \"cor ?x * sgn A1 * sgn A2 = mat_det_12 ?M1 ?M2 / (2 * cor (sqrt (Re ?d1) * sqrt (Re ?d2)))\""], ["proof (prove)\nusing this:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) *\n    sgn A1 *\n    sgn A2 =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "using \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * sgn A1 * sgn A2 *\n   cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n         (2 * r1 * r2)) *\n    sgn A1 *\n    sgn A2 =\n    mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n    (2 *\n     cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))", "by (simp add: sgn_zero_iff)"], ["proof (state)\nthis:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) *\n  sgn A1 *\n  sgn A2 =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "moreover"], ["proof (state)\nthis:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) *\n  sgn A1 *\n  sgn A2 =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have \"Re (cor ?x * sgn A1 * sgn A2) = Re (sgn A1) * Re (sgn A2) * ?x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n             (2 * r1 * r2)) *\n        sgn A1 *\n        sgn A2) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n             (2 * r1 * r2)) *\n        sgn A1 *\n        sgn A2) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have \"is_real (cor ?x)\" \"is_real (sgn A1)\" \"is_real (sgn A2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real\n     (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2))) &&&\n    is_real (sgn A1) &&& is_real (sgn A2)", "using \\<open>is_real A1\\<close> \\<open>is_real A2\\<close> Im_complex_of_real[of ?x]"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n  is_real\n   (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)))\n\ngoal (1 subgoal):\n 1. is_real\n     (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2))) &&&\n    is_real (sgn A1) &&& is_real (sgn A2)", "by auto"], ["proof (state)\nthis:\n  is_real\n   (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)))\n  is_real (sgn A1)\n  is_real (sgn A2)\n\ngoal (1 subgoal):\n 1. Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n             (2 * r1 * r2)) *\n        sgn A1 *\n        sgn A2) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_real\n   (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)))\n  is_real (sgn A1)\n  is_real (sgn A2)\n\ngoal (1 subgoal):\n 1. Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n             (2 * r1 * r2)) *\n        sgn A1 *\n        sgn A2) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "using Re_complex_of_real[of ?x]"], ["proof (prove)\nusing this:\n  is_real\n   (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)))\n  is_real (sgn A1)\n  is_real (sgn A2)\n  Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2))) =\n  ((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)\n\ngoal (1 subgoal):\n 1. Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n             (2 * r1 * r2)) *\n        sgn A1 *\n        sgn A2) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "by (subst Re_mult_real3, auto simp add: field_simps)"], ["proof (state)\nthis:\n  Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2)) *\n      sgn A1 *\n      sgn A2) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2)) *\n      sgn A1 *\n      sgn A2) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "moreover"], ["proof (state)\nthis:\n  Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2)) *\n      sgn A1 *\n      sgn A2) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have *: \"sqrt (Re ?D1) * sqrt (Re ?D2) = sqrt (Re ?d1) * sqrt (Re ?d2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (Re (mat_det H1)) * sqrt (Re (mat_det H2)) =\n    sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))", "using HH1 HH2"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. sqrt (Re (mat_det H1)) * sqrt (Re (mat_det H2)) =\n    sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))", "by (subst real_sqrt_mult[symmetric])+ (simp add: field_simps)"], ["proof (state)\nthis:\n  sqrt (Re (mat_det H1)) * sqrt (Re (mat_det H2)) =\n  sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have \"2 * (sqrt (Re (?D1 * ?D2))) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * sqrt (Re (mat_det H1 * mat_det H2)) \\<noteq> 0", "using \\<open>Re ?d1 > 0\\<close>  \\<open>Re ?d2 > 0\\<close> HH1 HH2 \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>  \\<open>is_real D1\\<close> \\<open>is_real D2\\<close>"], ["proof (prove)\nusing this:\n  0 < Re (B1 * C1 - A1 * D1)\n  0 < Re (B2 * C2 - A2 * D2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n\ngoal (1 subgoal):\n 1. 2 * sqrt (Re (mat_det H1 * mat_det H2)) \\<noteq> 0", "using hh mat_det_hermitean_real[of \"H1\"]"], ["proof (prove)\nusing this:\n  0 < Re (B1 * C1 - A1 * D1)\n  0 < Re (B2 * C2 - A2 * D2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  hermitean H1 \\<Longrightarrow> is_real (mat_det H1)\n\ngoal (1 subgoal):\n 1. 2 * sqrt (Re (mat_det H1 * mat_det H2)) \\<noteq> 0", "by (subst Re_mult_real, auto)"], ["proof (state)\nthis:\n  2 * sqrt (Re (mat_det H1 * mat_det H2)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "hence **: \"Re (?D12 / (2 * cor (sqrt (Re (?D1 * ?D2))))) = Re (?D12) / (2 * (sqrt (Re (?D1 * ?D2))))\""], ["proof (prove)\nusing this:\n  2 * sqrt (Re (mat_det H1 * mat_det H2)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2 /\n        (2 * cor (sqrt (Re (mat_det H1 * mat_det H2))))) =\n    Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "using \\<open>Re ?d1 > 0\\<close>  \\<open>Re ?d2 > 0\\<close> HH1 HH2 \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>  \\<open>is_real D1\\<close> \\<open>is_real D2\\<close>"], ["proof (prove)\nusing this:\n  2 * sqrt (Re (mat_det H1 * mat_det H2)) \\<noteq> 0\n  0 < Re (B1 * C1 - A1 * D1)\n  0 < Re (B2 * C2 - A2 * D2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n  is_real D1\n  is_real D2\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2 /\n        (2 * cor (sqrt (Re (mat_det H1 * mat_det H2))))) =\n    Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "by (subst Re_divide_real) auto"], ["proof (state)\nthis:\n  Re (mat_det_12 H1 H2 / (2 * cor (sqrt (Re (mat_det H1 * mat_det H2))))) =\n  Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "have \"Re (mat_det_12 ?M1 ?M2 / (2 * cor (sqrt (Re ?d1) * sqrt (Re ?d2)))) = Re (?D12) / (2 * (sqrt (Re (?D1 * ?D2))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n        (2 *\n         cor (sqrt (Re (B1 * C1 - A1 * D1)) *\n              sqrt (Re (B2 * C2 - A2 * D2))))) =\n    Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "using HH1 HH2 hh mat_det_hermitean_real[of \"H1\"]"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  hermitean H1 \\<Longrightarrow> is_real (mat_det H1)\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n        (2 *\n         cor (sqrt (Re (B1 * C1 - A1 * D1)) *\n              sqrt (Re (B2 * C2 - A2 * D2))))) =\n    Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "by (subst **[symmetric], subst Re_mult_real, simp, subst real_sqrt_mult, subst *, simp)"], ["proof (state)\nthis:\n  Re (mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n      (2 *\n       cor (sqrt (Re (B1 * C1 - A1 * D1)) *\n            sqrt (Re (B2 * C2 - A2 * D2))))) =\n  Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "ultimately"], ["proof (chain)\npicking this:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) *\n  sgn A1 *\n  sgn A2 =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n  Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2)) *\n      sgn A1 *\n      sgn A2) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n  Re (mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n      (2 *\n       cor (sqrt (Re (B1 * C1 - A1 * D1)) *\n            sqrt (Re (B2 * C2 - A2 * D2))))) =\n  Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "show ?thesis"], ["proof (prove)\nusing this:\n  cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2)) *\n  sgn A1 *\n  sgn A2 =\n  mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n  (2 * cor (sqrt (Re (B1 * C1 - A1 * D1)) * sqrt (Re (B2 * C2 - A2 * D2))))\n  Re (cor (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) /\n           (2 * r1 * r2)) *\n      sgn A1 *\n      sgn A2) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n  Re (mat_det_12 (A1, B1, C1, D1) (A2, B2, C2, D2) /\n      (2 *\n       cor (sqrt (Re (B1 * C1 - A1 * D1)) *\n            sqrt (Re (B2 * C2 - A2 * D2))))) =\n  Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))\n\ngoal (1 subgoal):\n 1. Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    Re (sgn A1) * Re (sgn A2) *\n    (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))", "by simp"], ["proof (state)\nthis:\n  Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n  Re (sgn A1) * Re (sgn A2) *\n  (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 - r2\\<^sup>2) / (2 * r1 * r2))\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "have **: \"pos_oriented_cmat H1 \\<longleftrightarrow> Re A1 > 0\"  \"pos_oriented_cmat H2 \\<longleftrightarrow> Re A2 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (0 < Re A1) &&&\n    pos_oriented_cmat H2 = (0 < Re A2)", "using \\<open>Re A1 \\<noteq> 0\\<close> HH1  \\<open>Re A2 \\<noteq> 0\\<close> HH2"], ["proof (prove)\nusing this:\n  Re A1 \\<noteq> 0\n  H1 = (A1, B1, C1, D1)\n  Re A2 \\<noteq> 0\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (0 < Re A1) &&&\n    pos_oriented_cmat H2 = (0 < Re A2)", "by auto"], ["proof (state)\nthis:\n  pos_oriented_cmat H1 = (0 < Re A1)\n  pos_oriented_cmat H2 = (0 < Re A2)\n\ngoal (1 subgoal):\n 1. \\<And>r1 r2 a1 H1 a2 H2 r1a r2a a1a H1a a2a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; 0 < r1; 0 < r2;\n        (a1, r1) = euclidean_circle_cmat (id H1);\n        (a2, r2) = euclidean_circle_cmat (id H2);\n        \\<not> circline_A0_cmat (id H1); \\<not> circline_A0_cmat (id H2);\n        circline_type_cmat (id H1) < 0; circline_type_cmat (id H2) < 0;\n        0 < r1a; 0 < r2a; (a1a, r1a) = euclidean_circle_clmat (id H1a);\n        (a2a, r2a) = euclidean_circle_clmat (id H2a);\n        \\<not> circline_A0_clmat (id H1a);\n        \\<not> circline_A0_clmat (id H2a); circline_type_clmat (id H1a) < 0;\n        circline_type_clmat (id H2a) < 0\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat H1 H2 =\n                         sgn_bool\n                          (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                         (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                         (2 * r1 * r2)", "show \"cos_angle_cmat H1 H2 = sgn_bool (pos_oriented_cmat H1 = pos_oriented_cmat H2) * (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /  (2 * r1 * r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle_cmat H1 H2 =\n    sgn_bool (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle_cmat H1 H2 =\n    sgn_bool (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "using \\<open>r1 > 0\\<close> \\<open>r2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n\ngoal (1 subgoal):\n 1. cos_angle_cmat H1 H2 =\n    sgn_bool (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "unfolding cos_angle_cmat_def"], ["proof (prove)\nusing this:\n  0 < r1\n  0 < r2\n\ngoal (1 subgoal):\n 1. - Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2))) =\n    sgn_bool (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n    (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n    (2 * r1 * r2)", "apply (subst divide_minus_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r1; 0 < r2\\<rbrakk>\n    \\<Longrightarrow> - (Re (mat_det_12 H1 H2) /\n                         (2 * sqrt (Re (mat_det H1 * mat_det H2)))) =\n                      sgn_bool\n                       (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                      (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                      (2 * r1 * r2)", "apply (subst *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r1; 0 < r2\\<rbrakk>\n    \\<Longrightarrow> - (Re (sgn A1) * Re (sgn A2) *\n                         (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 -\n                           r2\\<^sup>2) /\n                          (2 * r1 * r2))) =\n                      sgn_bool\n                       (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                      (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                      (2 * r1 * r2)", "apply (subst Re_sgn[OF \\<open>is_real A1\\<close> \\<open>A1 \\<noteq> 0\\<close>], subst Re_sgn[OF \\<open>is_real A2\\<close> \\<open>A2 \\<noteq> 0\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r1; 0 < r2\\<rbrakk>\n    \\<Longrightarrow> - (sgn_bool (0 < Re A1) * sgn_bool (0 < Re A2) *\n                         (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 -\n                           r2\\<^sup>2) /\n                          (2 * r1 * r2))) =\n                      sgn_bool\n                       (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n                      (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                      (2 * r1 * r2)", "apply (subst **, subst **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r1; 0 < r2\\<rbrakk>\n    \\<Longrightarrow> - (sgn_bool (0 < Re A1) * sgn_bool (0 < Re A2) *\n                         (((cdist a2 a1)\\<^sup>2 - r1\\<^sup>2 -\n                           r2\\<^sup>2) /\n                          (2 * r1 * r2))) =\n                      sgn_bool ((0 < Re A1) = (0 < Re A2)) *\n                      (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n                      (2 * r1 * r2)", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  cos_angle_cmat H1 H2 =\n  sgn_bool (pos_oriented_cmat H1 = pos_oriented_cmat H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cos_angle H1 H2 =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "ultimately"], ["proof (chain)\npicking this:\n  cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2)) =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n  cos_angle H1 H2 =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)", "show ?thesis"], ["proof (prove)\nusing this:\n  cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2)) =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n  cos_angle H1 H2 =\n  sgn_bool (pos_oriented H1 = pos_oriented H2) *\n  (r1\\<^sup>2 + r2\\<^sup>2 - (cdist a2 a1)\\<^sup>2) /\n  (2 * r1 * r2)\n\ngoal (1 subgoal):\n 1. cos_angle H1 H2 =\n    cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))", "by simp"], ["proof (state)\nthis:\n  cos_angle H1 H2 =\n  cos (ang_circ E a1 a2 (pos_oriented H1) (pos_oriented H2))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Perpendicularity\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Two circlines are perpendicular if the intersect at right angle i.e., the angle with the cosine\n0.\\<close>"], ["", "definition perpendicular where\n  \"perpendicular H1 H2 \\<longleftrightarrow> cos_angle (of_circline H1) (of_circline H2) = 0\""], ["", "lemma perpendicular_sym:\n  shows \"perpendicular H1 H2 \\<longleftrightarrow> perpendicular H2 H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perpendicular H1 H2 = perpendicular H2 H1", "unfolding perpendicular_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos_angle (of_circline H1) (of_circline H2) = 0) =\n    (cos_angle (of_circline H2) (of_circline H1) = 0)", "by (transfer, transfer, auto simp add: field_simps)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>M?bius transforms preserve angles and perpendicularity\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>M?bius transformations are \\emph{conformal} i.e., they preserve angles between circlines.\\<close>"], ["", "lemma moebius_preserve_circline_angle [simp]:\n  shows \"cos_angle (moebius_ocircline M H1) (moebius_ocircline M H2) =\n         cos_angle H1 H2 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle (moebius_ocircline M H1) (moebius_ocircline M H2) =\n    cos_angle H1 H2", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H1 H2.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat (moebius_circline_cmat_cmat M H1)\n                          (moebius_circline_cmat_cmat M H2) =\n                         cos_angle_cmat H1 H2", "fix H1 H2 M :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H1 H2.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat (moebius_circline_cmat_cmat M H1)\n                          (moebius_circline_cmat_cmat M H2) =\n                         cos_angle_cmat H1 H2", "assume hh: \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H1 H2.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> cos_angle_cmat (moebius_circline_cmat_cmat M H1)\n                          (moebius_circline_cmat_cmat M H2) =\n                         cos_angle_cmat H1 H2", "show \"cos_angle_cmat (moebius_circline_cmat_cmat M H1) (moebius_circline_cmat_cmat M H2) = cos_angle_cmat H1 H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos_angle_cmat (moebius_circline_cmat_cmat M H1)\n     (moebius_circline_cmat_cmat M H2) =\n    cos_angle_cmat H1 H2", "unfolding cos_angle_cmat_def moebius_circline_cmat_cmat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Re (mat_det_12 (congruence (mat_inv M) H1)\n           (congruence (mat_inv M) H2)) /\n    (2 *\n     sqrt\n      (Re (mat_det (congruence (mat_inv M) H1) *\n           mat_det (congruence (mat_inv M) H2)))) =\n    - Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "unfolding Let_def mat_det_12_congruence mat_det_congruence"], ["proof (prove)\ngoal (1 subgoal):\n 1. - Re (cor ((cmod (mat_det (mat_inv M)))\\<^sup>2) * mat_det_12 H1 H2) /\n    (2 *\n     sqrt\n      (Re (cor ((cmod (mat_det (mat_inv M)))\\<^sup>2) * mat_det H1 *\n           (cor ((cmod (mat_det (mat_inv M)))\\<^sup>2) * mat_det H2)))) =\n    - Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "using hh mat_det_inv[of M]"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. - Re (cor ((cmod (mat_det (mat_inv M)))\\<^sup>2) * mat_det_12 H1 H2) /\n    (2 *\n     sqrt\n      (Re (cor ((cmod (mat_det (mat_inv M)))\\<^sup>2) * mat_det H1 *\n           (cor ((cmod (mat_det (mat_inv M)))\\<^sup>2) * mat_det H2)))) =\n    - Re (mat_det_12 H1 H2) / (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "apply (subst cor_squared[symmetric])+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det M \\<noteq> 0;\n     mat_det M \\<noteq> 0 \\<Longrightarrow>\n     mat_det (mat_inv M) = 1 / mat_det M;\n     mat_det M \\<noteq> 0;\n     mat_det M \\<noteq> 0 \\<Longrightarrow>\n     mat_det (mat_inv M) = 1 / mat_det M;\n     mat_det M \\<noteq> 0;\n     mat_det M \\<noteq> 0 \\<Longrightarrow>\n     mat_det (mat_inv M) = 1 / mat_det M\\<rbrakk>\n    \\<Longrightarrow> - Re ((cor (cmod (mat_det (mat_inv M))))\\<^sup>2 *\n                            mat_det_12 H1 H2) /\n                      (2 *\n                       sqrt\n                        (Re ((cor (cmod (mat_det (mat_inv M))))\\<^sup>2 *\n                             mat_det H1 *\n                             ((cor (cmod (mat_det (mat_inv M))))\\<^sup>2 *\n                              mat_det H2)))) =\n                      - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "apply (subst cos_angle_den_scale, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det M \\<noteq> 0;\n     mat_det M \\<noteq> 0 \\<Longrightarrow>\n     mat_det (mat_inv M) = 1 / mat_det M;\n     mat_det M \\<noteq> 0;\n     mat_det M \\<noteq> 0 \\<Longrightarrow>\n     mat_det (mat_inv M) = 1 / mat_det M;\n     mat_det M \\<noteq> 0;\n     mat_det M \\<noteq> 0 \\<Longrightarrow>\n     mat_det (mat_inv M) = 1 / mat_det M\\<rbrakk>\n    \\<Longrightarrow> - Re ((cor (cmod (mat_det (mat_inv M))))\\<^sup>2 *\n                            mat_det_12 H1 H2) /\n                      (2 *\n                       (cmod (mat_det (mat_inv M)) *\n                        cmod (mat_det (mat_inv M)) *\n                        sqrt (Re (mat_det H1 * mat_det H2)))) =\n                      - Re (mat_det_12 H1 H2) /\n                      (2 * sqrt (Re (mat_det H1 * mat_det H2)))", "apply (auto simp add: power2_eq_square real_sqrt_mult field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  cos_angle_cmat (moebius_circline_cmat_cmat M H1)\n   (moebius_circline_cmat_cmat M H2) =\n  cos_angle_cmat H1 H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perpendicular_moebius [simp]:\n  assumes \"perpendicular H1 H2\"\n  shows \"perpendicular (moebius_circline M H1) (moebius_circline M H2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perpendicular (moebius_circline M H1) (moebius_circline M H2)", "using assms"], ["proof (prove)\nusing this:\n  perpendicular H1 H2\n\ngoal (1 subgoal):\n 1. perpendicular (moebius_circline M H1) (moebius_circline M H2)", "unfolding perpendicular_def"], ["proof (prove)\nusing this:\n  cos_angle (of_circline H1) (of_circline H2) = 0\n\ngoal (1 subgoal):\n 1. cos_angle (of_circline (moebius_circline M H1))\n     (of_circline (moebius_circline M H2)) =\n    0", "using moebius_preserve_circline_angle[of M \"of_circline H1\" \"of_circline H2\"]"], ["proof (prove)\nusing this:\n  cos_angle (of_circline H1) (of_circline H2) = 0\n  cos_angle (moebius_ocircline M (of_circline H1))\n   (moebius_ocircline M (of_circline H2)) =\n  cos_angle (of_circline H1) (of_circline H2)\n\ngoal (1 subgoal):\n 1. cos_angle (of_circline (moebius_circline M H1))\n     (of_circline (moebius_circline M H2)) =\n    0", "using moebius_ocircline_circline[of M \"of_circline H1\"]"], ["proof (prove)\nusing this:\n  cos_angle (of_circline H1) (of_circline H2) = 0\n  cos_angle (moebius_ocircline M (of_circline H1))\n   (moebius_ocircline M (of_circline H2)) =\n  cos_angle (of_circline H1) (of_circline H2)\n  moebius_ocircline M (of_circline H1) =\n  of_circline (moebius_circline M (of_ocircline (of_circline H1))) \\<or>\n  moebius_ocircline M (of_circline H1) =\n  opposite_ocircline\n   (of_circline (moebius_circline M (of_ocircline (of_circline H1))))\n\ngoal (1 subgoal):\n 1. cos_angle (of_circline (moebius_circline M H1))\n     (of_circline (moebius_circline M H2)) =\n    0", "using moebius_ocircline_circline[of M \"of_circline H2\"]"], ["proof (prove)\nusing this:\n  cos_angle (of_circline H1) (of_circline H2) = 0\n  cos_angle (moebius_ocircline M (of_circline H1))\n   (moebius_ocircline M (of_circline H2)) =\n  cos_angle (of_circline H1) (of_circline H2)\n  moebius_ocircline M (of_circline H1) =\n  of_circline (moebius_circline M (of_ocircline (of_circline H1))) \\<or>\n  moebius_ocircline M (of_circline H1) =\n  opposite_ocircline\n   (of_circline (moebius_circline M (of_ocircline (of_circline H1))))\n  moebius_ocircline M (of_circline H2) =\n  of_circline (moebius_circline M (of_ocircline (of_circline H2))) \\<or>\n  moebius_ocircline M (of_circline H2) =\n  opposite_ocircline\n   (of_circline (moebius_circline M (of_ocircline (of_circline H2))))\n\ngoal (1 subgoal):\n 1. cos_angle (of_circline (moebius_circline M H1))\n     (of_circline (moebius_circline M H2)) =\n    0", "by (auto simp del: moebius_preserve_circline_angle)"], ["", "end"]]}