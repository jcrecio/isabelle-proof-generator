{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Circlines.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma symp_circline_eq_cmat: \"symp circline_eq_cmat\"", "lemma circline_eq_cmat_hermitean_nonzero:\n  assumes \"hermitean H \\<and> H \\<noteq> mat_zero\" \"circline_eq_cmat H H'\"\n  shows \"hermitean H' \\<and> H' \\<noteq> mat_zero\"", "lemma circline_eq_clmat_refl [simp]: \"circline_eq_clmat H H\"", "lemma ex_mk_circline:\n  shows \"\\<exists> A B C D. H = mk_circline A B C D \\<and> hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\"", "lemma circline_type: \"circline_type H = -1 \\<or> circline_type H = 0 \\<or> circline_type H = 1\"", "lemma circline_type_mk_circline [simp]:\n  assumes \"(A, B, C, D) \\<in> hermitean_nonzero\"\n  shows  \"circline_type (mk_circline A B C D) = sgn (Re (A*D - B*C))\"", "lemma circline_set_I [simp]:\n  assumes \"on_circline H z\"\n  shows \"z \\<in> circline_set H\"", "lemma on_circline_cmat_cvec_circline_equation:\n  \"on_circline_cmat_cvec (A, B, C, D) (z1, z2) \\<longleftrightarrow> circline_equation A B C D z1 z2\"", "lemma circline_equation:\n  assumes \"H = mk_circline A B C D\" and \"(A, B, C, D) \\<in> hermitean_nonzero\"\n  shows \"of_complex z \\<in> circline_set H \\<longleftrightarrow> circline_equation A B C D z 1\"", "lemma inf_on_circline: \"on_circline H \\<infinity>\\<^sub>h \\<longleftrightarrow> circline_A0 H\"", "lemma\n  inf_in_circline_set: \"\\<infinity>\\<^sub>h \\<in> circline_set H \\<longleftrightarrow> is_line H\"", "lemma zero_on_circline: \"on_circline H 0\\<^sub>h \\<longleftrightarrow> circline_D0 H\"", "lemma\n  zero_in_circline_set: \"0\\<^sub>h \\<in> circline_set H \\<longleftrightarrow> circline_D0 H\"", "lemma classic_circline:\n  assumes \"H = mk_circline A B C D\" and \"hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\"\n  shows \"circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` circline (Re A) B (Re D)\"", "lemma is_circle_mk_circle: \"is_circle (mk_circle a r)\"", "lemma circline_set_mk_circle [simp]:\n  assumes \"r \\<ge> 0\"\n  shows \"circline_set (mk_circle a r) = of_complex ` circle a r\"", "lemma circline_set_mk_line [simp]:\n  assumes \"z1 \\<noteq> z2\"\n  shows \"circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2\"", "lemma classic_circle:\n  assumes \"is_circle H\" and \"(a, r) = euclidean_circle H\" and \"circline_type H \\<le> 0\"\n  shows \"circline_set H = of_complex ` circle a r\"", "lemma classic_line:\n  assumes \"is_line H\" and \"circline_type H < 0\" and \"(z1, z2) = euclidean_line H\"\n  shows \"circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2\"", "lemma on_circline_cmat_cvec_unit:\n  shows \"on_circline_cmat_cvec unit_circle_cmat (z1, z2) \\<longleftrightarrow> \n         z1 * cnj z1 = z2 * cnj z2\"", "lemma\n  one_on_unit_circle [simp]: \"on_circline unit_circle 1\\<^sub>h\"  and\n  ii_on_unit_circle [simp]: \"on_circline unit_circle ii\\<^sub>h\" and\n  not_zero_on_unit_circle [simp]: \"\\<not> on_circline unit_circle 0\\<^sub>h\"", "lemma  \n  one_in_unit_circle_set [simp]: \"1\\<^sub>h \\<in> circline_set unit_circle\" and\n  ii_in_unit_circle_set [simp]: \"ii\\<^sub>h \\<in> circline_set unit_circle\" and\n  zero_in_unit_circle_set [simp]: \"0\\<^sub>h \\<notin> circline_set unit_circle\"", "lemma is_circle_unit_circle [simp]:\n  shows \"is_circle unit_circle\"", "lemma not_inf_on_unit_circle' [simp]:\n  shows \"\\<not> on_circline unit_circle \\<infinity>\\<^sub>h\"", "lemma not_inf_on_unit_circle'' [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<notin> circline_set unit_circle\"", "lemma euclidean_circle_unit_circle [simp]:\n  shows \"euclidean_circle unit_circle = (0, 1)\"", "lemma circline_type_unit_circle [simp]:\n  shows \"circline_type unit_circle = -1\"", "lemma on_circline_unit_circle [simp]:\n  shows \"on_circline unit_circle (of_complex z) \\<longleftrightarrow> cmod z = 1\"", "lemma circline_set_unit_circle [simp]:\n  shows \"circline_set unit_circle = of_complex ` {z. cmod z = 1}\"", "lemma circline_set_unit_circle_I [simp]:\n  assumes \"cmod z = 1\"\n  shows \"of_complex z \\<in> circline_set unit_circle\"", "lemma inversion_unit_circle [simp]:\n  assumes \"on_circline unit_circle x\"\n  shows \"inversion x = x\"", "lemma inversion_id_iff_on_unit_circle: \n  shows \"inversion a = a \\<longleftrightarrow> on_circline unit_circle a\"", "lemma on_unit_circle_conjugate [simp]:\n  shows \"on_circline unit_circle (conjugate z) \\<longleftrightarrow> on_circline unit_circle z\"", "lemma conjugate_unit_circle_set [simp]:\n  shows \"conjugate ` (circline_set unit_circle) = circline_set unit_circle\"", "lemma special_points_on_x_axis' [simp]:\n  shows \"on_circline x_axis 0\\<^sub>h\" and \"on_circline x_axis 1\\<^sub>h\" and \"on_circline x_axis \\<infinity>\\<^sub>h\"", "lemma special_points_on_x_axis'' [simp]:\n  shows \"0\\<^sub>h \\<in> circline_set x_axis\" and \"1\\<^sub>h \\<in> circline_set x_axis\" and \"\\<infinity>\\<^sub>h \\<in> circline_set x_axis\"", "lemma is_line_x_axis [simp]:\n  shows \"is_line x_axis\"", "lemma circline_type_x_axis [simp]:\n  shows \"circline_type x_axis = -1\"", "lemma on_circline_x_axis:\n  shows \"on_circline x_axis z \\<longleftrightarrow> (\\<exists> c. is_real c \\<and> z = of_complex c) \\<or> z = \\<infinity>\\<^sub>h\"", "lemma on_circline_x_axis_I [simp]:\n  assumes \"is_real z\"\n  shows \"on_circline x_axis (of_complex z)\"", "lemma circline_set_x_axis:\n  shows \"circline_set x_axis = of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}\"", "lemma circline_set_x_axis_I:\n  assumes \"is_real z\"\n  shows \"of_complex z \\<in> circline_set x_axis\"", "lemma circline_equation_x_axis:\n  shows \"of_complex z \\<in> circline_set x_axis \\<longleftrightarrow> z = cnj z\"", "lemma circline_set_positive_x_axis_I [simp]:\n  assumes \"is_real z\" and \"Re z > 0\"\n  shows \"of_complex z \\<in> positive_x_axis\"", "lemma circline_set_negative_x_axis_I [simp]:\n  assumes \"is_real z\" and \"Re z < 0\"\n  shows \"of_complex z \\<in> negative_x_axis\"", "lemma special_points_on_y_axis' [simp]:\n  shows \"on_circline y_axis 0\\<^sub>h\" and \"on_circline y_axis ii\\<^sub>h\" and \"on_circline y_axis \\<infinity>\\<^sub>h\"", "lemma special_points_on_y_axis'' [simp]:\n  shows \"0\\<^sub>h \\<in> circline_set y_axis\" and \"ii\\<^sub>h \\<in> circline_set y_axis\" and \"\\<infinity>\\<^sub>h \\<in> circline_set y_axis\"", "lemma on_circline_y_axis: \n  shows \"on_circline y_axis z \\<longleftrightarrow> (\\<exists> c. is_imag c \\<and> z = of_complex c) \\<or> z = \\<infinity>\\<^sub>h\"", "lemma on_circline_y_axis_I [simp]:\n  assumes \"is_imag z\"\n  shows \"on_circline y_axis (of_complex z)\"", "lemma circline_set_y_axis:\n  shows \"circline_set y_axis = of_complex ` {x. is_imag x} \\<union> {\\<infinity>\\<^sub>h}\"", "lemma circline_set_y_axis_I:\n  assumes \"is_imag z\"\n  shows \"of_complex z \\<in> circline_set y_axis\"", "lemma circline_set_positive_y_axis_I [simp]:\n  assumes \"is_imag z\" and \"Im z > 0\"\n  shows \"of_complex z \\<in> positive_y_axis\"", "lemma circline_set_negative_y_axis_I [simp]:\n  assumes \"is_imag z\" and \"Im z < 0\"\n  shows \"of_complex z \\<in> negative_y_axis\"", "lemma circline_type_circline_point_0 [simp]:\n  shows \"circline_type circline_point_0 = 0\"", "lemma zero_in_circline_point_0 [simp]:\n  shows \"0\\<^sub>h \\<in> circline_set circline_point_0\"", "lemma circline_type_imag_unit_circle [simp]:\n  shows \"circline_type imag_unit_circle = 1\"", "lemma circline_equation_cancel_z2:\n  assumes \"circline_equation A B C D z1 z2 \" and \"z2 \\<noteq> 0\"\n  shows \"circline_equation A B C D (z1/z2) 1\"", "lemma circline_equation_quadratic_equation:\n  assumes \"circline_equation A B (cnj B) D z 1\" and \n          \"Re z = x\" and \"Im z = y\" and \"Re B = bx\" and \"Im B = by\"\n  shows \"A*x\\<^sup>2 + A*y\\<^sup>2 + 2*bx*x + 2*by*y + D = 0\"", "lemma circline_intersection_symetry:\n  shows \"circline_intersection H1 H2 = circline_intersection H2 H1\"", "lemma moebius_preserve_circline_type [simp]:                                \n  shows \"circline_type (moebius_circline M H) = circline_type H\"", "lemma moebius_circline:\n  shows \"{z. on_circline (moebius_circline M H) z} =\n         moebius_pt M ` {z. on_circline H z}\"", "lemma on_circline_moebius_circline_I [simp]:\n  assumes \"on_circline H z\"\n  shows \"on_circline (moebius_circline M H) (moebius_pt M z)\"", "lemma circline_set_moebius_circline [simp]:\n  shows \"circline_set (moebius_circline M H) = moebius_pt M ` circline_set H\"", "lemma circline_set_moebius_circline_I [simp]:\n  assumes \"z \\<in> circline_set H\"\n  shows \"moebius_pt M z \\<in> circline_set (moebius_circline M H)\"", "lemma circline_set_moebius_circline_E:\n  assumes \"moebius_pt M z \\<in> circline_set (moebius_circline M H)\"\n  shows \"z \\<in> circline_set H\"", "lemma circline_set_moebius_circline_iff [simp]:\n  shows \"moebius_pt M z \\<in> circline_set (moebius_circline M H) \\<longleftrightarrow> \n         z \\<in> circline_set H\"", "lemma inj_moebius_circline:\n  shows \"inj (moebius_circline M)\"", "lemma moebius_circline_eq_I:\n  assumes \"moebius_circline M H1 = moebius_circline M H2\"\n  shows \"H1 = H2\"", "lemma moebius_circline_neq_I [simp]:\n  assumes \"H1 \\<noteq> H2\"\n  shows \"moebius_circline M H1 \\<noteq> moebius_circline M H2\"", "lemma moebius_circline_id [simp]:\n  shows \"moebius_circline id_moebius H = H\"", "lemma moebius_circline_comp [simp]:\n  shows \"moebius_circline (moebius_comp M1 M2) H = moebius_circline M1 (moebius_circline M2 H)\"", "lemma moebius_circline_comp_inv_left [simp]:\n  shows \"moebius_circline (moebius_inv M) (moebius_circline M H) = H\"", "lemma moebius_circline_comp_inv_right [simp]:\n  shows \"moebius_circline M (moebius_circline (moebius_inv M) H) = H\"", "lemma moebius_similarity_lines_to_lines [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"\\<infinity>\\<^sub>h \\<in> circline_set (moebius_circline (moebius_similarity a b) H) \\<longleftrightarrow> \n         \\<infinity>\\<^sub>h \\<in> circline_set H\"", "lemma moebius_similarity_lines_to_lines':\n  assumes \"a \\<noteq> 0\"\n  shows \"on_circline (moebius_circline (moebius_similarity a b) H) \\<infinity>\\<^sub>h \\<longleftrightarrow>\n         \\<infinity>\\<^sub>h \\<in> circline_set H\"", "lemma conjugate_circline_set':\n  shows \"conjugate ` circline_set H \\<subseteq> circline_set (conjugate_circline H)\"", "lemma conjugate_conjugate_circline [simp]:\n  shows \"conjugate_circline (conjugate_circline H) = H\"", "lemma circline_set_conjugate_circline [simp]:\n  shows \"circline_set (conjugate_circline H) = conjugate ` circline_set H\" (is \"?lhs = ?rhs\")", "lemma on_circline_conjugate_circline [simp]: \n  shows \"on_circline (conjugate_circline H) z \\<longleftrightarrow> on_circline H (conjugate z)\"", "lemma on_circline_circline_inversion [simp]:\n  shows \"on_circline (circline_inversion H) z \\<longleftrightarrow> on_circline H (reciprocal (conjugate z))\"", "lemma circline_set_circline_inversion [simp]:\n  shows \"circline_set (circline_inversion H) = inversion ` circline_set H\"", "lemma circline_set_circline_reciprocal:\n  shows \"circline_set (circline_reciprocal H) = reciprocal ` circline_set H\"", "lemma rotation_pi_2_y_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (pi/2)) y_axis = x_axis\"", "lemma rotation_minus_pi_2_y_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (-pi/2)) y_axis = x_axis\"", "lemma rotation_minus_pi_2_x_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (-pi/2)) x_axis = y_axis\"", "lemma rotation_pi_2_x_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (pi/2)) x_axis = y_axis\"", "lemma rotation_minus_pi_2_positive_y_axis [simp]:\n  shows \"(moebius_pt (moebius_rotation (-pi/2))) ` positive_y_axis = positive_x_axis\"", "lemma unique_circline_type_zero_0':\n  shows \"(circline_type circline_point_0 = 0 \\<and> 0\\<^sub>h \\<in> circline_set circline_point_0) \\<and>\n         (\\<forall> H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H \\<longrightarrow> H = circline_point_0)\"", "lemma unique_circline_type_zero_0:\n  shows \"\\<exists>! H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H\"", "lemma unique_circline_type_zero:\n  shows \"\\<exists>! H. circline_type H = 0 \\<and> z \\<in> circline_set H\"", "lemma unique_circline_01inf':\n  shows \"0\\<^sub>h \\<in> circline_set x_axis \\<and> 1\\<^sub>h \\<in> circline_set x_axis \\<and> \\<infinity>\\<^sub>h \\<in> circline_set x_axis \\<and>\n        (\\<forall> H. 0\\<^sub>h \\<in> circline_set H \\<and> 1\\<^sub>h \\<in> circline_set H \\<and> \\<infinity>\\<^sub>h \\<in> circline_set H  \\<longrightarrow> H = x_axis)\"", "lemma unique_circline_set:\n  assumes \"A \\<noteq> B\" and \"A \\<noteq> C\" and \"B \\<noteq> C\"\n  shows \"\\<exists>! H. A \\<in> circline_set H \\<and> B \\<in> circline_set H \\<and> C \\<in> circline_set H\"", "lemma zero_one_inf_x_axis [simp]:\n  assumes \"0\\<^sub>h \\<in> circline_set H\" and \"1\\<^sub>h \\<in> circline_set H\" and \"\\<infinity>\\<^sub>h \\<in> circline_set H\"\n  shows \"H = x_axis\"", "lemma circline_diagonalize:\n  shows \"\\<exists> M H'. moebius_circline M H = H' \\<and> circline_diag H'\"", "lemma wlog_circline_diag:\n  assumes \"\\<And> H. circline_diag H \\<Longrightarrow> P H\"\n          \"\\<And> M H. P H \\<Longrightarrow> P (moebius_circline M H)\"\n  shows \"P H\"", "lemma circline_type_zero_card_eq1_0:\n  assumes \"circline_type H = 0\" and \"0\\<^sub>h \\<in> circline_set H\"\n  shows \"circline_set H = {0\\<^sub>h}\"", "lemma circline_type_zero_card_eq1:\n  assumes \"circline_type H = 0\"\n  shows \"\\<exists> z. circline_set H = {z}\"", "lemma quad_form_diagonal_iff:\n  assumes \"k1 \\<noteq> 0\" and \"is_real k1\" and \"is_real k2\" and \"Re k1 * Re k2 < 0\"\n  shows \"quad_form (z1, 1) (k1, 0, 0, k2) = 0 \\<longleftrightarrow> (\\<exists> \\<phi>. z1 = rcis (sqrt (Re (-k2 /k1))) \\<phi>)\"", "lemma circline_type_neg_card_gt3_diag:\n  assumes \"circline_type H < 0\" and \"circline_diag H\"\n  shows \"\\<exists> A B C. A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\"", "lemma circline_type_neg_card_gt3:\n  assumes \"circline_type H < 0\"\n  shows \"\\<exists> A B C. A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\"", "lemma circline_type_pos_card_eq0_diag:\n  assumes \"circline_diag H\" and \"circline_type H > 0\"\n  shows \"circline_set H = {}\"", "lemma circline_type_pos_card_eq0:\n  assumes \"circline_type H > 0\"\n  shows \"circline_set H = {}\"", "lemma card_eq1_circline_type_zero:\n  assumes \"\\<exists> z. circline_set H = {z}\"\n  shows \"circline_type H = 0\"", "lemma inj_circline_set:\n  assumes \"circline_set H = circline_set H'\" and \"circline_set H \\<noteq> {}\"\n  shows \"H = H'\"", "lemma four_points_on_circline_iff_cross_ratio_real:\n  assumes \"distinct [z, u, v, w]\"\n  shows \"is_real (to_complex (cross_ratio z u v w)) \\<longleftrightarrow> \n         (\\<exists> H. {z, u, v, w} \\<subseteq> circline_set H)\"", "lemma symmetry_principle [simp]:\n  assumes \"circline_symmetric z1 z2 H\"\n  shows \"circline_symmetric (moebius_pt M z1) (moebius_pt M z2) (moebius_circline M H)\"", "lemma circline_symmetric_0inf_disc [simp]:\n  shows \"circline_symmetric 0\\<^sub>h \\<infinity>\\<^sub>h unit_circle\"", "lemma circline_symmetric_inv_homo_disc [simp]:\n  shows \"circline_symmetric a (inversion a) unit_circle\"", "lemma circline_symmetric_inv_homo_disc':\n  assumes \"circline_symmetric a a' unit_circle\"\n  shows \"a' = inversion a\"", "lemma ex_moebius_circline_x_axis:\n  assumes \"circline_type H < 0\"\n  shows \"\\<exists> M. moebius_circline M H = x_axis\"", "lemma wlog_circline_x_axis:\n  assumes \"circline_type H < 0\"\n  assumes \"\\<And> M H. P H \\<Longrightarrow> P (moebius_circline M H)\"\n  assumes \"P x_axis\"\n  shows \"P H\"", "lemma circline_intersection_at_most_2_points:\n  assumes \"H1 \\<noteq> H2\"\n  shows \"finite (circline_intersection H1 H2) \\<and> card (circline_intersection H1 H2) \\<le> 2\""], "translations": [["", "lemma symp_circline_eq_cmat: \"symp circline_eq_cmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp circline_eq_cmat", "unfolding symp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       circline_eq_cmat x y \\<longrightarrow> circline_eq_cmat y x", "proof ((rule allI)+, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. circline_eq_cmat x y \\<Longrightarrow> circline_eq_cmat y x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. circline_eq_cmat x y \\<Longrightarrow> circline_eq_cmat y x", "assume \"circline_eq_cmat x y\""], ["proof (state)\nthis:\n  circline_eq_cmat x y\n\ngoal (1 subgoal):\n 1. \\<And>x y. circline_eq_cmat x y \\<Longrightarrow> circline_eq_cmat y x", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat x y", "obtain k where \"k \\<noteq> 0 \\<and> y = cor k *\\<^sub>s\\<^sub>m x\""], ["proof (prove)\nusing this:\n  circline_eq_cmat x y\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<noteq> 0 \\<and> y = cor k *\\<^sub>s\\<^sub>m x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<and> y = cor k *\\<^sub>s\\<^sub>m x\n\ngoal (1 subgoal):\n 1. \\<And>x y. circline_eq_cmat x y \\<Longrightarrow> circline_eq_cmat y x", "hence  \"1 / k \\<noteq> 0 \\<and> x = cor (1 / k) *\\<^sub>s\\<^sub>m y\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<and> y = cor k *\\<^sub>s\\<^sub>m x\n\ngoal (1 subgoal):\n 1. 1 / k \\<noteq> 0 \\<and> x = cor (1 / k) *\\<^sub>s\\<^sub>m y", "by auto"], ["proof (state)\nthis:\n  1 / k \\<noteq> 0 \\<and> x = cor (1 / k) *\\<^sub>s\\<^sub>m y\n\ngoal (1 subgoal):\n 1. \\<And>x y. circline_eq_cmat x y \\<Longrightarrow> circline_eq_cmat y x", "thus \"circline_eq_cmat y x\""], ["proof (prove)\nusing this:\n  1 / k \\<noteq> 0 \\<and> x = cor (1 / k) *\\<^sub>s\\<^sub>m y\n\ngoal (1 subgoal):\n 1. circline_eq_cmat y x", "unfolding circline_eq_cmat_def"], ["proof (prove)\nusing this:\n  1 / k \\<noteq> 0 \\<and> x = cor (1 / k) *\\<^sub>s\\<^sub>m y\n\ngoal (1 subgoal):\n 1. \\<exists>k. k \\<noteq> 0 \\<and> x = cor k *\\<^sub>s\\<^sub>m y", "by blast"], ["proof (state)\nthis:\n  circline_eq_cmat y x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Hermitean non-zero matrices are equivalent only to such matrices\\<close>"], ["", "lemma circline_eq_cmat_hermitean_nonzero:\n  assumes \"hermitean H \\<and> H \\<noteq> mat_zero\" \"circline_eq_cmat H H'\"\n  shows \"hermitean H' \\<and> H' \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean H' \\<and> H' \\<noteq> mat_zero", "using assms"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  circline_eq_cmat H H'\n\ngoal (1 subgoal):\n 1. hermitean H' \\<and> H' \\<noteq> mat_zero", "by (metis circline_eq_cmat_def hermitean_mult_real nonzero_mult_real of_real_eq_0_iff)"], ["", "lift_definition circline_eq_clmat :: \"circline_mat \\<Rightarrow> circline_mat \\<Rightarrow> bool\" is circline_eq_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma circline_eq_clmat_refl [simp]: \"circline_eq_clmat H H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_eq_clmat H H", "by transfer (simp, rule_tac x=\"1\" in exI, simp)"], ["", "quotient_type circline = circline_mat / circline_eq_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp circline_eq_clmat", "proof (rule equivpI)"], ["proof (state)\ngoal (3 subgoals):\n 1. reflp circline_eq_clmat\n 2. symp circline_eq_clmat\n 3. transp circline_eq_clmat", "show \"reflp circline_eq_clmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp circline_eq_clmat", "unfolding reflp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. circline_eq_clmat x x", "by transfer (auto, rule_tac x=\"1\" in exI, simp)"], ["proof (state)\nthis:\n  reflp circline_eq_clmat\n\ngoal (2 subgoals):\n 1. symp circline_eq_clmat\n 2. transp circline_eq_clmat", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. symp circline_eq_clmat\n 2. transp circline_eq_clmat", "show \"symp circline_eq_clmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp circline_eq_clmat", "unfolding symp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       circline_eq_clmat x y \\<longrightarrow> circline_eq_clmat y x", "by transfer (auto, (rule_tac x=\"1/k\" in exI, simp)+)"], ["proof (state)\nthis:\n  symp circline_eq_clmat\n\ngoal (1 subgoal):\n 1. transp circline_eq_clmat", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. transp circline_eq_clmat", "show \"transp circline_eq_clmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp circline_eq_clmat", "unfolding transp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       circline_eq_clmat x y \\<longrightarrow>\n       circline_eq_clmat y z \\<longrightarrow> circline_eq_clmat x z", "by transfer (simp, safe, (rule_tac x=\"ka*k\" in exI, simp)+)"], ["proof (state)\nthis:\n  transp circline_eq_clmat\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Circline with specified matrix\\<close>"], ["", "text \\<open>An auxiliary constructor @{term mk_circline} returns a circline (an\nequivalence class) for given four complex numbers $A$, $B$, $C$ and\n$D$ (provided that they form a Hermitean, non-zero matrix).\\<close>"], ["", "definition mk_circline_cmat :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex_mat\" where\n[simp]: \"mk_circline_cmat A B C D =\n          (let M = (A, B, C, D)\n            in if M \\<in> hermitean_nonzero then\n                  M\n               else\n                  eye)\""], ["", "lift_definition mk_circline_clmat :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> circline_mat\" is mk_circline_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex1 complex2 complex3 complex4.\n       hermitean\n        (mk_circline_cmat complex1 complex2 complex3 complex4) \\<and>\n       mk_circline_cmat complex1 complex2 complex3 complex4 \\<noteq>\n       mat_zero", "by (auto simp add: Let_def hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition mk_circline :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> circline\" is mk_circline_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ex_mk_circline:\n  shows \"\\<exists> A B C D. H = mk_circline A B C D \\<and> hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A B C D.\n       H = mk_circline A B C D \\<and>\n       hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>A B C D.\n          circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n          hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>A B C D.\n          circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n          hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "assume *: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>A B C D.\n          circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n          hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "obtain A B C D where \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \" H\", auto)"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>A B C D.\n          circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n          hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "hence \"circline_eq_cmat H (mk_circline_cmat A B C D) \\<and> hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n    hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "using *"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n    hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "by auto"], ["proof (state)\nthis:\n  circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n  hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>A B C D.\n          circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n          hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "thus \"\\<exists> A B C D. circline_eq_cmat H (mk_circline_cmat A B C D) \\<and> hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n  hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<exists>A B C D.\n       circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n       hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero", "by blast"], ["proof (state)\nthis:\n  \\<exists>A B C D.\n     circline_eq_cmat H (mk_circline_cmat A B C D) \\<and>\n     hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Circline type\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "definition circline_type_cmat :: \"complex_mat \\<Rightarrow> real\" where\n  [simp]: \"circline_type_cmat H = sgn (Re (mat_det H))\""], ["", "lift_definition circline_type_clmat :: \"circline_mat \\<Rightarrow> real\" is circline_type_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition circline_type :: \"circline \\<Rightarrow> real\" is circline_type_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       circline_type_clmat circline_mat1 = circline_type_clmat circline_mat2", "by transfer (simp, erule exE, simp add: sgn_mult)"], ["", "lemma circline_type: \"circline_type H = -1 \\<or> circline_type H = 0 \\<or> circline_type H = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type H = - 1 \\<or>\n    circline_type H = 0 \\<or> circline_type H = 1", "by (transfer, transfer, simp add: sgn_if)"], ["", "lemma circline_type_mk_circline [simp]:\n  assumes \"(A, B, C, D) \\<in> hermitean_nonzero\"\n  shows  \"circline_type (mk_circline A B C D) = sgn (Re (A*D - B*C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type (mk_circline A B C D) = sgn (Re (A * D - B * C))", "using assms"], ["proof (prove)\nusing this:\n  (A, B, C, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. circline_type (mk_circline A B C D) = sgn (Re (A * D - B * C))", "by (transfer, transfer, simp)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Points on the circline\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Each circline determines a corresponding set of points. Again, a description given in\nhomogeneous coordinates is a bit better than the original description defined only for ordinary\ncomplex numbers. The point with homogeneous coordinates $(z_1, z_2)$ will belong to the set of\ncircline points iff $A \\cdot z_1\\cdot \\overline{z_1} + B\\cdot \\overline{z_1} \\cdot z_2 + C\\cdot z_1 \\cdot\\overline{z_2} +\nD\\cdot z_2 \\cdot \\overline{z_2} = 0$. Note that this is a quadratic form determined by a vector of\nhomogeneous coordinates and the Hermitean matrix.\\<close>"], ["", "definition on_circline_cmat_cvec :: \"complex_mat \\<Rightarrow> complex_vec \\<Rightarrow> bool\" where\n  [simp]: \"on_circline_cmat_cvec H z \\<longleftrightarrow> quad_form z H = 0\""], ["", "lift_definition on_circline_clmat_hcoords :: \"circline_mat \\<Rightarrow> complex_homo_coords \\<Rightarrow> bool\" is on_circline_cmat_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition on_circline :: \"circline \\<Rightarrow> complex_homo \\<Rightarrow> bool\" is on_circline_clmat_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>circline_eq_clmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx> complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> on_circline_clmat_hcoords circline_mat1\n                          complex_homo_coords1 =\n                         on_circline_clmat_hcoords circline_mat2\n                          complex_homo_coords2", "by transfer (simp del: quad_form_def, (erule exE)+, simp del: quad_form_def add: quad_form_scale_m quad_form_scale_v)"], ["", "definition circline_set :: \"circline \\<Rightarrow> complex_homo set\" where\n  \"circline_set H = {z. on_circline H z}\""], ["", "lemma circline_set_I [simp]:\n  assumes \"on_circline H z\"\n  shows \"z \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set H", "using assms"], ["proof (prove)\nusing this:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set H", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. z \\<in> Collect (on_circline H)", "by auto"], ["", "abbreviation circline_equation where\n  \"circline_equation A B C D z1 z2 \\<equiv> A*z1*cnj z1 + B*z2*cnj z1 + C*cnj z2*z1 + D*z2*cnj z2 = 0\""], ["", "lemma on_circline_cmat_cvec_circline_equation:\n  \"on_circline_cmat_cvec (A, B, C, D) (z1, z2) \\<longleftrightarrow> circline_equation A B C D z1 z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec (A, B, C, D) (z1, z2) =\n    circline_equation A B C D z1 z2", "by (simp add: vec_cnj_def field_simps)"], ["", "lemma circline_equation:\n  assumes \"H = mk_circline A B C D\" and \"(A, B, C, D) \\<in> hermitean_nonzero\"\n  shows \"of_complex z \\<in> circline_set H \\<longleftrightarrow> circline_equation A B C D z 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex z \\<in> circline_set H) = circline_equation A B C D z 1", "using assms"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  (A, B, C, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (of_complex z \\<in> circline_set H) = circline_equation A B C D z 1", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  (A, B, C, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (of_complex z \\<in> Collect (on_circline H)) =\n    circline_equation A B C D z 1", "by simp (transfer, transfer, simp add: vec_cnj_def field_simps)"], ["", "text \\<open>Circlines trough 0 and inf.\\<close>"], ["", "text \\<open>The circline represents a line when $A=0$ or a circle, otherwise.\\<close>"], ["", "definition circline_A0_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"circline_A0_cmat H \\<longleftrightarrow> (let (A, B, C, D) = H in A = 0)\""], ["", "lift_definition circline_A0_clmat :: \"circline_mat \\<Rightarrow> bool\" is circline_A0_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition circline_A0 :: \"circline \\<Rightarrow> bool\" is circline_A0_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       circline_A0_clmat circline_mat1 = circline_A0_clmat circline_mat2", "by transfer auto"], ["", "abbreviation is_line where\n  \"is_line H \\<equiv> circline_A0 H\""], ["", "abbreviation is_circle where\n  \"is_circle H \\<equiv> \\<not> circline_A0 H\""], ["", "definition circline_D0_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"circline_D0_cmat H \\<longleftrightarrow> (let (A, B, C, D) = H in D = 0)\""], ["", "lift_definition circline_D0_clmat :: \"circline_mat \\<Rightarrow> bool\" is circline_D0_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition circline_D0 :: \"circline \\<Rightarrow> bool\" is circline_D0_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       circline_D0_clmat circline_mat1 = circline_D0_clmat circline_mat2", "by transfer auto"], ["", "lemma inf_on_circline: \"on_circline H \\<infinity>\\<^sub>h \\<longleftrightarrow> circline_A0 H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline H \\<infinity>\\<^sub>h = is_line H", "by (transfer, transfer, auto simp add: vec_cnj_def)"], ["", "lemma\n  inf_in_circline_set: \"\\<infinity>\\<^sub>h \\<in> circline_set H \\<longleftrightarrow> is_line H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h \\<in> circline_set H) = is_line H", "using inf_on_circline"], ["proof (prove)\nusing this:\n  on_circline ?H \\<infinity>\\<^sub>h = is_line ?H\n\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h \\<in> circline_set H) = is_line H", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  on_circline ?H \\<infinity>\\<^sub>h = is_line ?H\n\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h \\<in> Collect (on_circline H)) = is_line H", "by simp"], ["", "lemma zero_on_circline: \"on_circline H 0\\<^sub>h \\<longleftrightarrow> circline_D0 H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline H 0\\<^sub>h = circline_D0 H", "by (transfer, transfer, auto simp add: vec_cnj_def)"], ["", "lemma\n  zero_in_circline_set: \"0\\<^sub>h \\<in> circline_set H \\<longleftrightarrow> circline_D0 H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0\\<^sub>h \\<in> circline_set H) = circline_D0 H", "using zero_on_circline"], ["proof (prove)\nusing this:\n  on_circline ?H 0\\<^sub>h = circline_D0 ?H\n\ngoal (1 subgoal):\n 1. (0\\<^sub>h \\<in> circline_set H) = circline_D0 H", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  on_circline ?H 0\\<^sub>h = circline_D0 ?H\n\ngoal (1 subgoal):\n 1. (0\\<^sub>h \\<in> Collect (on_circline H)) = circline_D0 H", "by simp"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Connection with circles and lines in the classic complex plane\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Every Euclidean circle and Euclidean line can be represented by a\ncircline.\\<close>"], ["", "lemma classic_circline:\n  assumes \"H = mk_circline A B C D\" and \"hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\"\n  shows \"circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` circline (Re A) B (Re D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} =\n    of_complex ` circline (Re A) B (Re D)", "using assms"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} =\n    of_complex ` circline (Re A) B (Re D)", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. Collect (on_circline H) - {\\<infinity>\\<^sub>h} =\n    of_complex ` circline (Re A) B (Re D)", "proof (safe)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        xa \\<in> circline (Re A) B (Re D)\\<rbrakk>\n       \\<Longrightarrow> on_circline (mk_circline A B C D) (of_complex xa)\n 3. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "fix z"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        xa \\<in> circline (Re A) B (Re D)\\<rbrakk>\n       \\<Longrightarrow> on_circline (mk_circline A B C D) (of_complex xa)\n 3. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"hermitean (A, B, C, D)\" \"(A, B, C, D) \\<noteq> mat_zero\" \"z \\<in> circline (Re A) B (Re D)\""], ["proof (state)\nthis:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  z \\<in> circline (Re A) B (Re D)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        xa \\<in> circline (Re A) B (Re D)\\<rbrakk>\n       \\<Longrightarrow> on_circline (mk_circline A B C D) (of_complex xa)\n 3. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "thus \"on_circline (mk_circline A B C D) (of_complex z)\""], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  z \\<in> circline (Re A) B (Re D)\n\ngoal (1 subgoal):\n 1. on_circline (mk_circline A B C D) (of_complex z)", "using hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  z \\<in> circline (Re A) B (Re D)\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. on_circline (mk_circline A B C D) (of_complex z)", "by (transfer, transfer) (auto simp add: circline_def vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  on_circline (mk_circline A B C D) (of_complex z)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"of_complex z = \\<infinity>\\<^sub>h\""], ["proof (state)\nthis:\n  of_complex z = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h\n 2. \\<And>x xa.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero; xa \\<in> circline (Re A) B (Re D);\n        of_complex xa = \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  of_complex z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h", "assume \"hermitean (A, B, C, D)\" \"(A, B, C, D) \\<noteq> mat_zero\" \"on_circline (mk_circline A B C D) z\" \"z \\<notin> of_complex ` circline (Re A) B (Re D)\""], ["proof (state)\nthis:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  on_circline (mk_circline A B C D) z\n  z \\<notin> of_complex ` circline (Re A) B (Re D)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h", "moreover"], ["proof (state)\nthis:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  on_circline (mk_circline A B C D) z\n  z \\<notin> of_complex ` circline (Re A) B (Re D)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h", "have \"z \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow> z \\<in> of_complex ` circline (Re A) B (Re D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    z \\<in> of_complex ` circline (Re A) B (Re D)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> of_complex ` circline (Re A) B (Re D)", "assume \"z \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> of_complex ` circline (Re A) B (Re D)", "show \"z \\<in> of_complex ` circline (Re A) B (Re D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> of_complex ` circline (Re A) B (Re D)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z = of_complex ?x\n 2. ?x \\<in> circline (Re A) B (Re D)", "show \"z = of_complex (to_complex z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = of_complex (to_complex z)", "using \\<open>z \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = of_complex (to_complex z)", "by simp"], ["proof (state)\nthis:\n  z = of_complex (to_complex z)\n\ngoal (1 subgoal):\n 1. to_complex z \\<in> circline (Re A) B (Re D)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. to_complex z \\<in> circline (Re A) B (Re D)", "show \"to_complex z \\<in> circline (Re A) B (Re D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_complex z \\<in> circline (Re A) B (Re D)", "using \\<open>on_circline (mk_circline A B C D) z\\<close> \\<open>z \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  on_circline (mk_circline A B C D) z\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. to_complex z \\<in> circline (Re A) B (Re D)", "using \\<open>hermitean (A, B, C, D)\\<close> \\<open>(A, B, C, D) \\<noteq> mat_zero\\<close>"], ["proof (prove)\nusing this:\n  on_circline (mk_circline A B C D) z\n  z \\<noteq> \\<infinity>\\<^sub>h\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. to_complex z \\<in> circline (Re A) B (Re D)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B C D z Aa Ba Ca Da za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (mk_circline_cmat A B C D) z;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        hermitean (A, B, C, D); (A, B, C, D) \\<noteq> mat_zero;\n        on_circline_clmat_hcoords (mk_circline_clmat Aa Ba Ca Da) za;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        hermitean (Aa, Ba, Ca, Da);\n        (Aa, Ba, Ca, Da) \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> to_complex_cvec z \\<in> circline (Re A) B (Re D)", "fix A B C D and z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B C D z Aa Ba Ca Da za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (mk_circline_cmat A B C D) z;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        hermitean (A, B, C, D); (A, B, C, D) \\<noteq> mat_zero;\n        on_circline_clmat_hcoords (mk_circline_clmat Aa Ba Ca Da) za;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        hermitean (Aa, Ba, Ca, Da);\n        (Aa, Ba, Ca, Da) \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> to_complex_cvec z \\<in> circline (Re A) B (Re D)", "obtain z1 z2 where zz: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>A B C D z Aa Ba Ca Da za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (mk_circline_cmat A B C D) z;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        hermitean (A, B, C, D); (A, B, C, D) \\<noteq> mat_zero;\n        on_circline_clmat_hcoords (mk_circline_clmat Aa Ba Ca Da) za;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        hermitean (Aa, Ba, Ca, Da);\n        (Aa, Ba, Ca, Da) \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> to_complex_cvec z \\<in> circline (Re A) B (Re D)", "assume *: \"z \\<noteq> vec_zero\"  \"\\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\"\n                  \"on_circline_cmat_cvec (mk_circline_cmat A B C D) z\"\n                  \"hermitean (A, B, C, D)\" \"(A, B, C, D) \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  on_circline_cmat_cvec (mk_circline_cmat A B C D) z\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>A B C D z Aa Ba Ca Da za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (mk_circline_cmat A B C D) z;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        hermitean (A, B, C, D); (A, B, C, D) \\<noteq> mat_zero;\n        on_circline_clmat_hcoords (mk_circline_clmat Aa Ba Ca Da) za;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        hermitean (Aa, Ba, Ca, Da);\n        (Aa, Ba, Ca, Da) \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> to_complex_cvec z \\<in> circline (Re A) B (Re D)", "have \"z2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "using \\<open>z \\<noteq> vec_zero\\<close> \\<open>\\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<close>"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "using inf_cvec_z2_zero_iff zz"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (?z1.0, ?z2.0) \\<noteq> vec_zero \\<Longrightarrow>\n  ((?z1.0, ?z2.0) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (?z2.0 = 0)\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>A B C D z Aa Ba Ca Da za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (mk_circline_cmat A B C D) z;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        hermitean (A, B, C, D); (A, B, C, D) \\<noteq> mat_zero;\n        on_circline_clmat_hcoords (mk_circline_clmat Aa Ba Ca Da) za;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        hermitean (Aa, Ba, Ca, Da);\n        (Aa, Ba, Ca, Da) \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> to_complex_cvec z \\<in> circline (Re A) B (Re D)", "thus \"to_complex_cvec z \\<in> circline (Re A) B (Re D)\""], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. to_complex_cvec z \\<in> circline (Re A) B (Re D)", "using * zz"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  on_circline_cmat_cvec (mk_circline_cmat A B C D) z\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. to_complex_cvec z \\<in> circline (Re A) B (Re D)", "using hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  on_circline_cmat_cvec (mk_circline_cmat A B C D) z\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  z = (z1, z2)\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. to_complex_cvec z \\<in> circline (Re A) B (Re D)", "by (simp add: vec_cnj_def circline_def field_simps)"], ["proof (state)\nthis:\n  to_complex_cvec z \\<in> circline (Re A) B (Re D)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  to_complex z \\<in> circline (Re A) B (Re D)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> of_complex ` circline (Re A) B (Re D)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n  z \\<in> of_complex ` circline (Re A) B (Re D)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n        (A, B, C, D) \\<noteq> mat_zero;\n        x \\<notin> of_complex ` circline (Re A) B (Re D); x \\<notin> {};\n        on_circline (mk_circline A B C D) x\\<rbrakk>\n       \\<Longrightarrow> x = \\<infinity>\\<^sub>h", "ultimately"], ["proof (chain)\npicking this:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  on_circline (mk_circline A B C D) z\n  z \\<notin> of_complex ` circline (Re A) B (Re D)\n  z \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n  z \\<in> of_complex ` circline (Re A) B (Re D)", "show \"z = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  on_circline (mk_circline A B C D) z\n  z \\<notin> of_complex ` circline (Re A) B (Re D)\n  z \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n  z \\<in> of_complex ` circline (Re A) B (Re D)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  z = \\<infinity>\\<^sub>h\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The matrix of the circline representing circle determined with center and radius.\\<close>"], ["", "definition mk_circle_cmat :: \"complex \\<Rightarrow> real \\<Rightarrow> complex_mat\" where\n  [simp]: \"mk_circle_cmat a r = (1, -a, -cnj a, a*cnj a - cor r*cor r)\""], ["", "lift_definition mk_circle_clmat :: \"complex \\<Rightarrow> real \\<Rightarrow> circline_mat\" is mk_circle_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex real.\n       hermitean (mk_circle_cmat complex real) \\<and>\n       mk_circle_cmat complex real \\<noteq> mat_zero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition mk_circle :: \"complex \\<Rightarrow> real \\<Rightarrow> circline\" is mk_circle_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma is_circle_mk_circle: \"is_circle (mk_circle a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_circle (mk_circle a r)", "by (transfer, transfer, simp)"], ["", "lemma circline_set_mk_circle [simp]:\n  assumes \"r \\<ge> 0\"\n  shows \"circline_set (mk_circle a r) = of_complex ` circle a r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "let ?A = \"1\" and ?B = \"-a\" and ?C = \"-cnj a\" and ?D = \"a*cnj a - cor r*cor r\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "have *: \"(?A, ?B, ?C, ?D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1, - a, - cnj a, a * cnj a - cor r * cor r) \\<in> hermitean_nonzero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  (1, - a, - cnj a, a * cnj a - cor r * cor r) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "have \"mk_circle a r = mk_circline ?A ?B ?C ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_circle a r =\n    mk_circline 1 (- a) (- cnj a) (a * cnj a - cor r * cor r)", "using *"], ["proof (prove)\nusing this:\n  (1, - a, - cnj a, a * cnj a - cor r * cor r) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. mk_circle a r =\n    mk_circline 1 (- a) (- cnj a) (a * cnj a - cor r * cor r)", "by (transfer, transfer, simp)"], ["proof (state)\nthis:\n  mk_circle a r = mk_circline 1 (- a) (- cnj a) (a * cnj a - cor r * cor r)\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "hence \"circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} = of_complex ` circline ?A ?B (Re ?D)\""], ["proof (prove)\nusing this:\n  mk_circle a r = mk_circline 1 (- a) (- cnj a) (a * cnj a - cor r * cor r)\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n    of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))", "using classic_circline[of \"mk_circle a r\" ?A ?B ?C ?D] *"], ["proof (prove)\nusing this:\n  mk_circle a r = mk_circline 1 (- a) (- cnj a) (a * cnj a - cor r * cor r)\n  \\<lbrakk>mk_circle a r =\n           mk_circline 1 (- a) (- cnj a) (a * cnj a - cor r * cor r);\n   hermitean (1, - a, - cnj a, a * cnj a - cor r * cor r) \\<and>\n   (1, - a, - cnj a, a * cnj a - cor r * cor r) \\<noteq> mat_zero\\<rbrakk>\n  \\<Longrightarrow> circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n                    of_complex `\n                    circline (Re 1) (- a) (Re (a * cnj a - cor r * cor r))\n  (1, - a, - cnj a, a * cnj a - cor r * cor r) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n    of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))", "by simp"], ["proof (state)\nthis:\n  circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n  of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "moreover"], ["proof (state)\nthis:\n  circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n  of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "have \"circline ?A ?B (Re ?D) = circle a r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline 1 (- a) (Re (a * cnj a - cor r * cor r)) = circle a r", "by (rule circline_circle[of ?A \"Re ?D\" \"?B\" \"circline ?A ?B (Re ?D)\" \"a\" \"r*r\" r], simp_all add: cmod_square \\<open>r \\<ge> 0\\<close>)"], ["proof (state)\nthis:\n  circline 1 (- a) (Re (a * cnj a - cor r * cor r)) = circle a r\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "moreover"], ["proof (state)\nthis:\n  circline 1 (- a) (Re (a * cnj a - cor r * cor r)) = circle a r\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "have \"\\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)", "using inf_in_circline_set[of \"mk_circle a r\"] is_circle_mk_circle[of a r]"], ["proof (prove)\nusing this:\n  (\\<infinity>\\<^sub>h \\<in> circline_set (mk_circle a r)) =\n  is_line (mk_circle a r)\n  is_circle (mk_circle a r)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)", "by auto"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "ultimately"], ["proof (chain)\npicking this:\n  circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n  of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))\n  circline 1 (- a) (Re (a * cnj a - cor r * cor r)) = circle a r\n  \\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)", "show ?thesis"], ["proof (prove)\nusing this:\n  circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n  of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))\n  circline 1 (- a) (Re (a * cnj a - cor r * cor r)) = circle a r\n  \\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` circle a r", "unfolding circle_def"], ["proof (prove)\nusing this:\n  circline_set (mk_circle a r) - {\\<infinity>\\<^sub>h} =\n  of_complex ` circline 1 (- a) (Re (a * cnj a - cor r * cor r))\n  circline 1 (- a) (Re (a * cnj a - cor r * cor r)) = {z. cmod (z - a) = r}\n  \\<infinity>\\<^sub>h \\<notin> circline_set (mk_circle a r)\n\ngoal (1 subgoal):\n 1. circline_set (mk_circle a r) = of_complex ` {z. cmod (z - a) = r}", "by simp"], ["proof (state)\nthis:\n  circline_set (mk_circle a r) = of_complex ` circle a r\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The matrix of the circline representing line determined with two (not equal) complex points.\\<close>"], ["", "definition mk_line_cmat :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex_mat\" where\n  [simp]: \"mk_line_cmat z1 z2 =\n    (if z1 \\<noteq> z2 then\n          let B = \\<i> * (z2 - z1) in (0, B, cnj B, -cnj_mix B z1)\n    else\n          eye)\""], ["", "lift_definition mk_line_clmat :: \"complex \\<Rightarrow> complex \\<Rightarrow> circline_mat\" is mk_line_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex1 complex2.\n       hermitean (mk_line_cmat complex1 complex2) \\<and>\n       mk_line_cmat complex1 complex2 \\<noteq> mat_zero", "by (auto simp add: Let_def hermitean_def mat_adj_def mat_cnj_def  split: if_split_asm)"], ["", "lift_definition mk_line :: \"complex \\<Rightarrow> complex \\<Rightarrow> circline\" is mk_line_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma circline_set_mk_line [simp]:\n  assumes \"z1 \\<noteq> z2\"\n  shows \"circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "let ?A = \"0\" and ?B = \"\\<i>*(z2 - z1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "let ?C = \"cnj ?B\" and ?D = \"-cnj_mix ?B z1\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "have *: \"(?A, ?B, ?C, ?D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n     - cnj_mix (\\<i> * (z2 - z1)) z1)\n    \\<in> hermitean_nonzero", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n\ngoal (1 subgoal):\n 1. (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n     - cnj_mix (\\<i> * (z2 - z1)) z1)\n    \\<in> hermitean_nonzero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n   - cnj_mix (\\<i> * (z2 - z1)) z1)\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "have \"mk_line z1 z2 = mk_circline ?A ?B ?C ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_line z1 z2 =\n    mk_circline 0 (\\<i> * (z2 - z1)) (cnj (\\<i> * (z2 - z1)))\n     (- cnj_mix (\\<i> * (z2 - z1)) z1)", "using * assms"], ["proof (prove)\nusing this:\n  (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n   - cnj_mix (\\<i> * (z2 - z1)) z1)\n  \\<in> hermitean_nonzero\n  z1 \\<noteq> z2\n\ngoal (1 subgoal):\n 1. mk_line z1 z2 =\n    mk_circline 0 (\\<i> * (z2 - z1)) (cnj (\\<i> * (z2 - z1)))\n     (- cnj_mix (\\<i> * (z2 - z1)) z1)", "by (transfer, transfer, auto simp add: Let_def)"], ["proof (state)\nthis:\n  mk_line z1 z2 =\n  mk_circline 0 (\\<i> * (z2 - z1)) (cnj (\\<i> * (z2 - z1)))\n   (- cnj_mix (\\<i> * (z2 - z1)) z1)\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "hence \"circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} = of_complex ` circline ?A ?B (Re ?D)\""], ["proof (prove)\nusing this:\n  mk_line z1 z2 =\n  mk_circline 0 (\\<i> * (z2 - z1)) (cnj (\\<i> * (z2 - z1)))\n   (- cnj_mix (\\<i> * (z2 - z1)) z1)\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex `\n    circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))", "using classic_circline[of \"mk_line z1 z2\" ?A ?B ?C ?D] *"], ["proof (prove)\nusing this:\n  mk_line z1 z2 =\n  mk_circline 0 (\\<i> * (z2 - z1)) (cnj (\\<i> * (z2 - z1)))\n   (- cnj_mix (\\<i> * (z2 - z1)) z1)\n  \\<lbrakk>mk_line z1 z2 =\n           mk_circline 0 (\\<i> * (z2 - z1)) (cnj (\\<i> * (z2 - z1)))\n            (- cnj_mix (\\<i> * (z2 - z1)) z1);\n   hermitean\n    (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n     - cnj_mix (\\<i> * (z2 - z1)) z1) \\<and>\n   (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n    - cnj_mix (\\<i> * (z2 - z1)) z1) \\<noteq>\n   mat_zero\\<rbrakk>\n  \\<Longrightarrow> circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n                    of_complex `\n                    circline (Re 0) (\\<i> * (z2 - z1))\n                     (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))\n  (0, \\<i> * (z2 - z1), cnj (\\<i> * (z2 - z1)),\n   - cnj_mix (\\<i> * (z2 - z1)) z1)\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex `\n    circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))", "by simp"], ["proof (state)\nthis:\n  circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n  of_complex `\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "moreover"], ["proof (state)\nthis:\n  circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n  of_complex `\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "have \"circline ?A ?B (Re ?D) = line z1 z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1)) =\n    line z1 z2", "using \\<open>z1 \\<noteq> z2\\<close>"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n\ngoal (1 subgoal):\n 1. circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1)) =\n    line z1 z2", "using circline_line'"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  ?z1.0 \\<noteq> ?z2.0 \\<Longrightarrow>\n  circline 0 (\\<i> * (?z2.0 - ?z1.0))\n   (Re (- cnj_mix (\\<i> * (?z2.0 - ?z1.0)) ?z1.0)) =\n  line ?z1.0 ?z2.0\n\ngoal (1 subgoal):\n 1. circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1)) =\n    line z1 z2", "by simp"], ["proof (state)\nthis:\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1)) =\n  line z1 z2\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "ultimately"], ["proof (chain)\npicking this:\n  circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n  of_complex `\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1)) =\n  line z1 z2", "show ?thesis"], ["proof (prove)\nusing this:\n  circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n  of_complex `\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1))\n  circline 0 (\\<i> * (z2 - z1)) (Re (- cnj_mix (\\<i> * (z2 - z1)) z1)) =\n  line z1 z2\n\ngoal (1 subgoal):\n 1. circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n    of_complex ` line z1 z2", "by simp"], ["proof (state)\nthis:\n  circline_set (mk_line z1 z2) - {\\<infinity>\\<^sub>h} =\n  of_complex ` line z1 z2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The set of points determined by a circline is always \neither an Euclidean circle or an Euclidean line. \\<close>"], ["", "text \\<open>Euclidean circle is determined by its center and radius.\\<close>"], ["", "type_synonym euclidean_circle = \"complex \\<times> real\""], ["", "definition euclidean_circle_cmat :: \"complex_mat \\<Rightarrow> euclidean_circle\" where\n  [simp]: \"euclidean_circle_cmat H = (let (A, B, C, D) = H in (-B/A, sqrt(Re ((B*C - A*D)/(A*A)))))\""], ["", "lift_definition euclidean_circle_clmat :: \"circline_mat \\<Rightarrow> euclidean_circle\" is euclidean_circle_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition euclidean_circle :: \"circline \\<Rightarrow> euclidean_circle\" is euclidean_circle_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       euclidean_circle_clmat circline_mat1 =\n       euclidean_circle_clmat circline_mat2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "obtain A1 B1 C1 D1 where HH1: \"H1 = (A1, B1, C1, D1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1.\n        H1 = (A1, B1, C1, D1) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"H1\") auto"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "obtain A2 B2 C2 D2 where HH2: \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A2 B2 C2 D2.\n        H2 = (A2, B2, C2, D2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"H2\") auto"], ["proof (state)\nthis:\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where \"k \\<noteq> 0\" and *: \"A2 = cor k * A1\" \"B2 = cor k * B1\" \"C2 = cor k * C1\" \"D2 = cor k * D1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; A2 = cor k * A1; B2 = cor k * B1;\n         C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using HH1 HH2"], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; A2 = cor k * A1; B2 = cor k * B1;\n         C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "have \"(cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) = (cor k)\\<^sup>2 * (B1*C1 - A1*D1)\"\n    \"(cor k * A1 * (cor k * A1)) = (cor k)\\<^sup>2 * (A1*A1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1) =\n    (cor k)\\<^sup>2 * (B1 * C1 - A1 * D1) &&&\n    cor k * A1 * (cor k * A1) = (cor k)\\<^sup>2 * (A1 * A1)", "by (auto simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1) =\n  (cor k)\\<^sup>2 * (B1 * C1 - A1 * D1)\n  cor k * A1 * (cor k * A1) = (cor k)\\<^sup>2 * (A1 * A1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "hence \"(cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) /\n         (cor k * A1 * (cor k * A1)) = (B1*C1 - A1*D1) / (A1*A1)\""], ["proof (prove)\nusing this:\n  cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1) =\n  (cor k)\\<^sup>2 * (B1 * C1 - A1 * D1)\n  cor k * A1 * (cor k * A1) = (cor k)\\<^sup>2 * (A1 * A1)\n\ngoal (1 subgoal):\n 1. (cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) /\n    (cor k * A1 * (cor k * A1)) =\n    (B1 * C1 - A1 * D1) / (A1 * A1)", "using \\<open>k \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1) =\n  (cor k)\\<^sup>2 * (B1 * C1 - A1 * D1)\n  cor k * A1 * (cor k * A1) = (cor k)\\<^sup>2 * (A1 * A1)\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) /\n    (cor k * A1 * (cor k * A1)) =\n    (B1 * C1 - A1 * D1) / (A1 * A1)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) /\n  (cor k * A1 * (cor k * A1)) =\n  (B1 * C1 - A1 * D1) / (A1 * A1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_circle_cmat circline_mat1 =\n                         euclidean_circle_cmat circline_mat2", "thus \"euclidean_circle_cmat H1 = euclidean_circle_cmat H2\""], ["proof (prove)\nusing this:\n  (cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) /\n  (cor k * A1 * (cor k * A1)) =\n  (B1 * C1 - A1 * D1) / (A1 * A1)\n\ngoal (1 subgoal):\n 1. euclidean_circle_cmat H1 = euclidean_circle_cmat H2", "using HH1 HH2 * hh"], ["proof (prove)\nusing this:\n  (cor k * B1 * (cor k * C1) - cor k * A1 * (cor k * D1)) /\n  (cor k * A1 * (cor k * A1)) =\n  (B1 * C1 - A1 * D1) / (A1 * A1)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. euclidean_circle_cmat H1 = euclidean_circle_cmat H2", "by auto"], ["proof (state)\nthis:\n  euclidean_circle_cmat H1 = euclidean_circle_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma classic_circle:\n  assumes \"is_circle H\" and \"(a, r) = euclidean_circle H\" and \"circline_type H \\<le> 0\"\n  shows \"circline_set H = of_complex ` circle a r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "obtain A B C D where *: \"H = mk_circline A B C D\" \"hermitean (A, B, C, D)\" \"(A, B, C, D) \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n         (A, B, C, D) \\<noteq> mat_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_mk_circline[of H]"], ["proof (prove)\nusing this:\n  \\<exists>A B C D.\n     H = mk_circline A B C D \\<and>\n     hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n         (A, B, C, D) \\<noteq> mat_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "have \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using * hermitean_elems"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "have \"Re (A*D - B*C) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (A * D - B * C) \\<le> 0", "using \\<open>circline_type H \\<le> 0\\<close> *"], ["proof (prove)\nusing this:\n  circline_type H \\<le> 0\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. Re (A * D - B * C) \\<le> 0", "by simp"], ["proof (state)\nthis:\n  Re (A * D - B * C) \\<le> 0\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "hence **: \"Re A * Re D \\<le> (cmod B)\\<^sup>2\""], ["proof (prove)\nusing this:\n  Re (A * D - B * C) \\<le> 0\n\ngoal (1 subgoal):\n 1. Re A * Re D \\<le> (cmod B)\\<^sup>2", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  Re (A * D - B * C) \\<le> 0\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. Re A * Re D \\<le> (cmod B)\\<^sup>2", "by (simp add: cmod_square)"], ["proof (state)\nthis:\n  Re A * Re D \\<le> (cmod B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "have \"A \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "using \\<open>is_circle H\\<close> * \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_circle H\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  is_real A\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "by simp (transfer, transfer, simp)"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "hence \"Re A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re A \\<noteq> 0", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n  is_real A\n\ngoal (1 subgoal):\n 1. Re A \\<noteq> 0", "by (metis complex_surj zero_complex.code)"], ["proof (state)\nthis:\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "have ***: \"\\<infinity>\\<^sub>h \\<notin> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> circline_set H", "using * inf_in_circline_set[of H] \\<open>is_circle H\\<close>"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  (\\<infinity>\\<^sub>h \\<in> circline_set H) = is_line H\n  is_circle H\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> circline_set H", "by simp"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h \\<notin> circline_set H\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "let ?a = \"-B/A\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "let ?r2 = \"((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "let ?r = \"sqrt ?r2\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "have \"?a = a \\<and> ?r = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - B / A = a \\<and>\n    sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) = r", "using \\<open>(a, r) = euclidean_circle H\\<close>"], ["proof (prove)\nusing this:\n  (a, r) = euclidean_circle H\n\ngoal (1 subgoal):\n 1. - B / A = a \\<and>\n    sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) = r", "using * \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>C = cnj B\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (a, r) = euclidean_circle H\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  is_real A\n  is_real D\n  C = cnj B\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - B / A = a \\<and>\n    sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) = r", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, r) = euclidean_circle (mk_circline A B (cnj B) D);\n     H = mk_circline A B (cnj B) D; is_real A; is_real D; C = cnj B;\n     A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - (B / A) = a \\<and>\n                      sqrt\n                       (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) =\n                      r", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a r A B D H C.\n       \\<lbrakk>(a, r) =\n                euclidean_circle_clmat (mk_circline_clmat A B (cnj B) D);\n        circline_eq_clmat H (mk_circline_clmat A B (cnj B) D); is_real A;\n        is_real D; C = cnj B; A \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> - (B / A) = a \\<and>\n                         sqrt\n                          (((cmod B)\\<^sup>2 - Re A * Re D) /\n                           (Re A)\\<^sup>2) =\n                         r", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a r A B D H C.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        (a, r) = euclidean_circle_cmat (mk_circline_cmat A B (cnj B) D);\n        circline_eq_cmat H (mk_circline_cmat A B (cnj B) D); is_real A;\n        is_real D; C = cnj B; A \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> - (B / A) = a \\<and>\n                         sqrt\n                          (((cmod B)\\<^sup>2 - Re A * Re D) /\n                           (Re A)\\<^sup>2) =\n                         r", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a A B D H C.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> (0, 0, 0, 0); a = - (B / A);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and> (A, B, cnj B, D) = cor k *\\<^sub>s\\<^sub>m H;\n        is_real A; is_real D; C = cnj B; A \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2 =\n                         Re ((B * cnj B - A * D) / (A * A))", "apply (subst Re_divide_real)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a A B D H C.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> (0, 0, 0, 0); a = - (B / A);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and> (A, B, cnj B, D) = cor k *\\<^sub>s\\<^sub>m H;\n        is_real A; is_real D; C = cnj B; A \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_real (A * A)\n 2. \\<And>a A B D H C.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> (0, 0, 0, 0); a = - (B / A);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and> (A, B, cnj B, D) = cor k *\\<^sub>s\\<^sub>m H;\n        is_real A; is_real D; C = cnj B; A \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> A * A \\<noteq> 0\n 3. \\<And>a A B D H C.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> (0, 0, 0, 0); a = - (B / A);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and> (A, B, cnj B, D) = cor k *\\<^sub>s\\<^sub>m H;\n        is_real A; is_real D; C = cnj B; A \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2 =\n                         Re (B * cnj B - A * D) / Re (A * A)", "apply (simp_all add: cmod_square, simp add: power2_eq_square)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  - B / A = a \\<and>\n  sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "using * ** *** \\<open>Re A \\<noteq> 0\\<close> \\<open>is_real A\\<close> \\<open>C = cnj B\\<close> \\<open>?a = a \\<and> ?r = r\\<close>"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  Re A * Re D \\<le> (cmod B)\\<^sup>2\n  \\<infinity>\\<^sub>h \\<notin> circline_set H\n  Re A \\<noteq> 0\n  is_real A\n  C = cnj B\n  - B / A = a \\<and>\n  sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "using classic_circline[of H A B C D] assms circline_circle[of \"Re A\" \"Re D\" B \"circline (Re A) B (Re D)\" ?a ?r2 ?r]"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  Re A * Re D \\<le> (cmod B)\\<^sup>2\n  \\<infinity>\\<^sub>h \\<notin> circline_set H\n  Re A \\<noteq> 0\n  is_real A\n  C = cnj B\n  - B / A = a \\<and>\n  sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) = r\n  \\<lbrakk>H = mk_circline A B C D;\n   hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\\<rbrakk>\n  \\<Longrightarrow> circline_set H - {\\<infinity>\\<^sub>h} =\n                    of_complex ` circline (Re A) B (Re D)\n  is_circle H\n  (a, r) = euclidean_circle H\n  circline_type H \\<le> 0\n  \\<lbrakk>Re A \\<noteq> 0; Re A * Re D \\<le> (cmod B)\\<^sup>2;\n   circline (Re A) B (Re D) = circline (Re A) B (Re D);\n   - B / A = - B / cor (Re A);\n   ((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2 =\n   ((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2;\n   sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2) =\n   sqrt (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2)\\<rbrakk>\n  \\<Longrightarrow> circline (Re A) B (Re D) =\n                    circle (- B / A)\n                     (sqrt\n                       (((cmod B)\\<^sup>2 - Re A * Re D) / (Re A)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. circline_set H = of_complex ` circle a r", "by (simp add: circle_def)"], ["proof (state)\nthis:\n  circline_set H = of_complex ` circle a r\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Euclidean line is represented by two points.\\<close>"], ["", "type_synonym euclidean_line = \"complex \\<times> complex\""], ["", "definition euclidean_line_cmat :: \"complex_mat \\<Rightarrow> euclidean_line\" where\n [simp]: \"euclidean_line_cmat H =\n         (let (A, B, C, D) = H;\n              z1 = -(D*B)/(2*B*C);\n              z2 = z1 + \\<i> * sgn (if arg B > 0 then -B else B)\n           in (z1, z2))\""], ["", "lift_definition euclidean_line_clmat :: \"circline_mat \\<Rightarrow> euclidean_line\" is euclidean_line_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition euclidean_line :: \"circline \\<Rightarrow> complex \\<times> complex\" is euclidean_line_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       euclidean_line_clmat circline_mat1 =\n       euclidean_line_clmat circline_mat2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "obtain A1 B1 C1 D1 where HH1: \"H1 = (A1, B1, C1, D1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1.\n        H1 = (A1, B1, C1, D1) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"H1\") auto"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "obtain A2 B2 C2 D2 where HH2: \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A2 B2 C2 D2.\n        H2 = (A2, B2, C2, D2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"H2\") auto"], ["proof (state)\nthis:\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where \"k \\<noteq> 0\" and *: \"A2 = cor k * A1\" \"B2 = cor k * B1\" \"C2 = cor k * C1\" \"D2 = cor k * D1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; A2 = cor k * A1; B2 = cor k * B1;\n         C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using HH1 HH2"], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; A2 = cor k * A1; B2 = cor k * B1;\n         C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "have 1: \"B1 \\<noteq> 0 \\<and> 0 < arg B1 \\<longrightarrow> \\<not> 0 < arg (- B1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B1 \\<noteq> 0 \\<and> 0 < arg B1 \\<longrightarrow> \\<not> 0 < arg (- B1)", "using canon_ang_plus_pi1[of \"arg B1\"] arg_bounded[of B1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < arg B1; arg B1 \\<le> 2 * pi\\<rbrakk>\n  \\<Longrightarrow> \\<downharpoonright>arg B1 + pi\\<downharpoonleft> =\n                    arg B1 - pi\n  - pi < arg B1 \\<and> arg B1 \\<le> pi\n\ngoal (1 subgoal):\n 1. B1 \\<noteq> 0 \\<and> 0 < arg B1 \\<longrightarrow> \\<not> 0 < arg (- B1)", "by (auto simp add: arg_uminus)"], ["proof (state)\nthis:\n  B1 \\<noteq> 0 \\<and> 0 < arg B1 \\<longrightarrow> \\<not> 0 < arg (- B1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "have 2: \"B1 \\<noteq> 0 \\<and> \\<not> 0 < arg B1 \\<longrightarrow> 0 < arg (- B1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B1 \\<noteq> 0 \\<and> \\<not> 0 < arg B1 \\<longrightarrow> 0 < arg (- B1)", "using canon_ang_plus_pi2[of \"arg B1\"] arg_bounded[of B1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>- 2 * pi < arg B1; arg B1 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> \\<downharpoonright>arg B1 + pi\\<downharpoonleft> =\n                    arg B1 + pi\n  - pi < arg B1 \\<and> arg B1 \\<le> pi\n\ngoal (1 subgoal):\n 1. B1 \\<noteq> 0 \\<and> \\<not> 0 < arg B1 \\<longrightarrow> 0 < arg (- B1)", "by (auto simp add: arg_uminus)"], ["proof (state)\nthis:\n  B1 \\<noteq> 0 \\<and> \\<not> 0 < arg B1 \\<longrightarrow> 0 < arg (- B1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> euclidean_line_cmat circline_mat1 =\n                         euclidean_line_cmat circline_mat2", "show \"euclidean_line_cmat H1 = euclidean_line_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. euclidean_line_cmat H1 = euclidean_line_cmat H2", "using HH1 HH2 * \\<open>k \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. euclidean_line_cmat H1 = euclidean_line_cmat H2", "by (cases \"k > 0\") (auto simp add: Let_def, simp_all add: sgn_eq 1 2)"], ["proof (state)\nthis:\n  euclidean_line_cmat H1 = euclidean_line_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma classic_line:\n  assumes \"is_line H\" and \"circline_type H < 0\" and \"(z1, z2) = euclidean_line H\"\n  shows \"circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "obtain A B C D where *: \"H = mk_circline A B C D\" \"hermitean (A, B, C, D)\" \"(A, B, C, D) \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n         (A, B, C, D) \\<noteq> mat_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_mk_circline[of H]"], ["proof (prove)\nusing this:\n  \\<exists>A B C D.\n     H = mk_circline A B C D \\<and>\n     hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        \\<lbrakk>H = mk_circline A B C D; hermitean (A, B, C, D);\n         (A, B, C, D) \\<noteq> mat_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "have \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using * hermitean_elems"], ["proof (prove)\nusing this:\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "have \"Re A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_imag A", "using \\<open>is_line H\\<close> * \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  is_line H\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. is_imag A", "by simp (transfer, transfer, simp)"], ["proof (state)\nthis:\n  is_imag A\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "have \"B \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> 0", "using \\<open>Re A = 0\\<close>  \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>C = cnj B\\<close> * \\<open>circline_type H < 0\\<close>"], ["proof (prove)\nusing this:\n  is_imag A\n  is_real A\n  is_real D\n  C = cnj B\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  circline_type H < 0\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0", "using circline_type_mk_circline[of A B C D]"], ["proof (prove)\nusing this:\n  is_imag A\n  is_real A\n  is_real D\n  C = cnj B\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  circline_type H < 0\n  (A, B, C, D) \\<in> hermitean_nonzero \\<Longrightarrow>\n  circline_type (mk_circline A B C D) = sgn (Re (A * D - B * C))\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "let ?z1 = \"- cor (Re D) * B / (2 * B * cnj B)\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "let ?z2 = \"?z1 + \\<i> * sgn (if 0 < arg B then - B else B)\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "have \"z1 = ?z1 \\<and> z2 = ?z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z1 = - cor (Re D) * B / (2 * B * cnj B) \\<and>\n    z2 =\n    - cor (Re D) * B / (2 * B * cnj B) +\n    \\<i> * sgn (if 0 < arg B then - B else B)", "using \\<open>(z1, z2) = euclidean_line H\\<close> * \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  (z1, z2) = euclidean_line H\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. z1 = - cor (Re D) * B / (2 * B * cnj B) \\<and>\n    z2 =\n    - cor (Re D) * B / (2 * B * cnj B) +\n    \\<i> * sgn (if 0 < arg B then - B else B)", "by simp (transfer, transfer, simp add: Let_def)"], ["proof (state)\nthis:\n  z1 = - cor (Re D) * B / (2 * B * cnj B) \\<and>\n  z2 =\n  - cor (Re D) * B / (2 * B * cnj B) +\n  \\<i> * sgn (if 0 < arg B then - B else B)\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "thus ?thesis"], ["proof (prove)\nusing this:\n  z1 = - cor (Re D) * B / (2 * B * cnj B) \\<and>\n  z2 =\n  - cor (Re D) * B / (2 * B * cnj B) +\n  \\<i> * sgn (if 0 < arg B then - B else B)\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "using *"], ["proof (prove)\nusing this:\n  z1 = - cor (Re D) * B / (2 * B * cnj B) \\<and>\n  z2 =\n  - cor (Re D) * B / (2 * B * cnj B) +\n  \\<i> * sgn (if 0 < arg B then - B else B)\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "using classic_circline[of H A B C D] circline_line[of \"Re A\" B \"circline (Re A) B (Re D)\" \"Re D\" ?z1 ?z2] \\<open>Re A = 0\\<close> \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  z1 = - cor (Re D) * B / (2 * B * cnj B) \\<and>\n  z2 =\n  - cor (Re D) * B / (2 * B * cnj B) +\n  \\<i> * sgn (if 0 < arg B then - B else B)\n  H = mk_circline A B C D\n  hermitean (A, B, C, D)\n  (A, B, C, D) \\<noteq> mat_zero\n  \\<lbrakk>H = mk_circline A B C D;\n   hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\\<rbrakk>\n  \\<Longrightarrow> circline_set H - {\\<infinity>\\<^sub>h} =\n                    of_complex ` circline (Re A) B (Re D)\n  \\<lbrakk>is_imag A; B \\<noteq> 0;\n   circline (Re A) B (Re D) = circline (Re A) B (Re D);\n   - cor (Re D) * B / (2 * B * cnj B) = - cor (Re D) * B / (2 * B * cnj B);\n   - cor (Re D) * B / (2 * B * cnj B) +\n   \\<i> * sgn (if 0 < arg B then - B else B) =\n   - cor (Re D) * B / (2 * B * cnj B) +\n   \\<i> * sgn (if 0 < arg B then - B else B)\\<rbrakk>\n  \\<Longrightarrow> circline (Re A) B (Re D) =\n                    line (- cor (Re D) * B / (2 * B * cnj B))\n                     (- cor (Re D) * B / (2 * B * cnj B) +\n                      \\<i> * sgn (if 0 < arg B then - B else B))\n  is_imag A\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2", "by simp"], ["proof (state)\nthis:\n  circline_set H - {\\<infinity>\\<^sub>h} = of_complex ` line z1 z2\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Some special circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)\n\n(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Unit circle\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition unit_circle_cmat :: complex_mat where\n  [simp]: \"unit_circle_cmat =  (1, 0, 0, -1)\""], ["", "lift_definition unit_circle_clmat :: circline_mat is unit_circle_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean unit_circle_cmat \\<and> unit_circle_cmat \\<noteq> mat_zero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition unit_circle :: circline is unit_circle_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma on_circline_cmat_cvec_unit:\n  shows \"on_circline_cmat_cvec unit_circle_cmat (z1, z2) \\<longleftrightarrow> \n         z1 * cnj z1 = z2 * cnj z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec unit_circle_cmat (z1, z2) =\n    (z1 * cnj z1 = z2 * cnj z2)", "by (simp add: vec_cnj_def field_simps)"], ["", "lemma\n  one_on_unit_circle [simp]: \"on_circline unit_circle 1\\<^sub>h\"  and\n  ii_on_unit_circle [simp]: \"on_circline unit_circle ii\\<^sub>h\" and\n  not_zero_on_unit_circle [simp]: \"\\<not> on_circline unit_circle 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline unit_circle 1\\<^sub>h &&&\n    on_circline unit_circle ii\\<^sub>h &&&\n    \\<not> on_circline unit_circle 0\\<^sub>h", "by (transfer, transfer, simp add: vec_cnj_def)+"], ["", "lemma  \n  one_in_unit_circle_set [simp]: \"1\\<^sub>h \\<in> circline_set unit_circle\" and\n  ii_in_unit_circle_set [simp]: \"ii\\<^sub>h \\<in> circline_set unit_circle\" and\n  zero_in_unit_circle_set [simp]: \"0\\<^sub>h \\<notin> circline_set unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>h \\<in> circline_set unit_circle &&&\n    ii\\<^sub>h \\<in> circline_set unit_circle &&&\n    0\\<^sub>h \\<notin> circline_set unit_circle", "unfolding circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>h \\<in> Collect (on_circline unit_circle) &&&\n    ii\\<^sub>h \\<in> Collect (on_circline unit_circle) &&&\n    0\\<^sub>h \\<notin> Collect (on_circline unit_circle)", "by simp_all"], ["", "lemma is_circle_unit_circle [simp]:\n  shows \"is_circle unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_circle unit_circle", "by (transfer, transfer, simp)"], ["", "lemma not_inf_on_unit_circle' [simp]:\n  shows \"\\<not> on_circline unit_circle \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> on_circline unit_circle \\<infinity>\\<^sub>h", "using is_circle_unit_circle inf_on_circline"], ["proof (prove)\nusing this:\n  is_circle unit_circle\n  on_circline ?H \\<infinity>\\<^sub>h = is_line ?H\n\ngoal (1 subgoal):\n 1. \\<not> on_circline unit_circle \\<infinity>\\<^sub>h", "by blast"], ["", "lemma not_inf_on_unit_circle'' [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<notin> circline_set unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> circline_set unit_circle", "by (simp add: inf_in_circline_set)"], ["", "lemma euclidean_circle_unit_circle [simp]:\n  shows \"euclidean_circle unit_circle = (0, 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. euclidean_circle unit_circle = (0, 1)", "by (transfer, transfer, simp)"], ["", "lemma circline_type_unit_circle [simp]:\n  shows \"circline_type unit_circle = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type unit_circle = - 1", "by (transfer, transfer, simp)"], ["", "lemma on_circline_unit_circle [simp]:\n  shows \"on_circline unit_circle (of_complex z) \\<longleftrightarrow> cmod z = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline unit_circle (of_complex z) = (cmod z = 1)", "by (transfer, transfer, simp add: vec_cnj_def mult.commute)"], ["", "lemma circline_set_unit_circle [simp]:\n  shows \"circline_set unit_circle = of_complex ` {z. cmod z = 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set unit_circle = of_complex ` {z. cmod z = 1}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set unit_circle = of_complex ` {z. cmod z = 1}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set unit_circle = of_complex ` {z. cmod z = 1}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set unit_circle \\<Longrightarrow>\n       x \\<in> of_complex ` {z. cmod z = 1}\n 2. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set unit_circle \\<Longrightarrow>\n       x \\<in> of_complex ` {z. cmod z = 1}\n 2. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "assume \"x \\<in> circline_set unit_circle\""], ["proof (state)\nthis:\n  x \\<in> circline_set unit_circle\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set unit_circle \\<Longrightarrow>\n       x \\<in> of_complex ` {z. cmod z = 1}\n 2. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "then"], ["proof (chain)\npicking this:\n  x \\<in> circline_set unit_circle", "obtain x' where \"x = of_complex x'\""], ["proof (prove)\nusing this:\n  x \\<in> circline_set unit_circle\n\ngoal (1 subgoal):\n 1. (\\<And>x'. x = of_complex x' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of x]"], ["proof (prove)\nusing this:\n  x \\<in> circline_set unit_circle\n  x = \\<infinity>\\<^sub>h \\<or> (\\<exists>xa. x = of_complex xa)\n\ngoal (1 subgoal):\n 1. (\\<And>x'. x = of_complex x' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = of_complex x'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set unit_circle \\<Longrightarrow>\n       x \\<in> of_complex ` {z. cmod z = 1}\n 2. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "thus \"x \\<in> of_complex ` {z. cmod z = 1}\""], ["proof (prove)\nusing this:\n  x = of_complex x'\n\ngoal (1 subgoal):\n 1. x \\<in> of_complex ` {z. cmod z = 1}", "using \\<open>x \\<in> circline_set unit_circle\\<close>"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x \\<in> circline_set unit_circle\n\ngoal (1 subgoal):\n 1. x \\<in> of_complex ` {z. cmod z = 1}", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x \\<in> Collect (on_circline unit_circle)\n\ngoal (1 subgoal):\n 1. x \\<in> of_complex ` {z. cmod z = 1}", "by auto"], ["proof (state)\nthis:\n  x \\<in> of_complex ` {z. cmod z = 1}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "assume \"cmod x = 1\""], ["proof (state)\nthis:\n  cmod x = 1\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       cmod xa = 1 \\<Longrightarrow>\n       of_complex xa \\<in> circline_set unit_circle", "thus \"of_complex x \\<in> circline_set unit_circle\""], ["proof (prove)\nusing this:\n  cmod x = 1\n\ngoal (1 subgoal):\n 1. of_complex x \\<in> circline_set unit_circle", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  cmod x = 1\n\ngoal (1 subgoal):\n 1. of_complex x \\<in> Collect (on_circline unit_circle)", "by auto"], ["proof (state)\nthis:\n  of_complex x \\<in> circline_set unit_circle\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  circline_set unit_circle = of_complex ` {z. cmod z = 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_set_unit_circle_I [simp]:\n  assumes \"cmod z = 1\"\n  shows \"of_complex z \\<in> circline_set unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> circline_set unit_circle", "using assms"], ["proof (prove)\nusing this:\n  cmod z = 1\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> circline_set unit_circle", "unfolding circline_set_unit_circle"], ["proof (prove)\nusing this:\n  cmod z = 1\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> of_complex ` {z. cmod z = 1}", "by simp"], ["", "lemma inversion_unit_circle [simp]:\n  assumes \"on_circline unit_circle x\"\n  shows \"inversion x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion x = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. inversion x = x", "obtain x' where \"x = of_complex x'\" \"x' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = of_complex x'; x' \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of x]"], ["proof (prove)\nusing this:\n  x = \\<infinity>\\<^sub>h \\<or> (\\<exists>xa. x = of_complex xa)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = of_complex x'; x' \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  x = \\<infinity>\\<^sub>h \\<or> (\\<exists>xa. x = of_complex xa)\n  on_circline unit_circle x\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x = of_complex x'; x' \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x = of_complex x'\n  x' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. inversion x = x", "moreover"], ["proof (state)\nthis:\n  x = of_complex x'\n  x' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. inversion x = x", "hence \"x' * cnj x' = 1\""], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x' * cnj x' = 1", "using assms"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  on_circline unit_circle x\n\ngoal (1 subgoal):\n 1. x' * cnj x' = 1", "using circline_set_unit_circle"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  on_circline unit_circle x\n  circline_set unit_circle = of_complex ` {z. cmod z = 1}\n\ngoal (1 subgoal):\n 1. x' * cnj x' = 1", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  on_circline unit_circle x\n  Collect (on_circline unit_circle) = of_complex ` {z. cmod z = 1}\n\ngoal (1 subgoal):\n 1. x' * cnj x' = 1", "by auto"], ["proof (state)\nthis:\n  x' * cnj x' = 1\n\ngoal (1 subgoal):\n 1. inversion x = x", "hence \"1 / cnj x' = x'\""], ["proof (prove)\nusing this:\n  x' * cnj x' = 1\n\ngoal (1 subgoal):\n 1. 1 / cnj x' = x'", "using \\<open>x' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  x' * cnj x' = 1\n  x' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 / cnj x' = x'", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 / cnj x' = x'\n\ngoal (1 subgoal):\n 1. inversion x = x", "ultimately"], ["proof (chain)\npicking this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  1 / cnj x' = x'", "show ?thesis"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  1 / cnj x' = x'\n\ngoal (1 subgoal):\n 1. inversion x = x", "using assms"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  1 / cnj x' = x'\n  on_circline unit_circle x\n\ngoal (1 subgoal):\n 1. inversion x = x", "unfolding inversion_def"], ["proof (prove)\nusing this:\n  x = of_complex x'\n  x' \\<noteq> 0\n  1 / cnj x' = x'\n  on_circline unit_circle x\n\ngoal (1 subgoal):\n 1. (conjugate \\<circ> reciprocal) x = x", "by simp"], ["proof (state)\nthis:\n  inversion x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inversion_id_iff_on_unit_circle: \n  shows \"inversion a = a \\<longleftrightarrow> on_circline unit_circle a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inversion a = a) = on_circline unit_circle a", "using inversion_id_iff[of a] inf_or_of_complex[of a]"], ["proof (prove)\nusing this:\n  (a = inversion a) =\n  (a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n   to_complex a * cnj (to_complex a) = 1)\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n\ngoal (1 subgoal):\n 1. (inversion a = a) = on_circline unit_circle a", "by auto"], ["", "lemma on_unit_circle_conjugate [simp]:\n  shows \"on_circline unit_circle (conjugate z) \\<longleftrightarrow> on_circline unit_circle z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline unit_circle (conjugate z) = on_circline unit_circle z", "by (transfer, transfer, auto simp add: vec_cnj_def field_simps)"], ["", "lemma conjugate_unit_circle_set [simp]:\n  shows \"conjugate ` (circline_set unit_circle) = circline_set unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` circline_set unit_circle = circline_set unit_circle", "unfolding circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` Collect (on_circline unit_circle) =\n    Collect (on_circline unit_circle)", "by (auto simp add: image_iff, rule_tac x=\"conjugate x\" in exI, simp)"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>x-axis\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition x_axis_cmat :: complex_mat where\n  [simp]: \"x_axis_cmat =  (0, \\<i>, -\\<i>, 0)\""], ["", "lift_definition x_axis_clmat :: circline_mat is x_axis_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean x_axis_cmat \\<and> x_axis_cmat \\<noteq> mat_zero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition x_axis :: circline is x_axis_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma special_points_on_x_axis' [simp]:\n  shows \"on_circline x_axis 0\\<^sub>h\" and \"on_circline x_axis 1\\<^sub>h\" and \"on_circline x_axis \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline x_axis 0\\<^sub>h &&&\n    on_circline x_axis 1\\<^sub>h &&& on_circline x_axis \\<infinity>\\<^sub>h", "by (transfer, transfer, simp add: vec_cnj_def)+"], ["", "lemma special_points_on_x_axis'' [simp]:\n  shows \"0\\<^sub>h \\<in> circline_set x_axis\" and \"1\\<^sub>h \\<in> circline_set x_axis\" and \"\\<infinity>\\<^sub>h \\<in> circline_set x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set x_axis &&&\n    1\\<^sub>h \\<in> circline_set x_axis &&&\n    \\<infinity>\\<^sub>h \\<in> circline_set x_axis", "unfolding circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> Collect (on_circline x_axis) &&&\n    1\\<^sub>h \\<in> Collect (on_circline x_axis) &&&\n    \\<infinity>\\<^sub>h \\<in> Collect (on_circline x_axis)", "by auto"], ["", "lemma is_line_x_axis [simp]:\n  shows \"is_line x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_line x_axis", "by (transfer, transfer, simp)"], ["", "lemma circline_type_x_axis [simp]:\n  shows \"circline_type x_axis = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type x_axis = - 1", "by (transfer, transfer, simp)"], ["", "lemma on_circline_x_axis:\n  shows \"on_circline x_axis z \\<longleftrightarrow> (\\<exists> c. is_real c \\<and> z = of_complex c) \\<or> z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline x_axis z =\n    ((\\<exists>c. is_real c \\<and> z = of_complex c) \\<or>\n     z = \\<infinity>\\<^sub>h)", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. \\<And>c.\n       \\<lbrakk>is_real c; z = of_complex c\\<rbrakk>\n       \\<Longrightarrow> on_circline x_axis (of_complex c)\n 3. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "fix z c"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. \\<And>c.\n       \\<lbrakk>is_real c; z = of_complex c\\<rbrakk>\n       \\<Longrightarrow> on_circline x_axis (of_complex c)\n 3. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "assume \"is_real c\""], ["proof (state)\nthis:\n  is_real c\n\ngoal (3 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. \\<And>c.\n       \\<lbrakk>is_real c; z = of_complex c\\<rbrakk>\n       \\<Longrightarrow> on_circline x_axis (of_complex c)\n 3. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "thus \"on_circline x_axis (of_complex c)\""], ["proof (prove)\nusing this:\n  is_real c\n\ngoal (1 subgoal):\n 1. on_circline x_axis (of_complex c)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>is_real c; is_real ca\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec x_axis_cmat\n                          (of_complex_cvec c)", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>is_real c; is_real ca\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec x_axis_cmat\n                          (of_complex_cvec c)", "assume \"is_real c\""], ["proof (state)\nthis:\n  is_real c\n\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>is_real c; is_real ca\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec x_axis_cmat\n                          (of_complex_cvec c)", "thus \"on_circline_cmat_cvec x_axis_cmat (of_complex_cvec c)\""], ["proof (prove)\nusing this:\n  is_real c\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (of_complex_cvec c)", "using eq_cnj_iff_real[of c]"], ["proof (prove)\nusing this:\n  is_real c\n  (cnj c = c) = is_real c\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (of_complex_cvec c)", "by (simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  on_circline_cmat_cvec x_axis_cmat (of_complex_cvec c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  on_circline x_axis (of_complex c)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "assume \"on_circline x_axis z\" \"z \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (state)\nthis:\n  on_circline x_axis z\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_real c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "thus \"\\<exists>c. is_real c \\<and> z = of_complex c\""], ["proof (prove)\nusing this:\n  on_circline x_axis z\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>c. is_real c \\<and> z = of_complex c", "proof (transfer, transfer, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec x_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords x_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_real c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec x_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords x_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_real c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "assume \"(a, b) \\<noteq> vec_zero\"\n      \"on_circline_cmat_cvec x_axis_cmat (a, b)\"\n      \"\\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  (a, b) \\<noteq> vec_zero\n  on_circline_cmat_cvec x_axis_cmat (a, b)\n  \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec x_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords x_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_real c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "hence \"b \\<noteq> 0\" \"cnj a * b = cnj b * a\""], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> vec_zero\n  on_circline_cmat_cvec x_axis_cmat (a, b)\n  \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 &&& cnj a * b = cnj b * a", "using inf_cvec_z2_zero_iff"], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> vec_zero\n  on_circline_cmat_cvec x_axis_cmat (a, b)\n  \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (?z1.0, ?z2.0) \\<noteq> vec_zero \\<Longrightarrow>\n  ((?z1.0, ?z2.0) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (?z2.0 = 0)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 &&& cnj a * b = cnj b * a", "by (auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  b \\<noteq> 0\n  cnj a * b = cnj b * a\n\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec x_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords x_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline x_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_real c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "thus \"\\<exists>c. is_real c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  cnj a * b = cnj b * a\n\ngoal (1 subgoal):\n 1. \\<exists>c. is_real c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "apply (rule_tac x=\"a/b\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<noteq> 0; cnj a * b = cnj b * a\\<rbrakk>\n    \\<Longrightarrow> is_real (a / b) \\<and>\n                      (a, b) \\<approx>\\<^sub>v of_complex_cvec (a / b)", "apply (auto simp add: is_real_div field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<noteq> 0; b * cnj a = a * cnj b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         (a = 0 \\<or> k * b = 1) \\<and> k * b = 1", "apply (rule_tac x=\"1/b\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>c. is_real c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c. is_real c \\<and> z = of_complex c\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline x_axis \\<infinity>\\<^sub>h", "show \"on_circline x_axis \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline x_axis \\<infinity>\\<^sub>h", "by auto"], ["proof (state)\nthis:\n  on_circline x_axis \\<infinity>\\<^sub>h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_circline_x_axis_I [simp]:\n  assumes \"is_real z\"\n  shows \"on_circline x_axis (of_complex z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline x_axis (of_complex z)", "using assms"], ["proof (prove)\nusing this:\n  is_real z\n\ngoal (1 subgoal):\n 1. on_circline x_axis (of_complex z)", "unfolding on_circline_x_axis"], ["proof (prove)\nusing this:\n  is_real z\n\ngoal (1 subgoal):\n 1. (\\<exists>c. is_real c \\<and> of_complex z = of_complex c) \\<or>\n    of_complex z = \\<infinity>\\<^sub>h", "by auto"], ["", "lemma circline_set_x_axis:\n  shows \"circline_set x_axis = of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set x_axis =\n    of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}", "using on_circline_x_axis"], ["proof (prove)\nusing this:\n  on_circline x_axis ?z =\n  ((\\<exists>c. is_real c \\<and> ?z = of_complex c) \\<or>\n   ?z = \\<infinity>\\<^sub>h)\n\ngoal (1 subgoal):\n 1. circline_set x_axis =\n    of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  on_circline x_axis ?z =\n  ((\\<exists>c. is_real c \\<and> ?z = of_complex c) \\<or>\n   ?z = \\<infinity>\\<^sub>h)\n\ngoal (1 subgoal):\n 1. Collect (on_circline x_axis) =\n    of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}", "by auto"], ["", "lemma circline_set_x_axis_I:\n  assumes \"is_real z\"\n  shows \"of_complex z \\<in> circline_set x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> circline_set x_axis", "using assms"], ["proof (prove)\nusing this:\n  is_real z\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> circline_set x_axis", "unfolding circline_set_x_axis"], ["proof (prove)\nusing this:\n  is_real z\n\ngoal (1 subgoal):\n 1. of_complex z\n    \\<in> of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}", "by auto"], ["", "lemma circline_equation_x_axis:\n  shows \"of_complex z \\<in> circline_set x_axis \\<longleftrightarrow> z = cnj z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex z \\<in> circline_set x_axis) = (z = cnj z)", "unfolding circline_set_x_axis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex z\n     \\<in> of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}) =\n    (z = cnj z)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>of_complex z = of_complex x; is_real x\\<rbrakk>\n       \\<Longrightarrow> z = cnj z\n 2. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>of_complex z = of_complex x; is_real x\\<rbrakk>\n       \\<Longrightarrow> z = cnj z\n 2. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "assume \"of_complex z = of_complex x\" \"is_real x\""], ["proof (state)\nthis:\n  of_complex z = of_complex x\n  is_real x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>of_complex z = of_complex x; is_real x\\<rbrakk>\n       \\<Longrightarrow> z = cnj z\n 2. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "hence \"z = x\""], ["proof (prove)\nusing this:\n  of_complex z = of_complex x\n  is_real x\n\ngoal (1 subgoal):\n 1. z = x", "using of_complex_inj[of z x]"], ["proof (prove)\nusing this:\n  of_complex z = of_complex x\n  is_real x\n  of_complex z = of_complex x \\<Longrightarrow> z = x\n\ngoal (1 subgoal):\n 1. z = x", "by simp"], ["proof (state)\nthis:\n  z = x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>of_complex z = of_complex x; is_real x\\<rbrakk>\n       \\<Longrightarrow> z = cnj z\n 2. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "thus \"z = cnj z\""], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. z = cnj z", "using eq_cnj_iff_real[of z] \\<open>is_real x\\<close>"], ["proof (prove)\nusing this:\n  z = x\n  (cnj z = z) = is_real z\n  is_real x\n\ngoal (1 subgoal):\n 1. z = cnj z", "by auto"], ["proof (state)\nthis:\n  z = cnj z\n\ngoal (1 subgoal):\n 1. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "assume \"z = cnj z\""], ["proof (state)\nthis:\n  z = cnj z\n\ngoal (1 subgoal):\n 1. z = cnj z \\<Longrightarrow>\n    of_complex z \\<in> of_complex ` {x. is_real x}", "thus \"of_complex z \\<in> of_complex ` {x. is_real x} \""], ["proof (prove)\nusing this:\n  z = cnj z\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> of_complex ` {x. is_real x}", "using eq_cnj_iff_real[of z]"], ["proof (prove)\nusing this:\n  z = cnj z\n  (cnj z = z) = is_real z\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> of_complex ` {x. is_real x}", "by auto"], ["proof (state)\nthis:\n  of_complex z \\<in> of_complex ` {x. is_real x}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Positive and negative part of x-axis\\<close>"], ["", "definition positive_x_axis where\n  \"positive_x_axis = {z. z \\<in> circline_set x_axis \\<and> z \\<noteq> \\<infinity>\\<^sub>h \\<and> Re (to_complex z) > 0}\""], ["", "definition negative_x_axis where\n  \"negative_x_axis = {z. z \\<in> circline_set x_axis \\<and> z \\<noteq> \\<infinity>\\<^sub>h \\<and> Re (to_complex z) < 0}\""], ["", "lemma circline_set_positive_x_axis_I [simp]:\n  assumes \"is_real z\" and \"Re z > 0\"\n  shows \"of_complex z \\<in> positive_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> positive_x_axis", "using assms"], ["proof (prove)\nusing this:\n  is_real z\n  0 < Re z\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> positive_x_axis", "unfolding positive_x_axis_def"], ["proof (prove)\nusing this:\n  is_real z\n  0 < Re z\n\ngoal (1 subgoal):\n 1. of_complex z\n    \\<in> {z \\<in> circline_set x_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}", "by simp"], ["", "lemma circline_set_negative_x_axis_I [simp]:\n  assumes \"is_real z\" and \"Re z < 0\"\n  shows \"of_complex z \\<in> negative_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> negative_x_axis", "using assms"], ["proof (prove)\nusing this:\n  is_real z\n  Re z < 0\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> negative_x_axis", "unfolding negative_x_axis_def"], ["proof (prove)\nusing this:\n  is_real z\n  Re z < 0\n\ngoal (1 subgoal):\n 1. of_complex z\n    \\<in> {z \\<in> circline_set x_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> Re (to_complex z) < 0}", "by simp"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>y-axis\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition y_axis_cmat :: complex_mat where\n  [simp]: \"y_axis_cmat = (0, 1, 1, 0)\""], ["", "lift_definition y_axis_clmat :: circline_mat is y_axis_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean y_axis_cmat \\<and> y_axis_cmat \\<noteq> mat_zero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition y_axis :: circline is y_axis_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma special_points_on_y_axis' [simp]:\n  shows \"on_circline y_axis 0\\<^sub>h\" and \"on_circline y_axis ii\\<^sub>h\" and \"on_circline y_axis \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline y_axis 0\\<^sub>h &&&\n    on_circline y_axis ii\\<^sub>h &&& on_circline y_axis \\<infinity>\\<^sub>h", "by (transfer, transfer, simp add: vec_cnj_def)+"], ["", "lemma special_points_on_y_axis'' [simp]:\n  shows \"0\\<^sub>h \\<in> circline_set y_axis\" and \"ii\\<^sub>h \\<in> circline_set y_axis\" and \"\\<infinity>\\<^sub>h \\<in> circline_set y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set y_axis &&&\n    ii\\<^sub>h \\<in> circline_set y_axis &&&\n    \\<infinity>\\<^sub>h \\<in> circline_set y_axis", "unfolding circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> Collect (on_circline y_axis) &&&\n    ii\\<^sub>h \\<in> Collect (on_circline y_axis) &&&\n    \\<infinity>\\<^sub>h \\<in> Collect (on_circline y_axis)", "by auto"], ["", "lemma on_circline_y_axis: \n  shows \"on_circline y_axis z \\<longleftrightarrow> (\\<exists> c. is_imag c \\<and> z = of_complex c) \\<or> z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline y_axis z =\n    ((\\<exists>c. is_imag c \\<and> z = of_complex c) \\<or>\n     z = \\<infinity>\\<^sub>h)", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. \\<And>c.\n       \\<lbrakk>is_imag c; z = of_complex c\\<rbrakk>\n       \\<Longrightarrow> on_circline y_axis (of_complex c)\n 3. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "fix z c"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. \\<And>c.\n       \\<lbrakk>is_imag c; z = of_complex c\\<rbrakk>\n       \\<Longrightarrow> on_circline y_axis (of_complex c)\n 3. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "assume \"is_imag c\""], ["proof (state)\nthis:\n  is_imag c\n\ngoal (3 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. \\<And>c.\n       \\<lbrakk>is_imag c; z = of_complex c\\<rbrakk>\n       \\<Longrightarrow> on_circline y_axis (of_complex c)\n 3. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "thus \"on_circline y_axis (of_complex c)\""], ["proof (prove)\nusing this:\n  is_imag c\n\ngoal (1 subgoal):\n 1. on_circline y_axis (of_complex c)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>is_imag c; is_imag ca\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec y_axis_cmat\n                          (of_complex_cvec c)", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>is_imag c; is_imag ca\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec y_axis_cmat\n                          (of_complex_cvec c)", "assume \"is_imag c\""], ["proof (state)\nthis:\n  is_imag c\n\ngoal (1 subgoal):\n 1. \\<And>c ca.\n       \\<lbrakk>is_imag c; is_imag ca\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec y_axis_cmat\n                          (of_complex_cvec c)", "thus \"on_circline_cmat_cvec y_axis_cmat (of_complex_cvec c)\""], ["proof (prove)\nusing this:\n  is_imag c\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec y_axis_cmat (of_complex_cvec c)", "using eq_minus_cnj_iff_imag[of c]"], ["proof (prove)\nusing this:\n  is_imag c\n  (cnj c = - c) = is_imag c\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec y_axis_cmat (of_complex_cvec c)", "by (simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  on_circline_cmat_cvec y_axis_cmat (of_complex_cvec c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  on_circline y_axis (of_complex c)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "assume \"on_circline y_axis z\" \"z \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (state)\nthis:\n  on_circline y_axis z\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. \\<lbrakk>on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c. is_imag c \\<and> z = of_complex c\n 2. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "thus \"\\<exists>c. is_imag c \\<and> z = of_complex c\""], ["proof (prove)\nusing this:\n  on_circline y_axis z\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>c. is_imag c \\<and> z = of_complex c", "proof (transfer, transfer, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec y_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords y_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_imag c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec y_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords y_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_imag c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "assume \"(a, b) \\<noteq> vec_zero\"\n      \"on_circline_cmat_cvec y_axis_cmat (a, b)\"\n      \"\\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  (a, b) \\<noteq> vec_zero\n  on_circline_cmat_cvec y_axis_cmat (a, b)\n  \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec y_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords y_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_imag c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "hence \"b \\<noteq> 0\" \"cnj a * b + cnj b * a = 0\""], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> vec_zero\n  on_circline_cmat_cvec y_axis_cmat (a, b)\n  \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 &&& cnj a * b + cnj b * a = 0", "using inf_cvec_z2_zero_iff"], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> vec_zero\n  on_circline_cmat_cvec y_axis_cmat (a, b)\n  \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (?z1.0, ?z2.0) \\<noteq> vec_zero \\<Longrightarrow>\n  ((?z1.0, ?z2.0) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (?z2.0 = 0)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 &&& cnj a * b + cnj b * a = 0", "by (blast, smt add.left_neutral add_cancel_right_right mult.commute mult.left_neutral mult_not_zero on_circline_cmat_cvec_circline_equation y_axis_cmat_def)"], ["proof (state)\nthis:\n  b \\<noteq> 0\n  cnj a * b + cnj b * a = 0\n\ngoal (1 subgoal):\n 1. \\<And>a b zaa.\n       \\<lbrakk>(a, b) \\<noteq> vec_zero;\n        on_circline_cmat_cvec y_axis_cmat (a, b);\n        \\<not> (a, b) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        on_circline_clmat_hcoords y_axis_clmat zaa;\n        \\<not> zaa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        on_circline y_axis z; z \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            is_imag c \\<and>\n                            (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "thus \"\\<exists>c. is_imag c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  cnj a * b + cnj b * a = 0\n\ngoal (1 subgoal):\n 1. \\<exists>c. is_imag c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "using eq_minus_cnj_iff_imag[of \"a / b\"]"], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  cnj a * b + cnj b * a = 0\n  (cnj (a / b) = - (a / b)) = is_imag (a / b)\n\ngoal (1 subgoal):\n 1. \\<exists>c. is_imag c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c", "apply (rule_tac x=\"a/b\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<noteq> 0; cnj a * b + cnj b * a = 0;\n     (cnj (a / b) = - (a / b)) = is_imag (a / b)\\<rbrakk>\n    \\<Longrightarrow> is_imag (a / b) \\<and>\n                      (a, b) \\<approx>\\<^sub>v of_complex_cvec (a / b)", "apply (auto simp add: field_simps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>b \\<noteq> 0; b * cnj a = - (a * cnj b);\n     is_imag (a / b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         (a = 0 \\<or> k * b = 1) \\<and> k * b = 1\n 2. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         (a = 0 \\<or> k * b = 1) \\<and> k * b = 1", "apply (rule_tac x=\"1/b\" in exI, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         (a = 0 \\<or> k * b = 1) \\<and> k * b = 1", "using add_eq_0_iff"], ["proof (prove)\nusing this:\n  (?a + ?b = (0::?'a)) = (?b = - ?a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         (a = 0 \\<or> k * b = 1) \\<and> k * b = 1", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<noteq> 0; a * cnj b + b * cnj a = 0;\n     b * cnj a \\<noteq> - (a * cnj b); Re (a / b) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         (a = 0 \\<or> k * b = 1) \\<and> k * b = 1", "apply (rule_tac x=\"1/b\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>c. is_imag c \\<and> (a, b) \\<approx>\\<^sub>v of_complex_cvec c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c. is_imag c \\<and> z = of_complex c\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    on_circline y_axis \\<infinity>\\<^sub>h", "show \"on_circline y_axis \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline y_axis \\<infinity>\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  on_circline y_axis \\<infinity>\\<^sub>h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_circline_y_axis_I [simp]:\n  assumes \"is_imag z\"\n  shows \"on_circline y_axis (of_complex z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline y_axis (of_complex z)", "using assms"], ["proof (prove)\nusing this:\n  is_imag z\n\ngoal (1 subgoal):\n 1. on_circline y_axis (of_complex z)", "unfolding on_circline_y_axis"], ["proof (prove)\nusing this:\n  is_imag z\n\ngoal (1 subgoal):\n 1. (\\<exists>c. is_imag c \\<and> of_complex z = of_complex c) \\<or>\n    of_complex z = \\<infinity>\\<^sub>h", "by auto"], ["", "lemma circline_set_y_axis:\n  shows \"circline_set y_axis = of_complex ` {x. is_imag x} \\<union> {\\<infinity>\\<^sub>h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set y_axis =\n    of_complex ` {x. is_imag x} \\<union> {\\<infinity>\\<^sub>h}", "using on_circline_y_axis"], ["proof (prove)\nusing this:\n  on_circline y_axis ?z =\n  ((\\<exists>c. is_imag c \\<and> ?z = of_complex c) \\<or>\n   ?z = \\<infinity>\\<^sub>h)\n\ngoal (1 subgoal):\n 1. circline_set y_axis =\n    of_complex ` {x. is_imag x} \\<union> {\\<infinity>\\<^sub>h}", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  on_circline y_axis ?z =\n  ((\\<exists>c. is_imag c \\<and> ?z = of_complex c) \\<or>\n   ?z = \\<infinity>\\<^sub>h)\n\ngoal (1 subgoal):\n 1. Collect (on_circline y_axis) =\n    of_complex ` {x. is_imag x} \\<union> {\\<infinity>\\<^sub>h}", "by auto"], ["", "lemma circline_set_y_axis_I:\n  assumes \"is_imag z\"\n  shows \"of_complex z \\<in> circline_set y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> circline_set y_axis", "using assms"], ["proof (prove)\nusing this:\n  is_imag z\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> circline_set y_axis", "unfolding circline_set_y_axis"], ["proof (prove)\nusing this:\n  is_imag z\n\ngoal (1 subgoal):\n 1. of_complex z\n    \\<in> of_complex ` {x. is_imag x} \\<union> {\\<infinity>\\<^sub>h}", "by auto"], ["", "text \\<open>Positive and negative part of y-axis\\<close>"], ["", "definition positive_y_axis where\n  \"positive_y_axis = {z. z \\<in> circline_set y_axis \\<and> z \\<noteq> \\<infinity>\\<^sub>h \\<and> Im (to_complex z) > 0}\""], ["", "definition negative_y_axis where\n  \"negative_y_axis = {z. z \\<in> circline_set y_axis \\<and> z \\<noteq> \\<infinity>\\<^sub>h \\<and> Im (to_complex z) < 0}\""], ["", "lemma circline_set_positive_y_axis_I [simp]:\n  assumes \"is_imag z\" and \"Im z > 0\"\n  shows \"of_complex z \\<in> positive_y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> positive_y_axis", "using assms"], ["proof (prove)\nusing this:\n  is_imag z\n  0 < Im z\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> positive_y_axis", "unfolding positive_y_axis_def"], ["proof (prove)\nusing this:\n  is_imag z\n  0 < Im z\n\ngoal (1 subgoal):\n 1. of_complex z\n    \\<in> {z \\<in> circline_set y_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex z)}", "by simp"], ["", "lemma circline_set_negative_y_axis_I [simp]:\n  assumes \"is_imag z\" and \"Im z < 0\"\n  shows \"of_complex z \\<in> negative_y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z \\<in> negative_y_axis", "using assms"], ["proof (prove)\nusing this:\n  is_imag z\n  Im z < 0\n\ngoal (1 subgoal):\n 1. of_complex z \\<in> negative_y_axis", "unfolding negative_y_axis_def"], ["proof (prove)\nusing this:\n  is_imag z\n  Im z < 0\n\ngoal (1 subgoal):\n 1. of_complex z\n    \\<in> {z \\<in> circline_set y_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> Im (to_complex z) < 0}", "by simp"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Point zero as a circline\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition circline_point_0_cmat :: complex_mat where\n  [simp]: \"circline_point_0_cmat =  (1, 0, 0, 0)\""], ["", "lift_definition circline_point_0_clmat :: circline_mat is circline_point_0_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean circline_point_0_cmat \\<and>\n    circline_point_0_cmat \\<noteq> mat_zero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition circline_point_0 :: circline is circline_point_0_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma circline_type_circline_point_0 [simp]:\n  shows \"circline_type circline_point_0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type circline_point_0 = 0", "by (transfer, transfer, simp)"], ["", "lemma zero_in_circline_point_0 [simp]:\n  shows \"0\\<^sub>h \\<in> circline_set circline_point_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set circline_point_0", "unfolding circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> Collect (on_circline circline_point_0)", "by auto (transfer, transfer, simp add: vec_cnj_def)+"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Imaginary unit circle\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition imag_unit_circle_cmat :: complex_mat where\n  [simp]: \"imag_unit_circle_cmat =  (1, 0, 0, 1)\""], ["", "lift_definition imag_unit_circle_clmat :: circline_mat is imag_unit_circle_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean imag_unit_circle_cmat \\<and>\n    imag_unit_circle_cmat \\<noteq> mat_zero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition imag_unit_circle :: circline is imag_unit_circle_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma circline_type_imag_unit_circle [simp]:\n  shows \"circline_type imag_unit_circle = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type imag_unit_circle = 1", "by (transfer, transfer, simp)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Intersection of circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "definition circline_intersection :: \"circline \\<Rightarrow> circline \\<Rightarrow> complex_homo set\" where\n  \"circline_intersection H1 H2 = {z. on_circline H1 z \\<and> on_circline H2 z}\""], ["", "lemma circline_equation_cancel_z2:\n  assumes \"circline_equation A B C D z1 z2 \" and \"z2 \\<noteq> 0\"\n  shows \"circline_equation A B C D (z1/z2) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_equation A B C D (z1 / z2) 1", "using assms"], ["proof (prove)\nusing this:\n  circline_equation A B C D z1 z2\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_equation A B C D (z1 / z2) 1", "by (simp add: field_simps)"], ["", "lemma circline_equation_quadratic_equation:\n  assumes \"circline_equation A B (cnj B) D z 1\" and \n          \"Re z = x\" and \"Im z = y\" and \"Re B = bx\" and \"Im B = by\"\n  shows \"A*x\\<^sup>2 + A*y\\<^sup>2 + 2*bx*x + 2*by*y + D = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) + cor (2 * bx * x) +\n    cor (2 * by * y) +\n    D =\n    0", "using assms"], ["proof (prove)\nusing this:\n  circline_equation A B (cnj B) D z 1\n  Re z = x\n  Im z = y\n  Re B = bx\n  Im B = by\n\ngoal (1 subgoal):\n 1. A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) + cor (2 * bx * x) +\n    cor (2 * by * y) +\n    D =\n    0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>circline_equation A B (cnj B) D z 1; Re z = x; Im z = y;\n     Re B = bx; Im B = by\\<rbrakk>\n    \\<Longrightarrow> A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) +\n                      cor (2 * bx * x) +\n                      cor (2 * by * y) +\n                      D =\n                      0", "have \"z = x + \\<i>*y\" \"B = bx + \\<i>*by\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = cor x + \\<i> * cor y &&& B = cor bx + \\<i> * cor by", "using assms complex_eq"], ["proof (prove)\nusing this:\n  circline_equation A B (cnj B) D z 1\n  Re z = x\n  Im z = y\n  Re B = bx\n  Im B = by\n  ?a = cor (Re ?a) + \\<i> * cor (Im ?a)\n\ngoal (1 subgoal):\n 1. z = cor x + \\<i> * cor y &&& B = cor bx + \\<i> * cor by", "by auto"], ["proof (state)\nthis:\n  z = cor x + \\<i> * cor y\n  B = cor bx + \\<i> * cor by\n\ngoal (1 subgoal):\n 1. \\<lbrakk>circline_equation A B (cnj B) D z 1; Re z = x; Im z = y;\n     Re B = bx; Im B = by\\<rbrakk>\n    \\<Longrightarrow> A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) +\n                      cor (2 * bx * x) +\n                      cor (2 * by * y) +\n                      D =\n                      0", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = cor x + \\<i> * cor y\n  B = cor bx + \\<i> * cor by\n\ngoal (1 subgoal):\n 1. A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) + cor (2 * bx * x) +\n    cor (2 * by * y) +\n    D =\n    0", "using assms"], ["proof (prove)\nusing this:\n  z = cor x + \\<i> * cor y\n  B = cor bx + \\<i> * cor by\n  circline_equation A B (cnj B) D z 1\n  Re z = x\n  Im z = y\n  Re B = bx\n  Im B = by\n\ngoal (1 subgoal):\n 1. A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) + cor (2 * bx * x) +\n    cor (2 * by * y) +\n    D =\n    0", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  A * cor (x\\<^sup>2) + A * cor (y\\<^sup>2) + cor (2 * bx * x) +\n  cor (2 * by * y) +\n  D =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_intersection_symetry:\n  shows \"circline_intersection H1 H2 = circline_intersection H2 H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_intersection H1 H2 = circline_intersection H2 H1", "unfolding circline_intersection_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. on_circline H1 z \\<and> on_circline H2 z} =\n    {z. on_circline H2 z \\<and> on_circline H1 z}", "by auto"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>M?bius action on circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "definition moebius_circline_cmat_cmat :: \"complex_mat \\<Rightarrow> complex_mat \\<Rightarrow> complex_mat\" where\n  [simp]: \"moebius_circline_cmat_cmat M H = congruence (mat_inv M) H\""], ["", "lift_definition moebius_circline_mmat_clmat :: \"moebius_mat \\<Rightarrow> circline_mat \\<Rightarrow> circline_mat\" is moebius_circline_cmat_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>mat_det prod1 \\<noteq> 0;\n        hermitean prod2 \\<and> prod2 \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> hermitean\n                          (moebius_circline_cmat_cmat prod1 prod2) \\<and>\n                         moebius_circline_cmat_cmat prod1 prod2 \\<noteq>\n                         mat_zero", "using mat_det_inv congruence_nonzero hermitean_congruence"], ["proof (prove)\nusing this:\n  mat_det ?A \\<noteq> 0 \\<Longrightarrow>\n  mat_det (mat_inv ?A) = 1 / mat_det ?A\n  \\<lbrakk>?H \\<noteq> mat_zero; mat_det ?M \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> congruence ?M ?H \\<noteq> mat_zero\n  hermitean ?H \\<Longrightarrow> hermitean (congruence ?M ?H)\n\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>mat_det prod1 \\<noteq> 0;\n        hermitean prod2 \\<and> prod2 \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> hermitean\n                          (moebius_circline_cmat_cmat prod1 prod2) \\<and>\n                         moebius_circline_cmat_cmat prod1 prod2 \\<noteq>\n                         mat_zero", "by simp"], ["", "lift_definition moebius_circline :: \"moebius \\<Rightarrow> circline \\<Rightarrow> circline\" is moebius_circline_mmat_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>moebius_mat_eq moebius_mat1 moebius_mat2;\n        circline_eq_clmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_clmat\n                          (moebius_circline_mmat_clmat moebius_mat1\n                            circline_mat1)\n                          (moebius_circline_mmat_clmat moebius_mat2\n                            circline_mat2)", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (moebius_circline_cmat_cmat moebius_mat1\n                            circline_mat1)\n                          (moebius_circline_cmat_cmat moebius_mat2\n                            circline_mat2)", "fix M M' H H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (moebius_circline_cmat_cmat moebius_mat1\n                            circline_mat1)\n                          (moebius_circline_cmat_cmat moebius_mat2\n                            circline_mat2)", "assume \"moebius_cmat_eq M M'\" \"circline_eq_cmat H H'\""], ["proof (state)\nthis:\n  moebius_cmat_eq M M'\n  circline_eq_cmat H H'\n\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (moebius_circline_cmat_cmat moebius_mat1\n                            circline_mat1)\n                          (moebius_circline_cmat_cmat moebius_mat2\n                            circline_mat2)", "thus \"circline_eq_cmat (moebius_circline_cmat_cmat M H) (moebius_circline_cmat_cmat M' H')\""], ["proof (prove)\nusing this:\n  moebius_cmat_eq M M'\n  circline_eq_cmat H H'\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (moebius_circline_cmat_cmat M H)\n     (moebius_circline_cmat_cmat M' H')", "by (auto simp add: mat_inv_mult_sm) (rule_tac x=\"ka / Re (k * cnj k)\" in exI, auto simp add: complex_mult_cnj_cmod power2_eq_square)"], ["proof (state)\nthis:\n  circline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M' H')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_preserve_circline_type [simp]:                                \n  shows \"circline_type (moebius_circline M H) = circline_type H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type (moebius_circline M H) = circline_type H", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> circline_type_cmat\n                          (moebius_circline_cmat_cmat M H) =\n                         circline_type_cmat H", "fix M H :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> circline_type_cmat\n                          (moebius_circline_cmat_cmat M H) =\n                         circline_type_cmat H", "assume \"mat_det M \\<noteq> 0\" \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>M H.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero\\<rbrakk>\n       \\<Longrightarrow> circline_type_cmat\n                          (moebius_circline_cmat_cmat M H) =\n                         circline_type_cmat H", "thus \"circline_type_cmat (moebius_circline_cmat_cmat M H) = circline_type_cmat H\""], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. circline_type_cmat (moebius_circline_cmat_cmat M H) =\n    circline_type_cmat H", "using Re_det_sgn_congruence[of \"mat_inv M\" \"H\"] mat_det_inv[of \"M\"]"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  hermitean H \\<and> H \\<noteq> mat_zero\n  mat_det (mat_inv M) \\<noteq> 0 \\<Longrightarrow>\n  sgn (Re (mat_det (congruence (mat_inv M) H))) = sgn (Re (mat_det H))\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. circline_type_cmat (moebius_circline_cmat_cmat M H) =\n    circline_type_cmat H", "by (simp del: congruence_def)"], ["proof (state)\nthis:\n  circline_type_cmat (moebius_circline_cmat_cmat M H) = circline_type_cmat H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The central lemma in this section connects the action of M?bius transformations on points and\non circlines.\\<close>"], ["", "lemma moebius_circline:\n  shows \"{z. on_circline (moebius_circline M H) z} =\n         moebius_pt M ` {z. on_circline H z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. on_circline (moebius_circline M H) z} =\n    moebius_pt M ` {z. on_circline H z}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}\n 2. \\<And>x xa.\n       on_circline H xa \\<Longrightarrow>\n       on_circline (moebius_circline M H) (moebius_pt M xa)", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}\n 2. \\<And>x xa.\n       on_circline H xa \\<Longrightarrow>\n       on_circline (moebius_circline M H) (moebius_pt M xa)", "assume \"on_circline H z\""], ["proof (state)\nthis:\n  on_circline H z\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}\n 2. \\<And>x xa.\n       on_circline H xa \\<Longrightarrow>\n       on_circline (moebius_circline M H) (moebius_pt M xa)", "thus \"on_circline (moebius_circline M H) (moebius_pt M z)\""], ["proof (prove)\nusing this:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. on_circline (moebius_circline M H) (moebius_pt M z)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "fix z :: complex_vec and M H :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\" \"z \\<noteq> vec_zero\" \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "let ?z = \"M *\\<^sub>m\\<^sub>v z\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "let ?H = \"mat_adj (mat_inv M) *\\<^sub>m\\<^sub>m H *\\<^sub>m\\<^sub>m (mat_inv M)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "assume *: \"on_circline_cmat_cvec H z\""], ["proof (state)\nthis:\n  on_circline_cmat_cvec H z\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "hence \"quad_form z H = 0\""], ["proof (prove)\nusing this:\n  on_circline_cmat_cvec H z\n\ngoal (1 subgoal):\n 1. quad_form z H = 0", "by simp"], ["proof (state)\nthis:\n  quad_form z H = 0\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "hence \"quad_form ?z ?H = 0\""], ["proof (prove)\nusing this:\n  quad_form z H = 0\n\ngoal (1 subgoal):\n 1. quad_form (M *\\<^sub>m\\<^sub>v z)\n     (mat_adj (mat_inv M) *\\<^sub>m\\<^sub>m H *\\<^sub>m\\<^sub>m mat_inv M) =\n    0", "using quad_form_congruence[of M z H] hh"], ["proof (prove)\nusing this:\n  quad_form z H = 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow>\n  quad_form (M *\\<^sub>m\\<^sub>v z) (congruence (mat_inv M) H) =\n  quad_form z H\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. quad_form (M *\\<^sub>m\\<^sub>v z)\n     (mat_adj (mat_inv M) *\\<^sub>m\\<^sub>m H *\\<^sub>m\\<^sub>m mat_inv M) =\n    0", "by simp"], ["proof (state)\nthis:\n  quad_form (M *\\<^sub>m\\<^sub>v z)\n   (mat_adj (mat_inv M) *\\<^sub>m\\<^sub>m H *\\<^sub>m\\<^sub>m mat_inv M) =\n  0\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; on_circline_cmat_cvec H z;\n        on_circline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "thus \"on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) (moebius_pt_cmat_cvec M z)\""], ["proof (prove)\nusing this:\n  quad_form (M *\\<^sub>m\\<^sub>v z)\n   (mat_adj (mat_inv M) *\\<^sub>m\\<^sub>m H *\\<^sub>m\\<^sub>m mat_inv M) =\n  0\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec (moebius_circline_cmat_cmat M H)\n     (moebius_pt_cmat_cvec M z)", "by simp"], ["proof (state)\nthis:\n  on_circline_cmat_cvec (moebius_circline_cmat_cmat M H)\n   (moebius_pt_cmat_cvec M z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  on_circline (moebius_circline M H) (moebius_pt M z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}", "assume \"on_circline (moebius_circline M H) z\""], ["proof (state)\nthis:\n  on_circline (moebius_circline M H) z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}", "hence \"\\<exists> z'. z = moebius_pt M z' \\<and> on_circline H z'\""], ["proof (prove)\nusing this:\n  on_circline (moebius_circline M H) z\n\ngoal (1 subgoal):\n 1. \\<exists>z'. z = moebius_pt M z' \\<and> on_circline H z'", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "fix z :: complex_vec and M H :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\" \"z \\<noteq> vec_zero\" \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "let ?iM = \"mat_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "let ?z' = \"?iM *\\<^sub>m\\<^sub>v z\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "assume *: \"on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z\""], ["proof (state)\nthis:\n  on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "have \"?z' \\<noteq> vec_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero", "using hh"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero", "using mat_det_inv mult_mv_nonzero"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  mat_det ?A \\<noteq> 0 \\<Longrightarrow>\n  mat_det (mat_inv ?A) = 1 / mat_det ?A\n  \\<lbrakk>?v \\<noteq> vec_zero; mat_det ?A \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?A *\\<^sub>m\\<^sub>v ?v \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero", "by auto"], ["proof (state)\nthis:\n  mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "moreover"], ["proof (state)\nthis:\n  mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "have \"z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M ?z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v\n    moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v z)", "using hh eye_mv_l mat_inv_r"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  eye *\\<^sub>m\\<^sub>v ?v = ?v\n  mat_det ?A \\<noteq> 0 \\<Longrightarrow>\n  ?A *\\<^sub>m\\<^sub>m mat_inv ?A = eye\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v\n    moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v z)", "by simp"], ["proof (state)\nthis:\n  z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v z)\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "moreover"], ["proof (state)\nthis:\n  z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v z)\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "have \"M *\\<^sub>m\\<^sub>v (?iM *\\<^sub>m\\<^sub>v z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z", "using hh eye_mv_l mat_inv_r"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  eye *\\<^sub>m\\<^sub>v ?v = ?v\n  mat_det ?A \\<noteq> 0 \\<Longrightarrow>\n  ?A *\\<^sub>m\\<^sub>m mat_inv ?A = eye\n\ngoal (1 subgoal):\n 1. M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z", "by auto"], ["proof (state)\nthis:\n  M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "hence \"on_circline_cmat_cvec H ?z'\""], ["proof (prove)\nusing this:\n  M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)", "using hh *"], ["proof (prove)\nusing this:\n  M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)", "using quad_form_congruence[of M \"?iM *\\<^sub>m\\<^sub>v z\" H, symmetric]"], ["proof (prove)\nusing this:\n  M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n  mat_det M \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H =\n  quad_form (M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z))\n   (congruence (mat_inv M) H)\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)", "unfolding moebius_circline_cmat_cmat_def"], ["proof (prove)\nusing this:\n  M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  on_circline_cmat_cvec (congruence (mat_inv M) H) z\n  mat_det M \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H =\n  quad_form (M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z))\n   (congruence (mat_inv M) H)\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)", "unfolding on_circline_cmat_cvec_def"], ["proof (prove)\nusing this:\n  M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z) = z\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  mat_det M \\<noteq> 0\n  quad_form z (congruence (mat_inv M) H) = 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H =\n  quad_form (M *\\<^sub>m\\<^sub>v (mat_inv M *\\<^sub>m\\<^sub>v z))\n   (congruence (mat_inv M) H)\n\ngoal (1 subgoal):\n 1. quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H = 0", "by simp"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        on_circline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n                            z \\<approx>\\<^sub>v\n                            moebius_pt_cmat_cvec M z' \\<and>\n                            on_circline_cmat_cvec H z'", "ultimately"], ["proof (chain)\npicking this:\n  mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v z)\n  on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)", "show \"\\<exists>z'\\<in>{v. v \\<noteq> vec_zero}. z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M z' \\<and> on_circline_cmat_cvec H z'\""], ["proof (prove)\nusing this:\n  mat_inv M *\\<^sub>m\\<^sub>v z \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M (mat_inv M *\\<^sub>m\\<^sub>v z)\n  on_circline_cmat_cvec H (mat_inv M *\\<^sub>m\\<^sub>v z)\n\ngoal (1 subgoal):\n 1. \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n       z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M z' \\<and>\n       on_circline_cmat_cvec H z'", "by blast"], ["proof (state)\nthis:\n  \\<exists>z'\\<in>{v. v \\<noteq> vec_zero}.\n     z \\<approx>\\<^sub>v moebius_pt_cmat_cvec M z' \\<and>\n     on_circline_cmat_cvec H z'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z'. z = moebius_pt M z' \\<and> on_circline H z'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline (moebius_circline M H) x \\<Longrightarrow>\n       x \\<in> moebius_pt M ` {z. on_circline H z}", "thus \"z \\<in> moebius_pt M ` {z. on_circline H z}\""], ["proof (prove)\nusing this:\n  \\<exists>z'. z = moebius_pt M z' \\<and> on_circline H z'\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` {z. on_circline H z}", "by auto"], ["proof (state)\nthis:\n  z \\<in> moebius_pt M ` {z. on_circline H z}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_circline_moebius_circline_I [simp]:\n  assumes \"on_circline H z\"\n  shows \"on_circline (moebius_circline M H) (moebius_pt M z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline (moebius_circline M H) (moebius_pt M z)", "using assms moebius_circline"], ["proof (prove)\nusing this:\n  on_circline H z\n  {z. on_circline (moebius_circline ?M ?H) z} =\n  moebius_pt ?M ` {z. on_circline ?H z}\n\ngoal (1 subgoal):\n 1. on_circline (moebius_circline M H) (moebius_pt M z)", "by fastforce"], ["", "lemma circline_set_moebius_circline [simp]:\n  shows \"circline_set (moebius_circline M H) = moebius_pt M ` circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (moebius_circline M H) = moebius_pt M ` circline_set H", "using moebius_circline[of M H]"], ["proof (prove)\nusing this:\n  {z. on_circline (moebius_circline M H) z} =\n  moebius_pt M ` {z. on_circline H z}\n\ngoal (1 subgoal):\n 1. circline_set (moebius_circline M H) = moebius_pt M ` circline_set H", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  {z. on_circline (moebius_circline M H) z} =\n  moebius_pt M ` {z. on_circline H z}\n\ngoal (1 subgoal):\n 1. Collect (on_circline (moebius_circline M H)) =\n    moebius_pt M ` Collect (on_circline H)", "by auto"], ["", "lemma circline_set_moebius_circline_I [simp]:\n  assumes \"z \\<in> circline_set H\"\n  shows \"moebius_pt M z \\<in> circline_set (moebius_circline M H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M z \\<in> circline_set (moebius_circline M H)", "using assms"], ["proof (prove)\nusing this:\n  z \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. moebius_pt M z \\<in> circline_set (moebius_circline M H)", "by simp"], ["", "lemma circline_set_moebius_circline_E:\n  assumes \"moebius_pt M z \\<in> circline_set (moebius_circline M H)\"\n  shows \"z \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set H", "using assms"], ["proof (prove)\nusing this:\n  moebius_pt M z \\<in> circline_set (moebius_circline M H)\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set H", "using moebius_pt_eq_I[of M z]"], ["proof (prove)\nusing this:\n  moebius_pt M z \\<in> circline_set (moebius_circline M H)\n  moebius_pt M z = moebius_pt M ?z2.0 \\<Longrightarrow> z = ?z2.0\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set H", "by auto"], ["", "lemma circline_set_moebius_circline_iff [simp]:\n  shows \"moebius_pt M z \\<in> circline_set (moebius_circline M H) \\<longleftrightarrow> \n         z \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (moebius_pt M z \\<in> circline_set (moebius_circline M H)) =\n    (z \\<in> circline_set H)", "using moebius_pt_eq_I[of M z]"], ["proof (prove)\nusing this:\n  moebius_pt M z = moebius_pt M ?z2.0 \\<Longrightarrow> z = ?z2.0\n\ngoal (1 subgoal):\n 1. (moebius_pt M z \\<in> circline_set (moebius_circline M H)) =\n    (z \\<in> circline_set H)", "by auto"], ["", "lemma inj_moebius_circline:\n  shows \"inj (moebius_circline M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (moebius_circline M)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV.\n          moebius_circline M x = moebius_circline M y \\<longrightarrow>\n          x = y", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_circline M x = moebius_circline M y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix H H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_circline M x = moebius_circline M y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"moebius_circline M H = moebius_circline M H'\""], ["proof (state)\nthis:\n  moebius_circline M H = moebius_circline M H'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_circline M x = moebius_circline M y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"H = H'\""], ["proof (prove)\nusing this:\n  moebius_circline M H = moebius_circline M H'\n\ngoal (1 subgoal):\n 1. H = H'", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        circline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        circline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "fix M H H' :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        circline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        circline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "assume hh: \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        circline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        circline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "let ?iM = \"mat_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        circline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        circline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "assume \"circline_eq_cmat (moebius_circline_cmat_cmat M H) (moebius_circline_cmat_cmat M H')\""], ["proof (state)\nthis:\n  circline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M H')\n\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        circline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        circline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M H')", "obtain k where \"congruence ?iM H' = congruence ?iM (cor k *\\<^sub>s\\<^sub>m H)\" \"k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  circline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M H')\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>congruence (mat_inv M) H' =\n                 congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H);\n         k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  congruence (mat_inv M) H' =\n  congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        circline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        circline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "thus \"circline_eq_cmat H H'\""], ["proof (prove)\nusing this:\n  congruence (mat_inv M) H' =\n  congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H H'", "using hh inj_congruence[of ?iM H' \"cor k *\\<^sub>s\\<^sub>m H\"] mat_det_inv[of M]"], ["proof (prove)\nusing this:\n  congruence (mat_inv M) H' =\n  congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\n  k \\<noteq> 0\n  mat_det M \\<noteq> 0\n  \\<lbrakk>mat_det (mat_inv M) \\<noteq> 0;\n   congruence (mat_inv M) H' =\n   congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\\<rbrakk>\n  \\<Longrightarrow> H' = cor k *\\<^sub>s\\<^sub>m H\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H H'", "by auto"], ["proof (state)\nthis:\n  circline_eq_cmat H H'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H = H'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_circline_eq_I:\n  assumes \"moebius_circline M H1 = moebius_circline M H2\"\n  shows \"H1 = H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H1 = H2", "using assms inj_moebius_circline[of M]"], ["proof (prove)\nusing this:\n  moebius_circline M H1 = moebius_circline M H2\n  inj (moebius_circline M)\n\ngoal (1 subgoal):\n 1. H1 = H2", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  moebius_circline M H1 = moebius_circline M H2\n  \\<forall>x\\<in>UNIV.\n     \\<forall>y\\<in>UNIV.\n        moebius_circline M x = moebius_circline M y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. H1 = H2", "by blast"], ["", "lemma moebius_circline_neq_I [simp]:\n  assumes \"H1 \\<noteq> H2\"\n  shows \"moebius_circline M H1 \\<noteq> moebius_circline M H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline M H1 \\<noteq> moebius_circline M H2", "using assms inj_moebius_circline[of M]"], ["proof (prove)\nusing this:\n  H1 \\<noteq> H2\n  inj (moebius_circline M)\n\ngoal (1 subgoal):\n 1. moebius_circline M H1 \\<noteq> moebius_circline M H2", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  H1 \\<noteq> H2\n  \\<forall>x\\<in>UNIV.\n     \\<forall>y\\<in>UNIV.\n        moebius_circline M x = moebius_circline M y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. moebius_circline M H1 \\<noteq> moebius_circline M H2", "by blast"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Group properties of M?bius action on ciclines\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>M?bius actions on circlines have similar properties as M?bius actions on points.\\<close>"], ["", "lemma moebius_circline_id [simp]:\n  shows \"moebius_circline id_moebius H = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline id_moebius H = H", "by (transfer, transfer) (simp add: mat_adj_def mat_cnj_def, rule_tac x=1 in exI, auto)"], ["", "lemma moebius_circline_comp [simp]:\n  shows \"moebius_circline (moebius_comp M1 M2) H = moebius_circline M1 (moebius_circline M2 H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_comp M1 M2) H =\n    moebius_circline M1 (moebius_circline M2 H)", "by (transfer, transfer) (simp add: mat_inv_mult_mm, rule_tac x=1 in exI, simp add: mult_mm_assoc)"], ["", "lemma moebius_circline_comp_inv_left [simp]:\n  shows \"moebius_circline (moebius_inv M) (moebius_circline M H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_inv M) (moebius_circline M H) = H", "by (subst moebius_circline_comp[symmetric], simp)"], ["", "lemma moebius_circline_comp_inv_right [simp]:\n  shows \"moebius_circline M (moebius_circline (moebius_inv M) H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline M (moebius_circline (moebius_inv M) H) = H", "by (subst moebius_circline_comp[symmetric], simp)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Action of Euclidean similarities on circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma moebius_similarity_lines_to_lines [simp]:\n  assumes \"a \\<noteq> 0\"\n  shows \"\\<infinity>\\<^sub>h \\<in> circline_set (moebius_circline (moebius_similarity a b) H) \\<longleftrightarrow> \n         \\<infinity>\\<^sub>h \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h\n     \\<in> circline_set (moebius_circline (moebius_similarity a b) H)) =\n    (\\<infinity>\\<^sub>h \\<in> circline_set H)", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h\n     \\<in> circline_set (moebius_circline (moebius_similarity a b) H)) =\n    (\\<infinity>\\<^sub>h \\<in> circline_set H)", "by (metis circline_set_moebius_circline_iff moebius_similarity_inf)"], ["", "lemma moebius_similarity_lines_to_lines':\n  assumes \"a \\<noteq> 0\"\n  shows \"on_circline (moebius_circline (moebius_similarity a b) H) \\<infinity>\\<^sub>h \\<longleftrightarrow>\n         \\<infinity>\\<^sub>h \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline (moebius_circline (moebius_similarity a b) H)\n     \\<infinity>\\<^sub>h =\n    (\\<infinity>\\<^sub>h \\<in> circline_set H)", "using moebius_similarity_lines_to_lines assms"], ["proof (prove)\nusing this:\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  (\\<infinity>\\<^sub>h\n   \\<in> circline_set (moebius_circline (moebius_similarity ?a ?b) ?H)) =\n  (\\<infinity>\\<^sub>h \\<in> circline_set ?H)\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. on_circline (moebius_circline (moebius_similarity a b) H)\n     \\<infinity>\\<^sub>h =\n    (\\<infinity>\\<^sub>h \\<in> circline_set H)", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  (\\<infinity>\\<^sub>h\n   \\<in> Collect\n          (on_circline (moebius_circline (moebius_similarity ?a ?b) ?H))) =\n  (\\<infinity>\\<^sub>h \\<in> Collect (on_circline ?H))\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. on_circline (moebius_circline (moebius_similarity a b) H)\n     \\<infinity>\\<^sub>h =\n    (\\<infinity>\\<^sub>h \\<in> Collect (on_circline H))", "by simp"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Conjugation, recpiprocation and inversion of circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Conjugation of circlines\\<close>"], ["", "definition conjugate_circline_cmat :: \"complex_mat \\<Rightarrow> complex_mat\" where\n [simp]: \"conjugate_circline_cmat = mat_cnj\""], ["", "lift_definition conjugate_circline_clmat :: \"circline_mat \\<Rightarrow> circline_mat\" is conjugate_circline_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       hermitean prod \\<and> prod \\<noteq> mat_zero \\<Longrightarrow>\n       hermitean (conjugate_circline_cmat prod) \\<and>\n       conjugate_circline_cmat prod \\<noteq> mat_zero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition conjugate_circline :: \"circline \\<Rightarrow> circline\" is conjugate_circline_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       circline_eq_clmat (conjugate_circline_clmat circline_mat1)\n        (conjugate_circline_clmat circline_mat2)", "by transfer (metis circline_eq_cmat_def conjugate_circline_cmat_def hermitean_transpose mat_t_mult_sm)"], ["", "lemma conjugate_circline_set':\n  shows \"conjugate ` circline_set H \\<subseteq> circline_set (conjugate_circline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` circline_set H\n    \\<subseteq> circline_set (conjugate_circline H)", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "assume \"z \\<in> circline_set H\""], ["proof (state)\nthis:\n  z \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "thus \"conjugate z \\<in> circline_set (conjugate_circline H)\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set (conjugate_circline H)", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect (on_circline H)\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> Collect (on_circline (conjugate_circline H))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline H z \\<Longrightarrow>\n    on_circline (conjugate_circline H) (conjugate z)", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H z.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        on_circline_cmat_cvec H z\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec (conjugate_circline_cmat H)\n                          (conjugate_cvec z)", "unfolding on_circline_cmat_cvec_def conjugate_cvec_def conjugate_circline_cmat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H z.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        quad_form z H = 0\\<rbrakk>\n       \\<Longrightarrow> quad_form (vec_cnj z) (mat_cnj H) = 0", "apply (subst quad_form_vec_cnj_mat_cnj, simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  conjugate z \\<in> circline_set (conjugate_circline H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugate_conjugate_circline [simp]:\n  shows \"conjugate_circline (conjugate_circline H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate_circline (conjugate_circline H) = H", "by (transfer, transfer, force)"], ["", "lemma circline_set_conjugate_circline [simp]:\n  shows \"circline_set (conjugate_circline H) = conjugate ` circline_set H\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (conjugate_circline H) = conjugate ` circline_set H", "proof (safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set (conjugate_circline H) \\<Longrightarrow>\n       x \\<in> conjugate ` circline_set H\n 2. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set (conjugate_circline H) \\<Longrightarrow>\n       x \\<in> conjugate ` circline_set H\n 2. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "assume \"z \\<in> ?lhs\""], ["proof (state)\nthis:\n  z \\<in> circline_set (conjugate_circline H)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> circline_set (conjugate_circline H) \\<Longrightarrow>\n       x \\<in> conjugate ` circline_set H\n 2. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "show \"z \\<in> ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> conjugate ` circline_set H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z = conjugate ?x\n 2. ?x \\<in> circline_set H", "show \"z = conjugate (conjugate z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = conjugate (conjugate z)", "by simp"], ["proof (state)\nthis:\n  z = conjugate (conjugate z)\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set H", "show \"conjugate z \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set H", "using \\<open>z \\<in> circline_set (conjugate_circline H)\\<close>"], ["proof (prove)\nusing this:\n  z \\<in> circline_set (conjugate_circline H)\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set H", "using conjugate_circline_set'[of \"conjugate_circline H\"]"], ["proof (prove)\nusing this:\n  z \\<in> circline_set (conjugate_circline H)\n  conjugate ` circline_set (conjugate_circline H)\n  \\<subseteq> circline_set (conjugate_circline (conjugate_circline H))\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set H", "by auto"], ["proof (state)\nthis:\n  conjugate z \\<in> circline_set H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> conjugate ` circline_set H\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "assume \"z \\<in> circline_set H\""], ["proof (state)\nthis:\n  z \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> circline_set H \\<Longrightarrow>\n       conjugate xa \\<in> circline_set (conjugate_circline H)", "thus \"conjugate z \\<in> circline_set (conjugate_circline H)\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set (conjugate_circline H)", "using conjugate_circline_set'[of H]"], ["proof (prove)\nusing this:\n  z \\<in> circline_set H\n  conjugate ` circline_set H \\<subseteq> circline_set (conjugate_circline H)\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> circline_set (conjugate_circline H)", "by auto"], ["proof (state)\nthis:\n  conjugate z \\<in> circline_set (conjugate_circline H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_circline_conjugate_circline [simp]: \n  shows \"on_circline (conjugate_circline H) z \\<longleftrightarrow> on_circline H (conjugate z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline (conjugate_circline H) z = on_circline H (conjugate z)", "using circline_set_conjugate_circline[of H]"], ["proof (prove)\nusing this:\n  circline_set (conjugate_circline H) = conjugate ` circline_set H\n\ngoal (1 subgoal):\n 1. on_circline (conjugate_circline H) z = on_circline H (conjugate z)", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  Collect (on_circline (conjugate_circline H)) =\n  conjugate ` Collect (on_circline H)\n\ngoal (1 subgoal):\n 1. on_circline (conjugate_circline H) z = on_circline H (conjugate z)", "by force"], ["", "text \\<open>Inversion of circlines\\<close>"], ["", "definition circline_inversion_cmat :: \"complex_mat \\<Rightarrow> complex_mat\" where\n  [simp]:  \"circline_inversion_cmat H = (let (A, B, C, D) = H in (D, B, C, A))\""], ["", "lift_definition circline_inversion_clmat :: \"circline_mat \\<Rightarrow> circline_mat\" is circline_inversion_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       hermitean prod \\<and> prod \\<noteq> mat_zero \\<Longrightarrow>\n       hermitean (circline_inversion_cmat prod) \\<and>\n       circline_inversion_cmat prod \\<noteq> mat_zero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition circline_inversion :: \"circline \\<Rightarrow> circline\" is circline_inversion_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       circline_eq_clmat (circline_inversion_clmat circline_mat1)\n        (circline_inversion_clmat circline_mat2)", "by transfer auto"], ["", "lemma on_circline_circline_inversion [simp]:\n  shows \"on_circline (circline_inversion H) z \\<longleftrightarrow> on_circline H (reciprocal (conjugate z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline (circline_inversion H) z =\n    on_circline H (reciprocal (conjugate z))", "by (transfer, transfer, auto simp add: vec_cnj_def field_simps)"], ["", "lemma circline_set_circline_inversion [simp]:\n  shows \"circline_set (circline_inversion H) = inversion ` circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (circline_inversion H) = inversion ` circline_set H", "unfolding circline_set_def inversion_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (on_circline (circline_inversion H)) =\n    (conjugate \\<circ> reciprocal) ` Collect (on_circline H)", "by (force simp add: comp_def image_iff)"], ["", "text \\<open>Reciprocal of circlines\\<close>"], ["", "definition circline_reciprocal :: \"circline \\<Rightarrow> circline\" where\n  \"circline_reciprocal = conjugate_circline \\<circ> circline_inversion\""], ["", "lemma circline_set_circline_reciprocal:\n  shows \"circline_set (circline_reciprocal H) = reciprocal ` circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (circline_reciprocal H) = reciprocal ` circline_set H", "unfolding circline_reciprocal_def comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (conjugate_circline (circline_inversion H)) =\n    reciprocal ` circline_set H", "by (auto simp add: inversion_def image_iff)"], ["", "text \\<open>Rotation of circlines\\<close>"], ["", "lemma rotation_pi_2_y_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (pi/2)) y_axis = x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_rotation (pi / 2)) y_axis = x_axis", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (mk_moebius (cis (pi / 2)) 0 0 1) y_axis = x_axis", "by (transfer, transfer, simp add: mat_adj_def mat_cnj_def)"], ["", "lemma rotation_minus_pi_2_y_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (-pi/2)) y_axis = x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_rotation (- pi / 2)) y_axis = x_axis", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (mk_moebius (cis (- pi / 2)) 0 0 1) y_axis = x_axis", "by (transfer, transfer, simp add: mat_adj_def mat_cnj_def, rule_tac x=\"-1\" in exI, simp)"], ["", "lemma rotation_minus_pi_2_x_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (-pi/2)) x_axis = y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_rotation (- pi / 2)) x_axis = y_axis", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (mk_moebius (cis (- pi / 2)) 0 0 1) x_axis = y_axis", "by (transfer, transfer, simp add: mat_adj_def mat_cnj_def)"], ["", "lemma rotation_pi_2_x_axis [simp]:\n  shows \"moebius_circline (moebius_rotation (pi/2)) x_axis = y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_rotation (pi / 2)) x_axis = y_axis", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (mk_moebius (cis (pi / 2)) 0 0 1) x_axis = y_axis", "by (transfer, transfer, simp add: mat_adj_def mat_cnj_def, rule_tac x=\"-1\" in exI, simp)"], ["", "lemma rotation_minus_pi_2_positive_y_axis [simp]:\n  shows \"(moebius_pt (moebius_rotation (-pi/2))) ` positive_y_axis = positive_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis =\n    positive_x_axis", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> positive_y_axis \\<Longrightarrow>\n       moebius_pt (moebius_rotation (- pi / 2)) xa \\<in> positive_x_axis\n 2. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> positive_y_axis \\<Longrightarrow>\n       moebius_pt (moebius_rotation (- pi / 2)) xa \\<in> positive_x_axis\n 2. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "assume y: \"y \\<in> positive_y_axis\""], ["proof (state)\nthis:\n  y \\<in> positive_y_axis\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> positive_y_axis \\<Longrightarrow>\n       moebius_pt (moebius_rotation (- pi / 2)) xa \\<in> positive_x_axis\n 2. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "have *: \"Re (a * \\<i> / b) < 0 \\<longleftrightarrow> Im (a / b) > 0\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Re (a * \\<i> / b) < 0) = (0 < Im (a / b))", "by (subst times_divide_eq_left [symmetric], subst mult.commute, subst Re_i_times) auto"], ["proof (state)\nthis:\n  (Re (?a * \\<i> / ?b) < 0) = (0 < Im (?a / ?b))\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> positive_y_axis \\<Longrightarrow>\n       moebius_pt (moebius_rotation (- pi / 2)) xa \\<in> positive_x_axis\n 2. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "from y *"], ["proof (chain)\npicking this:\n  y \\<in> positive_y_axis\n  (Re (?a * \\<i> / ?b) < 0) = (0 < Im (?a / ?b))", "show \"moebius_pt (moebius_rotation (-pi/2)) y \\<in> positive_x_axis\""], ["proof (prove)\nusing this:\n  y \\<in> positive_y_axis\n  (Re (?a * \\<i> / ?b) < 0) = (0 < Im (?a / ?b))\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- pi / 2)) y \\<in> positive_x_axis", "unfolding positive_y_axis_def positive_x_axis_def circline_set_def"], ["proof (prove)\nusing this:\n  y \\<in> {z \\<in> Collect (on_circline y_axis).\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex z)}\n  (Re (?a * \\<i> / ?b) < 0) = (0 < Im (?a / ?b))\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- pi / 2)) y\n    \\<in> {z \\<in> Collect (on_circline x_axis).\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\nusing this:\n  y \\<in> {z \\<in> Collect (on_circline y_axis).\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex z)}\n  (Re (?a * \\<i> / ?b) < 0) = (0 < Im (?a / ?b))\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius (cis (- pi / 2)) 0 0 1) y\n    \\<in> {z \\<in> Collect (on_circline x_axis).\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>on_circline y_axis y \\<and>\n             y \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex y);\n     \\<And>a b. (Re (a * \\<i> / b) < 0) = (0 < Im (a / b))\\<rbrakk>\n    \\<Longrightarrow> on_circline x_axis\n                       (moebius_pt (mk_moebius (- \\<i>) 0 0 1) y) \\<and>\n                      moebius_pt (mk_moebius (- \\<i>) 0 0 1) y \\<noteq>\n                      \\<infinity>\\<^sub>h \\<and>\n                      0 < Re (to_complex\n                               (moebius_pt (mk_moebius (- \\<i>) 0 0 1) y))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>on_circline_clmat_hcoords y_axis_clmat y \\<and>\n                \\<not> y \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                0 < Im (to_complex_homo_coords y);\n        \\<And>a b. (Re (a * \\<i> / b) < 0) = (0 < Im (a / b))\\<rbrakk>\n       \\<Longrightarrow> on_circline_clmat_hcoords x_axis_clmat\n                          (moebius_pt_mmat_hcoords\n                            (mk_moebius_mat (- \\<i>) 0 0 1) y) \\<and>\n                         \\<not> moebius_pt_mmat_hcoords\n                                 (mk_moebius_mat (- \\<i>) 0 0 1) y \\<approx>\n                                \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                         0 < Re (to_complex_homo_coords\n                                  (moebius_pt_mmat_hcoords\n                                    (mk_moebius_mat (- \\<i>) 0 0 1) y))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<noteq> vec_zero;\n        on_circline_cmat_cvec y_axis_cmat y \\<and>\n        \\<not> y \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n        0 < Im (to_complex_cvec y);\n        \\<And>a b. (Re (a * \\<i> / b) < 0) = (0 < Im (a / b))\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec x_axis_cmat\n                          (moebius_pt_cmat_cvec\n                            (mk_moebius_cmat (- \\<i>) 0 0 1) y) \\<and>\n                         \\<not> moebius_pt_cmat_cvec\n                                 (mk_moebius_cmat (- \\<i>) 0 0 1)\n                                 y \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v \\<and>\n                         0 < Re (to_complex_cvec\n                                  (moebius_pt_cmat_cvec\n                                    (mk_moebius_cmat (- \\<i>) 0 0 1) y))", "apply (auto simp add: vec_cnj_def field_simps add_eq_0_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  moebius_pt (moebius_rotation (- pi / 2)) y \\<in> positive_x_axis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "assume x: \"x \\<in> positive_x_axis\""], ["proof (state)\nthis:\n  x \\<in> positive_x_axis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "let ?y = \"moebius_pt (moebius_rotation (pi/2)) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "have *: \"Im (a * \\<i> / b) > 0 \\<longleftrightarrow> Re (a / b) > 0\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < Im (a * \\<i> / b)) = (0 < Re (a / b))", "by (subst times_divide_eq_left [symmetric], subst mult.commute, subst Im_i_times) auto"], ["proof (state)\nthis:\n  (0 < Im (?a * \\<i> / ?b)) = (0 < Re (?a / ?b))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "hence \"?y \\<in> positive_y_axis\""], ["proof (prove)\nusing this:\n  (0 < Im (?a * \\<i> / ?b)) = (0 < Re (?a / ?b))\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (pi / 2)) x \\<in> positive_y_axis", "using \\<open>x \\<in> positive_x_axis\\<close>"], ["proof (prove)\nusing this:\n  (0 < Im (?a * \\<i> / ?b)) = (0 < Re (?a / ?b))\n  x \\<in> positive_x_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (pi / 2)) x \\<in> positive_y_axis", "unfolding positive_x_axis_def positive_y_axis_def"], ["proof (prove)\nusing this:\n  (0 < Im (?a * \\<i> / ?b)) = (0 < Re (?a / ?b))\n  x \\<in> {z \\<in> circline_set x_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (pi / 2)) x\n    \\<in> {z \\<in> circline_set y_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex z)}", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\nusing this:\n  (0 < Im (?a * \\<i> / ?b)) = (0 < Re (?a / ?b))\n  x \\<in> {z \\<in> circline_set x_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius (cis (pi / 2)) 0 0 1) x\n    \\<in> {z \\<in> circline_set y_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex z)}", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  (0 < Im (?a * \\<i> / ?b)) = (0 < Re (?a / ?b))\n  x \\<in> {z \\<in> Collect (on_circline x_axis).\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}\n\ngoal (1 subgoal):\n 1. moebius_pt (mk_moebius (cis (pi / 2)) 0 0 1) x\n    \\<in> {z \\<in> Collect (on_circline y_axis).\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Im (to_complex z)}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a b. (0 < Im (a * \\<i> / b)) = (0 < Re (a / b));\n     on_circline x_axis x \\<and>\n     x \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex x)\\<rbrakk>\n    \\<Longrightarrow> on_circline y_axis\n                       (moebius_pt (mk_moebius \\<i> 0 0 1) x) \\<and>\n                      moebius_pt (mk_moebius \\<i> 0 0 1) x \\<noteq>\n                      \\<infinity>\\<^sub>h \\<and>\n                      0 < Im (to_complex\n                               (moebius_pt (mk_moebius \\<i> 0 0 1) x))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>a b. (0 < Im (a * \\<i> / b)) = (0 < Re (a / b));\n        on_circline_clmat_hcoords x_axis_clmat x \\<and>\n        \\<not> x \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n        0 < Re (to_complex_homo_coords x)\\<rbrakk>\n       \\<Longrightarrow> on_circline_clmat_hcoords y_axis_clmat\n                          (moebius_pt_mmat_hcoords\n                            (mk_moebius_mat \\<i> 0 0 1) x) \\<and>\n                         \\<not> moebius_pt_mmat_hcoords\n                                 (mk_moebius_mat \\<i> 0 0 1) x \\<approx>\n                                \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                         0 < Im (to_complex_homo_coords\n                                  (moebius_pt_mmat_hcoords\n                                    (mk_moebius_mat \\<i> 0 0 1) x))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> vec_zero;\n        \\<And>a b. (0 < Im (a * \\<i> / b)) = (0 < Re (a / b));\n        on_circline_cmat_cvec x_axis_cmat x \\<and>\n        \\<not> x \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n        0 < Re (to_complex_cvec x)\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec y_axis_cmat\n                          (moebius_pt_cmat_cvec (mk_moebius_cmat \\<i> 0 0 1)\n                            x) \\<and>\n                         \\<not> moebius_pt_cmat_cvec\n                                 (mk_moebius_cmat \\<i> 0 0 1)\n                                 x \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v \\<and>\n                         0 < Im (to_complex_cvec\n                                  (moebius_pt_cmat_cvec\n                                    (mk_moebius_cmat \\<i> 0 0 1) x))", "apply (auto simp add: vec_cnj_def field_simps add_eq_0_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  moebius_pt (moebius_rotation (pi / 2)) x \\<in> positive_y_axis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> positive_x_axis \\<Longrightarrow>\n       x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "thus \"x \\<in> moebius_pt (moebius_rotation (-pi/2)) ` positive_y_axis\""], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (pi / 2)) x \\<in> positive_y_axis\n\ngoal (1 subgoal):\n 1. x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis", "by (auto simp add: image_iff) (rule_tac x=\"?y\" in bexI, simp_all)"], ["proof (state)\nthis:\n  x \\<in> moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Circline uniqueness\\<close>"], ["", "(* ----------------------------------------------------------------- *)\n\n(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Zero type circline uniqueness\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma unique_circline_type_zero_0':\n  shows \"(circline_type circline_point_0 = 0 \\<and> 0\\<^sub>h \\<in> circline_set circline_point_0) \\<and>\n         (\\<forall> H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H \\<longrightarrow> H = circline_point_0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (circline_type circline_point_0 = 0 \\<and>\n     0\\<^sub>h \\<in> circline_set circline_point_0) \\<and>\n    (\\<forall>H.\n        circline_type H = 0 \\<and>\n        0\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n        H = circline_point_0)", "unfolding circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (circline_type circline_point_0 = 0 \\<and>\n     0\\<^sub>h \\<in> Collect (on_circline circline_point_0)) \\<and>\n    (\\<forall>H.\n        circline_type H = 0 \\<and>\n        0\\<^sub>h \\<in> Collect (on_circline H) \\<longrightarrow>\n        H = circline_point_0)", "proof (safe)"], ["proof (state)\ngoal (3 subgoals):\n 1. circline_type circline_point_0 = 0\n 2. on_circline circline_point_0 0\\<^sub>h\n 3. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "show \"circline_type circline_point_0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type circline_point_0 = 0", "by (transfer, transfer, simp)"], ["proof (state)\nthis:\n  circline_type circline_point_0 = 0\n\ngoal (2 subgoals):\n 1. on_circline circline_point_0 0\\<^sub>h\n 2. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. on_circline circline_point_0 0\\<^sub>h\n 2. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "show \"on_circline circline_point_0 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline circline_point_0 0\\<^sub>h", "using circline_set_def zero_in_circline_point_0"], ["proof (prove)\nusing this:\n  circline_set ?H = {z. on_circline ?H z}\n  0\\<^sub>h \\<in> circline_set circline_point_0\n\ngoal (1 subgoal):\n 1. on_circline circline_point_0 0\\<^sub>h", "by auto"], ["proof (state)\nthis:\n  on_circline circline_point_0 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "assume \"circline_type H = 0\" \"on_circline H 0\\<^sub>h\""], ["proof (state)\nthis:\n  circline_type H = 0\n  on_circline H 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h\\<rbrakk>\n       \\<Longrightarrow> H = circline_point_0", "thus \"H = circline_point_0\""], ["proof (prove)\nusing this:\n  circline_type H = 0\n  on_circline H 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. H = circline_point_0", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; on_circline_cmat_cvec H 0\\<^sub>v;\n        circline_type_clmat Ha = 0;\n        on_circline_clmat_hcoords Ha 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H circline_point_0_cmat", "fix H :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; on_circline_cmat_cvec H 0\\<^sub>v;\n        circline_type_clmat Ha = 0;\n        on_circline_clmat_hcoords Ha 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H circline_point_0_cmat", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; on_circline_cmat_cvec H 0\\<^sub>v;\n        circline_type_clmat Ha = 0;\n        on_circline_clmat_hcoords Ha 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H circline_point_0_cmat", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"H\") auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; on_circline_cmat_cvec H 0\\<^sub>v;\n        circline_type_clmat Ha = 0;\n        on_circline_clmat_hcoords Ha 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H circline_point_0_cmat", "hence *: \"C = cnj B\" \"is_real A\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. C = cnj B &&& is_real A", "using hh hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. C = cnj B &&& is_real A", "by auto"], ["proof (state)\nthis:\n  C = cnj B\n  is_real A\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; on_circline_cmat_cvec H 0\\<^sub>v;\n        circline_type_clmat Ha = 0;\n        on_circline_clmat_hcoords Ha 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H circline_point_0_cmat", "assume \"circline_type_cmat H = 0\" \"on_circline_cmat_cvec H 0\\<^sub>v\""], ["proof (state)\nthis:\n  circline_type_cmat H = 0\n  on_circline_cmat_cvec H 0\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; on_circline_cmat_cvec H 0\\<^sub>v;\n        circline_type_clmat Ha = 0;\n        on_circline_clmat_hcoords Ha 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H circline_point_0_cmat", "thus \"circline_eq_cmat H circline_point_0_cmat\""], ["proof (prove)\nusing this:\n  circline_type_cmat H = 0\n  on_circline_cmat_cvec H 0\\<^sub>v\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H circline_point_0_cmat", "using HH hh *"], ["proof (prove)\nusing this:\n  circline_type_cmat H = 0\n  on_circline_cmat_cvec H 0\\<^sub>v\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  C = cnj B\n  is_real A\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H circline_point_0_cmat", "by (simp add: Let_def vec_cnj_def sgn_minus sgn_mult sgn_zero_iff)\n         (rule_tac x=\"1/Re A\" in exI, cases A, cases B, simp add: Complex_eq sgn_zero_iff)"], ["proof (state)\nthis:\n  circline_eq_cmat H circline_point_0_cmat\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H = circline_point_0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_circline_type_zero_0:\n  shows \"\\<exists>! H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H", "using unique_circline_type_zero_0'"], ["proof (prove)\nusing this:\n  (circline_type circline_point_0 = 0 \\<and>\n   0\\<^sub>h \\<in> circline_set circline_point_0) \\<and>\n  (\\<forall>H.\n      circline_type H = 0 \\<and>\n      0\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n      H = circline_point_0)\n\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H", "by blast"], ["", "lemma unique_circline_type_zero:\n  shows \"\\<exists>! H. circline_type H = 0 \\<and> z \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "obtain M where ++: \"moebius_pt M z = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M z = 0\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_1[of z]"], ["proof (prove)\nusing this:\n  \\<exists>M. moebius_pt M z = ?w1.0\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M z = 0\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "have +++: \"z = moebius_pt (moebius_inv M) 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = moebius_pt (moebius_inv M) 0\\<^sub>h", "by (subst ++[symmetric]) simp"], ["proof (state)\nthis:\n  z = moebius_pt (moebius_inv M) 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "then"], ["proof (chain)\npicking this:\n  z = moebius_pt (moebius_inv M) 0\\<^sub>h", "obtain H0 where *: \"circline_type H0 = 0 \\<and> 0\\<^sub>h \\<in> circline_set H0\" and\n    **: \"\\<forall> H'. circline_type H' = 0 \\<and> 0\\<^sub>h \\<in> circline_set H' \\<longrightarrow> H' = H0\""], ["proof (prove)\nusing this:\n  z = moebius_pt (moebius_inv M) 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>H0.\n        \\<lbrakk>circline_type H0 = 0 \\<and>\n                 0\\<^sub>h \\<in> circline_set H0;\n         \\<forall>H'.\n            circline_type H' = 0 \\<and>\n            0\\<^sub>h \\<in> circline_set H' \\<longrightarrow>\n            H' = H0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using unique_circline_type_zero_0"], ["proof (prove)\nusing this:\n  z = moebius_pt (moebius_inv M) 0\\<^sub>h\n  \\<exists>!H. circline_type H = 0 \\<and> 0\\<^sub>h \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. (\\<And>H0.\n        \\<lbrakk>circline_type H0 = 0 \\<and>\n                 0\\<^sub>h \\<in> circline_set H0;\n         \\<forall>H'.\n            circline_type H' = 0 \\<and>\n            0\\<^sub>h \\<in> circline_set H' \\<longrightarrow>\n            H' = H0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  circline_type H0 = 0 \\<and> 0\\<^sub>h \\<in> circline_set H0\n  \\<forall>H'.\n     circline_type H' = 0 \\<and>\n     0\\<^sub>h \\<in> circline_set H' \\<longrightarrow>\n     H' = H0\n\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "let ?H' = \"moebius_circline (moebius_inv M) H0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H", "unfolding Ex1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (circline_type x = 0 \\<and> z \\<in> circline_set x) \\<and>\n       (\\<forall>y.\n           circline_type y = 0 \\<and>\n           z \\<in> circline_set y \\<longrightarrow>\n           y = x)", "using * +++"], ["proof (prove)\nusing this:\n  circline_type H0 = 0 \\<and> 0\\<^sub>h \\<in> circline_set H0\n  z = moebius_pt (moebius_inv M) 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (circline_type x = 0 \\<and> z \\<in> circline_set x) \\<and>\n       (\\<forall>y.\n           circline_type y = 0 \\<and>\n           z \\<in> circline_set y \\<longrightarrow>\n           y = x)", "proof (rule_tac x=\"?H'\" in exI, simp, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>z = moebius_pt (moebius_inv M) 0\\<^sub>h;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type y = 0;\n        moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set y\\<rbrakk>\n       \\<Longrightarrow> y = moebius_circline (moebius_inv M) H0", "fix H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>z = moebius_pt (moebius_inv M) 0\\<^sub>h;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type y = 0;\n        moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set y\\<rbrakk>\n       \\<Longrightarrow> y = moebius_circline (moebius_inv M) H0", "assume \"circline_type H' = 0\" \"moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set H'\""], ["proof (state)\nthis:\n  circline_type H' = 0\n  moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set H'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>z = moebius_pt (moebius_inv M) 0\\<^sub>h;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type y = 0;\n        moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set y\\<rbrakk>\n       \\<Longrightarrow> y = moebius_circline (moebius_inv M) H0", "hence \"0\\<^sub>h \\<in> circline_set (moebius_circline M H')\""], ["proof (prove)\nusing this:\n  circline_type H' = 0\n  moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set H'\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set (moebius_circline M H')", "using ++ +++"], ["proof (prove)\nusing this:\n  circline_type H' = 0\n  moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set H'\n  moebius_pt M z = 0\\<^sub>h\n  z = moebius_pt (moebius_inv M) 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set (moebius_circline M H')", "by force"], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H')\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>z = moebius_pt (moebius_inv M) 0\\<^sub>h;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type y = 0;\n        moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set y\\<rbrakk>\n       \\<Longrightarrow> y = moebius_circline (moebius_inv M) H0", "hence \"moebius_circline M H' = H0\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H')\n\ngoal (1 subgoal):\n 1. moebius_circline M H' = H0", "using **[rule_format, of \"moebius_circline M H'\"]"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H')\n  circline_type (moebius_circline M H') = 0 \\<and>\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H') \\<Longrightarrow>\n  moebius_circline M H' = H0\n\ngoal (1 subgoal):\n 1. moebius_circline M H' = H0", "using \\<open>circline_type H' = 0\\<close>"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H')\n  circline_type (moebius_circline M H') = 0 \\<and>\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H') \\<Longrightarrow>\n  moebius_circline M H' = H0\n  circline_type H' = 0\n\ngoal (1 subgoal):\n 1. moebius_circline M H' = H0", "by simp"], ["proof (state)\nthis:\n  moebius_circline M H' = H0\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>z = moebius_pt (moebius_inv M) 0\\<^sub>h;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type H0 = 0; 0\\<^sub>h \\<in> circline_set H0;\n        circline_type y = 0;\n        moebius_pt (moebius_inv M) 0\\<^sub>h \\<in> circline_set y\\<rbrakk>\n       \\<Longrightarrow> y = moebius_circline (moebius_inv M) H0", "thus \"H' = moebius_circline (moebius_inv M) H0\""], ["proof (prove)\nusing this:\n  moebius_circline M H' = H0\n\ngoal (1 subgoal):\n 1. H' = moebius_circline (moebius_inv M) H0", "by auto"], ["proof (state)\nthis:\n  H' = moebius_circline (moebius_inv M) H0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!H. circline_type H = 0 \\<and> z \\<in> circline_set H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Negative type circline uniqueness\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma unique_circline_01inf':\n  shows \"0\\<^sub>h \\<in> circline_set x_axis \\<and> 1\\<^sub>h \\<in> circline_set x_axis \\<and> \\<infinity>\\<^sub>h \\<in> circline_set x_axis \\<and>\n        (\\<forall> H. 0\\<^sub>h \\<in> circline_set H \\<and> 1\\<^sub>h \\<in> circline_set H \\<and> \\<infinity>\\<^sub>h \\<in> circline_set H  \\<longrightarrow> H = x_axis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set x_axis \\<and>\n    1\\<^sub>h \\<in> circline_set x_axis \\<and>\n    \\<infinity>\\<^sub>h \\<in> circline_set x_axis \\<and>\n    (\\<forall>H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n        H = x_axis)", "proof safe"], ["proof (state)\ngoal (4 subgoals):\n 1. 0\\<^sub>h \\<in> circline_set x_axis\n 2. 1\\<^sub>h \\<in> circline_set x_axis\n 3. \\<infinity>\\<^sub>h \\<in> circline_set x_axis\n 4. \\<And>H.\n       \\<lbrakk>0\\<^sub>h \\<in> circline_set H;\n        1\\<^sub>h \\<in> circline_set H;\n        \\<infinity>\\<^sub>h \\<in> circline_set H\\<rbrakk>\n       \\<Longrightarrow> H = x_axis", "fix H"], ["proof (state)\ngoal (4 subgoals):\n 1. 0\\<^sub>h \\<in> circline_set x_axis\n 2. 1\\<^sub>h \\<in> circline_set x_axis\n 3. \\<infinity>\\<^sub>h \\<in> circline_set x_axis\n 4. \\<And>H.\n       \\<lbrakk>0\\<^sub>h \\<in> circline_set H;\n        1\\<^sub>h \\<in> circline_set H;\n        \\<infinity>\\<^sub>h \\<in> circline_set H\\<rbrakk>\n       \\<Longrightarrow> H = x_axis", "assume \"0\\<^sub>h \\<in> circline_set H\"  \"1\\<^sub>h \\<in> circline_set H\" \"\\<infinity>\\<^sub>h \\<in> circline_set H\""], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> circline_set H\n  1\\<^sub>h \\<in> circline_set H\n  \\<infinity>\\<^sub>h \\<in> circline_set H\n\ngoal (4 subgoals):\n 1. 0\\<^sub>h \\<in> circline_set x_axis\n 2. 1\\<^sub>h \\<in> circline_set x_axis\n 3. \\<infinity>\\<^sub>h \\<in> circline_set x_axis\n 4. \\<And>H.\n       \\<lbrakk>0\\<^sub>h \\<in> circline_set H;\n        1\\<^sub>h \\<in> circline_set H;\n        \\<infinity>\\<^sub>h \\<in> circline_set H\\<rbrakk>\n       \\<Longrightarrow> H = x_axis", "thus \"H = x_axis\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set H\n  1\\<^sub>h \\<in> circline_set H\n  \\<infinity>\\<^sub>h \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. H = x_axis", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> Collect (on_circline H)\n  1\\<^sub>h \\<in> Collect (on_circline H)\n  \\<infinity>\\<^sub>h \\<in> Collect (on_circline H)\n\ngoal (1 subgoal):\n 1. H = x_axis", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>on_circline H 0\\<^sub>h; on_circline H 1\\<^sub>h;\n     on_circline H \\<infinity>\\<^sub>h\\<rbrakk>\n    \\<Longrightarrow> H = x_axis", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "have *: \"C = cnj B\" \"A = 0 \\<and> D = 0 \\<longrightarrow> B \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C = cnj B &&& A = 0 \\<and> D = 0 \\<longrightarrow> B \\<noteq> 0", "using hermitean_elems[of A B C D] hh HH"], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n  hermitean H \\<and> H \\<noteq> mat_zero\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. C = cnj B &&& A = 0 \\<and> D = 0 \\<longrightarrow> B \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  C = cnj B\n  A = 0 \\<and> D = 0 \\<longrightarrow> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "obtain Bx By where \"B = Complex Bx By\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Bx By.\n        B = Complex Bx By \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases B) auto"], ["proof (state)\nthis:\n  B = Complex Bx By\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "assume \"on_circline_cmat_cvec H 0\\<^sub>v\" \"on_circline_cmat_cvec H 1\\<^sub>v\" \"on_circline_cmat_cvec H \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  on_circline_cmat_cvec H 0\\<^sub>v\n  on_circline_cmat_cvec H 1\\<^sub>v\n  on_circline_cmat_cvec H \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        on_circline_cmat_cvec H 0\\<^sub>v;\n        on_circline_cmat_cvec H 1\\<^sub>v;\n        on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H x_axis_cmat", "thus \"circline_eq_cmat H x_axis_cmat\""], ["proof (prove)\nusing this:\n  on_circline_cmat_cvec H 0\\<^sub>v\n  on_circline_cmat_cvec H 1\\<^sub>v\n  on_circline_cmat_cvec H \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H x_axis_cmat", "using * HH \\<open>C = cnj B\\<close> \\<open>B = Complex Bx By\\<close>"], ["proof (prove)\nusing this:\n  on_circline_cmat_cvec H 0\\<^sub>v\n  on_circline_cmat_cvec H 1\\<^sub>v\n  on_circline_cmat_cvec H \\<infinity>\\<^sub>v\n  C = cnj B\n  A = 0 \\<and> D = 0 \\<longrightarrow> B \\<noteq> 0\n  H = (A, B, C, D)\n  C = cnj B\n  B = Complex Bx By\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H x_axis_cmat", "by (simp add: Let_def vec_cnj_def Complex_eq) (rule_tac x=\"1/By\" in exI, auto)"], ["proof (state)\nthis:\n  circline_eq_cmat H x_axis_cmat\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H = x_axis\n\ngoal (3 subgoals):\n 1. 0\\<^sub>h \\<in> circline_set x_axis\n 2. 1\\<^sub>h \\<in> circline_set x_axis\n 3. \\<infinity>\\<^sub>h \\<in> circline_set x_axis", "qed simp_all"], ["", "lemma unique_circline_set:\n  assumes \"A \\<noteq> B\" and \"A \\<noteq> C\" and \"B \\<noteq> C\"\n  shows \"\\<exists>! H. A \\<in> circline_set H \\<and> B \\<in> circline_set H \\<and> C \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "let ?P = \"\\<lambda> A B C. A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<longrightarrow> (\\<exists>! H. A \\<in> circline_set H \\<and> B \\<in> circline_set H \\<and> C \\<in> circline_set H)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "have \"?P A B C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<longrightarrow>\n    (\\<exists>!H.\n        A \\<in> circline_set H \\<and>\n        B \\<in> circline_set H \\<and> C \\<in> circline_set H)", "proof (rule wlog_moebius_01inf[of ?P])"], ["proof (state)\ngoal (5 subgoals):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)\n 2. A \\<noteq> B\n 3. B \\<noteq> C\n 4. A \\<noteq> C\n 5. \\<And>M a b c.\n       a \\<noteq> b \\<and>\n       a \\<noteq> c \\<and> b \\<noteq> c \\<longrightarrow>\n       (\\<exists>!H.\n           a \\<in> circline_set H \\<and>\n           b \\<in> circline_set H \\<and>\n           c \\<in> circline_set H) \\<Longrightarrow>\n       moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n       moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n       moebius_pt M b \\<noteq> moebius_pt M c \\<longrightarrow>\n       (\\<exists>!H.\n           moebius_pt M a \\<in> circline_set H \\<and>\n           moebius_pt M b \\<in> circline_set H \\<and>\n           moebius_pt M c \\<in> circline_set H)", "fix M a b c"], ["proof (state)\ngoal (5 subgoals):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)\n 2. A \\<noteq> B\n 3. B \\<noteq> C\n 4. A \\<noteq> C\n 5. \\<And>M a b c.\n       a \\<noteq> b \\<and>\n       a \\<noteq> c \\<and> b \\<noteq> c \\<longrightarrow>\n       (\\<exists>!H.\n           a \\<in> circline_set H \\<and>\n           b \\<in> circline_set H \\<and>\n           c \\<in> circline_set H) \\<Longrightarrow>\n       moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n       moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n       moebius_pt M b \\<noteq> moebius_pt M c \\<longrightarrow>\n       (\\<exists>!H.\n           moebius_pt M a \\<in> circline_set H \\<and>\n           moebius_pt M b \\<in> circline_set H \\<and>\n           moebius_pt M c \\<in> circline_set H)", "let ?M = \"moebius_pt M\""], ["proof (state)\ngoal (5 subgoals):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)\n 2. A \\<noteq> B\n 3. B \\<noteq> C\n 4. A \\<noteq> C\n 5. \\<And>M a b c.\n       a \\<noteq> b \\<and>\n       a \\<noteq> c \\<and> b \\<noteq> c \\<longrightarrow>\n       (\\<exists>!H.\n           a \\<in> circline_set H \\<and>\n           b \\<in> circline_set H \\<and>\n           c \\<in> circline_set H) \\<Longrightarrow>\n       moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n       moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n       moebius_pt M b \\<noteq> moebius_pt M c \\<longrightarrow>\n       (\\<exists>!H.\n           moebius_pt M a \\<in> circline_set H \\<and>\n           moebius_pt M b \\<in> circline_set H \\<and>\n           moebius_pt M c \\<in> circline_set H)", "assume \"?P a b c\""], ["proof (state)\nthis:\n  a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c \\<longrightarrow>\n  (\\<exists>!H.\n      a \\<in> circline_set H \\<and>\n      b \\<in> circline_set H \\<and> c \\<in> circline_set H)\n\ngoal (5 subgoals):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)\n 2. A \\<noteq> B\n 3. B \\<noteq> C\n 4. A \\<noteq> C\n 5. \\<And>M a b c.\n       a \\<noteq> b \\<and>\n       a \\<noteq> c \\<and> b \\<noteq> c \\<longrightarrow>\n       (\\<exists>!H.\n           a \\<in> circline_set H \\<and>\n           b \\<in> circline_set H \\<and>\n           c \\<in> circline_set H) \\<Longrightarrow>\n       moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n       moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n       moebius_pt M b \\<noteq> moebius_pt M c \\<longrightarrow>\n       (\\<exists>!H.\n           moebius_pt M a \\<in> circline_set H \\<and>\n           moebius_pt M b \\<in> circline_set H \\<and>\n           moebius_pt M c \\<in> circline_set H)", "show \"?P (?M a) (?M b) (?M c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<longrightarrow>\n    (\\<exists>!H.\n        moebius_pt M a \\<in> circline_set H \\<and>\n        moebius_pt M b \\<in> circline_set H \\<and>\n        moebius_pt M c \\<in> circline_set H)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<Longrightarrow>\n    \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "assume \"?M a \\<noteq> ?M b \\<and> ?M a \\<noteq> ?M c \\<and> ?M b \\<noteq> ?M c\""], ["proof (state)\nthis:\n  moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n  moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n  moebius_pt M b \\<noteq> moebius_pt M c\n\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<Longrightarrow>\n    \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "hence \"a \\<noteq> b\" \"b \\<noteq> c\" \"a \\<noteq> c\""], ["proof (prove)\nusing this:\n  moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n  moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n  moebius_pt M b \\<noteq> moebius_pt M c\n\ngoal (1 subgoal):\n 1. a \\<noteq> b &&& b \\<noteq> c &&& a \\<noteq> c", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<Longrightarrow>\n    \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "hence \"\\<exists>!H. a \\<in> circline_set H \\<and> b \\<in> circline_set H \\<and> c \\<in> circline_set H\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       a \\<in> circline_set H \\<and>\n       b \\<in> circline_set H \\<and> c \\<in> circline_set H", "using \\<open>?P a b c\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n  a \\<noteq> b \\<and> a \\<noteq> c \\<and> b \\<noteq> c \\<longrightarrow>\n  (\\<exists>!H.\n      a \\<in> circline_set H \\<and>\n      b \\<in> circline_set H \\<and> c \\<in> circline_set H)\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       a \\<in> circline_set H \\<and>\n       b \\<in> circline_set H \\<and> c \\<in> circline_set H", "by simp"], ["proof (state)\nthis:\n  \\<exists>!H.\n     a \\<in> circline_set H \\<and>\n     b \\<in> circline_set H \\<and> c \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<Longrightarrow>\n    \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "then"], ["proof (chain)\npicking this:\n  \\<exists>!H.\n     a \\<in> circline_set H \\<and>\n     b \\<in> circline_set H \\<and> c \\<in> circline_set H", "obtain H where\n        *: \"a \\<in> circline_set H \\<and> b \\<in> circline_set H \\<and> c \\<in> circline_set H\" and\n        **: \"\\<forall>H'. a \\<in> circline_set H' \\<and> b \\<in> circline_set H' \\<and> c \\<in> circline_set H' \\<longrightarrow> H' = H\""], ["proof (prove)\nusing this:\n  \\<exists>!H.\n     a \\<in> circline_set H \\<and>\n     b \\<in> circline_set H \\<and> c \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        \\<lbrakk>a \\<in> circline_set H \\<and>\n                 b \\<in> circline_set H \\<and> c \\<in> circline_set H;\n         \\<forall>H'.\n            a \\<in> circline_set H' \\<and>\n            b \\<in> circline_set H' \\<and>\n            c \\<in> circline_set H' \\<longrightarrow>\n            H' = H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Ex1_def"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     (a \\<in> circline_set x \\<and>\n      b \\<in> circline_set x \\<and> c \\<in> circline_set x) \\<and>\n     (\\<forall>y.\n         a \\<in> circline_set y \\<and>\n         b \\<in> circline_set y \\<and>\n         c \\<in> circline_set y \\<longrightarrow>\n         y = x)\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        \\<lbrakk>a \\<in> circline_set H \\<and>\n                 b \\<in> circline_set H \\<and> c \\<in> circline_set H;\n         \\<forall>H'.\n            a \\<in> circline_set H' \\<and>\n            b \\<in> circline_set H' \\<and>\n            c \\<in> circline_set H' \\<longrightarrow>\n            H' = H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> circline_set H \\<and>\n  b \\<in> circline_set H \\<and> c \\<in> circline_set H\n  \\<forall>H'.\n     a \\<in> circline_set H' \\<and>\n     b \\<in> circline_set H' \\<and>\n     c \\<in> circline_set H' \\<longrightarrow>\n     H' = H\n\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<Longrightarrow>\n    \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "let ?H' = \"moebius_circline M H\""], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n    moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n    moebius_pt M b \\<noteq> moebius_pt M c \\<Longrightarrow>\n    \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "show \"\\<exists>! H. ?M a \\<in> circline_set H \\<and> moebius_pt M b \\<in> circline_set H \\<and> moebius_pt M c \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       moebius_pt M a \\<in> circline_set H \\<and>\n       moebius_pt M b \\<in> circline_set H \\<and>\n       moebius_pt M c \\<in> circline_set H", "unfolding Ex1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (moebius_pt M a \\<in> circline_set x \\<and>\n        moebius_pt M b \\<in> circline_set x \\<and>\n        moebius_pt M c \\<in> circline_set x) \\<and>\n       (\\<forall>y.\n           moebius_pt M a \\<in> circline_set y \\<and>\n           moebius_pt M b \\<in> circline_set y \\<and>\n           moebius_pt M c \\<in> circline_set y \\<longrightarrow>\n           y = x)", "proof (rule_tac x=\"?H'\" in exI, rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. moebius_pt M a \\<in> circline_set (moebius_circline M H) \\<and>\n    moebius_pt M b \\<in> circline_set (moebius_circline M H) \\<and>\n    moebius_pt M c \\<in> circline_set (moebius_circline M H)\n 2. \\<forall>y.\n       moebius_pt M a \\<in> circline_set y \\<and>\n       moebius_pt M b \\<in> circline_set y \\<and>\n       moebius_pt M c \\<in> circline_set y \\<longrightarrow>\n       y = moebius_circline M H", "show \"?M a \\<in> circline_set ?H' \\<and> ?M b \\<in> circline_set ?H' \\<and> ?M c \\<in> circline_set ?H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M a \\<in> circline_set (moebius_circline M H) \\<and>\n    moebius_pt M b \\<in> circline_set (moebius_circline M H) \\<and>\n    moebius_pt M c \\<in> circline_set (moebius_circline M H)", "using *"], ["proof (prove)\nusing this:\n  a \\<in> circline_set H \\<and>\n  b \\<in> circline_set H \\<and> c \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. moebius_pt M a \\<in> circline_set (moebius_circline M H) \\<and>\n    moebius_pt M b \\<in> circline_set (moebius_circline M H) \\<and>\n    moebius_pt M c \\<in> circline_set (moebius_circline M H)", "by auto"], ["proof (state)\nthis:\n  moebius_pt M a \\<in> circline_set (moebius_circline M H) \\<and>\n  moebius_pt M b \\<in> circline_set (moebius_circline M H) \\<and>\n  moebius_pt M c \\<in> circline_set (moebius_circline M H)\n\ngoal (1 subgoal):\n 1. \\<forall>y.\n       moebius_pt M a \\<in> circline_set y \\<and>\n       moebius_pt M b \\<in> circline_set y \\<and>\n       moebius_pt M c \\<in> circline_set y \\<longrightarrow>\n       y = moebius_circline M H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>y.\n       moebius_pt M a \\<in> circline_set y \\<and>\n       moebius_pt M b \\<in> circline_set y \\<and>\n       moebius_pt M c \\<in> circline_set y \\<longrightarrow>\n       y = moebius_circline M H", "show \"\\<forall>H'. ?M a \\<in> circline_set H' \\<and> ?M b \\<in> circline_set H' \\<and> ?M c \\<in> circline_set H' \\<longrightarrow> H' = ?H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>H'.\n       moebius_pt M a \\<in> circline_set H' \\<and>\n       moebius_pt M b \\<in> circline_set H' \\<and>\n       moebius_pt M c \\<in> circline_set H' \\<longrightarrow>\n       H' = moebius_circline M H", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       \\<lbrakk>moebius_pt M a \\<in> circline_set H';\n        moebius_pt M b \\<in> circline_set H';\n        moebius_pt M c \\<in> circline_set H'\\<rbrakk>\n       \\<Longrightarrow> H' = moebius_circline M H", "fix H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       \\<lbrakk>moebius_pt M a \\<in> circline_set H';\n        moebius_pt M b \\<in> circline_set H';\n        moebius_pt M c \\<in> circline_set H'\\<rbrakk>\n       \\<Longrightarrow> H' = moebius_circline M H", "let ?iH' = \"moebius_circline (moebius_inv M) H'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       \\<lbrakk>moebius_pt M a \\<in> circline_set H';\n        moebius_pt M b \\<in> circline_set H';\n        moebius_pt M c \\<in> circline_set H'\\<rbrakk>\n       \\<Longrightarrow> H' = moebius_circline M H", "assume \"?M a \\<in> circline_set H'\" \"?M b \\<in> circline_set H'\" \"?M c \\<in> circline_set H'\""], ["proof (state)\nthis:\n  moebius_pt M a \\<in> circline_set H'\n  moebius_pt M b \\<in> circline_set H'\n  moebius_pt M c \\<in> circline_set H'\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       \\<lbrakk>moebius_pt M a \\<in> circline_set H';\n        moebius_pt M b \\<in> circline_set H';\n        moebius_pt M c \\<in> circline_set H'\\<rbrakk>\n       \\<Longrightarrow> H' = moebius_circline M H", "hence \"a \\<in> circline_set ?iH' \\<and> b \\<in> circline_set ?iH' \\<and> c \\<in> circline_set ?iH'\""], ["proof (prove)\nusing this:\n  moebius_pt M a \\<in> circline_set H'\n  moebius_pt M b \\<in> circline_set H'\n  moebius_pt M c \\<in> circline_set H'\n\ngoal (1 subgoal):\n 1. a \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n    b \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n    c \\<in> circline_set (moebius_circline (moebius_inv M) H')", "by simp"], ["proof (state)\nthis:\n  a \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n  b \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n  c \\<in> circline_set (moebius_circline (moebius_inv M) H')\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       \\<lbrakk>moebius_pt M a \\<in> circline_set H';\n        moebius_pt M b \\<in> circline_set H';\n        moebius_pt M c \\<in> circline_set H'\\<rbrakk>\n       \\<Longrightarrow> H' = moebius_circline M H", "hence \"H = ?iH'\""], ["proof (prove)\nusing this:\n  a \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n  b \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n  c \\<in> circline_set (moebius_circline (moebius_inv M) H')\n\ngoal (1 subgoal):\n 1. H = moebius_circline (moebius_inv M) H'", "using **"], ["proof (prove)\nusing this:\n  a \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n  b \\<in> circline_set (moebius_circline (moebius_inv M) H') \\<and>\n  c \\<in> circline_set (moebius_circline (moebius_inv M) H')\n  \\<forall>H'.\n     a \\<in> circline_set H' \\<and>\n     b \\<in> circline_set H' \\<and>\n     c \\<in> circline_set H' \\<longrightarrow>\n     H' = H\n\ngoal (1 subgoal):\n 1. H = moebius_circline (moebius_inv M) H'", "by blast"], ["proof (state)\nthis:\n  H = moebius_circline (moebius_inv M) H'\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       \\<lbrakk>moebius_pt M a \\<in> circline_set H';\n        moebius_pt M b \\<in> circline_set H';\n        moebius_pt M c \\<in> circline_set H'\\<rbrakk>\n       \\<Longrightarrow> H' = moebius_circline M H", "thus \"H' = moebius_circline M H\""], ["proof (prove)\nusing this:\n  H = moebius_circline (moebius_inv M) H'\n\ngoal (1 subgoal):\n 1. H' = moebius_circline M H", "by simp"], ["proof (state)\nthis:\n  H' = moebius_circline M H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>H'.\n     moebius_pt M a \\<in> circline_set H' \\<and>\n     moebius_pt M b \\<in> circline_set H' \\<and>\n     moebius_pt M c \\<in> circline_set H' \\<longrightarrow>\n     H' = moebius_circline M H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!H.\n     moebius_pt M a \\<in> circline_set H \\<and>\n     moebius_pt M b \\<in> circline_set H \\<and>\n     moebius_pt M c \\<in> circline_set H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt M a \\<noteq> moebius_pt M b \\<and>\n  moebius_pt M a \\<noteq> moebius_pt M c \\<and>\n  moebius_pt M b \\<noteq> moebius_pt M c \\<longrightarrow>\n  (\\<exists>!H.\n      moebius_pt M a \\<in> circline_set H \\<and>\n      moebius_pt M b \\<in> circline_set H \\<and>\n      moebius_pt M c \\<in> circline_set H)\n\ngoal (4 subgoals):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)\n 2. A \\<noteq> B\n 3. B \\<noteq> C\n 4. A \\<noteq> C", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)\n 2. A \\<noteq> B\n 3. B \\<noteq> C\n 4. A \\<noteq> C", "show \"?P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)", "using unique_circline_01inf'"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set x_axis \\<and>\n  1\\<^sub>h \\<in> circline_set x_axis \\<and>\n  \\<infinity>\\<^sub>h \\<in> circline_set x_axis \\<and>\n  (\\<forall>H.\n      0\\<^sub>h \\<in> circline_set H \\<and>\n      1\\<^sub>h \\<in> circline_set H \\<and>\n      \\<infinity>\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n      H = x_axis)\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>!H.\n        0\\<^sub>h \\<in> circline_set H \\<and>\n        1\\<^sub>h \\<in> circline_set H \\<and>\n        \\<infinity>\\<^sub>h \\<in> circline_set H)", "unfolding Ex1_def"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set x_axis \\<and>\n  1\\<^sub>h \\<in> circline_set x_axis \\<and>\n  \\<infinity>\\<^sub>h \\<in> circline_set x_axis \\<and>\n  (\\<forall>H.\n      0\\<^sub>h \\<in> circline_set H \\<and>\n      1\\<^sub>h \\<in> circline_set H \\<and>\n      \\<infinity>\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n      H = x_axis)\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n    0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n    (\\<exists>x.\n        (0\\<^sub>h \\<in> circline_set x \\<and>\n         1\\<^sub>h \\<in> circline_set x \\<and>\n         \\<infinity>\\<^sub>h \\<in> circline_set x) \\<and>\n        (\\<forall>y.\n            0\\<^sub>h \\<in> circline_set y \\<and>\n            1\\<^sub>h \\<in> circline_set y \\<and>\n            \\<infinity>\\<^sub>h \\<in> circline_set y \\<longrightarrow>\n            y = x))", "by (safe, rule_tac x=\"x_axis\" in exI) auto"], ["proof (state)\nthis:\n  0\\<^sub>h \\<noteq> 1\\<^sub>h \\<and>\n  0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<and>\n  1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h \\<longrightarrow>\n  (\\<exists>!H.\n      0\\<^sub>h \\<in> circline_set H \\<and>\n      1\\<^sub>h \\<in> circline_set H \\<and>\n      \\<infinity>\\<^sub>h \\<in> circline_set H)\n\ngoal (3 subgoals):\n 1. A \\<noteq> B\n 2. B \\<noteq> C\n 3. A \\<noteq> C", "qed fact+"], ["proof (state)\nthis:\n  A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<longrightarrow>\n  (\\<exists>!H.\n      A \\<in> circline_set H \\<and>\n      B \\<in> circline_set H \\<and> C \\<in> circline_set H)\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "thus ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<longrightarrow>\n  (\\<exists>!H.\n      A \\<in> circline_set H \\<and>\n      B \\<in> circline_set H \\<and> C \\<in> circline_set H)\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<longrightarrow>\n  (\\<exists>!H.\n      A \\<in> circline_set H \\<and>\n      B \\<in> circline_set H \\<and> C \\<in> circline_set H)\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "by simp"], ["proof (state)\nthis:\n  \\<exists>!H.\n     A \\<in> circline_set H \\<and>\n     B \\<in> circline_set H \\<and> C \\<in> circline_set H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zero_one_inf_x_axis [simp]:\n  assumes \"0\\<^sub>h \\<in> circline_set H\" and \"1\\<^sub>h \\<in> circline_set H\" and \"\\<infinity>\\<^sub>h \\<in> circline_set H\"\n  shows \"H = x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = x_axis", "using assms unique_circline_set[of \"0\\<^sub>h\" \"1\\<^sub>h\" \"\\<infinity>\\<^sub>h\"]"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set H\n  1\\<^sub>h \\<in> circline_set H\n  \\<infinity>\\<^sub>h \\<in> circline_set H\n  \\<lbrakk>0\\<^sub>h \\<noteq> 1\\<^sub>h;\n   0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h;\n   1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!H.\n                       0\\<^sub>h \\<in> circline_set H \\<and>\n                       1\\<^sub>h \\<in> circline_set H \\<and>\n                       \\<infinity>\\<^sub>h \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. H = x_axis", "by auto"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Circline set cardinality\\<close>"], ["", "(* ----------------------------------------------------------------- *)\n\n(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Diagonal circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "definition is_diag_circline_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n [simp]: \"is_diag_circline_cmat H = (let (A, B, C, D) = H in B = 0 \\<and> C = 0)\""], ["", "lift_definition is_diag_circline_clmat :: \"circline_mat \\<Rightarrow> bool\" is is_diag_circline_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition circline_diag :: \"circline \\<Rightarrow> bool\" is is_diag_circline_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       is_diag_circline_clmat circline_mat1 =\n       is_diag_circline_clmat circline_mat2", "by transfer auto"], ["", "lemma circline_diagonalize:\n  shows \"\\<exists> M H'. moebius_circline M H = H' \\<and> circline_diag H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M H'. moebius_circline M H = H' \\<and> circline_diag H'", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"H\") auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "hence HH_elems: \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using hermitean_elems[of A B C D] hh"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "obtain M k1 k2 where *: \"mat_det M \\<noteq> 0\" \"unitary M\" \"congruence M H = (k1, 0, 0, k2)\" \"is_real k1\" \"is_real k2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M k1 k2.\n        \\<lbrakk>mat_det M \\<noteq> 0; unitary M;\n         congruence M H = (k1, 0, 0, k2); is_real k1; is_real k2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hermitean_diagonizable[of H] hh"], ["proof (prove)\nusing this:\n  hermitean H \\<Longrightarrow>\n  \\<exists>k1 k2 M.\n     mat_det M \\<noteq> 0 \\<and>\n     unitary M \\<and>\n     congruence M H = (k1, 0, 0, k2) \\<and>\n     is_real k1 \\<and>\n     is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>M k1 k2.\n        \\<lbrakk>mat_det M \\<noteq> 0; unitary M;\n         congruence M H = (k1, 0, 0, k2); is_real k1; is_real k2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n  unitary M\n  congruence M H = (k1, 0, 0, k2)\n  is_real k1\n  is_real k2\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "have \"k1 \\<noteq> 0 \\<or> k2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 \\<noteq> 0 \\<or> k2 \\<noteq> 0", "using \\<open>congruence M H = (k1, 0, 0, k2)\\<close> hh congruence_nonzero[of H M] \\<open>mat_det M \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  congruence M H = (k1, 0, 0, k2)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  \\<lbrakk>H \\<noteq> mat_zero; mat_det M \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> congruence M H \\<noteq> mat_zero\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k1 \\<noteq> 0 \\<or> k2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  k1 \\<noteq> 0 \\<or> k2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "let ?M' = \"mat_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "let ?H' = \"(k1, 0, 0, k2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "have \"circline_eq_cmat (moebius_circline_cmat_cmat ?M' H) ?H' \\<and> is_diag_circline_cmat ?H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_eq_cmat (moebius_circline_cmat_cmat (mat_inv M) H)\n     (k1, 0, 0, k2) \\<and>\n    is_diag_circline_cmat (k1, 0, 0, k2)", "using *"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  unitary M\n  congruence M H = (k1, 0, 0, k2)\n  is_real k1\n  is_real k2\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (moebius_circline_cmat_cmat (mat_inv M) H)\n     (k1, 0, 0, k2) \\<and>\n    is_diag_circline_cmat (k1, 0, 0, k2)", "by force"], ["proof (state)\nthis:\n  circline_eq_cmat (moebius_circline_cmat_cmat (mat_inv M) H)\n   (k1, 0, 0, k2) \\<and>\n  is_diag_circline_cmat (k1, 0, 0, k2)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "moreover"], ["proof (state)\nthis:\n  circline_eq_cmat (moebius_circline_cmat_cmat (mat_inv M) H)\n   (k1, 0, 0, k2) \\<and>\n  is_diag_circline_cmat (k1, 0, 0, k2)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "have \"?H' \\<in> hermitean_nonzero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k1, 0, 0, k2) \\<in> hermitean_nonzero", "using * \\<open>k1 \\<noteq> 0 \\<or> k2 \\<noteq> 0\\<close> eq_cnj_iff_real[of k1] eq_cnj_iff_real[of k2]"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  unitary M\n  congruence M H = (k1, 0, 0, k2)\n  is_real k1\n  is_real k2\n  k1 \\<noteq> 0 \\<or> k2 \\<noteq> 0\n  (cnj k1 = k1) = is_real k1\n  (cnj k2 = k2) = is_real k2\n\ngoal (1 subgoal):\n 1. (k1, 0, 0, k2) \\<in> hermitean_nonzero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  (k1, 0, 0, k2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "moreover"], ["proof (state)\nthis:\n  (k1, 0, 0, k2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "have \"mat_det ?M' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det (mat_inv M) \\<noteq> 0", "using * mat_det_inv[of M]"], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n  unitary M\n  congruence M H = (k1, 0, 0, k2)\n  is_real k1\n  is_real k2\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. mat_det (mat_inv M) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  mat_det (mat_inv M) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n          \\<exists>H'\\<in>hermitean_nonzero.\n             circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n             is_diag_circline_cmat H'", "ultimately"], ["proof (chain)\npicking this:\n  circline_eq_cmat (moebius_circline_cmat_cmat (mat_inv M) H)\n   (k1, 0, 0, k2) \\<and>\n  is_diag_circline_cmat (k1, 0, 0, k2)\n  (k1, 0, 0, k2) \\<in> hermitean_nonzero\n  mat_det (mat_inv M) \\<noteq> 0", "show \"\\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n            \\<exists>H'\\<in>hermitean_nonzero.\n               circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and> is_diag_circline_cmat H'\""], ["proof (prove)\nusing this:\n  circline_eq_cmat (moebius_circline_cmat_cmat (mat_inv M) H)\n   (k1, 0, 0, k2) \\<and>\n  is_diag_circline_cmat (k1, 0, 0, k2)\n  (k1, 0, 0, k2) \\<in> hermitean_nonzero\n  mat_det (mat_inv M) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n       \\<exists>H'\\<in>hermitean_nonzero.\n          circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n          is_diag_circline_cmat H'", "by blast"], ["proof (state)\nthis:\n  \\<exists>M\\<in>{M. mat_det M \\<noteq> 0}.\n     \\<exists>H'\\<in>hermitean_nonzero.\n        circline_eq_cmat (moebius_circline_cmat_cmat M H) H' \\<and>\n        is_diag_circline_cmat H'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wlog_circline_diag:\n  assumes \"\\<And> H. circline_diag H \\<Longrightarrow> P H\"\n          \"\\<And> M H. P H \\<Longrightarrow> P (moebius_circline M H)\"\n  shows \"P H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P H", "obtain M H' where \"moebius_circline M H = H'\" \"circline_diag H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M H'.\n        \\<lbrakk>moebius_circline M H = H'; circline_diag H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_diagonalize[of H]"], ["proof (prove)\nusing this:\n  \\<exists>M H'. moebius_circline M H = H' \\<and> circline_diag H'\n\ngoal (1 subgoal):\n 1. (\\<And>M H'.\n        \\<lbrakk>moebius_circline M H = H'; circline_diag H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. P H", "hence \"P (moebius_circline M H)\""], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. P (moebius_circline M H)", "using assms(1)"], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  circline_diag ?H \\<Longrightarrow> P ?H\n\ngoal (1 subgoal):\n 1. P (moebius_circline M H)", "by simp"], ["proof (state)\nthis:\n  P (moebius_circline M H)\n\ngoal (1 subgoal):\n 1. P H", "thus ?thesis"], ["proof (prove)\nusing this:\n  P (moebius_circline M H)\n\ngoal (1 subgoal):\n 1. P H", "using assms(2)[of \"moebius_circline M H\" \"moebius_inv M\"]"], ["proof (prove)\nusing this:\n  P (moebius_circline M H)\n  P (moebius_circline M H) \\<Longrightarrow>\n  P (moebius_circline (moebius_inv M) (moebius_circline M H))\n\ngoal (1 subgoal):\n 1. P H", "by simp"], ["proof (state)\nthis:\n  P H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Zero type circline set cardinality\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma circline_type_zero_card_eq1_0:\n  assumes \"circline_type H = 0\" and \"0\\<^sub>h \\<in> circline_set H\"\n  shows \"circline_set H = {0\\<^sub>h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H = {0\\<^sub>h}", "using assms"], ["proof (prove)\nusing this:\n  circline_type H = 0\n  0\\<^sub>h \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. circline_set H = {0\\<^sub>h}", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  circline_type H = 0\n  0\\<^sub>h \\<in> Collect (on_circline H)\n\ngoal (1 subgoal):\n 1. Collect (on_circline H) = {0\\<^sub>h}", "proof(safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h; x \\<notin> {};\n        on_circline H x\\<rbrakk>\n       \\<Longrightarrow> x = 0\\<^sub>h", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h; x \\<notin> {};\n        on_circline H x\\<rbrakk>\n       \\<Longrightarrow> x = 0\\<^sub>h", "assume \"on_circline H z\" \"circline_type H = 0\" \"on_circline H 0\\<^sub>h\""], ["proof (state)\nthis:\n  on_circline H z\n  circline_type H = 0\n  on_circline H 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h; x \\<notin> {};\n        on_circline H x\\<rbrakk>\n       \\<Longrightarrow> x = 0\\<^sub>h", "hence \"H = circline_point_0\""], ["proof (prove)\nusing this:\n  on_circline H z\n  circline_type H = 0\n  on_circline H 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. H = circline_point_0", "using unique_circline_type_zero_0'"], ["proof (prove)\nusing this:\n  on_circline H z\n  circline_type H = 0\n  on_circline H 0\\<^sub>h\n  (circline_type circline_point_0 = 0 \\<and>\n   0\\<^sub>h \\<in> circline_set circline_point_0) \\<and>\n  (\\<forall>H.\n      circline_type H = 0 \\<and>\n      0\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n      H = circline_point_0)\n\ngoal (1 subgoal):\n 1. H = circline_point_0", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  on_circline H z\n  circline_type H = 0\n  on_circline H 0\\<^sub>h\n  (circline_type circline_point_0 = 0 \\<and>\n   0\\<^sub>h \\<in> Collect (on_circline circline_point_0)) \\<and>\n  (\\<forall>H.\n      circline_type H = 0 \\<and>\n      0\\<^sub>h \\<in> Collect (on_circline H) \\<longrightarrow>\n      H = circline_point_0)\n\ngoal (1 subgoal):\n 1. H = circline_point_0", "by simp"], ["proof (state)\nthis:\n  H = circline_point_0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>circline_type H = 0; on_circline H 0\\<^sub>h; x \\<notin> {};\n        on_circline H x\\<rbrakk>\n       \\<Longrightarrow> x = 0\\<^sub>h", "thus \"z = 0\\<^sub>h\""], ["proof (prove)\nusing this:\n  H = circline_point_0\n\ngoal (1 subgoal):\n 1. z = 0\\<^sub>h", "using \\<open>on_circline H z\\<close>"], ["proof (prove)\nusing this:\n  H = circline_point_0\n  on_circline H z\n\ngoal (1 subgoal):\n 1. z = 0\\<^sub>h", "by (transfer, transfer) (case_tac z, case_tac H, force simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  z = 0\\<^sub>h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_type_zero_card_eq1:\n  assumes \"circline_type H = 0\"\n  shows \"\\<exists> z. circline_set H = {z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "have \"\\<exists> z. on_circline H z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. on_circline H z", "using assms"], ["proof (prove)\nusing this:\n  circline_type H = 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. on_circline H z", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "hence \"C = cnj B\" \"is_real A\" \"is_real D\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. C = cnj B &&& is_real A &&& is_real D", "using hh hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. C = cnj B &&& is_real A &&& is_real D", "by auto"], ["proof (state)\nthis:\n  C = cnj B\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "assume \"circline_type_cmat H = 0\""], ["proof (state)\nthis:\n  circline_type_cmat H = 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "hence \"mat_det H = 0\""], ["proof (prove)\nusing this:\n  circline_type_cmat H = 0\n\ngoal (1 subgoal):\n 1. mat_det H = 0", "by (simp add: complex_eq_if_Re_eq hh mat_det_hermitean_real sgn_eq_0_iff)"], ["proof (state)\nthis:\n  mat_det H = 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "hence \"A*D = B*C\""], ["proof (prove)\nusing this:\n  mat_det H = 0\n\ngoal (1 subgoal):\n 1. A * D = B * C", "using HH"], ["proof (prove)\nusing this:\n  mat_det H = 0\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. A * D = B * C", "by simp"], ["proof (state)\nthis:\n  A * D = B * C\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H = 0; circline_type_clmat Ha = 0\\<rbrakk>\n       \\<Longrightarrow> Bex {v. v \\<noteq> vec_zero}\n                          (on_circline_cmat_cvec H)", "show \"Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "proof (cases \"A \\<noteq> 0 \\<or> B \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<noteq> 0 \\<or> B \\<noteq> 0 \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)\n 2. \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0) \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "case True"], ["proof (state)\nthis:\n  A \\<noteq> 0 \\<or> B \\<noteq> 0\n\ngoal (2 subgoals):\n 1. A \\<noteq> 0 \\<or> B \\<noteq> 0 \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)\n 2. \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0) \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "using HH \\<open>A*D = B*C\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> B \\<noteq> 0\n  H = (A, B, C, D)\n  A * D = B * C\n\ngoal (1 subgoal):\n 1. Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "by (rule_tac x=\"(-B, A)\" in bexI) (auto simp add: Let_def vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)\n\ngoal (1 subgoal):\n 1. \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0) \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0) \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "case False"], ["proof (state)\nthis:\n  \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0) \\<Longrightarrow>\n    Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "using HH \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  \\<not> (A \\<noteq> 0 \\<or> B \\<noteq> 0)\n  H = (A, B, C, D)\n  C = cnj B\n\ngoal (1 subgoal):\n 1. Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)", "by (rule_tac x=\"(1, 0)\" in bexI) (simp_all add: Let_def vec_cnj_def)"], ["proof (state)\nthis:\n  Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Bex {v. v \\<noteq> vec_zero} (on_circline_cmat_cvec H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z. on_circline H z\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "then"], ["proof (chain)\npicking this:\n  \\<exists>z. on_circline H z", "obtain z where \"on_circline H z\""], ["proof (prove)\nusing this:\n  \\<exists>z. on_circline H z\n\ngoal (1 subgoal):\n 1. (\\<And>z. on_circline H z \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "obtain M where \"moebius_pt M z = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M z = 0\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_1[of z]"], ["proof (prove)\nusing this:\n  \\<exists>M. moebius_pt M z = ?w1.0\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_pt M z = 0\\<^sub>h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "hence \"0\\<^sub>h \\<in> circline_set (moebius_circline M H)\""], ["proof (prove)\nusing this:\n  moebius_pt M z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set (moebius_circline M H)", "using on_circline_moebius_circline_I[OF \\<open>on_circline H z\\<close>, of M]"], ["proof (prove)\nusing this:\n  moebius_pt M z = 0\\<^sub>h\n  on_circline (moebius_circline M H) (moebius_pt M z)\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set (moebius_circline M H)", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  moebius_pt M z = 0\\<^sub>h\n  on_circline (moebius_circline M H) (moebius_pt M z)\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> Collect (on_circline (moebius_circline M H))", "by simp"], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H)\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "hence \"circline_set (moebius_circline M H) = {0\\<^sub>h}\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H)\n\ngoal (1 subgoal):\n 1. circline_set (moebius_circline M H) = {0\\<^sub>h}", "using circline_type_zero_card_eq1_0[of \"moebius_circline M H\"] \\<open>circline_type H = 0\\<close>"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (moebius_circline M H)\n  \\<lbrakk>circline_type (moebius_circline M H) = 0;\n   0\\<^sub>h \\<in> circline_set (moebius_circline M H)\\<rbrakk>\n  \\<Longrightarrow> circline_set (moebius_circline M H) = {0\\<^sub>h}\n  circline_type H = 0\n\ngoal (1 subgoal):\n 1. circline_set (moebius_circline M H) = {0\\<^sub>h}", "by auto"], ["proof (state)\nthis:\n  circline_set (moebius_circline M H) = {0\\<^sub>h}\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "hence \"circline_set H = {z}\""], ["proof (prove)\nusing this:\n  circline_set (moebius_circline M H) = {0\\<^sub>h}\n\ngoal (1 subgoal):\n 1. circline_set H = {z}", "using \\<open>moebius_pt M z = 0\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  circline_set (moebius_circline M H) = {0\\<^sub>h}\n  moebius_pt M z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. circline_set H = {z}", "using bij_moebius_pt[of M] bij_image_singleton[of \"moebius_pt M\" \"circline_set H\" _ z]"], ["proof (prove)\nusing this:\n  circline_set (moebius_circline M H) = {0\\<^sub>h}\n  moebius_pt M z = 0\\<^sub>h\n  bij (moebius_pt M)\n  \\<lbrakk>moebius_pt M ` circline_set H = {?b}; moebius_pt M z = ?b;\n   bij (moebius_pt M)\\<rbrakk>\n  \\<Longrightarrow> circline_set H = {z}\n\ngoal (1 subgoal):\n 1. circline_set H = {z}", "by simp"], ["proof (state)\nthis:\n  circline_set H = {z}\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "thus ?thesis"], ["proof (prove)\nusing this:\n  circline_set H = {z}\n\ngoal (1 subgoal):\n 1. \\<exists>z. circline_set H = {z}", "by auto"], ["proof (state)\nthis:\n  \\<exists>z. circline_set H = {z}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Negative type circline set cardinality\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma quad_form_diagonal_iff:\n  assumes \"k1 \\<noteq> 0\" and \"is_real k1\" and \"is_real k2\" and \"Re k1 * Re k2 < 0\"\n  shows \"quad_form (z1, 1) (k1, 0, 0, k2) = 0 \\<longleftrightarrow> (\\<exists> \\<phi>. z1 = rcis (sqrt (Re (-k2 /k1))) \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "have \"Re (-k2/k1) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (- k2 / k1)", "using \\<open>Re k1 * Re k2 < 0\\<close> \\<open>is_real k1\\<close> \\<open>is_real k2\\<close> \\<open>k1 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re k1 * Re k2 < 0\n  is_real k1\n  is_real k2\n  k1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (- k2 / k1)", "using Re_divide_real[of k1 \"-k2\"]"], ["proof (prove)\nusing this:\n  Re k1 * Re k2 < 0\n  is_real k1\n  is_real k2\n  k1 \\<noteq> 0\n  \\<lbrakk>is_real k1; k1 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re (- k2 / k1) = Re (- k2) / Re k1\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (- k2 / k1)", "by (smt divide_less_0_iff mult_nonneg_nonneg mult_nonpos_nonpos uminus_complex.simps(1))"], ["proof (state)\nthis:\n  0 \\<le> Re (- k2 / k1)\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "have \"quad_form (z1, 1) (k1, 0, 0, k2) = 0 \\<longleftrightarrow> (cor (cmod z1))\\<^sup>2 = -k2 / k1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    ((cor (cmod z1))\\<^sup>2 = - k2 / k1)", "using assms add_eq_0_iff[of k2 \"k1*(cor (cmod z1))\\<^sup>2\"]"], ["proof (prove)\nusing this:\n  k1 \\<noteq> 0\n  is_real k1\n  is_real k2\n  Re k1 * Re k2 < 0\n  (k2 + k1 * (cor (cmod z1))\\<^sup>2 = 0) =\n  (k1 * (cor (cmod z1))\\<^sup>2 = - k2)\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    ((cor (cmod z1))\\<^sup>2 = - k2 / k1)", "using eq_divide_imp[of k1 \"(cor (cmod z1))\\<^sup>2\" \"-k2\"]"], ["proof (prove)\nusing this:\n  k1 \\<noteq> 0\n  is_real k1\n  is_real k2\n  Re k1 * Re k2 < 0\n  (k2 + k1 * (cor (cmod z1))\\<^sup>2 = 0) =\n  (k1 * (cor (cmod z1))\\<^sup>2 = - k2)\n  \\<lbrakk>k1 \\<noteq> 0; (cor (cmod z1))\\<^sup>2 * k1 = - k2\\<rbrakk>\n  \\<Longrightarrow> (cor (cmod z1))\\<^sup>2 = - k2 / k1\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    ((cor (cmod z1))\\<^sup>2 = - k2 / k1)", "by (auto simp add: vec_cnj_def field_simps complex_mult_cnj_cmod)"], ["proof (state)\nthis:\n  (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n  ((cor (cmod z1))\\<^sup>2 = - k2 / k1)\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "also"], ["proof (state)\nthis:\n  (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n  ((cor (cmod z1))\\<^sup>2 = - k2 / k1)\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "have \"... \\<longleftrightarrow> (cmod z1)\\<^sup>2 = Re (-k2 /k1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((cor (cmod z1))\\<^sup>2 = - k2 / k1) =\n    ((cmod z1)\\<^sup>2 = Re (- k2 / k1))", "using assms"], ["proof (prove)\nusing this:\n  k1 \\<noteq> 0\n  is_real k1\n  is_real k2\n  Re k1 * Re k2 < 0\n\ngoal (1 subgoal):\n 1. ((cor (cmod z1))\\<^sup>2 = - k2 / k1) =\n    ((cmod z1)\\<^sup>2 = Re (- k2 / k1))", "apply (subst complex_eq_if_Re_eq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>k1 \\<noteq> 0; is_real k1; is_real k2;\n     Re k1 * Re k2 < 0\\<rbrakk>\n    \\<Longrightarrow> is_real ((cor (cmod z1))\\<^sup>2)\n 2. \\<lbrakk>k1 \\<noteq> 0; is_real k1; is_real k2;\n     Re k1 * Re k2 < 0\\<rbrakk>\n    \\<Longrightarrow> is_real (- k2 / k1)\n 3. \\<lbrakk>k1 \\<noteq> 0; is_real k1; is_real k2;\n     Re k1 * Re k2 < 0\\<rbrakk>\n    \\<Longrightarrow> (Re ((cor (cmod z1))\\<^sup>2) = Re (- k2 / k1)) =\n                      ((cmod z1)\\<^sup>2 = Re (- k2 / k1))", "using Re_complex_of_real[of \"(cmod z1)\\<^sup>2\"] div_reals"], ["proof (prove)\nusing this:\n  Re (cor ((cmod z1)\\<^sup>2)) = (cmod z1)\\<^sup>2\n  \\<lbrakk>is_real ?a; is_real ?b\\<rbrakk>\n  \\<Longrightarrow> is_real (?a / ?b)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>k1 \\<noteq> 0; is_real k1; is_real k2;\n     Re k1 * Re k2 < 0\\<rbrakk>\n    \\<Longrightarrow> is_real ((cor (cmod z1))\\<^sup>2)\n 2. \\<lbrakk>k1 \\<noteq> 0; is_real k1; is_real k2;\n     Re k1 * Re k2 < 0\\<rbrakk>\n    \\<Longrightarrow> is_real (- k2 / k1)\n 3. \\<lbrakk>k1 \\<noteq> 0; is_real k1; is_real k2;\n     Re k1 * Re k2 < 0\\<rbrakk>\n    \\<Longrightarrow> (Re ((cor (cmod z1))\\<^sup>2) = Re (- k2 / k1)) =\n                      ((cmod z1)\\<^sup>2 = Re (- k2 / k1))", "by auto"], ["proof (state)\nthis:\n  ((cor (cmod z1))\\<^sup>2 = - k2 / k1) =\n  ((cmod z1)\\<^sup>2 = Re (- k2 / k1))\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "also"], ["proof (state)\nthis:\n  ((cor (cmod z1))\\<^sup>2 = - k2 / k1) =\n  ((cmod z1)\\<^sup>2 = Re (- k2 / k1))\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "have \"... \\<longleftrightarrow> cmod z1 = sqrt (Re (-k2 /k1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((cmod z1)\\<^sup>2 = Re (- k2 / k1)) = (cmod z1 = sqrt (Re (- k2 / k1)))", "by (metis norm_ge_zero real_sqrt_ge_0_iff real_sqrt_pow2 real_sqrt_power)"], ["proof (state)\nthis:\n  ((cmod z1)\\<^sup>2 = Re (- k2 / k1)) = (cmod z1 = sqrt (Re (- k2 / k1)))\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "also"], ["proof (state)\nthis:\n  ((cmod z1)\\<^sup>2 = Re (- k2 / k1)) = (cmod z1 = sqrt (Re (- k2 / k1)))\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "have \"... \\<longleftrightarrow> (\\<exists> \\<phi>. z1 = rcis (sqrt (Re (-k2 /k1))) \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod z1 = sqrt (Re (- k2 / k1))) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "using rcis_cmod_arg[of z1, symmetric] assms abs_of_nonneg[of \"sqrt (Re (-k2/k1))\"]"], ["proof (prove)\nusing this:\n  z1 = rcis (cmod z1) (arg z1)\n  k1 \\<noteq> 0\n  is_real k1\n  is_real k2\n  Re k1 * Re k2 < 0\n  0 \\<le> sqrt (Re (- k2 / k1)) \\<Longrightarrow>\n  \\<bar>sqrt (Re (- k2 / k1))\\<bar> = sqrt (Re (- k2 / k1))\n\ngoal (1 subgoal):\n 1. (cmod z1 = sqrt (Re (- k2 / k1))) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "using \\<open>Re (-k2/k1) \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  z1 = rcis (cmod z1) (arg z1)\n  k1 \\<noteq> 0\n  is_real k1\n  is_real k2\n  Re k1 * Re k2 < 0\n  0 \\<le> sqrt (Re (- k2 / k1)) \\<Longrightarrow>\n  \\<bar>sqrt (Re (- k2 / k1))\\<bar> = sqrt (Re (- k2 / k1))\n  0 \\<le> Re (- k2 / k1)\n\ngoal (1 subgoal):\n 1. (cmod z1 = sqrt (Re (- k2 / k1))) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (cmod z1 = sqrt (Re (- k2 / k1))) =\n  (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "finally"], ["proof (chain)\npicking this:\n  (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n  (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n  (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)\n\ngoal (1 subgoal):\n 1. (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n    (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)", "."], ["proof (state)\nthis:\n  (quad_form (z1, 1) (k1, 0, 0, k2) = 0) =\n  (\\<exists>\\<phi>. z1 = rcis (sqrt (Re (- k2 / k1))) \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_type_neg_card_gt3_diag:\n  assumes \"circline_type H < 0\" and \"circline_diag H\"\n  shows \"\\<exists> A B C. A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "using assms"], ["proof (prove)\nusing this:\n  circline_type H < 0\n  circline_diag H\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  circline_type H < 0\n  circline_diag H\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> Collect (on_circline H)", "apply (simp del: HOL.ex_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>circline_type H < 0; circline_diag H\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A B C.\n                         A \\<noteq> B \\<and>\n                         A \\<noteq> C \\<and>\n                         B \\<noteq> C \\<and>\n                         on_circline H A \\<and>\n                         on_circline H B \\<and> on_circline H C", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "hence HH_elems: \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using hermitean_elems[of A B C D] hh"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "assume \"circline_type_cmat H < 0\" \"is_diag_circline_cmat H\""], ["proof (state)\nthis:\n  circline_type_cmat H < 0\n  is_diag_circline_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "hence \"B = 0\" \"C = 0\" \"Re A * Re D < 0\" \"A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  circline_type_cmat H < 0\n  is_diag_circline_cmat H\n\ngoal (1 subgoal):\n 1. (B = 0 &&& C = 0) &&& Re A * Re D < 0 &&& A \\<noteq> 0", "using HH \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  circline_type_cmat H < 0\n  is_diag_circline_cmat H\n  H = (A, B, C, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. (B = 0 &&& C = 0) &&& Re A * Re D < 0 &&& A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  B = 0\n  C = 0\n  Re A * Re D < 0\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "let ?x = \"sqrt (Re (- D / A))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "let ?A = \"(rcis ?x 0, 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "let ?B = \"(rcis ?x (pi/2), 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "let ?C = \"(rcis ?x pi, 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "from quad_form_diagonal_iff[OF \\<open>A \\<noteq> 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>Re A * Re D < 0\\<close>]"], ["proof (chain)\npicking this:\n  (quad_form (?z1.0, 1) (A, 0, 0, D) = 0) =\n  (\\<exists>\\<phi>. ?z1.0 = rcis (sqrt (Re (- D / A))) \\<phi>)", "have \"quad_form ?A (A, 0, 0, D) = 0\"  \"quad_form ?B (A, 0, 0, D) = 0\"  \"quad_form ?C (A, 0, 0, D) = 0\""], ["proof (prove)\nusing this:\n  (quad_form (?z1.0, 1) (A, 0, 0, D) = 0) =\n  (\\<exists>\\<phi>. ?z1.0 = rcis (sqrt (Re (- D / A))) \\<phi>)\n\ngoal (1 subgoal):\n 1. quad_form (rcis (sqrt (Re (- D / A))) 0, 1) (A, 0, 0, D) = 0 &&&\n    quad_form (rcis (sqrt (Re (- D / A))) (pi / 2), 1) (A, 0, 0, D) = 0 &&&\n    quad_form (rcis (sqrt (Re (- D / A))) pi, 1) (A, 0, 0, D) = 0", "by (auto simp del: rcis_zero_arg)"], ["proof (state)\nthis:\n  quad_form (rcis (sqrt (Re (- D / A))) 0, 1) (A, 0, 0, D) = 0\n  quad_form (rcis (sqrt (Re (- D / A))) (pi / 2), 1) (A, 0, 0, D) = 0\n  quad_form (rcis (sqrt (Re (- D / A))) pi, 1) (A, 0, 0, D) = 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "hence \"on_circline_cmat_cvec H ?A \\<and> on_circline_cmat_cvec H ?B \\<and> on_circline_cmat_cvec H ?C\""], ["proof (prove)\nusing this:\n  quad_form (rcis (sqrt (Re (- D / A))) 0, 1) (A, 0, 0, D) = 0\n  quad_form (rcis (sqrt (Re (- D / A))) (pi / 2), 1) (A, 0, 0, D) = 0\n  quad_form (rcis (sqrt (Re (- D / A))) pi, 1) (A, 0, 0, D) = 0\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) 0, 1) \\<and>\n    on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n    on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) pi, 1)", "using HH \\<open>B = 0\\<close> \\<open>C = 0\\<close>"], ["proof (prove)\nusing this:\n  quad_form (rcis (sqrt (Re (- D / A))) 0, 1) (A, 0, 0, D) = 0\n  quad_form (rcis (sqrt (Re (- D / A))) (pi / 2), 1) (A, 0, 0, D) = 0\n  quad_form (rcis (sqrt (Re (- D / A))) pi, 1) (A, 0, 0, D) = 0\n  H = (A, B, C, D)\n  B = 0\n  C = 0\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) 0, 1) \\<and>\n    on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n    on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) pi, 1)", "by simp"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) 0, 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) pi, 1)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "moreover"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) 0, 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) pi, 1)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "have \"Re (D / A) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (D / A) < 0", "using \\<open>Re A * Re D < 0\\<close> \\<open>A \\<noteq> 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D < 0\n  A \\<noteq> 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. Re (D / A) < 0", "using Re_divide_real[of A D]"], ["proof (prove)\nusing this:\n  Re A * Re D < 0\n  A \\<noteq> 0\n  is_real A\n  is_real D\n  \\<lbrakk>is_real A; A \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re (D / A) = Re D / Re A\n\ngoal (1 subgoal):\n 1. Re (D / A) < 0", "by (metis Re_complex_div_lt_0 Re_mult_real div_reals eq_cnj_iff_real is_real_div)"], ["proof (state)\nthis:\n  Re (D / A) < 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "hence \"\\<not> ?A \\<approx>\\<^sub>v ?B \\<and> \\<not> ?A \\<approx>\\<^sub>v ?C \\<and> \\<not> ?B \\<approx>\\<^sub>v ?C\""], ["proof (prove)\nusing this:\n  Re (D / A) < 0\n\ngoal (1 subgoal):\n 1. \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n           (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n    \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n           (rcis (sqrt (Re (- D / A))) pi, 1) \\<and>\n    \\<not> (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<approx>\\<^sub>v\n           (rcis (sqrt (Re (- D / A))) pi, 1)", "unfolding rcis_def"], ["proof (prove)\nusing this:\n  Re (D / A) < 0\n\ngoal (1 subgoal):\n 1. \\<not> (cor (sqrt (Re (- D / A))) * cis 0, 1) \\<approx>\\<^sub>v\n           (cor (sqrt (Re (- D / A))) * cis (pi / 2), 1) \\<and>\n    \\<not> (cor (sqrt (Re (- D / A))) * cis 0, 1) \\<approx>\\<^sub>v\n           (cor (sqrt (Re (- D / A))) * cis pi, 1) \\<and>\n    \\<not> (cor (sqrt (Re (- D / A))) * cis (pi / 2), 1) \\<approx>\\<^sub>v\n           (cor (sqrt (Re (- D / A))) * cis pi, 1)", "by (auto simp add: cis_def complex.corec)"], ["proof (state)\nthis:\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "moreover"], ["proof (state)\nthis:\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "have \"?A \\<noteq> vec_zero\" \"?B \\<noteq> vec_zero\" \"?C \\<noteq> vec_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rcis (sqrt (Re (- D / A))) 0, 1) \\<noteq> vec_zero &&&\n    (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<noteq> vec_zero &&&\n    (rcis (sqrt (Re (- D / A))) pi, 1) \\<noteq> vec_zero", "by auto"], ["proof (state)\nthis:\n  (rcis (sqrt (Re (- D / A))) 0, 1) \\<noteq> vec_zero\n  (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<noteq> vec_zero\n  (rcis (sqrt (Re (- D / A))) pi, 1) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        circline_type_cmat H < 0; is_diag_circline_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n                               \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n                                  \\<not> A \\<approx>\\<^sub>v B \\<and>\n                                  \\<not> A \\<approx>\\<^sub>v C \\<and>\n                                  \\<not> B \\<approx>\\<^sub>v C \\<and>\n                                  on_circline_cmat_cvec H A \\<and>\n                                  on_circline_cmat_cvec H B \\<and>\n                                  on_circline_cmat_cvec H C", "ultimately"], ["proof (chain)\npicking this:\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) 0, 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) pi, 1)\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1)\n  (rcis (sqrt (Re (- D / A))) 0, 1) \\<noteq> vec_zero\n  (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<noteq> vec_zero\n  (rcis (sqrt (Re (- D / A))) pi, 1) \\<noteq> vec_zero", "show \"\\<exists>A\\<in>{v. v \\<noteq> vec_zero}. \\<exists>B\\<in>{v. v \\<noteq> vec_zero}. \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n            \\<not> A \\<approx>\\<^sub>v B \\<and> \\<not> A \\<approx>\\<^sub>v C \\<and> \\<not> B \\<approx>\\<^sub>v C \\<and>\n            on_circline_cmat_cvec H A \\<and> on_circline_cmat_cvec H B \\<and> on_circline_cmat_cvec H C\""], ["proof (prove)\nusing this:\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) 0, 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  on_circline_cmat_cvec H (rcis (sqrt (Re (- D / A))) pi, 1)\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) 0, 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1) \\<and>\n  \\<not> (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<approx>\\<^sub>v\n         (rcis (sqrt (Re (- D / A))) pi, 1)\n  (rcis (sqrt (Re (- D / A))) 0, 1) \\<noteq> vec_zero\n  (rcis (sqrt (Re (- D / A))) (pi / 2), 1) \\<noteq> vec_zero\n  (rcis (sqrt (Re (- D / A))) pi, 1) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n       \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n          \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n             \\<not> A \\<approx>\\<^sub>v B \\<and>\n             \\<not> A \\<approx>\\<^sub>v C \\<and>\n             \\<not> B \\<approx>\\<^sub>v C \\<and>\n             on_circline_cmat_cvec H A \\<and>\n             on_circline_cmat_cvec H B \\<and> on_circline_cmat_cvec H C", "by blast"], ["proof (state)\nthis:\n  \\<exists>A\\<in>{v. v \\<noteq> vec_zero}.\n     \\<exists>B\\<in>{v. v \\<noteq> vec_zero}.\n        \\<exists>C\\<in>{v. v \\<noteq> vec_zero}.\n           \\<not> A \\<approx>\\<^sub>v B \\<and>\n           \\<not> A \\<approx>\\<^sub>v C \\<and>\n           \\<not> B \\<approx>\\<^sub>v C \\<and>\n           on_circline_cmat_cvec H A \\<and>\n           on_circline_cmat_cvec H B \\<and> on_circline_cmat_cvec H C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_type_neg_card_gt3:\n  assumes \"circline_type H < 0\"\n  shows \"\\<exists> A B C. A \\<noteq> B \\<and> A \\<noteq> C \\<and> B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "obtain M H' where \"moebius_circline M H = H'\" \"circline_diag H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M H'.\n        \\<lbrakk>moebius_circline M H = H'; circline_diag H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_diagonalize[of H] assms"], ["proof (prove)\nusing this:\n  \\<exists>M H'. moebius_circline M H = H' \\<and> circline_diag H'\n  circline_type H < 0\n\ngoal (1 subgoal):\n 1. (\\<And>M H'.\n        \\<lbrakk>moebius_circline M H = H'; circline_diag H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "moreover"], ["proof (state)\nthis:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "hence \"circline_type H' < 0\""], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. circline_type H' < 0", "using assms moebius_preserve_circline_type"], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  circline_type H < 0\n  circline_type (moebius_circline ?M ?H) = circline_type ?H\n\ngoal (1 subgoal):\n 1. circline_type H' < 0", "by auto"], ["proof (state)\nthis:\n  circline_type H' < 0\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "ultimately"], ["proof (chain)\npicking this:\n  moebius_circline M H = H'\n  circline_diag H'\n  circline_type H' < 0", "obtain A B C where \"A \\<noteq> B\" \"A \\<noteq> C\" \"B \\<noteq> C\" \"{A, B, C} \\<subseteq> circline_set H'\""], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  circline_type H' < 0\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C;\n         {A, B, C} \\<subseteq> circline_set H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_type_neg_card_gt3_diag[of H']"], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  circline_type H' < 0\n  \\<lbrakk>circline_type H' < 0; circline_diag H'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A B C.\n                       A \\<noteq> B \\<and>\n                       A \\<noteq> C \\<and>\n                       B \\<noteq> C \\<and>\n                       {A, B, C} \\<subseteq> circline_set H'\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C;\n         {A, B, C} \\<subseteq> circline_set H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  {A, B, C} \\<subseteq> circline_set H'\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "let ?iM = \"moebius_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "have \"moebius_circline ?iM H' = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_inv M) H' = H", "using \\<open>moebius_circline M H = H'\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  H' = moebius_circline M H\n\ngoal (1 subgoal):\n 1. moebius_circline (moebius_inv M) H' = H", "by simp"], ["proof (state)\nthis:\n  moebius_circline (moebius_inv M) H' = H\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "let ?A = \"moebius_pt ?iM A\" and ?B= \"moebius_pt ?iM B\" and ?C = \"moebius_pt ?iM C\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "have \"?A \\<in> circline_set H\"  \"?B \\<in> circline_set H\"  \"?C \\<in> circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) A \\<in> circline_set H &&&\n    moebius_pt (moebius_inv M) B \\<in> circline_set H &&&\n    moebius_pt (moebius_inv M) C \\<in> circline_set H", "using \\<open>moebius_circline ?iM H' = H\\<close>[symmetric] \\<open>{A, B, C} \\<subseteq> circline_set H'\\<close>"], ["proof (prove)\nusing this:\n  H = moebius_circline (moebius_inv M) H'\n  {A, B, C} \\<subseteq> circline_set H'\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) A \\<in> circline_set H &&&\n    moebius_pt (moebius_inv M) B \\<in> circline_set H &&&\n    moebius_pt (moebius_inv M) C \\<in> circline_set H", "by simp_all"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) A \\<in> circline_set H\n  moebius_pt (moebius_inv M) B \\<in> circline_set H\n  moebius_pt (moebius_inv M) C \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "moreover"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) A \\<in> circline_set H\n  moebius_pt (moebius_inv M) B \\<in> circline_set H\n  moebius_pt (moebius_inv M) C \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "have \"?A \\<noteq> ?B\" \"?A \\<noteq> ?C\" \"?B \\<noteq> ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) B &&&\n    moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) C &&&\n    moebius_pt (moebius_inv M) B \\<noteq> moebius_pt (moebius_inv M) C", "using \\<open>A \\<noteq> B\\<close> \\<open>A \\<noteq> C\\<close> \\<open>B \\<noteq> C\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) B &&&\n    moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) C &&&\n    moebius_pt (moebius_inv M) B \\<noteq> moebius_pt (moebius_inv M) C", "by auto"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) B\n  moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) C\n  moebius_pt (moebius_inv M) B \\<noteq> moebius_pt (moebius_inv M) C\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "ultimately"], ["proof (chain)\npicking this:\n  moebius_pt (moebius_inv M) A \\<in> circline_set H\n  moebius_pt (moebius_inv M) B \\<in> circline_set H\n  moebius_pt (moebius_inv M) C \\<in> circline_set H\n  moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) B\n  moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) C\n  moebius_pt (moebius_inv M) B \\<noteq> moebius_pt (moebius_inv M) C", "show ?thesis"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_inv M) A \\<in> circline_set H\n  moebius_pt (moebius_inv M) B \\<in> circline_set H\n  moebius_pt (moebius_inv M) C \\<in> circline_set H\n  moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) B\n  moebius_pt (moebius_inv M) A \\<noteq> moebius_pt (moebius_inv M) C\n  moebius_pt (moebius_inv M) B \\<noteq> moebius_pt (moebius_inv M) C\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       A \\<noteq> C \\<and>\n       B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H", "by auto"], ["proof (state)\nthis:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     A \\<noteq> C \\<and>\n     B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Positive type circline set cardinality\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma circline_type_pos_card_eq0_diag:\n  assumes \"circline_diag H\" and \"circline_type H > 0\"\n  shows \"circline_set H = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H = {}", "using assms"], ["proof (prove)\nusing this:\n  circline_diag H\n  0 < circline_type H\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  circline_diag H\n  0 < circline_type H\n\ngoal (1 subgoal):\n 1. Collect (on_circline H) = {}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>circline_diag H; 0 < circline_type H\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. \\<not> on_circline H x", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "hence HH_elems: \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using hermitean_elems[of A B C D] hh"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "assume \"is_diag_circline_cmat H\" \"0 < circline_type_cmat H\""], ["proof (state)\nthis:\n  is_diag_circline_cmat H\n  0 < circline_type_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "hence \"B = 0\" \"C = 0\" \"Re A * Re D > 0\" \"A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  is_diag_circline_cmat H\n  0 < circline_type_cmat H\n\ngoal (1 subgoal):\n 1. (B = 0 &&& C = 0) &&& 0 < Re A * Re D &&& A \\<noteq> 0", "using HH \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  is_diag_circline_cmat H\n  0 < circline_type_cmat H\n  H = (A, B, C, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. (B = 0 &&& C = 0) &&& 0 < Re A * Re D &&& A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  B = 0\n  C = 0\n  0 < Re A * Re D\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        is_diag_circline_cmat H; 0 < circline_type_cmat H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n                            \\<not> on_circline_cmat_cvec H x", "show \"\\<forall>x\\<in>{v. v \\<noteq> vec_zero}. \\<not> on_circline_cmat_cvec H x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{v. v \\<noteq> vec_zero}.\n       \\<not> on_circline_cmat_cvec H x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "assume \"x \\<in> {v. v \\<noteq> vec_zero}\""], ["proof (state)\nthis:\n  x \\<in> {v. v \\<noteq> vec_zero}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "obtain x1 x2 where xx: \"x = (x1, x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 x2. x = (x1, x2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases x, auto)"], ["proof (state)\nthis:\n  x = (x1, x2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "have \"(Re A > 0 \\<and> Re D > 0) \\<or> (Re A < 0 \\<and> Re D < 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re A \\<and> 0 < Re D \\<or> Re A < 0 \\<and> Re D < 0", "using \\<open>Re A * Re D > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < Re A * Re D\n\ngoal (1 subgoal):\n 1. 0 < Re A \\<and> 0 < Re D \\<or> Re A < 0 \\<and> Re D < 0", "by (metis linorder_neqE_linordered_idom mult_eq_0_iff zero_less_mult_pos zero_less_mult_pos2)"], ["proof (state)\nthis:\n  0 < Re A \\<and> 0 < Re D \\<or> Re A < 0 \\<and> Re D < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "moreover"], ["proof (state)\nthis:\n  0 < Re A \\<and> 0 < Re D \\<or> Re A < 0 \\<and> Re D < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "have \"(Re (x1 * cnj x1) \\<ge> 0 \\<and> Re (x2 * cnj x2) > 0) \\<or> (Re (x1 * cnj x1) > 0 \\<and> Re (x2 * cnj x2) \\<ge> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (x1 * cnj x1) \\<and> 0 < Re (x2 * cnj x2) \\<or>\n    0 < Re (x1 * cnj x1) \\<and> 0 \\<le> Re (x2 * cnj x2)", "using \\<open>x \\<in> {v. v \\<noteq> vec_zero}\\<close> xx"], ["proof (prove)\nusing this:\n  x \\<in> {v. v \\<noteq> vec_zero}\n  x = (x1, x2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (x1 * cnj x1) \\<and> 0 < Re (x2 * cnj x2) \\<or>\n    0 < Re (x1 * cnj x1) \\<and> 0 \\<le> Re (x2 * cnj x2)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = (x1, x2); \\<not> 0 < Re x1 * Re x1 + Im x1 * Im x1;\n     x1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < Re x2 * Re x2 + Im x2 * Im x2\n 2. \\<lbrakk>x = (x1, x2); \\<not> 0 < Re x1 * Re x1 + Im x1 * Im x1;\n     x2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < Re x2 * Re x2 + Im x2 * Im x2", "apply (simp add: complex_neq_0 power2_eq_square)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 \\<le> Re (x1 * cnj x1) \\<and> 0 < Re (x2 * cnj x2) \\<or>\n  0 < Re (x1 * cnj x1) \\<and> 0 \\<le> Re (x2 * cnj x2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "ultimately"], ["proof (chain)\npicking this:\n  0 < Re A \\<and> 0 < Re D \\<or> Re A < 0 \\<and> Re D < 0\n  0 \\<le> Re (x1 * cnj x1) \\<and> 0 < Re (x2 * cnj x2) \\<or>\n  0 < Re (x1 * cnj x1) \\<and> 0 \\<le> Re (x2 * cnj x2)", "have \"Re A * Re (x1 * cnj x1) + Re D * Re (x2 * cnj x2) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < Re A \\<and> 0 < Re D \\<or> Re A < 0 \\<and> Re D < 0\n  0 \\<le> Re (x1 * cnj x1) \\<and> 0 < Re (x2 * cnj x2) \\<or>\n  0 < Re (x1 * cnj x1) \\<and> 0 \\<le> Re (x2 * cnj x2)\n\ngoal (1 subgoal):\n 1. Re A * Re (x1 * cnj x1) + Re D * Re (x2 * cnj x2) \\<noteq> 0", "by (smt mult_neg_pos mult_nonneg_nonneg mult_nonpos_nonneg mult_pos_pos)"], ["proof (state)\nthis:\n  Re A * Re (x1 * cnj x1) + Re D * Re (x2 * cnj x2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "hence \"A * (x1 * cnj x1) + D * (x2 * cnj x2) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  Re A * Re (x1 * cnj x1) + Re D * Re (x2 * cnj x2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. A * (x1 * cnj x1) + D * (x2 * cnj x2) \\<noteq> 0", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re (x1 * cnj x1) + Re D * Re (x2 * cnj x2) \\<noteq> 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. A * (x1 * cnj x1) + D * (x2 * cnj x2) \\<noteq> 0", "by (metis Re_mult_real plus_complex.simps(1) zero_complex.simps(1))"], ["proof (state)\nthis:\n  A * (x1 * cnj x1) + D * (x2 * cnj x2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. v \\<noteq> vec_zero} \\<Longrightarrow>\n       \\<not> on_circline_cmat_cvec H x", "thus \"\\<not> on_circline_cmat_cvec H x\""], ["proof (prove)\nusing this:\n  A * (x1 * cnj x1) + D * (x2 * cnj x2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> on_circline_cmat_cvec H x", "using HH \\<open>B = 0\\<close> \\<open>C = 0\\<close> xx"], ["proof (prove)\nusing this:\n  A * (x1 * cnj x1) + D * (x2 * cnj x2) \\<noteq> 0\n  H = (A, B, C, D)\n  B = 0\n  C = 0\n  x = (x1, x2)\n\ngoal (1 subgoal):\n 1. \\<not> on_circline_cmat_cvec H x", "by (simp add: vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  \\<not> on_circline_cmat_cvec H x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{v. v \\<noteq> vec_zero}. \\<not> on_circline_cmat_cvec H x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_type_pos_card_eq0:\n  assumes \"circline_type H > 0\"\n  shows \"circline_set H = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set H = {}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H = {}", "obtain M H' where \"moebius_circline M H = H'\" \"circline_diag H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M H'.\n        \\<lbrakk>moebius_circline M H = H'; circline_diag H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_diagonalize[of H] assms"], ["proof (prove)\nusing this:\n  \\<exists>M H'. moebius_circline M H = H' \\<and> circline_diag H'\n  0 < circline_type H\n\ngoal (1 subgoal):\n 1. (\\<And>M H'.\n        \\<lbrakk>moebius_circline M H = H'; circline_diag H'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "moreover"], ["proof (state)\nthis:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "hence \"circline_type H' > 0\""], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n\ngoal (1 subgoal):\n 1. 0 < circline_type H'", "using assms moebius_preserve_circline_type"], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  0 < circline_type H\n  circline_type (moebius_circline ?M ?H) = circline_type ?H\n\ngoal (1 subgoal):\n 1. 0 < circline_type H'", "by auto"], ["proof (state)\nthis:\n  0 < circline_type H'\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "ultimately"], ["proof (chain)\npicking this:\n  moebius_circline M H = H'\n  circline_diag H'\n  0 < circline_type H'", "have \"circline_set H' = {}\""], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  0 < circline_type H'\n\ngoal (1 subgoal):\n 1. circline_set H' = {}", "using circline_type_pos_card_eq0_diag[of H']"], ["proof (prove)\nusing this:\n  moebius_circline M H = H'\n  circline_diag H'\n  0 < circline_type H'\n  \\<lbrakk>circline_diag H'; 0 < circline_type H'\\<rbrakk>\n  \\<Longrightarrow> circline_set H' = {}\n\ngoal (1 subgoal):\n 1. circline_set H' = {}", "by auto"], ["proof (state)\nthis:\n  circline_set H' = {}\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "let ?iM = \"moebius_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. circline_set H = {}", "have \"moebius_circline ?iM H' = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_inv M) H' = H", "using \\<open>moebius_circline M H = H'\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  H' = moebius_circline M H\n\ngoal (1 subgoal):\n 1. moebius_circline (moebius_inv M) H' = H", "by simp"], ["proof (state)\nthis:\n  moebius_circline (moebius_inv M) H' = H\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_circline (moebius_inv M) H' = H\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "using \\<open>circline_set H' = {}\\<close>"], ["proof (prove)\nusing this:\n  moebius_circline (moebius_inv M) H' = H\n  circline_set H' = {}\n\ngoal (1 subgoal):\n 1. circline_set H = {}", "by auto"], ["proof (state)\nthis:\n  circline_set H = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Cardinality determines type\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma card_eq1_circline_type_zero:\n  assumes \"\\<exists> z. circline_set H = {z}\"\n  shows \"circline_type H = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type H = 0", "proof (cases \"circline_type H < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. circline_type H < 0 \\<Longrightarrow> circline_type H = 0\n 2. \\<not> circline_type H < 0 \\<Longrightarrow> circline_type H = 0", "case True"], ["proof (state)\nthis:\n  circline_type H < 0\n\ngoal (2 subgoals):\n 1. circline_type H < 0 \\<Longrightarrow> circline_type H = 0\n 2. \\<not> circline_type H < 0 \\<Longrightarrow> circline_type H = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  circline_type H < 0\n\ngoal (1 subgoal):\n 1. circline_type H = 0", "using circline_type_neg_card_gt3[of H] assms"], ["proof (prove)\nusing this:\n  circline_type H < 0\n  circline_type H < 0 \\<Longrightarrow>\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     A \\<noteq> C \\<and>\n     B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\n  \\<exists>z. circline_set H = {z}\n\ngoal (1 subgoal):\n 1. circline_type H = 0", "by auto"], ["proof (state)\nthis:\n  circline_type H = 0\n\ngoal (1 subgoal):\n 1. \\<not> circline_type H < 0 \\<Longrightarrow> circline_type H = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> circline_type H < 0 \\<Longrightarrow> circline_type H = 0", "case False"], ["proof (state)\nthis:\n  \\<not> circline_type H < 0\n\ngoal (1 subgoal):\n 1. \\<not> circline_type H < 0 \\<Longrightarrow> circline_type H = 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_type H = 0", "proof (cases \"circline_type H > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < circline_type H \\<Longrightarrow> circline_type H = 0\n 2. \\<not> 0 < circline_type H \\<Longrightarrow> circline_type H = 0", "case True"], ["proof (state)\nthis:\n  0 < circline_type H\n\ngoal (2 subgoals):\n 1. 0 < circline_type H \\<Longrightarrow> circline_type H = 0\n 2. \\<not> 0 < circline_type H \\<Longrightarrow> circline_type H = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < circline_type H\n\ngoal (1 subgoal):\n 1. circline_type H = 0", "using circline_type_pos_card_eq0[of H] assms"], ["proof (prove)\nusing this:\n  0 < circline_type H\n  0 < circline_type H \\<Longrightarrow> circline_set H = {}\n  \\<exists>z. circline_set H = {z}\n\ngoal (1 subgoal):\n 1. circline_type H = 0", "by auto"], ["proof (state)\nthis:\n  circline_type H = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < circline_type H \\<Longrightarrow> circline_type H = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < circline_type H \\<Longrightarrow> circline_type H = 0", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < circline_type H\n\ngoal (1 subgoal):\n 1. \\<not> 0 < circline_type H \\<Longrightarrow> circline_type H = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> 0 < circline_type H\n\ngoal (1 subgoal):\n 1. circline_type H = 0", "using \\<open>\\<not> (circline_type H) < 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 < circline_type H\n  \\<not> circline_type H < 0\n\ngoal (1 subgoal):\n 1. circline_type H = 0", "by simp"], ["proof (state)\nthis:\n  circline_type H = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  circline_type H = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Circline set is injective\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma inj_circline_set:\n  assumes \"circline_set H = circline_set H'\" and \"circline_set H \\<noteq> {}\"\n  shows \"H = H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = H'", "proof (cases \"circline_type H < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. circline_type H < 0 \\<Longrightarrow> H = H'\n 2. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "case True"], ["proof (state)\nthis:\n  circline_type H < 0\n\ngoal (2 subgoals):\n 1. circline_type H < 0 \\<Longrightarrow> H = H'\n 2. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "then"], ["proof (chain)\npicking this:\n  circline_type H < 0", "obtain A B C where \"A \\<noteq> B\" \"A \\<noteq> C\" \"B \\<noteq> C\" \"{A, B, C} \\<subseteq> circline_set H\""], ["proof (prove)\nusing this:\n  circline_type H < 0\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C;\n         {A, B, C} \\<subseteq> circline_set H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_type_neg_card_gt3[of H]"], ["proof (prove)\nusing this:\n  circline_type H < 0\n  circline_type H < 0 \\<Longrightarrow>\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     A \\<noteq> C \\<and>\n     B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C;\n         {A, B, C} \\<subseteq> circline_set H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  {A, B, C} \\<subseteq> circline_set H\n\ngoal (2 subgoals):\n 1. circline_type H < 0 \\<Longrightarrow> H = H'\n 2. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "hence \"\\<exists>!H. A \\<in> circline_set H \\<and> B \\<in> circline_set H \\<and> C \\<in> circline_set H\""], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  {A, B, C} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "using unique_circline_set[of A B C]"], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  {A, B, C} \\<subseteq> circline_set H\n  \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!H.\n                       A \\<in> circline_set H \\<and>\n                       B \\<in> circline_set H \\<and> C \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       A \\<in> circline_set H \\<and>\n       B \\<in> circline_set H \\<and> C \\<in> circline_set H", "by simp"], ["proof (state)\nthis:\n  \\<exists>!H.\n     A \\<in> circline_set H \\<and>\n     B \\<in> circline_set H \\<and> C \\<in> circline_set H\n\ngoal (2 subgoals):\n 1. circline_type H < 0 \\<Longrightarrow> H = H'\n 2. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>!H.\n     A \\<in> circline_set H \\<and>\n     B \\<in> circline_set H \\<and> C \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. H = H'", "using \\<open>circline_set H = circline_set H'\\<close> \\<open>{A, B, C} \\<subseteq> circline_set H\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>!H.\n     A \\<in> circline_set H \\<and>\n     B \\<in> circline_set H \\<and> C \\<in> circline_set H\n  circline_set H = circline_set H'\n  {A, B, C} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. H = H'", "by auto"], ["proof (state)\nthis:\n  H = H'\n\ngoal (1 subgoal):\n 1. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "case False"], ["proof (state)\nthis:\n  \\<not> circline_type H < 0\n\ngoal (1 subgoal):\n 1. \\<not> circline_type H < 0 \\<Longrightarrow> H = H'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. H = H'", "proof (cases \"circline_type H = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. circline_type H = 0 \\<Longrightarrow> H = H'\n 2. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "case True"], ["proof (state)\nthis:\n  circline_type H = 0\n\ngoal (2 subgoals):\n 1. circline_type H = 0 \\<Longrightarrow> H = H'\n 2. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "moreover"], ["proof (state)\nthis:\n  circline_type H = 0\n\ngoal (2 subgoals):\n 1. circline_type H = 0 \\<Longrightarrow> H = H'\n 2. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "then"], ["proof (chain)\npicking this:\n  circline_type H = 0", "obtain A where \"{A} = circline_set H\""], ["proof (prove)\nusing this:\n  circline_type H = 0\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        {A} = circline_set H \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_type_zero_card_eq1[of H]"], ["proof (prove)\nusing this:\n  circline_type H = 0\n  circline_type H = 0 \\<Longrightarrow> \\<exists>z. circline_set H = {z}\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        {A} = circline_set H \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  {A} = circline_set H\n\ngoal (2 subgoals):\n 1. circline_type H = 0 \\<Longrightarrow> H = H'\n 2. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "moreover"], ["proof (state)\nthis:\n  {A} = circline_set H\n\ngoal (2 subgoals):\n 1. circline_type H = 0 \\<Longrightarrow> H = H'\n 2. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "hence \"circline_type H' = 0\""], ["proof (prove)\nusing this:\n  {A} = circline_set H\n\ngoal (1 subgoal):\n 1. circline_type H' = 0", "using \\<open>circline_set H = circline_set H'\\<close> card_eq1_circline_type_zero[of H']"], ["proof (prove)\nusing this:\n  {A} = circline_set H\n  circline_set H = circline_set H'\n  \\<exists>z. circline_set H' = {z} \\<Longrightarrow> circline_type H' = 0\n\ngoal (1 subgoal):\n 1. circline_type H' = 0", "by auto"], ["proof (state)\nthis:\n  circline_type H' = 0\n\ngoal (2 subgoals):\n 1. circline_type H = 0 \\<Longrightarrow> H = H'\n 2. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "ultimately"], ["proof (chain)\npicking this:\n  circline_type H = 0\n  {A} = circline_set H\n  circline_type H' = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  circline_type H = 0\n  {A} = circline_set H\n  circline_type H' = 0\n\ngoal (1 subgoal):\n 1. H = H'", "using unique_circline_type_zero[of A] \\<open>circline_set H = circline_set H'\\<close>"], ["proof (prove)\nusing this:\n  circline_type H = 0\n  {A} = circline_set H\n  circline_type H' = 0\n  \\<exists>!H. circline_type H = 0 \\<and> A \\<in> circline_set H\n  circline_set H = circline_set H'\n\ngoal (1 subgoal):\n 1. H = H'", "by auto"], ["proof (state)\nthis:\n  H = H'\n\ngoal (1 subgoal):\n 1. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "case False"], ["proof (state)\nthis:\n  circline_type H \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "hence \"circline_type H > 0\""], ["proof (prove)\nusing this:\n  circline_type H \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < circline_type H", "using \\<open>\\<not> (circline_type H < 0)\\<close>"], ["proof (prove)\nusing this:\n  circline_type H \\<noteq> 0\n  \\<not> circline_type H < 0\n\ngoal (1 subgoal):\n 1. 0 < circline_type H", "by auto"], ["proof (state)\nthis:\n  0 < circline_type H\n\ngoal (1 subgoal):\n 1. circline_type H \\<noteq> 0 \\<Longrightarrow> H = H'", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < circline_type H\n\ngoal (1 subgoal):\n 1. H = H'", "using \\<open>circline_set H \\<noteq> {}\\<close>  circline_type_pos_card_eq0[of H]"], ["proof (prove)\nusing this:\n  0 < circline_type H\n  circline_set H \\<noteq> {}\n  0 < circline_type H \\<Longrightarrow> circline_set H = {}\n\ngoal (1 subgoal):\n 1. H = H'", "by auto"], ["proof (state)\nthis:\n  H = H'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H = H'\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Circline points - cross ratio real\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma four_points_on_circline_iff_cross_ratio_real:\n  assumes \"distinct [z, u, v, w]\"\n  shows \"is_real (to_complex (cross_ratio z u v w)) \\<longleftrightarrow> \n         (\\<exists> H. {z, u, v, w} \\<subseteq> circline_set H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (to_complex (cross_ratio z u v w)) =\n    (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_real (to_complex (cross_ratio z u v w)) =\n    (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)", "have \"\\<forall> z. distinct [z, u, v, w] \\<longrightarrow> is_real (to_complex (cross_ratio z u v w)) \\<longleftrightarrow> (\\<exists> H. {z, u, v, w} \\<subseteq> circline_set H)\"\n       (is \"?P u v w\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z.\n       distinct [z, u, v, w] \\<longrightarrow>\n       is_real (to_complex (cross_ratio z u v w)) =\n       (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)", "proof (rule wlog_moebius_01inf[of ?P u v w])"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)\n 2. u \\<noteq> v\n 3. v \\<noteq> w\n 4. u \\<noteq> w\n 5. \\<And>M a b c.\n       \\<forall>z.\n          distinct [z, a, b, c] \\<longrightarrow>\n          is_real (to_complex (cross_ratio z a b c)) =\n          (\\<exists>H.\n              {z, a, b, c} \\<subseteq> circline_set H) \\<Longrightarrow>\n       \\<forall>z.\n          distinct\n           [z, moebius_pt M a, moebius_pt M b,\n            moebius_pt M c] \\<longrightarrow>\n          is_real\n           (to_complex\n             (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n               (moebius_pt M c))) =\n          (\\<exists>H.\n              {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n              \\<subseteq> circline_set H)", "fix M a b c"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)\n 2. u \\<noteq> v\n 3. v \\<noteq> w\n 4. u \\<noteq> w\n 5. \\<And>M a b c.\n       \\<forall>z.\n          distinct [z, a, b, c] \\<longrightarrow>\n          is_real (to_complex (cross_ratio z a b c)) =\n          (\\<exists>H.\n              {z, a, b, c} \\<subseteq> circline_set H) \\<Longrightarrow>\n       \\<forall>z.\n          distinct\n           [z, moebius_pt M a, moebius_pt M b,\n            moebius_pt M c] \\<longrightarrow>\n          is_real\n           (to_complex\n             (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n               (moebius_pt M c))) =\n          (\\<exists>H.\n              {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n              \\<subseteq> circline_set H)", "assume aa: \"?P a b c\""], ["proof (state)\nthis:\n  \\<forall>z.\n     distinct [z, a, b, c] \\<longrightarrow>\n     is_real (to_complex (cross_ratio z a b c)) =\n     (\\<exists>H. {z, a, b, c} \\<subseteq> circline_set H)\n\ngoal (5 subgoals):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)\n 2. u \\<noteq> v\n 3. v \\<noteq> w\n 4. u \\<noteq> w\n 5. \\<And>M a b c.\n       \\<forall>z.\n          distinct [z, a, b, c] \\<longrightarrow>\n          is_real (to_complex (cross_ratio z a b c)) =\n          (\\<exists>H.\n              {z, a, b, c} \\<subseteq> circline_set H) \\<Longrightarrow>\n       \\<forall>z.\n          distinct\n           [z, moebius_pt M a, moebius_pt M b,\n            moebius_pt M c] \\<longrightarrow>\n          is_real\n           (to_complex\n             (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n               (moebius_pt M c))) =\n          (\\<exists>H.\n              {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n              \\<subseteq> circline_set H)", "let ?Ma = \"moebius_pt M a\" and ?Mb = \"moebius_pt M b\" and ?Mc = \"moebius_pt M c\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)\n 2. u \\<noteq> v\n 3. v \\<noteq> w\n 4. u \\<noteq> w\n 5. \\<And>M a b c.\n       \\<forall>z.\n          distinct [z, a, b, c] \\<longrightarrow>\n          is_real (to_complex (cross_ratio z a b c)) =\n          (\\<exists>H.\n              {z, a, b, c} \\<subseteq> circline_set H) \\<Longrightarrow>\n       \\<forall>z.\n          distinct\n           [z, moebius_pt M a, moebius_pt M b,\n            moebius_pt M c] \\<longrightarrow>\n          is_real\n           (to_complex\n             (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n               (moebius_pt M c))) =\n          (\\<exists>H.\n              {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n              \\<subseteq> circline_set H)", "show \"?P ?Ma ?Mb ?Mc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "proof (rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "obtain d where *: \"z = moebius_pt M d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d. z = moebius_pt M d \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using bij_moebius_pt[of M]"], ["proof (prove)\nusing this:\n  bij (moebius_pt M)\n\ngoal (1 subgoal):\n 1. (\\<And>d. z = moebius_pt M d \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding bij_def"], ["proof (prove)\nusing this:\n  inj (moebius_pt M) \\<and> surj (moebius_pt M)\n\ngoal (1 subgoal):\n 1. (\\<And>d. z = moebius_pt M d \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = moebius_pt M d\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "let ?Md = \"moebius_pt M d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "assume \"distinct [z, moebius_pt M a, moebius_pt M b, moebius_pt M c]\""], ["proof (state)\nthis:\n  distinct [z, moebius_pt M a, moebius_pt M b, moebius_pt M c]\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "hence \"distinct [a, b, c, d]\""], ["proof (prove)\nusing this:\n  distinct [z, moebius_pt M a, moebius_pt M b, moebius_pt M c]\n\ngoal (1 subgoal):\n 1. distinct [a, b, c, d]", "using *"], ["proof (prove)\nusing this:\n  distinct [z, moebius_pt M a, moebius_pt M b, moebius_pt M c]\n  z = moebius_pt M d\n\ngoal (1 subgoal):\n 1. distinct [a, b, c, d]", "by auto"], ["proof (state)\nthis:\n  distinct [a, b, c, d]\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "moreover"], ["proof (state)\nthis:\n  distinct [a, b, c, d]\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "have \"(\\<exists> H. {d, a, b, c} \\<subseteq> circline_set H) \\<longleftrightarrow> (\\<exists> H. {z, ?Ma, ?Mb, ?Mc} \\<subseteq> circline_set H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H) =\n    (\\<exists>H.\n        {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n        \\<subseteq> circline_set H)", "using *"], ["proof (prove)\nusing this:\n  z = moebius_pt M d\n\ngoal (1 subgoal):\n 1. (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H) =\n    (\\<exists>H.\n        {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n        \\<subseteq> circline_set H)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>z = moebius_pt M d; d \\<in> circline_set H;\n        a \\<in> circline_set H; b \\<in> circline_set H;\n        c \\<in> circline_set H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            moebius_pt M d \\<in> circline_set H \\<and>\n                            moebius_pt M a \\<in> circline_set H \\<and>\n                            moebius_pt M b \\<in> circline_set H \\<and>\n                            moebius_pt M c \\<in> circline_set H\n 2. \\<And>H.\n       \\<lbrakk>z = moebius_pt M d; moebius_pt M d \\<in> circline_set H;\n        moebius_pt M a \\<in> circline_set H;\n        moebius_pt M b \\<in> circline_set H;\n        moebius_pt M c \\<in> circline_set H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            d \\<in> circline_set H \\<and>\n                            a \\<in> circline_set H \\<and>\n                            b \\<in> circline_set H \\<and>\n                            c \\<in> circline_set H", "apply (rule_tac x=\"moebius_circline M H\" in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>z = moebius_pt M d; moebius_pt M d \\<in> circline_set H;\n        moebius_pt M a \\<in> circline_set H;\n        moebius_pt M b \\<in> circline_set H;\n        moebius_pt M c \\<in> circline_set H\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            d \\<in> circline_set H \\<and>\n                            a \\<in> circline_set H \\<and>\n                            b \\<in> circline_set H \\<and>\n                            c \\<in> circline_set H", "apply (rule_tac x=\"moebius_circline (moebius_inv M) H\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H) =\n  (\\<exists>H.\n      {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n      \\<subseteq> circline_set H)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       distinct\n        [z, moebius_pt M a, moebius_pt M b,\n         moebius_pt M c] \\<Longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n            (moebius_pt M c))) =\n       (\\<exists>H.\n           {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n           \\<subseteq> circline_set H)", "ultimately"], ["proof (chain)\npicking this:\n  distinct [a, b, c, d]\n  (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H) =\n  (\\<exists>H.\n      {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n      \\<subseteq> circline_set H)", "show \"is_real (to_complex (cross_ratio z ?Ma ?Mb ?Mc)) = (\\<exists>H. {z, ?Ma, ?Mb, ?Mc} \\<subseteq> circline_set H)\""], ["proof (prove)\nusing this:\n  distinct [a, b, c, d]\n  (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H) =\n  (\\<exists>H.\n      {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n      \\<subseteq> circline_set H)\n\ngoal (1 subgoal):\n 1. is_real\n     (to_complex\n       (cross_ratio z (moebius_pt M a) (moebius_pt M b) (moebius_pt M c))) =\n    (\\<exists>H.\n        {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n        \\<subseteq> circline_set H)", "using aa[rule_format, of d] *"], ["proof (prove)\nusing this:\n  distinct [a, b, c, d]\n  (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H) =\n  (\\<exists>H.\n      {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n      \\<subseteq> circline_set H)\n  distinct [d, a, b, c] \\<Longrightarrow>\n  is_real (to_complex (cross_ratio d a b c)) =\n  (\\<exists>H. {d, a, b, c} \\<subseteq> circline_set H)\n  z = moebius_pt M d\n\ngoal (1 subgoal):\n 1. is_real\n     (to_complex\n       (cross_ratio z (moebius_pt M a) (moebius_pt M b) (moebius_pt M c))) =\n    (\\<exists>H.\n        {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n        \\<subseteq> circline_set H)", "by auto"], ["proof (state)\nthis:\n  is_real\n   (to_complex\n     (cross_ratio z (moebius_pt M a) (moebius_pt M b) (moebius_pt M c))) =\n  (\\<exists>H.\n      {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n      \\<subseteq> circline_set H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z.\n     distinct\n      [z, moebius_pt M a, moebius_pt M b, moebius_pt M c] \\<longrightarrow>\n     is_real\n      (to_complex\n        (cross_ratio z (moebius_pt M a) (moebius_pt M b)\n          (moebius_pt M c))) =\n     (\\<exists>H.\n         {z, moebius_pt M a, moebius_pt M b, moebius_pt M c}\n         \\<subseteq> circline_set H)\n\ngoal (4 subgoals):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)\n 2. u \\<noteq> v\n 3. v \\<noteq> w\n 4. u \\<noteq> w", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)\n 2. u \\<noteq> v\n 3. v \\<noteq> w\n 4. u \\<noteq> w", "show \"?P 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z.\n       distinct\n        [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n       is_real\n        (to_complex\n          (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n       (\\<exists>H.\n           {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n           \\<subseteq> circline_set H)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "assume \"distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\""], ["proof (state)\nthis:\n  distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\n\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "hence \"z \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "assume \"is_real (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\""], ["proof (state)\nthis:\n  is_real\n   (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\n\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "hence \"is_real (to_complex z)\""], ["proof (prove)\nusing this:\n  is_real\n   (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\n\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "by simp"], ["proof (state)\nthis:\n  is_real (to_complex z)\n\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "hence \"z \\<in> circline_set x_axis\""], ["proof (prove)\nusing this:\n  is_real (to_complex z)\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set x_axis", "using of_complex_to_complex[symmetric, OF \\<open>z \\<noteq> \\<infinity>\\<^sub>h\\<close>]"], ["proof (prove)\nusing this:\n  is_real (to_complex z)\n  z = of_complex (to_complex z)\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set x_axis", "using circline_set_x_axis"], ["proof (prove)\nusing this:\n  is_real (to_complex z)\n  z = of_complex (to_complex z)\n  circline_set x_axis =\n  of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set x_axis", "by auto"], ["proof (state)\nthis:\n  z \\<in> circline_set x_axis\n\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        is_real\n         (to_complex\n           (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>H.\n                            {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n                            \\<subseteq> circline_set H\n 2. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "thus \"\\<exists>H. {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h} \\<subseteq> circline_set H\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>H.\n       {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n       \\<subseteq> circline_set H", "by (rule_tac x=x_axis in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>H.\n     {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n     \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "fix z H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "assume *: \"distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\" \"{z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h} \\<subseteq> circline_set H\""], ["proof (state)\nthis:\n  distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\n  {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "hence \"H = x_axis\""], ["proof (prove)\nusing this:\n  distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\n  {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. H = x_axis", "by auto"], ["proof (state)\nthis:\n  H = x_axis\n\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "hence \"z \\<in> circline_set x_axis\""], ["proof (prove)\nusing this:\n  H = x_axis\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set x_axis", "using *"], ["proof (prove)\nusing this:\n  H = x_axis\n  distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\n  {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set x_axis", "by auto"], ["proof (state)\nthis:\n  z \\<in> circline_set x_axis\n\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "hence \"is_real (to_complex z)\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set x_axis\n\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "using * circline_set_x_axis"], ["proof (prove)\nusing this:\n  z \\<in> circline_set x_axis\n  distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h]\n  {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h} \\<subseteq> circline_set H\n  circline_set x_axis =\n  of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}\n\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "by auto"], ["proof (state)\nthis:\n  is_real (to_complex z)\n\ngoal (1 subgoal):\n 1. \\<And>z H.\n       \\<lbrakk>distinct [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h];\n        {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n        \\<subseteq> circline_set H\\<rbrakk>\n       \\<Longrightarrow> is_real\n                          (to_complex\n                            (cross_ratio z 0\\<^sub>h 1\\<^sub>h\n                              \\<infinity>\\<^sub>h))", "thus \"is_real (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\""], ["proof (prove)\nusing this:\n  is_real (to_complex z)\n\ngoal (1 subgoal):\n 1. is_real\n     (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))", "by simp"], ["proof (state)\nthis:\n  is_real\n   (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z.\n     distinct\n      [z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h] \\<longrightarrow>\n     is_real\n      (to_complex (cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h)) =\n     (\\<exists>H.\n         {z, 0\\<^sub>h, 1\\<^sub>h, \\<infinity>\\<^sub>h}\n         \\<subseteq> circline_set H)\n\ngoal (3 subgoals):\n 1. u \\<noteq> v\n 2. v \\<noteq> w\n 3. u \\<noteq> w", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. u \\<noteq> v\n 2. v \\<noteq> w\n 3. u \\<noteq> w", "show \"u \\<noteq> v\" \"v \\<noteq> w\" \"u \\<noteq> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> v &&& v \\<noteq> w &&& u \\<noteq> w", "using assms"], ["proof (prove)\nusing this:\n  distinct [z, u, v, w]\n\ngoal (1 subgoal):\n 1. u \\<noteq> v &&& v \\<noteq> w &&& u \\<noteq> w", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> v\n  v \\<noteq> w\n  u \\<noteq> w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z.\n     distinct [z, u, v, w] \\<longrightarrow>\n     is_real (to_complex (cross_ratio z u v w)) =\n     (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)\n\ngoal (1 subgoal):\n 1. is_real (to_complex (cross_ratio z u v w)) =\n    (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>z.\n     distinct [z, u, v, w] \\<longrightarrow>\n     is_real (to_complex (cross_ratio z u v w)) =\n     (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)\n\ngoal (1 subgoal):\n 1. is_real (to_complex (cross_ratio z u v w)) =\n    (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>z.\n     distinct [z, u, v, w] \\<longrightarrow>\n     is_real (to_complex (cross_ratio z u v w)) =\n     (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)\n  distinct [z, u, v, w]\n\ngoal (1 subgoal):\n 1. is_real (to_complex (cross_ratio z u v w)) =\n    (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)", "by auto"], ["proof (state)\nthis:\n  is_real (to_complex (cross_ratio z u v w)) =\n  (\\<exists>H. {z, u, v, w} \\<subseteq> circline_set H)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Symmetric points wrt. circline\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>In the extended complex plane there are no substantial differences between circles and lines,\nso we will consider only one kind of relation and call two points \\emph{circline symmetric} if they\nare mapped to one another using either reflection or inversion over arbitrary line or circle. Points\nare symmetric iff the bilinear form of their representation vectors and matrix is zero.\\<close>"], ["", "definition circline_symmetric_cvec_cmat :: \"complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"circline_symmetric_cvec_cmat z1 z2 H \\<longleftrightarrow> bilinear_form z1 z2 H = 0\""], ["", "lift_definition circline_symmetric_hcoords_clmat :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> circline_mat \\<Rightarrow> bool\" is circline_symmetric_cvec_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition circline_symmetric :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> circline \\<Rightarrow> bool\" is circline_symmetric_hcoords_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 circline_mat1 circline_mat2.\n       \\<lbrakk>complex_homo_coords1 \\<approx> complex_homo_coords2;\n        complex_homo_coords3 \\<approx> complex_homo_coords4;\n        circline_eq_clmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> circline_symmetric_hcoords_clmat\n                          complex_homo_coords1 complex_homo_coords3\n                          circline_mat1 =\n                         circline_symmetric_hcoords_clmat\n                          complex_homo_coords2 complex_homo_coords4\n                          circline_mat2", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 circline_mat1 circline_mat2.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> circline_symmetric_cvec_cmat complex_homo_coords1\n                          complex_homo_coords3 circline_mat1 =\n                         circline_symmetric_cvec_cmat complex_homo_coords2\n                          complex_homo_coords4 circline_mat2", "apply (simp del: bilinear_form_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 circline_mat1 circline_mat2.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> (0, 0);\n        complex_homo_coords2 \\<noteq> (0, 0);\n        complex_homo_coords3 \\<noteq> (0, 0);\n        complex_homo_coords4 \\<noteq> (0, 0);\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> (0, 0, 0, 0);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           complex_homo_coords2 = k *\\<^sub>s\\<^sub>v complex_homo_coords1;\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           complex_homo_coords4 = k *\\<^sub>s\\<^sub>v complex_homo_coords3;\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           circline_mat2 = cor k *\\<^sub>s\\<^sub>m circline_mat1\\<rbrakk>\n       \\<Longrightarrow> (bilinear_form complex_homo_coords1\n                           complex_homo_coords3 circline_mat1 =\n                          0) =\n                         (bilinear_form complex_homo_coords2\n                           complex_homo_coords4 circline_mat2 =\n                          0)", "apply (erule exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 circline_mat1 circline_mat2 k ka kb.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> (0, 0);\n        complex_homo_coords2 \\<noteq> (0, 0);\n        complex_homo_coords3 \\<noteq> (0, 0);\n        complex_homo_coords4 \\<noteq> (0, 0);\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> (0, 0, 0, 0);\n        k \\<noteq> 0 \\<and>\n        complex_homo_coords2 = k *\\<^sub>s\\<^sub>v complex_homo_coords1;\n        ka \\<noteq> 0 \\<and>\n        complex_homo_coords4 = ka *\\<^sub>s\\<^sub>v complex_homo_coords3;\n        kb \\<noteq> 0 \\<and>\n        circline_mat2 = cor kb *\\<^sub>s\\<^sub>m circline_mat1\\<rbrakk>\n       \\<Longrightarrow> (bilinear_form complex_homo_coords1\n                           complex_homo_coords3 circline_mat1 =\n                          0) =\n                         (bilinear_form complex_homo_coords2\n                           complex_homo_coords4 circline_mat2 =\n                          0)", "apply (simp add: bilinear_form_scale_m bilinear_form_scale_v1 bilinear_form_scale_v2 del: vec_cnj_sv quad_form_def bilinear_form_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma symmetry_principle [simp]:\n  assumes \"circline_symmetric z1 z2 H\"\n  shows \"circline_symmetric (moebius_pt M z1) (moebius_pt M z2) (moebius_circline M H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_symmetric (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_circline M H)", "using assms"], ["proof (prove)\nusing this:\n  circline_symmetric z1 z2 H\n\ngoal (1 subgoal):\n 1. circline_symmetric (moebius_pt M z1) (moebius_pt M z2)\n     (moebius_circline M H)", "by (transfer, transfer, simp del: bilinear_form_def congruence_def)"], ["", "text \\<open>Symmetry wrt. @{term \"unit_circle\"}\\<close>"], ["", "lemma circline_symmetric_0inf_disc [simp]:\n  shows \"circline_symmetric 0\\<^sub>h \\<infinity>\\<^sub>h unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_symmetric 0\\<^sub>h \\<infinity>\\<^sub>h unit_circle", "by (transfer, transfer, simp add: vec_cnj_def)"], ["", "lemma circline_symmetric_inv_homo_disc [simp]:\n  shows \"circline_symmetric a (inversion a) unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_symmetric a (inversion a) unit_circle", "unfolding inversion_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_symmetric a ((conjugate \\<circ> reciprocal) a) unit_circle", "by (transfer, transfer) (case_tac a, auto simp add: vec_cnj_def)"], ["", "lemma circline_symmetric_inv_homo_disc':\n  assumes \"circline_symmetric a a' unit_circle\"\n  shows \"a' = inversion a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' = inversion a", "unfolding inversion_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a' = (conjugate \\<circ> reciprocal) a", "using assms"], ["proof (prove)\nusing this:\n  circline_symmetric a a' unit_circle\n\ngoal (1 subgoal):\n 1. a' = (conjugate \\<circ> reciprocal) a", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a \\<noteq> vec_zero; a' \\<noteq> vec_zero;\n        circline_symmetric_cvec_cmat a a' unit_circle_cmat;\n        circline_symmetric_hcoords_clmat aa a'a unit_circle_clmat\\<rbrakk>\n       \\<Longrightarrow> a' \\<approx>\\<^sub>v\n                         (conjugate_cvec \\<circ> reciprocal_cvec) a", "fix a a'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a \\<noteq> vec_zero; a' \\<noteq> vec_zero;\n        circline_symmetric_cvec_cmat a a' unit_circle_cmat;\n        circline_symmetric_hcoords_clmat aa a'a unit_circle_clmat\\<rbrakk>\n       \\<Longrightarrow> a' \\<approx>\\<^sub>v\n                         (conjugate_cvec \\<circ> reciprocal_cvec) a", "assume vz: \"a \\<noteq> vec_zero\" \"a' \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  a \\<noteq> vec_zero\n  a' \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a \\<noteq> vec_zero; a' \\<noteq> vec_zero;\n        circline_symmetric_cvec_cmat a a' unit_circle_cmat;\n        circline_symmetric_hcoords_clmat aa a'a unit_circle_clmat\\<rbrakk>\n       \\<Longrightarrow> a' \\<approx>\\<^sub>v\n                         (conjugate_cvec \\<circ> reciprocal_cvec) a", "obtain a1 a2 where aa: \"a = (a1, a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a1 a2. a = (a1, a2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases a, auto)"], ["proof (state)\nthis:\n  a = (a1, a2)\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a \\<noteq> vec_zero; a' \\<noteq> vec_zero;\n        circline_symmetric_cvec_cmat a a' unit_circle_cmat;\n        circline_symmetric_hcoords_clmat aa a'a unit_circle_clmat\\<rbrakk>\n       \\<Longrightarrow> a' \\<approx>\\<^sub>v\n                         (conjugate_cvec \\<circ> reciprocal_cvec) a", "obtain a1' a2' where aa': \"a' = (a1', a2')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a1' a2'.\n        a' = (a1', a2') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases a', auto)"], ["proof (state)\nthis:\n  a' = (a1', a2')\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a \\<noteq> vec_zero; a' \\<noteq> vec_zero;\n        circline_symmetric_cvec_cmat a a' unit_circle_cmat;\n        circline_symmetric_hcoords_clmat aa a'a unit_circle_clmat\\<rbrakk>\n       \\<Longrightarrow> a' \\<approx>\\<^sub>v\n                         (conjugate_cvec \\<circ> reciprocal_cvec) a", "assume *: \"circline_symmetric_cvec_cmat a a' unit_circle_cmat\""], ["proof (state)\nthis:\n  circline_symmetric_cvec_cmat a a' unit_circle_cmat\n\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>a \\<noteq> vec_zero; a' \\<noteq> vec_zero;\n        circline_symmetric_cvec_cmat a a' unit_circle_cmat;\n        circline_symmetric_hcoords_clmat aa a'a unit_circle_clmat\\<rbrakk>\n       \\<Longrightarrow> a' \\<approx>\\<^sub>v\n                         (conjugate_cvec \\<circ> reciprocal_cvec) a", "show \"a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "proof (cases \"a1' = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a1' = 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n 2. a1' \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "case True"], ["proof (state)\nthis:\n  a1' = 0\n\ngoal (2 subgoals):\n 1. a1' = 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n 2. a1' \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a1' = 0\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "using aa aa' vz *"], ["proof (prove)\nusing this:\n  a1' = 0\n  a = (a1, a2)\n  a' = (a1', a2')\n  a \\<noteq> vec_zero\n  a' \\<noteq> vec_zero\n  circline_symmetric_cvec_cmat a a' unit_circle_cmat\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "by (auto simp add: vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n\ngoal (1 subgoal):\n 1. a1' \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a1' \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "case False"], ["proof (state)\nthis:\n  a1' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a1' \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "proof (cases \"a2 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a2 = 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n 2. a2 \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "case True"], ["proof (state)\nthis:\n  a2 = 0\n\ngoal (2 subgoals):\n 1. a2 = 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n 2. a2 \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a2 = 0\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "using \\<open>a1' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  a2 = 0\n  a1' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "using aa aa' * vz"], ["proof (prove)\nusing this:\n  a2 = 0\n  a1' \\<noteq> 0\n  a = (a1, a2)\n  a' = (a1', a2')\n  circline_symmetric_cvec_cmat a a' unit_circle_cmat\n  a \\<noteq> vec_zero\n  a' \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "by (simp add:  vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n\ngoal (1 subgoal):\n 1. a2 \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a2 \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "case False"], ["proof (state)\nthis:\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a2 \\<noteq> 0 \\<Longrightarrow>\n    a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "using \\<open>a1' \\<noteq> 0\\<close> aa aa' *"], ["proof (prove)\nusing this:\n  a2 \\<noteq> 0\n  a1' \\<noteq> 0\n  a = (a1, a2)\n  a' = (a1', a2')\n  circline_symmetric_cvec_cmat a a' unit_circle_cmat\n\ngoal (1 subgoal):\n 1. a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a", "by (simp add: vec_cnj_def field_simps) (rule_tac x=\"cnj a2 / a1'\" in exI, simp add: field_simps)"], ["proof (state)\nthis:\n  a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a' \\<approx>\\<^sub>v (conjugate_cvec \\<circ> reciprocal_cvec) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ex_moebius_circline_x_axis:\n  assumes \"circline_type H < 0\"\n  shows \"\\<exists> M. moebius_circline M H = x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_circline M H = x_axis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_circline M H = x_axis", "obtain A B C where *: \"A \\<noteq> B\" \"A \\<noteq> C\" \"B \\<noteq> C\" \"on_circline H A\" \"on_circline H B\" \"on_circline H C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C; on_circline H A;\n         on_circline H B; on_circline H C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using circline_type_neg_card_gt3[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     A \\<noteq> C \\<and>\n     B \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_set H\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C; on_circline H A;\n         on_circline H B; on_circline H C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     A \\<noteq> C \\<and>\n     B \\<noteq> C \\<and> {A, B, C} \\<subseteq> Collect (on_circline H)\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; A \\<noteq> C; B \\<noteq> C; on_circline H A;\n         on_circline H B; on_circline H C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  on_circline H A\n  on_circline H B\n  on_circline H C\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_circline M H = x_axis", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  on_circline H A\n  on_circline H B\n  on_circline H C", "obtain M where \"moebius_pt M A = 0\\<^sub>h\" \"moebius_pt M B = 1\\<^sub>h\" \"moebius_pt M C = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  on_circline H A\n  on_circline H B\n  on_circline H C\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M A = 0\\<^sub>h; moebius_pt M B = 1\\<^sub>h;\n         moebius_pt M C = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_01inf"], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  on_circline H A\n  on_circline H B\n  on_circline H C\n  \\<lbrakk>?z1.0 \\<noteq> ?z2.0; ?z1.0 \\<noteq> ?z3.0;\n   ?z2.0 \\<noteq> ?z3.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>M.\n                       moebius_pt M ?z1.0 = 0\\<^sub>h \\<and>\n                       moebius_pt M ?z2.0 = 1\\<^sub>h \\<and>\n                       moebius_pt M ?z3.0 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M A = 0\\<^sub>h; moebius_pt M B = 1\\<^sub>h;\n         moebius_pt M C = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  moebius_pt M A = 0\\<^sub>h\n  moebius_pt M B = 1\\<^sub>h\n  moebius_pt M C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_circline M H = x_axis", "hence \"moebius_circline M H = x_axis\""], ["proof (prove)\nusing this:\n  moebius_pt M A = 0\\<^sub>h\n  moebius_pt M B = 1\\<^sub>h\n  moebius_pt M C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. moebius_circline M H = x_axis", "using *"], ["proof (prove)\nusing this:\n  moebius_pt M A = 0\\<^sub>h\n  moebius_pt M B = 1\\<^sub>h\n  moebius_pt M C = \\<infinity>\\<^sub>h\n  A \\<noteq> B\n  A \\<noteq> C\n  B \\<noteq> C\n  on_circline H A\n  on_circline H B\n  on_circline H C\n\ngoal (1 subgoal):\n 1. moebius_circline M H = x_axis", "by (metis circline_set_I circline_set_moebius_circline rev_image_eqI unique_circline_01inf')"], ["proof (state)\nthis:\n  moebius_circline M H = x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_circline M H = x_axis", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_circline M H = x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>M. moebius_circline M H = x_axis", "by blast"], ["proof (state)\nthis:\n  \\<exists>M. moebius_circline M H = x_axis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wlog_circline_x_axis:\n  assumes \"circline_type H < 0\"\n  assumes \"\\<And> M H. P H \\<Longrightarrow> P (moebius_circline M H)\"\n  assumes \"P x_axis\"\n  shows \"P H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P H", "obtain M where \"moebius_circline M H = x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_circline M H = x_axis \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_circline_x_axis[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<exists>M. moebius_circline M H = x_axis\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        moebius_circline M H = x_axis \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  moebius_circline M H = x_axis\n\ngoal (1 subgoal):\n 1. P H", "then"], ["proof (chain)\npicking this:\n  moebius_circline M H = x_axis", "obtain M' where \"moebius_circline M' x_axis = H\""], ["proof (prove)\nusing this:\n  moebius_circline M H = x_axis\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        moebius_circline M' x_axis = H \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis moebius_circline_comp_inv_left)"], ["proof (state)\nthis:\n  moebius_circline M' x_axis = H\n\ngoal (1 subgoal):\n 1. P H", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_circline M' x_axis = H\n\ngoal (1 subgoal):\n 1. P H", "using assms(2)[of x_axis M'] assms(3)"], ["proof (prove)\nusing this:\n  moebius_circline M' x_axis = H\n  P x_axis \\<Longrightarrow> P (moebius_circline M' x_axis)\n  P x_axis\n\ngoal (1 subgoal):\n 1. P H", "by simp"], ["proof (state)\nthis:\n  P H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma circline_intersection_at_most_2_points:\n  assumes \"H1 \\<noteq> H2\"\n  shows \"finite (circline_intersection H1 H2) \\<and> card (circline_intersection H1 H2) \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (circline_intersection H1 H2) \\<and>\n    card (circline_intersection H1 H2) \\<le> 2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (finite (circline_intersection H1 H2) \\<and>\n            card (circline_intersection H1 H2) \\<le> 2) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (finite (circline_intersection H1 H2) \\<and>\n          card (circline_intersection H1 H2) \\<le> 2)\n\ngoal (1 subgoal):\n 1. \\<not> (finite (circline_intersection H1 H2) \\<and>\n            card (circline_intersection H1 H2) \\<le> 2) \\<Longrightarrow>\n    False", "hence \"infinite (circline_intersection H1 H2) \\<or> card (circline_intersection H1 H2) > 2\""], ["proof (prove)\nusing this:\n  \\<not> (finite (circline_intersection H1 H2) \\<and>\n          card (circline_intersection H1 H2) \\<le> 2)\n\ngoal (1 subgoal):\n 1. infinite (circline_intersection H1 H2) \\<or>\n    2 < card (circline_intersection H1 H2)", "by auto"], ["proof (state)\nthis:\n  infinite (circline_intersection H1 H2) \\<or>\n  2 < card (circline_intersection H1 H2)\n\ngoal (1 subgoal):\n 1. \\<not> (finite (circline_intersection H1 H2) \\<and>\n            card (circline_intersection H1 H2) \\<le> 2) \\<Longrightarrow>\n    False", "hence \"\\<exists> A B C. A \\<noteq> B \\<and> B \\<noteq> C \\<and> A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\""], ["proof (prove)\nusing this:\n  infinite (circline_intersection H1 H2) \\<or>\n  2 < card (circline_intersection H1 H2)\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\n 2. 2 < card (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "assume \"card (circline_intersection H1 H2) > 2\""], ["proof (state)\nthis:\n  2 < card (circline_intersection H1 H2)\n\ngoal (2 subgoals):\n 1. infinite (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\n 2. 2 < card (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 < card (circline_intersection H1 H2)\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "using card_geq_3_iff_contains_3_elems[of \"circline_intersection H1 H2\"]"], ["proof (prove)\nusing this:\n  2 < card (circline_intersection H1 H2)\n  (3 \\<le> card (circline_intersection H1 H2)) =\n  (finite (circline_intersection H1 H2) \\<and>\n   (\\<exists>x y z.\n       x \\<noteq> y \\<and>\n       x \\<noteq> z \\<and>\n       y \\<noteq> z \\<and>\n       x \\<in> circline_intersection H1 H2 \\<and>\n       y \\<in> circline_intersection H1 H2 \\<and>\n       z \\<in> circline_intersection H1 H2))\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "by auto"], ["proof (state)\nthis:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     B \\<noteq> C \\<and>\n     A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\n\ngoal (1 subgoal):\n 1. infinite (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "assume \"infinite (circline_intersection H1 H2)\""], ["proof (state)\nthis:\n  infinite (circline_intersection H1 H2)\n\ngoal (1 subgoal):\n 1. infinite (circline_intersection H1 H2) \\<Longrightarrow>\n    \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite (circline_intersection H1 H2)\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "using infinite_contains_3_elems"], ["proof (prove)\nusing this:\n  infinite (circline_intersection H1 H2)\n  infinite ?A \\<Longrightarrow>\n  \\<exists>x y z.\n     x \\<noteq> y \\<and>\n     x \\<noteq> z \\<and>\n     y \\<noteq> z \\<and> x \\<in> ?A \\<and> y \\<in> ?A \\<and> z \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<exists>A B C.\n       A \\<noteq> B \\<and>\n       B \\<noteq> C \\<and>\n       A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "by blast"], ["proof (state)\nthis:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     B \\<noteq> C \\<and>\n     A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     B \\<noteq> C \\<and>\n     A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\n\ngoal (1 subgoal):\n 1. \\<not> (finite (circline_intersection H1 H2) \\<and>\n            card (circline_intersection H1 H2) \\<le> 2) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     B \\<noteq> C \\<and>\n     A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2", "obtain A B C where \"A \\<noteq> B\" \"B \\<noteq> C\" \"A \\<noteq> C\" \"{A, B, C} \\<subseteq> circline_intersection H1 H2\""], ["proof (prove)\nusing this:\n  \\<exists>A B C.\n     A \\<noteq> B \\<and>\n     B \\<noteq> C \\<and>\n     A \\<noteq> C \\<and> {A, B, C} \\<subseteq> circline_intersection H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>A B C.\n        \\<lbrakk>A \\<noteq> B; B \\<noteq> C; A \\<noteq> C;\n         {A, B, C} \\<subseteq> circline_intersection H1 H2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  A \\<noteq> B\n  B \\<noteq> C\n  A \\<noteq> C\n  {A, B, C} \\<subseteq> circline_intersection H1 H2\n\ngoal (1 subgoal):\n 1. \\<not> (finite (circline_intersection H1 H2) \\<and>\n            card (circline_intersection H1 H2) \\<le> 2) \\<Longrightarrow>\n    False", "hence \"H2 = H1\""], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  B \\<noteq> C\n  A \\<noteq> C\n  {A, B, C} \\<subseteq> circline_intersection H1 H2\n\ngoal (1 subgoal):\n 1. H2 = H1", "using circline_intersection_def mem_Collect_eq unique_circline_set"], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  B \\<noteq> C\n  A \\<noteq> C\n  {A, B, C} \\<subseteq> circline_intersection H1 H2\n  circline_intersection ?H1.0 ?H2.0 =\n  {z. on_circline ?H1.0 z \\<and> on_circline ?H2.0 z}\n  (?a \\<in> Collect ?P) = ?P ?a\n  \\<lbrakk>?A \\<noteq> ?B; ?A \\<noteq> ?C; ?B \\<noteq> ?C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!H.\n                       ?A \\<in> circline_set H \\<and>\n                       ?B \\<in> circline_set H \\<and>\n                       ?C \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. H2 = H1", "by fastforce"], ["proof (state)\nthis:\n  H2 = H1\n\ngoal (1 subgoal):\n 1. \\<not> (finite (circline_intersection H1 H2) \\<and>\n            card (circline_intersection H1 H2) \\<le> 2) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  H2 = H1\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  H2 = H1\n  H1 \\<noteq> H2\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}