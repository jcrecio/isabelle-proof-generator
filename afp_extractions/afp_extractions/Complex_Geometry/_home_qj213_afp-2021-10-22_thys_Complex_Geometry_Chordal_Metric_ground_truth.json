{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Chordal_Metric.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma real_inprod_cvec [simp]:\n  shows \"is_real \\<langle>z,z\\<rangle>\"", "lemma inprod_cvec_ge_zero [simp]:\n  shows \"Re \\<langle>z,z\\<rangle> \\<ge> 0\"", "lemma inprod_cvec_bilinear1 [simp]:\n  assumes \"z' = k *\\<^sub>s\\<^sub>v  z\"\n  shows \"\\<langle>z',w\\<rangle> = cnj k * \\<langle>z,w\\<rangle>\"", "lemma inprod_cvec_bilinear2 [simp]:\n  assumes \"z' = k *\\<^sub>s\\<^sub>v z\"\n  shows \"\\<langle>w, z'\\<rangle> = k * \\<langle>w, z\\<rangle>\"", "lemma inprod_cvec_g_zero [simp]:\n  assumes \"z \\<noteq> vec_zero\"\n  shows \"Re \\<langle>z, z\\<rangle> > 0\"", "lemma norm_cvec_square:\n  shows \"\\<langle>z\\<rangle>\\<^sup>2 = Re (\\<langle>z,z\\<rangle>)\"", "lemma norm_cvec_gt_0:\n  assumes \"z \\<noteq> vec_zero\"\n  shows \"\\<langle>z\\<rangle> > 0\"", "lemma norm_cvec_scale:\n  assumes \"z' = k *\\<^sub>s\\<^sub>v z\"\n  shows \"\\<langle>z'\\<rangle>\\<^sup>2 = Re (cnj k * k) * \\<langle>z\\<rangle>\\<^sup>2\"", "lemma dist_fs_cvec_iff:\n  assumes \"z \\<noteq> vec_zero\" and \"w \\<noteq> vec_zero\"\n  shows \"dist_fs_cvec z w = 2*sqrt(1 - (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 / (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\"", "lemma dist_fs_finite:\n  shows \"dist_fs (of_complex z1) (of_complex z2) = 2 * cmod(z1 - z2) / (sqrt (1+(cmod z1)\\<^sup>2) * sqrt (1+(cmod z2)\\<^sup>2))\"", "lemma dist_fs_infinite1:\n  shows \"dist_fs (of_complex z1) \\<infinity>\\<^sub>h = 2 / sqrt (1+(cmod z1)\\<^sup>2)\"", "lemma dist_fs_infinite2:\n  shows \"dist_fs \\<infinity>\\<^sub>h (of_complex z1) = 2 / sqrt (1+(cmod z1)\\<^sup>2)\"", "lemma dist_fs_cvec_zero:\n  assumes \"z \\<noteq> vec_zero\" and \"w \\<noteq> vec_zero\"\n  shows  \"dist_fs_cvec z w = 0 \\<longleftrightarrow> (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 = (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)\"", "lemma dist_fs_zero1 [simp]:\n  shows \"dist_fs z z = 0\"", "lemma dist_fs_zero2 [simp]:\n  assumes \"dist_fs z1 z2 = 0\"\n  shows \"z1 = z2\"", "lemma dist_fs_sym:\n  shows \"dist_fs z1 z2 = dist_fs z2 z1\"", "lemma dist_fs_triangle_finite:\n  shows \"cmod(a - b) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod b)\\<^sup>2)) \\<le> cmod (a - c) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod c)\\<^sup>2)) + cmod (c - b) / (sqrt (1+(cmod b)\\<^sup>2) * sqrt (1+(cmod c)\\<^sup>2))\"", "lemma dist_fs_triangle_infinite1: \n  shows \"1 / sqrt(1 + (cmod b)\\<^sup>2) \\<le> 1 / sqrt(1 + (cmod c)\\<^sup>2) + cmod (b - c) / (sqrt(1 + (cmod b)\\<^sup>2) * sqrt(1 + (cmod c)\\<^sup>2))\"", "lemma dist_fs_triangle_infinite2:\n  shows \"1 / sqrt(1 + (cmod a)\\<^sup>2) \\<le> cmod (a - c) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod c)\\<^sup>2)) + 1 / sqrt(1 + (cmod c)\\<^sup>2)\"", "lemma dist_fs_triangle_infinite3:\n  shows \"cmod(a - b) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod b)\\<^sup>2)) \\<le> 1 / sqrt(1 + (cmod a)\\<^sup>2) + 1 / sqrt(1 + (cmod b)\\<^sup>2)\"", "lemma dist_fs_triangle:\n  shows \"dist_fs A B \\<le> dist_fs A C + dist_fs C B\"", "lemma dist_riemann_sphere_r3_inner:\n  assumes \"M1 \\<in> unit_sphere\" and \"M2 \\<in> unit_sphere\"\n  shows  \"(dist_riemann_sphere_r3 M1 M2)\\<^sup>2 = 2 - 2 * inner M1 M2\"", "lemma dist_riemann_sphere_ge_0 [simp]: \n  shows \"dist_riemann_sphere' M1 M2 \\<ge> 0\"", "lemma dist_stereographic_finite:\n  assumes \"stereographic M1 = of_complex m1\"  and \"stereographic M2 = of_complex m2\"\n  shows \"dist_riemann_sphere' M1 M2 = 2 * cmod (m1 - m2) / (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))\"", "lemma dist_stereographic_infinite:\n  assumes \"stereographic M1 = \\<infinity>\\<^sub>h\" and \"stereographic M2 = of_complex m2\"\n  shows \"dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)\"", "lemma dist_rieman_sphere_zero [simp]: \n  shows \"dist_riemann_sphere' M M = 0\"", "lemma dist_riemann_sphere_sym: \n  shows \"dist_riemann_sphere' M1 M2 = dist_riemann_sphere' M2 M1\"", "lemma dist_stereographic:\n  shows \"dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\"", "lemma dist_stereographic':\n  shows \"dist_fs A B = dist_riemann_sphere' (inv_stereographic A) (inv_stereographic B)\"", "lemma Lim_within:\n  shows \"(f \\<longlongrightarrow> l) (at a within S) \\<longleftrightarrow>\n    (\\<forall>e >0. \\<exists>d>0. \\<forall>x \\<in> S. 0 < dist_class.dist x a \\<and> dist_class.dist x a  < d \\<longrightarrow> dist_class.dist (f x) l < e)\"", "lemma continuous_on_iff:\n  shows \"continuous_on s f \\<longleftrightarrow>\n    (\\<forall>x\\<in>s. \\<forall>e>0. \\<exists>d>0. \\<forall>x'\\<in>s. dist_class.dist x' x < d \\<longrightarrow> dist_class.dist (f x') (f x) < e)\"", "lemma \"continuous_on UNIV stereographic\"", "lemma \"continuous_on UNIV inv_stereographic\"", "lemma chordal_circle_cmat_hermitean_nonzero [simp]:\n  assumes \"a \\<noteq> vec_zero\"\n  shows \"chordal_circle_cvec_cmat a r \\<in> hermitean_nonzero\"", "lemma sqrt_1_plus_square:\n  shows \"sqrt (1 + a\\<^sup>2) \\<noteq> 0\"", "lemma\n  assumes \"dist_fs z a = r\"\n  shows \"z \\<in> circline_set (chordal_circle a r)\"", "lemma\n  assumes \"z \\<in> circline_set (chordal_circle a r)\" and \"r \\<ge> 0\"\n  shows \"dist_fs z a = r\"", "lemma chordal_circle_radius_positive:\n  assumes \"hermitean (A, B, C, D)\" and \"Re (mat_det (A, B, C, D)) \\<le> 0\" and \"B \\<noteq> 0\" and\n  \"dsc = sqrt(Re ((D-A)\\<^sup>2 + 4 * (B*cnj B)))\" and \n  \"a1 = (A - D + cor dsc) / (2 * C)\" and \"a2 = (A - D - cor dsc) / (2 * C)\"\n  shows \"Re (A*a1/B) \\<ge> -1 \\<and> Re (A*a2/B) \\<ge> -1\"", "lemma chordal_circle_det_positive:\n  fixes x y :: real\n  assumes \"x * y < 0\"\n  shows \"x / (x - y) > 0\"", "lemma chordal_circle1:\n  assumes \"is_real A\" and \"is_real D\" and \"Re (A * D) < 0\" and \"r = sqrt(Re ((4*A)/(A-D)))\"\n  shows \"mk_circline A 0 0 D = chordal_circle \\<infinity>\\<^sub>h r\"", "lemma chordal_circle2:\n  assumes \"is_real A\" and \"is_real D\" and \"Re (A * D) < 0\" and \"r = sqrt(Re ((4*D)/(D-A)))\"\n  shows \"mk_circline A 0 0 D = chordal_circle 0\\<^sub>h r\"", "lemma chordal_circle':\n  assumes \"B \\<noteq> 0\" and \"(A, B, C, D) \\<in> hermitean_nonzero\" and \"Re (mat_det (A, B, C, D)) \\<le> 0\" and\n  \"C * a\\<^sup>2  + (D - A) * a - B = 0\" and \"r = sqrt((4 - Re((-4 * a/B) * A)) / (1 + Re (a*cnj a)))\"\n  shows \"mk_circline A B C D = chordal_circle (of_complex a) r\""], "translations": [["", "lemma real_inprod_cvec [simp]:\n  shows \"is_real \\<langle>z,z\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real \\<langle>z,z\\<rangle>", "by (cases z, simp add: vec_cnj_def)"], ["", "lemma inprod_cvec_ge_zero [simp]:\n  shows \"Re \\<langle>z,z\\<rangle> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>z,z\\<rangle>", "by (cases z, simp add: vec_cnj_def)"], ["", "lemma inprod_cvec_bilinear1 [simp]:\n  assumes \"z' = k *\\<^sub>s\\<^sub>v  z\"\n  shows \"\\<langle>z',w\\<rangle> = cnj k * \\<langle>z,w\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>z',w\\<rangle> = cnj k * \\<langle>z,w\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  z' = k *\\<^sub>s\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<langle>z',w\\<rangle> = cnj k * \\<langle>z,w\\<rangle>", "by (cases z, cases z', cases w) (simp add: vec_cnj_def field_simps)"], ["", "lemma inprod_cvec_bilinear2 [simp]:\n  assumes \"z' = k *\\<^sub>s\\<^sub>v z\"\n  shows \"\\<langle>w, z'\\<rangle> = k * \\<langle>w, z\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>w,z'\\<rangle> = k * \\<langle>w,z\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  z' = k *\\<^sub>s\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<langle>w,z'\\<rangle> = k * \\<langle>w,z\\<rangle>", "by (cases z, cases z', cases w) (simp add: vec_cnj_def field_simps)"], ["", "lemma inprod_cvec_g_zero [simp]:\n  assumes \"z \\<noteq> vec_zero\"\n  shows \"Re \\<langle>z, z\\<rangle> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>z,z\\<rangle>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>z,z\\<rangle>", "have \"\\<forall> a b. a \\<noteq> 0 \\<or> b \\<noteq> 0 \\<longrightarrow> 0 < (Re a * Re a + Im a * Im a) + (Re b * Re b + Im b * Im b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<noteq> 0 \\<or> b \\<noteq> 0 \\<longrightarrow>\n       0 < Re a * Re a + Im a * Im a + (Re b * Re b + Im b * Im b)", "by (smt complex_eq_0 not_sum_squares_lt_zero power2_eq_square)"], ["proof (state)\nthis:\n  \\<forall>a b.\n     a \\<noteq> 0 \\<or> b \\<noteq> 0 \\<longrightarrow>\n     0 < Re a * Re a + Im a * Im a + (Re b * Re b + Im b * Im b)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>z,z\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     a \\<noteq> 0 \\<or> b \\<noteq> 0 \\<longrightarrow>\n     0 < Re a * Re a + Im a * Im a + (Re b * Re b + Im b * Im b)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>z,z\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     a \\<noteq> 0 \\<or> b \\<noteq> 0 \\<longrightarrow>\n     0 < Re a * Re a + Im a * Im a + (Re b * Re b + Im b * Im b)\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>z,z\\<rangle>", "by (cases z, simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  0 < Re \\<langle>z,z\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "definition norm_cvec :: \"complex_vec \\<Rightarrow> real\" where\n  [simp]: \"norm_cvec z = sqrt (Re \\<langle>z,z\\<rangle>)\""], ["", "syntax\n  \"_norm_cvec\" :: \"complex_vec \\<Rightarrow> complex\"  (\"\\<langle>_\\<rangle>\")"], ["", "translations\n  \"\\<langle>z\\<rangle>\" == \"CONST norm_cvec z\""], ["", "lemma norm_cvec_square:\n  shows \"\\<langle>z\\<rangle>\\<^sup>2 = Re (\\<langle>z,z\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>z\\<rangle>\\<^sup>2 = Re \\<langle>z,z\\<rangle>", "by (simp del: inprod_cvec_def)"], ["", "lemma norm_cvec_gt_0:\n  assumes \"z \\<noteq> vec_zero\"\n  shows \"\\<langle>z\\<rangle> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<langle>z\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. 0 < \\<langle>z\\<rangle>", "by (simp del: inprod_cvec_def)"], ["", "lemma norm_cvec_scale:\n  assumes \"z' = k *\\<^sub>s\\<^sub>v z\"\n  shows \"\\<langle>z'\\<rangle>\\<^sup>2 = Re (cnj k * k) * \\<langle>z\\<rangle>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>z'\\<rangle>\\<^sup>2 =\n    Re (cnj k * k) * \\<langle>z\\<rangle>\\<^sup>2", "unfolding norm_cvec_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. Re \\<langle>z',z'\\<rangle> = Re (cnj k * k) * Re \\<langle>z,z\\<rangle>", "using inprod_cvec_bilinear1[OF assms, of z']"], ["proof (prove)\nusing this:\n  \\<langle>z',z'\\<rangle> = cnj k * \\<langle>z,z'\\<rangle>\n\ngoal (1 subgoal):\n 1. Re \\<langle>z',z'\\<rangle> = Re (cnj k * k) * Re \\<langle>z,z\\<rangle>", "using inprod_cvec_bilinear2[OF assms, of z]"], ["proof (prove)\nusing this:\n  \\<langle>z',z'\\<rangle> = cnj k * \\<langle>z,z'\\<rangle>\n  \\<langle>z,z'\\<rangle> = k * \\<langle>z,z\\<rangle>\n\ngoal (1 subgoal):\n 1. Re \\<langle>z',z'\\<rangle> = Re (cnj k * k) * Re \\<langle>z,z\\<rangle>", "by (simp del: inprod_cvec_def add: field_simps)"], ["", "lift_definition inprod_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex\" is inprod_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition norm_hcoords :: \"complex_homo_coords \\<Rightarrow> real\" is norm_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Distance in $\\mathbb{C}P^1$ - defined by Fubini-Study metric.\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Formula for the chordal distance between the two points can be given directly based\non the homogenous coordinates of their stereographic projections in the plane. This is\ncalled the Fubini-Study metric.\\<close>"], ["", "definition dist_fs_cvec :: \"complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> real\" where [simp]:\n  \"dist_fs_cvec z1 z2 =\n     (let (z1x, z1y) = z1;\n          (z2x, z2y) = z2;\n          num = (z1x*z2y - z2x*z1y) * (cnj z1x*cnj z2y - cnj z2x*cnj z1y);\n          den = (z1x*cnj z1x + z1y*cnj z1y) * (z2x*cnj z2x + z2y*cnj z2y)\n       in 2*sqrt(Re num / Re den))\""], ["", "lemma dist_fs_cvec_iff:\n  assumes \"z \\<noteq> vec_zero\" and \"w \\<noteq> vec_zero\"\n  shows \"dist_fs_cvec z w = 2*sqrt(1 - (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 / (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "obtain z1 z2 w1 w2 where *: \"z = (z1, z2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 w1 w2.\n        \\<lbrakk>z = (z1, z2); w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"z\", cases \"w\") auto"], ["proof (state)\nthis:\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "have 1: \"2*sqrt(1 - (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 / (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) = 2*sqrt((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 - (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) / (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) =\n    2 *\n    sqrt\n     ((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n       (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "using norm_cvec_gt_0[of z] norm_cvec_gt_0[of w] assms"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero \\<Longrightarrow> 0 < \\<langle>z\\<rangle>\n  w \\<noteq> vec_zero \\<Longrightarrow> 0 < \\<langle>w\\<rangle>\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. 2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) =\n    2 *\n    sqrt\n     ((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n       (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 *\n  sqrt\n   (1 -\n    (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) =\n  2 *\n  sqrt\n   ((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n     (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "have 2: \"\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 = Re ((z1*cnj z1 + z2*cnj z2) * (w1*cnj w1 + w2*cnj w2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 =\n    Re ((z1 * cnj z1 + z2 * cnj z2) * (w1 * cnj w1 + w2 * cnj w2))", "using assms *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 =\n    Re ((z1 * cnj z1 + z2 * cnj z2) * (w1 * cnj w1 + w2 * cnj w2))", "by (simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 =\n  Re ((z1 * cnj z1 + z2 * cnj z2) * (w1 * cnj w1 + w2 * cnj w2))\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "have 3: \"\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 - (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 = Re ((z1*w2 - w1*z2) * (cnj z1*cnj w2 - cnj w1*cnj z2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n    (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n    Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))", "apply (subst cmod_square, (subst norm_cvec_square)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Re \\<langle>z,z\\<rangle> * Re \\<langle>w,w\\<rangle> -\n    Re (\\<langle>z,w\\<rangle> * cnj \\<langle>z,w\\<rangle>) =\n    Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))", "using *"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. Re \\<langle>z,z\\<rangle> * Re \\<langle>w,w\\<rangle> -\n    Re (\\<langle>z,w\\<rangle> * cnj \\<langle>z,w\\<rangle>) =\n    Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))", "by (simp add: vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "using 1 2 3"], ["proof (prove)\nusing this:\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n  2 *\n  sqrt\n   (1 -\n    (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) =\n  2 *\n  sqrt\n   ((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n     (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 =\n  Re ((z1 * cnj z1 + z2 * cnj z2) * (w1 * cnj w1 + w2 * cnj w2))\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "using *"], ["proof (prove)\nusing this:\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n  2 *\n  sqrt\n   (1 -\n    (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) =\n  2 *\n  sqrt\n   ((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n     (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 =\n  Re ((z1 * cnj z1 + z2 * cnj z2) * (w1 * cnj w1 + w2 * cnj w2))\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z w =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "unfolding dist_fs_cvec_def Let_def"], ["proof (prove)\nusing this:\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n  2 *\n  sqrt\n   (1 -\n    (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)) =\n  2 *\n  sqrt\n   ((\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n     (cmod \\<langle>z,w\\<rangle>)\\<^sup>2) /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 =\n  Re ((z1 * cnj z1 + z2 * cnj z2) * (w1 * cnj w1 + w2 * cnj w2))\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2 -\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  Re ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. (case z of\n     (z1x, z1y) \\<Rightarrow>\n       case w of\n       (z2x, z2y) \\<Rightarrow>\n         2 *\n         sqrt\n          (Re ((z1x * z2y - z2x * z1y) *\n               (cnj z1x * cnj z2y - cnj z2x * cnj z1y)) /\n           Re ((z1x * cnj z1x + z1y * cnj z1y) *\n               (z2x * cnj z2x + z2y * cnj z2y)))) =\n    2 *\n    sqrt\n     (1 -\n      (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n      (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  dist_fs_cvec z w =\n  2 *\n  sqrt\n   (1 -\n    (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 /\n    (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition dist_fs_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> real\" is dist_fs_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition dist_fs :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> real\" is dist_fs_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<approx> complex_homo_coords2;\n        complex_homo_coords3 \\<approx> complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_hcoords complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_hcoords complex_homo_coords2\n                          complex_homo_coords4", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_cvec complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_cvec complex_homo_coords2\n                          complex_homo_coords4", "fix z1 z2 z1' z2' :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_cvec complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_cvec complex_homo_coords2\n                          complex_homo_coords4", "obtain z1x z1y z2x z2y z1'x z1'y z2'x z2'y where\n    zz: \"z1 = (z1x, z1y)\" \"z2 = (z2x, z2y)\" \"z1' = (z1'x, z1'y)\" \"z2' = (z2'x, z2'y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1x z1y z2x z2y z1'x z1'y z2'x z2'y.\n        \\<lbrakk>z1 = (z1x, z1y); z2 = (z2x, z2y); z1' = (z1'x, z1'y);\n         z2' = (z2'x, z2'y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"z1\", cases \"z2\", cases \"z1'\", cases \"z2'\") blast"], ["proof (state)\nthis:\n  z1 = (z1x, z1y)\n  z2 = (z2x, z2y)\n  z1' = (z1'x, z1'y)\n  z2' = (z2'x, z2'y)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_cvec complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_cvec complex_homo_coords2\n                          complex_homo_coords4", "assume 1: \"z1 \\<noteq> vec_zero\" \"z2 \\<noteq> vec_zero\" \"z1' \\<noteq> vec_zero\" \"z2' \\<noteq> vec_zero\" \"z1 \\<approx>\\<^sub>v z1'\" \"z2 \\<approx>\\<^sub>v z2'\""], ["proof (state)\nthis:\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z1' \\<noteq> vec_zero\n  z2' \\<noteq> vec_zero\n  z1 \\<approx>\\<^sub>v z1'\n  z2 \\<approx>\\<^sub>v z2'\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_cvec complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_cvec complex_homo_coords2\n                          complex_homo_coords4", "then"], ["proof (chain)\npicking this:\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z1' \\<noteq> vec_zero\n  z2' \\<noteq> vec_zero\n  z1 \\<approx>\\<^sub>v z1'\n  z2 \\<approx>\\<^sub>v z2'", "obtain k1 k2 where\n    *: \"k1 \\<noteq> 0\" \"z1' = k1 *\\<^sub>s\\<^sub>v z1\" and\n    **: \"k2 \\<noteq> 0\" \"z2' = k2 *\\<^sub>s\\<^sub>v z2\""], ["proof (prove)\nusing this:\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z1' \\<noteq> vec_zero\n  z2' \\<noteq> vec_zero\n  z1 \\<approx>\\<^sub>v z1'\n  z2 \\<approx>\\<^sub>v z2'\n\ngoal (1 subgoal):\n 1. (\\<And>k1 k2.\n        \\<lbrakk>k1 \\<noteq> 0; z1' = k1 *\\<^sub>s\\<^sub>v z1;\n         k2 \\<noteq> 0; z2' = k2 *\\<^sub>s\\<^sub>v z2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k1 \\<noteq> 0\n  z1' = k1 *\\<^sub>s\\<^sub>v z1\n  k2 \\<noteq> 0\n  z2' = k2 *\\<^sub>s\\<^sub>v z2\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_cvec complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_cvec complex_homo_coords2\n                          complex_homo_coords4", "have \"(cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 / (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) = (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 / (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n    (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) =\n    (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n    (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)", "using \\<open>k1 \\<noteq> 0\\<close> \\<open>k2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  k1 \\<noteq> 0\n  k2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n    (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) =\n    (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n    (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)", "using cmod_square[symmetric, of k1] cmod_square[symmetric, of k2]"], ["proof (prove)\nusing this:\n  k1 \\<noteq> 0\n  k2 \\<noteq> 0\n  Re (k1 * cnj k1) = (cmod k1)\\<^sup>2\n  Re (k2 * cnj k2) = (cmod k2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n    (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) =\n    (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n    (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)", "apply (subst norm_cvec_scale[OF *(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k1 \\<noteq> 0; k2 \\<noteq> 0;\n     Re (k1 * cnj k1) = (cmod k1)\\<^sup>2;\n     Re (k2 * cnj k2) = (cmod k2)\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n                      (\\<langle>z1\\<rangle>\\<^sup>2 *\n                       \\<langle>z2\\<rangle>\\<^sup>2) =\n                      (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n                      (Re (cnj k1 * k1) * \\<langle>z1\\<rangle>\\<^sup>2 *\n                       \\<langle>z2'\\<rangle>\\<^sup>2)", "apply (subst norm_cvec_scale[OF **(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k1 \\<noteq> 0; k2 \\<noteq> 0;\n     Re (k1 * cnj k1) = (cmod k1)\\<^sup>2;\n     Re (k2 * cnj k2) = (cmod k2)\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n                      (\\<langle>z1\\<rangle>\\<^sup>2 *\n                       \\<langle>z2\\<rangle>\\<^sup>2) =\n                      (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n                      (Re (cnj k1 * k1) * \\<langle>z1\\<rangle>\\<^sup>2 *\n                       (Re (cnj k2 * k2) * \\<langle>z2\\<rangle>\\<^sup>2))", "apply (subst inprod_cvec_bilinear1[OF *(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k1 \\<noteq> 0; k2 \\<noteq> 0;\n     Re (k1 * cnj k1) = (cmod k1)\\<^sup>2;\n     Re (k2 * cnj k2) = (cmod k2)\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n                      (\\<langle>z1\\<rangle>\\<^sup>2 *\n                       \\<langle>z2\\<rangle>\\<^sup>2) =\n                      (cmod (cnj k1 * \\<langle>z1,z2'\\<rangle>))\\<^sup>2 /\n                      (Re (cnj k1 * k1) * \\<langle>z1\\<rangle>\\<^sup>2 *\n                       (Re (cnj k2 * k2) * \\<langle>z2\\<rangle>\\<^sup>2))", "apply (subst inprod_cvec_bilinear2[OF **(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k1 \\<noteq> 0; k2 \\<noteq> 0;\n     Re (k1 * cnj k1) = (cmod k1)\\<^sup>2;\n     Re (k2 * cnj k2) = (cmod k2)\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n                      (\\<langle>z1\\<rangle>\\<^sup>2 *\n                       \\<langle>z2\\<rangle>\\<^sup>2) =\n                      (cmod\n                        (cnj k1 * (k2 * \\<langle>z1,z2\\<rangle>)))\\<^sup>2 /\n                      (Re (cnj k1 * k1) * \\<langle>z1\\<rangle>\\<^sup>2 *\n                       (Re (cnj k2 * k2) * \\<langle>z2\\<rangle>\\<^sup>2))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n  (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) =\n  (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n  (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> dist_fs_cvec complex_homo_coords1\n                          complex_homo_coords3 =\n                         dist_fs_cvec complex_homo_coords2\n                          complex_homo_coords4", "thus \"dist_fs_cvec z1 z2 = dist_fs_cvec z1' z2'\""], ["proof (prove)\nusing this:\n  (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n  (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) =\n  (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n  (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z1 z2 = dist_fs_cvec z1' z2'", "using 1 dist_fs_cvec_iff"], ["proof (prove)\nusing this:\n  (cmod \\<langle>z1,z2\\<rangle>)\\<^sup>2 /\n  (\\<langle>z1\\<rangle>\\<^sup>2 * \\<langle>z2\\<rangle>\\<^sup>2) =\n  (cmod \\<langle>z1',z2'\\<rangle>)\\<^sup>2 /\n  (\\<langle>z1'\\<rangle>\\<^sup>2 * \\<langle>z2'\\<rangle>\\<^sup>2)\n  z1 \\<noteq> vec_zero\n  z2 \\<noteq> vec_zero\n  z1' \\<noteq> vec_zero\n  z2' \\<noteq> vec_zero\n  z1 \\<approx>\\<^sub>v z1'\n  z2 \\<approx>\\<^sub>v z2'\n  \\<lbrakk>?z \\<noteq> vec_zero; ?w \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> dist_fs_cvec ?z ?w =\n                    2 *\n                    sqrt\n                     (1 -\n                      (cmod \\<langle>?z,?w\\<rangle>)\\<^sup>2 /\n                      (\\<langle>?z\\<rangle>\\<^sup>2 *\n                       \\<langle>?w\\<rangle>\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_fs_cvec z1 z2 = dist_fs_cvec z1' z2'", "by simp"], ["proof (state)\nthis:\n  dist_fs_cvec z1 z2 = dist_fs_cvec z1' z2'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_fs_finite:\n  shows \"dist_fs (of_complex z1) (of_complex z2) = 2 * cmod(z1 - z2) / (sqrt (1+(cmod z1)\\<^sup>2) * sqrt (1+(cmod z2)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs (of_complex z1) (of_complex z2) =\n    2 * cmod (z1 - z2) /\n    (sqrt (1 + (cmod z1)\\<^sup>2) * sqrt (1 + (cmod z2)\\<^sup>2))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       dist_fs_hcoords (of_complex_hcoords z1) (of_complex_hcoords z2) =\n       2 * cmod (z1 - z2) /\n       (sqrt (1 + (cmod z1)\\<^sup>2) * sqrt (1 + (cmod z2)\\<^sup>2))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       dist_fs_cvec (of_complex_cvec z1) (of_complex_cvec z2) =\n       2 * cmod (z1 - z2) /\n       (sqrt (1 + (cmod z1)\\<^sup>2) * sqrt (1 + (cmod z2)\\<^sup>2))", "apply (subst cmod_square)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       dist_fs_cvec (of_complex_cvec z1) (of_complex_cvec z2) =\n       2 * cmod (z1 - z2) /\n       (sqrt (1 + Re (z1 * cnj z1)) * sqrt (1 + Re (z2 * cnj z2)))", "apply (simp add: real_sqrt_divide cmod_def power2_eq_square)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       2 *\n       sqrt\n        ((Re z1 - Re z2) * (Re z1 - Re z2) -\n         (Im z1 - Im z2) * (Im z2 - Im z1)) /\n       sqrt\n        ((Re z1 * Re z1 + Im z1 * Im z1 + 1) *\n         (Re z2 * Re z2 + Im z2 * Im z2 + 1)) =\n       2 *\n       sqrt\n        ((Re z1 - Re z2) * (Re z1 - Re z2) +\n         (Im z1 - Im z2) * (Im z1 - Im z2)) /\n       (sqrt (1 + (Re z1 * Re z1 + Im z1 * Im z1)) *\n        sqrt (1 + (Re z2 * Re z2 + Im z2 * Im z2)))", "apply (subst real_sqrt_mult[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       2 *\n       sqrt\n        ((Re z1 - Re z2) * (Re z1 - Re z2) -\n         (Im z1 - Im z2) * (Im z2 - Im z1)) /\n       sqrt\n        ((Re z1 * Re z1 + Im z1 * Im z1 + 1) *\n         (Re z2 * Re z2 + Im z2 * Im z2 + 1)) =\n       2 *\n       sqrt\n        ((Re z1 - Re z2) * (Re z1 - Re z2) +\n         (Im z1 - Im z2) * (Im z1 - Im z2)) /\n       sqrt\n        ((1 + (Re z1 * Re z1 + Im z1 * Im z1)) *\n         (1 + (Re z2 * Re z2 + Im z2 * Im z2)))", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dist_fs_infinite1:\n  shows \"dist_fs (of_complex z1) \\<infinity>\\<^sub>h = 2 / sqrt (1+(cmod z1)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs (of_complex z1) \\<infinity>\\<^sub>h =\n    2 / sqrt (1 + (cmod z1)\\<^sup>2)", "by (transfer, transfer) (subst cmod_square, simp add: real_sqrt_divide)"], ["", "lemma dist_fs_infinite2:\n  shows \"dist_fs \\<infinity>\\<^sub>h (of_complex z1) = 2 / sqrt (1+(cmod z1)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs \\<infinity>\\<^sub>h (of_complex z1) =\n    2 / sqrt (1 + (cmod z1)\\<^sup>2)", "by (transfer, transfer) (subst cmod_square, simp add: real_sqrt_divide)"], ["", "lemma dist_fs_cvec_zero:\n  assumes \"z \\<noteq> vec_zero\" and \"w \\<noteq> vec_zero\"\n  shows  \"dist_fs_cvec z w = 0 \\<longleftrightarrow> (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 = (\\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist_fs_cvec z w = 0) =\n    ((cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n     \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)", "using assms norm_cvec_gt_0[of z]  norm_cvec_gt_0[of w]"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<noteq> vec_zero \\<Longrightarrow> 0 < \\<langle>z\\<rangle>\n  w \\<noteq> vec_zero \\<Longrightarrow> 0 < \\<langle>w\\<rangle>\n\ngoal (1 subgoal):\n 1. (dist_fs_cvec z w = 0) =\n    ((cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n     \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2)", "by (subst dist_fs_cvec_iff) auto"], ["", "lemma dist_fs_zero1 [simp]:\n  shows \"dist_fs z z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs z z = 0", "by (transfer, transfer)\n     (subst dist_fs_cvec_zero, simp, (subst norm_cvec_square)+, subst cmod_square, simp del: inprod_cvec_def)"], ["", "lemma dist_fs_zero2 [simp]:\n  assumes \"dist_fs z1 z2 = 0\"\n  shows \"z1 = z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z1 = z2", "using assms"], ["proof (prove)\nusing this:\n  dist_fs z1 z2 = 0\n\ngoal (1 subgoal):\n 1. z1 = z2", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "fix z w :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "obtain z1 z2 w1 w2 where *: \"z = (z1, z2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 w1 w2.\n        \\<lbrakk>z = (z1, z2); w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"z\", cases \"w\", auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "let ?x = \"(z1*w2 - w1*z2) * (cnj z1*cnj w2 - cnj w1*cnj z2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "assume \"z \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"dist_fs_cvec z w = 0\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  dist_fs_cvec z w = 0\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "hence \"(cmod \\<langle>z,w\\<rangle>)\\<^sup>2 = \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  dist_fs_cvec z w = 0\n\ngoal (1 subgoal):\n 1. (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n    \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2", "by (subst (asm) dist_fs_cvec_zero, simp_all)"], ["proof (state)\nthis:\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "hence \"Re ?x = 0\""], ["proof (prove)\nusing this:\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_imag ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))", "using *"], ["proof (prove)\nusing this:\n  (cmod \\<langle>z,w\\<rangle>)\\<^sup>2 =\n  \\<langle>z\\<rangle>\\<^sup>2 * \\<langle>w\\<rangle>\\<^sup>2\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. is_imag ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))", "by (subst (asm) cmod_square) ((subst (asm) norm_cvec_square)+, simp add: vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  is_imag ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "hence \"?x = 0\""], ["proof (prove)\nusing this:\n  is_imag ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n\ngoal (1 subgoal):\n 1. (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0", "using complex_mult_cnj_cmod[of \"z1*w2 - w1*z2\"] zero_complex.simps"], ["proof (prove)\nusing this:\n  is_imag ((z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2))\n  (z1 * w2 - w1 * z2) * cnj (z1 * w2 - w1 * z2) =\n  cor ((cmod (z1 * w2 - w1 * z2))\\<^sup>2)\n  is_imag 0\n  is_real 0\n\ngoal (1 subgoal):\n 1. (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0", "by (subst complex_eq_if_Re_eq[of ?x 0]) (simp add: power2_eq_square, simp, linarith)"], ["proof (state)\nthis:\n  (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "moreover"], ["proof (state)\nthis:\n  (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "have \"z1 * w2 - w1 * z2 = 0 \\<longleftrightarrow> cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z1 * w2 - w1 * z2 = 0) = (cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0)", "by (metis complex_cnj_diff complex_cnj_mult complex_cnj_zero_iff)"], ["proof (state)\nthis:\n  (z1 * w2 - w1 * z2 = 0) = (cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0)\n\ngoal (1 subgoal):\n 1. \\<And>z1 z2 z1a z2a.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero;\n        dist_fs_cvec z1 z2 = 0; dist_fs_hcoords z1a z2a = 0\\<rbrakk>\n       \\<Longrightarrow> z1 \\<approx>\\<^sub>v z2", "ultimately"], ["proof (chain)\npicking this:\n  (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0\n  (z1 * w2 - w1 * z2 = 0) = (cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0)", "show \"z \\<approx>\\<^sub>v w\""], ["proof (prove)\nusing this:\n  (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0\n  (z1 * w2 - w1 * z2 = 0) = (cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0)\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v w", "using * \\<open>z \\<noteq> vec_zero\\<close> \\<open>w \\<noteq> vec_zero\\<close>"], ["proof (prove)\nusing this:\n  (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0\n  (z1 * w2 - w1 * z2 = 0) = (cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0)\n  z = (z1, z2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v w", "using complex_cvec_eq_mix[of z1 z2 w1 w2]"], ["proof (prove)\nusing this:\n  (z1 * w2 - w1 * z2) * (cnj z1 * cnj w2 - cnj w1 * cnj z2) = 0\n  (z1 * w2 - w1 * z2 = 0) = (cnj z1 * cnj w2 - cnj w1 * cnj z2 = 0)\n  z = (z1, z2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<lbrakk>(z1, z2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1, z2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (z1 * w2 = z2 * w1)\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v w", "by auto"], ["proof (state)\nthis:\n  z \\<approx>\\<^sub>v w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_fs_sym:\n  shows \"dist_fs z1 z2 = dist_fs z2 z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs z1 z2 = dist_fs z2 z1", "by (transfer, transfer) (simp add: split_def field_simps)"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Triangle inequality for Fubini-Study metric\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "lemma dist_fs_triangle_finite:\n  shows \"cmod(a - b) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod b)\\<^sup>2)) \\<le> cmod (a - c) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod c)\\<^sup>2)) + cmod (c - b) / (sqrt (1+(cmod b)\\<^sup>2) * sqrt (1+(cmod c)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "let ?cc = \"1+(cmod c)\\<^sup>2\" and ?bb = \"1+(cmod b)\\<^sup>2\" and ?aa = \"1+(cmod a)\\<^sup>2\""], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"sqrt ?cc > 0\" \"sqrt ?aa > 0\" \"sqrt ?bb > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sqrt (1 + (cmod c)\\<^sup>2) &&&\n    0 < sqrt (1 + (cmod a)\\<^sup>2) &&& 0 < sqrt (1 + (cmod b)\\<^sup>2)", "by (smt real_sqrt_gt_zero zero_compare_simps(12))+"], ["proof (state)\nthis:\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n  0 < sqrt (1 + (cmod a)\\<^sup>2)\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"(a - b)*(1+cnj c*c) = (a-c)*(1+cnj c*b) + (c-b)*(1 + cnj c*a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a - b) * (1 + cnj c * c) =\n    (a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (a - b) * (1 + cnj c * c) =\n  (a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "moreover"], ["proof (state)\nthis:\n  (a - b) * (1 + cnj c * c) =\n  (a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"1 + cnj c * c = 1 + (cmod c)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + cnj c * c = cor (1 + (cmod c)\\<^sup>2)", "using complex_norm_square"], ["proof (prove)\nusing this:\n  cor ((cmod ?z)\\<^sup>2) = ?z * cnj ?z\n\ngoal (1 subgoal):\n 1. 1 + cnj c * c = cor (1 + (cmod c)\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  1 + cnj c * c = cor (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence \"cmod ((a - b)*(1+cnj c*c)) = cmod(a - b) * (1+(cmod c)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  1 + cnj c * c = cor (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod ((a - b) * (1 + cnj c * c)) = cmod (a - b) * (1 + (cmod c)\\<^sup>2)", "by (smt norm_mult norm_of_real zero_compare_simps(12))"], ["proof (state)\nthis:\n  cmod ((a - b) * (1 + cnj c * c)) = cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "ultimately"], ["proof (chain)\npicking this:\n  (a - b) * (1 + cnj c * c) =\n  (a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)\n  cmod ((a - b) * (1 + cnj c * c)) = cmod (a - b) * (1 + (cmod c)\\<^sup>2)", "have \"cmod(a - b) * (1+(cmod c)\\<^sup>2) \\<le> cmod (a-c) * cmod (1+cnj c*b) + cmod (c-b) * cmod(1 + cnj c*a)\""], ["proof (prove)\nusing this:\n  (a - b) * (1 + cnj c * c) =\n  (a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)\n  cmod ((a - b) * (1 + cnj c * c)) = cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n    \\<le> cmod (a - c) * cmod (1 + cnj c * b) +\n          cmod (c - b) * cmod (1 + cnj c * a)", "using complex_mod_triangle_ineq2[of \"(a-c)*(1+cnj c*b)\" \"(c-b)*(1 + cnj c*a)\"]"], ["proof (prove)\nusing this:\n  (a - b) * (1 + cnj c * c) =\n  (a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)\n  cmod ((a - b) * (1 + cnj c * c)) = cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  cmod ((a - c) * (1 + cnj c * b) + (c - b) * (1 + cnj c * a)) -\n  cmod ((a - c) * (1 + cnj c * b))\n  \\<le> cmod ((c - b) * (1 + cnj c * a))\n\ngoal (1 subgoal):\n 1. cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n    \\<le> cmod (a - c) * cmod (1 + cnj c * b) +\n          cmod (c - b) * cmod (1 + cnj c * a)", "by simp"], ["proof (state)\nthis:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * cmod (1 + cnj c * b) +\n        cmod (c - b) * cmod (1 + cnj c * a)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "moreover"], ["proof (state)\nthis:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * cmod (1 + cnj c * b) +\n        cmod (c - b) * cmod (1 + cnj c * a)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have *: \"\\<And> a b c d b' d'. \\<lbrakk>b \\<le> b'; d \\<le> d'; a \\<ge> (0::real); c \\<ge> 0\\<rbrakk> \\<Longrightarrow> a*b + c*d \\<le> a*b' + c*d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d b' d'.\n       \\<lbrakk>b \\<le> b'; d \\<le> d'; 0 \\<le> a; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * b + c * d \\<le> a * b' + c * d'", "by (smt mult_left_mono)"], ["proof (state)\nthis:\n  \\<lbrakk>?b \\<le> ?b'; ?d \\<le> ?d'; 0 \\<le> ?a; 0 \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?b + ?c * ?d \\<le> ?a * ?b' + ?c * ?d'\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"cmod (a-c) * cmod (1+cnj c*b) + cmod (c-b) * cmod(1 + cnj c*a) \\<le> cmod (a - c) * (sqrt (1+(cmod c)\\<^sup>2) * sqrt (1+(cmod b)\\<^sup>2)) + cmod (c - b) * (sqrt (1+(cmod c)\\<^sup>2) * sqrt (1+(cmod a)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (a - c) * cmod (1 + cnj c * b) +\n    cmod (c - b) * cmod (1 + cnj c * a)\n    \\<le> cmod (a - c) *\n          (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) +\n          cmod (c - b) *\n          (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))", "using *[OF cmod_1_plus_mult_le[of \"cnj c\" b] cmod_1_plus_mult_le[of \"cnj c\" a], of \"cmod (a-c)\" \"cmod (c-b)\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> cmod (a - c); 0 \\<le> cmod (c - b)\\<rbrakk>\n  \\<Longrightarrow> cmod (a - c) * cmod (1 + cnj c * b) +\n                    cmod (c - b) * cmod (1 + cnj c * a)\n                    \\<le> cmod (a - c) *\n                          sqrt\n                           ((1 + (cmod (cnj c))\\<^sup>2) *\n                            (1 + (cmod b)\\<^sup>2)) +\n                          cmod (c - b) *\n                          sqrt\n                           ((1 + (cmod (cnj c))\\<^sup>2) *\n                            (1 + (cmod a)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - c) * cmod (1 + cnj c * b) +\n    cmod (c - b) * cmod (1 + cnj c * a)\n    \\<le> cmod (a - c) *\n          (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) +\n          cmod (c - b) *\n          (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))", "by (simp add: field_simps real_sqrt_mult[symmetric])"], ["proof (state)\nthis:\n  cmod (a - c) * cmod (1 + cnj c * b) + cmod (c - b) * cmod (1 + cnj c * a)\n  \\<le> cmod (a - c) *\n        (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) +\n        cmod (c - b) *\n        (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "ultimately"], ["proof (chain)\npicking this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * cmod (1 + cnj c * b) +\n        cmod (c - b) * cmod (1 + cnj c * a)\n  cmod (a - c) * cmod (1 + cnj c * b) + cmod (c - b) * cmod (1 + cnj c * a)\n  \\<le> cmod (a - c) *\n        (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) +\n        cmod (c - b) *\n        (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))", "have \"cmod(a - b) * ?cc \\<le> cmod (a - c) * sqrt ?cc * sqrt ?bb + cmod (c - b) * sqrt ?cc * sqrt ?aa\""], ["proof (prove)\nusing this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * cmod (1 + cnj c * b) +\n        cmod (c - b) * cmod (1 + cnj c * a)\n  cmod (a - c) * cmod (1 + cnj c * b) + cmod (c - b) * cmod (1 + cnj c * a)\n  \\<le> cmod (a - c) *\n        (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) +\n        cmod (c - b) *\n        (sqrt (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n    \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n          sqrt (1 + (cmod b)\\<^sup>2) +\n          cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n          sqrt (1 + (cmod a)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "moreover"], ["proof (state)\nthis:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence \"0 \\<le> ?cc * sqrt ?aa * sqrt ?bb\""], ["proof (prove)\nusing this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n            sqrt (1 + (cmod b)\\<^sup>2)", "using mult_right_mono[of 0 \"sqrt ?aa\"  \"sqrt ?bb\"]"], ["proof (prove)\nusing this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n  \\<lbrakk>0 \\<le> sqrt (1 + (cmod a)\\<^sup>2);\n   0 \\<le> sqrt (1 + (cmod b)\\<^sup>2)\\<rbrakk>\n  \\<Longrightarrow> 0 * sqrt (1 + (cmod b)\\<^sup>2)\n                    \\<le> sqrt (1 + (cmod a)\\<^sup>2) *\n                          sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n            sqrt (1 + (cmod b)\\<^sup>2)", "using mult_right_mono[of 0 \"?cc\" \"sqrt ?aa * sqrt ?bb\"]"], ["proof (prove)\nusing this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n  \\<lbrakk>0 \\<le> sqrt (1 + (cmod a)\\<^sup>2);\n   0 \\<le> sqrt (1 + (cmod b)\\<^sup>2)\\<rbrakk>\n  \\<Longrightarrow> 0 * sqrt (1 + (cmod b)\\<^sup>2)\n                    \\<le> sqrt (1 + (cmod a)\\<^sup>2) *\n                          sqrt (1 + (cmod b)\\<^sup>2)\n  \\<lbrakk>0 \\<le> 1 + (cmod c)\\<^sup>2;\n   0 \\<le> sqrt (1 + (cmod a)\\<^sup>2) *\n           sqrt (1 + (cmod b)\\<^sup>2)\\<rbrakk>\n  \\<Longrightarrow> 0 *\n                    (sqrt (1 + (cmod a)\\<^sup>2) *\n                     sqrt (1 + (cmod b)\\<^sup>2))\n                    \\<le> (1 + (cmod c)\\<^sup>2) *\n                          (sqrt (1 + (cmod a)\\<^sup>2) *\n                           sqrt (1 + (cmod b)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n            sqrt (1 + (cmod b)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n          sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "moreover"], ["proof (state)\nthis:\n  0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n          sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"sqrt ?cc / ?cc = 1 / sqrt ?cc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n    1 / sqrt (1 + (cmod c)\\<^sup>2)", "using \\<open>sqrt ?cc > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n    1 / sqrt (1 + (cmod c)\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence \"sqrt ?cc / (?cc * sqrt ?aa) = 1 / (sqrt ?aa * sqrt ?cc)\""], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n    1 / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using times_divide_eq_right[of \"1/sqrt ?aa\" \"sqrt ?cc\" \"?cc\"]"], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n  1 / sqrt (1 + (cmod a)\\<^sup>2) *\n  (sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2)) =\n  1 / sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2) /\n  (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n    1 / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using \\<open>sqrt ?aa > 0\\<close>"], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n  1 / sqrt (1 + (cmod a)\\<^sup>2) *\n  (sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2)) =\n  1 / sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2) /\n  (1 + (cmod c)\\<^sup>2)\n  0 < sqrt (1 + (cmod a)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n    1 / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  1 / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence \"cmod (a - c) * sqrt ?cc / (?cc * sqrt ?aa) = cmod (a - c) / (sqrt ?aa * sqrt ?cc)\""], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  1 / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n    cmod (a - c) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using times_divide_eq_right[of \"cmod (a - c)\" \"sqrt ?cc\" \"(?cc * sqrt ?aa)\"]"], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  1 / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  cmod (a - c) *\n  (sqrt (1 + (cmod c)\\<^sup>2) /\n   ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))) =\n  cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n    cmod (a - c) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  cmod (a - c) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "moreover"], ["proof (state)\nthis:\n  cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  cmod (a - c) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"sqrt ?cc / ?cc = 1 / sqrt ?cc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n    1 / sqrt (1 + (cmod c)\\<^sup>2)", "using \\<open>sqrt ?cc > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n    1 / sqrt (1 + (cmod c)\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence \"sqrt ?cc / (?cc * sqrt ?bb) = 1 / (sqrt ?bb * sqrt ?cc)\""], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    1 / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using times_divide_eq_right[of \"1/sqrt ?bb\" \"sqrt ?cc\" \"?cc\"]"], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n  1 / sqrt (1 + (cmod b)\\<^sup>2) *\n  (sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2)) =\n  1 / sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2) /\n  (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    1 / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using \\<open>sqrt ?bb > 0\\<close>"], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2) =\n  1 / sqrt (1 + (cmod c)\\<^sup>2)\n  1 / sqrt (1 + (cmod b)\\<^sup>2) *\n  (sqrt (1 + (cmod c)\\<^sup>2) / (1 + (cmod c)\\<^sup>2)) =\n  1 / sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2) /\n  (1 + (cmod c)\\<^sup>2)\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    1 / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  1 / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence \"cmod (c - b) * sqrt ?cc / (?cc * sqrt ?bb) = cmod (c - b) / (sqrt ?bb * sqrt ?cc)\""], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  1 / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    cmod (c - b) /\n    (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using times_divide_eq_right[of \"cmod (c - b)\" \"sqrt ?cc\" \"?cc * sqrt ?bb\"]"], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  1 / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  cmod (c - b) *\n  (sqrt (1 + (cmod c)\\<^sup>2) /\n   ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))) =\n  cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    cmod (c - b) /\n    (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  cmod (c - b) / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "ultimately"], ["proof (chain)\npicking this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n  0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n          sqrt (1 + (cmod b)\\<^sup>2)\n  cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  cmod (a - c) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  cmod (c - b) / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n  0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n          sqrt (1 + (cmod b)\\<^sup>2)\n  cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  cmod (a - c) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  cmod (c - b) / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using divide_right_mono[of \"cmod (a - b) * ?cc\" \"cmod (a - c) * sqrt ?cc * sqrt ?bb + cmod (c - b) * sqrt ?cc * sqrt ?aa\" \"?cc * sqrt ?aa * sqrt ?bb\"] \\<open>sqrt ?aa > 0\\<close> \\<open>sqrt ?bb > 0\\<close> \\<open>sqrt ?cc > 0\\<close>"], ["proof (prove)\nusing this:\n  cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n  \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod b)\\<^sup>2) +\n        cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n        sqrt (1 + (cmod a)\\<^sup>2)\n  0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n          sqrt (1 + (cmod b)\\<^sup>2)\n  cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2)) =\n  cmod (a - c) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) /\n  ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  cmod (c - b) / (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  \\<lbrakk>cmod (a - b) * (1 + (cmod c)\\<^sup>2)\n           \\<le> cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n                 sqrt (1 + (cmod b)\\<^sup>2) +\n                 cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n                 sqrt (1 + (cmod a)\\<^sup>2);\n   0 \\<le> (1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n           sqrt (1 + (cmod b)\\<^sup>2)\\<rbrakk>\n  \\<Longrightarrow> cmod (a - b) * (1 + (cmod c)\\<^sup>2) /\n                    ((1 + (cmod c)\\<^sup>2) * sqrt (1 + (cmod a)\\<^sup>2) *\n                     sqrt (1 + (cmod b)\\<^sup>2))\n                    \\<le> (cmod (a - c) * sqrt (1 + (cmod c)\\<^sup>2) *\n                           sqrt (1 + (cmod b)\\<^sup>2) +\n                           cmod (c - b) * sqrt (1 + (cmod c)\\<^sup>2) *\n                           sqrt (1 + (cmod a)\\<^sup>2)) /\n                          ((1 + (cmod c)\\<^sup>2) *\n                           sqrt (1 + (cmod a)\\<^sup>2) *\n                           sqrt (1 + (cmod b)\\<^sup>2))\n  0 < sqrt (1 + (cmod a)\\<^sup>2)\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          cmod (c - b) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "by (simp add: add_divide_distrib)"], ["proof (state)\nthis:\n  cmod (a - b) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n  \\<le> cmod (a - c) /\n        (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n        cmod (c - b) /\n        (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_fs_triangle_infinite1: \n  shows \"1 / sqrt(1 + (cmod b)\\<^sup>2) \\<le> 1 / sqrt(1 + (cmod c)\\<^sup>2) + cmod (b - c) / (sqrt(1 + (cmod b)\\<^sup>2) * sqrt(1 + (cmod c)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "let ?bb = \"sqrt (1 + (cmod b)\\<^sup>2)\" and ?cc = \"sqrt (1 + (cmod c)\\<^sup>2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have \"?bb > 0\" \"?cc > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sqrt (1 + (cmod b)\\<^sup>2) &&& 0 < sqrt (1 + (cmod c)\\<^sup>2)", "by (metis add_strict_increasing real_sqrt_gt_0_iff zero_le_power2 zero_less_one)+"], ["proof (state)\nthis:\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "hence *: \"?bb * ?cc \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "have **: \"(?cc - ?bb) / (?bb * ?cc) = 1 / ?bb - 1 / ?cc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt (1 + (cmod c)\\<^sup>2) - sqrt (1 + (cmod b)\\<^sup>2)) /\n    (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) =\n    1 / sqrt (1 + (cmod b)\\<^sup>2) - 1 / sqrt (1 + (cmod c)\\<^sup>2)", "using \\<open>sqrt (1 + (cmod b)\\<^sup>2) > 0\\<close>  \\<open>sqrt (1 + (cmod c)\\<^sup>2) > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n  0 < sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (sqrt (1 + (cmod c)\\<^sup>2) - sqrt (1 + (cmod b)\\<^sup>2)) /\n    (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) =\n    1 / sqrt (1 + (cmod b)\\<^sup>2) - 1 / sqrt (1 + (cmod c)\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (sqrt (1 + (cmod c)\\<^sup>2) - sqrt (1 + (cmod b)\\<^sup>2)) /\n  (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) =\n  1 / sqrt (1 + (cmod b)\\<^sup>2) - 1 / sqrt (1 + (cmod c)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "show \"1 / ?bb \\<le> 1 / ?cc + cmod (b - c) / (?bb * ?cc)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "using divide_right_mono[OF cmod_diff_ge[of c b] *]"], ["proof (prove)\nusing this:\n  (sqrt (1 + (cmod c)\\<^sup>2) - sqrt (1 + (cmod b)\\<^sup>2)) /\n  (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n  \\<le> cmod (c - b) /\n        (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod b)\\<^sup>2)\n    \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n          cmod (b - c) /\n          (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))", "by (subst (asm) **) (simp add: field_simps norm_minus_commute)"], ["proof (state)\nthis:\n  1 / sqrt (1 + (cmod b)\\<^sup>2)\n  \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n        cmod (b - c) /\n        (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_fs_triangle_infinite2:\n  shows \"1 / sqrt(1 + (cmod a)\\<^sup>2) \\<le> cmod (a - c) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod c)\\<^sup>2)) + 1 / sqrt(1 + (cmod c)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod a)\\<^sup>2)\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          1 / sqrt (1 + (cmod c)\\<^sup>2)", "using dist_fs_triangle_infinite1[of a c]"], ["proof (prove)\nusing this:\n  1 / sqrt (1 + (cmod a)\\<^sup>2)\n  \\<le> 1 / sqrt (1 + (cmod c)\\<^sup>2) +\n        cmod (a - c) /\n        (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 1 / sqrt (1 + (cmod a)\\<^sup>2)\n    \\<le> cmod (a - c) /\n          (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n          1 / sqrt (1 + (cmod c)\\<^sup>2)", "by simp"], ["", "lemma dist_fs_triangle_infinite3:\n  shows \"cmod(a - b) / (sqrt (1+(cmod a)\\<^sup>2) * sqrt (1+(cmod b)\\<^sup>2)) \\<le> 1 / sqrt(1 + (cmod a)\\<^sup>2) + 1 / sqrt(1 + (cmod b)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "let ?aa = \"sqrt (1 + (cmod a)\\<^sup>2)\" and ?bb = \"sqrt (1 + (cmod b)\\<^sup>2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "have \"?aa > 0\" \"?bb > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sqrt (1 + (cmod a)\\<^sup>2) &&& 0 < sqrt (1 + (cmod b)\\<^sup>2)", "by (metis add_strict_increasing real_sqrt_gt_0_iff zero_le_power2 zero_less_one)+"], ["proof (state)\nthis:\n  0 < sqrt (1 + (cmod a)\\<^sup>2)\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "hence *: \"?aa * ?bb \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < sqrt (1 + (cmod a)\\<^sup>2)\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "have **: \"(?aa + ?bb) / (?aa * ?bb) = 1 / ?aa + 1 / ?bb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt (1 + (cmod a)\\<^sup>2) + sqrt (1 + (cmod b)\\<^sup>2)) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "using \\<open>?aa > 0\\<close> \\<open>?bb > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < sqrt (1 + (cmod a)\\<^sup>2)\n  0 < sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (sqrt (1 + (cmod a)\\<^sup>2) + sqrt (1 + (cmod b)\\<^sup>2)) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n    1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (sqrt (1 + (cmod a)\\<^sup>2) + sqrt (1 + (cmod b)\\<^sup>2)) /\n  (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)) =\n  1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "show \"cmod (a - b) / (?aa * ?bb) \\<le> 1 / ?aa + 1 / ?bb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "using divide_right_mono[OF cmod_diff_le[of a b] *]"], ["proof (prove)\nusing this:\n  cmod (a - b) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n  \\<le> (sqrt (1 + (cmod a)\\<^sup>2) + sqrt (1 + (cmod b)\\<^sup>2)) /\n        (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cmod (a - b) /\n    (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n    \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)", "by (subst (asm) **) (simp add: field_simps norm_minus_commute)"], ["proof (state)\nthis:\n  cmod (a - b) / (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2))\n  \\<le> 1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_fs_triangle:\n  shows \"dist_fs A B \\<le> dist_fs A C + dist_fs C B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"A = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. A \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  A = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. A = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. A \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"B = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  B = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. B = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"C = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  C = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>A = \\<infinity>\\<^sub>h\\<close> \\<open>B = \\<infinity>\\<^sub>h\\<close> \\<open>C = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  A = \\<infinity>\\<^sub>h\n  B = \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by simp"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<infinity>\\<^sub>h", "obtain c where \"C = of_complex c\""], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of C]"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. C = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>A = \\<infinity>\\<^sub>h\\<close> \\<open>B = \\<infinity>\\<^sub>h\\<close> \\<open>C = of_complex c\\<close>"], ["proof (prove)\nusing this:\n  A = \\<infinity>\\<^sub>h\n  B = \\<infinity>\\<^sub>h\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by (simp add: dist_fs_infinite2 dist_fs_sym)"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  B \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  B \\<noteq> \\<infinity>\\<^sub>h", "obtain b where \"B = of_complex b\""], ["proof (prove)\nusing this:\n  B \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>b. B = of_complex b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of B]"], ["proof (prove)\nusing this:\n  B \\<noteq> \\<infinity>\\<^sub>h\n  B = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. B = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>b. B = of_complex b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B = of_complex b\n\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"C = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  C = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>A = \\<infinity>\\<^sub>h\\<close> \\<open>C = \\<infinity>\\<^sub>h\\<close> \\<open>B = of_complex b\\<close>"], ["proof (prove)\nusing this:\n  A = \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h\n  B = of_complex b\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by simp"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<infinity>\\<^sub>h", "obtain c where \"C = of_complex c\""], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of C]"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. C = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>A = \\<infinity>\\<^sub>h\\<close> \\<open>B = of_complex b\\<close> \\<open>C = of_complex c\\<close>"], ["proof (prove)\nusing this:\n  A = \\<infinity>\\<^sub>h\n  B = of_complex b\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using mult_left_mono[OF dist_fs_triangle_infinite1[of b c], of 2]"], ["proof (prove)\nusing this:\n  A = \\<infinity>\\<^sub>h\n  B = of_complex b\n  C = of_complex c\n  0 \\<le> 2 \\<Longrightarrow>\n  2 * (1 / sqrt (1 + (cmod b)\\<^sup>2))\n  \\<le> 2 *\n        (1 / sqrt (1 + (cmod c)\\<^sup>2) +\n         cmod (b - c) /\n         (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by (simp add: dist_fs_finite dist_fs_infinite1 dist_fs_infinite2 dist_fs_sym)"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. A \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  A \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. A \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> \\<infinity>\\<^sub>h", "obtain a where \"A = of_complex a\""], ["proof (prove)\nusing this:\n  A \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>a. A = of_complex a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of A]"], ["proof (prove)\nusing this:\n  A \\<noteq> \\<infinity>\\<^sub>h\n  A = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. A = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>a. A = of_complex a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A = of_complex a\n\ngoal (1 subgoal):\n 1. A \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"B = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  B = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. B = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"C = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  C = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>B = \\<infinity>\\<^sub>h\\<close> \\<open>C = \\<infinity>\\<^sub>h\\<close> \\<open>A = of_complex a\\<close>"], ["proof (prove)\nusing this:\n  B = \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h\n  A = of_complex a\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by (simp add: dist_fs_infinite2)"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<infinity>\\<^sub>h", "obtain c where \"C = of_complex c\""], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of C]"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. C = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>B = \\<infinity>\\<^sub>h\\<close> \\<open>C = of_complex c\\<close> \\<open>A = of_complex a\\<close>"], ["proof (prove)\nusing this:\n  B = \\<infinity>\\<^sub>h\n  C = of_complex c\n  A = of_complex a\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using mult_left_mono[OF dist_fs_triangle_infinite2[of a c], of 2]"], ["proof (prove)\nusing this:\n  B = \\<infinity>\\<^sub>h\n  C = of_complex c\n  A = of_complex a\n  0 \\<le> 2 \\<Longrightarrow>\n  2 * (1 / sqrt (1 + (cmod a)\\<^sup>2))\n  \\<le> 2 *\n        (cmod (a - c) /\n         (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n         1 / sqrt (1 + (cmod c)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by (simp add: dist_fs_finite dist_fs_infinite1 dist_fs_infinite2)"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  B \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  B \\<noteq> \\<infinity>\\<^sub>h", "obtain b where \"B = of_complex b\""], ["proof (prove)\nusing this:\n  B \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>b. B = of_complex b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of B]"], ["proof (prove)\nusing this:\n  B \\<noteq> \\<infinity>\\<^sub>h\n  B = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. B = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>b. B = of_complex b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B = of_complex b\n\ngoal (1 subgoal):\n 1. B \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "proof (cases \"C = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case True"], ["proof (state)\nthis:\n  C = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. C = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B\n 2. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "thus ?thesis"], ["proof (prove)\nusing this:\n  C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>C = \\<infinity>\\<^sub>h\\<close> \\<open>B = of_complex b\\<close> \\<open>A = of_complex a\\<close>"], ["proof (prove)\nusing this:\n  C = \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h\n  B = of_complex b\n  A = of_complex a\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using mult_left_mono[OF dist_fs_triangle_infinite3[of a b], of 2]"], ["proof (prove)\nusing this:\n  C = \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h\n  B = of_complex b\n  A = of_complex a\n  0 \\<le> 2 \\<Longrightarrow>\n  2 *\n  (cmod (a - b) /\n   (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)))\n  \\<le> 2 *\n        (1 / sqrt (1 + (cmod a)\\<^sup>2) + 1 / sqrt (1 + (cmod b)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by (simp add: dist_fs_finite dist_fs_infinite1 dist_fs_infinite2)"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "case False"], ["proof (state)\nthis:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<infinity>\\<^sub>h", "obtain c where \"C = of_complex c\""], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of C]"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<infinity>\\<^sub>h\n  C = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. C = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>c. C = of_complex c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    dist_fs A B \\<le> dist_fs A C + dist_fs C B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using \\<open>A = of_complex a\\<close> \\<open>B = of_complex b\\<close> \\<open>C = of_complex c\\<close>"], ["proof (prove)\nusing this:\n  A = of_complex a\n  B = of_complex b\n  C = of_complex c\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "using mult_left_mono[OF dist_fs_triangle_finite[of a b c], of 2]"], ["proof (prove)\nusing this:\n  A = of_complex a\n  B = of_complex b\n  C = of_complex c\n  0 \\<le> 2 \\<Longrightarrow>\n  2 *\n  (cmod (a - b) /\n   (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod b)\\<^sup>2)))\n  \\<le> 2 *\n        (cmod (a - c) /\n         (sqrt (1 + (cmod a)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)) +\n         cmod (c - b) /\n         (sqrt (1 + (cmod b)\\<^sup>2) * sqrt (1 + (cmod c)\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. dist_fs A B \\<le> dist_fs A C + dist_fs C B", "by (simp add: dist_fs_finite norm_minus_commute dist_fs_sym)"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs A B \\<le> dist_fs A C + dist_fs C B\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>$\\mathbb{C}P^1$ with Fubini-Study metric is a metric space\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Using the (already available) fact that $\\mathbb{R}^3$ is a metric space (under the distance\nfunction $\\lambda\\ x\\ y.\\ @{term norm}(x - y)$), it was not difficult to show that the type @{term\ncomplex_homo} equipped with @{term dist_fs} is a metric space, i.e., an instantiation of the @{term\nmetric_space} locale.\\<close>"], ["", "instantiation complex_homo :: metric_space\nbegin"], ["", "definition \"dist_complex_homo = dist_fs\""], ["", "definition \"(uniformity_complex_homo :: (complex_homo \\<times> complex_homo) filter) = (INF e\\<in>{0<..}. principal {(x, y). dist_class.dist x y < e})\""], ["", "definition \"open_complex_homo (U :: complex_homo set) = (\\<forall> x \\<in> U. eventually (\\<lambda>(x', y). x' = x \\<longrightarrow> y \\<in> U) uniformity)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex_homo, metric_space_class)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y. (dist x y = 0) = (x = y)\n 4. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "fix x y :: complex_homo"], ["proof (state)\ngoal (4 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y. (dist x y = 0) = (x = y)\n 4. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "show \"(dist_class.dist x y = 0) = (x = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist x y = 0) = (x = y)", "unfolding dist_complex_homo_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist_fs x y = 0) = (x = y)", "using dist_fs_zero1[of x] dist_fs_zero2[of x y]"], ["proof (prove)\nusing this:\n  dist_fs x x = 0\n  dist_fs x y = 0 \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. (dist_fs x y = 0) = (x = y)", "by auto"], ["proof (state)\nthis:\n  (dist x y = 0) = (x = y)\n\ngoal (3 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "fix x y z :: complex_homo"], ["proof (state)\ngoal (3 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "show \"dist_class.dist x y \\<le> dist_class.dist x z + dist_class.dist y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> dist x z + dist y z", "unfolding dist_complex_homo_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs x y \\<le> dist_fs x z + dist_fs y z", "using dist_fs_triangle[of x y z]"], ["proof (prove)\nusing this:\n  dist_fs x y \\<le> dist_fs x z + dist_fs z y\n\ngoal (1 subgoal):\n 1. dist_fs x y \\<le> dist_fs x z + dist_fs y z", "by (simp add: dist_fs_sym)"], ["proof (state)\nthis:\n  dist x y \\<le> dist x z + dist y z\n\ngoal (2 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)", "qed (simp_all add: open_complex_homo_def uniformity_complex_homo_def)"], ["", "end"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Chordal distance on the Riemann sphere\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Distance of the two points is given by the length of the chord. We show that it corresponds to\nthe Fubini-Study metric in the plane.\\<close>"], ["", "definition dist_riemann_sphere_r3 :: \"R3 \\<Rightarrow> R3 \\<Rightarrow> real\" where [simp]:\n  \"dist_riemann_sphere_r3 M1 M2 =\n     (let (x1, y1, z1) = M1;\n          (x2, y2, z2) = M2\n       in norm (x1 - x2, y1 - y2, z1 - z2))\""], ["", "lemma dist_riemann_sphere_r3_inner:\n  assumes \"M1 \\<in> unit_sphere\" and \"M2 \\<in> unit_sphere\"\n  shows  \"(dist_riemann_sphere_r3 M1 M2)\\<^sup>2 = 2 - 2 * inner M1 M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 = 2 - 2 * inner M1 M2", "using assms"], ["proof (prove)\nusing this:\n  M1 \\<in> unit_sphere\n  M2 \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 = 2 - 2 * inner M1 M2", "apply (cases M1, cases M2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a b c.\n       \\<lbrakk>M2 \\<in> unit_sphere; M1 = Rep_riemann_sphere x;\n        M1 \\<in> unit_sphere; M2 \\<in> unit_sphere; M2 = (a, b, c)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 =\n                         2 - 2 * inner M1 M2", "apply (auto simp add: norm_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a b c xa aa ba.\n       \\<lbrakk>a * a + b * b + c * c = 1; M1 = (xa, aa, ba);\n        M2 = (a, b, c); Rep_riemann_sphere x = (xa, aa, ba);\n        xa * xa + aa * aa + ba * ba = 1\\<rbrakk>\n       \\<Longrightarrow> (xa - a)\\<^sup>2 +\n                         ((aa - b)\\<^sup>2 + (ba - c)\\<^sup>2) =\n                         2 - (2 * (xa * a) + (2 * (aa * b) + 2 * (ba * c)))", "apply (simp add: power2_eq_square field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition dist_riemann_sphere' :: \"riemann_sphere \\<Rightarrow> riemann_sphere \\<Rightarrow> real\" is dist_riemann_sphere_r3"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dist_riemann_sphere_ge_0 [simp]: \n  shows \"dist_riemann_sphere' M1 M2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist_riemann_sphere' M1 M2", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M1 M2.\n       \\<lbrakk>M1 \\<in> unit_sphere; M2 \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> dist_riemann_sphere_r3 M1 M2", "using norm_ge_zero"], ["proof (prove)\nusing this:\n  0 \\<le> norm ?x\n\ngoal (1 subgoal):\n 1. \\<And>M1 M2.\n       \\<lbrakk>M1 \\<in> unit_sphere; M2 \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> dist_riemann_sphere_r3 M1 M2", "by (simp add: split_def Let_def)"], ["", "text \\<open>Using stereographic projection we prove the connection between chordal metric on the spehere\nand Fubini-Study metric in the plane.\\<close>"], ["", "lemma dist_stereographic_finite:\n  assumes \"stereographic M1 = of_complex m1\"  and \"stereographic M2 = of_complex m2\"\n  shows \"dist_riemann_sphere' M1 M2 = 2 * cmod (m1 - m2) / (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    2 * cmod (m1 - m2) /\n    (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))", "using assms"], ["proof (prove)\nusing this:\n  stereographic M1 = of_complex m1\n  stereographic M2 = of_complex m2\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    2 * cmod (m1 - m2) /\n    (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "have *: \"M1 = inv_stereographic (of_complex m1)\"  \"M2 = inv_stereographic (of_complex m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 = inv_stereographic (of_complex m1) &&&\n    M2 = inv_stereographic (of_complex m2)", "using inv_stereographic_is_inv assms"], ["proof (prove)\nusing this:\n  inv_stereographic = inv stereographic\n  stereographic M1 = of_complex m1\n  stereographic M2 = of_complex m2\n\ngoal (1 subgoal):\n 1. M1 = inv_stereographic (of_complex m1) &&&\n    M2 = inv_stereographic (of_complex m2)", "by (metis inv_stereographic_stereographic)+"], ["proof (state)\nthis:\n  M1 = inv_stereographic (of_complex m1)\n  M2 = inv_stereographic (of_complex m2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "have \"(1 + (cmod m1)\\<^sup>2) \\<noteq> 0\"  \"(1 + (cmod m2)\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m1)\\<^sup>2 \\<noteq> 0 &&& 1 + (cmod m2)\\<^sup>2 \\<noteq> 0", "by (smt power2_less_0)+"], ["proof (state)\nthis:\n  1 + (cmod m1)\\<^sup>2 \\<noteq> 0\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "have \"(1 + (cmod m1)\\<^sup>2) > 0\"  \"(1 + (cmod m2)\\<^sup>2) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + (cmod m1)\\<^sup>2 &&& 0 < 1 + (cmod m2)\\<^sup>2", "by (smt realpow_square_minus_le)+"], ["proof (state)\nthis:\n  0 < 1 + (cmod m1)\\<^sup>2\n  0 < 1 + (cmod m2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "hence \"(1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2) > 0\""], ["proof (prove)\nusing this:\n  0 < 1 + (cmod m1)\\<^sup>2\n  0 < 1 + (cmod m2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)", "by (metis norm_mult_less norm_zero power2_eq_square zero_power2)"], ["proof (state)\nthis:\n  0 < (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "hence ++: \"sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2)) > 0\""], ["proof (prove)\nusing this:\n  0 < (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 < sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))", "using real_sqrt_gt_0_iff"], ["proof (prove)\nusing this:\n  0 < (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)\n  (0 < sqrt ?y) = (0 < ?y)\n\ngoal (1 subgoal):\n 1. 0 < sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 < sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "hence **: \"(2 * cmod (m1 - m2) / sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))) \\<ge> 0 \\<longleftrightarrow> cmod (m1 - m2) \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))\n\ngoal (1 subgoal):\n 1. (0 \\<le> 2 * cmod (m1 - m2) /\n             sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))) =\n    (0 \\<le> cmod (m1 - m2))", "by (metis diff_self divide_nonneg_pos mult_2 norm_ge_zero norm_triangle_ineq4 norm_zero)"], ["proof (state)\nthis:\n  (0 \\<le> 2 * cmod (m1 - m2) /\n           sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))) =\n  (0 \\<le> cmod (m1 - m2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "have \"(dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2) = 4 * (cmod (m1 - m2))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n    (1 + (cmod m2)\\<^sup>2) =\n    4 * (cmod (m1 - m2))\\<^sup>2", "using *"], ["proof (prove)\nusing this:\n  M1 = inv_stereographic (of_complex m1)\n  M2 = inv_stereographic (of_complex m2)\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n    (1 + (cmod m2)\\<^sup>2) =\n    4 * (cmod (m1 - m2))\\<^sup>2", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M1 m1 M2 m2 M1a m1a M2a m2a.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 (of_complex_cvec m1);\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2);\n        M1a \\<in> unit_sphere;\n        M1a = inv_stereographic_hcoords_r3 (of_complex_hcoords m1a);\n        M2a \\<in> unit_sphere;\n        M2a = inv_stereographic_hcoords_r3 (of_complex_hcoords m2a)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4 * (cmod (m1 - m2))\\<^sup>2", "fix m1 m2 M1 M2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M1 m1 M2 m2 M1a m1a M2a m2a.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 (of_complex_cvec m1);\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2);\n        M1a \\<in> unit_sphere;\n        M1a = inv_stereographic_hcoords_r3 (of_complex_hcoords m1a);\n        M2a \\<in> unit_sphere;\n        M2a = inv_stereographic_hcoords_r3 (of_complex_hcoords m2a)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4 * (cmod (m1 - m2))\\<^sup>2", "assume us: \"M1 \\<in> unit_sphere\" \"M2 \\<in> unit_sphere\" and\n        *: \"M1 = inv_stereographic_cvec_r3 (of_complex_cvec m1)\" \"M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\""], ["proof (state)\nthis:\n  M1 \\<in> unit_sphere\n  M2 \\<in> unit_sphere\n  M1 = inv_stereographic_cvec_r3 (of_complex_cvec m1)\n  M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\n\ngoal (1 subgoal):\n 1. \\<And>M1 m1 M2 m2 M1a m1a M2a m2a.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 (of_complex_cvec m1);\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2);\n        M1a \\<in> unit_sphere;\n        M1a = inv_stereographic_hcoords_r3 (of_complex_hcoords m1a);\n        M2a \\<in> unit_sphere;\n        M2a = inv_stereographic_hcoords_r3 (of_complex_hcoords m2a)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4 * (cmod (m1 - m2))\\<^sup>2", "have \"(1 + (cmod m1)\\<^sup>2) \\<noteq> 0\"  \"(1 + (cmod m2)\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m1)\\<^sup>2 \\<noteq> 0 &&& 1 + (cmod m2)\\<^sup>2 \\<noteq> 0", "by (smt power2_less_0)+"], ["proof (state)\nthis:\n  1 + (cmod m1)\\<^sup>2 \\<noteq> 0\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M1 m1 M2 m2 M1a m1a M2a m2a.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 (of_complex_cvec m1);\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2);\n        M1a \\<in> unit_sphere;\n        M1a = inv_stereographic_hcoords_r3 (of_complex_hcoords m1a);\n        M2a \\<in> unit_sphere;\n        M2a = inv_stereographic_hcoords_r3 (of_complex_hcoords m2a)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4 * (cmod (m1 - m2))\\<^sup>2", "thus \"(dist_riemann_sphere_r3 M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2) =\n          4 * (cmod (m1 - m2))\\<^sup>2\""], ["proof (prove)\nusing this:\n  1 + (cmod m1)\\<^sup>2 \\<noteq> 0\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n    (1 + (cmod m2)\\<^sup>2) =\n    4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst dist_riemann_sphere_r3_inner[OF us])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (2 - 2 * inner M1 M2) * (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst *)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (2 -\n                       2 *\n                       inner\n                        (inv_stereographic_cvec_r3 (of_complex_cvec m1))\n                        (inv_stereographic_cvec_r3 (of_complex_cvec m2))) *\n                      (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (simp add: dist_riemann_sphere_r3_inner[OF us] complex_mult_cnj_cmod)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (2 -\n                       (8 * (Re m1 * Re m2) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)) +\n                        (8 * (Im m1 * Im m2) /\n                         ((1 + (cmod m1)\\<^sup>2) *\n                          (1 + (cmod m2)\\<^sup>2)) +\n                         2 *\n                         (((cmod m1)\\<^sup>2 - 1) *\n                          ((cmod m2)\\<^sup>2 - 1)) /\n                         ((1 + (cmod m1)\\<^sup>2) *\n                          (1 + (cmod m2)\\<^sup>2))))) *\n                      (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst left_diff_distrib[of 2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (2 * (1 + (cmod m1)\\<^sup>2) -\n                       (8 * (Re m1 * Re m2) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)) +\n                        (8 * (Im m1 * Im m2) /\n                         ((1 + (cmod m1)\\<^sup>2) *\n                          (1 + (cmod m2)\\<^sup>2)) +\n                         2 *\n                         (((cmod m1)\\<^sup>2 - 1) *\n                          ((cmod m2)\\<^sup>2 - 1)) /\n                         ((1 + (cmod m1)\\<^sup>2) *\n                          (1 + (cmod m2)\\<^sup>2)))) *\n                       (1 + (cmod m1)\\<^sup>2)) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst left_diff_distrib[of \"2*(1+(cmod m1)\\<^sup>2)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 * (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) /\n                       ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)) +\n                       (8 * (Im m1 * Im m2) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)))) *\n                      (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst distrib_right[of _ _ \"(1 + (cmod m1)\\<^sup>2)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 * (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) /\n                       ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)) *\n                       (1 + (cmod m1)\\<^sup>2) +\n                       (8 * (Im m1 * Im m2) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2))) *\n                       (1 + (cmod m1)\\<^sup>2)) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst distrib_right[of _ _ \"(1 + (cmod m1)\\<^sup>2)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 * (1 + (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) /\n                       ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)) *\n                       (1 + (cmod m1)\\<^sup>2) +\n                       (8 * (Im m1 * Im m2) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)) *\n                        (1 + (cmod m1)\\<^sup>2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        ((1 + (cmod m1)\\<^sup>2) *\n                         (1 + (cmod m2)\\<^sup>2)) *\n                        (1 + (cmod m1)\\<^sup>2))) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (2 + 2 * (cmod m1)\\<^sup>2) *\n                      (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) / (1 + (cmod m2)\\<^sup>2) +\n                       (8 * (Im m1 * Im m2) / (1 + (cmod m2)\\<^sup>2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        (1 + (cmod m2)\\<^sup>2))) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst distrib_right[of _ _ \"(1 + (cmod m2)\\<^sup>2)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 * (1 + (cmod m2)\\<^sup>2) +\n                      2 * (cmod m1)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) / (1 + (cmod m2)\\<^sup>2) +\n                       (8 * (Im m1 * Im m2) / (1 + (cmod m2)\\<^sup>2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        (1 + (cmod m2)\\<^sup>2))) *\n                      (1 + (cmod m2)\\<^sup>2) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst distrib_right[of _ _ \"(1 + (cmod m2)\\<^sup>2)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 * (1 + (cmod m2)\\<^sup>2) +\n                      2 * (cmod m1)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) / (1 + (cmod m2)\\<^sup>2) *\n                       (1 + (cmod m2)\\<^sup>2) +\n                       (8 * (Im m1 * Im m2) / (1 + (cmod m2)\\<^sup>2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        (1 + (cmod m2)\\<^sup>2)) *\n                       (1 + (cmod m2)\\<^sup>2)) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst distrib_right[of _ _ \"(1 + (cmod m2)\\<^sup>2)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 * (1 + (cmod m2)\\<^sup>2) +\n                      2 * (cmod m1)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) / (1 + (cmod m2)\\<^sup>2) *\n                       (1 + (cmod m2)\\<^sup>2) +\n                       (8 * (Im m1 * Im m2) / (1 + (cmod m2)\\<^sup>2) *\n                        (1 + (cmod m2)\\<^sup>2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)) /\n                        (1 + (cmod m2)\\<^sup>2) *\n                        (1 + (cmod m2)\\<^sup>2))) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + (cmod m1)\\<^sup>2 \\<noteq> 0;\n     1 + (cmod m2)\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 + 2 * (cmod m2)\\<^sup>2 +\n                      2 * (cmod m1)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) +\n                       (8 * (Im m1 * Im m2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)))) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst (asm) cmod_square)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + Re (m1 * cnj m1) \\<noteq> 0;\n     1 + Re (m2 * cnj m2) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 + 2 * (cmod m2)\\<^sup>2 +\n                      2 * (cmod m1)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) -\n                      (8 * (Re m1 * Re m2) +\n                       (8 * (Im m1 * Im m2) +\n                        2 *\n                        (((cmod m1)\\<^sup>2 - 1) *\n                         ((cmod m2)\\<^sup>2 - 1)))) =\n                      4 * (cmod (m1 - m2))\\<^sup>2", "apply (subst cmod_square)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 + Re (m1 * cnj m1) \\<noteq> 0;\n     1 + Re (m2 * cnj m2) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 2 + 2 * Re (m2 * cnj m2) +\n                      2 * Re (m1 * cnj m1) * (1 + Re (m2 * cnj m2)) -\n                      (8 * (Re m1 * Re m2) +\n                       (8 * (Im m1 * Im m2) +\n                        2 *\n                        ((Re (m1 * cnj m1) - 1) *\n                         (Re (m2 * cnj m2) - 1)))) =\n                      4 * Re ((m1 - m2) * cnj (m1 - m2))", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n  (1 + (cmod m2)\\<^sup>2) =\n  4 * (cmod (m1 - m2))\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n  (1 + (cmod m2)\\<^sup>2) =\n  4 * (cmod (m1 - m2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "hence \"(dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 * (cmod (m1 - m2))\\<^sup>2 / ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\""], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n  (1 + (cmod m2)\\<^sup>2) =\n  4 * (cmod (m1 - m2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n    4 * (cmod (m1 - m2))\\<^sup>2 /\n    ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))", "using \\<open>(1 + (cmod m1)\\<^sup>2) \\<noteq> 0\\<close>  \\<open>(1 + (cmod m2)\\<^sup>2) \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n  (1 + (cmod m2)\\<^sup>2) =\n  4 * (cmod (m1 - m2))\\<^sup>2\n  1 + (cmod m1)\\<^sup>2 \\<noteq> 0\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n    4 * (cmod (m1 - m2))\\<^sup>2 /\n    ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))", "using eq_divide_imp[of \"(1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)\" \"(dist_riemann_sphere' M1 M2)\\<^sup>2\" \"4 * (cmod (m1 - m2))\\<^sup>2\"]"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m1)\\<^sup>2) *\n  (1 + (cmod m2)\\<^sup>2) =\n  4 * (cmod (m1 - m2))\\<^sup>2\n  1 + (cmod m1)\\<^sup>2 \\<noteq> 0\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n  \\<lbrakk>(1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2) \\<noteq> 0;\n   (dist_riemann_sphere' M1 M2)\\<^sup>2 *\n   ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)) =\n   4 * (cmod (m1 - m2))\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n                    4 * (cmod (m1 - m2))\\<^sup>2 /\n                    ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n    4 * (cmod (m1 - m2))\\<^sup>2 /\n    ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n  4 * (cmod (m1 - m2))\\<^sup>2 /\n  ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>stereographic M1 = of_complex m1;\n     stereographic M2 = of_complex m2\\<rbrakk>\n    \\<Longrightarrow> dist_riemann_sphere' M1 M2 =\n                      2 * cmod (m1 - m2) /\n                      (sqrt (1 + (cmod m1)\\<^sup>2) *\n                       sqrt (1 + (cmod m2)\\<^sup>2))", "thus \"dist_riemann_sphere' M1 M2 = 2 * cmod (m1 - m2) / (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))\""], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n  4 * (cmod (m1 - m2))\\<^sup>2 /\n  ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    2 * cmod (m1 - m2) /\n    (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))", "using power2_eq_iff[of \"dist_riemann_sphere' M1 M2\" \"2 * (cmod (m1 - m2)) / sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\"]"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n  4 * (cmod (m1 - m2))\\<^sup>2 /\n  ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\n  ((dist_riemann_sphere' M1 M2)\\<^sup>2 =\n   (2 * cmod (m1 - m2) /\n    sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)))\\<^sup>2) =\n  (dist_riemann_sphere' M1 M2 =\n   2 * cmod (m1 - m2) /\n   sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)) \\<or>\n   dist_riemann_sphere' M1 M2 =\n   - (2 * cmod (m1 - m2) /\n      sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))))\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    2 * cmod (m1 - m2) /\n    (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))", "using \\<open>(1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2) > 0\\<close>  \\<open>(1 + (cmod m1)\\<^sup>2) > 0\\<close> \\<open>(1 + (cmod m2)\\<^sup>2) > 0\\<close>"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 =\n  4 * (cmod (m1 - m2))\\<^sup>2 /\n  ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))\n  ((dist_riemann_sphere' M1 M2)\\<^sup>2 =\n   (2 * cmod (m1 - m2) /\n    sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)))\\<^sup>2) =\n  (dist_riemann_sphere' M1 M2 =\n   2 * cmod (m1 - m2) /\n   sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)) \\<or>\n   dist_riemann_sphere' M1 M2 =\n   - (2 * cmod (m1 - m2) /\n      sqrt ((1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2))))\n  0 < (1 + (cmod m1)\\<^sup>2) * (1 + (cmod m2)\\<^sup>2)\n  0 < 1 + (cmod m1)\\<^sup>2\n  0 < 1 + (cmod m2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    2 * cmod (m1 - m2) /\n    (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))", "apply (auto simp add: power2_eq_square real_sqrt_mult[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < 1 + cmod m1 * cmod m1; 0 < 1 + cmod m2 * cmod m2;\n     dist_riemann_sphere' M1 M2 =\n     - (2 * cmod (m1 - m2) /\n        sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2)))\\<rbrakk>\n    \\<Longrightarrow> m1 = m2", "using dist_riemann_sphere_ge_0[of M1 M2] **"], ["proof (prove)\nusing this:\n  0 \\<le> dist_riemann_sphere' M1 M2\n  (0 \\<le> 2 * cmod (m1 - m2) /\n           sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))) =\n  (0 \\<le> cmod (m1 - m2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < 1 + cmod m1 * cmod m1; 0 < 1 + cmod m2 * cmod m2;\n     dist_riemann_sphere' M1 M2 =\n     - (2 * cmod (m1 - m2) /\n        sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2)))\\<rbrakk>\n    \\<Longrightarrow> m1 = m2", "using ++ divide_le_0_iff"], ["proof (prove)\nusing this:\n  0 \\<le> dist_riemann_sphere' M1 M2\n  (0 \\<le> 2 * cmod (m1 - m2) /\n           sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))) =\n  (0 \\<le> cmod (m1 - m2))\n  0 < sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2))\n  (?a / ?b \\<le> (0::?'a)) =\n  ((0::?'a) \\<le> ?a \\<and> ?b \\<le> (0::?'a) \\<or>\n   ?a \\<le> (0::?'a) \\<and> (0::?'a) \\<le> ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < 1 + cmod m1 * cmod m1; 0 < 1 + cmod m2 * cmod m2;\n     dist_riemann_sphere' M1 M2 =\n     - (2 * cmod (m1 - m2) /\n        sqrt ((1 + cmod m1 * cmod m1) * (1 + cmod m2 * cmod m2)))\\<rbrakk>\n    \\<Longrightarrow> m1 = m2", "by force"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 =\n  2 * cmod (m1 - m2) /\n  (sqrt (1 + (cmod m1)\\<^sup>2) * sqrt (1 + (cmod m2)\\<^sup>2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_stereographic_infinite:\n  assumes \"stereographic M1 = \\<infinity>\\<^sub>h\" and \"stereographic M2 = of_complex m2\"\n  shows \"dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "have *: \"M1 = inv_stereographic \\<infinity>\\<^sub>h\"  \"M2 = inv_stereographic (of_complex m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 = inv_stereographic \\<infinity>\\<^sub>h &&&\n    M2 = inv_stereographic (of_complex m2)", "using inv_stereographic_is_inv assms"], ["proof (prove)\nusing this:\n  inv_stereographic = inv stereographic\n  stereographic M1 = \\<infinity>\\<^sub>h\n  stereographic M2 = of_complex m2\n\ngoal (1 subgoal):\n 1. M1 = inv_stereographic \\<infinity>\\<^sub>h &&&\n    M2 = inv_stereographic (of_complex m2)", "by (metis inv_stereographic_stereographic)+"], ["proof (state)\nthis:\n  M1 = inv_stereographic \\<infinity>\\<^sub>h\n  M2 = inv_stereographic (of_complex m2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "have \"(1 + (cmod m2)\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m2)\\<^sup>2 \\<noteq> 0", "by (smt power2_less_0)"], ["proof (state)\nthis:\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "have \"(1 + (cmod m2)\\<^sup>2) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + (cmod m2)\\<^sup>2", "by (smt realpow_square_minus_le)+"], ["proof (state)\nthis:\n  0 < 1 + (cmod m2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "hence \"sqrt (1 + cmod m2 * cmod m2) > 0\""], ["proof (prove)\nusing this:\n  0 < 1 + (cmod m2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < sqrt (1 + cmod m2 * cmod m2)", "using real_sqrt_gt_0_iff"], ["proof (prove)\nusing this:\n  0 < 1 + (cmod m2)\\<^sup>2\n  (0 < sqrt ?y) = (0 < ?y)\n\ngoal (1 subgoal):\n 1. 0 < sqrt (1 + cmod m2 * cmod m2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 < sqrt (1 + cmod m2 * cmod m2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "hence **: \"2 / sqrt (1 + cmod m2 * cmod m2) > 0\""], ["proof (prove)\nusing this:\n  0 < sqrt (1 + cmod m2 * cmod m2)\n\ngoal (1 subgoal):\n 1. 0 < 2 / sqrt (1 + cmod m2 * cmod m2)", "by simp"], ["proof (state)\nthis:\n  0 < 2 / sqrt (1 + cmod m2 * cmod m2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "have \"(dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4", "using *"], ["proof (prove)\nusing this:\n  M1 = inv_stereographic \\<infinity>\\<^sub>h\n  M2 = inv_stereographic (of_complex m2)\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M1 M2 m2.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_hcoords_r3 \\<infinity>\\<^sub>h\\<^sub>c;\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_hcoords_r3 (of_complex_hcoords m2)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M1 M2 m2.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v;\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M1 M2 m2.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v;\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4", "fix M1 M2 m2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M1 M2 m2.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v;\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4", "assume us: \"M1 \\<in> unit_sphere\" \"M2 \\<in> unit_sphere\" and\n           *: \"M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v\" \"M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\""], ["proof (state)\nthis:\n  M1 \\<in> unit_sphere\n  M2 \\<in> unit_sphere\n  M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v\n  M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\n\ngoal (1 subgoal):\n 1. \\<And>M1 M2 m2.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v;\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4", "have \"(1 + (cmod m2)\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m2)\\<^sup>2 \\<noteq> 0", "by (smt power2_less_0)"], ["proof (state)\nthis:\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M1 M2 m2.\n       \\<lbrakk>M1 \\<in> unit_sphere;\n        M1 = inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v;\n        M2 \\<in> unit_sphere;\n        M2 = inv_stereographic_cvec_r3 (of_complex_cvec m2)\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 *\n                         (1 + (cmod m2)\\<^sup>2) =\n                         4", "thus \"(dist_riemann_sphere_r3 M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4\""], ["proof (prove)\nusing this:\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4", "apply (subst dist_riemann_sphere_r3_inner[OF us])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m2)\\<^sup>2 \\<noteq> 0 \\<Longrightarrow>\n    (2 - 2 * inner M1 M2) * (1 + (cmod m2)\\<^sup>2) = 4", "apply (subst *)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m2)\\<^sup>2 \\<noteq> 0 \\<Longrightarrow>\n    (2 -\n     2 *\n     inner (inv_stereographic_cvec_r3 \\<infinity>\\<^sub>v)\n      (inv_stereographic_cvec_r3 (of_complex_cvec m2))) *\n    (1 + (cmod m2)\\<^sup>2) =\n    4", "apply (simp add: complex_mult_cnj_cmod)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (cmod m2)\\<^sup>2 \\<noteq> 0 \\<Longrightarrow>\n    (2 - (2 * (cmod m2)\\<^sup>2 - 2) / (1 + (cmod m2)\\<^sup>2)) *\n    (1 + (cmod m2)\\<^sup>2) =\n    4", "apply (subst left_diff_distrib[of 2], simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (dist_riemann_sphere_r3 M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "hence \"(dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)", "using \\<open>(1 + (cmod m2)\\<^sup>2) \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 * (1 + (cmod m2)\\<^sup>2) = 4\n  1 + (cmod m2)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "thus \"dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "using power2_eq_iff[of \"dist_riemann_sphere' M1 M2\" \"2 / sqrt (1 + (cmod m2)\\<^sup>2)\"]"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)\n  ((dist_riemann_sphere' M1 M2)\\<^sup>2 =\n   (2 / sqrt (1 + (cmod m2)\\<^sup>2))\\<^sup>2) =\n  (dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2) \\<or>\n   dist_riemann_sphere' M1 M2 = - (2 / sqrt (1 + (cmod m2)\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "using \\<open>(1 + (cmod m2)\\<^sup>2) > 0\\<close>"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere' M1 M2)\\<^sup>2 = 4 / (1 + (cmod m2)\\<^sup>2)\n  ((dist_riemann_sphere' M1 M2)\\<^sup>2 =\n   (2 / sqrt (1 + (cmod m2)\\<^sup>2))\\<^sup>2) =\n  (dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2) \\<or>\n   dist_riemann_sphere' M1 M2 = - (2 / sqrt (1 + (cmod m2)\\<^sup>2)))\n  0 < 1 + (cmod m2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)", "apply (auto simp add: power2_eq_square real_sqrt_mult[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < 1 + cmod m2 * cmod m2;\n     dist_riemann_sphere' M1 M2 =\n     - (2 / sqrt (1 + cmod m2 * cmod m2))\\<rbrakk>\n    \\<Longrightarrow> False", "using dist_riemann_sphere_ge_0[of M1 M2] **"], ["proof (prove)\nusing this:\n  0 \\<le> dist_riemann_sphere' M1 M2\n  0 < 2 / sqrt (1 + cmod m2 * cmod m2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < 1 + cmod m2 * cmod m2;\n     dist_riemann_sphere' M1 M2 =\n     - (2 / sqrt (1 + cmod m2 * cmod m2))\\<rbrakk>\n    \\<Longrightarrow> False", "by simp"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = 2 / sqrt (1 + (cmod m2)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_rieman_sphere_zero [simp]: \n  shows \"dist_riemann_sphere' M M = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M M = 0", "by transfer auto"], ["", "lemma dist_riemann_sphere_sym: \n  shows \"dist_riemann_sphere' M1 M2 = dist_riemann_sphere' M2 M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 = dist_riemann_sphere' M2 M1", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M1 M2.\n       \\<lbrakk>M1 \\<in> unit_sphere; M2 \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 M1 M2 =\n                         dist_riemann_sphere_r3 M2 M1", "fix M1 M2 :: R3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M1 M2.\n       \\<lbrakk>M1 \\<in> unit_sphere; M2 \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 M1 M2 =\n                         dist_riemann_sphere_r3 M2 M1", "obtain x1 y1 z1 x2 y2 z2 where MM: \"(x1, y1, z1) = M1\" \"(x2, y2, z2) = M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 y1 z1 x2 y2 z2.\n        \\<lbrakk>(x1, y1, z1) = M1; (x2, y2, z2) = M2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"M1\", cases \"M2\", auto)"], ["proof (state)\nthis:\n  (x1, y1, z1) = M1\n  (x2, y2, z2) = M2\n\ngoal (1 subgoal):\n 1. \\<And>M1 M2.\n       \\<lbrakk>M1 \\<in> unit_sphere; M2 \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 M1 M2 =\n                         dist_riemann_sphere_r3 M2 M1", "show \"dist_riemann_sphere_r3 M1 M2 = dist_riemann_sphere_r3 M2 M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 M1 M2 = dist_riemann_sphere_r3 M2 M1", "using norm_minus_cancel[of \"(x1 - x2, y1 - y2, z1 - z2)\"] MM[symmetric]"], ["proof (prove)\nusing this:\n  norm (- (x1 - x2, y1 - y2, z1 - z2)) = norm (x1 - x2, y1 - y2, z1 - z2)\n  M1 = (x1, y1, z1)\n  M2 = (x2, y2, z2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 M1 M2 = dist_riemann_sphere_r3 M2 M1", "by simp"], ["proof (state)\nthis:\n  dist_riemann_sphere_r3 M1 M2 = dist_riemann_sphere_r3 M2 M1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Central theorem that connects the two metrics.\\<close>"], ["", "lemma dist_stereographic:\n  shows \"dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "proof (cases \"M1 = North\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M1 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "case True"], ["proof (state)\nthis:\n  M1 = North\n\ngoal (2 subgoals):\n 1. M1 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "hence \"stereographic M1 = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  M1 = North\n\ngoal (1 subgoal):\n 1. stereographic M1 = \\<infinity>\\<^sub>h", "by (simp add: stereographic_North)"], ["proof (state)\nthis:\n  stereographic M1 = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. M1 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "proof (cases \"M2 = North\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M2 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "case True"], ["proof (state)\nthis:\n  M2 = North\n\ngoal (2 subgoals):\n 1. M2 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using \\<open>M1 = North\\<close> \\<open>M2 = North\\<close>"], ["proof (prove)\nusing this:\n  M1 = North\n  M2 = North\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "by auto"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "case False"], ["proof (state)\nthis:\n  M2 \\<noteq> North\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "hence \"stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  M2 \\<noteq> North\n\ngoal (1 subgoal):\n 1. stereographic M2 \\<noteq> \\<infinity>\\<^sub>h", "using stereographic_North[of M2]"], ["proof (prove)\nusing this:\n  M2 \\<noteq> North\n  (stereographic M2 = \\<infinity>\\<^sub>h) = (M2 = North)\n\ngoal (1 subgoal):\n 1. stereographic M2 \\<noteq> \\<infinity>\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "then"], ["proof (chain)\npicking this:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h", "obtain m2 where \"stereographic M2 = of_complex m2\""], ["proof (prove)\nusing this:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>m2.\n        stereographic M2 = of_complex m2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of \"stereographic M2\"]"], ["proof (prove)\nusing this:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\n  stereographic M2 = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. stereographic M2 = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>m2.\n        stereographic M2 = of_complex m2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  stereographic M2 = of_complex m2\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using \\<open>stereographic M2 = of_complex m2\\<close> \\<open>stereographic M1 = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  stereographic M2 = of_complex m2\n  stereographic M1 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using dist_fs_infinite1 dist_stereographic_infinite"], ["proof (prove)\nusing this:\n  stereographic M2 = of_complex m2\n  stereographic M1 = \\<infinity>\\<^sub>h\n  dist_fs (of_complex ?z1.0) \\<infinity>\\<^sub>h =\n  2 / sqrt (1 + (cmod ?z1.0)\\<^sup>2)\n  \\<lbrakk>stereographic ?M1.0 = \\<infinity>\\<^sub>h;\n   stereographic ?M2.0 = of_complex ?m2.0\\<rbrakk>\n  \\<Longrightarrow> dist_riemann_sphere' ?M1.0 ?M2.0 =\n                    2 / sqrt (1 + (cmod ?m2.0)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "by (simp add: dist_fs_sym)"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "case False"], ["proof (state)\nthis:\n  M1 \\<noteq> North\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "hence \"stereographic M1 \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  M1 \\<noteq> North\n\ngoal (1 subgoal):\n 1. stereographic M1 \\<noteq> \\<infinity>\\<^sub>h", "by (simp add: stereographic_North)"], ["proof (state)\nthis:\n  stereographic M1 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "then"], ["proof (chain)\npicking this:\n  stereographic M1 \\<noteq> \\<infinity>\\<^sub>h", "obtain m1 where \"stereographic M1 = of_complex m1\""], ["proof (prove)\nusing this:\n  stereographic M1 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>m1.\n        stereographic M1 = of_complex m1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of \"stereographic M1\"]"], ["proof (prove)\nusing this:\n  stereographic M1 \\<noteq> \\<infinity>\\<^sub>h\n  stereographic M1 = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. stereographic M1 = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>m1.\n        stereographic M1 = of_complex m1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  stereographic M1 = of_complex m1\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "proof (cases \"M2 = North\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M2 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "case True"], ["proof (state)\nthis:\n  M2 = North\n\ngoal (2 subgoals):\n 1. M2 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "hence \"stereographic M2 = \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  M2 = North\n\ngoal (1 subgoal):\n 1. stereographic M2 = \\<infinity>\\<^sub>h", "by (simp add: stereographic_North)"], ["proof (state)\nthis:\n  stereographic M2 = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. M2 = North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)\n 2. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using \\<open>stereographic M1 = of_complex m1\\<close> \\<open>stereographic M2 = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  stereographic M1 = of_complex m1\n  stereographic M2 = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using dist_fs_infinite2 dist_stereographic_infinite"], ["proof (prove)\nusing this:\n  stereographic M1 = of_complex m1\n  stereographic M2 = \\<infinity>\\<^sub>h\n  dist_fs \\<infinity>\\<^sub>h (of_complex ?z1.0) =\n  2 / sqrt (1 + (cmod ?z1.0)\\<^sup>2)\n  \\<lbrakk>stereographic ?M1.0 = \\<infinity>\\<^sub>h;\n   stereographic ?M2.0 = of_complex ?m2.0\\<rbrakk>\n  \\<Longrightarrow> dist_riemann_sphere' ?M1.0 ?M2.0 =\n                    2 / sqrt (1 + (cmod ?m2.0)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "by (subst dist_riemann_sphere_sym, simp add: dist_fs_sym)"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "case False"], ["proof (state)\nthis:\n  M2 \\<noteq> North\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "hence \"stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  M2 \\<noteq> North\n\ngoal (1 subgoal):\n 1. stereographic M2 \\<noteq> \\<infinity>\\<^sub>h", "by (simp add: stereographic_North)"], ["proof (state)\nthis:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "then"], ["proof (chain)\npicking this:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h", "obtain m2 where \"stereographic M2 = of_complex m2\""], ["proof (prove)\nusing this:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>m2.\n        stereographic M2 = of_complex m2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of \"stereographic M2\"]"], ["proof (prove)\nusing this:\n  stereographic M2 \\<noteq> \\<infinity>\\<^sub>h\n  stereographic M2 = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. stereographic M2 = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>m2.\n        stereographic M2 = of_complex m2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  stereographic M2 = of_complex m2\n\ngoal (1 subgoal):\n 1. M2 \\<noteq> North \\<Longrightarrow>\n    dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using \\<open>stereographic M1 = of_complex m1\\<close> \\<open>stereographic M2 = of_complex m2\\<close>"], ["proof (prove)\nusing this:\n  stereographic M1 = of_complex m1\n  stereographic M2 = of_complex m2\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "using dist_fs_finite dist_stereographic_finite"], ["proof (prove)\nusing this:\n  stereographic M1 = of_complex m1\n  stereographic M2 = of_complex m2\n  dist_fs (of_complex ?z1.0) (of_complex ?z2.0) =\n  2 * cmod (?z1.0 - ?z2.0) /\n  (sqrt (1 + (cmod ?z1.0)\\<^sup>2) * sqrt (1 + (cmod ?z2.0)\\<^sup>2))\n  \\<lbrakk>stereographic ?M1.0 = of_complex ?m1.0;\n   stereographic ?M2.0 = of_complex ?m2.0\\<rbrakk>\n  \\<Longrightarrow> dist_riemann_sphere' ?M1.0 ?M2.0 =\n                    2 * cmod (?m1.0 - ?m2.0) /\n                    (sqrt (1 + (cmod ?m1.0)\\<^sup>2) *\n                     sqrt (1 + (cmod ?m2.0)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere' M1 M2 =\n    dist_fs (stereographic M1) (stereographic M2)", "by simp"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_riemann_sphere' M1 M2 = dist_fs (stereographic M1) (stereographic M2)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Other direction\\<close>"], ["", "lemma dist_stereographic':\n  shows \"dist_fs A B = dist_riemann_sphere' (inv_stereographic A) (inv_stereographic B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs A B =\n    dist_riemann_sphere' (inv_stereographic A) (inv_stereographic B)", "by (subst dist_stereographic) (metis stereographic_inv_stereographic)"], ["", "text \\<open>The @{term riemann_sphere} equipped with @{term dist_riemann_sphere'} is a metric space, i.e.,\nan instantiation of the @{term metric_space} locale.\\<close>"], ["", "instantiation riemann_sphere :: metric_space\nbegin"], ["", "definition \"dist_riemann_sphere = dist_riemann_sphere'\""], ["", "definition \"(uniformity_riemann_sphere :: (riemann_sphere \\<times> riemann_sphere) filter) = (INF e\\<in>{0<..}. principal {(x, y). dist_class.dist x y < e})\""], ["", "definition \"open_riemann_sphere (U :: riemann_sphere set) = (\\<forall> x \\<in> U. eventually (\\<lambda>(x', y). x' = x \\<longrightarrow> y \\<in> U) uniformity)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(riemann_sphere, metric_space_class)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y. (dist x y = 0) = (x = y)\n 4. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "fix x y :: riemann_sphere"], ["proof (state)\ngoal (4 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y. (dist x y = 0) = (x = y)\n 4. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "show \"(dist_class.dist x y = 0) = (x = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist x y = 0) = (x = y)", "unfolding dist_riemann_sphere_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist_riemann_sphere' x y = 0) = (x = y)", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 x y = 0) = (x = y)", "fix x y :: R3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 x y = 0) = (x = y)", "obtain x1 y1 z1 x2 y2 z2 where *: \"(x1, y1, z1) = x\" \"(x2, y2, z2) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 y1 z1 x2 y2 z2.\n        \\<lbrakk>(x1, y1, z1) = x; (x2, y2, z2) = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases x, cases y, auto)"], ["proof (state)\nthis:\n  (x1, y1, z1) = x\n  (x2, y2, z2) = y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 x y = 0) = (x = y)", "assume \"x \\<in> unit_sphere\" \"y \\<in> unit_sphere\""], ["proof (state)\nthis:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> (dist_riemann_sphere_r3 x y = 0) = (x = y)", "thus \"(dist_riemann_sphere_r3 x y = 0) = (x = y)\""], ["proof (prove)\nusing this:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 x y = 0) = (x = y)", "using norm_eq_zero[of \"(x1 - y2, y1 - y2, z1 - z2)\"]"], ["proof (prove)\nusing this:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n  (norm (x1 - y2, y1 - y2, z1 - z2) = 0) = ((x1 - y2, y1 - y2, z1 - z2) = 0)\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 x y = 0) = (x = y)", "using *[symmetric]"], ["proof (prove)\nusing this:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n  (norm (x1 - y2, y1 - y2, z1 - z2) = 0) = ((x1 - y2, y1 - y2, z1 - z2) = 0)\n  x = (x1, y1, z1)\n  y = (x2, y2, z2)\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 x y = 0) = (x = y)", "by (simp add: zero_prod_def)"], ["proof (state)\nthis:\n  (dist_riemann_sphere_r3 x y = 0) = (x = y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (dist x y = 0) = (x = y)\n\ngoal (3 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "fix x y z :: riemann_sphere"], ["proof (state)\ngoal (3 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)\n 3. \\<And>x y z. dist x y \\<le> dist x z + dist y z", "show \"dist_class.dist x y \\<le> dist_class.dist x z + dist_class.dist y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> dist x z + dist y z", "unfolding dist_riemann_sphere_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere' x y\n    \\<le> dist_riemann_sphere' x z + dist_riemann_sphere' y z", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere;\n        z \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 x y\n                         \\<le> dist_riemann_sphere_r3 x z +\n                               dist_riemann_sphere_r3 y z", "fix x y z :: R3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere;\n        z \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 x y\n                         \\<le> dist_riemann_sphere_r3 x z +\n                               dist_riemann_sphere_r3 y z", "obtain x1 y1 z1 x2 y2 z2 x3 y3 z3 where MM: \"(x1, y1, z1) = x\" \"(x2, y2, z2) = y\" \"(x3, y3, z3) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 y1 z1 x2 y2 z2 x3 y3 z3.\n        \\<lbrakk>(x1, y1, z1) = x; (x2, y2, z2) = y;\n         (x3, y3, z3) = z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"x\", cases \"y\", cases \"z\", auto)"], ["proof (state)\nthis:\n  (x1, y1, z1) = x\n  (x2, y2, z2) = y\n  (x3, y3, z3) = z\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere;\n        z \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 x y\n                         \\<le> dist_riemann_sphere_r3 x z +\n                               dist_riemann_sphere_r3 y z", "assume \"x \\<in> unit_sphere\" \"y \\<in> unit_sphere\" \"z \\<in> unit_sphere\""], ["proof (state)\nthis:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n  z \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> unit_sphere; y \\<in> unit_sphere;\n        z \\<in> unit_sphere\\<rbrakk>\n       \\<Longrightarrow> dist_riemann_sphere_r3 x y\n                         \\<le> dist_riemann_sphere_r3 x z +\n                               dist_riemann_sphere_r3 y z", "thus \"dist_riemann_sphere_r3 x y \\<le> dist_riemann_sphere_r3 x z + dist_riemann_sphere_r3 y z\""], ["proof (prove)\nusing this:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n  z \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 x y\n    \\<le> dist_riemann_sphere_r3 x z + dist_riemann_sphere_r3 y z", "using MM[symmetric] norm_minus_cancel[of \"(x3 - x2, y3 - y2, z3 - z2)\"] norm_triangle_ineq[of \"(x1 - x3, y1 - y3, z1 - z3)\" \"(x3 - x2, y3 - y2, z3 - z2)\"]"], ["proof (prove)\nusing this:\n  x \\<in> unit_sphere\n  y \\<in> unit_sphere\n  z \\<in> unit_sphere\n  x = (x1, y1, z1)\n  y = (x2, y2, z2)\n  z = (x3, y3, z3)\n  norm (- (x3 - x2, y3 - y2, z3 - z2)) = norm (x3 - x2, y3 - y2, z3 - z2)\n  norm ((x1 - x3, y1 - y3, z1 - z3) + (x3 - x2, y3 - y2, z3 - z2))\n  \\<le> norm (x1 - x3, y1 - y3, z1 - z3) + norm (x3 - x2, y3 - y2, z3 - z2)\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 x y\n    \\<le> dist_riemann_sphere_r3 x z + dist_riemann_sphere_r3 y z", "by simp"], ["proof (state)\nthis:\n  dist_riemann_sphere_r3 x y\n  \\<le> dist_riemann_sphere_r3 x z + dist_riemann_sphere_r3 y z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist x y \\<le> dist x z + dist y z\n\ngoal (2 subgoals):\n 1. uniformity = (INF e\\<in>{0<..}. principal {(x, y). dist x y < e})\n 2. \\<And>U.\n       open U =\n       (\\<forall>x\\<in>U.\n           \\<forall>\\<^sub>F (x', y) in uniformity.\n              x' = x \\<longrightarrow> y \\<in> U)", "qed (simp_all add: uniformity_riemann_sphere_def open_riemann_sphere_def)"], ["", "end"], ["", "text \\<open>The @{term riemann_sphere} metric space is perfect, i.e., it does not have isolated points.\\<close>"], ["", "instantiation riemann_sphere :: perfect_space\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(riemann_sphere, perfect_space_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> open {x}", "fix M :: riemann_sphere"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> open {x}", "show \"\\<not> open {M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> open {M}", "unfolding open_dist dist_riemann_sphere_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>{M}.\n               \\<exists>e>0.\n                  \\<forall>y.\n                     dist_riemann_sphere' y x < e \\<longrightarrow>\n                     y \\<in> {M})", "apply (subst dist_riemann_sphere_sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>{M}.\n               \\<exists>e>0.\n                  \\<forall>y.\n                     dist_riemann_sphere' x y < e \\<longrightarrow>\n                     y \\<in> {M})", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       M \\<in> unit_sphere \\<Longrightarrow>\n       \\<not> (\\<forall>x\\<in>{M}.\n                  \\<exists>e>0.\n                     \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                        dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                        y \\<in> {M})", "fix M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       M \\<in> unit_sphere \\<Longrightarrow>\n       \\<not> (\\<forall>x\\<in>{M}.\n                  \\<exists>e>0.\n                     \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                        dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                        y \\<in> {M})", "assume \"M \\<in> unit_sphere\""], ["proof (state)\nthis:\n  M \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       M \\<in> unit_sphere \\<Longrightarrow>\n       \\<not> (\\<forall>x\\<in>{M}.\n                  \\<exists>e>0.\n                     \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                        dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                        y \\<in> {M})", "obtain x y z where MM: \"M = (x, y, z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y z. M = (x, y, z) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"M\") auto"], ["proof (state)\nthis:\n  M = (x, y, z)\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       M \\<in> unit_sphere \\<Longrightarrow>\n       \\<not> (\\<forall>x\\<in>{M}.\n                  \\<exists>e>0.\n                     \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                        dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                        y \\<in> {M})", "then"], ["proof (chain)\npicking this:\n  M = (x, y, z)", "obtain \\<alpha> \\<beta> where *: \"x = cos \\<alpha> * cos \\<beta>\" \"y = cos \\<alpha> * sin \\<beta>\" \"z = sin \\<alpha>\" \"-pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\""], ["proof (prove)\nusing this:\n  M = (x, y, z)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha> \\<beta>.\n        \\<lbrakk>x = cos \\<alpha> * cos \\<beta>;\n         y = cos \\<alpha> * sin \\<beta>; z = sin \\<alpha>;\n         - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>M \\<in> unit_sphere\\<close>"], ["proof (prove)\nusing this:\n  M = (x, y, z)\n  M \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha> \\<beta>.\n        \\<lbrakk>x = cos \\<alpha> * cos \\<beta>;\n         y = cos \\<alpha> * sin \\<beta>; z = sin \\<alpha>;\n         - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_sphere_params[of x y z]"], ["proof (prove)\nusing this:\n  M = (x, y, z)\n  M \\<in> unit_sphere\n  x * x + y * y + z * z = 1 \\<Longrightarrow>\n  \\<exists>\\<alpha> \\<beta>.\n     x = cos \\<alpha> * cos \\<beta> \\<and>\n     y = cos \\<alpha> * sin \\<beta> \\<and>\n     z = sin \\<alpha> \\<and>\n     - pi / 2 \\<le> \\<alpha> \\<and>\n     \\<alpha> \\<le> pi / 2 \\<and> - pi \\<le> \\<beta> \\<and> \\<beta> < pi\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha> \\<beta>.\n        \\<lbrakk>x = cos \\<alpha> * cos \\<beta>;\n         y = cos \\<alpha> * sin \\<beta>; z = sin \\<alpha>;\n         - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = cos \\<alpha> * cos \\<beta>\n  y = cos \\<alpha> * sin \\<beta>\n  z = sin \\<alpha>\n  - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       M \\<in> unit_sphere \\<Longrightarrow>\n       \\<not> (\\<forall>x\\<in>{M}.\n                  \\<exists>e>0.\n                     \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                        dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                        y \\<in> {M})", "have \"\\<And> e. e > 0 \\<Longrightarrow> (\\<exists>y. y \\<in> unit_sphere \\<and> dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "fix e :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "then"], ["proof (chain)\npicking this:\n  0 < e", "obtain \\<alpha>' where \"1 - (e*e/2) < cos (\\<alpha> - \\<alpha>')\" \"\\<alpha> \\<noteq> \\<alpha>'\" \"-pi/2 \\<le> \\<alpha>'\" \"\\<alpha>' \\<le> pi/2\""], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>1 - e * e / 2 < cos (\\<alpha> - \\<alpha>');\n         \\<alpha> \\<noteq> \\<alpha>'; - pi / 2 \\<le> \\<alpha>';\n         \\<alpha>' \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_cos_gt[of \\<alpha> \"1 - (e*e/2)\"] \\<open>- pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n  \\<lbrakk>- pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2;\n   1 - e * e / 2 < 1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'\\<ge>- pi / 2.\n                       \\<alpha>' \\<le> pi / 2 \\<and>\n                       \\<alpha>' \\<noteq> \\<alpha> \\<and>\n                       1 - e * e / 2 < cos (\\<alpha> - \\<alpha>')\n  - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>1 - e * e / 2 < cos (\\<alpha> - \\<alpha>');\n         \\<alpha> \\<noteq> \\<alpha>'; - pi / 2 \\<le> \\<alpha>';\n         \\<alpha>' \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  1 - e * e / 2 < cos (\\<alpha> - \\<alpha>')\n  \\<alpha> \\<noteq> \\<alpha>'\n  - pi / 2 \\<le> \\<alpha>'\n  \\<alpha>' \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "hence \"sin \\<alpha> \\<noteq> sin \\<alpha>'\""], ["proof (prove)\nusing this:\n  1 - e * e / 2 < cos (\\<alpha> - \\<alpha>')\n  \\<alpha> \\<noteq> \\<alpha>'\n  - pi / 2 \\<le> \\<alpha>'\n  \\<alpha>' \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. sin \\<alpha> \\<noteq> sin \\<alpha>'", "using \\<open>-pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\\<close> sin_inj[of \\<alpha> \\<alpha>']"], ["proof (prove)\nusing this:\n  1 - e * e / 2 < cos (\\<alpha> - \\<alpha>')\n  \\<alpha> \\<noteq> \\<alpha>'\n  - pi / 2 \\<le> \\<alpha>'\n  \\<alpha>' \\<le> pi / 2\n  - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\n  \\<lbrakk>- pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2;\n   - pi / 2 \\<le> \\<alpha>' \\<and> \\<alpha>' \\<le> pi / 2;\n   \\<alpha> \\<noteq> \\<alpha>'\\<rbrakk>\n  \\<Longrightarrow> sin \\<alpha> \\<noteq> sin \\<alpha>'\n\ngoal (1 subgoal):\n 1. sin \\<alpha> \\<noteq> sin \\<alpha>'", "by auto"], ["proof (state)\nthis:\n  sin \\<alpha> \\<noteq> sin \\<alpha>'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "have \"2 - 2 * cos (\\<alpha> - \\<alpha>') < e*e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 - 2 * cos (\\<alpha> - \\<alpha>') < e * e", "using mult_strict_right_mono[OF \\<open>1 - (e*e/2) < cos (\\<alpha> - \\<alpha>')\\<close>, of 2]"], ["proof (prove)\nusing this:\n  0 < 2 \\<Longrightarrow>\n  (1 - e * e / 2) * 2 < cos (\\<alpha> - \\<alpha>') * 2\n\ngoal (1 subgoal):\n 1. 2 - 2 * cos (\\<alpha> - \\<alpha>') < e * e", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 - 2 * cos (\\<alpha> - \\<alpha>') < e * e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "have \"2 - 2 * cos (\\<alpha> - \\<alpha>') \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 - 2 * cos (\\<alpha> - \\<alpha>')", "using cos_le_one[of \"\\<alpha> - \\<alpha>'\"]"], ["proof (prove)\nusing this:\n  cos (\\<alpha> - \\<alpha>') \\<le> 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 - 2 * cos (\\<alpha> - \\<alpha>')", "by (simp add: algebra_split_simps)"], ["proof (state)\nthis:\n  0 \\<le> 2 - 2 * cos (\\<alpha> - \\<alpha>')\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "let ?M' = \"(cos \\<alpha>' * cos \\<beta>,  cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "have \"dist_riemann_sphere_r3 M ?M' = sqrt ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 + (sin \\<alpha> - sin \\<alpha>')\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 M\n     (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n      sin \\<alpha>') =\n    sqrt\n     ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n      (sin \\<alpha> - sin \\<alpha>')\\<^sup>2)", "using MM * sphere_params_on_sphere[of _ \\<alpha>' \\<beta>]"], ["proof (prove)\nusing this:\n  M = (x, y, z)\n  x = cos \\<alpha> * cos \\<beta>\n  y = cos \\<alpha> * sin \\<beta>\n  z = sin \\<alpha>\n  - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\n  \\<lbrakk>?x = cos \\<alpha>' * cos \\<beta>;\n   ?y = cos \\<alpha>' * sin \\<beta>; ?z = sin \\<alpha>'\\<rbrakk>\n  \\<Longrightarrow> ?x * ?x + ?y * ?y + ?z * ?z = 1\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 M\n     (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n      sin \\<alpha>') =\n    sqrt\n     ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n      (sin \\<alpha> - sin \\<alpha>')\\<^sup>2)", "using sin_cos_squared_add[of \\<beta>]"], ["proof (prove)\nusing this:\n  M = (x, y, z)\n  x = cos \\<alpha> * cos \\<beta>\n  y = cos \\<alpha> * sin \\<beta>\n  z = sin \\<alpha>\n  - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\n  \\<lbrakk>?x = cos \\<alpha>' * cos \\<beta>;\n   ?y = cos \\<alpha>' * sin \\<beta>; ?z = sin \\<alpha>'\\<rbrakk>\n  \\<Longrightarrow> ?x * ?x + ?y * ?y + ?z * ?z = 1\n  (sin \\<beta>)\\<^sup>2 + (cos \\<beta>)\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 M\n     (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n      sin \\<alpha>') =\n    sqrt\n     ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n      (sin \\<alpha> - sin \\<alpha>')\\<^sup>2)", "apply (simp add: dist_riemann_sphere'_def Abs_riemann_sphere_inverse norm_prod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M =\n             (cos \\<alpha> * cos \\<beta>, cos \\<alpha> * sin \\<beta>,\n              sin \\<alpha>);\n     x = cos \\<alpha> * cos \\<beta>; y = cos \\<alpha> * sin \\<beta>;\n     z = sin \\<alpha>;\n     - (pi / 2) \\<le> \\<alpha> \\<and> \\<alpha> * 2 \\<le> pi;\n     \\<And>x y z.\n        \\<lbrakk>x = cos \\<alpha>' * cos \\<beta>;\n         y = cos \\<alpha>' * sin \\<beta>; z = sin \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> cos \\<alpha>' * cos \\<beta> *\n                          (cos \\<alpha>' * cos \\<beta>) +\n                          cos \\<alpha>' * sin \\<beta> *\n                          (cos \\<alpha>' * sin \\<beta>) +\n                          sin \\<alpha>' * sin \\<alpha>' =\n                          1\\<rbrakk>\n    \\<Longrightarrow> (cos \\<alpha> * cos \\<beta> -\n                       cos \\<alpha>' * cos \\<beta>)\\<^sup>2 +\n                      (cos \\<alpha> * sin \\<beta> -\n                       cos \\<alpha>' * sin \\<beta>)\\<^sup>2 =\n                      (cos \\<alpha> - cos \\<alpha>')\\<^sup>2", "apply (subst left_diff_distrib[symmetric])+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M =\n             (cos \\<alpha> * cos \\<beta>, cos \\<alpha> * sin \\<beta>,\n              sin \\<alpha>);\n     x = cos \\<alpha> * cos \\<beta>; y = cos \\<alpha> * sin \\<beta>;\n     z = sin \\<alpha>;\n     - (pi / 2) \\<le> \\<alpha> \\<and> \\<alpha> * 2 \\<le> pi;\n     \\<And>x y z.\n        \\<lbrakk>x = cos \\<alpha>' * cos \\<beta>;\n         y = cos \\<alpha>' * sin \\<beta>; z = sin \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> cos \\<alpha>' * cos \\<beta> *\n                          (cos \\<alpha>' * cos \\<beta>) +\n                          cos \\<alpha>' * sin \\<beta> *\n                          (cos \\<alpha>' * sin \\<beta>) +\n                          sin \\<alpha>' * sin \\<alpha>' =\n                          1\\<rbrakk>\n    \\<Longrightarrow> ((cos \\<alpha> - cos \\<alpha>') *\n                       cos \\<beta>)\\<^sup>2 +\n                      ((cos \\<alpha> - cos \\<alpha>') *\n                       sin \\<beta>)\\<^sup>2 =\n                      (cos \\<alpha> - cos \\<alpha>')\\<^sup>2", "apply (subst power_mult_distrib)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M =\n             (cos \\<alpha> * cos \\<beta>, cos \\<alpha> * sin \\<beta>,\n              sin \\<alpha>);\n     x = cos \\<alpha> * cos \\<beta>; y = cos \\<alpha> * sin \\<beta>;\n     z = sin \\<alpha>;\n     - (pi / 2) \\<le> \\<alpha> \\<and> \\<alpha> * 2 \\<le> pi;\n     \\<And>x y z.\n        \\<lbrakk>x = cos \\<alpha>' * cos \\<beta>;\n         y = cos \\<alpha>' * sin \\<beta>; z = sin \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> cos \\<alpha>' * cos \\<beta> *\n                          (cos \\<alpha>' * cos \\<beta>) +\n                          cos \\<alpha>' * sin \\<beta> *\n                          (cos \\<alpha>' * sin \\<beta>) +\n                          sin \\<alpha>' * sin \\<alpha>' =\n                          1\\<rbrakk>\n    \\<Longrightarrow> (cos \\<alpha> - cos \\<alpha>')\\<^sup>2 *\n                      (cos \\<beta>)\\<^sup>2 +\n                      (cos \\<alpha> - cos \\<alpha>')\\<^sup>2 *\n                      (sin \\<beta>)\\<^sup>2 =\n                      (cos \\<alpha> - cos \\<alpha>')\\<^sup>2", "apply (subst distrib_left[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M =\n             (cos \\<alpha> * cos \\<beta>, cos \\<alpha> * sin \\<beta>,\n              sin \\<alpha>);\n     x = cos \\<alpha> * cos \\<beta>; y = cos \\<alpha> * sin \\<beta>;\n     z = sin \\<alpha>;\n     - (pi / 2) \\<le> \\<alpha> \\<and> \\<alpha> * 2 \\<le> pi;\n     \\<And>x y z.\n        \\<lbrakk>x = cos \\<alpha>' * cos \\<beta>;\n         y = cos \\<alpha>' * sin \\<beta>; z = sin \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> cos \\<alpha>' * cos \\<beta> *\n                          (cos \\<alpha>' * cos \\<beta>) +\n                          cos \\<alpha>' * sin \\<beta> *\n                          (cos \\<alpha>' * sin \\<beta>) +\n                          sin \\<alpha>' * sin \\<alpha>' =\n                          1\\<rbrakk>\n    \\<Longrightarrow> (cos \\<alpha> - cos \\<alpha>')\\<^sup>2 *\n                      ((cos \\<beta>)\\<^sup>2 + (sin \\<beta>)\\<^sup>2) =\n                      (cos \\<alpha> - cos \\<alpha>')\\<^sup>2", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n    sin \\<alpha>') =\n  sqrt\n   ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n    (sin \\<alpha> - sin \\<alpha>')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "also"], ["proof (state)\nthis:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n    sin \\<alpha>') =\n  sqrt\n   ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n    (sin \\<alpha> - sin \\<alpha>')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "have \"... = sqrt (2 - 2*cos (\\<alpha> - \\<alpha>'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n      (sin \\<alpha> - sin \\<alpha>')\\<^sup>2) =\n    sqrt (2 - 2 * cos (\\<alpha> - \\<alpha>'))", "by (simp add: power2_eq_square field_simps cos_diff)"], ["proof (state)\nthis:\n  sqrt\n   ((cos \\<alpha> - cos \\<alpha>')\\<^sup>2 +\n    (sin \\<alpha> - sin \\<alpha>')\\<^sup>2) =\n  sqrt (2 - 2 * cos (\\<alpha> - \\<alpha>'))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "finally"], ["proof (chain)\npicking this:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n    sin \\<alpha>') =\n  sqrt (2 - 2 * cos (\\<alpha> - \\<alpha>'))", "have \"(dist_riemann_sphere_r3 M ?M')\\<^sup>2 = 2 - 2*cos (\\<alpha> - \\<alpha>')\""], ["proof (prove)\nusing this:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n    sin \\<alpha>') =\n  sqrt (2 - 2 * cos (\\<alpha> - \\<alpha>'))\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M\n      (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n       sin \\<alpha>'))\\<^sup>2 =\n    2 - 2 * cos (\\<alpha> - \\<alpha>')", "using \\<open>2 - 2 * cos (\\<alpha> - \\<alpha>') \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n    sin \\<alpha>') =\n  sqrt (2 - 2 * cos (\\<alpha> - \\<alpha>'))\n  0 \\<le> 2 - 2 * cos (\\<alpha> - \\<alpha>')\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M\n      (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n       sin \\<alpha>'))\\<^sup>2 =\n    2 - 2 * cos (\\<alpha> - \\<alpha>')", "by simp"], ["proof (state)\nthis:\n  (dist_riemann_sphere_r3 M\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>'))\\<^sup>2 =\n  2 - 2 * cos (\\<alpha> - \\<alpha>')\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "hence \"(dist_riemann_sphere_r3 M ?M')\\<^sup>2 < e\\<^sup>2\""], ["proof (prove)\nusing this:\n  (dist_riemann_sphere_r3 M\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>'))\\<^sup>2 =\n  2 - 2 * cos (\\<alpha> - \\<alpha>')\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M\n      (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n       sin \\<alpha>'))\\<^sup>2\n    < e\\<^sup>2", "using \\<open>2 - 2 * cos (\\<alpha> - \\<alpha>') < e*e\\<close>"], ["proof (prove)\nusing this:\n  (dist_riemann_sphere_r3 M\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>'))\\<^sup>2 =\n  2 - 2 * cos (\\<alpha> - \\<alpha>')\n  2 - 2 * cos (\\<alpha> - \\<alpha>') < e * e\n\ngoal (1 subgoal):\n 1. (dist_riemann_sphere_r3 M\n      (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n       sin \\<alpha>'))\\<^sup>2\n    < e\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (dist_riemann_sphere_r3 M\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>'))\\<^sup>2\n  < e\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "hence \"dist_riemann_sphere_r3 M ?M' < e\""], ["proof (prove)\nusing this:\n  (dist_riemann_sphere_r3 M\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>'))\\<^sup>2\n  < e\\<^sup>2\n\ngoal (1 subgoal):\n 1. dist_riemann_sphere_r3 M\n     (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n      sin \\<alpha>')\n    < e", "apply (rule power2_less_imp_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> e", "using \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 \\<le> e", "by simp"], ["proof (state)\nthis:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "moreover"], ["proof (state)\nthis:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "have \"M \\<noteq> ?M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<noteq>\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>')", "using MM  \\<open>sin \\<alpha> \\<noteq> sin \\<alpha>'\\<close> *"], ["proof (prove)\nusing this:\n  M = (x, y, z)\n  sin \\<alpha> \\<noteq> sin \\<alpha>'\n  x = cos \\<alpha> * cos \\<beta>\n  y = cos \\<alpha> * sin \\<beta>\n  z = sin \\<alpha>\n  - pi / 2 \\<le> \\<alpha> \\<and> \\<alpha> \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. M \\<noteq>\n    (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>')", "by simp"], ["proof (state)\nthis:\n  M \\<noteq>\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "moreover"], ["proof (state)\nthis:\n  M \\<noteq>\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "have \"?M' \\<in> unit_sphere\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>')\n    \\<in> unit_sphere", "using sphere_params_on_sphere"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x = cos ?\\<alpha> * cos ?\\<beta>;\n   ?y = cos ?\\<alpha> * sin ?\\<beta>; ?z = sin ?\\<alpha>\\<rbrakk>\n  \\<Longrightarrow> ?x * ?x + ?y * ?y + ?z * ?z = 1\n\ngoal (1 subgoal):\n 1. (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>,\n     sin \\<alpha>')\n    \\<in> unit_sphere", "by auto"], ["proof (state)\nthis:\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>y.\n          y \\<in> unit_sphere \\<and>\n          dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "ultimately"], ["proof (chain)\npicking this:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  < e\n  M \\<noteq>\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  \\<in> unit_sphere", "show \"\\<exists>y. y \\<in> unit_sphere \\<and> dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M\""], ["proof (prove)\nusing this:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  < e\n  M \\<noteq>\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> unit_sphere \\<and>\n       dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "unfolding dist_riemann_sphere_def"], ["proof (prove)\nusing this:\n  dist_riemann_sphere_r3 M\n   (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  < e\n  M \\<noteq>\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  (cos \\<alpha>' * cos \\<beta>, cos \\<alpha>' * sin \\<beta>, sin \\<alpha>')\n  \\<in> unit_sphere\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> unit_sphere \\<and>\n       dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M", "by (rule_tac x=\"?M'\" in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>y.\n     y \\<in> unit_sphere \\<and>\n     dist_riemann_sphere_r3 M y < e \\<and> y \\<noteq> M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>y.\n     y \\<in> unit_sphere \\<and>\n     dist_riemann_sphere_r3 M y < ?e \\<and> y \\<noteq> M\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       M \\<in> unit_sphere \\<Longrightarrow>\n       \\<not> (\\<forall>x\\<in>{M}.\n                  \\<exists>e>0.\n                     \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                        dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                        y \\<in> {M})", "thus \"\\<not> (\\<forall>x\\<in>{M}. \\<exists>e>0. \\<forall>y\\<in>{x. x \\<in> unit_sphere}. dist_riemann_sphere_r3 x y < e \\<longrightarrow> y \\<in> {M})\""], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>y.\n     y \\<in> unit_sphere \\<and>\n     dist_riemann_sphere_r3 M y < ?e \\<and> y \\<noteq> M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>{M}.\n               \\<exists>e>0.\n                  \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                     dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                     y \\<in> {M})", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>x\\<in>{M}.\n             \\<exists>e>0.\n                \\<forall>y\\<in>{x. x \\<in> unit_sphere}.\n                   dist_riemann_sphere_r3 x y < e \\<longrightarrow>\n                   y \\<in> {M})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> open {M}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>The @{term complex_homo} metric space is perfect, i.e., it does not have isolated points.\\<close>"], ["", "instantiation complex_homo :: perfect_space\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex_homo, perfect_space_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> open {x}", "fix x::complex_homo"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> open {x}", "show \"\\<not> open {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> open {x}", "unfolding open_dist"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>xa\\<in>{x}.\n               \\<exists>e>0.\n                  \\<forall>y. dist y xa < e \\<longrightarrow> y \\<in> {x})", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow> \\<exists>y. dist y x < e \\<and> y \\<noteq> x", "fix e::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow> \\<exists>y. dist y x < e \\<and> y \\<noteq> x", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow> \\<exists>y. dist y x < e \\<and> y \\<noteq> x", "thus \"\\<exists> y. dist_class.dist y x < e \\<and> y \\<noteq> x\""], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<exists>y. dist y x < e \\<and> y \\<noteq> x", "using not_open_singleton[of \"inv_stereographic x\"]"], ["proof (prove)\nusing this:\n  0 < e\n  \\<not> open {inv_stereographic x}\n\ngoal (1 subgoal):\n 1. \\<exists>y. dist y x < e \\<and> y \\<noteq> x", "unfolding open_dist"], ["proof (prove)\nusing this:\n  0 < e\n  \\<not> (\\<forall>xa\\<in>{inv_stereographic x}.\n             \\<exists>e>0.\n                \\<forall>y.\n                   dist y xa < e \\<longrightarrow>\n                   y \\<in> {inv_stereographic x})\n\ngoal (1 subgoal):\n 1. \\<exists>y. dist y x < e \\<and> y \\<noteq> x", "unfolding dist_complex_homo_def dist_riemann_sphere_def"], ["proof (prove)\nusing this:\n  0 < e\n  \\<not> (\\<forall>xa\\<in>{inv_stereographic x}.\n             \\<exists>e>0.\n                \\<forall>y.\n                   dist_riemann_sphere' y xa < e \\<longrightarrow>\n                   y \\<in> {inv_stereographic x})\n\ngoal (1 subgoal):\n 1. \\<exists>y. dist_fs y x < e \\<and> y \\<noteq> x", "apply (subst dist_stereographic', auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>e>0.\n                \\<exists>y.\n                   dist_riemann_sphere' y (inv_stereographic x) < e \\<and>\n                   y \\<noteq> inv_stereographic x;\n     0 < e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y.\n                         dist_riemann_sphere' (inv_stereographic y)\n                          (inv_stereographic x)\n                         < e \\<and>\n                         y \\<noteq> x", "apply (erule_tac x=e in allE, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>0 < e; dist_riemann_sphere' y (inv_stereographic x) < e;\n        y \\<noteq> inv_stereographic x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            dist_riemann_sphere' (inv_stereographic y)\n                             (inv_stereographic x)\n                            < e \\<and>\n                            y \\<noteq> x", "apply (rule_tac x=\"stereographic y\" in exI, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>y. dist y x < e \\<and> y \\<noteq> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> open {x}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma Lim_within:\n  shows \"(f \\<longlongrightarrow> l) (at a within S) \\<longleftrightarrow>\n    (\\<forall>e >0. \\<exists>d>0. \\<forall>x \\<in> S. 0 < dist_class.dist x a \\<and> dist_class.dist x a  < d \\<longrightarrow> dist_class.dist (f x) l < e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) (at a within S) =\n    (\\<forall>e>0.\n        \\<exists>d>0.\n           \\<forall>x\\<in>S.\n              0 < dist x a \\<and> dist x a < d \\<longrightarrow>\n              dist (f x) l < e)", "by (auto simp: tendsto_iff eventually_at)"], ["", "lemma continuous_on_iff:\n  shows \"continuous_on s f \\<longleftrightarrow>\n    (\\<forall>x\\<in>s. \\<forall>e>0. \\<exists>d>0. \\<forall>x'\\<in>s. dist_class.dist x' x < d \\<longrightarrow> dist_class.dist (f x') (f x) < e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on s f =\n    (\\<forall>x\\<in>s.\n        \\<forall>e>0.\n           \\<exists>d>0.\n              \\<forall>x'\\<in>s.\n                 dist x' x < d \\<longrightarrow> dist (f x') (f x) < e)", "unfolding continuous_on_def Lim_within"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>s.\n        \\<forall>e>0.\n           \\<exists>d>0.\n              \\<forall>xa\\<in>s.\n                 0 < dist xa x \\<and> dist xa x < d \\<longrightarrow>\n                 dist (f xa) (f x) < e) =\n    (\\<forall>x\\<in>s.\n        \\<forall>e>0.\n           \\<exists>d>0.\n              \\<forall>x'\\<in>s.\n                 dist x' x < d \\<longrightarrow> dist (f x') (f x) < e)", "by (metis dist_pos_lt dist_self)"], ["", "text \\<open>Using the chordal metric in the extended plane, and the Euclidean metric on the sphere in\n$\\mathbb{R}^3$, the stereographic and inverse stereographic projections are proved to be\ncontinuous.\\<close>"], ["", "lemma \"continuous_on UNIV stereographic\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV stereographic", "unfolding continuous_on_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>e>0.\n          \\<exists>d>0.\n             \\<forall>x'\\<in>UNIV.\n                dist x' x < d \\<longrightarrow>\n                dist (stereographic x') (stereographic x) < e", "unfolding dist_complex_homo_def dist_riemann_sphere_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>e>0.\n          \\<exists>d>0.\n             \\<forall>x'\\<in>UNIV.\n                dist_riemann_sphere' x' x < d \\<longrightarrow>\n                dist_fs (stereographic x') (stereographic x) < e", "by (subst dist_stereographic', auto)"], ["", "lemma \"continuous_on UNIV inv_stereographic\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV inv_stereographic", "unfolding continuous_on_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>e>0.\n          \\<exists>d>0.\n             \\<forall>x'\\<in>UNIV.\n                dist x' x < d \\<longrightarrow>\n                dist (inv_stereographic x') (inv_stereographic x) < e", "unfolding dist_complex_homo_def dist_riemann_sphere_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>e>0.\n          \\<exists>d>0.\n             \\<forall>x'\\<in>UNIV.\n                dist_fs x' x < d \\<longrightarrow>\n                dist_riemann_sphere' (inv_stereographic x')\n                 (inv_stereographic x)\n                < e", "by (subst dist_stereographic, auto)"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Chordal circles\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "text \\<open>Real circlines are sets of points that are equidistant from some given point in the chordal\nmetric. There are exactly two such points (two chordal centers). On the Riemann sphere, these two\npoints are obtained as intersections of the sphere and a line that goes trough center of the circle,\nand its orthogonal to its plane.\\<close>"], ["", "text \\<open>The circline for the given chordal center and radius.\\<close>"], ["", "definition chordal_circle_cvec_cmat :: \"complex_vec \\<Rightarrow> real \\<Rightarrow> complex_mat\" where\n [simp]: \"chordal_circle_cvec_cmat a r =\n           (let (a1, a2) = a\n             in ((4*a2*cnj a2 - (cor r)\\<^sup>2*(a1*cnj a1 + a2*cnj a2)), (-4*a1*cnj a2), (-4*cnj a1*a2), (4*a1*cnj a1 - (cor r)\\<^sup>2*(a1*cnj a1 + a2*cnj a2))))\""], ["", "lemma chordal_circle_cmat_hermitean_nonzero [simp]:\n  assumes \"a \\<noteq> vec_zero\"\n  shows \"chordal_circle_cvec_cmat a r \\<in> hermitean_nonzero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chordal_circle_cvec_cmat a r \\<in> hermitean_nonzero", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. chordal_circle_cvec_cmat a r \\<in> hermitean_nonzero", "by (cases a) (auto simp add: hermitean_def mat_adj_def mat_cnj_def Let_def)"], ["", "lift_definition chordal_circle_hcoords_clmat :: \"complex_homo_coords \\<Rightarrow> real \\<Rightarrow> circline_mat\" is chordal_circle_cvec_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod real.\n       prod \\<noteq> vec_zero \\<Longrightarrow>\n       hermitean (chordal_circle_cvec_cmat prod real) \\<and>\n       chordal_circle_cvec_cmat prod real \\<noteq> mat_zero", "using chordal_circle_cmat_hermitean_nonzero"], ["proof (prove)\nusing this:\n  ?a \\<noteq> vec_zero \\<Longrightarrow>\n  chordal_circle_cvec_cmat ?a ?r \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>prod real.\n       prod \\<noteq> vec_zero \\<Longrightarrow>\n       hermitean (chordal_circle_cvec_cmat prod real) \\<and>\n       chordal_circle_cvec_cmat prod real \\<noteq> mat_zero", "by (simp del: chordal_circle_cvec_cmat_def)"], ["", "lift_definition chordal_circle :: \"complex_homo \\<Rightarrow> real \\<Rightarrow> circline\" is chordal_circle_hcoords_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       circline_eq_clmat\n        (chordal_circle_hcoords_clmat complex_homo_coords1 real)\n        (chordal_circle_hcoords_clmat complex_homo_coords2 real)", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "fix a b :: complex_vec and r :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "assume *: \"a \\<noteq> vec_zero\" \"b \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  a \\<noteq> vec_zero\n  b \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "obtain a1 a2 where aa: \"a = (a1, a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a1 a2. a = (a1, a2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases a, auto)"], ["proof (state)\nthis:\n  a = (a1, a2)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "obtain b1 b2 where bb: \"b = (b1, b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1 b2. b = (b1, b2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases b, auto)"], ["proof (state)\nthis:\n  b = (b1, b2)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "assume \"a \\<approx>\\<^sub>v b\""], ["proof (state)\nthis:\n  a \\<approx>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "then"], ["proof (chain)\npicking this:\n  a \\<approx>\\<^sub>v b", "obtain k where \"b = (k * a1, k * a2)\" \"k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  a \\<approx>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>b = (k * a1, k * a2); k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using aa bb"], ["proof (prove)\nusing this:\n  a \\<approx>\\<^sub>v b\n  a = (a1, a2)\n  b = (b1, b2)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>b = (k * a1, k * a2); k \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b = (k * a1, k * a2)\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "moreover"], ["proof (state)\nthis:\n  b = (k * a1, k * a2)\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "have \"cor (Re (k * cnj k)) = k * cnj k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor (Re (k * cnj k)) = k * cnj k", "by (metis complex_In_mult_cnj_zero complex_of_real_Re)"], ["proof (state)\nthis:\n  cor (Re (k * cnj k)) = k * cnj k\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 real.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat\n                          (chordal_circle_cvec_cmat complex_homo_coords1\n                            real)\n                          (chordal_circle_cvec_cmat complex_homo_coords2\n                            real)", "ultimately"], ["proof (chain)\npicking this:\n  b = (k * a1, k * a2)\n  k \\<noteq> 0\n  cor (Re (k * cnj k)) = k * cnj k", "show \"circline_eq_cmat (chordal_circle_cvec_cmat a r) (chordal_circle_cvec_cmat b r)\""], ["proof (prove)\nusing this:\n  b = (k * a1, k * a2)\n  k \\<noteq> 0\n  cor (Re (k * cnj k)) = k * cnj k\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (chordal_circle_cvec_cmat a r)\n     (chordal_circle_cvec_cmat b r)", "using * aa bb"], ["proof (prove)\nusing this:\n  b = (k * a1, k * a2)\n  k \\<noteq> 0\n  cor (Re (k * cnj k)) = k * cnj k\n  a \\<noteq> vec_zero\n  b \\<noteq> vec_zero\n  a = (a1, a2)\n  b = (b1, b2)\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (chordal_circle_cvec_cmat a r)\n     (chordal_circle_cvec_cmat b r)", "by simp (rule_tac x=\"Re (k*cnj k)\" in exI, auto simp add: Let_def field_simps)"], ["proof (state)\nthis:\n  circline_eq_cmat (chordal_circle_cvec_cmat a r)\n   (chordal_circle_cvec_cmat b r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sqrt_1_plus_square:\n  shows \"sqrt (1 + a\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + a\\<^sup>2) \\<noteq> 0", "by (smt real_sqrt_less_mono real_sqrt_zero realpow_square_minus_le)"], ["", "lemma\n  assumes \"dist_fs z a = r\"\n  shows \"z \\<in> circline_set (chordal_circle a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "proof (cases \"a \\<noteq> \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "case True"], ["proof (state)\nthis:\n  a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "then"], ["proof (chain)\npicking this:\n  a \\<noteq> \\<infinity>\\<^sub>h", "obtain a' where  \"a = of_complex a'\""], ["proof (prove)\nusing this:\n  a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>a'. a = of_complex a' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<infinity>\\<^sub>h\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>a'. a = of_complex a' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = of_complex a'\n\ngoal (2 subgoals):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "let ?A = \"4 - (cor r)\\<^sup>2 * (1 + (a'*cnj a'))\" and ?B = \"-4*a'\" and ?C=\"-4*cnj a'\" and ?D = \"4*a'*cnj a' -  (cor r)\\<^sup>2 * (1 + (a'*cnj a'))\""], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have hh: \"(?A, ?B, ?C, ?D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n     4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n    \\<in> hermitean_nonzero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def power2_eq_square)"], ["proof (state)\nthis:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (2 subgoals):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence *: \"chordal_circle (of_complex a') r = mk_circline ?A ?B ?C ?D\""], ["proof (prove)\nusing this:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. chordal_circle (of_complex a') r =\n    mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))", "by (transfer, transfer, simp, rule_tac x=1 in exI, simp)"], ["proof (state)\nthis:\n  chordal_circle (of_complex a') r =\n  mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n   (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (2 subgoals):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "proof (cases \"z \\<noteq> \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "case True"], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "then"], ["proof (chain)\npicking this:\n  z \\<noteq> \\<infinity>\\<^sub>h", "obtain z' where \"z = of_complex z'\""], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of z] inf_or_of_complex[of a]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = of_complex z'\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have \"2 * cmod (z' - a') / (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * cmod (z' - a') /\n    (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n    r", "using dist_fs_finite[of z' a'] assms \\<open>z = of_complex z'\\<close> \\<open>a = of_complex a'\\<close>"], ["proof (prove)\nusing this:\n  dist_fs (of_complex z') (of_complex a') =\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2))\n  dist_fs z a = r\n  z = of_complex z'\n  a = of_complex a'\n\ngoal (1 subgoal):\n 1. 2 * cmod (z' - a') /\n    (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n    r", "by auto"], ["proof (state)\nthis:\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n  r\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 * (cmod (z' - a'))\\<^sup>2 / ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) = r\\<^sup>2 \""], ["proof (prove)\nusing this:\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n  r\n\ngoal (1 subgoal):\n 1. 4 * (cmod (z' - a'))\\<^sup>2 /\n    ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n    r\\<^sup>2", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "moreover"], ["proof (state)\nthis:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have \"sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\" \"sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0 &&&\n    sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "using sqrt_1_plus_square"], ["proof (prove)\nusing this:\n  sqrt (1 + ?a\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0 &&&\n    sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "by simp+"], ["proof (state)\nthis:\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"(1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "ultimately"], ["proof (chain)\npicking this:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n  (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "have \"4 * (cmod (z' - a'))\\<^sup>2  = r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\""], ["proof (prove)\nusing this:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n  (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 4 * (cmod (z' - a'))\\<^sup>2 =\n    r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 * (cmod (z' - a'))\\<^sup>2 =\n  r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 * Re ((z' - a')*cnj (z' - a')) = r\\<^sup>2 * (1 + Re (z'*cnj z')) * (1 + Re (a'*cnj a'))\""], ["proof (prove)\nusing this:\n  4 * (cmod (z' - a'))\\<^sup>2 =\n  r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 4 * Re ((z' - a') * cnj (z' - a')) =\n    r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))", "by ((subst cmod_square[symmetric])+, simp)"], ["proof (state)\nthis:\n  4 * Re ((z' - a') * cnj (z' - a')) =\n  r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 * (Re(z'*cnj z') - Re(a'*cnj z') - Re(cnj a'*z') + Re(a'*cnj a')) = r\\<^sup>2 * (1 + Re (z'*cnj z')) * (1 + Re (a'*cnj a'))\""], ["proof (prove)\nusing this:\n  4 * Re ((z' - a') * cnj (z' - a')) =\n  r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))\n\ngoal (1 subgoal):\n 1. 4 *\n    (Re (z' * cnj z') - Re (a' * cnj z') - Re (cnj a' * z') +\n     Re (a' * cnj a')) =\n    r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 *\n  (Re (z' * cnj z') - Re (a' * cnj z') - Re (cnj a' * z') +\n   Re (a' * cnj a')) =\n  r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"Re (?A * z' * cnj z' + ?B * cnj z' + ?C * z' + ?D) = 0\""], ["proof (prove)\nusing this:\n  4 *\n  (Re (z' * cnj z') - Re (a' * cnj z') - Re (cnj a' * z') +\n   Re (a' * cnj a')) =\n  r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))\n\ngoal (1 subgoal):\n 1. is_imag\n     ((4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n      - 4 * a' * cnj z' +\n      - 4 * cnj a' * z' +\n      (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  is_imag\n   ((4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n    - 4 * a' * cnj z' +\n    - 4 * cnj a' * z' +\n    (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"?A * z' * cnj z' + ?B * cnj z' + ?C * z' + ?D = 0\""], ["proof (prove)\nusing this:\n  is_imag\n   ((4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n    - 4 * a' * cnj z' +\n    - 4 * cnj a' * z' +\n    (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n    - 4 * a' * cnj z' +\n    - 4 * cnj a' * z' +\n    (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')) =\n    0", "by (subst complex_eq_if_Re_eq) (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n  - 4 * a' * cnj z' +\n  - 4 * cnj a' * z' +\n  (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')) =\n  0\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"(cnj z' * ?A + ?C) * z' + (cnj z' * ?B + ?D) = 0\""], ["proof (prove)\nusing this:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n  - 4 * a' * cnj z' +\n  - 4 * cnj a' * z' +\n  (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')) =\n  0\n\ngoal (1 subgoal):\n 1. (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') *\n    z' +\n    (cnj z' * (- 4 * a') +\n     (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n    0", "by algebra"], ["proof (state)\nthis:\n  (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') * z' +\n  (cnj z' * (- 4 * a') +\n   (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n  0\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"z \\<in> circline_set (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') * z' +\n  (cnj z' * (- 4 * a') +\n   (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n  0\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using \\<open>z = of_complex z'\\<close> hh"], ["proof (prove)\nusing this:\n  (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') * z' +\n  (cnj z' * (- 4 * a') +\n   (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n  0\n  z = of_complex z'\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') * z' +\n  (cnj z' * (- 4 * a') +\n   (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n  0\n  z = of_complex z'\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. z \\<in> Collect\n             (on_circline\n               (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n                 (- 4 * a') (- 4 * cnj a')\n                 (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))))", "by simp (transfer, transfer, simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (2 subgoals):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "using *"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  chordal_circle (of_complex a') r =\n  mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n   (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "by (subst \\<open>a = of_complex a'\\<close>) simp"], ["proof (state)\nthis:\n  z \\<in> circline_set (chordal_circle a r)\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "case False"], ["proof (state)\nthis:\n  \\<not> z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"2 / sqrt (1 + (cmod a')\\<^sup>2) = r\""], ["proof (prove)\nusing this:\n  \\<not> z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod a')\\<^sup>2) = r", "using assms \\<open>a = of_complex a'\\<close>"], ["proof (prove)\nusing this:\n  \\<not> z \\<noteq> \\<infinity>\\<^sub>h\n  dist_fs z a = r\n  a = of_complex a'\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod a')\\<^sup>2) = r", "using dist_fs_infinite2[of a']"], ["proof (prove)\nusing this:\n  \\<not> z \\<noteq> \\<infinity>\\<^sub>h\n  dist_fs z a = r\n  a = of_complex a'\n  dist_fs \\<infinity>\\<^sub>h (of_complex a') =\n  2 / sqrt (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod a')\\<^sup>2) = r", "by simp"], ["proof (state)\nthis:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "moreover"], ["proof (state)\nthis:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have \"sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "using sqrt_1_plus_square"], ["proof (prove)\nusing this:\n  sqrt (1 + ?a\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "ultimately"], ["proof (chain)\npicking this:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "have \"2 = r * sqrt (1 + (cmod a')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 = r * sqrt (1 + (cmod a')\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 = r * sqrt (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 = (r * sqrt (1 + (cmod a')\\<^sup>2))\\<^sup>2\""], ["proof (prove)\nusing this:\n  2 = r * sqrt (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 4 = (r * sqrt (1 + (cmod a')\\<^sup>2))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  4 = (r * sqrt (1 + (cmod a')\\<^sup>2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  4 = (r * sqrt (1 + (cmod a')\\<^sup>2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"Re (4 - (cor r)\\<^sup>2 * (1 + (a' * cnj a'))) = 0\""], ["proof (prove)\nusing this:\n  4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. is_imag (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))", "by (subst (asm) cmod_square) (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 - (cor r)\\<^sup>2 * (1 + (a'*cnj a')) = 0\""], ["proof (prove)\nusing this:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0", "by (subst complex_eq_if_Re_eq) (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"circline_A0 (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0\n\ngoal (1 subgoal):\n 1. is_line\n     (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n       (- 4 * cnj a')\n       (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using hh"], ["proof (prove)\nusing this:\n  4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. is_line\n     (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n       (- 4 * cnj a')\n       (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by (simp, transfer, transfer, simp)"], ["proof (state)\nthis:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"z \\<in> circline_set (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using inf_in_circline_set[of \"mk_circline ?A ?B ?C ?D\"]"], ["proof (prove)\nusing this:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  (\\<infinity>\\<^sub>h\n   \\<in> circline_set\n          (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n            (- 4 * cnj a')\n            (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))) =\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using \\<open>\\<not> z \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  (\\<infinity>\\<^sub>h\n   \\<in> circline_set\n          (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n            (- 4 * cnj a')\n            (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))) =\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  \\<not> z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by simp"], ["proof (state)\nthis:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. \\<not> z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "using *"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  chordal_circle (of_complex a') r =\n  mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n   (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "by (subst \\<open>a = of_complex a'\\<close>) simp"], ["proof (state)\nthis:\n  z \\<in> circline_set (chordal_circle a r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> circline_set (chordal_circle a r)\n\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "let ?A = \"-(cor r)\\<^sup>2\" and ?B = \"0\" and ?C = \"0\" and ?D = \"4 -(cor r)\\<^sup>2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have hh: \"(?A, ?B, ?C, ?D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def power2_eq_square)"], ["proof (state)\nthis:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence *: \"chordal_circle a r = mk_circline ?A ?B ?C ?D\""], ["proof (prove)\nusing this:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. chordal_circle a r =\n    mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)", "using \\<open>\\<not> a \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  \\<not> a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. chordal_circle a r =\n    mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)", "by simp (transfer, transfer, simp, rule_tac x=1 in exI, simp)"], ["proof (state)\nthis:\n  chordal_circle a r =\n  mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "proof (cases \"z = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "case True"], ["proof (state)\nthis:\n  z = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "using assms \\<open>z = \\<infinity>\\<^sub>h\\<close> \\<open>\\<not> a \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  dist_fs z a = r\n  z = \\<infinity>\\<^sub>h\n  \\<not> a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "using * hh"], ["proof (prove)\nusing this:\n  dist_fs z a = r\n  z = \\<infinity>\\<^sub>h\n  \\<not> a \\<noteq> \\<infinity>\\<^sub>h\n  chordal_circle a r =\n  mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "by (simp, subst inf_in_circline_set, transfer, transfer, simp)"], ["proof (state)\nthis:\n  z \\<in> circline_set (chordal_circle a r)\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "case False"], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "then"], ["proof (chain)\npicking this:\n  z \\<noteq> \\<infinity>\\<^sub>h", "obtain z' where \"z = of_complex z'\""], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = of_complex z'\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have \"2 / sqrt (1 + (cmod z')\\<^sup>2) = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod z')\\<^sup>2) = r", "using assms \\<open>z = of_complex z'\\<close>\\<open>\\<not> a \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  dist_fs z a = r\n  z = of_complex z'\n  \\<not> a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod z')\\<^sup>2) = r", "using dist_fs_infinite2[of z']"], ["proof (prove)\nusing this:\n  dist_fs z a = r\n  z = of_complex z'\n  \\<not> a \\<noteq> \\<infinity>\\<^sub>h\n  dist_fs \\<infinity>\\<^sub>h (of_complex z') =\n  2 / sqrt (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod z')\\<^sup>2) = r", "by (simp add: dist_fs_sym)"], ["proof (state)\nthis:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "moreover"], ["proof (state)\nthis:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "have \"sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0", "using sqrt_1_plus_square"], ["proof (prove)\nusing this:\n  sqrt (1 + ?a\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "ultimately"], ["proof (chain)\npicking this:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0", "have \"2 = r * sqrt (1 + (cmod z')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 = r * sqrt (1 + (cmod z')\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 = r * sqrt (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 = (r * sqrt (1 + (cmod z')\\<^sup>2))\\<^sup>2\""], ["proof (prove)\nusing this:\n  2 = r * sqrt (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 4 = (r * sqrt (1 + (cmod z')\\<^sup>2))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  4 = (r * sqrt (1 + (cmod z')\\<^sup>2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  4 = (r * sqrt (1 + (cmod z')\\<^sup>2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"Re (4 - (cor r)\\<^sup>2 * (1 + (z' * cnj z'))) = 0\""], ["proof (prove)\nusing this:\n  4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. is_imag (4 - (cor r)\\<^sup>2 * (1 + z' * cnj z'))", "by (subst (asm) cmod_square) (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + z' * cnj z'))\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"- (cor r)\\<^sup>2 * z'*cnj z' + 4 - (cor r)\\<^sup>2 = 0\""], ["proof (prove)\nusing this:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + z' * cnj z'))\n\ngoal (1 subgoal):\n 1. - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0", "by (subst complex_eq_if_Re_eq) (auto simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "hence \"z \\<in> circline_set (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))", "using hh"], ["proof (prove)\nusing this:\n  - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. z \\<in> Collect\n             (on_circline\n               (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)))", "by (subst \\<open>z = of_complex z'\\<close>, simp) (transfer, transfer, auto simp add: vec_cnj_def field_simps)"], ["proof (state)\nthis:\n  z \\<in> circline_set\n           (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n    z \\<in> circline_set (chordal_circle a r)", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "using *"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))\n  chordal_circle a r =\n  mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set (chordal_circle a r)", "by simp"], ["proof (state)\nthis:\n  z \\<in> circline_set (chordal_circle a r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> circline_set (chordal_circle a r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  assumes \"z \\<in> circline_set (chordal_circle a r)\" and \"r \\<ge> 0\"\n  shows \"dist_fs z a = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs z a = r", "proof (cases \"a = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "case False"], ["proof (state)\nthis:\n  a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "then"], ["proof (chain)\npicking this:\n  a \\<noteq> \\<infinity>\\<^sub>h", "obtain a' where \"a = of_complex a'\""], ["proof (prove)\nusing this:\n  a \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>a'. a = of_complex a' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<infinity>\\<^sub>h\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>a'. a = of_complex a' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = of_complex a'\n\ngoal (2 subgoals):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "let ?A = \"4 - (cor r)\\<^sup>2 * (1 + (a'*cnj a'))\" and ?B = \"-4*a'\" and ?C=\"-4*cnj a'\" and ?D = \"4*a'*cnj a' -  (cor r)\\<^sup>2 * (1 + (a'*cnj a'))\""], ["proof (state)\ngoal (2 subgoals):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "have hh: \"(?A, ?B, ?C, ?D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n     4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n    \\<in> hermitean_nonzero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def power2_eq_square)"], ["proof (state)\nthis:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (2 subgoals):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence *: \"chordal_circle (of_complex a') r = mk_circline ?A ?B ?C ?D\""], ["proof (prove)\nusing this:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. chordal_circle (of_complex a') r =\n    mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))", "by (transfer, transfer, simp, rule_tac x=1 in exI, simp)"], ["proof (state)\nthis:\n  chordal_circle (of_complex a') r =\n  mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n   (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (2 subgoals):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs z a = r", "proof (cases \"z = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "case False"], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "then"], ["proof (chain)\npicking this:\n  z \\<noteq> \\<infinity>\\<^sub>h", "obtain z' where \"z = of_complex z'\""], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex[of z] inf_or_of_complex[of a]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = of_complex z'\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"z \\<in> circline_set (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  z = of_complex z'\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using assms \\<open>a = of_complex a'\\<close> *"], ["proof (prove)\nusing this:\n  z = of_complex z'\n  z \\<in> circline_set (chordal_circle a r)\n  0 \\<le> r\n  a = of_complex a'\n  chordal_circle (of_complex a') r =\n  mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n   (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by simp"], ["proof (state)\nthis:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"(cnj z' * ?A + ?C) * z' + (cnj z' * ?B + ?D) = 0\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') *\n    z' +\n    (cnj z' * (- 4 * a') +\n     (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n    0", "using hh"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') *\n    z' +\n    (cnj z' * (- 4 * a') +\n     (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n    0", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect\n           (on_circline\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))))\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') *\n    z' +\n    (cnj z' * (- 4 * a') +\n     (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n    0", "by (subst (asm) \\<open>z = of_complex z'\\<close>, simp) (transfer, transfer, simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') * z' +\n  (cnj z' * (- 4 * a') +\n   (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n  0\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"?A * z' * cnj z' + ?B * cnj z' + ?C * z' + ?D = 0\""], ["proof (prove)\nusing this:\n  (cnj z' * (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) + - 4 * cnj a') * z' +\n  (cnj z' * (- 4 * a') +\n   (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))) =\n  0\n\ngoal (1 subgoal):\n 1. (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n    - 4 * a' * cnj z' +\n    - 4 * cnj a' * z' +\n    (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')) =\n    0", "by algebra"], ["proof (state)\nthis:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n  - 4 * a' * cnj z' +\n  - 4 * cnj a' * z' +\n  (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')) =\n  0\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"Re (?A * z' * cnj z' + ?B * cnj z' +?C * z' +?D) = 0\""], ["proof (prove)\nusing this:\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n  - 4 * a' * cnj z' +\n  - 4 * cnj a' * z' +\n  (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')) =\n  0\n\ngoal (1 subgoal):\n 1. is_imag\n     ((4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n      - 4 * a' * cnj z' +\n      - 4 * cnj a' * z' +\n      (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  is_imag\n   ((4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n    - 4 * a' * cnj z' +\n    - 4 * cnj a' * z' +\n    (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"4 * Re ((z' - a')*cnj (z' - a')) = r\\<^sup>2 * (1 + Re (z'*cnj z')) * (1 + Re (a'*cnj a'))\""], ["proof (prove)\nusing this:\n  is_imag\n   ((4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) * z' * cnj z' +\n    - 4 * a' * cnj z' +\n    - 4 * cnj a' * z' +\n    (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. 4 * Re ((z' - a') * cnj (z' - a')) =\n    r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  4 * Re ((z' - a') * cnj (z' - a')) =\n  r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"4 * (cmod (z' - a'))\\<^sup>2  = r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\""], ["proof (prove)\nusing this:\n  4 * Re ((z' - a') * cnj (z' - a')) =\n  r\\<^sup>2 * (1 + Re (z' * cnj z')) * (1 + Re (a' * cnj a'))\n\ngoal (1 subgoal):\n 1. 4 * (cmod (z' - a'))\\<^sup>2 =\n    r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))", "by (subst cmod_square)+ simp"], ["proof (state)\nthis:\n  4 * (cmod (z' - a'))\\<^sup>2 =\n  r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "moreover"], ["proof (state)\nthis:\n  4 * (cmod (z' - a'))\\<^sup>2 =\n  r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "have \"sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\" \"sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0 &&&\n    sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "using sqrt_1_plus_square"], ["proof (prove)\nusing this:\n  sqrt (1 + ?a\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0 &&&\n    sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "by simp+"], ["proof (state)\nthis:\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"(1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "ultimately"], ["proof (chain)\npicking this:\n  4 * (cmod (z' - a'))\\<^sup>2 =\n  r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\n  (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "have \"4 * (cmod (z' - a'))\\<^sup>2 / ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) = r\\<^sup>2 \""], ["proof (prove)\nusing this:\n  4 * (cmod (z' - a'))\\<^sup>2 =\n  r\\<^sup>2 * ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2))\n  (1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 4 * (cmod (z' - a'))\\<^sup>2 /\n    ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n    r\\<^sup>2", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"2 * cmod (z' - a') / (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) = r\""], ["proof (prove)\nusing this:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 * cmod (z' - a') /\n    (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n    r", "using \\<open>r \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  4 * (cmod (z' - a'))\\<^sup>2 /\n  ((1 + (cmod z')\\<^sup>2) * (1 + (cmod a')\\<^sup>2)) =\n  r\\<^sup>2\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. 2 * cmod (z' - a') /\n    (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n    r", "by (subst (asm) real_sqrt_eq_iff[symmetric]) (simp add: real_sqrt_mult real_sqrt_divide)"], ["proof (state)\nthis:\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n  r\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n  r\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using \\<open>z = of_complex z'\\<close> \\<open>a = of_complex a'\\<close>"], ["proof (prove)\nusing this:\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n  r\n  z = of_complex z'\n  a = of_complex a'\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using dist_fs_finite[of z' a']"], ["proof (prove)\nusing this:\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2)) =\n  r\n  z = of_complex z'\n  a = of_complex a'\n  dist_fs (of_complex z') (of_complex a') =\n  2 * cmod (z' - a') /\n  (sqrt (1 + (cmod z')\\<^sup>2) * sqrt (1 + (cmod a')\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "by simp"], ["proof (state)\nthis:\n  dist_fs z a = r\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "case True"], ["proof (state)\nthis:\n  z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "have \"z \\<in> circline_set (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using assms \\<open>a = of_complex a'\\<close> *"], ["proof (prove)\nusing this:\n  z \\<in> circline_set (chordal_circle a r)\n  0 \\<le> r\n  a = of_complex a'\n  chordal_circle (of_complex a') r =\n  mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n   (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n               (- 4 * a') (- 4 * cnj a')\n               (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by simp"], ["proof (state)\nthis:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"circline_A0 (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. is_line\n     (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n       (- 4 * cnj a')\n       (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using inf_in_circline_set[of \"mk_circline ?A ?B ?C ?D\"]"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  (\\<infinity>\\<^sub>h\n   \\<in> circline_set\n          (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n            (- 4 * cnj a')\n            (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))) =\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. is_line\n     (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n       (- 4 * cnj a')\n       (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "using \\<open>z = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n             (- 4 * cnj a')\n             (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  (\\<infinity>\\<^sub>h\n   \\<in> circline_set\n          (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n            (- 4 * cnj a')\n            (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))) =\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. is_line\n     (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n       (- 4 * cnj a')\n       (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))", "by simp"], ["proof (state)\nthis:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"4 - (cor r)\\<^sup>2 * (1 + (a'*cnj a')) = 0\""], ["proof (prove)\nusing this:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0", "using hh"], ["proof (prove)\nusing this:\n  is_line\n   (mk_circline (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a')) (- 4 * a')\n     (- 4 * cnj a') (4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a')))\n  (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'), - 4 * a', - 4 * cnj a',\n   4 * a' * cnj a' - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n  \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0", "by (transfer, transfer, simp)"], ["proof (state)\nthis:\n  4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"Re (4 - (cor r)\\<^sup>2 * (1 + (a' * cnj a'))) = 0\""], ["proof (prove)\nusing this:\n  4 - (cor r)\\<^sup>2 * (1 + a' * cnj a') = 0\n\ngoal (1 subgoal):\n 1. is_imag (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))", "by simp"], ["proof (state)\nthis:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + a' * cnj a'))\n\ngoal (1 subgoal):\n 1. 4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)", "by (subst cmod_square) (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"2 = r * sqrt (1 + (cmod a')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 2 = r * sqrt (1 + (cmod a')\\<^sup>2)", "using \\<open>r \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  4 = r\\<^sup>2 * (1 + (cmod a')\\<^sup>2)\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. 2 = r * sqrt (1 + (cmod a')\\<^sup>2)", "by (subst (asm) real_sqrt_eq_iff[symmetric]) (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  2 = r * sqrt (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "moreover"], ["proof (state)\nthis:\n  2 = r * sqrt (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "have \"sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "using sqrt_1_plus_square"], ["proof (prove)\nusing this:\n  sqrt (1 + ?a\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "ultimately"], ["proof (chain)\npicking this:\n  2 = r * sqrt (1 + (cmod a')\\<^sup>2)\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0", "have \"2 / sqrt (1 + (cmod a')\\<^sup>2) = r\""], ["proof (prove)\nusing this:\n  2 = r * sqrt (1 + (cmod a')\\<^sup>2)\n  sqrt (1 + (cmod a')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod a')\\<^sup>2) = r", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using \\<open>a = of_complex a'\\<close> \\<open>z = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n  a = of_complex a'\n  z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using dist_fs_infinite2[of a']"], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod a')\\<^sup>2) = r\n  a = of_complex a'\n  z = \\<infinity>\\<^sub>h\n  dist_fs \\<infinity>\\<^sub>h (of_complex a') =\n  2 / sqrt (1 + (cmod a')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "by simp"], ["proof (state)\nthis:\n  dist_fs z a = r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs z a = r\n\ngoal (1 subgoal):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "case True"], ["proof (state)\nthis:\n  a = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "let ?A = \"-(cor r)\\<^sup>2\" and ?B = \"0\" and ?C = \"0\" and ?D = \"4 -(cor r)\\<^sup>2\""], ["proof (state)\ngoal (1 subgoal):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "have hh: \"(?A, ?B, ?C, ?D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def power2_eq_square)"], ["proof (state)\nthis:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence *: \"chordal_circle a r = mk_circline ?A ?B ?C ?D\""], ["proof (prove)\nusing this:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. chordal_circle a r =\n    mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)", "using \\<open>a = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  a = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. chordal_circle a r =\n    mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)", "by simp (transfer, transfer, simp, rule_tac x=1 in exI, simp)"], ["proof (state)\nthis:\n  chordal_circle a r =\n  mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist_fs z a = r", "proof (cases \"z = \\<infinity>\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "case True"], ["proof (state)\nthis:\n  z = \\<infinity>\\<^sub>h\n\ngoal (2 subgoals):\n 1. z = \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r\n 2. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using \\<open>a = \\<infinity>\\<^sub>h\\<close> assms * hh"], ["proof (prove)\nusing this:\n  z = \\<infinity>\\<^sub>h\n  a = \\<infinity>\\<^sub>h\n  z \\<in> circline_set (chordal_circle a r)\n  0 \\<le> r\n  chordal_circle a r =\n  mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "by simp (subst (asm) inf_in_circline_set, transfer, transfer, simp)"], ["proof (state)\nthis:\n  dist_fs z a = r\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "case False"], ["proof (state)\nthis:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "then"], ["proof (chain)\npicking this:\n  z \\<noteq> \\<infinity>\\<^sub>h", "obtain z' where \"z = of_complex z'\""], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inf_or_of_complex"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>z'. z = of_complex z' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = of_complex z'\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"z \\<in> circline_set (mk_circline ?A ?B ?C ?D)\""], ["proof (prove)\nusing this:\n  z = of_complex z'\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))", "using assms *"], ["proof (prove)\nusing this:\n  z = of_complex z'\n  z \\<in> circline_set (chordal_circle a r)\n  0 \\<le> r\n  chordal_circle a r =\n  mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<in> circline_set\n             (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  z \\<in> circline_set\n           (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"- (cor r)\\<^sup>2 * z'*cnj z' + 4 - (cor r)\\<^sup>2 = 0\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0", "using hh"], ["proof (prove)\nusing this:\n  z \\<in> circline_set\n           (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2))\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect\n           (on_circline\n             (mk_circline (- (cor r)\\<^sup>2) 0 0 (4 - (cor r)\\<^sup>2)))\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0", "apply (subst (asm) \\<open>z = of_complex z'\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>of_complex z'\n             \\<in> Collect\n                    (on_circline\n                      (mk_circline (- (cor r)\\<^sup>2) 0 0\n                        (4 - (cor r)\\<^sup>2)));\n     (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2)\n     \\<in> hermitean_nonzero\\<rbrakk>\n    \\<Longrightarrow> - (cor r)\\<^sup>2 * z' * cnj z' + 4 -\n                      (cor r)\\<^sup>2 =\n                      0", "by (simp, transfer, transfer, simp add: vec_cnj_def, algebra)"], ["proof (state)\nthis:\n  - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"4 - (cor r)\\<^sup>2 * (1 + (z'*cnj z')) = 0\""], ["proof (prove)\nusing this:\n  - (cor r)\\<^sup>2 * z' * cnj z' + 4 - (cor r)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (1 + z' * cnj z') = 0", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 - (cor r)\\<^sup>2 * (1 + z' * cnj z') = 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"Re (4 - (cor r)\\<^sup>2 * (1 + (z' * cnj z'))) = 0\""], ["proof (prove)\nusing this:\n  4 - (cor r)\\<^sup>2 * (1 + z' * cnj z') = 0\n\ngoal (1 subgoal):\n 1. is_imag (4 - (cor r)\\<^sup>2 * (1 + z' * cnj z'))", "by simp"], ["proof (state)\nthis:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + z' * cnj z'))\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  is_imag (4 - (cor r)\\<^sup>2 * (1 + z' * cnj z'))\n\ngoal (1 subgoal):\n 1. 4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)", "by (subst cmod_square) (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "hence \"2 = r * sqrt (1 + (cmod z')\\<^sup>2)\""], ["proof (prove)\nusing this:\n  4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 2 = r * sqrt (1 + (cmod z')\\<^sup>2)", "using \\<open>r \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  4 = r\\<^sup>2 * (1 + (cmod z')\\<^sup>2)\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. 2 = r * sqrt (1 + (cmod z')\\<^sup>2)", "by (subst (asm) real_sqrt_eq_iff[symmetric]) (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  2 = r * sqrt (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "moreover"], ["proof (state)\nthis:\n  2 = r * sqrt (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "have \"sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0", "using sqrt_1_plus_square"], ["proof (prove)\nusing this:\n  sqrt (1 + ?a\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "ultimately"], ["proof (chain)\npicking this:\n  2 = r * sqrt (1 + (cmod z')\\<^sup>2)\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0", "have \"2 / sqrt (1 + (cmod z')\\<^sup>2) = r\""], ["proof (prove)\nusing this:\n  2 = r * sqrt (1 + (cmod z')\\<^sup>2)\n  sqrt (1 + (cmod z')\\<^sup>2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 / sqrt (1 + (cmod z')\\<^sup>2) = r", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> dist_fs z a = r", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using \\<open>z = of_complex z'\\<close> \\<open>a = \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n  z = of_complex z'\n  a = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "using dist_fs_infinite2[of z']"], ["proof (prove)\nusing this:\n  2 / sqrt (1 + (cmod z')\\<^sup>2) = r\n  z = of_complex z'\n  a = \\<infinity>\\<^sub>h\n  dist_fs \\<infinity>\\<^sub>h (of_complex z') =\n  2 / sqrt (1 + (cmod z')\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist_fs z a = r", "by (simp add: dist_fs_sym)"], ["proof (state)\nthis:\n  dist_fs z a = r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist_fs z a = r\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Two chordal centers and radii for the given circline\\<close>"], ["", "definition chordal_circles_cmat :: \"complex_mat \\<Rightarrow> (complex \\<times> real) \\<times> (complex \\<times> real)\"  where\n [simp]: \"chordal_circles_cmat H =\n     (let (A, B, C, D) = H;\n          dsc = sqrt(Re ((D-A)\\<^sup>2 + 4 * (B*cnj B)));\n          a1 = (A - D + cor dsc) / (2 * C);\n          r1 = sqrt((4 - Re((-4 * a1/B) * A)) / (1 + Re (a1*cnj a1)));\n          a2 = (A - D - cor dsc) / (2 * C);\n          r2 = sqrt((4 - Re((-4 * a2/B) * A)) / (1 + Re (a2*cnj a2)))\n       in ((a1, r1), (a2, r2)))\""], ["", "lift_definition chordal_circles_clmat :: \"circline_mat \\<Rightarrow> (complex \\<times> real) \\<times> (complex \\<times> real)\" is chordal_circles_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition chordal_circles :: \"ocircline \\<Rightarrow> (complex \\<times> real) \\<times> (complex \\<times> real)\" is chordal_circles_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       ocircline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       chordal_circles_clmat circline_mat1 =\n       chordal_circles_clmat circline_mat2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "fix H1 H2 :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "obtain A1 B1 C1 D1 where hh1: \"(A1, B1, C1, D1) = H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1.\n        (A1, B1, C1, D1) = H1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1) auto"], ["proof (state)\nthis:\n  (A1, B1, C1, D1) = H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "obtain A2 B2 C2 D2 where hh2: \"(A2, B2, C2, D2) = H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A2 B2 C2 D2.\n        (A2, B2, C2, D2) = H2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H2) auto"], ["proof (state)\nthis:\n  (A2, B2, C2, D2) = H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "assume \"ocircline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  ocircline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  ocircline_eq_cmat H1 H2", "obtain k where *: \"k > 0\" \"A2 = cor k * A1\" \"B2 = cor k * B1\" \"C2 = cor k * C1\" \"D2 = cor k * D1\""], ["proof (prove)\nusing this:\n  ocircline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k; A2 = cor k * A1; B2 = cor k * B1; C2 = cor k * C1;\n         D2 = cor k * D1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hh1[symmetric] hh2[symmetric]"], ["proof (prove)\nusing this:\n  ocircline_eq_cmat H1 H2\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k; A2 = cor k * A1; B2 = cor k * B1; C2 = cor k * C1;\n         D2 = cor k * D1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?dsc1 = \"sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))\" and ?dsc2 = \"sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?a11 = \"(A1 - D1 + cor ?dsc1) / (2 * C1)\" and ?a12 = \"(A2 - D2 + cor ?dsc2) / (2 * C2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?a21 = \"(A1 - D1 - cor ?dsc1) / (2 * C1)\" and ?a22 = \"(A2 - D2 - cor ?dsc2) / (2 * C2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?r11 = \"sqrt((4 - Re((-4 * ?a11/B1) * A1)) / (1 + Re (?a11*cnj ?a11)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?r12 = \"sqrt((4 - Re((-4 * ?a12/B2) * A2)) / (1 + Re (?a12*cnj ?a12)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?r21 = \"sqrt((4 - Re((-4 * ?a21/B1) * A1)) / (1 + Re (?a21*cnj ?a21)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "let ?r22 = \"sqrt((4 - Re((-4 * ?a22/B2) * A2)) / (1 + Re (?a22*cnj ?a22)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)) = k\\<^sup>2 * Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)) =\n    k\\<^sup>2 * Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))", "using *"], ["proof (prove)\nusing this:\n  0 < k\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)) =\n    k\\<^sup>2 * Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)) =\n  k\\<^sup>2 * Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "hence \"?dsc2 = k * ?dsc1\""], ["proof (prove)\nusing this:\n  Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)) =\n  k\\<^sup>2 * Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))\n\ngoal (1 subgoal):\n 1. sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))) =\n    k * sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)) =\n  k\\<^sup>2 * Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))\n  0 < k\n\ngoal (1 subgoal):\n 1. sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))) =\n    k * sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))", "by (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))) =\n  k * sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "hence \"A2 - D2 + cor ?dsc2 = cor k * (A1 - D1 + cor ?dsc1)\" \"A2 - D2 - cor ?dsc2 = cor k * (A1 - D1 - cor ?dsc1)\" \"2*C2 = cor k * (2*C1)\""], ["proof (prove)\nusing this:\n  sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))) =\n  k * sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))\n\ngoal (1 subgoal):\n 1. A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n    cor k *\n    (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) &&&\n    A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n    cor k *\n    (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) &&&\n    2 * C2 = cor k * (2 * C1)", "using *"], ["proof (prove)\nusing this:\n  sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))) =\n  k * sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))\n  0 < k\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n    cor k *\n    (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) &&&\n    A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n    cor k *\n    (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) &&&\n    2 * C2 = cor k * (2 * C1)", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n  cor k *\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))))\n  A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n  cor k *\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))))\n  2 * C2 = cor k * (2 * C1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "hence \"?a12 = ?a11\" \"?a22 = ?a21\""], ["proof (prove)\nusing this:\n  A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n  cor k *\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))))\n  A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n  cor k *\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))))\n  2 * C2 = cor k * (2 * C1)\n\ngoal (1 subgoal):\n 1. (A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2) =\n    (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1) &&&\n    (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2) =\n    (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1)", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n  cor k *\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))))\n  A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2)))) =\n  cor k *\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1)))))\n  2 * C2 = cor k * (2 * C1)\n  0 < k\n\ngoal (1 subgoal):\n 1. (A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2) =\n    (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1) &&&\n    (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2) =\n    (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1)", "by simp_all"], ["proof (state)\nthis:\n  (A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n  (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "moreover"], ["proof (state)\nthis:\n  (A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n  (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"Re((-4 * ?a12/B2) * A2) = Re((-4 * ?a11/B1) * A1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (- 4 *\n        ((A2 - D2 +\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2)) /\n        B2 *\n        A2) =\n    Re (- 4 *\n        ((A1 - D1 +\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1)) /\n        B1 *\n        A1)", "using *"], ["proof (prove)\nusing this:\n  0 < k\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. Re (- 4 *\n        ((A2 - D2 +\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2)) /\n        B2 *\n        A2) =\n    Re (- 4 *\n        ((A1 - D1 +\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1)) /\n        B1 *\n        A1)", "by (subst \\<open>?a12 = ?a11\\<close>) (simp, simp add: field_simps)"], ["proof (state)\nthis:\n  Re (- 4 *\n      ((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n       (2 * C2)) /\n      B2 *\n      A2) =\n  Re (- 4 *\n      ((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n       (2 * C1)) /\n      B1 *\n      A1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"?r12 = ?r11\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     ((4 -\n       Re (- 4 *\n           ((A2 - D2 +\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2)) /\n           B2 *\n           A2)) /\n      (1 +\n       Re ((A2 - D2 +\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2) *\n           cnj ((A2 - D2 +\n                 cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                (2 * C2))))) =\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A1 - D1 +\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1)) /\n           B1 *\n           A1)) /\n      (1 +\n       Re ((A1 - D1 +\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1) *\n           cnj ((A1 - D1 +\n                 cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                (2 * C1)))))", "by (subst \\<open>Re((-4 * ?a12/B2) * A2) = Re((-4 * ?a11/B1) * A1)\\<close>, (subst \\<open>?a12 = ?a11\\<close>)+) simp"], ["proof (state)\nthis:\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 +\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 +\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 +\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 +\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "moreover"], ["proof (state)\nthis:\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 +\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 +\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 +\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 +\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"Re((-4 * ?a22/B2) * A2) = Re((-4 * ?a21/B1) * A1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (- 4 *\n        ((A2 - D2 -\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2)) /\n        B2 *\n        A2) =\n    Re (- 4 *\n        ((A1 - D1 -\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1)) /\n        B1 *\n        A1)", "using *"], ["proof (prove)\nusing this:\n  0 < k\n  A2 = cor k * A1\n  B2 = cor k * B1\n  C2 = cor k * C1\n  D2 = cor k * D1\n\ngoal (1 subgoal):\n 1. Re (- 4 *\n        ((A2 - D2 -\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2)) /\n        B2 *\n        A2) =\n    Re (- 4 *\n        ((A1 - D1 -\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1)) /\n        B1 *\n        A1)", "by (subst \\<open>?a22 = ?a21\\<close>) (simp, simp add: field_simps)"], ["proof (state)\nthis:\n  Re (- 4 *\n      ((A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n       (2 * C2)) /\n      B2 *\n      A2) =\n  Re (- 4 *\n      ((A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n       (2 * C1)) /\n      B1 *\n      A1)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"?r22 = ?r21\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     ((4 -\n       Re (- 4 *\n           ((A2 - D2 -\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2)) /\n           B2 *\n           A2)) /\n      (1 +\n       Re ((A2 - D2 -\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2) *\n           cnj ((A2 - D2 -\n                 cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                (2 * C2))))) =\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A1 - D1 -\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1)) /\n           B1 *\n           A1)) /\n      (1 +\n       Re ((A1 - D1 -\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1) *\n           cnj ((A1 - D1 -\n                 cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                (2 * C1)))))", "by (subst \\<open>Re((-4 * ?a22/B2) * A2) = Re((-4 * ?a21/B1) * A1)\\<close>, (subst \\<open>?a22 = ?a21\\<close>)+) simp"], ["proof (state)\nthis:\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 -\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 -\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 -\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 -\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "moreover"], ["proof (state)\nthis:\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 -\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 -\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 -\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 -\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"chordal_circles_cmat H1 = ((?a11, ?r11), (?a21, ?r21))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chordal_circles_cmat H1 =\n    (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n      (2 * C1),\n      sqrt\n       ((4 -\n         Re (- 4 *\n             ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)) /\n             B1 *\n             A1)) /\n        (1 +\n         Re ((A1 - D1 +\n              cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n             (2 * C1) *\n             cnj ((A1 - D1 +\n                   cor (sqrt\n                         (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                  (2 * C1)))))),\n     (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n     (2 * C1),\n     sqrt\n      ((4 -\n        Re (- 4 *\n            ((A1 - D1 -\n              cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n             (2 * C1)) /\n            B1 *\n            A1)) /\n       (1 +\n        Re ((A1 - D1 -\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1) *\n            cnj ((A1 - D1 -\n                  cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                 (2 * C1))))))", "using hh1[symmetric]"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. chordal_circles_cmat H1 =\n    (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n      (2 * C1),\n      sqrt\n       ((4 -\n         Re (- 4 *\n             ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)) /\n             B1 *\n             A1)) /\n        (1 +\n         Re ((A1 - D1 +\n              cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n             (2 * C1) *\n             cnj ((A1 - D1 +\n                   cor (sqrt\n                         (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                  (2 * C1)))))),\n     (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n     (2 * C1),\n     sqrt\n      ((4 -\n        Re (- 4 *\n            ((A1 - D1 -\n              cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n             (2 * C1)) /\n            B1 *\n            A1)) /\n       (1 +\n        Re ((A1 - D1 -\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1) *\n            cnj ((A1 - D1 -\n                  cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                 (2 * C1))))))", "unfolding chordal_circles_cmat_def Let_def"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. (case H1 of\n     (A, B, C, D) \\<Rightarrow>\n       (((A - D + cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n         (2 * C),\n         sqrt\n          ((4 -\n            Re (- 4 *\n                ((A - D +\n                  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                 (2 * C)) /\n                B *\n                A)) /\n           (1 +\n            Re ((A - D +\n                 cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                (2 * C) *\n                cnj ((A - D +\n                      cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                     (2 * C)))))),\n        (A - D - cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n        (2 * C),\n        sqrt\n         ((4 -\n           Re (- 4 *\n               ((A - D -\n                 cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                (2 * C)) /\n               B *\n               A)) /\n          (1 +\n           Re ((A - D -\n                cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n               (2 * C) *\n               cnj ((A - D -\n                     cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                    (2 * C))))))) =\n    (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n      (2 * C1),\n      sqrt\n       ((4 -\n         Re (- 4 *\n             ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)) /\n             B1 *\n             A1)) /\n        (1 +\n         Re ((A1 - D1 +\n              cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n             (2 * C1) *\n             cnj ((A1 - D1 +\n                   cor (sqrt\n                         (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                  (2 * C1)))))),\n     (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n     (2 * C1),\n     sqrt\n      ((4 -\n        Re (- 4 *\n            ((A1 - D1 -\n              cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n             (2 * C1)) /\n            B1 *\n            A1)) /\n       (1 +\n        Re ((A1 - D1 -\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1) *\n            cnj ((A1 - D1 -\n                  cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                 (2 * C1))))))", "by (simp del: times_complex.sel)"], ["proof (state)\nthis:\n  chordal_circles_cmat H1 =\n  (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A1 - D1 +\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1)) /\n           B1 *\n           A1)) /\n      (1 +\n       Re ((A1 - D1 +\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1) *\n           cnj ((A1 - D1 +\n                 cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                (2 * C1)))))),\n   (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n   (2 * C1),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A1 - D1 -\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1)) /\n          B1 *\n          A1)) /\n     (1 +\n      Re ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1) *\n          cnj ((A1 - D1 -\n                cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n               (2 * C1))))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "moreover"], ["proof (state)\nthis:\n  chordal_circles_cmat H1 =\n  (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A1 - D1 +\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1)) /\n           B1 *\n           A1)) /\n      (1 +\n       Re ((A1 - D1 +\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1) *\n           cnj ((A1 - D1 +\n                 cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                (2 * C1)))))),\n   (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n   (2 * C1),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A1 - D1 -\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1)) /\n          B1 *\n          A1)) /\n     (1 +\n      Re ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1) *\n          cnj ((A1 - D1 -\n                cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n               (2 * C1))))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "have \"chordal_circles_cmat H2 = ((?a12, ?r12), (?a22, ?r22))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chordal_circles_cmat H2 =\n    (((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n      (2 * C2),\n      sqrt\n       ((4 -\n         Re (- 4 *\n             ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2)) /\n             B2 *\n             A2)) /\n        (1 +\n         Re ((A2 - D2 +\n              cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n             (2 * C2) *\n             cnj ((A2 - D2 +\n                   cor (sqrt\n                         (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                  (2 * C2)))))),\n     (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n     (2 * C2),\n     sqrt\n      ((4 -\n        Re (- 4 *\n            ((A2 - D2 -\n              cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n             (2 * C2)) /\n            B2 *\n            A2)) /\n       (1 +\n        Re ((A2 - D2 -\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2) *\n            cnj ((A2 - D2 -\n                  cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                 (2 * C2))))))", "using hh2[symmetric]"], ["proof (prove)\nusing this:\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. chordal_circles_cmat H2 =\n    (((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n      (2 * C2),\n      sqrt\n       ((4 -\n         Re (- 4 *\n             ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2)) /\n             B2 *\n             A2)) /\n        (1 +\n         Re ((A2 - D2 +\n              cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n             (2 * C2) *\n             cnj ((A2 - D2 +\n                   cor (sqrt\n                         (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                  (2 * C2)))))),\n     (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n     (2 * C2),\n     sqrt\n      ((4 -\n        Re (- 4 *\n            ((A2 - D2 -\n              cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n             (2 * C2)) /\n            B2 *\n            A2)) /\n       (1 +\n        Re ((A2 - D2 -\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2) *\n            cnj ((A2 - D2 -\n                  cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                 (2 * C2))))))", "unfolding chordal_circles_cmat_def Let_def"], ["proof (prove)\nusing this:\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. (case H2 of\n     (A, B, C, D) \\<Rightarrow>\n       (((A - D + cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n         (2 * C),\n         sqrt\n          ((4 -\n            Re (- 4 *\n                ((A - D +\n                  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                 (2 * C)) /\n                B *\n                A)) /\n           (1 +\n            Re ((A - D +\n                 cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                (2 * C) *\n                cnj ((A - D +\n                      cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                     (2 * C)))))),\n        (A - D - cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n        (2 * C),\n        sqrt\n         ((4 -\n           Re (- 4 *\n               ((A - D -\n                 cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                (2 * C)) /\n               B *\n               A)) /\n          (1 +\n           Re ((A - D -\n                cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n               (2 * C) *\n               cnj ((A - D -\n                     cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))) /\n                    (2 * C))))))) =\n    (((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n      (2 * C2),\n      sqrt\n       ((4 -\n         Re (- 4 *\n             ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2)) /\n             B2 *\n             A2)) /\n        (1 +\n         Re ((A2 - D2 +\n              cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n             (2 * C2) *\n             cnj ((A2 - D2 +\n                   cor (sqrt\n                         (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                  (2 * C2)))))),\n     (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n     (2 * C2),\n     sqrt\n      ((4 -\n        Re (- 4 *\n            ((A2 - D2 -\n              cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n             (2 * C2)) /\n            B2 *\n            A2)) /\n       (1 +\n        Re ((A2 - D2 -\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2) *\n            cnj ((A2 - D2 -\n                  cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                 (2 * C2))))))", "by (simp del: times_complex.sel)"], ["proof (state)\nthis:\n  chordal_circles_cmat H2 =\n  (((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A2 - D2 +\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2)) /\n           B2 *\n           A2)) /\n      (1 +\n       Re ((A2 - D2 +\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2) *\n           cnj ((A2 - D2 +\n                 cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                (2 * C2)))))),\n   (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n   (2 * C2),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A2 - D2 -\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2)) /\n          B2 *\n          A2)) /\n     (1 +\n      Re ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2) *\n          cnj ((A2 - D2 -\n                cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n               (2 * C2))))))\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> chordal_circles_cmat circline_mat1 =\n                         chordal_circles_cmat circline_mat2", "ultimately"], ["proof (chain)\npicking this:\n  (A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n  (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 +\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 +\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 +\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 +\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 -\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 -\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 -\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 -\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n  chordal_circles_cmat H1 =\n  (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A1 - D1 +\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1)) /\n           B1 *\n           A1)) /\n      (1 +\n       Re ((A1 - D1 +\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1) *\n           cnj ((A1 - D1 +\n                 cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                (2 * C1)))))),\n   (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n   (2 * C1),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A1 - D1 -\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1)) /\n          B1 *\n          A1)) /\n     (1 +\n      Re ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1) *\n          cnj ((A1 - D1 -\n                cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n               (2 * C1))))))\n  chordal_circles_cmat H2 =\n  (((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A2 - D2 +\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2)) /\n           B2 *\n           A2)) /\n      (1 +\n       Re ((A2 - D2 +\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2) *\n           cnj ((A2 - D2 +\n                 cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                (2 * C2)))))),\n   (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n   (2 * C2),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A2 - D2 -\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2)) /\n          B2 *\n          A2)) /\n     (1 +\n      Re ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2) *\n          cnj ((A2 - D2 -\n                cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n               (2 * C2))))))", "show \"chordal_circles_cmat H1 = chordal_circles_cmat H2\""], ["proof (prove)\nusing this:\n  (A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n  (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n  (2 * C2) =\n  (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n  (2 * C1)\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 +\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 +\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 +\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 +\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 +\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 +\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2)) /\n         B2 *\n         A2)) /\n    (1 +\n     Re ((A2 - D2 -\n          cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n         (2 * C2) *\n         cnj ((A2 - D2 -\n               cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n              (2 * C2))))) =\n  sqrt\n   ((4 -\n     Re (- 4 *\n         ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1)) /\n         B1 *\n         A1)) /\n    (1 +\n     Re ((A1 - D1 -\n          cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n         (2 * C1) *\n         cnj ((A1 - D1 -\n               cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n              (2 * C1)))))\n  chordal_circles_cmat H1 =\n  (((A1 - D1 + cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n    (2 * C1),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A1 - D1 +\n             cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n            (2 * C1)) /\n           B1 *\n           A1)) /\n      (1 +\n       Re ((A1 - D1 +\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1) *\n           cnj ((A1 - D1 +\n                 cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n                (2 * C1)))))),\n   (A1 - D1 - cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n   (2 * C1),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A1 - D1 -\n            cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n           (2 * C1)) /\n          B1 *\n          A1)) /\n     (1 +\n      Re ((A1 - D1 -\n           cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n          (2 * C1) *\n          cnj ((A1 - D1 -\n                cor (sqrt (Re ((D1 - A1)\\<^sup>2 + 4 * (B1 * cnj B1))))) /\n               (2 * C1))))))\n  chordal_circles_cmat H2 =\n  (((A2 - D2 + cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n    (2 * C2),\n    sqrt\n     ((4 -\n       Re (- 4 *\n           ((A2 - D2 +\n             cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n            (2 * C2)) /\n           B2 *\n           A2)) /\n      (1 +\n       Re ((A2 - D2 +\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2) *\n           cnj ((A2 - D2 +\n                 cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n                (2 * C2)))))),\n   (A2 - D2 - cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n   (2 * C2),\n   sqrt\n    ((4 -\n      Re (- 4 *\n          ((A2 - D2 -\n            cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n           (2 * C2)) /\n          B2 *\n          A2)) /\n     (1 +\n      Re ((A2 - D2 -\n           cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n          (2 * C2) *\n          cnj ((A2 - D2 -\n                cor (sqrt (Re ((D2 - A2)\\<^sup>2 + 4 * (B2 * cnj B2))))) /\n               (2 * C2))))))\n\ngoal (1 subgoal):\n 1. chordal_circles_cmat H1 = chordal_circles_cmat H2", "by metis"], ["proof (state)\nthis:\n  chordal_circles_cmat H1 = chordal_circles_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chordal_circle_radius_positive:\n  assumes \"hermitean (A, B, C, D)\" and \"Re (mat_det (A, B, C, D)) \\<le> 0\" and \"B \\<noteq> 0\" and\n  \"dsc = sqrt(Re ((D-A)\\<^sup>2 + 4 * (B*cnj B)))\" and \n  \"a1 = (A - D + cor dsc) / (2 * C)\" and \"a2 = (A - D - cor dsc) / (2 * C)\"\n  shows \"Re (A*a1/B) \\<ge> -1 \\<and> Re (A*a2/B) \\<ge> -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "from assms"], ["proof (chain)\npicking this:\n  hermitean (A, B, C, D)\n  Re (mat_det (A, B, C, D)) \\<le> 0\n  B \\<noteq> 0\n  dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  a1 = (A - D + cor dsc) / (2 * C)\n  a2 = (A - D - cor dsc) / (2 * C)", "have \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D)\n  Re (mat_det (A, B, C, D)) \\<le> 0\n  B \\<noteq> 0\n  dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  a1 = (A - D + cor dsc) / (2 * C)\n  a2 = (A - D - cor dsc) / (2 * C)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using hermitean_elems"], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D)\n  Re (mat_det (A, B, C, D)) \\<le> 0\n  B \\<noteq> 0\n  dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  a1 = (A - D + cor dsc) / (2 * C)\n  a2 = (A - D - cor dsc) / (2 * C)\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have *: \"A*a1/B = ((A - D + cor dsc) / (2 * (B * cnj B))) * A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A", "using \\<open>B \\<noteq> 0\\<close> \\<open>C = cnj B\\<close> \\<open>a1 = (A - D + cor dsc) / (2 * C)\\<close>"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  C = cnj B\n  a1 = (A - D + cor dsc) / (2 * C)\n\ngoal (1 subgoal):\n 1. A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A", "by (simp add: field_simps) algebra"], ["proof (state)\nthis:\n  A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have **: \"A*a2/B = ((A - D - cor dsc) / (2 * (B * cnj B))) * A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A", "using \\<open>B \\<noteq> 0\\<close> \\<open>C = cnj B\\<close> \\<open>a2 = (A - D - cor dsc) / (2 * C)\\<close>"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  C = cnj B\n  a2 = (A - D - cor dsc) / (2 * C)\n\ngoal (1 subgoal):\n 1. A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A", "by (simp add: field_simps) algebra"], ["proof (state)\nthis:\n  A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have \"dsc \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dsc", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> dsc", "have \"0 \\<le> Re ((D - A)\\<^sup>2) + 4 * Re ((cor (cmod B))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re ((D - A)\\<^sup>2) + 4 * Re ((cor (cmod B))\\<^sup>2)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re ((D - A)\\<^sup>2) + 4 * Re ((cor (cmod B))\\<^sup>2)", "by (subst cor_squared, subst Re_complex_of_real) (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 \\<le> Re ((D - A)\\<^sup>2) + 4 * Re ((cor (cmod B))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> dsc", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> Re ((D - A)\\<^sup>2) + 4 * Re ((cor (cmod B))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> dsc", "using \\<open>dsc = sqrt(Re ((D-A)\\<^sup>2 + 4*(B*cnj B)))\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re ((D - A)\\<^sup>2) + 4 * Re ((cor (cmod B))\\<^sup>2)\n  dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> dsc", "by (subst (asm) complex_mult_cnj_cmod) simp"], ["proof (state)\nthis:\n  0 \\<le> dsc\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> dsc\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "hence \"Re (A - D - cor dsc) \\<le> Re (A - D + cor dsc)\""], ["proof (prove)\nusing this:\n  0 \\<le> dsc\n\ngoal (1 subgoal):\n 1. Re (A - D - cor dsc) \\<le> Re (A - D + cor dsc)", "by simp"], ["proof (state)\nthis:\n  Re (A - D - cor dsc) \\<le> Re (A - D + cor dsc)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  Re (A - D - cor dsc) \\<le> Re (A - D + cor dsc)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have \"Re (2 * (B * cnj B)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (2 * (B * cnj B))", "using \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Re (2 * (B * cnj B))", "by (subst complex_mult_cnj_cmod, simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 < Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "ultimately"], ["proof (chain)\npicking this:\n  Re (A - D - cor dsc) \\<le> Re (A - D + cor dsc)\n  0 < Re (2 * (B * cnj B))", "have xxx: \"Re (A - D + cor dsc) / Re (2 * (B * cnj B)) \\<ge> Re (A - D - cor dsc) / Re (2 * (B * cnj B))\" (is \"?lhs \\<ge> ?rhs\")"], ["proof (prove)\nusing this:\n  Re (A - D - cor dsc) \\<le> Re (A - D + cor dsc)\n  0 < Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n    \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B))", "by (metis divide_right_mono less_eq_real_def)"], ["proof (state)\nthis:\n  Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n  \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have \"Re A * Re D \\<le> Re (B*cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re A * Re D \\<le> Re (B * cnj B)", "using \\<open>Re (mat_det (A, B, C, D)) \\<le> 0\\<close> \\<open>C = cnj B\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re (mat_det (A, B, C, D)) \\<le> 0\n  C = cnj B\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. Re A * Re D \\<le> Re (B * cnj B)", "by simp"], ["proof (state)\nthis:\n  Re A * Re D \\<le> Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have \"(Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B) = 1 / Re A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (2 * (B * cnj B)) / Re A / Re (2 * B * cnj B) = 1 / Re A", "using \\<open>Re (2 * (B * cnj B)) > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. Re (2 * (B * cnj B)) / Re A / Re (2 * B * cnj B) = 1 / Re A", "apply (subst divide_divide_eq_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (2 * (B * cnj B)) \\<Longrightarrow>\n    Re (2 * (B * cnj B)) / (Re A * Re (2 * B * cnj B)) = 1 / Re A", "apply (subst mult.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (2 * (B * cnj B)) \\<Longrightarrow>\n    Re (2 * (B * cnj B)) / (Re A * Re (2 * (B * cnj B))) = 1 / Re A", "apply (subst nonzero_divide_mult_cancel_right)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 < Re (2 * (B * cnj B)) \\<Longrightarrow>\n    Re (2 * (B * cnj B)) \\<noteq> 0\n 2. 0 < Re (2 * (B * cnj B)) \\<Longrightarrow> 1 / Re A = 1 / Re A", "by simp_all"], ["proof (state)\nthis:\n  Re (2 * (B * cnj B)) / Re A / Re (2 * B * cnj B) = 1 / Re A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "proof (cases \"Re A > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "case True"], ["proof (state)\nthis:\n  0 < Re A\n\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "hence \"Re (A*a1/B) \\<ge> Re (A*a2/B)\""], ["proof (prove)\nusing this:\n  0 < Re A\n\ngoal (1 subgoal):\n 1. Re (A * a2 / B) \\<le> Re (A * a1 / B)", "using * ** \\<open>Re (2 * (B * cnj B)) > 0\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close> xxx"], ["proof (prove)\nusing this:\n  0 < Re A\n  A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A\n  A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A\n  0 < Re (2 * (B * cnj B))\n  B \\<noteq> 0\n  is_real A\n  is_real D\n  Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n  \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. Re (A * a2 / B) \\<le> Re (A * a1 / B)", "using mult_right_mono[of ?rhs ?lhs \"Re A\"]"], ["proof (prove)\nusing this:\n  0 < Re A\n  A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A\n  A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A\n  0 < Re (2 * (B * cnj B))\n  B \\<noteq> 0\n  is_real A\n  is_real D\n  Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n  \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B))\n  \\<lbrakk>Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n           \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B));\n   0 \\<le> Re A\\<rbrakk>\n  \\<Longrightarrow> Re (A - D - cor dsc) / Re (2 * (B * cnj B)) * Re A\n                    \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B)) * Re A\n\ngoal (1 subgoal):\n 1. Re (A * a2 / B) \\<le> Re (A * a1 / B)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < Re A;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D - dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re ((A - D - cor dsc) * A / (2 * (B * cnj B)))\n                      \\<le> Re ((A - D + cor dsc) * A / (2 * (B * cnj B)))", "apply (subst Re_divide_real, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < Re A;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D - dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re ((A - D - cor dsc) * A) / Re (2 * (B * cnj B))\n                      \\<le> Re ((A - D + cor dsc) * A / (2 * (B * cnj B)))", "apply (subst Re_divide_real, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < Re A;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D - dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re ((A - D - cor dsc) * A) / Re (2 * (B * cnj B))\n                      \\<le> Re ((A - D + cor dsc) * A) /\n                            Re (2 * (B * cnj B))", "apply (subst Re_mult_real, simp)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < Re A;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D - dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re (A - D - cor dsc) * Re A / (Re 2 * Re (B * cnj B))\n                      \\<le> Re (A - D + cor dsc) * Re A /\n                            (Re 2 * Re (B * cnj B))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Re (A * a2 / B) \\<le> Re (A * a1 / B)\n\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  Re (A * a2 / B) \\<le> Re (A * a1 / B)\n\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have \"Re (A*a2/B) \\<ge> -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "from \\<open>Re A * Re D \\<le> Re (B*cnj B)\\<close>"], ["proof (chain)\npicking this:\n  Re A * Re D \\<le> Re (B * cnj B)", "have \"Re (A\\<^sup>2) \\<le> Re (B*cnj B) + Re ((A - D)*A)\""], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2) \\<le> Re (B * cnj B) + Re ((A - D) * A)", "using \\<open>Re A > 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n  0 < Re A\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2) \\<le> Re (B * cnj B) + Re ((A - D) * A)", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  Re (A\\<^sup>2) \\<le> Re (B * cnj B) + Re ((A - D) * A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "have \"1 \\<le> Re (B*cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A", "using \\<open>Re A > 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  0 < Re A\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A", "using divide_right_mono[OF \\<open>Re (A\\<^sup>2) \\<le> Re (B*cnj B) + Re ((A - D)*A)\\<close>, of \"Re (A\\<^sup>2)\"]"], ["proof (prove)\nusing this:\n  0 < Re A\n  is_real A\n  is_real D\n  0 \\<le> Re (A\\<^sup>2) \\<Longrightarrow>\n  Re (A\\<^sup>2) / Re (A\\<^sup>2)\n  \\<le> (Re (B * cnj B) + Re ((A - D) * A)) / Re (A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A", "by (simp add: power2_eq_square add_divide_distrib)"], ["proof (state)\nthis:\n  1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "have \"4 * Re(B*cnj B) \\<le> 4 * (Re (B*cnj B))\\<^sup>2 / Re (A\\<^sup>2)  + 2*Re (A - D) / Re A * 2 * Re(B*cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * Re (B * cnj B)\n    \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) +\n          2 * Re (A - D) / Re A * 2 * Re (B * cnj B)", "using mult_right_mono[OF \\<open>1 \\<le> Re (B*cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A\\<close>, of \"4 * Re (B*cnj B)\"]"], ["proof (prove)\nusing this:\n  0 \\<le> 4 * Re (B * cnj B) \\<Longrightarrow>\n  1 * (4 * Re (B * cnj B))\n  \\<le> (Re (B * cnj B) / Re (A\\<^sup>2) + Re (A - D) / Re A) *\n        (4 * Re (B * cnj B))\n\ngoal (1 subgoal):\n 1. 4 * Re (B * cnj B)\n    \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) +\n          2 * Re (A - D) / Re A * 2 * Re (B * cnj B)", "by (simp add: distrib_right) (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) +\n        2 * Re (A - D) / Re A * 2 * Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) +\n        2 * Re (A - D) / Re A * 2 * Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "have \"A \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "using \\<open>Re A > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < Re A\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "hence \"4 * (Re (B*cnj B))\\<^sup>2 / Re (A\\<^sup>2) = Re (4 * (B*cnj B)\\<^sup>2 / A\\<^sup>2)\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n    Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)", "using Re_divide_real[of \"A\\<^sup>2\" \"4 * (B*cnj B)\\<^sup>2\"] \\<open>Re A > 0\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n  \\<lbrakk>is_real (A\\<^sup>2); A\\<^sup>2 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2) =\n                    Re (4 * (B * cnj B)\\<^sup>2) / Re (A\\<^sup>2)\n  0 < Re A\n  is_real A\n\ngoal (1 subgoal):\n 1. 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n    Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "have \"2*Re (A - D) / Re A * 2 * Re(B*cnj B) = Re (2 * (A - D) / A * 2 * B * cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * Re (A - D) / Re A * 2 * Re (B * cnj B) =\n    Re (2 * (A - D) / A * 2 * B * cnj B)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 * Re (A - D) / Re A * 2 * Re (B * cnj B) =\n    Re (2 * (A - D) / A * 2 * B * cnj B)", "using Re_divide_real[of \"A\" \"(4 * A - 4 * D) * B * cnj B\"]"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  A \\<noteq> 0\n  \\<lbrakk>is_real A; A \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re ((4 * A - 4 * D) * B * cnj B / A) =\n                    Re ((4 * A - 4 * D) * B * cnj B) / Re A\n\ngoal (1 subgoal):\n 1. 2 * Re (A - D) / Re A * 2 * Re (B * cnj B) =\n    Re (2 * (A - D) / A * 2 * B * cnj B)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 * Re (A - D) / Re A * 2 * Re (B * cnj B) =\n  Re (2 * (A - D) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "ultimately"], ["proof (chain)\npicking this:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) +\n        2 * Re (A - D) / Re A * 2 * Re (B * cnj B)\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n  2 * Re (A - D) / Re A * 2 * Re (B * cnj B) =\n  Re (2 * (A - D) / A * 2 * B * cnj B)", "have \"Re ((D - A)\\<^sup>2 + 4 * B*cnj B) \\<le> Re((A - D)\\<^sup>2 + 4 * (B*cnj B)\\<^sup>2 / A\\<^sup>2  + 2*(A - D) / A * 2 * B*cnj B)\""], ["proof (prove)\nusing this:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) +\n        2 * Re (A - D) / Re A * 2 * Re (B * cnj B)\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n  2 * Re (A - D) / Re A * 2 * Re (B * cnj B) =\n  Re (2 * (A - D) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n    \\<le> Re ((A - D)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 +\n              2 * (A - D) / A * 2 * B * cnj B)", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((A - D)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 +\n            2 * (A - D) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "hence \"Re ((D - A)\\<^sup>2 + 4 * B*cnj B) \\<le> Re(((A - D) +  2 * B*cnj B / A)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((A - D)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 +\n            2 * (A - D) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n    \\<le> Re ((A - D + 2 * B * cnj B / A)\\<^sup>2)", "using \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((A - D)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 +\n            2 * (A - D) / A * 2 * B * cnj B)\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n    \\<le> Re ((A - D + 2 * B * cnj B / A)\\<^sup>2)", "by (subst power2_sum) (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((A - D + 2 * B * cnj B / A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "hence \"dsc \\<le> sqrt (Re(((A - D) +  2 * B*cnj B / A)\\<^sup>2))\""], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((A - D + 2 * B * cnj B / A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dsc \\<le> sqrt (Re ((A - D + 2 * B * cnj B / A)\\<^sup>2))", "using \\<open>dsc = sqrt(Re ((D-A)\\<^sup>2 + 4*(B*cnj B)))\\<close>"], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((A - D + 2 * B * cnj B / A)\\<^sup>2)\n  dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n\ngoal (1 subgoal):\n 1. dsc \\<le> sqrt (Re ((A - D + 2 * B * cnj B / A)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  dsc \\<le> sqrt (Re ((A - D + 2 * B * cnj B / A)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  dsc \\<le> sqrt (Re ((A - D + 2 * B * cnj B / A)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "have \"Re(((A - D) +  2 * B*cnj B / A)\\<^sup>2) = (Re((A - D) +  2 * B*cnj B / A))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((A - D + 2 * B * cnj B / A)\\<^sup>2) =\n    (Re (A - D + 2 * B * cnj B / A))\\<^sup>2", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> div_reals"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  \\<lbrakk>is_real ?a; is_real ?b\\<rbrakk>\n  \\<Longrightarrow> is_real (?a / ?b)\n\ngoal (1 subgoal):\n 1. Re ((A - D + 2 * B * cnj B / A)\\<^sup>2) =\n    (Re (A - D + 2 * B * cnj B / A))\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  Re ((A - D + 2 * B * cnj B / A)\\<^sup>2) =\n  (Re (A - D + 2 * B * cnj B / A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "ultimately"], ["proof (chain)\npicking this:\n  dsc \\<le> sqrt (Re ((A - D + 2 * B * cnj B / A)\\<^sup>2))\n  Re ((A - D + 2 * B * cnj B / A)\\<^sup>2) =\n  (Re (A - D + 2 * B * cnj B / A))\\<^sup>2", "have \"dsc \\<le> \\<bar>Re (A - D + 2 * B * cnj B / A)\\<bar>\""], ["proof (prove)\nusing this:\n  dsc \\<le> sqrt (Re ((A - D + 2 * B * cnj B / A)\\<^sup>2))\n  Re ((A - D + 2 * B * cnj B / A)\\<^sup>2) =\n  (Re (A - D + 2 * B * cnj B / A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. dsc \\<le> \\<bar>Re (A - D + 2 * B * cnj B / A)\\<bar>", "by simp"], ["proof (state)\nthis:\n  dsc \\<le> \\<bar>Re (A - D + 2 * B * cnj B / A)\\<bar>\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  dsc \\<le> \\<bar>Re (A - D + 2 * B * cnj B / A)\\<bar>\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "have \"Re (A - D + 2 * B * cnj B / A) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "have *: \"Re (A\\<^sup>2 + B*cnj B) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A\\<^sup>2 + B * cnj B)", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A\\<^sup>2 + B * cnj B)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 \\<le> Re (A\\<^sup>2 + B * cnj B)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "also"], ["proof (state)\nthis:\n  0 \\<le> Re (A\\<^sup>2 + B * cnj B)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "have \"Re (A\\<^sup>2 + 2*B*cnj B - A*D) \\<ge> Re (A\\<^sup>2 + B*cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "using \\<open>Re A * Re D \\<le> Re (B*cnj B)\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "by simp"], ["proof (state)\nthis:\n  Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "have \"Re (A\\<^sup>2 + 2*B*cnj B - A*D) \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "using divide_right_mono[OF \\<open>Re (A\\<^sup>2 + 2*B*cnj B - A*D) \\<ge> 0\\<close>, of \"Re A\"] \\<open>Re A > 0\\<close> \\<open>is_real A\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re A \\<Longrightarrow>\n  0 / Re A \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D) / Re A\n  0 < Re A\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A - D + 2 * B * cnj B / A)", "by (simp add: add_divide_distrib diff_divide_distrib) (subst Re_divide_real, auto simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  0 \\<le> Re (A - D + 2 * B * cnj B / A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> Re (A - D + 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "ultimately"], ["proof (chain)\npicking this:\n  dsc \\<le> \\<bar>Re (A - D + 2 * B * cnj B / A)\\<bar>\n  0 \\<le> Re (A - D + 2 * B * cnj B / A)", "have \"dsc \\<le> Re (A - D + 2 * B * cnj B / A)\""], ["proof (prove)\nusing this:\n  dsc \\<le> \\<bar>Re (A - D + 2 * B * cnj B / A)\\<bar>\n  0 \\<le> Re (A - D + 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. dsc \\<le> Re (A - D + 2 * B * cnj B / A)", "by simp"], ["proof (state)\nthis:\n  dsc \\<le> Re (A - D + 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "hence \"- Re (2 * (B * cnj B) / A) \\<le> Re ((A - D - cor dsc))\""], ["proof (prove)\nusing this:\n  dsc \\<le> Re (A - D + 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. - Re (2 * (B * cnj B) / A) \\<le> Re (A - D - cor dsc)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  - Re (2 * (B * cnj B) / A) \\<le> Re (A - D - cor dsc)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "hence *: \"- (Re (2 * (B * cnj B)) / Re A) \\<le> Re (A - D - cor dsc)\""], ["proof (prove)\nusing this:\n  - Re (2 * (B * cnj B) / A) \\<le> Re (A - D - cor dsc)\n\ngoal (1 subgoal):\n 1. - (Re (2 * (B * cnj B)) / Re A) \\<le> Re (A - D - cor dsc)", "using \\<open>is_real A\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  - Re (2 * (B * cnj B) / A) \\<le> Re (A - D - cor dsc)\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - (Re (2 * (B * cnj B)) / Re A) \\<le> Re (A - D - cor dsc)", "by (subst (asm) Re_divide_real, auto)"], ["proof (state)\nthis:\n  - (Re (2 * (B * cnj B)) / Re A) \\<le> Re (A - D - cor dsc)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "from divide_right_mono[OF this, of \"Re (2 * B * cnj B)\"]"], ["proof (chain)\npicking this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n  \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)", "have \"- 1 / Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)\""], ["proof (prove)\nusing this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n  \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 / Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)", "using \\<open>Re A > 0\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>A \\<noteq> 0\\<close> \\<open>0 < Re (2 * (B * cnj B))\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n  \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)\n  0 < Re A\n  B \\<noteq> 0\n  A \\<noteq> 0\n  0 < Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. - 1 / Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)", "using \\<open>(Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B) = 1 / Re A\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n  \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)\n  0 < Re A\n  B \\<noteq> 0\n  A \\<noteq> 0\n  0 < Re (2 * (B * cnj B))\n  Re (2 * (B * cnj B)) / Re A / Re (2 * B * cnj B) = 1 / Re A\n\ngoal (1 subgoal):\n 1. - 1 / Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)", "by simp"], ["proof (state)\nthis:\n  - 1 / Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "from mult_right_mono[OF this, of \"Re A\"]"], ["proof (chain)\npicking this:\n  0 \\<le> Re A \\<Longrightarrow>\n  - 1 / Re A * Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B) * Re A", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> Re A \\<Longrightarrow>\n  - 1 / Re A * Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B) * Re A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>Re A > 0\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re A \\<Longrightarrow>\n  - 1 / Re A * Re A \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B) * Re A\n  is_real A\n  is_real D\n  B \\<noteq> 0\n  0 < Re A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a2 / B)", "apply (subst **)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> Re A \\<Longrightarrow>\n             - 1 / Re A * Re A\n             \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B) * Re A;\n     is_real A; is_real D; B \\<noteq> 0; 0 < Re A; A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - 1\n                      \\<le> Re ((A - D - cor dsc) / (2 * (B * cnj B)) * A)", "apply (subst Re_mult_real, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> Re A \\<Longrightarrow>\n             - 1 / Re A * Re A\n             \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B) * Re A;\n     is_real A; is_real D; B \\<noteq> 0; 0 < Re A; A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - 1\n                      \\<le> Re ((A - D - cor dsc) / (2 * (B * cnj B))) *\n                            Re A", "apply (subst Re_divide_real, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> Re A \\<Longrightarrow>\n             - 1 / Re A * Re A\n             \\<le> Re (A - D - cor dsc) / Re (2 * B * cnj B) * Re A;\n     is_real A; is_real D; B \\<noteq> 0; 0 < Re A; A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - 1\n                      \\<le> Re (A - D - cor dsc) / Re (2 * (B * cnj B)) *\n                            Re A", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a2 / B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a2 / B)\n\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "ultimately"], ["proof (chain)\npicking this:\n  Re (A * a2 / B) \\<le> Re (A * a1 / B)\n  - 1 \\<le> Re (A * a2 / B)", "show ?thesis"], ["proof (prove)\nusing this:\n  Re (A * a2 / B) \\<le> Re (A * a1 / B)\n  - 1 \\<le> Re (A * a2 / B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "by simp"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < Re A\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "proof (cases \"Re A < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "case True"], ["proof (state)\nthis:\n  Re A < 0\n\ngoal (2 subgoals):\n 1. Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "hence \"Re (A*a1/B) \\<le> Re (A*a2/B)\""], ["proof (prove)\nusing this:\n  Re A < 0\n\ngoal (1 subgoal):\n 1. Re (A * a1 / B) \\<le> Re (A * a2 / B)", "using * ** \\<open>Re (2 * (B * cnj B)) > 0\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close> xxx"], ["proof (prove)\nusing this:\n  Re A < 0\n  A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A\n  A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A\n  0 < Re (2 * (B * cnj B))\n  B \\<noteq> 0\n  is_real A\n  is_real D\n  Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n  \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. Re (A * a1 / B) \\<le> Re (A * a2 / B)", "using mult_right_mono_neg[of ?rhs ?lhs \"Re A\"]"], ["proof (prove)\nusing this:\n  Re A < 0\n  A * a1 / B = (A - D + cor dsc) / (2 * (B * cnj B)) * A\n  A * a2 / B = (A - D - cor dsc) / (2 * (B * cnj B)) * A\n  0 < Re (2 * (B * cnj B))\n  B \\<noteq> 0\n  is_real A\n  is_real D\n  Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n  \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B))\n  \\<lbrakk>Re (A - D - cor dsc) / Re (2 * (B * cnj B))\n           \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B));\n   Re A \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> Re (A - D + cor dsc) / Re (2 * (B * cnj B)) * Re A\n                    \\<le> Re (A - D - cor dsc) / Re (2 * (B * cnj B)) * Re A\n\ngoal (1 subgoal):\n 1. Re (A * a1 / B) \\<le> Re (A * a2 / B)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A < 0;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D + dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D - dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re ((A - D + cor dsc) * A / (2 * (B * cnj B)))\n                      \\<le> Re ((A - D - cor dsc) * A / (2 * (B * cnj B)))", "apply (subst Re_divide_real, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A < 0;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D + dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D - dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re ((A - D + cor dsc) * A) / Re (2 * (B * cnj B))\n                      \\<le> Re ((A - D - cor dsc) * A / (2 * (B * cnj B)))", "apply (subst Re_divide_real, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A < 0;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D + dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D - dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re ((A - D + cor dsc) * A) / Re (2 * (B * cnj B))\n                      \\<le> Re ((A - D - cor dsc) * A) /\n                            Re (2 * (B * cnj B))", "apply (subst Re_mult_real, simp)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A < 0;\n     A * a1 / B = (A - D + cor dsc) * A / (2 * (B * cnj B));\n     A * a2 / B = (A - D - cor dsc) * A / (2 * (B * cnj B));\n     0 < 2 * (Re B * Re B) + 2 * (Im B * Im B); B \\<noteq> 0; is_real A;\n     is_real D;\n     (Re A - Re D - dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D + dsc) / (2 * (Re B * Re B) + 2 * (Im B * Im B));\n     (Re A - Re D + dsc) * Re A / (2 * (Re B * Re B) + 2 * (Im B * Im B))\n     \\<le> (Re A - Re D - dsc) * Re A /\n           (2 * (Re B * Re B) + 2 * (Im B * Im B))\\<rbrakk>\n    \\<Longrightarrow> Re (A - D + cor dsc) * Re A / (Re 2 * Re (B * cnj B))\n                      \\<le> Re (A - D - cor dsc) * Re A /\n                            (Re 2 * Re (B * cnj B))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Re (A * a1 / B) \\<le> Re (A * a2 / B)\n\ngoal (2 subgoals):\n 1. Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "moreover"], ["proof (state)\nthis:\n  Re (A * a1 / B) \\<le> Re (A * a2 / B)\n\ngoal (2 subgoals):\n 1. Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "have \"Re (A*a1/B) \\<ge> -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "from \\<open>Re A * Re D \\<le> Re (B*cnj B)\\<close>"], ["proof (chain)\npicking this:\n  Re A * Re D \\<le> Re (B * cnj B)", "have \"Re (A\\<^sup>2) \\<le> Re (B*cnj B) - Re ((D - A)*A)\""], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2) \\<le> Re (B * cnj B) - Re ((D - A) * A)", "using \\<open>Re A < 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n  Re A < 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2) \\<le> Re (B * cnj B) - Re ((D - A) * A)", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  Re (A\\<^sup>2) \\<le> Re (B * cnj B) - Re ((D - A) * A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "hence \"1 \\<le> Re (B*cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A\""], ["proof (prove)\nusing this:\n  Re (A\\<^sup>2) \\<le> Re (B * cnj B) - Re ((D - A) * A)\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A", "using \\<open>Re A < 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re (A\\<^sup>2) \\<le> Re (B * cnj B) - Re ((D - A) * A)\n  Re A < 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A", "using divide_right_mono[OF \\<open>Re (A\\<^sup>2) \\<le> Re (B*cnj B) - Re ((D - A)*A)\\<close>, of \"Re (A\\<^sup>2)\"]"], ["proof (prove)\nusing this:\n  Re (A\\<^sup>2) \\<le> Re (B * cnj B) - Re ((D - A) * A)\n  Re A < 0\n  is_real A\n  is_real D\n  0 \\<le> Re (A\\<^sup>2) \\<Longrightarrow>\n  Re (A\\<^sup>2) / Re (A\\<^sup>2)\n  \\<le> (Re (B * cnj B) - Re ((D - A) * A)) / Re (A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A", "by (simp add: power2_eq_square diff_divide_distrib)"], ["proof (state)\nthis:\n  1 \\<le> Re (B * cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "have \"4 * Re(B*cnj B) \\<le> 4 * (Re (B*cnj B))\\<^sup>2 / Re (A\\<^sup>2)  - 2*Re (D - A) / Re A * 2 * Re(B*cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * Re (B * cnj B)\n    \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) -\n          2 * Re (D - A) / Re A * 2 * Re (B * cnj B)", "using mult_right_mono[OF \\<open>1 \\<le> Re (B*cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A\\<close>, of \"4 * Re (B*cnj B)\"]"], ["proof (prove)\nusing this:\n  0 \\<le> 4 * Re (B * cnj B) \\<Longrightarrow>\n  1 * (4 * Re (B * cnj B))\n  \\<le> (Re (B * cnj B) / Re (A\\<^sup>2) - Re (D - A) / Re A) *\n        (4 * Re (B * cnj B))\n\ngoal (1 subgoal):\n 1. 4 * Re (B * cnj B)\n    \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) -\n          2 * Re (D - A) / Re A * 2 * Re (B * cnj B)", "by (simp add: left_diff_distrib) (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) -\n        2 * Re (D - A) / Re A * 2 * Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "moreover"], ["proof (state)\nthis:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) -\n        2 * Re (D - A) / Re A * 2 * Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "have \"A \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "using \\<open>Re A < 0\\<close>"], ["proof (prove)\nusing this:\n  Re A < 0\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "hence \"4 * (Re (B*cnj B))\\<^sup>2 / Re (A\\<^sup>2) = Re (4 * (B*cnj B)\\<^sup>2 / A\\<^sup>2)\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n    Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)", "using Re_divide_real[of \"A\\<^sup>2\" \"4 * (B*cnj B)\\<^sup>2\"] \\<open>Re A < 0\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n  \\<lbrakk>is_real (A\\<^sup>2); A\\<^sup>2 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2) =\n                    Re (4 * (B * cnj B)\\<^sup>2) / Re (A\\<^sup>2)\n  Re A < 0\n  is_real A\n\ngoal (1 subgoal):\n 1. 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n    Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "moreover"], ["proof (state)\nthis:\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "have \"2*Re (D - A) / Re A * 2 * Re(B*cnj B) = Re (2 * (D - A) / A * 2 * B * cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * Re (D - A) / Re A * 2 * Re (B * cnj B) =\n    Re (2 * (D - A) / A * 2 * B * cnj B)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 * Re (D - A) / Re A * 2 * Re (B * cnj B) =\n    Re (2 * (D - A) / A * 2 * B * cnj B)", "using Re_divide_real[of \"A\" \"(4 * D - 4 * A) * B * cnj B\"]"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  A \\<noteq> 0\n  \\<lbrakk>is_real A; A \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re ((4 * D - 4 * A) * B * cnj B / A) =\n                    Re ((4 * D - 4 * A) * B * cnj B) / Re A\n\ngoal (1 subgoal):\n 1. 2 * Re (D - A) / Re A * 2 * Re (B * cnj B) =\n    Re (2 * (D - A) / A * 2 * B * cnj B)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 * Re (D - A) / Re A * 2 * Re (B * cnj B) =\n  Re (2 * (D - A) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "ultimately"], ["proof (chain)\npicking this:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) -\n        2 * Re (D - A) / Re A * 2 * Re (B * cnj B)\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n  2 * Re (D - A) / Re A * 2 * Re (B * cnj B) =\n  Re (2 * (D - A) / A * 2 * B * cnj B)", "have \"Re ((D - A)\\<^sup>2 + 4 * B*cnj B) \\<le> Re((D - A)\\<^sup>2 + 4 * (B*cnj B)\\<^sup>2 / A\\<^sup>2  - 2*(D - A) / A * 2 * B*cnj B)\""], ["proof (prove)\nusing this:\n  4 * Re (B * cnj B)\n  \\<le> 4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) -\n        2 * Re (D - A) / Re A * 2 * Re (B * cnj B)\n  4 * (Re (B * cnj B))\\<^sup>2 / Re (A\\<^sup>2) =\n  Re (4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2)\n  2 * Re (D - A) / Re A * 2 * Re (B * cnj B) =\n  Re (2 * (D - A) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n    \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 -\n              2 * (D - A) / A * 2 * B * cnj B)", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 -\n            2 * (D - A) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "hence \"Re ((D - A)\\<^sup>2 + 4 * B*cnj B) \\<le> Re(((D - A) -  2 * B*cnj B / A)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 -\n            2 * (D - A) / A * 2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n    \\<le> Re ((D - A - 2 * B * cnj B / A)\\<^sup>2)", "using \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)\\<^sup>2 / A\\<^sup>2 -\n            2 * (D - A) / A * 2 * B * cnj B)\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n    \\<le> Re ((D - A - 2 * B * cnj B / A)\\<^sup>2)", "by (subst power2_diff) (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((D - A - 2 * B * cnj B / A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "hence \"dsc \\<le> sqrt (Re(((D - A) -  2 * B*cnj B / A)\\<^sup>2))\""], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((D - A - 2 * B * cnj B / A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dsc \\<le> sqrt (Re ((D - A - 2 * B * cnj B / A)\\<^sup>2))", "using \\<open>dsc = sqrt(Re ((D-A)\\<^sup>2 + 4*(B*cnj B)))\\<close>"], ["proof (prove)\nusing this:\n  Re ((D - A)\\<^sup>2 + 4 * B * cnj B)\n  \\<le> Re ((D - A - 2 * B * cnj B / A)\\<^sup>2)\n  dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n\ngoal (1 subgoal):\n 1. dsc \\<le> sqrt (Re ((D - A - 2 * B * cnj B / A)\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  dsc \\<le> sqrt (Re ((D - A - 2 * B * cnj B / A)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "moreover"], ["proof (state)\nthis:\n  dsc \\<le> sqrt (Re ((D - A - 2 * B * cnj B / A)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "have \"Re(((D - A) -  2 * B*cnj B / A)\\<^sup>2) = (Re((D - A) -  2 * B*cnj B / A))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((D - A - 2 * B * cnj B / A)\\<^sup>2) =\n    (Re (D - A - 2 * B * cnj B / A))\\<^sup>2", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> div_reals"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  \\<lbrakk>is_real ?a; is_real ?b\\<rbrakk>\n  \\<Longrightarrow> is_real (?a / ?b)\n\ngoal (1 subgoal):\n 1. Re ((D - A - 2 * B * cnj B / A)\\<^sup>2) =\n    (Re (D - A - 2 * B * cnj B / A))\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  Re ((D - A - 2 * B * cnj B / A)\\<^sup>2) =\n  (Re (D - A - 2 * B * cnj B / A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "ultimately"], ["proof (chain)\npicking this:\n  dsc \\<le> sqrt (Re ((D - A - 2 * B * cnj B / A)\\<^sup>2))\n  Re ((D - A - 2 * B * cnj B / A)\\<^sup>2) =\n  (Re (D - A - 2 * B * cnj B / A))\\<^sup>2", "have \"dsc \\<le> \\<bar>Re (D - A - 2 * B * cnj B / A)\\<bar>\""], ["proof (prove)\nusing this:\n  dsc \\<le> sqrt (Re ((D - A - 2 * B * cnj B / A)\\<^sup>2))\n  Re ((D - A - 2 * B * cnj B / A)\\<^sup>2) =\n  (Re (D - A - 2 * B * cnj B / A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. dsc \\<le> \\<bar>Re (D - A - 2 * B * cnj B / A)\\<bar>", "by simp"], ["proof (state)\nthis:\n  dsc \\<le> \\<bar>Re (D - A - 2 * B * cnj B / A)\\<bar>\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "moreover"], ["proof (state)\nthis:\n  dsc \\<le> \\<bar>Re (D - A - 2 * B * cnj B / A)\\<bar>\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "have \"Re (D - A - 2 * B * cnj B / A) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "have \"Re (A\\<^sup>2 + B*cnj B) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A\\<^sup>2 + B * cnj B)", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A\\<^sup>2 + B * cnj B)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 \\<le> Re (A\\<^sup>2 + B * cnj B)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "also"], ["proof (state)\nthis:\n  0 \\<le> Re (A\\<^sup>2 + B * cnj B)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "have \"Re (A\\<^sup>2 + 2*B*cnj B - A*D) \\<ge> Re (A\\<^sup>2 + B*cnj B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "using \\<open>Re A * Re D \\<le> Re (B*cnj B)\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re A * Re D \\<le> Re (B * cnj B)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "by simp"], ["proof (state)\nthis:\n  Re (A\\<^sup>2 + B * cnj B) \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "have \"Re (A\\<^sup>2 + 2*B*cnj B - A*D) \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> Re (A\\<^sup>2 + 2 * B * cnj B - A * D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "using divide_right_mono_neg[OF \\<open>Re (A\\<^sup>2 + 2*B*cnj B - A*D) \\<ge> 0\\<close>, of \"Re A\"] \\<open>Re A < 0\\<close> \\<open>is_real A\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re A \\<le> 0 \\<Longrightarrow>\n  Re (A\\<^sup>2 + 2 * B * cnj B - A * D) / Re A \\<le> 0 / Re A\n  Re A < 0\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (D - A - 2 * B * cnj B / A)", "by (simp add: add_divide_distrib diff_divide_distrib) (subst Re_divide_real, auto simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  0 \\<le> Re (D - A - 2 * B * cnj B / A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> Re (D - A - 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "ultimately"], ["proof (chain)\npicking this:\n  dsc \\<le> \\<bar>Re (D - A - 2 * B * cnj B / A)\\<bar>\n  0 \\<le> Re (D - A - 2 * B * cnj B / A)", "have \"dsc \\<le> Re (D - A - 2 * B * cnj B / A)\""], ["proof (prove)\nusing this:\n  dsc \\<le> \\<bar>Re (D - A - 2 * B * cnj B / A)\\<bar>\n  0 \\<le> Re (D - A - 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. dsc \\<le> Re (D - A - 2 * B * cnj B / A)", "by simp"], ["proof (state)\nthis:\n  dsc \\<le> Re (D - A - 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "hence \"- Re (2 * (B * cnj B) / A) \\<ge> Re ((A - D + cor dsc))\""], ["proof (prove)\nusing this:\n  dsc \\<le> Re (D - A - 2 * B * cnj B / A)\n\ngoal (1 subgoal):\n 1. Re (A - D + cor dsc) \\<le> - Re (2 * (B * cnj B) / A)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  Re (A - D + cor dsc) \\<le> - Re (2 * (B * cnj B) / A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "hence \"- (Re (2 * (B * cnj B)) / Re A) \\<ge> Re (A - D + cor dsc)\""], ["proof (prove)\nusing this:\n  Re (A - D + cor dsc) \\<le> - Re (2 * (B * cnj B) / A)\n\ngoal (1 subgoal):\n 1. Re (A - D + cor dsc) \\<le> - (Re (2 * (B * cnj B)) / Re A)", "using \\<open>is_real A\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re (A - D + cor dsc) \\<le> - Re (2 * (B * cnj B) / A)\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re (A - D + cor dsc) \\<le> - (Re (2 * (B * cnj B)) / Re A)", "by (subst (asm) Re_divide_real, auto)"], ["proof (state)\nthis:\n  Re (A - D + cor dsc) \\<le> - (Re (2 * (B * cnj B)) / Re A)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "from divide_right_mono[OF this, of \"Re (2 * B * cnj B)\"]"], ["proof (chain)\npicking this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  Re (A - D + cor dsc) / Re (2 * B * cnj B)\n  \\<le> - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)", "have \"- 1 / Re A \\<ge> Re (A - D + cor dsc) / Re (2 * B * cnj B)\""], ["proof (prove)\nusing this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  Re (A - D + cor dsc) / Re (2 * B * cnj B)\n  \\<le> - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n\ngoal (1 subgoal):\n 1. Re (A - D + cor dsc) / Re (2 * B * cnj B) \\<le> - 1 / Re A", "using \\<open>Re A < 0\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>A \\<noteq> 0\\<close> \\<open>0 < Re (2 * (B * cnj B))\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  Re (A - D + cor dsc) / Re (2 * B * cnj B)\n  \\<le> - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n  Re A < 0\n  B \\<noteq> 0\n  A \\<noteq> 0\n  0 < Re (2 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. Re (A - D + cor dsc) / Re (2 * B * cnj B) \\<le> - 1 / Re A", "using \\<open>(Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B) = 1 / Re A\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re (2 * B * cnj B) \\<Longrightarrow>\n  Re (A - D + cor dsc) / Re (2 * B * cnj B)\n  \\<le> - (Re (2 * (B * cnj B)) / Re A) / Re (2 * B * cnj B)\n  Re A < 0\n  B \\<noteq> 0\n  A \\<noteq> 0\n  0 < Re (2 * (B * cnj B))\n  Re (2 * (B * cnj B)) / Re A / Re (2 * B * cnj B) = 1 / Re A\n\ngoal (1 subgoal):\n 1. Re (A - D + cor dsc) / Re (2 * B * cnj B) \\<le> - 1 / Re A", "by simp"], ["proof (state)\nthis:\n  Re (A - D + cor dsc) / Re (2 * B * cnj B) \\<le> - 1 / Re A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "from mult_right_mono_neg[OF this, of \"Re A\"]"], ["proof (chain)\npicking this:\n  Re A \\<le> 0 \\<Longrightarrow>\n  - 1 / Re A * Re A \\<le> Re (A - D + cor dsc) / Re (2 * B * cnj B) * Re A", "show ?thesis"], ["proof (prove)\nusing this:\n  Re A \\<le> 0 \\<Longrightarrow>\n  - 1 / Re A * Re A \\<le> Re (A - D + cor dsc) / Re (2 * B * cnj B) * Re A\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>Re A < 0\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re A \\<le> 0 \\<Longrightarrow>\n  - 1 / Re A * Re A \\<le> Re (A - D + cor dsc) / Re (2 * B * cnj B) * Re A\n  is_real A\n  is_real D\n  B \\<noteq> 0\n  Re A < 0\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B)", "apply (subst *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A \\<le> 0 \\<Longrightarrow>\n             - 1 / Re A * Re A\n             \\<le> Re (A - D + cor dsc) / Re (2 * B * cnj B) * Re A;\n     is_real A; is_real D; B \\<noteq> 0; Re A < 0; A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - 1\n                      \\<le> Re ((A - D + cor dsc) / (2 * (B * cnj B)) * A)", "apply (subst Re_mult_real, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A \\<le> 0 \\<Longrightarrow>\n             - 1 / Re A * Re A\n             \\<le> Re (A - D + cor dsc) / Re (2 * B * cnj B) * Re A;\n     is_real A; is_real D; B \\<noteq> 0; Re A < 0; A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - 1\n                      \\<le> Re ((A - D + cor dsc) / (2 * (B * cnj B))) *\n                            Re A", "apply (subst Re_divide_real, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re A \\<le> 0 \\<Longrightarrow>\n             - 1 / Re A * Re A\n             \\<le> Re (A - D + cor dsc) / Re (2 * B * cnj B) * Re A;\n     is_real A; is_real D; B \\<noteq> 0; Re A < 0; A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - 1\n                      \\<le> Re (A - D + cor dsc) / Re (2 * (B * cnj B)) *\n                            Re A", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B)\n\ngoal (2 subgoals):\n 1. Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n 2. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "ultimately"], ["proof (chain)\npicking this:\n  Re (A * a1 / B) \\<le> Re (A * a2 / B)\n  - 1 \\<le> Re (A * a1 / B)", "show ?thesis"], ["proof (prove)\nusing this:\n  Re (A * a1 / B) \\<le> Re (A * a2 / B)\n  - 1 \\<le> Re (A * a1 / B)\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "by simp"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n\ngoal (1 subgoal):\n 1. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "case False"], ["proof (state)\nthis:\n  \\<not> Re A < 0\n\ngoal (1 subgoal):\n 1. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "hence \"A = 0\""], ["proof (prove)\nusing this:\n  \\<not> Re A < 0\n\ngoal (1 subgoal):\n 1. A = 0", "using \\<open>\\<not> Re A > 0\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  \\<not> Re A < 0\n  \\<not> 0 < Re A\n  is_real A\n\ngoal (1 subgoal):\n 1. A = 0", "using complex_eq_if_Re_eq"], ["proof (prove)\nusing this:\n  \\<not> Re A < 0\n  \\<not> 0 < Re A\n  is_real A\n  \\<lbrakk>is_real ?z1.0; is_real ?z2.0\\<rbrakk>\n  \\<Longrightarrow> (?z1.0 = ?z2.0) = (Re ?z1.0 = Re ?z2.0)\n\ngoal (1 subgoal):\n 1. A = 0", "by auto"], ["proof (state)\nthis:\n  A = 0\n\ngoal (1 subgoal):\n 1. \\<not> Re A < 0 \\<Longrightarrow>\n    - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = 0\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)", "by simp"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - 1 \\<le> Re (A * a1 / B) \\<and> - 1 \\<le> Re (A * a2 / B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chordal_circle_det_positive:\n  fixes x y :: real\n  assumes \"x * y < 0\"\n  shows \"x / (x - y) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x / (x - y)", "proof (cases \"x > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> 0 < x / (x - y)\n 2. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "case True"], ["proof (state)\nthis:\n  0 < x\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> 0 < x / (x - y)\n 2. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "hence \"y < 0\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. y < 0", "using \\<open>x * y < 0\\<close>"], ["proof (prove)\nusing this:\n  0 < x\n  x * y < 0\n\ngoal (1 subgoal):\n 1. y < 0", "by (smt mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  y < 0\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> 0 < x / (x - y)\n 2. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "have \"x - y > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x - y", "using \\<open>x > 0\\<close> \\<open>y < 0\\<close>"], ["proof (prove)\nusing this:\n  0 < x\n  y < 0\n\ngoal (1 subgoal):\n 1. 0 < x - y", "by auto"], ["proof (state)\nthis:\n  0 < x - y\n\ngoal (2 subgoals):\n 1. 0 < x \\<Longrightarrow> 0 < x / (x - y)\n 2. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < x - y\n\ngoal (1 subgoal):\n 1. 0 < x / (x - y)", "using \\<open>x > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < x - y\n  0 < x\n\ngoal (1 subgoal):\n 1. 0 < x / (x - y)", "by (metis zero_less_divide_iff)"], ["proof (state)\nthis:\n  0 < x / (x - y)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < x\n\ngoal (1 subgoal):\n 1. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "hence *: \"y > 0 \\<and> x < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < x\n\ngoal (1 subgoal):\n 1. 0 < y \\<and> x < 0", "using \\<open>x * y < 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 < x\n  x * y < 0\n\ngoal (1 subgoal):\n 1. 0 < y \\<and> x < 0", "using mult_nonpos_nonpos[of x y]"], ["proof (prove)\nusing this:\n  \\<not> 0 < x\n  x * y < 0\n  \\<lbrakk>x \\<le> 0; y \\<le> 0\\<rbrakk> \\<Longrightarrow> 0 \\<le> x * y\n\ngoal (1 subgoal):\n 1. 0 < y \\<and> x < 0", "by (cases \"x=0\") force+"], ["proof (state)\nthis:\n  0 < y \\<and> x < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "have \"x - y < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - y < 0", "using *"], ["proof (prove)\nusing this:\n  0 < y \\<and> x < 0\n\ngoal (1 subgoal):\n 1. x - y < 0", "by auto"], ["proof (state)\nthis:\n  x - y < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < x \\<Longrightarrow> 0 < x / (x - y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x - y < 0\n\ngoal (1 subgoal):\n 1. 0 < x / (x - y)", "using *"], ["proof (prove)\nusing this:\n  x - y < 0\n  0 < y \\<and> x < 0\n\ngoal (1 subgoal):\n 1. 0 < x / (x - y)", "by (metis zero_less_divide_iff)"], ["proof (state)\nthis:\n  0 < x / (x - y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chordal_circle1:\n  assumes \"is_real A\" and \"is_real D\" and \"Re (A * D) < 0\" and \"r = sqrt(Re ((4*A)/(A-D)))\"\n  shows \"mk_circline A 0 0 D = chordal_circle \\<infinity>\\<^sub>h r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_circline A 0 0 D = chordal_circle \\<infinity>\\<^sub>h r", "using assms"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * A / (A - D)))\n\ngoal (1 subgoal):\n 1. mk_circline A 0 0 D = chordal_circle \\<infinity>\\<^sub>h r", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "fix A D r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "assume *: \"is_real A\" \"is_real D\" \"Re (A * D) < 0\" \"r = sqrt (Re ((4*A)/(A-D)))\""], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * A / (A - D)))\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "hence \"A \\<noteq> 0 \\<or> D \\<noteq> 0\""], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * A / (A - D)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<or> D \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "hence \"(A, 0, 0, D) \\<in> hermitean_nonzero\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (A, 0, 0, D) \\<in> hermitean_nonzero", "using eq_cnj_iff_real[of A] eq_cnj_iff_real[of D] *"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n  (cnj A = A) = is_real A\n  (cnj D = D) = is_real D\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * A / (A - D)))\n\ngoal (1 subgoal):\n 1. (A, 0, 0, D) \\<in> hermitean_nonzero", "unfolding hermitean_def"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n  (cnj A = A) = is_real A\n  (cnj D = D) = is_real D\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * A / (A - D)))\n\ngoal (1 subgoal):\n 1. (A, 0, 0, D) \\<in> {H. mat_adj H = H \\<and> H \\<noteq> mat_zero}", "by (simp add: mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "have \"(- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero", "by (simp add: hermitean_def mat_adj_def mat_cnj_def power2_eq_square)"], ["proof (state)\nthis:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "have \"A \\<noteq> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> D", "using \\<open>Re (A * D) < 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re (A * D) < 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. A \\<noteq> D", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "have \"Re ((4*A)/(A-D)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * A / (A - D))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * A / (A - D))", "have \"Re A / Re (A - D) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re A / Re (A - D)", "using \\<open>Re (A * D) < 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re (A * D) < 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re A / Re (A - D)", "using chordal_circle_det_positive[of \"Re A\" \"Re D\"]"], ["proof (prove)\nusing this:\n  Re (A * D) < 0\n  is_real A\n  is_real D\n  Re A * Re D < 0 \\<Longrightarrow> 0 < Re A / (Re A - Re D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re A / Re (A - D)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> Re A / Re (A - D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * A / (A - D))", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> Re A / Re (A - D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * A / (A - D))", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re A / Re (A - D)\n  is_real A\n  is_real D\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * A / (A - D))", "by (subst Re_divide_real, auto)"], ["proof (state)\nthis:\n  0 \\<le> Re (4 * A / (A - D))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> Re (4 * A / (A - D))\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> Re (4 * A / (A - D))\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "have \"- (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n    cor (Re (4 / (D - A))) * A", "using \\<open>Re ((4*A)/(A-D)) \\<ge> 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re (4 * A / (A - D))\n  is_real A\n  is_real D\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n    cor (Re (4 / (D - A))) * A", "by (subst cor_squared, subst real_sqrt_power[symmetric], simp) (simp add: Re_divide_real Re_mult_real minus_divide_right)"], ["proof (state)\nthis:\n  - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * A\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * A\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "have \"4 * (A - D) - 4 * A  = 4 * -D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * (A - D) - 4 * A = 4 * - D", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 * (A - D) - 4 * A = 4 * - D\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "hence \"4 - 4 * A / (A - D) = -4 * D / (A - D)\""], ["proof (prove)\nusing this:\n  4 * (A - D) - 4 * A = 4 * - D\n\ngoal (1 subgoal):\n 1. 4 - 4 * A / (A - D) = - 4 * D / (A - D)", "using \\<open>A \\<noteq> D\\<close>"], ["proof (prove)\nusing this:\n  4 * (A - D) - 4 * A = 4 * - D\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. 4 - 4 * A / (A - D) = - 4 * D / (A - D)", "by (smt ab_semigroup_mult_class.mult_ac(1) diff_divide_eq_iff eq_iff_diff_eq_0 mult_minus1 mult_minus1_right mult_numeral_1_right right_diff_distrib_numeral times_divide_eq_right)"], ["proof (state)\nthis:\n  4 - 4 * A / (A - D) = - 4 * D / (A - D)\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "hence \"4 - 4 * A / (A - D) = 4 * D / (D - A)\""], ["proof (prove)\nusing this:\n  4 - 4 * A / (A - D) = - 4 * D / (A - D)\n\ngoal (1 subgoal):\n 1. 4 - 4 * A / (A - D) = 4 * D / (D - A)", "by (metis (hide_lams, no_types) minus_diff_eq minus_divide_left minus_divide_right minus_mult_left)"], ["proof (state)\nthis:\n  4 - 4 * A / (A - D) = 4 * D / (D - A)\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "hence **: \"4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * D\""], ["proof (prove)\nusing this:\n  4 - 4 * A / (A - D) = 4 * D / (D - A)\n\ngoal (1 subgoal):\n 1. 4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n    cor (Re (4 / (D - A))) * D", "using \\<open>Re ((4*A)/(A-D)) \\<ge> 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close>"], ["proof (prove)\nusing this:\n  4 - 4 * A / (A - D) = 4 * D / (D - A)\n  0 \\<le> Re (4 * A / (A - D))\n  is_real A\n  is_real D\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. 4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n    cor (Re (4 / (D - A))) * D", "by (subst cor_squared, subst real_sqrt_power[symmetric], simp)"], ["proof (state)\nthis:\n  4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n  cor (Re (4 / (D - A))) * D\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * A / (A - D))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Aa / (Aa - Da)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "ultimately"], ["proof (chain)\npicking this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  0 \\<le> Re (4 * A / (A - D))\n  - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * A\n  4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n  cor (Re (4 / (D - A))) * D", "show \"circline_eq_cmat (mk_circline_cmat A 0 0 D) (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)\""], ["proof (prove)\nusing this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  0 \\<le> Re (4 * A / (A - D))\n  - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * A\n  4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n  cor (Re (4 / (D - A))) * D\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A 0 0 D)\n     (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "using * \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close> \\<open>r = sqrt(Re ((4*A)/(A-D)))\\<close>"], ["proof (prove)\nusing this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (- (cor r)\\<^sup>2, 0, 0, 4 - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  0 \\<le> Re (4 * A / (A - D))\n  - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 = cor (Re (4 / (D - A))) * A\n  4 - (cor (sqrt (Re (4 * A / (A - D)))))\\<^sup>2 =\n  cor (Re (4 / (D - A))) * D\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * A / (A - D)))\n  is_real A\n  is_real D\n  A \\<noteq> D\n  r = sqrt (Re (4 * A / (A - D)))\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A 0 0 D)\n     (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)", "by (simp, rule_tac x=\"Re(4/(D-A))\" in exI, auto, simp_all add: **)"], ["proof (state)\nthis:\n  circline_eq_cmat (mk_circline_cmat A 0 0 D)\n   (chordal_circle_cvec_cmat \\<infinity>\\<^sub>v r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chordal_circle2:\n  assumes \"is_real A\" and \"is_real D\" and \"Re (A * D) < 0\" and \"r = sqrt(Re ((4*D)/(D-A)))\"\n  shows \"mk_circline A 0 0 D = chordal_circle 0\\<^sub>h r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_circline A 0 0 D = chordal_circle 0\\<^sub>h r", "using assms"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. mk_circline A 0 0 D = chordal_circle 0\\<^sub>h r", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "fix A D r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "assume *: \"is_real A\" \"is_real D\" \"Re (A * D) < 0\" \"r = sqrt (Re ((4*D)/(D-A)))\""], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "hence \"A \\<noteq> 0 \\<or> D \\<noteq> 0\""], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<or> D \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "hence \"(A, 0, 0, D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (A, 0, 0, D) \\<in> hermitean_nonzero", "using eq_cnj_iff_real[of A] eq_cnj_iff_real[of D] *"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n  (cnj A = A) = is_real A\n  (cnj D = D) = is_real D\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. (A, 0, 0, D) \\<in> hermitean_nonzero", "unfolding hermitean_def"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n  (cnj A = A) = is_real A\n  (cnj D = D) = is_real D\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. (A, 0, 0, D) \\<in> {H. mat_adj H = H \\<and> H \\<noteq> mat_zero}", "by (simp add: mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "have \"(4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def power2_eq_square)"], ["proof (state)\nthis:\n  (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "have \"A \\<noteq> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> D", "using \\<open>Re (A * D) < 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re (A * D) < 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. A \\<noteq> D", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "have \"Re((4*D)/(D-A)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * D / (D - A))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * D / (D - A))", "have \"Re D / Re (D - A) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re D / Re (D - A)", "using \\<open>Re (A * D) < 0\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  Re (A * D) < 0\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re D / Re (D - A)", "using chordal_circle_det_positive[of \"Re D\" \"Re A\"]"], ["proof (prove)\nusing this:\n  Re (A * D) < 0\n  is_real A\n  is_real D\n  Re D * Re A < 0 \\<Longrightarrow> 0 < Re D / (Re D - Re A)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re D / Re (D - A)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  0 \\<le> Re D / Re (D - A)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * D / (D - A))", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> Re D / Re (D - A)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * D / (D - A))", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re D / Re (D - A)\n  is_real A\n  is_real D\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (4 * D / (D - A))", "by (subst Re_divide_real, auto)"], ["proof (state)\nthis:\n  0 \\<le> Re (4 * D / (D - A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> Re (4 * D / (D - A))\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "have \"4 * (D - A) - 4 * D  = 4 * -A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * (D - A) - 4 * D = 4 * - A", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 * (D - A) - 4 * D = 4 * - A\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "hence \"4 - 4 * D / (D - A) = -4 * A / (D - A)\""], ["proof (prove)\nusing this:\n  4 * (D - A) - 4 * D = 4 * - A\n\ngoal (1 subgoal):\n 1. 4 - 4 * D / (D - A) = - 4 * A / (D - A)", "using \\<open>A \\<noteq> D\\<close>"], ["proof (prove)\nusing this:\n  4 * (D - A) - 4 * D = 4 * - A\n  A \\<noteq> D\n\ngoal (1 subgoal):\n 1. 4 - 4 * D / (D - A) = - 4 * A / (D - A)", "by (smt ab_semigroup_mult_class.mult_ac(1) diff_divide_eq_iff eq_iff_diff_eq_0 mult_minus1 mult_minus1_right mult_numeral_1_right right_diff_distrib_numeral times_divide_eq_right)"], ["proof (state)\nthis:\n  4 - 4 * D / (D - A) = - 4 * A / (D - A)\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "hence \"4 - 4 * D / (D - A) = 4 * A / (A - D)\""], ["proof (prove)\nusing this:\n  4 - 4 * D / (D - A) = - 4 * A / (D - A)\n\ngoal (1 subgoal):\n 1. 4 - 4 * D / (D - A) = 4 * A / (A - D)", "by (metis (hide_lams, no_types) minus_diff_eq minus_divide_left minus_divide_right minus_mult_left)"], ["proof (state)\nthis:\n  4 - 4 * D / (D - A) = 4 * A / (A - D)\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "hence **: \"4 - (cor (sqrt (Re ((4*D)/(D-A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * A\""], ["proof (prove)\nusing this:\n  4 - 4 * D / (D - A) = 4 * A / (A - D)\n\ngoal (1 subgoal):\n 1. 4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n    cor (Re (4 / (A - D))) * A", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close> \\<open>Re (4 * D / (D - A)) \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  4 - 4 * D / (D - A) = 4 * A / (A - D)\n  is_real A\n  is_real D\n  A \\<noteq> D\n  0 \\<le> Re (4 * D / (D - A))\n\ngoal (1 subgoal):\n 1. 4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n    cor (Re (4 / (A - D))) * A", "by (subst cor_squared, subst real_sqrt_power[symmetric], simp)"], ["proof (state)\nthis:\n  4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n  cor (Re (4 / (A - D))) * A\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "moreover"], ["proof (state)\nthis:\n  4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n  cor (Re (4 / (A - D))) * A\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "have \"- (cor (sqrt (Re ((4*D)/(D-A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n    cor (Re (4 / (A - D))) * D", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> D\\<close> \\<open>Re ((4*D)/(D-A)) \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  A \\<noteq> D\n  0 \\<le> Re (4 * D / (D - A))\n\ngoal (1 subgoal):\n 1. - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n    cor (Re (4 / (A - D))) * D", "by (subst cor_squared, subst real_sqrt_power[symmetric], simp) (simp add: Re_divide_real minus_divide_right)"], ["proof (state)\nthis:\n  - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * D\n\ngoal (1 subgoal):\n 1. \\<And>A D r Aa Da ra.\n       \\<lbrakk>is_real A; is_real D; Re (A * D) < 0;\n        r = sqrt (Re (4 * D / (D - A))); is_real Aa; is_real Da;\n        Re (Aa * Da) < 0; ra = sqrt (Re (4 * Da / (Da - Aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A 0 0 D)\n                          (chordal_circle_cvec_cmat 0\\<^sub>v r)", "ultimately"], ["proof (chain)\npicking this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n  cor (Re (4 / (A - D))) * A\n  - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * D", "show \"circline_eq_cmat (mk_circline_cmat A 0 0 D) (chordal_circle_cvec_cmat 0\\<^sub>v r)\""], ["proof (prove)\nusing this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n  cor (Re (4 / (A - D))) * A\n  - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * D\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A 0 0 D)\n     (chordal_circle_cvec_cmat 0\\<^sub>v r)", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>A \\<noteq> 0 \\<or> D \\<noteq> 0\\<close> \\<open>r = sqrt (Re ((4*D)/(D-A)))\\<close>"], ["proof (prove)\nusing this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n  cor (Re (4 / (A - D))) * A\n  - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * D\n  is_real A\n  is_real D\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A 0 0 D)\n     (chordal_circle_cvec_cmat 0\\<^sub>v r)", "using *"], ["proof (prove)\nusing this:\n  (A, 0, 0, D) \\<in> hermitean_nonzero\n  (4 - (cor r)\\<^sup>2, 0, 0, - (cor r)\\<^sup>2) \\<in> hermitean_nonzero\n  4 - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 =\n  cor (Re (4 / (A - D))) * A\n  - (cor (sqrt (Re (4 * D / (D - A)))))\\<^sup>2 = cor (Re (4 / (A - D))) * D\n  is_real A\n  is_real D\n  A \\<noteq> 0 \\<or> D \\<noteq> 0\n  r = sqrt (Re (4 * D / (D - A)))\n  is_real A\n  is_real D\n  Re (A * D) < 0\n  r = sqrt (Re (4 * D / (D - A)))\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A 0 0 D)\n     (chordal_circle_cvec_cmat 0\\<^sub>v r)", "by (simp, rule_tac x=\"Re (4/(A-D))\" in exI, auto, simp_all add: **)"], ["proof (state)\nthis:\n  circline_eq_cmat (mk_circline_cmat A 0 0 D)\n   (chordal_circle_cvec_cmat 0\\<^sub>v r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chordal_circle':\n  assumes \"B \\<noteq> 0\" and \"(A, B, C, D) \\<in> hermitean_nonzero\" and \"Re (mat_det (A, B, C, D)) \\<le> 0\" and\n  \"C * a\\<^sup>2  + (D - A) * a - B = 0\" and \"r = sqrt((4 - Re((-4 * a/B) * A)) / (1 + Re (a*cnj a)))\"\n  shows \"mk_circline A B C D = chordal_circle (of_complex a) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_circline A B C D = chordal_circle (of_complex a) r", "using assms"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  (A, B, C, D) \\<in> hermitean_nonzero\n  Re (mat_det (A, B, C, D)) \\<le> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n  r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)))\n\ngoal (1 subgoal):\n 1. mk_circline A B C D = chordal_circle (of_complex a) r", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "fix A B C D a :: complex and r :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "let ?k = \"(-4) * a / B\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "assume *: \"(A, B, C, D) \\<in> {H. hermitean H \\<and> H \\<noteq> mat_zero}\" and **: \"B \\<noteq> 0\" \"C * a\\<^sup>2 + (D - A) * a - B = 0\" and rr: \"r = sqrt ((4 - Re (?k * A)) / (1 + Re (a * cnj a)))\" and det: \"Re (mat_det (A, B, C, D)) \\<le> 0\""], ["proof (state)\nthis:\n  (A, B, C, D) \\<in> hermitean_nonzero\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n  r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)))\n  Re (mat_det (A, B, C, D)) \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using * hermitean_elems"], ["proof (prove)\nusing this:\n  (A, B, C, D) \\<in> hermitean_nonzero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "from **"], ["proof (chain)\npicking this:\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0", "have a12: \"let dsc = sqrt(Re ((D-A)\\<^sup>2 + 4 * (B*cnj B)))\n                      in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)\""], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n\ngoal (1 subgoal):\n 1. let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n    in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<noteq> 0; C * a\\<^sup>2 + (D - A) * a - B = 0\\<rbrakk>\n    \\<Longrightarrow> let dsc =\n                            sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n                      in a = (A - D + cor dsc) / (2 * C) \\<or>\n                         a = (A - D - cor dsc) / (2 * C)", "have \"Re ((D-A)\\<^sup>2 + 4 * (B*cnj B)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))", "by (subst complex_mult_cnj_cmod) (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<noteq> 0; C * a\\<^sup>2 + (D - A) * a - B = 0\\<rbrakk>\n    \\<Longrightarrow> let dsc =\n                            sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n                      in a = (A - D + cor dsc) / (2 * C) \\<or>\n                         a = (A - D - cor dsc) / (2 * C)", "hence \"ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) = cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))\""], ["proof (prove)\nusing this:\n  0 \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))\n\ngoal (1 subgoal):\n 1. ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) =\n    cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))", "using csqrt_real[of \"((D - A)\\<^sup>2 + 4 * (B * cnj B))\"] \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))\n  is_real ((D - A)\\<^sup>2 + 4 * (B * cnj B)) \\<Longrightarrow>\n  0 \\<le> Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)) \\<and>\n  ccsqrt ((D - A)\\<^sup>2 + 4 * (B * cnj B)) =\n  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))) \\<or>\n  Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)) < 0 \\<and>\n  ccsqrt ((D - A)\\<^sup>2 + 4 * (B * cnj B)) =\n  \\<i> * cor (sqrt (- Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) =\n    cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))", "by (auto simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) =\n  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<noteq> 0; C * a\\<^sup>2 + (D - A) * a - B = 0\\<rbrakk>\n    \\<Longrightarrow> let dsc =\n                            sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n                      in a = (A - D + cor dsc) / (2 * C) \\<or>\n                         a = (A - D - cor dsc) / (2 * C)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) =\n  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))\n\ngoal (1 subgoal):\n 1. let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n    in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)", "using complex_quadratic_equation_two_roots[of C a \"D - A\" \"-B\"]"], ["proof (prove)\nusing this:\n  ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) =\n  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))\n  \\<lbrakk>C \\<noteq> 0; C * a\\<^sup>2 + (D - A) * a + - B = 0\\<rbrakk>\n  \\<Longrightarrow> a =\n                    (- (D - A) + ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B)) /\n                    (2 * C) \\<or>\n                    a =\n                    (- (D - A) - ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B)) /\n                    (2 * C)\n\ngoal (1 subgoal):\n 1. let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n    in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)", "using  \\<open>C * a\\<^sup>2 + (D - A) * a - B = 0\\<close> \\<open>B \\<noteq> 0\\<close> \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B) =\n  cor (sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B))))\n  \\<lbrakk>C \\<noteq> 0; C * a\\<^sup>2 + (D - A) * a + - B = 0\\<rbrakk>\n  \\<Longrightarrow> a =\n                    (- (D - A) + ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B)) /\n                    (2 * C) \\<or>\n                    a =\n                    (- (D - A) - ccsqrt ((D - A)\\<^sup>2 - 4 * C * - B)) /\n                    (2 * C)\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n  B \\<noteq> 0\n  C = cnj B\n\ngoal (1 subgoal):\n 1. let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n    in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"is_real ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (- 4 * a / B)", "using a12 \\<open>C = cnj B\\<close> \\<open>is_real A\\<close> \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)\n  C = cnj B\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. is_real (- 4 * a / B)", "by (auto simp add: Let_def)"], ["proof (state)\nthis:\n  is_real (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> 0", "using **"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"Re ?k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re (- 4 * a / B) \\<noteq> 0", "using \\<open>is_real (-4*a / B)\\<close> \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  is_real (- 4 * a / B)\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re (- 4 * a / B) \\<noteq> 0", "by (metis complex.expand divide_eq_0_iff divisors_zero zero_complex.simps(1) zero_complex.simps(2) zero_neq_neg_numeral)"], ["proof (state)\nthis:\n  Re (- 4 * a / B) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "moreover"], ["proof (state)\nthis:\n  Re (- 4 * a / B) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"(-4) * a = cor (Re ?k) * B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 4 * a = cor (Re (- 4 * a / B)) * B", "using complex_of_real_Re[OF \\<open>is_real (-4*a/B)\\<close>] \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - 4 * a = cor (Re (- 4 * a / B)) * B", "by simp"], ["proof (state)\nthis:\n  - 4 * a = cor (Re (- 4 * a / B)) * B\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "moreover"], ["proof (state)\nthis:\n  - 4 * a = cor (Re (- 4 * a / B)) * B\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"is_real (a/B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (a / B)", "using \\<open>is_real ?k\\<close> is_real_mult_real[of \"-4\" \"a / B\"]"], ["proof (prove)\nusing this:\n  is_real (- 4 * a / B)\n  \\<lbrakk>is_real (- 4); - 4 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> is_real (a / B) = is_real (- 4 * (a / B))\n\ngoal (1 subgoal):\n 1. is_real (a / B)", "by simp"], ["proof (state)\nthis:\n  is_real (a / B)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"is_real (B * cnj a)\""], ["proof (prove)\nusing this:\n  is_real (a / B)\n\ngoal (1 subgoal):\n 1. is_real (B * cnj a)", "using * \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  is_real (a / B)\n  (A, B, C, D) \\<in> hermitean_nonzero\n  C = cnj B\n\ngoal (1 subgoal):\n 1. is_real (B * cnj a)", "by (metis (no_types, lifting) Im_complex_div_eq_0 complex_cnj_divide eq_cnj_iff_real hermitean_elems(3) mem_Collect_eq mult.commute)"], ["proof (state)\nthis:\n  is_real (B * cnj a)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"B * cnj a = cnj B * a\""], ["proof (prove)\nusing this:\n  is_real (B * cnj a)\n\ngoal (1 subgoal):\n 1. B * cnj a = cnj B * a", "using eq_cnj_iff_real[of \"B * cnj a\"]"], ["proof (prove)\nusing this:\n  is_real (B * cnj a)\n  (cnj (B * cnj a) = B * cnj a) = is_real (B * cnj a)\n\ngoal (1 subgoal):\n 1. B * cnj a = cnj B * a", "by simp"], ["proof (state)\nthis:\n  B * cnj a = cnj B * a\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"-4 * cnj a = cor (Re ?k) * C\""], ["proof (prove)\nusing this:\n  B * cnj a = cnj B * a\n\ngoal (1 subgoal):\n 1. - 4 * cnj a = cor (Re (- 4 * a / B)) * C", "using \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  B * cnj a = cnj B * a\n  C = cnj B\n\ngoal (1 subgoal):\n 1. - 4 * cnj a = cor (Re (- 4 * a / B)) * C", "using complex_of_real_Re[OF \\<open>is_real ?k\\<close>] \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  B * cnj a = cnj B * a\n  C = cnj B\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - 4 * cnj a = cor (Re (- 4 * a / B)) * C", "by (simp, simp add: field_simps)"], ["proof (state)\nthis:\n  - 4 * cnj a = cor (Re (- 4 * a / B)) * C\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "moreover"], ["proof (state)\nthis:\n  - 4 * cnj a = cor (Re (- 4 * a / B)) * C\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"1 + a * cnj a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + a * cnj a \\<noteq> 0", "by (subst complex_mult_cnj_cmod) (smt cor_add of_real_0 of_real_1 of_real_eq_iff realpow_square_minus_le)"], ["proof (state)\nthis:\n  1 + a * cnj a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"r\\<^sup>2 = (4 - Re (?k * A)) / (1 + Re (a * cnj a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "have \"Re (a / B * A) \\<ge> -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (a / B * A)", "using a12 chordal_circle_radius_positive[of A B C D] * \\<open>B \\<noteq> 0\\<close> det"], ["proof (prove)\nusing this:\n  let dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)))\n  in a = (A - D + cor dsc) / (2 * C) \\<or> a = (A - D - cor dsc) / (2 * C)\n  \\<lbrakk>hermitean (A, B, C, D); Re (mat_det (A, B, C, D)) \\<le> 0;\n   B \\<noteq> 0; ?dsc = sqrt (Re ((D - A)\\<^sup>2 + 4 * (B * cnj B)));\n   ?a1.0 = (A - D + cor ?dsc) / (2 * C);\n   ?a2.0 = (A - D - cor ?dsc) / (2 * C)\\<rbrakk>\n  \\<Longrightarrow> - 1 \\<le> Re (A * ?a1.0 / B) \\<and>\n                    - 1 \\<le> Re (A * ?a2.0 / B)\n  (A, B, C, D) \\<in> hermitean_nonzero\n  B \\<noteq> 0\n  Re (mat_det (A, B, C, D)) \\<le> 0\n\ngoal (1 subgoal):\n 1. - 1 \\<le> Re (a / B * A)", "by (auto simp add: Let_def field_simps)"], ["proof (state)\nthis:\n  - 1 \\<le> Re (a / B * A)\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "from mult_right_mono_neg[OF this, of \"-4\"]"], ["proof (chain)\npicking this:\n  - 4 \\<le> 0 \\<Longrightarrow> Re (a / B * A) * - 4 \\<le> - 1 * - 4", "have \"4 - Re (?k * A) \\<ge> 0\""], ["proof (prove)\nusing this:\n  - 4 \\<le> 0 \\<Longrightarrow> Re (a / B * A) * - 4 \\<le> - 1 * - 4\n\ngoal (1 subgoal):\n 1. 0 \\<le> 4 - Re (- 4 * a / B * A)", "using Re_mult_real[of \"-4\" \"a / B * A\"]"], ["proof (prove)\nusing this:\n  - 4 \\<le> 0 \\<Longrightarrow> Re (a / B * A) * - 4 \\<le> - 1 * - 4\n  is_real (- 4) \\<Longrightarrow>\n  Re (- 4 * (a / B * A)) = Re (- 4) * Re (a / B * A)\n\ngoal (1 subgoal):\n 1. 0 \\<le> 4 - Re (- 4 * a / B * A)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  0 \\<le> 4 - Re (- 4 * a / B * A)\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "moreover"], ["proof (state)\nthis:\n  0 \\<le> 4 - Re (- 4 * a / B * A)\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "have \"1 + Re (a * cnj a) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + Re (a * cnj a)", "using \\<open>a \\<noteq> 0\\<close> complex_mult_cnj complex_neq_0"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  ?z * cnj ?z = cor ((Re ?z)\\<^sup>2 + (Im ?z)\\<^sup>2)\n  (?z \\<noteq> 0) = (0 < (Re ?z)\\<^sup>2 + (Im ?z)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 < 1 + Re (a * cnj a)", "by auto"], ["proof (state)\nthis:\n  0 < 1 + Re (a * cnj a)\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> 4 - Re (- 4 * a / B * A)\n  0 < 1 + Re (a * cnj a)", "have \"(4 - Re (?k * A)) / (1 + Re (a * cnj a)) \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> 4 - Re (- 4 * a / B * A)\n  0 < 1 + Re (a * cnj a)\n\ngoal (1 subgoal):\n 1. 0 \\<le> (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "by (metis divide_nonneg_pos)"], ["proof (state)\nthis:\n  0 \\<le> (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "using rr"], ["proof (prove)\nusing this:\n  0 \\<le> (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n  r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)))\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))", "by simp"], ["proof (state)\nthis:\n  r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"r\\<^sup>2 = Re ((4 - ?k * A) / (1 + a * cnj a))\""], ["proof (prove)\nusing this:\n  r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = Re ((4 - - 4 * a / B * A) / (1 + a * cnj a))", "using \\<open>is_real ?k\\<close> \\<open>is_real A\\<close> \\<open>1 + a * cnj a \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  r\\<^sup>2 = (4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a))\n  is_real (- 4 * a / B)\n  is_real A\n  1 + a * cnj a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = Re ((4 - - 4 * a / B * A) / (1 + a * cnj a))", "by (subst Re_divide_real, auto)"], ["proof (state)\nthis:\n  r\\<^sup>2 = Re ((4 - - 4 * a / B * A) / (1 + a * cnj a))\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"(cor r)\\<^sup>2 =  (4 - ?k * A) / (1 + a * cnj a)\""], ["proof (prove)\nusing this:\n  r\\<^sup>2 = Re ((4 - - 4 * a / B * A) / (1 + a * cnj a))\n\ngoal (1 subgoal):\n 1. (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)", "using \\<open>is_real ?k\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  r\\<^sup>2 = Re ((4 - - 4 * a / B * A) / (1 + a * cnj a))\n  is_real (- 4 * a / B)\n  is_real A\n\ngoal (1 subgoal):\n 1. (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)", "using mult_reals[of ?k A]"], ["proof (prove)\nusing this:\n  r\\<^sup>2 = Re ((4 - - 4 * a / B * A) / (1 + a * cnj a))\n  is_real (- 4 * a / B)\n  is_real A\n  \\<lbrakk>is_real (- 4 * a / B); is_real A\\<rbrakk>\n  \\<Longrightarrow> is_real (- 4 * a / B * A)\n\ngoal (1 subgoal):\n 1. (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)", "by (simp add: cor_squared)"], ["proof (state)\nthis:\n  (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re ?k) * A\""], ["proof (prove)\nusing this:\n  (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A", "using complex_of_real_Re[OF \\<open>is_real (-4*a/B)\\<close>]"], ["proof (prove)\nusing this:\n  (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A", "using \\<open>1 + a * cnj a \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (cor r)\\<^sup>2 = (4 - - 4 * a / B * A) / (1 + a * cnj a)\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n  1 + a * cnj a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "moreover"], ["proof (state)\nthis:\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"?k = cnj ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 4 * a / B = cnj (- 4 * a / B)", "using \\<open>is_real ?k\\<close>"], ["proof (prove)\nusing this:\n  is_real (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. - 4 * a / B = cnj (- 4 * a / B)", "using eq_cnj_iff_real[of \"-4*a/B\"]"], ["proof (prove)\nusing this:\n  is_real (- 4 * a / B)\n  (cnj (- 4 * a / B) = - 4 * a / B) = is_real (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. - 4 * a / B = cnj (- 4 * a / B)", "by simp"], ["proof (state)\nthis:\n  - 4 * a / B = cnj (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "have \"?k\\<^sup>2 = cor ((cmod ?k)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 4 * a / B)\\<^sup>2 = cor ((cmod (- 4 * a / B))\\<^sup>2)", "using  cor_cmod_real[OF \\<open>is_real ?k\\<close>]"], ["proof (prove)\nusing this:\n  cor (cmod (- 4 * a / B)) = - 4 * a / B \\<or>\n  cor (cmod (- 4 * a / B)) = - (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. (- 4 * a / B)\\<^sup>2 = cor ((cmod (- 4 * a / B))\\<^sup>2)", "unfolding power2_eq_square"], ["proof (prove)\nusing this:\n  cor (cmod (- 4 * a / B)) = - 4 * a / B \\<or>\n  cor (cmod (- 4 * a / B)) = - (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. - 4 * a / B * (- 4 * a / B) =\n    cor (cmod (- 4 * a / B) * cmod (- 4 * a / B))", "by (subst cor_mult) (metis minus_mult_minus)"], ["proof (state)\nthis:\n  (- 4 * a / B)\\<^sup>2 = cor ((cmod (- 4 * a / B))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"?k\\<^sup>2 = ?k * cnj ?k\""], ["proof (prove)\nusing this:\n  (- 4 * a / B)\\<^sup>2 = cor ((cmod (- 4 * a / B))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (- 4 * a / B)\\<^sup>2 = - 4 * a / B * cnj (- 4 * a / B)", "using complex_mult_cnj_cmod[of ?k]"], ["proof (prove)\nusing this:\n  (- 4 * a / B)\\<^sup>2 = cor ((cmod (- 4 * a / B))\\<^sup>2)\n  - 4 * a / B * cnj (- 4 * a / B) = cor ((cmod (- 4 * a / B))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (- 4 * a / B)\\<^sup>2 = - 4 * a / B * cnj (- 4 * a / B)", "by simp"], ["proof (state)\nthis:\n  (- 4 * a / B)\\<^sup>2 = - 4 * a / B * cnj (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence ***: \"a * cnj a = (cor ((Re ?k)\\<^sup>2) * B * C) / 16\""], ["proof (prove)\nusing this:\n  (- 4 * a / B)\\<^sup>2 = - 4 * a / B * cnj (- 4 * a / B)\n\ngoal (1 subgoal):\n 1. a * cnj a = cor ((Re (- 4 * a / B))\\<^sup>2) * B * C / 16", "using complex_of_real_Re[OF \\<open>is_real (-4*a/B)\\<close>] \\<open>C = cnj B\\<close> \\<open>is_real (-4*a/B)\\<close> \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (- 4 * a / B)\\<^sup>2 = - 4 * a / B * cnj (- 4 * a / B)\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n  C = cnj B\n  is_real (- 4 * a / B)\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a * cnj a = cor ((Re (- 4 * a / B))\\<^sup>2) * B * C / 16", "by simp"], ["proof (state)\nthis:\n  a * cnj a = cor ((Re (- 4 * a / B))\\<^sup>2) * B * C / 16\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "from **"], ["proof (chain)\npicking this:\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0", "have \"cor ((Re ?k)\\<^sup>2) * B * C - 4 * cor (Re ?k) * (D-A) - 16 = 0\""], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n\ngoal (1 subgoal):\n 1. cor ((Re (- 4 * a / B))\\<^sup>2) * B * C -\n    4 * cor (Re (- 4 * a / B)) * (D - A) -\n    16 =\n    0", "using complex_of_real_Re[OF \\<open>is_real ?k\\<close>]"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  C * a\\<^sup>2 + (D - A) * a - B = 0\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n\ngoal (1 subgoal):\n 1. cor ((Re (- 4 * a / B))\\<^sup>2) * B * C -\n    4 * cor (Re (- 4 * a / B)) * (D - A) -\n    16 =\n    0", "by (simp add: power2_eq_square, simp add: field_simps, algebra)"], ["proof (state)\nthis:\n  cor ((Re (- 4 * a / B))\\<^sup>2) * B * C -\n  4 * cor (Re (- 4 * a / B)) * (D - A) -\n  16 =\n  0\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"?k * (D-A) = 4 * (cor ((Re ?k)\\<^sup>2) * B * C / 16 - 1)\""], ["proof (prove)\nusing this:\n  cor ((Re (- 4 * a / B))\\<^sup>2) * B * C -\n  4 * cor (Re (- 4 * a / B)) * (D - A) -\n  16 =\n  0\n\ngoal (1 subgoal):\n 1. - 4 * a / B * (D - A) =\n    4 * (cor ((Re (- 4 * a / B))\\<^sup>2) * B * C / 16 - 1)", "by (subst (asm) complex_of_real_Re[OF \\<open>is_real ?k\\<close>]) algebra"], ["proof (state)\nthis:\n  - 4 * a / B * (D - A) =\n  4 * (cor ((Re (- 4 * a / B))\\<^sup>2) * B * C / 16 - 1)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"?k * (D-A) = 4 * (a*cnj a - 1)\""], ["proof (prove)\nusing this:\n  - 4 * a / B * (D - A) =\n  4 * (cor ((Re (- 4 * a / B))\\<^sup>2) * B * C / 16 - 1)\n\ngoal (1 subgoal):\n 1. - 4 * a / B * (D - A) = 4 * (a * cnj a - 1)", "by (subst (asm)  ***[symmetric]) simp"], ["proof (state)\nthis:\n  - 4 * a / B * (D - A) = 4 * (a * cnj a - 1)\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "hence \"4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re ?k) * D\""], ["proof (prove)\nusing this:\n  - 4 * a / B * (D - A) = 4 * (a * cnj a - 1)\n\ngoal (1 subgoal):\n 1. 4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n    cor (Re (- 4 * a / B)) * D", "using \\<open>4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re ?k) * A\\<close>"], ["proof (prove)\nusing this:\n  - 4 * a / B * (D - A) = 4 * (a * cnj a - 1)\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n\ngoal (1 subgoal):\n 1. 4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n    cor (Re (- 4 * a / B)) * D", "using complex_of_real_Re[OF \\<open>is_real (-4*a/B)\\<close>]"], ["proof (prove)\nusing this:\n  - 4 * a / B * (D - A) = 4 * (a * cnj a - 1)\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n  cor (Re (- 4 * a / B)) = - 4 * a / B\n\ngoal (1 subgoal):\n 1. 4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n    cor (Re (- 4 * a / B)) * D", "by simp algebra"], ["proof (state)\nthis:\n  4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n  cor (Re (- 4 * a / B)) * D\n\ngoal (1 subgoal):\n 1. \\<And>B A C D a r Ba Aa Ca Da aa ra.\n       \\<lbrakk>B \\<noteq> 0; (A, B, C, D) \\<in> hermitean_nonzero;\n        Re (mat_det (A, B, C, D)) \\<le> 0;\n        C * a\\<^sup>2 + (D - A) * a - B = 0;\n        r = sqrt ((4 - Re (- 4 * a / B * A)) / (1 + Re (a * cnj a)));\n        Ba \\<noteq> 0; (Aa, Ba, Ca, Da) \\<in> hermitean_nonzero;\n        Re (mat_det (Aa, Ba, Ca, Da)) \\<le> 0;\n        Ca * aa\\<^sup>2 + (Da - Aa) * aa - Ba = 0;\n        ra =\n        sqrt\n         ((4 - Re (- 4 * aa / Ba * Aa)) / (1 + Re (aa * cnj aa)))\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat (mk_circline_cmat A B C D)\n                          (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "ultimately"], ["proof (chain)\npicking this:\n  Re (- 4 * a / B) \\<noteq> 0\n  - 4 * a = cor (Re (- 4 * a / B)) * B\n  - 4 * cnj a = cor (Re (- 4 * a / B)) * C\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n  4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n  cor (Re (- 4 * a / B)) * D", "show \"circline_eq_cmat (mk_circline_cmat A B C D) (chordal_circle_cvec_cmat (of_complex_cvec a) r)\""], ["proof (prove)\nusing this:\n  Re (- 4 * a / B) \\<noteq> 0\n  - 4 * a = cor (Re (- 4 * a / B)) * B\n  - 4 * cnj a = cor (Re (- 4 * a / B)) * C\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n  4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n  cor (Re (- 4 * a / B)) * D\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A B C D)\n     (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "using * \\<open>a \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re (- 4 * a / B) \\<noteq> 0\n  - 4 * a = cor (Re (- 4 * a / B)) * B\n  - 4 * cnj a = cor (Re (- 4 * a / B)) * C\n  4 - (cor r)\\<^sup>2 * (a * cnj a + 1) = cor (Re (- 4 * a / B)) * A\n  4 * a * cnj a - (cor r)\\<^sup>2 * (a * cnj a + 1) =\n  cor (Re (- 4 * a / B)) * D\n  (A, B, C, D) \\<in> hermitean_nonzero\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. circline_eq_cmat (mk_circline_cmat A B C D)\n     (chordal_circle_cvec_cmat (of_complex_cvec a) r)", "by (simp, rule_tac x=\"Re (-4*a / B)\" in exI, simp)"], ["proof (state)\nthis:\n  circline_eq_cmat (mk_circline_cmat A B C D)\n   (chordal_circle_cvec_cmat (of_complex_cvec a) r)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}