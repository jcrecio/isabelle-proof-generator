{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Oriented_Circlines.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma ocircline_eq_cmat_id [simp]:\n  shows \"ocircline_eq_cmat H H\"", "lemma ocircline_set_I [simp]:\n  assumes \"on_ocircline H z\"\n  shows \"z \\<in> ocircline_set H\"", "lemma disc_I [simp]:\n  assumes \"in_ocircline H z\"\n  shows \"z \\<in> disc H\"", "lemma disc_compl_I [simp]:\n  assumes \"out_ocircline H z\"\n  shows \"z \\<in> disc_compl H\"", "lemma in_on_out:\n  shows \"in_ocircline H z \\<or> on_ocircline H z \\<or> out_ocircline H z\"", "lemma in_on_out_univ:\n  shows \"disc H \\<union> disc_compl H \\<union> ocircline_set H = UNIV\"", "lemma disc_inter_disc_compl [simp]:\n  shows \"disc H \\<inter> disc_compl H = {}\"", "lemma disc_inter_ocircline_set [simp]:\n  shows \"disc H \\<inter> ocircline_set H = {}\"", "lemma disc_compl_inter_ocircline_set [simp]:\n  shows \"disc_compl H \\<inter> ocircline_set H = {}\"", "lemma opposite_ocircline_involution [simp]:\n  shows \"opposite_ocircline (opposite_ocircline H) = H\"", "lemma on_circline_opposite_ocircline_cmat [simp]:\n  assumes \"hermitean H \\<and> H \\<noteq> mat_zero\" and \"z \\<noteq> vec_zero\"\n  shows \"on_circline_cmat_cvec (opposite_ocircline_cmat H) z = on_circline_cmat_cvec H z\"", "lemma on_circline_opposite_ocircline [simp]:\n  shows \"on_ocircline (opposite_ocircline H) z \\<longleftrightarrow> on_ocircline H z\"", "lemma ocircline_set_opposite_ocircline [simp]:\n  shows \"ocircline_set (opposite_ocircline H) = ocircline_set H\"", "lemma disc_compl_opposite_ocircline [simp]:\n  shows \"disc_compl (opposite_ocircline H) = disc H\"", "lemma disc_opposite_ocircline [simp]:\n  shows \"disc (opposite_ocircline H) = disc_compl H\"", "lemma of_ocircline_opposite_ocircline [simp]:\n  shows \"of_ocircline (opposite_ocircline H) = of_ocircline H\"", "lemma on_ocircline_of_circline [simp]:\n  shows \"on_circline (of_ocircline H) z \\<longleftrightarrow> on_ocircline H z\"", "lemma circline_set_of_ocircline [simp]:\n  shows \"circline_set (of_ocircline H) = ocircline_set H\"", "lemma inj_of_ocircline:\n  assumes \"of_ocircline H = of_ocircline H'\"\n  shows \"H = H' \\<or> H = opposite_ocircline H'\"", "lemma inj_ocircline_set:\n  assumes \"ocircline_set H = ocircline_set H'\" and \"ocircline_set H \\<noteq> {}\"\n  shows \"H = H' \\<or> H = opposite_ocircline H'\"", "lemma pos_oriented:\n  shows \"pos_oriented H \\<or> pos_oriented (opposite_ocircline H)\"", "lemma pos_oriented_opposite_ocircline_cmat [simp]:\n  assumes \"hermitean H \\<and> H \\<noteq> mat_zero\"\n  shows  \"pos_oriented_cmat (opposite_ocircline_cmat H) \\<longleftrightarrow> \\<not> pos_oriented_cmat H\"", "lemma pos_oriented_opposite_ocircline [simp]:\n  shows \"pos_oriented (opposite_ocircline H) \\<longleftrightarrow> \\<not> pos_oriented H\"", "lemma pos_oriented_circle_inf:\n  assumes \"\\<infinity>\\<^sub>h \\<notin> ocircline_set H\"\n  shows \"pos_oriented H \\<longleftrightarrow> \\<infinity>\\<^sub>h \\<notin> disc H\"", "lemma pos_oriented_euclidean_circle:\n  assumes \"is_circle (of_ocircline H)\"\n          \"(a, r) = euclidean_circle (of_ocircline H)\"\n          \"circline_type (of_ocircline H) < 0\"\n  shows \"pos_oriented H \\<longleftrightarrow> of_complex a \\<in> disc H\"", "lemma of_circline_clmat_def':\n  shows \"of_circline_clmat H = (if pos_oriented_clmat H then H else opposite_ocircline_clmat H)\"", "lemma pos_oriented_cmat_mult_positive':\n  assumes\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\" and\n    \"\\<exists>k. k > 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\" and\n    \"pos_oriented_cmat H1\"\n  shows \"pos_oriented_cmat H2\"", "lemma pos_oriented_cmat_mult_positive:\n  assumes\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\" and\n    \"\\<exists>k. k > 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\"\n  shows \n    \"pos_oriented_cmat H1 \\<longleftrightarrow> pos_oriented_cmat H2\"", "lemma pos_oriented_cmat_mult_negative:\n  assumes\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\" and\n    \"\\<exists>k. k < 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\"\n  shows\n    \"pos_oriented_cmat H1 \\<longleftrightarrow> \\<not> pos_oriented_cmat H2\"", "lemma pos_oriented_of_circline [simp]:\n  shows \"pos_oriented (of_circline H)\"", "lemma of_ocircline_of_circline [simp]:\n  shows \"of_ocircline (of_circline H) = H\"", "lemma of_circline_of_ocircline_pos_oriented [simp]:\n  assumes \"pos_oriented H\"\n  shows \"of_circline (of_ocircline H) = H\"", "lemma inj_of_circline:\n  assumes \"of_circline H = of_circline H'\"\n  shows \"H = H'\"", "lemma of_circline_of_ocircline:\n  shows \"of_circline (of_ocircline H') = H' \\<or> \n         of_circline (of_ocircline H') = opposite_ocircline H'\"", "lemma ocircline_set_of_circline [simp]:\n  shows \"ocircline_set (of_circline H) = circline_set H\"", "lemma pos_oriented_ounit_circle [simp]: \n  shows \"pos_oriented ounit_circle\"", "lemma of_ocircline_ounit_circle [simp]:\n  shows \"of_ocircline ounit_circle = unit_circle\"", "lemma of_circline_unit_circle [simp]:\n  shows \"of_circline (unit_circle) = ounit_circle\"", "lemma ocircline_set_ounit_circle [simp]:\n  shows \"ocircline_set ounit_circle = circline_set unit_circle\"", "lemma zero_in_unit_disc [simp]:\n  shows \"0\\<^sub>h \\<in> unit_disc\"", "lemma one_notin_unit_dic [simp]: \n  shows \"1\\<^sub>h \\<notin> unit_disc\"", "lemma inf_notin_unit_disc [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<notin> unit_disc\"", "lemma unit_disc_iff_cmod_lt_1 [simp]:\n  shows \"of_complex c \\<in> unit_disc \\<longleftrightarrow> cmod c < 1\"", "lemma unit_disc_cmod_square_lt_1 [simp]:\n  assumes \"z \\<in> unit_disc\"\n  shows \"(cmod (to_complex z))\\<^sup>2 < 1\"", "lemma unit_disc_to_complex_inj:\n  assumes \"u \\<in> unit_disc\" and \"v \\<in> unit_disc\"\n  assumes \"to_complex u = to_complex v\"\n  shows \"u = v\"", "lemma inversion_unit_disc [simp]: \n  shows \"inversion ` unit_disc = unit_disc_compl\"", "lemma inversion_unit_disc_compl [simp]: \n  shows \"inversion ` unit_disc_compl = unit_disc\"", "lemma inversion_noteq_unit_disc:\n  assumes \"u \\<in> unit_disc\" and \"v \\<in> unit_disc\"\n  shows \"inversion u \\<noteq> v\"", "lemma in_ocircline_ounit_circle_conjugate [simp]:\n  assumes \"in_ocircline ounit_circle z\"\n  shows \"in_ocircline ounit_circle (conjugate z)\"", "lemma conjugate_unit_disc [simp]:\n  shows \"conjugate ` unit_disc = unit_disc\"", "lemma conjugate_in_unit_disc [simp]:\n  assumes \"z \\<in> unit_disc\"\n  shows \"conjugate z \\<in> unit_disc\"", "lemma out_ocircline_ounit_circle_conjugate [simp]:\n  assumes \"out_ocircline ounit_circle z\"\n  shows \"out_ocircline ounit_circle (conjugate z)\"", "lemma conjugate_unit_disc_compl [simp]:\n  shows \"conjugate ` unit_disc_compl = unit_disc_compl\"", "lemma conjugate_in_unit_disc_compl [simp]:\n  assumes \"z \\<in> unit_disc_compl\"\n  shows \"conjugate z \\<in> unit_disc_compl\"", "lemma o_x_axis_pos_oriented [simp]:\n  shows \"pos_oriented o_x_axis\"", "lemma of_ocircline_o_x_axis [simp]: \n  shows \"of_ocircline o_x_axis = x_axis\"", "lemma of_circline_x_axis [simp]:\n  shows \"of_circline x_axis = o_x_axis\"", "lemma ocircline_set_circline_set_x_axis [simp]: \n  shows \"ocircline_set o_x_axis = circline_set x_axis\"", "lemma ii_in_disc_o_x_axis [simp]: \n  shows \"ii\\<^sub>h \\<notin> disc o_x_axis\"", "lemma ii_notin_disc_o_x_axis [simp]:\n  shows \"ii\\<^sub>h \\<in> disc_compl o_x_axis\"", "lemma of_complex_in_o_x_axis_disc [simp]:\n  shows \"of_complex z \\<in> disc o_x_axis \\<longleftrightarrow> Im z < 0\"", "lemma inf_notin_disc_o_x_axis [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<notin> disc o_x_axis\"", "lemma disc_o_x_axis:\n  shows \"disc o_x_axis = of_complex ` {z. Im z < 0}\"", "lemma of_ocircline_o_circline_point_0 [simp]: \n  shows \"of_ocircline o_circline_point_0 = circline_point_0\"", "lemma moebius_circline_ocircline:\n  shows \"moebius_circline M H = of_ocircline (moebius_ocircline M (of_circline H))\"", "lemma moebius_ocircline_circline:\n  shows \"moebius_ocircline M H = of_circline (moebius_circline M (of_ocircline H)) \\<or>\n         moebius_ocircline M H = opposite_ocircline (of_circline (moebius_circline M (of_ocircline H)))\"", "lemma inj_moebius_ocircline [simp]:\n  shows \"inj (moebius_ocircline M)\"", "lemma moebius_ocircline_id_moebius [simp]:\n  shows \"moebius_ocircline id_moebius H = H\"", "lemma moebius_ocircline_comp [simp]:\n  shows \"moebius_ocircline (moebius_comp M1 M2) H = moebius_ocircline M1 (moebius_ocircline M2 H)\"", "lemma moebius_ocircline_comp_inv_left [simp]:\n  shows \"moebius_ocircline (moebius_inv M) (moebius_ocircline M H) = H\"", "lemma moebius_ocircline_comp_inv_right [simp]:\n  shows \"moebius_ocircline M (moebius_ocircline (moebius_inv M) H) = H\"", "lemma moebius_ocircline_opposite_ocircline [simp]:\n  shows \"moebius_ocircline M (opposite_ocircline H) = opposite_ocircline (moebius_ocircline M H)\"", "lemma ocircline_set_moebius_ocircline [simp]:\n  shows \"ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H\" (is \"?lhs = ?rhs\")", "lemma ocircline_set_fix_iff_ocircline_fix:\n  assumes \"ocircline_set H' \\<noteq> {}\"\n  shows \"ocircline_set (moebius_ocircline M H) = ocircline_set H' \\<longleftrightarrow>\n         moebius_ocircline M H = H' \\<or> moebius_ocircline M H = opposite_ocircline H'\"", "lemma disc_moebius_ocircline [simp]:\n  shows \"disc (moebius_ocircline M H) = moebius_pt M ` (disc H)\"", "lemma disc_compl_moebius_ocircline [simp]:\n  shows \"disc_compl (moebius_ocircline M H) = moebius_pt M ` (disc_compl H)\"", "lemma moebius_similarity_oriented_lines_to_oriented_lines:\n  assumes \"a \\<noteq> 0\"\n  shows \"\\<infinity>\\<^sub>h \\<in> ocircline_set H \\<longleftrightarrow> \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline (moebius_similarity a b) H)\"", "lemma moebius_similarity_preserve_orientation':\n  assumes \"a \\<noteq> 0\" and \"\\<infinity>\\<^sub>h \\<notin> ocircline_set H\" and \"pos_oriented H\"\n  shows \"pos_oriented (moebius_ocircline (moebius_similarity a b) H)\"", "lemma moebius_similarity_preserve_orientation:\n  assumes \"a \\<noteq> 0\" and \"\\<infinity>\\<^sub>h \\<notin> ocircline_set H\"\n  shows \"pos_oriented H \\<longleftrightarrow> pos_oriented(moebius_ocircline (moebius_similarity a b) H)\"", "lemma reciprocal_preserve_orientation:\n  assumes \"0\\<^sub>h \\<in> disc_compl H\"\n  shows \"pos_oriented (moebius_ocircline moebius_reciprocal H)\"", "lemma reciprocal_not_preserve_orientation:\n  assumes \"0\\<^sub>h \\<in> disc H\"\n  shows \"\\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)\"", "lemma pole_in_disc:\n  assumes \"M = mk_moebius a b c d\" and \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  assumes \"is_pole M z\" \"z \\<in> disc H\"\n  shows \"\\<not> pos_oriented (moebius_ocircline M H)\"", "lemma pole_in_disc_compl:\n  assumes \"M = mk_moebius a b c d\" and \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  assumes \"is_pole M z\" and \"z \\<in> disc_compl H\"\n  shows \"pos_oriented (moebius_ocircline M H)\"", "lemma ocircline_01inf:\n  assumes \"0\\<^sub>h \\<in> ocircline_set H \\<and> 1\\<^sub>h \\<in> ocircline_set H \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set H\"\n  shows \"H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\"", "lemma unique_ocircline_01inf:\n  shows \"\\<exists>! H. 0\\<^sub>h \\<in> ocircline_set H \\<and> 1\\<^sub>h \\<in> ocircline_set H \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and> ii\\<^sub>h \\<notin> disc H\"", "lemma unique_ocircline_set:\n  assumes \"A \\<noteq> B\" and \"A \\<noteq> C\" and \"B \\<noteq> C\"\n  shows \"\\<exists>! H. pos_oriented H \\<and> (A \\<in> ocircline_set H \\<and> B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H)\"", "lemma ocircline_set_0h:\n  assumes \"ocircline_set H = {0\\<^sub>h}\"\n  shows \"H = o_circline_point_0 \\<or> H = opposite_ocircline (o_circline_point_0)\""], "translations": [["", "lemma ocircline_eq_cmat_id [simp]:\n  shows \"ocircline_eq_cmat H H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_eq_cmat H H", "by (simp, rule_tac x=1 in exI, simp)"], ["", "quotient_type ocircline = circline_mat / ocircline_eq_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp ocircline_eq_clmat", "proof (rule equivpI)"], ["proof (state)\ngoal (3 subgoals):\n 1. reflp ocircline_eq_clmat\n 2. symp ocircline_eq_clmat\n 3. transp ocircline_eq_clmat", "show \"reflp ocircline_eq_clmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp ocircline_eq_clmat", "unfolding reflp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. ocircline_eq_clmat x x", "by transfer (auto, rule_tac x=\"1\" in exI, simp)"], ["proof (state)\nthis:\n  reflp ocircline_eq_clmat\n\ngoal (2 subgoals):\n 1. symp ocircline_eq_clmat\n 2. transp ocircline_eq_clmat", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. symp ocircline_eq_clmat\n 2. transp ocircline_eq_clmat", "show \"symp ocircline_eq_clmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp ocircline_eq_clmat", "unfolding symp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       ocircline_eq_clmat x y \\<longrightarrow> ocircline_eq_clmat y x", "by transfer (simp only: ocircline_eq_cmat_def, safe, rule_tac x=\"1/k\" in exI, simp)"], ["proof (state)\nthis:\n  symp ocircline_eq_clmat\n\ngoal (1 subgoal):\n 1. transp ocircline_eq_clmat", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. transp ocircline_eq_clmat", "show \"transp ocircline_eq_clmat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp ocircline_eq_clmat", "unfolding transp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       ocircline_eq_clmat x y \\<longrightarrow>\n       ocircline_eq_clmat y z \\<longrightarrow> ocircline_eq_clmat x z", "by transfer (simp only: ocircline_eq_cmat_def, safe, rule_tac x=\"k*ka\" in exI, simp)"], ["proof (state)\nthis:\n  transp ocircline_eq_clmat\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Points on oriented circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Boundary of the circline.\\<close>"], ["", "lift_definition on_ocircline :: \"ocircline \\<Rightarrow> complex_homo \\<Rightarrow> bool\" is on_circline_clmat_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>ocircline_eq_clmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx> complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> on_circline_clmat_hcoords circline_mat1\n                          complex_homo_coords1 =\n                         on_circline_clmat_hcoords circline_mat2\n                          complex_homo_coords2", "by transfer (simp del: quad_form_def, (erule exE)+, simp add: quad_form_scale_m quad_form_scale_v del: quad_form_def)"], ["", "definition ocircline_set :: \"ocircline \\<Rightarrow> complex_homo set\" where\n  \"ocircline_set H = {z. on_ocircline H z}\""], ["", "lemma ocircline_set_I [simp]:\n  assumes \"on_ocircline H z\"\n  shows \"z \\<in> ocircline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> ocircline_set H", "using assms"], ["proof (prove)\nusing this:\n  on_ocircline H z\n\ngoal (1 subgoal):\n 1. z \\<in> ocircline_set H", "unfolding ocircline_set_def"], ["proof (prove)\nusing this:\n  on_ocircline H z\n\ngoal (1 subgoal):\n 1. z \\<in> Collect (on_ocircline H)", "by simp"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Disc and disc complement - in and out points\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Interior and the exterior of an oriented circline.\\<close>"], ["", "definition in_ocircline_cmat_cvec :: \"complex_mat \\<Rightarrow> complex_vec \\<Rightarrow> bool\" where\n  [simp]: \"in_ocircline_cmat_cvec H z \\<longleftrightarrow> Re (quad_form z H) < 0\""], ["", "lift_definition in_ocircline_clmat_hcoords :: \"circline_mat \\<Rightarrow> complex_homo_coords \\<Rightarrow> bool\" is in_ocircline_cmat_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition in_ocircline :: \"ocircline \\<Rightarrow> complex_homo \\<Rightarrow> bool\" is in_ocircline_clmat_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>ocircline_eq_clmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx> complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_clmat_hcoords circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_clmat_hcoords circline_mat2\n                          complex_homo_coords2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "fix H H' z z'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\" and \"hermitean H' \\<and> H' \\<noteq> mat_zero\" and\n             \"z \\<noteq> vec_zero\" and \"z' \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean H' \\<and> H' \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "assume \"ocircline_eq_cmat H H'\" and \"z \\<approx>\\<^sub>v z'\""], ["proof (state)\nthis:\n  ocircline_eq_cmat H H'\n  z \\<approx>\\<^sub>v z'\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "then"], ["proof (chain)\npicking this:\n  ocircline_eq_cmat H H'\n  z \\<approx>\\<^sub>v z'", "obtain k k' where\n    *: \"0 < k\" \"H' = cor k *\\<^sub>s\\<^sub>m H\" \"k' \\<noteq> 0\" \"z' = k' *\\<^sub>s\\<^sub>v  z\""], ["proof (prove)\nusing this:\n  ocircline_eq_cmat H H'\n  z \\<approx>\\<^sub>v z'\n\ngoal (1 subgoal):\n 1. (\\<And>k k'.\n        \\<lbrakk>0 < k; H' = cor k *\\<^sub>s\\<^sub>m H; k' \\<noteq> 0;\n         z' = k' *\\<^sub>s\\<^sub>v z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  H' = cor k *\\<^sub>s\\<^sub>m H\n  k' \\<noteq> 0\n  z' = k' *\\<^sub>s\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "hence \"quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\""], ["proof (prove)\nusing this:\n  0 < k\n  H' = cor k *\\<^sub>s\\<^sub>m H\n  k' \\<noteq> 0\n  z' = k' *\\<^sub>s\\<^sub>v z\n\ngoal (1 subgoal):\n 1. quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H", "by (simp add: quad_form_scale_v quad_form_scale_m del: vec_cnj_sv quad_form_def)"], ["proof (state)\nthis:\n  quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "hence \"Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\""], ["proof (prove)\nusing this:\n  quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\n\ngoal (1 subgoal):\n 1. Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)", "using hh quad_form_hermitean_real[of H]"], ["proof (prove)\nusing this:\n  quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean H \\<Longrightarrow> is_real (quad_form ?z H)\n\ngoal (1 subgoal):\n 1. Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         in_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "thus \"in_ocircline_cmat_cvec H z = in_ocircline_cmat_cvec H' z'\""], ["proof (prove)\nusing this:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec H z = in_ocircline_cmat_cvec H' z'", "using \\<open>k > 0\\<close> \\<open>k' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n  0 < k\n  k' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec H z = in_ocircline_cmat_cvec H' z'", "using mult_less_0_iff"], ["proof (prove)\nusing this:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n  0 < k\n  k' \\<noteq> 0\n  (?a * ?b < (0::?'a)) =\n  ((0::?'a) < ?a \\<and> ?b < (0::?'a) \\<or>\n   ?a < (0::?'a) \\<and> (0::?'a) < ?b)\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec H z = in_ocircline_cmat_cvec H' z'", "by fastforce"], ["proof (state)\nthis:\n  in_ocircline_cmat_cvec H z = in_ocircline_cmat_cvec H' z'\n\ngoal:\nNo subgoals!", "qed"], ["", "definition disc :: \"ocircline \\<Rightarrow> complex_homo set\" where\n  \"disc H = {z. in_ocircline H z}\""], ["", "lemma disc_I [simp]:\n  assumes \"in_ocircline H z\"\n  shows \"z \\<in> disc H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> disc H", "using assms"], ["proof (prove)\nusing this:\n  in_ocircline H z\n\ngoal (1 subgoal):\n 1. z \\<in> disc H", "unfolding disc_def"], ["proof (prove)\nusing this:\n  in_ocircline H z\n\ngoal (1 subgoal):\n 1. z \\<in> Collect (in_ocircline H)", "by simp"], ["", "definition out_ocircline_cmat_cvec :: \"complex_mat \\<Rightarrow> complex_vec \\<Rightarrow> bool\" where\n  [simp]: \"out_ocircline_cmat_cvec H z \\<longleftrightarrow> Re (quad_form z H) > 0\""], ["", "lift_definition out_ocircline_clmat_hcoords :: \"circline_mat \\<Rightarrow> complex_homo_coords \\<Rightarrow> bool\" is out_ocircline_cmat_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition out_ocircline :: \"ocircline \\<Rightarrow> complex_homo \\<Rightarrow> bool\" is out_ocircline_clmat_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>ocircline_eq_clmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx> complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_clmat_hcoords circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_clmat_hcoords circline_mat2\n                          complex_homo_coords2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "fix H H' z z'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\" \"hermitean H' \\<and> H' \\<noteq> mat_zero\"\n             \"z \\<noteq> vec_zero\" \"z' \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean H' \\<and> H' \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "assume \"ocircline_eq_cmat H H'\" \"z \\<approx>\\<^sub>v z'\""], ["proof (state)\nthis:\n  ocircline_eq_cmat H H'\n  z \\<approx>\\<^sub>v z'\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "then"], ["proof (chain)\npicking this:\n  ocircline_eq_cmat H H'\n  z \\<approx>\\<^sub>v z'", "obtain k k' where\n    *: \"0 < k\" \"H' = cor k *\\<^sub>s\\<^sub>m H\" \"k' \\<noteq> 0\" \"z' = k' *\\<^sub>s\\<^sub>v  z\""], ["proof (prove)\nusing this:\n  ocircline_eq_cmat H H'\n  z \\<approx>\\<^sub>v z'\n\ngoal (1 subgoal):\n 1. (\\<And>k k'.\n        \\<lbrakk>0 < k; H' = cor k *\\<^sub>s\\<^sub>m H; k' \\<noteq> 0;\n         z' = k' *\\<^sub>s\\<^sub>v z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  H' = cor k *\\<^sub>s\\<^sub>m H\n  k' \\<noteq> 0\n  z' = k' *\\<^sub>s\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "hence \"quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\""], ["proof (prove)\nusing this:\n  0 < k\n  H' = cor k *\\<^sub>s\\<^sub>m H\n  k' \\<noteq> 0\n  z' = k' *\\<^sub>s\\<^sub>v z\n\ngoal (1 subgoal):\n 1. quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H", "by (simp add: quad_form_scale_v quad_form_scale_m del: vec_cnj_sv quad_form_def)"], ["proof (state)\nthis:\n  quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "hence \"Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\""], ["proof (prove)\nusing this:\n  quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\n\ngoal (1 subgoal):\n 1. Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)", "using hh quad_form_hermitean_real[of H]"], ["proof (prove)\nusing this:\n  quad_form z' H' = cor k * cor ((cmod k')\\<^sup>2) * quad_form z H\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean H' \\<and> H' \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n  hermitean H \\<Longrightarrow> is_real (quad_form ?z H)\n\ngoal (1 subgoal):\n 1. Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 complex_homo_coords1\n       complex_homo_coords2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        ocircline_eq_cmat circline_mat1 circline_mat2;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec circline_mat1\n                          complex_homo_coords1 =\n                         out_ocircline_cmat_cvec circline_mat2\n                          complex_homo_coords2", "thus \"out_ocircline_cmat_cvec H z = out_ocircline_cmat_cvec H' z'\""], ["proof (prove)\nusing this:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n\ngoal (1 subgoal):\n 1. out_ocircline_cmat_cvec H z = out_ocircline_cmat_cvec H' z'", "using \\<open>k > 0\\<close> \\<open>k' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n  0 < k\n  k' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. out_ocircline_cmat_cvec H z = out_ocircline_cmat_cvec H' z'", "using zero_less_mult_pos"], ["proof (prove)\nusing this:\n  Re (quad_form z' H') = k * (cmod k')\\<^sup>2 * Re (quad_form z H)\n  0 < k\n  k' \\<noteq> 0\n  \\<lbrakk>(0::?'a) < ?a * ?b; (0::?'a) < ?a\\<rbrakk>\n  \\<Longrightarrow> (0::?'a) < ?b\n\ngoal (1 subgoal):\n 1. out_ocircline_cmat_cvec H z = out_ocircline_cmat_cvec H' z'", "by fastforce"], ["proof (state)\nthis:\n  out_ocircline_cmat_cvec H z = out_ocircline_cmat_cvec H' z'\n\ngoal:\nNo subgoals!", "qed"], ["", "definition disc_compl :: \"ocircline \\<Rightarrow> complex_homo set\" where\n  \"disc_compl H = {z. out_ocircline H z}\""], ["", "text \\<open>These three sets are mutually disjoint and they fill up the entire plane.\\<close>"], ["", "lemma disc_compl_I [simp]:\n  assumes \"out_ocircline H z\"\n  shows \"z \\<in> disc_compl H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> disc_compl H", "using assms"], ["proof (prove)\nusing this:\n  out_ocircline H z\n\ngoal (1 subgoal):\n 1. z \\<in> disc_compl H", "unfolding disc_compl_def"], ["proof (prove)\nusing this:\n  out_ocircline H z\n\ngoal (1 subgoal):\n 1. z \\<in> Collect (out_ocircline H)", "by simp"], ["", "lemma in_on_out:\n  shows \"in_ocircline H z \\<or> on_ocircline H z \\<or> out_ocircline H z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_ocircline H z \\<or> on_ocircline H z \\<or> out_ocircline H z", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H z.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        z \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H z \\<or>\n                         on_circline_cmat_cvec H z \\<or>\n                         out_ocircline_cmat_cvec H z", "using quad_form_hermitean_real"], ["proof (prove)\nusing this:\n  hermitean ?H \\<Longrightarrow> is_real (quad_form ?z ?H)\n\ngoal (1 subgoal):\n 1. \\<And>H z.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        z \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H z \\<or>\n                         on_circline_cmat_cvec H z \\<or>\n                         out_ocircline_cmat_cvec H z", "using complex_eq_if_Re_eq"], ["proof (prove)\nusing this:\n  hermitean ?H \\<Longrightarrow> is_real (quad_form ?z ?H)\n  \\<lbrakk>is_real ?z1.0; is_real ?z2.0\\<rbrakk>\n  \\<Longrightarrow> (?z1.0 = ?z2.0) = (Re ?z1.0 = Re ?z2.0)\n\ngoal (1 subgoal):\n 1. \\<And>H z.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        z \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H z \\<or>\n                         on_circline_cmat_cvec H z \\<or>\n                         out_ocircline_cmat_cvec H z", "by auto"], ["", "lemma in_on_out_univ:\n  shows \"disc H \\<union> disc_compl H \\<union> ocircline_set H = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc H \\<union> disc_compl H \\<union> ocircline_set H = UNIV", "unfolding disc_def disc_compl_def ocircline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (in_ocircline H) \\<union> Collect (out_ocircline H) \\<union>\n    Collect (on_ocircline H) =\n    UNIV", "using in_on_out[of H]"], ["proof (prove)\nusing this:\n  in_ocircline H ?z \\<or> on_ocircline H ?z \\<or> out_ocircline H ?z\n\ngoal (1 subgoal):\n 1. Collect (in_ocircline H) \\<union> Collect (out_ocircline H) \\<union>\n    Collect (on_ocircline H) =\n    UNIV", "by auto"], ["", "lemma disc_inter_disc_compl [simp]:\n  shows \"disc H \\<inter> disc_compl H = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc H \\<inter> disc_compl H = {}", "unfolding disc_def disc_compl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (in_ocircline H) \\<inter> Collect (out_ocircline H) = {}", "by auto (transfer, transfer, simp)"], ["", "lemma disc_inter_ocircline_set [simp]:\n  shows \"disc H \\<inter> ocircline_set H = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc H \\<inter> ocircline_set H = {}", "unfolding disc_def ocircline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (in_ocircline H) \\<inter> Collect (on_ocircline H) = {}", "by auto (transfer, transfer, simp)"], ["", "lemma disc_compl_inter_ocircline_set [simp]:\n  shows \"disc_compl H \\<inter> ocircline_set H = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_compl H \\<inter> ocircline_set H = {}", "unfolding disc_compl_def ocircline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (out_ocircline H) \\<inter> Collect (on_ocircline H) = {}", "by auto (transfer, transfer, simp)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Opposite orientation\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Finding opposite circline is idempotent, and opposite circlines share the same set of points,\nbut exchange disc and its complement.\\<close>"], ["", "definition opposite_ocircline_cmat :: \"complex_mat \\<Rightarrow> complex_mat\" where\n  [simp]: \"opposite_ocircline_cmat H = (-1) *\\<^sub>s\\<^sub>m H\""], ["", "lift_definition opposite_ocircline_clmat :: \"circline_mat \\<Rightarrow> circline_mat\" is opposite_ocircline_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       hermitean prod \\<and> prod \\<noteq> mat_zero \\<Longrightarrow>\n       hermitean (opposite_ocircline_cmat prod) \\<and>\n       opposite_ocircline_cmat prod \\<noteq> mat_zero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lift_definition opposite_ocircline :: \"ocircline \\<Rightarrow> ocircline\" is opposite_ocircline_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       ocircline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       ocircline_eq_clmat (opposite_ocircline_clmat circline_mat1)\n        (opposite_ocircline_clmat circline_mat2)", "by transfer auto"], ["", "lemma opposite_ocircline_involution [simp]:\n  shows \"opposite_ocircline (opposite_ocircline H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. opposite_ocircline (opposite_ocircline H) = H", "by (transfer, transfer) (auto, rule_tac x=\"1\" in exI, simp)"], ["", "lemma on_circline_opposite_ocircline_cmat [simp]:\n  assumes \"hermitean H \\<and> H \\<noteq> mat_zero\" and \"z \\<noteq> vec_zero\"\n  shows \"on_circline_cmat_cvec (opposite_ocircline_cmat H) z = on_circline_cmat_cvec H z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec (opposite_ocircline_cmat H) z =\n    on_circline_cmat_cvec H z", "using assms"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec (opposite_ocircline_cmat H) z =\n    on_circline_cmat_cvec H z", "by (simp add: quad_form_scale_m del: quad_form_def)"], ["", "lemma on_circline_opposite_ocircline [simp]:\n  shows \"on_ocircline (opposite_ocircline H) z \\<longleftrightarrow> on_ocircline H z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_ocircline (opposite_ocircline H) z = on_ocircline H z", "using on_circline_opposite_ocircline_cmat"], ["proof (prove)\nusing this:\n  \\<lbrakk>hermitean ?H \\<and> ?H \\<noteq> mat_zero;\n   ?z \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> on_circline_cmat_cvec (opposite_ocircline_cmat ?H) ?z =\n                    on_circline_cmat_cvec ?H ?z\n\ngoal (1 subgoal):\n 1. on_ocircline (opposite_ocircline H) z = on_ocircline H z", "by (transfer, transfer, simp)"], ["", "lemma ocircline_set_opposite_ocircline [simp]:\n  shows \"ocircline_set (opposite_ocircline H) = ocircline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_set (opposite_ocircline H) = ocircline_set H", "unfolding ocircline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (on_ocircline (opposite_ocircline H)) = Collect (on_ocircline H)", "by auto"], ["", "lemma disc_compl_opposite_ocircline [simp]:\n  shows \"disc_compl (opposite_ocircline H) = disc H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_compl (opposite_ocircline H) = disc H", "unfolding disc_def disc_compl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (out_ocircline (opposite_ocircline H)) =\n    Collect (in_ocircline H)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       out_ocircline (opposite_ocircline H) x \\<Longrightarrow>\n       in_ocircline H x\n 2. \\<And>x.\n       in_ocircline H x \\<Longrightarrow>\n       out_ocircline (opposite_ocircline H) x", "apply (transfer, transfer)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x H.\n       \\<lbrakk>x \\<noteq> vec_zero; hermitean H \\<and> H \\<noteq> mat_zero;\n        out_ocircline_cmat_cvec (opposite_ocircline_cmat H) x\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H x\n 2. \\<And>x.\n       in_ocircline H x \\<Longrightarrow>\n       out_ocircline (opposite_ocircline H) x", "apply (auto simp add: quad_form_scale_m simp del: quad_form_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       in_ocircline H x \\<Longrightarrow>\n       out_ocircline (opposite_ocircline H) x", "apply (transfer ,transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>x \\<noteq> vec_zero; hermitean H \\<and> H \\<noteq> mat_zero;\n        in_ocircline_cmat_cvec H x\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec (opposite_ocircline_cmat H)\n                          x", "apply (auto simp add: quad_form_scale_m simp del: quad_form_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma disc_opposite_ocircline [simp]:\n  shows \"disc (opposite_ocircline H) = disc_compl H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc (opposite_ocircline H) = disc_compl H", "using disc_compl_opposite_ocircline[of \"opposite_ocircline H\"]"], ["proof (prove)\nusing this:\n  disc_compl (opposite_ocircline (opposite_ocircline H)) =\n  disc (opposite_ocircline H)\n\ngoal (1 subgoal):\n 1. disc (opposite_ocircline H) = disc_compl H", "by simp"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Positive orientation. Conversion between unoriented and oriented circlines\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>Given an oriented circline, one can trivially obtain its unoriented counterpart, and these two\nshare the same set of points.\\<close>"], ["", "lift_definition of_ocircline :: \"ocircline \\<Rightarrow> circline\" is \"id::circline_mat \\<Rightarrow> circline_mat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       ocircline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       circline_eq_clmat (id circline_mat1) (id circline_mat2)", "by transfer (simp, erule exE, force)"], ["", "lemma of_ocircline_opposite_ocircline [simp]:\n  shows \"of_ocircline (opposite_ocircline H) = of_ocircline H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_ocircline (opposite_ocircline H) = of_ocircline H", "by (transfer, transfer) (simp, erule exE, rule_tac x=\"-1\" in exI, simp)"], ["", "lemma on_ocircline_of_circline [simp]:\n  shows \"on_circline (of_ocircline H) z \\<longleftrightarrow> on_ocircline H z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline (of_ocircline H) z = on_ocircline H z", "by (transfer, transfer, simp)"], ["", "lemma circline_set_of_ocircline [simp]:\n  shows \"circline_set (of_ocircline H) = ocircline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set (of_ocircline H) = ocircline_set H", "unfolding ocircline_set_def circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (on_circline (of_ocircline H)) = Collect (on_ocircline H)", "by (safe) (transfer, simp)+"], ["", "lemma inj_of_ocircline:\n  assumes \"of_ocircline H = of_ocircline H'\"\n  shows \"H = H' \\<or> H = opposite_ocircline H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "using assms"], ["proof (prove)\nusing this:\n  of_ocircline H = of_ocircline H'\n\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "by (transfer, transfer) (simp, metis linorder_neqE_linordered_idom minus_of_real_eq_of_real_iff mult_minus1 mult_sm_distribution neg_0_equal_iff_equal neg_less_0_iff_less)"], ["", "lemma inj_ocircline_set:\n  assumes \"ocircline_set H = ocircline_set H'\" and \"ocircline_set H \\<noteq> {}\"\n  shows \"H = H' \\<or> H = opposite_ocircline H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "from assms"], ["proof (chain)\npicking this:\n  ocircline_set H = ocircline_set H'\n  ocircline_set H \\<noteq> {}", "have \"circline_set (of_ocircline H) = circline_set (of_ocircline H')\"\n       \"circline_set (of_ocircline H') \\<noteq> {}\""], ["proof (prove)\nusing this:\n  ocircline_set H = ocircline_set H'\n  ocircline_set H \\<noteq> {}\n\ngoal (1 subgoal):\n 1. circline_set (of_ocircline H) = circline_set (of_ocircline H') &&&\n    circline_set (of_ocircline H') \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  circline_set (of_ocircline H) = circline_set (of_ocircline H')\n  circline_set (of_ocircline H') \\<noteq> {}\n\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "hence \"of_ocircline H = of_ocircline H'\""], ["proof (prove)\nusing this:\n  circline_set (of_ocircline H) = circline_set (of_ocircline H')\n  circline_set (of_ocircline H') \\<noteq> {}\n\ngoal (1 subgoal):\n 1. of_ocircline H = of_ocircline H'", "by (simp add: inj_circline_set)"], ["proof (state)\nthis:\n  of_ocircline H = of_ocircline H'\n\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "thus ?thesis"], ["proof (prove)\nusing this:\n  of_ocircline H = of_ocircline H'\n\ngoal (1 subgoal):\n 1. H = H' \\<or> H = opposite_ocircline H'", "by (rule inj_of_ocircline)"], ["proof (state)\nthis:\n  H = H' \\<or> H = opposite_ocircline H'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Positive orientation.\\<close>"], ["", "text \\<open>Given a representative Hermitean matrix of a circline, it represents exactly one of the two\npossible oriented circlines. The choice of what should be called a positive orientation is\narbitrary. We follow Schwerdtfeger \\cite{schwerdtfeger}, use the leading coefficient $A$ as the\nfirst criterion, and say that circline matrices with $A > 0$ are called positively oriented, and\nwith $A < 0$ negatively oriented. However, Schwerdtfeger did not discuss the possible case of $A =\n0$ (the case of lines), so we had to extend his definition to achieve a total characterization.\\<close>"], ["", "definition pos_oriented_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"pos_oriented_cmat H \\<longleftrightarrow>\n           (let (A, B, C, D) = H\n              in (Re A > 0 \\<or> (Re A = 0 \\<and> ((B \\<noteq> 0 \\<and> arg B > 0) \\<or> (B = 0 \\<and> Re D > 0)))))\""], ["", "lift_definition pos_oriented_clmat :: \"circline_mat \\<Rightarrow> bool\" is pos_oriented_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition pos_oriented :: \"ocircline \\<Rightarrow> bool\" is pos_oriented_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       ocircline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       pos_oriented_clmat circline_mat1 = pos_oriented_clmat circline_mat2", "by transfer\n     (case_tac circline_mat1, case_tac circline_mat2, simp, erule exE, simp, \n      metis mult_pos_pos zero_less_mult_pos)"], ["", "lemma pos_oriented:\n  shows \"pos_oriented H \\<or> pos_oriented (opposite_ocircline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented H \\<or> pos_oriented (opposite_ocircline H)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "moreover"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "hence \"Re A = 0 \\<and> Re D = 0 \\<longrightarrow> B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0", "using hh hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0", "by (cases A, cases D) (auto simp add: Complex_eq)"], ["proof (state)\nthis:\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "moreover"], ["proof (state)\nthis:\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "have \"B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)", "using canon_ang_plus_pi2[of \"arg B\"] arg_bounded[of B]"], ["proof (prove)\nusing this:\n  \\<lbrakk>- 2 * pi < arg B; arg B \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> \\<downharpoonright>arg B + pi\\<downharpoonleft> =\n                    arg B + pi\n  - pi < arg B \\<and> arg B \\<le> pi\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)", "by (auto simp add: arg_uminus)"], ["proof (state)\nthis:\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       hermitean H \\<and> H \\<noteq> mat_zero \\<Longrightarrow>\n       pos_oriented_cmat H \\<or>\n       pos_oriented_cmat (opposite_ocircline_cmat H)", "ultimately"], ["proof (chain)\npicking this:\n  H = (A, B, C, D)\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)", "show \"pos_oriented_cmat H \\<or> pos_oriented_cmat (opposite_ocircline_cmat H)\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H \\<or> pos_oriented_cmat (opposite_ocircline_cmat H)", "by auto"], ["proof (state)\nthis:\n  pos_oriented_cmat H \\<or> pos_oriented_cmat (opposite_ocircline_cmat H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_oriented_opposite_ocircline_cmat [simp]:\n  assumes \"hermitean H \\<and> H \\<noteq> mat_zero\"\n  shows  \"pos_oriented_cmat (opposite_ocircline_cmat H) \\<longleftrightarrow> \\<not> pos_oriented_cmat H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "moreover"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "hence \"Re A = 0 \\<and> Re D = 0 \\<longrightarrow> B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0", "using assms hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0", "by (cases A, cases D) (auto simp add: Complex_eq)"], ["proof (state)\nthis:\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "moreover"], ["proof (state)\nthis:\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "have \"B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)", "using canon_ang_plus_pi2[of \"arg B\"] arg_bounded[of B]"], ["proof (prove)\nusing this:\n  \\<lbrakk>- 2 * pi < arg B; arg B \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> \\<downharpoonright>arg B + pi\\<downharpoonleft> =\n                    arg B + pi\n  - pi < arg B \\<and> arg B \\<le> pi\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)", "by (auto simp add: arg_uminus)"], ["proof (state)\nthis:\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "moreover"], ["proof (state)\nthis:\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "have \"B \\<noteq> 0 \\<and> 0 < arg B \\<longrightarrow> \\<not> 0 < arg (- B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<and> 0 < arg B \\<longrightarrow> \\<not> 0 < arg (- B)", "using canon_ang_plus_pi1[of \"arg B\"] arg_bounded[of B]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < arg B; arg B \\<le> 2 * pi\\<rbrakk>\n  \\<Longrightarrow> \\<downharpoonright>arg B + pi\\<downharpoonleft> =\n                    arg B - pi\n  - pi < arg B \\<and> arg B \\<le> pi\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<and> 0 < arg B \\<longrightarrow> \\<not> 0 < arg (- B)", "by (auto simp add: arg_uminus)"], ["proof (state)\nthis:\n  B \\<noteq> 0 \\<and> 0 < arg B \\<longrightarrow> \\<not> 0 < arg (- B)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "ultimately"], ["proof (chain)\npicking this:\n  H = (A, B, C, D)\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\n  B \\<noteq> 0 \\<and> 0 < arg B \\<longrightarrow> \\<not> 0 < arg (- B)", "show \"pos_oriented_cmat (opposite_ocircline_cmat H) = (\\<not> pos_oriented_cmat H)\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  is_imag A \\<and> is_imag D \\<longrightarrow> B \\<noteq> 0\n  B \\<noteq> 0 \\<and> \\<not> 0 < arg B \\<longrightarrow> 0 < arg (- B)\n  B \\<noteq> 0 \\<and> 0 < arg B \\<longrightarrow> \\<not> 0 < arg (- B)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat (opposite_ocircline_cmat H) =\n    (\\<not> pos_oriented_cmat H)", "by simp (metis not_less_iff_gr_or_eq)"], ["proof (state)\nthis:\n  pos_oriented_cmat (opposite_ocircline_cmat H) =\n  (\\<not> pos_oriented_cmat H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_oriented_opposite_ocircline [simp]:\n  shows \"pos_oriented (opposite_ocircline H) \\<longleftrightarrow> \\<not> pos_oriented H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented (opposite_ocircline H) = (\\<not> pos_oriented H)", "using pos_oriented_opposite_ocircline_cmat"], ["proof (prove)\nusing this:\n  hermitean ?H \\<and> ?H \\<noteq> mat_zero \\<Longrightarrow>\n  pos_oriented_cmat (opposite_ocircline_cmat ?H) =\n  (\\<not> pos_oriented_cmat ?H)\n\ngoal (1 subgoal):\n 1. pos_oriented (opposite_ocircline H) = (\\<not> pos_oriented H)", "by (transfer, transfer, simp)"], ["", "lemma pos_oriented_circle_inf:\n  assumes \"\\<infinity>\\<^sub>h \\<notin> ocircline_set H\"\n  shows \"pos_oriented H \\<longleftrightarrow> \\<infinity>\\<^sub>h \\<notin> disc H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented H = (\\<infinity>\\<^sub>h \\<notin> disc H)", "using assms"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<notin> ocircline_set H\n\ngoal (1 subgoal):\n 1. pos_oriented H = (\\<infinity>\\<^sub>h \\<notin> disc H)", "unfolding ocircline_set_def disc_def"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<notin> Collect (on_ocircline H)\n\ngoal (1 subgoal):\n 1. pos_oriented H = (\\<infinity>\\<^sub>h \\<notin> Collect (in_ocircline H))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> on_ocircline H \\<infinity>\\<^sub>h \\<Longrightarrow>\n    pos_oriented H = (\\<not> in_ocircline H \\<infinity>\\<^sub>h)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         (\\<not> in_ocircline_cmat_cvec H\n                                  \\<infinity>\\<^sub>v)", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         (\\<not> in_ocircline_cmat_cvec H\n                                  \\<infinity>\\<^sub>v)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         (\\<not> in_ocircline_cmat_cvec H\n                                  \\<infinity>\\<^sub>v)", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         (\\<not> in_ocircline_cmat_cvec H\n                                  \\<infinity>\\<^sub>v)", "hence \"is_real A\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_real A", "using hh hermitean_elems"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A", "by auto"], ["proof (state)\nthis:\n  is_real A\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         (\\<not> in_ocircline_cmat_cvec H\n                                  \\<infinity>\\<^sub>v)", "assume \"\\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         (\\<not> in_ocircline_cmat_cvec H\n                                  \\<infinity>\\<^sub>v)", "thus \"pos_oriented_cmat H = (\\<not> in_ocircline_cmat_cvec H  \\<infinity>\\<^sub>v)\""], ["proof (prove)\nusing this:\n  \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H =\n    (\\<not> in_ocircline_cmat_cvec H \\<infinity>\\<^sub>v)", "using HH \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  \\<not> on_circline_cmat_cvec H \\<infinity>\\<^sub>v\n  H = (A, B, C, D)\n  is_real A\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H =\n    (\\<not> in_ocircline_cmat_cvec H \\<infinity>\\<^sub>v)", "by (cases A) (auto simp add: vec_cnj_def Complex_eq)"], ["proof (state)\nthis:\n  pos_oriented_cmat H =\n  (\\<not> in_ocircline_cmat_cvec H \\<infinity>\\<^sub>v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_oriented_euclidean_circle:\n  assumes \"is_circle (of_ocircline H)\"\n          \"(a, r) = euclidean_circle (of_ocircline H)\"\n          \"circline_type (of_ocircline H) < 0\"\n  shows \"pos_oriented H \\<longleftrightarrow> of_complex a \\<in> disc H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented H = (of_complex a \\<in> disc H)", "using assms"], ["proof (prove)\nusing this:\n  is_circle (of_ocircline H)\n  (a, r) = euclidean_circle (of_ocircline H)\n  circline_type (of_ocircline H) < 0\n\ngoal (1 subgoal):\n 1. pos_oriented H = (of_complex a \\<in> disc H)", "unfolding disc_def"], ["proof (prove)\nusing this:\n  is_circle (of_ocircline H)\n  (a, r) = euclidean_circle (of_ocircline H)\n  circline_type (of_ocircline H) < 0\n\ngoal (1 subgoal):\n 1. pos_oriented H = (of_complex a \\<in> Collect (in_ocircline H))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_circle (of_ocircline H);\n     (a, r) = euclidean_circle (of_ocircline H);\n     circline_type (of_ocircline H) < 0\\<rbrakk>\n    \\<Longrightarrow> pos_oriented H = in_ocircline H (of_complex a)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "fix H a r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "hence \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using hh hermitean_elems"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "assume *: \"\\<not> circline_A0_cmat (id H)\" \"(a, r) = euclidean_circle_cmat (id H)\" \"circline_type_cmat (id H) < 0\""], ["proof (state)\nthis:\n  \\<not> circline_A0_cmat (id H)\n  (a, r) = euclidean_circle_cmat (id H)\n  circline_type_cmat (id H) < 0\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "hence \"A \\<noteq> 0\" \"Re A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat (id H)\n  (a, r) = euclidean_circle_cmat (id H)\n  circline_type_cmat (id H) < 0\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0 &&& Re A \\<noteq> 0", "using HH \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat (id H)\n  (a, r) = euclidean_circle_cmat (id H)\n  circline_type_cmat (id H) < 0\n  H = (A, B, C, D)\n  is_real A\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0 &&& Re A \\<noteq> 0", "by (case_tac[!] A) (auto simp add: Complex_eq)"], ["proof (state)\nthis:\n  A \\<noteq> 0\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "have \"Re (A*D - B*C) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (A * D - B * C) < 0", "using \\<open>circline_type_cmat (id H) < 0\\<close> HH"], ["proof (prove)\nusing this:\n  circline_type_cmat (id H) < 0\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. Re (A * D - B * C) < 0", "by simp"], ["proof (state)\nthis:\n  Re (A * D - B * C) < 0\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "have **: \"(A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A) = (A*D - B*C) / A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A) = (A * D - B * C) / A", "using \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A) = (A * D - B * C) / A", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A) = (A * D - B * C) / A\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "hence ***: \"0 < Re A \\<longleftrightarrow> Re ((A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A)) < 0\""], ["proof (prove)\nusing this:\n  (A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A) = (A * D - B * C) / A\n\ngoal (1 subgoal):\n 1. (0 < Re A) =\n    (Re ((A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A)) < 0)", "using \\<open>is_real A\\<close> \\<open>A \\<noteq> 0\\<close> \\<open>Re (A*D - B*C) < 0\\<close>"], ["proof (prove)\nusing this:\n  (A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A) = (A * D - B * C) / A\n  is_real A\n  A \\<noteq> 0\n  Re (A * D - B * C) < 0\n\ngoal (1 subgoal):\n 1. (0 < Re A) =\n    (Re ((A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A)) < 0)", "by (simp add: Re_divide_real divide_less_0_iff)"], ["proof (state)\nthis:\n  (0 < Re A) = (Re ((A * (D * cnj A) - B * (C * cnj A)) / (A * cnj A)) < 0)\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "have \"Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\" if \"Re A > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)", "using HH * \\<open>is_real A\\<close> that"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  \\<not> circline_A0_cmat (id H)\n  (a, r) = euclidean_circle_cmat (id H)\n  circline_type_cmat (id H) < 0\n  is_real A\n  0 < Re A\n\ngoal (1 subgoal):\n 1. Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)", "by simp (smt \"**\" \"***\" cnj.simps(1) cnj.simps(2) complex_eq diff_divide_distrib left_diff_distrib'\n               minus_complex.simps(1) mult.commute nonzero_mult_div_cancel_right)?"], ["proof (state)\nthis:\n  0 < Re A \\<Longrightarrow>\n  Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "moreover"], ["proof (state)\nthis:\n  0 < Re A \\<Longrightarrow>\n  Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "have \"Re A > 0\" if \"Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re A", "using HH * \\<open>is_real A\\<close> that"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  \\<not> circline_A0_cmat (id H)\n  (a, r) = euclidean_circle_cmat (id H)\n  circline_type_cmat (id H) < 0\n  is_real A\n  Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\n\ngoal (1 subgoal):\n 1. 0 < Re A", "by simp (smt \"**\" \"***\" cnj.simps(1) cnj.simps(2) complex_eq diff_divide_distrib left_diff_distrib'\n               minus_complex.simps(1) mult.commute nonzero_mult_div_cancel_right)?"], ["proof (state)\nthis:\n  Re D - Re (cnj B * B / cnj A)\n  < Re ((C - cnj B * A / cnj A) * B / A) \\<Longrightarrow>\n  0 < Re A\n\ngoal (1 subgoal):\n 1. \\<And>H a r.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat (id H);\n        (a, r) = euclidean_circle_cmat (id H);\n        circline_type_cmat (id H) < 0\\<rbrakk>\n       \\<Longrightarrow> pos_oriented_cmat H =\n                         in_ocircline_cmat_cvec H (of_complex_cvec a)", "ultimately"], ["proof (chain)\npicking this:\n  0 < Re A \\<Longrightarrow>\n  Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\n  Re D - Re (cnj B * B / cnj A)\n  < Re ((C - cnj B * A / cnj A) * B / A) \\<Longrightarrow>\n  0 < Re A", "show \"pos_oriented_cmat H = in_ocircline_cmat_cvec H (of_complex_cvec a)\""], ["proof (prove)\nusing this:\n  0 < Re A \\<Longrightarrow>\n  Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\n  Re D - Re (cnj B * B / cnj A)\n  < Re ((C - cnj B * A / cnj A) * B / A) \\<Longrightarrow>\n  0 < Re A\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H = in_ocircline_cmat_cvec H (of_complex_cvec a)", "using HH \\<open>Re A \\<noteq> 0\\<close> * \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  0 < Re A \\<Longrightarrow>\n  Re D - Re (cnj B * B / cnj A) < Re ((C - cnj B * A / cnj A) * B / A)\n  Re D - Re (cnj B * B / cnj A)\n  < Re ((C - cnj B * A / cnj A) * B / A) \\<Longrightarrow>\n  0 < Re A\n  H = (A, B, C, D)\n  Re A \\<noteq> 0\n  \\<not> circline_A0_cmat (id H)\n  (a, r) = euclidean_circle_cmat (id H)\n  circline_type_cmat (id H) < 0\n  is_real A\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H = in_ocircline_cmat_cvec H (of_complex_cvec a)", "by (auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  pos_oriented_cmat H = in_ocircline_cmat_cvec H (of_complex_cvec a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Introduce positive orientation\\<close>"], ["", "definition of_circline_cmat :: \"complex_mat \\<Rightarrow> complex_mat\" where\n [simp]: \"of_circline_cmat H = (if pos_oriented_cmat H then H else opposite_ocircline_cmat H)\""], ["", "lift_definition of_circline_clmat :: \"circline_mat \\<Rightarrow> circline_mat\" is of_circline_cmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       hermitean prod \\<and> prod \\<noteq> mat_zero \\<Longrightarrow>\n       hermitean (of_circline_cmat prod) \\<and>\n       of_circline_cmat prod \\<noteq> mat_zero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "lemma of_circline_clmat_def':\n  shows \"of_circline_clmat H = (if pos_oriented_clmat H then H else opposite_ocircline_clmat H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_circline_clmat H =\n    (if pos_oriented_clmat H then H else opposite_ocircline_clmat H)", "by transfer simp"], ["", "lemma pos_oriented_cmat_mult_positive':\n  assumes\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\" and\n    \"\\<exists>k. k > 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\" and\n    \"pos_oriented_cmat H1\"\n  shows \"pos_oriented_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H2", "obtain A1 B1 C1 D1 A2 B2 C2 D2\n    where HH: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H2", "using assms"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k>0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  pos_oriented_cmat H1\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H2", "by fastforce"], ["proof (state)\nthis:\n  pos_oriented_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_oriented_cmat_mult_positive:\n  assumes\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\" and\n    \"\\<exists>k. k > 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\"\n  shows \n    \"pos_oriented_cmat H1 \\<longleftrightarrow> pos_oriented_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "from assms(3)"], ["proof (chain)\npicking this:\n  \\<exists>k>0. H2 = cor k *\\<^sub>s\\<^sub>m H1", "obtain k where \"k > 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  \\<exists>k>0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        0 < k \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "hence \"\\<exists>k. k > 0 \\<and> H1 = cor k *\\<^sub>s\\<^sub>m H2\""], ["proof (prove)\nusing this:\n  0 < k \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<exists>k>0. H1 = cor k *\\<^sub>s\\<^sub>m H2", "by (rule_tac x=\"1/k\" in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>k>0. H1 = cor k *\\<^sub>s\\<^sub>m H2\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>k>0. H1 = cor k *\\<^sub>s\\<^sub>m H2\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "using assms pos_oriented_cmat_mult_positive'"], ["proof (prove)\nusing this:\n  \\<exists>k>0. H1 = cor k *\\<^sub>s\\<^sub>m H2\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k>0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  \\<lbrakk>hermitean ?H1.0 \\<and> ?H1.0 \\<noteq> mat_zero;\n   hermitean ?H2.0 \\<and> ?H2.0 \\<noteq> mat_zero;\n   \\<exists>k>0. ?H2.0 = cor k *\\<^sub>s\\<^sub>m ?H1.0;\n   pos_oriented_cmat ?H1.0\\<rbrakk>\n  \\<Longrightarrow> pos_oriented_cmat ?H2.0\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "by blast"], ["proof (state)\nthis:\n  pos_oriented_cmat H1 = pos_oriented_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_oriented_cmat_mult_negative:\n  assumes\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\" and\n    \"\\<exists>k. k < 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\"\n  shows\n    \"pos_oriented_cmat H1 \\<longleftrightarrow> \\<not> pos_oriented_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "using assms"], ["proof (prove)\nusing this:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n     hermitean H2 \\<and> H2 \\<noteq> mat_zero;\n     \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\\<rbrakk>\n    \\<Longrightarrow> pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "obtain A B C D A1 B1 C1 D1\n    where *: \"H1 = (A, B, C, D)\" \"H2 = (A1, B1, C1, D1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D A1 B1 C1 D1.\n        \\<lbrakk>H1 = (A, B, C, D); H2 = (A1, B1, C1, D1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2) auto"], ["proof (state)\nthis:\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n     hermitean H2 \\<and> H2 \\<noteq> mat_zero;\n     \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\\<rbrakk>\n    \\<Longrightarrow> pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "hence **: \"is_real A\" \"is_real D\" \"is_real A1\" \"is_real D1\" \"B = 0 \\<longleftrightarrow> C = 0\" \"B1 = 0 \\<longleftrightarrow> C1 = 0\""], ["proof (prove)\nusing this:\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n\ngoal (1 subgoal):\n 1. (is_real A &&& is_real D &&& is_real A1) &&&\n    is_real D1 &&& (B = 0) = (C = 0) &&& (B1 = 0) = (C1 = 0)", "using assms hermitean_elems[of A B C D] hermitean_elems[of A1 B1 C1 D1]"], ["proof (prove)\nusing this:\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> is_real A1\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> is_real D1\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> B1 = cnj C1\n  hermitean (A1, B1, C1, D1) \\<Longrightarrow> cnj B1 = C1\n\ngoal (1 subgoal):\n 1. (is_real A &&& is_real D &&& is_real A1) &&&\n    is_real D1 &&& (B = 0) = (C = 0) &&& (B1 = 0) = (C1 = 0)", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n     hermitean H2 \\<and> H2 \\<noteq> mat_zero;\n     \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\\<rbrakk>\n    \\<Longrightarrow> pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_oriented_cmat H1 \\<Longrightarrow> \\<not> pos_oriented_cmat H2\n 2. \\<not> pos_oriented_cmat H2 \\<Longrightarrow> pos_oriented_cmat H1", "assume H1: \"pos_oriented_cmat H1\""], ["proof (state)\nthis:\n  pos_oriented_cmat H1\n\ngoal (2 subgoals):\n 1. pos_oriented_cmat H1 \\<Longrightarrow> \\<not> pos_oriented_cmat H2\n 2. \\<not> pos_oriented_cmat H2 \\<Longrightarrow> pos_oriented_cmat H1", "show \"\\<not> pos_oriented_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "proof (cases \"Re A > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2\n 2. \\<not> 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "case True"], ["proof (state)\nthis:\n  0 < Re A\n\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2\n 2. \\<not> 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < Re A\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "using assms * ** mult_neg_pos"], ["proof (prove)\nusing this:\n  0 < Re A\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n  \\<lbrakk>?a < (0::?'a); (0::?'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> ?a * ?b < (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "by fastforce"], ["proof (state)\nthis:\n  \\<not> pos_oriented_cmat H2\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < Re A\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "proof (cases \"B = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2\n 2. B \\<noteq> 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "case True"], ["proof (state)\nthis:\n  B = 0\n\ngoal (2 subgoals):\n 1. B = 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2\n 2. B \\<noteq> 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  B = 0\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "using assms * ** H1 \\<open>\\<not> Re A > 0\\<close> mult_neg_pos"], ["proof (prove)\nusing this:\n  B = 0\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n  pos_oriented_cmat H1\n  \\<not> 0 < Re A\n  \\<lbrakk>?a < (0::?'a); (0::?'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> ?a * ?b < (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "by fastforce"], ["proof (state)\nthis:\n  \\<not> pos_oriented_cmat H2\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "case False"], ["proof (state)\nthis:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow> \\<not> pos_oriented_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "using arg_uminus_opposite_sign[of B] arg_mult_real_negative"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  B \\<noteq> 0 \\<Longrightarrow> (0 < arg B) = (\\<not> 0 < arg (- B))\n  ?k < 0 \\<Longrightarrow> arg (cor ?k * ?z) = arg (- ?z)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "using assms * ** H1 \\<open>\\<not> Re A > 0\\<close> mult_neg_pos"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  B \\<noteq> 0 \\<Longrightarrow> (0 < arg B) = (\\<not> 0 < arg (- B))\n  ?k < 0 \\<Longrightarrow> arg (cor ?k * ?z) = arg (- ?z)\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n  pos_oriented_cmat H1\n  \\<not> 0 < Re A\n  \\<lbrakk>?a < (0::?'a); (0::?'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> ?a * ?b < (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2", "by fastforce"], ["proof (state)\nthis:\n  \\<not> pos_oriented_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> pos_oriented_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> pos_oriented_cmat H2\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2 \\<Longrightarrow> pos_oriented_cmat H1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2 \\<Longrightarrow> pos_oriented_cmat H1", "assume H2: \"\\<not> pos_oriented_cmat H2\""], ["proof (state)\nthis:\n  \\<not> pos_oriented_cmat H2\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented_cmat H2 \\<Longrightarrow> pos_oriented_cmat H1", "show \"pos_oriented_cmat H1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "proof (cases \"Re A > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1\n 2. \\<not> 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1", "case True"], ["proof (state)\nthis:\n  0 < Re A\n\ngoal (2 subgoals):\n 1. 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1\n 2. \\<not> 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < Re A\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "using * ** mult_neg_pos"], ["proof (prove)\nusing this:\n  0 < Re A\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n  \\<lbrakk>?a < (0::?'a); (0::?'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> ?a * ?b < (0::?'a)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "by fastforce"], ["proof (state)\nthis:\n  pos_oriented_cmat H1\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < Re A\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re A \\<Longrightarrow> pos_oriented_cmat H1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "proof (cases \"B = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = 0 \\<Longrightarrow> pos_oriented_cmat H1\n 2. B \\<noteq> 0 \\<Longrightarrow> pos_oriented_cmat H1", "case True"], ["proof (state)\nthis:\n  B = 0\n\ngoal (2 subgoals):\n 1. B = 0 \\<Longrightarrow> pos_oriented_cmat H1\n 2. B \\<noteq> 0 \\<Longrightarrow> pos_oriented_cmat H1", "thus ?thesis"], ["proof (prove)\nusing this:\n  B = 0\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "using assms * ** H2 \\<open>\\<not> Re A > 0\\<close>"], ["proof (prove)\nusing this:\n  B = 0\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n  \\<not> pos_oriented_cmat H2\n  \\<not> 0 < Re A\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "by simp (smt arg_0_iff arg_complex_of_real_negative arg_complex_of_real_positive arg_mult_eq complex_of_real_Re mult.right_neutral mult_eq_0_iff of_real_0 of_real_1 zero_complex.simps(1))"], ["proof (state)\nthis:\n  pos_oriented_cmat H1\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow> pos_oriented_cmat H1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow> pos_oriented_cmat H1", "case False"], ["proof (state)\nthis:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow> pos_oriented_cmat H1", "thus ?thesis"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "using assms \\<open>\\<not> Re A > 0\\<close> H2 * **"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  \\<not> 0 < Re A\n  \\<not> pos_oriented_cmat H2\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "using arg_uminus_opposite_sign[of B]"], ["proof (prove)\nusing this:\n  B \\<noteq> 0\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1\n  \\<not> 0 < Re A\n  \\<not> pos_oriented_cmat H2\n  H1 = (A, B, C, D)\n  H2 = (A1, B1, C1, D1)\n  is_real A\n  is_real D\n  is_real A1\n  is_real D1\n  (B = 0) = (C = 0)\n  (B1 = 0) = (C1 = 0)\n  B \\<noteq> 0 \\<Longrightarrow> (0 < arg B) = (\\<not> 0 < arg (- B))\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1", "by (cases \"Re A = 0\", auto simp add: mult_neg_neg)"], ["proof (state)\nthis:\n  pos_oriented_cmat H1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pos_oriented_cmat H1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pos_oriented_cmat H1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition of_circline :: \"circline \\<Rightarrow> ocircline\" is of_circline_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       ocircline_eq_clmat (of_circline_clmat circline_mat1)\n        (of_circline_clmat circline_mat2)", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat (of_circline_cmat circline_mat1)\n                          (of_circline_cmat circline_mat2)", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat (of_circline_cmat circline_mat1)\n                          (of_circline_cmat circline_mat2)", "assume hh:\n    \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\"\n    \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat (of_circline_cmat circline_mat1)\n                          (of_circline_cmat circline_mat2)", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat (of_circline_cmat circline_mat1)\n                          (of_circline_cmat circline_mat2)", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where *: \"k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<noteq> 0 \\<and>\n        H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat (of_circline_cmat circline_mat1)\n                          (of_circline_cmat circline_mat2)", "show \"ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "proof (cases \"k > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\n 2. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "case True"], ["proof (state)\nthis:\n  0 < k\n\ngoal (2 subgoals):\n 1. 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\n 2. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "hence \"pos_oriented_cmat H1 = pos_oriented_cmat H2\""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "using * pos_oriented_cmat_mult_positive[OF hh]"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n  \\<exists>k>0. H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n  pos_oriented_cmat H1 = pos_oriented_cmat H2\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = pos_oriented_cmat H2", "by blast"], ["proof (state)\nthis:\n  pos_oriented_cmat H1 = pos_oriented_cmat H2\n\ngoal (2 subgoals):\n 1. 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\n 2. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pos_oriented_cmat H1 = pos_oriented_cmat H2\n\ngoal (1 subgoal):\n 1. ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "using hh * \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  pos_oriented_cmat H1 = pos_oriented_cmat H2\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n  0 < k\n\ngoal (1 subgoal):\n 1. ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "apply (simp del: pos_oriented_cmat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k\\<rbrakk>\n    \\<Longrightarrow> (pos_oriented_cmat\n                        (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                       (\\<exists>ka>0.\n                           cor k *\\<^sub>s\\<^sub>m H1 =\n                           cor ka *\\<^sub>s\\<^sub>m H1)) \\<and>\n                      (\\<not> pos_oriented_cmat\n                               (cor k *\\<^sub>s\\<^sub>m\n                                H1) \\<longrightarrow>\n                       (\\<exists>ka>0.\n                           (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                           (- cor ka) *\\<^sub>s\\<^sub>m H1))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k\\<rbrakk>\n    \\<Longrightarrow> pos_oriented_cmat\n                       (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          cor k *\\<^sub>s\\<^sub>m H1 =\n                          cor ka *\\<^sub>s\\<^sub>m H1)\n 2. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k\\<rbrakk>\n    \\<Longrightarrow> \\<not> pos_oriented_cmat\n                              (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                          (- cor ka) *\\<^sub>s\\<^sub>m H1)", "apply (rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k;\n     pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka>0.\n                         cor k *\\<^sub>s\\<^sub>m H1 =\n                         cor ka *\\<^sub>s\\<^sub>m H1\n 2. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k\\<rbrakk>\n    \\<Longrightarrow> \\<not> pos_oriented_cmat\n                              (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                          (- cor ka) *\\<^sub>s\\<^sub>m H1)", "apply (simp, rule_tac x=k in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k\\<rbrakk>\n    \\<Longrightarrow> \\<not> pos_oriented_cmat\n                              (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                          (- cor ka) *\\<^sub>s\\<^sub>m H1)", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1);\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; 0 < k;\n     \\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka>0.\n                         (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                         (- cor ka) *\\<^sub>s\\<^sub>m H1", "apply (simp, rule_tac x=k in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < k\n\ngoal (1 subgoal):\n 1. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "hence \"k < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < k\n\ngoal (1 subgoal):\n 1. k < 0", "using *"], ["proof (prove)\nusing this:\n  \\<not> 0 < k\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. k < 0", "by simp"], ["proof (state)\nthis:\n  k < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "hence \"pos_oriented_cmat H1 \\<longleftrightarrow> \\<not> (pos_oriented_cmat H2)\""], ["proof (prove)\nusing this:\n  k < 0\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "using * pos_oriented_cmat_mult_negative[OF hh]"], ["proof (prove)\nusing this:\n  k < 0\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n  \\<exists>k<0. H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n  pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)\n\ngoal (1 subgoal):\n 1. pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)", "by blast"], ["proof (state)\nthis:\n  pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < k \\<Longrightarrow>\n    ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)\n\ngoal (1 subgoal):\n 1. ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "using hh * \\<open>k < 0\\<close>"], ["proof (prove)\nusing this:\n  pos_oriented_cmat H1 = (\\<not> pos_oriented_cmat H2)\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n  k < 0\n\ngoal (1 subgoal):\n 1. ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)", "apply (simp del: pos_oriented_cmat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0\\<rbrakk>\n    \\<Longrightarrow> (pos_oriented_cmat\n                        (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                       (\\<exists>ka>0.\n                           cor k *\\<^sub>s\\<^sub>m H1 =\n                           (- cor ka) *\\<^sub>s\\<^sub>m H1)) \\<and>\n                      (\\<not> pos_oriented_cmat\n                               (cor k *\\<^sub>s\\<^sub>m\n                                H1) \\<longrightarrow>\n                       (\\<exists>ka>0.\n                           (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                           cor ka *\\<^sub>s\\<^sub>m H1))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0\\<rbrakk>\n    \\<Longrightarrow> pos_oriented_cmat\n                       (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          cor k *\\<^sub>s\\<^sub>m H1 =\n                          (- cor ka) *\\<^sub>s\\<^sub>m H1)\n 2. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> pos_oriented_cmat\n                              (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                          cor ka *\\<^sub>s\\<^sub>m H1)", "apply (rule impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0;\n     pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka>0.\n                         cor k *\\<^sub>s\\<^sub>m H1 =\n                         (- cor ka) *\\<^sub>s\\<^sub>m H1\n 2. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> pos_oriented_cmat\n                              (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                          cor ka *\\<^sub>s\\<^sub>m H1)", "apply (simp, rule_tac x=\"-k\" in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0\\<rbrakk>\n    \\<Longrightarrow> \\<not> pos_oriented_cmat\n                              (cor k *\\<^sub>s\\<^sub>m H1) \\<longrightarrow>\n                      (\\<exists>ka>0.\n                          (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                          cor ka *\\<^sub>s\\<^sub>m H1)", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pos_oriented_cmat H1 =\n             (\\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1));\n     hermitean H1 \\<and> H1 \\<noteq> (0, 0, 0, 0);\n     hermitean (cor k *\\<^sub>s\\<^sub>m H1) \\<and>\n     cor k *\\<^sub>s\\<^sub>m H1 \\<noteq> (0, 0, 0, 0);\n     H2 = cor k *\\<^sub>s\\<^sub>m H1; k < 0;\n     \\<not> pos_oriented_cmat (cor k *\\<^sub>s\\<^sub>m H1)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka>0.\n                         (- cor k) *\\<^sub>s\\<^sub>m H1 =\n                         cor ka *\\<^sub>s\\<^sub>m H1", "apply (simp, rule_tac x=\"-k\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ocircline_eq_cmat (of_circline_cmat H1) (of_circline_cmat H2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_oriented_of_circline [simp]:\n  shows \"pos_oriented (of_circline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented (of_circline H)", "using pos_oriented_opposite_ocircline_cmat"], ["proof (prove)\nusing this:\n  hermitean ?H \\<and> ?H \\<noteq> mat_zero \\<Longrightarrow>\n  pos_oriented_cmat (opposite_ocircline_cmat ?H) =\n  (\\<not> pos_oriented_cmat ?H)\n\ngoal (1 subgoal):\n 1. pos_oriented (of_circline H)", "by (transfer, transfer, simp)"], ["", "lemma of_ocircline_of_circline [simp]:\n  shows \"of_ocircline (of_circline H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_ocircline (of_circline H) = H", "apply (transfer, auto simp add: of_circline_clmat_def')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<not> pos_oriented_clmat H \\<Longrightarrow>\n       circline_eq_clmat (opposite_ocircline_clmat H) H", "apply (transfer, simp, rule_tac x=\"-1\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma of_circline_of_ocircline_pos_oriented [simp]:\n  assumes \"pos_oriented H\"\n  shows \"of_circline (of_ocircline H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H) = H", "using assms"], ["proof (prove)\nusing this:\n  pos_oriented H\n\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H) = H", "by (transfer, transfer, simp, rule_tac x=1 in exI, simp)"], ["", "lemma inj_of_circline:\n  assumes \"of_circline H = of_circline H'\"\n  shows \"H = H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = H'", "using assms"], ["proof (prove)\nusing this:\n  of_circline H = of_circline H'\n\ngoal (1 subgoal):\n 1. H = H'", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H H' Ha H'a.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H');\n        ocircline_eq_clmat (of_circline_clmat Ha)\n         (of_circline_clmat H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "fix H H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H H' Ha H'a.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H');\n        ocircline_eq_clmat (of_circline_clmat Ha)\n         (of_circline_clmat H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "assume \"ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H')\""], ["proof (state)\nthis:\n  ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H')\n\ngoal (1 subgoal):\n 1. \\<And>H H' Ha H'a.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H');\n        ocircline_eq_clmat (of_circline_clmat Ha)\n         (of_circline_clmat H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "then"], ["proof (chain)\npicking this:\n  ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H')", "obtain k where \"k > 0\" \"of_circline_cmat H' = cor k *\\<^sub>s\\<^sub>m of_circline_cmat H\""], ["proof (prove)\nusing this:\n  ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H')\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k;\n         of_circline_cmat H' =\n         cor k *\\<^sub>s\\<^sub>m of_circline_cmat H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  of_circline_cmat H' = cor k *\\<^sub>s\\<^sub>m of_circline_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H H' Ha H'a.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (of_circline_cmat H) (of_circline_cmat H');\n        ocircline_eq_clmat (of_circline_clmat Ha)\n         (of_circline_clmat H'a)\\<rbrakk>\n       \\<Longrightarrow> circline_eq_cmat H H'", "thus \"circline_eq_cmat H H'\""], ["proof (prove)\nusing this:\n  0 < k\n  of_circline_cmat H' = cor k *\\<^sub>s\\<^sub>m of_circline_cmat H\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H H'", "using mult_sm_inv_l[of \"-1\" \"H'\" \"cor k *\\<^sub>s\\<^sub>m H\"]"], ["proof (prove)\nusing this:\n  0 < k\n  of_circline_cmat H' = cor k *\\<^sub>s\\<^sub>m of_circline_cmat H\n  \\<lbrakk>- 1 \\<noteq> 0;\n   (- 1) *\\<^sub>s\\<^sub>m H' = cor k *\\<^sub>s\\<^sub>m H\\<rbrakk>\n  \\<Longrightarrow> H' =\n                    (1 / - 1) *\\<^sub>s\\<^sub>m (cor k *\\<^sub>s\\<^sub>m H)\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H H'", "using mult_sm_inv_l[of \"-1\" \"H'\" \"(- (cor k)) *\\<^sub>s\\<^sub>m H\"]"], ["proof (prove)\nusing this:\n  0 < k\n  of_circline_cmat H' = cor k *\\<^sub>s\\<^sub>m of_circline_cmat H\n  \\<lbrakk>- 1 \\<noteq> 0;\n   (- 1) *\\<^sub>s\\<^sub>m H' = cor k *\\<^sub>s\\<^sub>m H\\<rbrakk>\n  \\<Longrightarrow> H' =\n                    (1 / - 1) *\\<^sub>s\\<^sub>m (cor k *\\<^sub>s\\<^sub>m H)\n  \\<lbrakk>- 1 \\<noteq> 0;\n   (- 1) *\\<^sub>s\\<^sub>m H' = (- cor k) *\\<^sub>s\\<^sub>m H\\<rbrakk>\n  \\<Longrightarrow> H' =\n                    (1 / - 1) *\\<^sub>s\\<^sub>m\n                    ((- cor k) *\\<^sub>s\\<^sub>m H)\n\ngoal (1 subgoal):\n 1. circline_eq_cmat H H'", "apply (simp split: if_split_asm)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 < k; H' = cor k *\\<^sub>s\\<^sub>m H;\n     case H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D);\n     case cor k *\\<^sub>s\\<^sub>m H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         cor k *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H\n 2. \\<lbrakk>0 < k; H' = (- cor k) *\\<^sub>s\\<^sub>m H;\n     \\<not> (case H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     case (- cor k) *\\<^sub>s\\<^sub>m H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         (- cor k) *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H\n 3. \\<lbrakk>H' = (- cor k) *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case (- cor k) *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     case H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         (- cor k) *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H\n 4. \\<lbrakk>H' = cor k *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case cor k *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     \\<not> (case H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or>\n                B = 0 \\<and> 0 < Re D))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         cor k *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H", "apply (rule_tac x=\"k\" in exI, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < k; H' = (- cor k) *\\<^sub>s\\<^sub>m H;\n     \\<not> (case H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     case (- cor k) *\\<^sub>s\\<^sub>m H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         (- cor k) *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H\n 2. \\<lbrakk>H' = (- cor k) *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case (- cor k) *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     case H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         (- cor k) *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H\n 3. \\<lbrakk>H' = cor k *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case cor k *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     \\<not> (case H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or>\n                B = 0 \\<and> 0 < Re D))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         cor k *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H", "apply (rule_tac x=\"-k\" in exI, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H' = (- cor k) *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case (- cor k) *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     case H of\n     (A, B, C, D) \\<Rightarrow>\n       0 < Re A \\<or>\n       is_imag A \\<and>\n       (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         (- cor k) *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H\n 2. \\<lbrakk>H' = cor k *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case cor k *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     \\<not> (case H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or>\n                B = 0 \\<and> 0 < Re D))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         cor k *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H", "apply (rule_tac x=\"-k\" in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H' = cor k *\\<^sub>s\\<^sub>m H; 0 < k;\n     \\<not> (case cor k *\\<^sub>s\\<^sub>m H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or> B = 0 \\<and> 0 < Re D));\n     \\<not> (case H of\n             (A, B, C, D) \\<Rightarrow>\n               0 < Re A \\<or>\n               is_imag A \\<and>\n               (B \\<noteq> 0 \\<and> 0 < arg B \\<or>\n                B = 0 \\<and> 0 < Re D))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ka.\n                         ka \\<noteq> 0 \\<and>\n                         cor k *\\<^sub>s\\<^sub>m H =\n                         cor ka *\\<^sub>s\\<^sub>m H", "apply (rule_tac x=\"k\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  circline_eq_cmat H H'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_circline_of_ocircline:\n  shows \"of_circline (of_ocircline H') = H' \\<or> \n         of_circline (of_ocircline H') = opposite_ocircline H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "proof (cases \"pos_oriented H'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'\n 2. \\<not> pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "case True"], ["proof (state)\nthis:\n  pos_oriented H'\n\ngoal (2 subgoals):\n 1. pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'\n 2. \\<not> pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "thus ?thesis"], ["proof (prove)\nusing this:\n  pos_oriented H'\n\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "by auto"], ["proof (state)\nthis:\n  of_circline (of_ocircline H') = H' \\<or>\n  of_circline (of_ocircline H') = opposite_ocircline H'\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "case False"], ["proof (state)\nthis:\n  \\<not> pos_oriented H'\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "hence \"pos_oriented (opposite_ocircline H')\""], ["proof (prove)\nusing this:\n  \\<not> pos_oriented H'\n\ngoal (1 subgoal):\n 1. pos_oriented (opposite_ocircline H')", "using pos_oriented"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented H'\n  pos_oriented ?H \\<or> pos_oriented (opposite_ocircline ?H)\n\ngoal (1 subgoal):\n 1. pos_oriented (opposite_ocircline H')", "by auto"], ["proof (state)\nthis:\n  pos_oriented (opposite_ocircline H')\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented H' \\<Longrightarrow>\n    of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "thus ?thesis"], ["proof (prove)\nusing this:\n  pos_oriented (opposite_ocircline H')\n\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "using of_ocircline_opposite_ocircline[of H']"], ["proof (prove)\nusing this:\n  pos_oriented (opposite_ocircline H')\n  of_ocircline (opposite_ocircline H') = of_ocircline H'\n\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "using of_circline_of_ocircline_pos_oriented [of \"opposite_ocircline H'\"]"], ["proof (prove)\nusing this:\n  pos_oriented (opposite_ocircline H')\n  of_ocircline (opposite_ocircline H') = of_ocircline H'\n  pos_oriented (opposite_ocircline H') \\<Longrightarrow>\n  of_circline (of_ocircline (opposite_ocircline H')) = opposite_ocircline H'\n\ngoal (1 subgoal):\n 1. of_circline (of_ocircline H') = H' \\<or>\n    of_circline (of_ocircline H') = opposite_ocircline H'", "by auto"], ["proof (state)\nthis:\n  of_circline (of_ocircline H') = H' \\<or>\n  of_circline (of_ocircline H') = opposite_ocircline H'\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Set of points on oriented and unoriented circlines\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "lemma ocircline_set_of_circline [simp]:\n  shows \"ocircline_set (of_circline H) = circline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_set (of_circline H) = circline_set H", "unfolding ocircline_set_def circline_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (on_ocircline (of_circline H)) = Collect (on_circline H)", "proof (safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       on_ocircline (of_circline H) x \\<Longrightarrow> on_circline H x\n 2. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       on_ocircline (of_circline H) x \\<Longrightarrow> on_circline H x\n 2. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "assume \"on_ocircline (of_circline H) z\""], ["proof (state)\nthis:\n  on_ocircline (of_circline H) z\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       on_ocircline (of_circline H) x \\<Longrightarrow> on_circline H x\n 2. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "thus \"on_circline H z\""], ["proof (prove)\nusing this:\n  on_ocircline (of_circline H) z\n\ngoal (1 subgoal):\n 1. on_circline H z", "by (transfer, transfer, simp del: on_circline_cmat_cvec_def opposite_ocircline_cmat_def split: if_split_asm)"], ["proof (state)\nthis:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "assume \"on_circline H z\""], ["proof (state)\nthis:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       on_circline H x \\<Longrightarrow> on_ocircline (of_circline H) x", "thus \"on_ocircline (of_circline H) z\""], ["proof (prove)\nusing this:\n  on_circline H z\n\ngoal (1 subgoal):\n 1. on_ocircline (of_circline H) z", "by (transfer, transfer, simp del: on_circline_cmat_cvec_def opposite_ocircline_cmat_def split: if_split_asm)"], ["proof (state)\nthis:\n  on_ocircline (of_circline H) z\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Some special oriented circlines and discs\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lift_definition mk_ocircline :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> complex \\<Rightarrow> ocircline\" is mk_circline_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>oriented unit circle and unit disc\\<close>"], ["", "lift_definition ounit_circle :: \"ocircline\" is unit_circle_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma pos_oriented_ounit_circle [simp]: \n  shows \"pos_oriented ounit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented ounit_circle", "by (transfer, transfer, simp)"], ["", "lemma of_ocircline_ounit_circle [simp]:\n  shows \"of_ocircline ounit_circle = unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_ocircline ounit_circle = unit_circle", "by (transfer, transfer, simp)"], ["", "lemma of_circline_unit_circle [simp]:\n  shows \"of_circline (unit_circle) = ounit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_circline unit_circle = ounit_circle", "by (transfer, transfer, simp)"], ["", "lemma ocircline_set_ounit_circle [simp]:\n  shows \"ocircline_set ounit_circle = circline_set unit_circle\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_set ounit_circle = circline_set unit_circle", "apply (subst of_circline_unit_circle[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_set (of_circline unit_circle) = circline_set unit_circle", "apply (subst ocircline_set_of_circline)"], ["proof (prove)\ngoal (1 subgoal):\n 1. circline_set unit_circle = circline_set unit_circle", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition unit_disc :: \"complex_homo set\" where\n  \"unit_disc = disc ounit_circle\""], ["", "definition unit_disc_compl :: \"complex_homo set\" where\n  \"unit_disc_compl = disc_compl ounit_circle\""], ["", "definition unit_circle_set :: \"complex_homo set\" where\n  \"unit_circle_set = circline_set unit_circle\""], ["", "lemma zero_in_unit_disc [simp]:\n  shows \"0\\<^sub>h \\<in> unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> unit_disc", "unfolding unit_disc_def disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> Collect (in_ocircline ounit_circle)", "by (simp, transfer, transfer) (simp add: Let_def vec_cnj_def)"], ["", "lemma one_notin_unit_dic [simp]: \n  shows \"1\\<^sub>h \\<notin> unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>h \\<notin> unit_disc", "unfolding unit_disc_def disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>h \\<notin> Collect (in_ocircline ounit_circle)", "by (simp, transfer, transfer) (simp add: Let_def vec_cnj_def)"], ["", "lemma inf_notin_unit_disc [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<notin> unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> unit_disc", "unfolding unit_disc_def disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> Collect (in_ocircline ounit_circle)", "by (simp, transfer, transfer) (simp add: Let_def vec_cnj_def)"], ["", "lemma unit_disc_iff_cmod_lt_1 [simp]:\n  shows \"of_complex c \\<in> unit_disc \\<longleftrightarrow> cmod c < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex c \\<in> unit_disc) = (cmod c < 1)", "unfolding unit_disc_def disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex c \\<in> Collect (in_ocircline ounit_circle)) = (cmod c < 1)", "by (simp, transfer, transfer, simp add: vec_cnj_def cmod_def power2_eq_square)"], ["", "lemma unit_disc_cmod_square_lt_1 [simp]:\n  assumes \"z \\<in> unit_disc\"\n  shows \"(cmod (to_complex z))\\<^sup>2 < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod (to_complex z))\\<^sup>2 < 1", "using assms inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<in> unit_disc\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. (cmod (to_complex z))\\<^sup>2 < 1", "by (auto simp add: abs_square_less_1)"], ["", "lemma unit_disc_to_complex_inj:\n  assumes \"u \\<in> unit_disc\" and \"v \\<in> unit_disc\"\n  assumes \"to_complex u = to_complex v\"\n  shows \"u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = v", "using assms"], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  to_complex u = to_complex v\n\ngoal (1 subgoal):\n 1. u = v", "using inf_or_of_complex[of u] inf_or_of_complex[of v]"], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  to_complex u = to_complex v\n  u = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. u = of_complex x)\n  v = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. v = of_complex x)\n\ngoal (1 subgoal):\n 1. u = v", "by auto"], ["", "lemma inversion_unit_disc [simp]: \n  shows \"inversion ` unit_disc = unit_disc_compl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion ` unit_disc = unit_disc_compl", "unfolding unit_disc_def unit_disc_compl_def disc_def disc_compl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion ` Collect (in_ocircline ounit_circle) =\n    Collect (out_ocircline ounit_circle)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       in_ocircline ounit_circle xa \\<Longrightarrow>\n       out_ocircline ounit_circle (inversion xa)\n 2. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       in_ocircline ounit_circle xa \\<Longrightarrow>\n       out_ocircline ounit_circle (inversion xa)\n 2. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "assume \"in_ocircline ounit_circle x\""], ["proof (state)\nthis:\n  in_ocircline ounit_circle x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       in_ocircline ounit_circle xa \\<Longrightarrow>\n       out_ocircline ounit_circle (inversion xa)\n 2. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "thus \"out_ocircline ounit_circle (inversion x)\""], ["proof (prove)\nusing this:\n  in_ocircline ounit_circle x\n\ngoal (1 subgoal):\n 1. out_ocircline ounit_circle (inversion x)", "unfolding inversion_def"], ["proof (prove)\nusing this:\n  in_ocircline ounit_circle x\n\ngoal (1 subgoal):\n 1. out_ocircline ounit_circle ((conjugate \\<circ> reciprocal) x)", "by (transfer, transfer, auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  out_ocircline ounit_circle (inversion x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "assume *: \"out_ocircline ounit_circle x\""], ["proof (state)\nthis:\n  out_ocircline ounit_circle x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "show \"x \\<in> inversion ` Collect (in_ocircline ounit_circle)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> inversion ` Collect (in_ocircline ounit_circle)", "proof (rule image_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = inversion ?x\n 2. ?x \\<in> Collect (in_ocircline ounit_circle)", "show \"x = inversion (inversion x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = inversion (inversion x)", "by auto"], ["proof (state)\nthis:\n  x = inversion (inversion x)\n\ngoal (1 subgoal):\n 1. inversion x \\<in> Collect (in_ocircline ounit_circle)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. inversion x \\<in> Collect (in_ocircline ounit_circle)", "show \"inversion x \\<in> Collect (in_ocircline ounit_circle)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion x \\<in> Collect (in_ocircline ounit_circle)", "using *"], ["proof (prove)\nusing this:\n  out_ocircline ounit_circle x\n\ngoal (1 subgoal):\n 1. inversion x \\<in> Collect (in_ocircline ounit_circle)", "unfolding inversion_def"], ["proof (prove)\nusing this:\n  out_ocircline ounit_circle x\n\ngoal (1 subgoal):\n 1. (conjugate \\<circ> reciprocal) x\n    \\<in> Collect (in_ocircline ounit_circle)", "by (simp, transfer, transfer, auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  inversion x \\<in> Collect (in_ocircline ounit_circle)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> inversion ` Collect (in_ocircline ounit_circle)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inversion_unit_disc_compl [simp]: \n  shows \"inversion ` unit_disc_compl = unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion ` unit_disc_compl = unit_disc", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. inversion ` unit_disc_compl = unit_disc", "have \"inversion ` (inversion ` unit_disc) = unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion ` inversion ` unit_disc = unit_disc", "by (auto simp del: inversion_unit_disc simp add: image_iff)"], ["proof (state)\nthis:\n  inversion ` inversion ` unit_disc = unit_disc\n\ngoal (1 subgoal):\n 1. inversion ` unit_disc_compl = unit_disc", "thus ?thesis"], ["proof (prove)\nusing this:\n  inversion ` inversion ` unit_disc = unit_disc\n\ngoal (1 subgoal):\n 1. inversion ` unit_disc_compl = unit_disc", "by simp"], ["proof (state)\nthis:\n  inversion ` unit_disc_compl = unit_disc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inversion_noteq_unit_disc:\n  assumes \"u \\<in> unit_disc\" and \"v \\<in> unit_disc\"\n  shows \"inversion u \\<noteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "from assms"], ["proof (chain)\npicking this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc", "have \"inversion u \\<in> unit_disc_compl\""], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. inversion u \\<in> unit_disc_compl", "by (metis image_eqI inversion_unit_disc)"], ["proof (state)\nthis:\n  inversion u \\<in> unit_disc_compl\n\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "thus ?thesis"], ["proof (prove)\nusing this:\n  inversion u \\<in> unit_disc_compl\n\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "using assms"], ["proof (prove)\nusing this:\n  inversion u \\<in> unit_disc_compl\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "unfolding unit_disc_def unit_disc_compl_def"], ["proof (prove)\nusing this:\n  inversion u \\<in> disc_compl ounit_circle\n  u \\<in> disc ounit_circle\n  v \\<in> disc ounit_circle\n\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "using disc_inter_disc_compl"], ["proof (prove)\nusing this:\n  inversion u \\<in> disc_compl ounit_circle\n  u \\<in> disc ounit_circle\n  v \\<in> disc ounit_circle\n  disc ?H \\<inter> disc_compl ?H = {}\n\ngoal (1 subgoal):\n 1. inversion u \\<noteq> v", "by fastforce"], ["proof (state)\nthis:\n  inversion u \\<noteq> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_ocircline_ounit_circle_conjugate [simp]:\n  assumes \"in_ocircline ounit_circle z\"\n  shows \"in_ocircline ounit_circle (conjugate z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_ocircline ounit_circle (conjugate z)", "using assms"], ["proof (prove)\nusing this:\n  in_ocircline ounit_circle z\n\ngoal (1 subgoal):\n 1. in_ocircline ounit_circle (conjugate z)", "by (transfer, transfer, auto simp add: vec_cnj_def)"], ["", "lemma conjugate_unit_disc [simp]:\n  shows \"conjugate ` unit_disc = unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` unit_disc = unit_disc", "unfolding unit_disc_def disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` Collect (in_ocircline ounit_circle) =\n    Collect (in_ocircline ounit_circle)", "apply (auto simp add: image_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       in_ocircline ounit_circle x \\<Longrightarrow>\n       \\<exists>xa. in_ocircline ounit_circle xa \\<and> x = conjugate xa", "apply (rule_tac x=\"conjugate x\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma conjugate_in_unit_disc [simp]:\n  assumes \"z \\<in> unit_disc\"\n  shows \"conjugate z \\<in> unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate z \\<in> unit_disc", "using conjugate_unit_disc"], ["proof (prove)\nusing this:\n  conjugate ` unit_disc = unit_disc\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> unit_disc", "using assms"], ["proof (prove)\nusing this:\n  conjugate ` unit_disc = unit_disc\n  z \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> unit_disc", "by blast"], ["", "lemma out_ocircline_ounit_circle_conjugate [simp]:\n  assumes \"out_ocircline ounit_circle z\"\n  shows \"out_ocircline ounit_circle (conjugate z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. out_ocircline ounit_circle (conjugate z)", "using assms"], ["proof (prove)\nusing this:\n  out_ocircline ounit_circle z\n\ngoal (1 subgoal):\n 1. out_ocircline ounit_circle (conjugate z)", "by (transfer, transfer, auto simp add: vec_cnj_def)"], ["", "lemma conjugate_unit_disc_compl [simp]:\n  shows \"conjugate ` unit_disc_compl = unit_disc_compl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` unit_disc_compl = unit_disc_compl", "unfolding unit_disc_compl_def disc_compl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ` Collect (out_ocircline ounit_circle) =\n    Collect (out_ocircline ounit_circle)", "apply (auto simp add: image_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       out_ocircline ounit_circle x \\<Longrightarrow>\n       \\<exists>xa. out_ocircline ounit_circle xa \\<and> x = conjugate xa", "apply (rule_tac x=\"conjugate x\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma conjugate_in_unit_disc_compl [simp]:\n  assumes \"z \\<in> unit_disc_compl\"\n  shows \"conjugate z \\<in> unit_disc_compl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate z \\<in> unit_disc_compl", "using conjugate_unit_disc_compl"], ["proof (prove)\nusing this:\n  conjugate ` unit_disc_compl = unit_disc_compl\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> unit_disc_compl", "using assms"], ["proof (prove)\nusing this:\n  conjugate ` unit_disc_compl = unit_disc_compl\n  z \\<in> unit_disc_compl\n\ngoal (1 subgoal):\n 1. conjugate z \\<in> unit_disc_compl", "by blast"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Oriented x axis and lower half plane\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "lift_definition o_x_axis :: \"ocircline\" is x_axis_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma o_x_axis_pos_oriented [simp]:\n  shows \"pos_oriented o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented o_x_axis", "by (transfer, transfer, simp)"], ["", "lemma of_ocircline_o_x_axis [simp]: \n  shows \"of_ocircline o_x_axis = x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_ocircline o_x_axis = x_axis", "by (transfer, transfer, simp)"], ["", "lemma of_circline_x_axis [simp]:\n  shows \"of_circline x_axis = o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_circline x_axis = o_x_axis", "using of_circline_of_ocircline_pos_oriented[of o_x_axis]"], ["proof (prove)\nusing this:\n  pos_oriented o_x_axis \\<Longrightarrow>\n  of_circline (of_ocircline o_x_axis) = o_x_axis\n\ngoal (1 subgoal):\n 1. of_circline x_axis = o_x_axis", "using o_x_axis_pos_oriented"], ["proof (prove)\nusing this:\n  pos_oriented o_x_axis \\<Longrightarrow>\n  of_circline (of_ocircline o_x_axis) = o_x_axis\n  pos_oriented o_x_axis\n\ngoal (1 subgoal):\n 1. of_circline x_axis = o_x_axis", "by simp"], ["", "lemma ocircline_set_circline_set_x_axis [simp]: \n  shows \"ocircline_set o_x_axis = circline_set x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_set o_x_axis = circline_set x_axis", "by (subst of_circline_x_axis[symmetric], subst ocircline_set_of_circline, simp)"], ["", "lemma ii_in_disc_o_x_axis [simp]: \n  shows \"ii\\<^sub>h \\<notin> disc o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii\\<^sub>h \\<notin> disc o_x_axis", "unfolding disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ii\\<^sub>h \\<notin> Collect (in_ocircline o_x_axis)", "by simp (transfer, transfer, simp add: Let_def vec_cnj_def)"], ["", "lemma ii_notin_disc_o_x_axis [simp]:\n  shows \"ii\\<^sub>h \\<in> disc_compl o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ii\\<^sub>h \\<in> disc_compl o_x_axis", "unfolding disc_compl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ii\\<^sub>h \\<in> Collect (out_ocircline o_x_axis)", "by simp (transfer, transfer, simp add: Let_def vec_cnj_def)"], ["", "lemma of_complex_in_o_x_axis_disc [simp]:\n  shows \"of_complex z \\<in> disc o_x_axis \\<longleftrightarrow> Im z < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex z \\<in> disc o_x_axis) = (Im z < 0)", "unfolding disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex z \\<in> Collect (in_ocircline o_x_axis)) = (Im z < 0)", "by auto (transfer, transfer, simp add: vec_cnj_def)+"], ["", "lemma inf_notin_disc_o_x_axis [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<notin> disc o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> disc o_x_axis", "unfolding disc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<notin> Collect (in_ocircline o_x_axis)", "by simp (transfer, transfer, simp add: vec_cnj_def)"], ["", "lemma disc_o_x_axis:\n  shows \"disc o_x_axis = of_complex ` {z. Im z < 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "assume \"z \\<in> disc o_x_axis\""], ["proof (state)\nthis:\n  z \\<in> disc o_x_axis\n\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "hence \"\\<exists> x. Im x < 0 \\<and> z = of_complex x\""], ["proof (prove)\nusing this:\n  z \\<in> disc o_x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>x. Im x < 0 \\<and> z = of_complex x", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<in> disc o_x_axis\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. \\<exists>x. Im x < 0 \\<and> z = of_complex x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. Im x < 0 \\<and> z = of_complex x\n\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "}"], ["proof (state)\nthis:\n  ?z2 \\<in> disc o_x_axis \\<Longrightarrow>\n  \\<exists>x. Im x < 0 \\<and> ?z2 = of_complex x\n\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?z2 \\<in> disc o_x_axis \\<Longrightarrow>\n  \\<exists>x. Im x < 0 \\<and> ?z2 = of_complex x\n\ngoal (1 subgoal):\n 1. disc o_x_axis = of_complex ` {z. Im z < 0}", "by (auto simp add: image_iff)"], ["proof (state)\nthis:\n  disc o_x_axis = of_complex ` {z. Im z < 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Oriented single point circline\\<close>"], ["", "(* -------------------------------------------------------------------------- *)"], ["", "lift_definition  o_circline_point_0 :: \"ocircline\" is circline_point_0_clmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma of_ocircline_o_circline_point_0 [simp]: \n  shows \"of_ocircline o_circline_point_0 = circline_point_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_ocircline o_circline_point_0 = circline_point_0", "by (transfer, transfer, simp)"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>M?bius action on oriented circlines and discs\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>M?bius action on an oriented circline is the same as on to an unoriented circline.\\<close>"], ["", "lift_definition moebius_ocircline :: \"moebius \\<Rightarrow> ocircline \\<Rightarrow> ocircline\" is moebius_circline_mmat_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>moebius_mat_eq moebius_mat1 moebius_mat2;\n        ocircline_eq_clmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_clmat\n                          (moebius_circline_mmat_clmat moebius_mat1\n                            circline_mat1)\n                          (moebius_circline_mmat_clmat moebius_mat2\n                            circline_mat2)", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        moebius_cmat_eq moebius_mat1 moebius_mat2;\n        ocircline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat\n                          (moebius_circline_cmat_cmat moebius_mat1\n                            circline_mat1)\n                          (moebius_circline_cmat_cmat moebius_mat2\n                            circline_mat2)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0;\n        hermitean circline_mat1 \\<and> circline_mat1 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> (0, 0, 0, 0);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           moebius_mat2 = k *\\<^sub>s\\<^sub>m moebius_mat1;\n        \\<exists>k>0.\n           circline_mat2 = cor k *\\<^sub>s\\<^sub>m circline_mat1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k>0.\n                            mat_adj (mat_inv moebius_mat2) *\\<^sub>m\\<^sub>m\n                            circline_mat2 *\\<^sub>m\\<^sub>m\n                            mat_inv moebius_mat2 =\n                            cor k *\\<^sub>s\\<^sub>m\n                            (mat_adj\n                              (mat_inv moebius_mat1) *\\<^sub>m\\<^sub>m\n                             circline_mat1 *\\<^sub>m\\<^sub>m\n                             mat_inv moebius_mat1)", "apply ((erule exE)+, (erule conjE)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2 k ka.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0;\n        mat_det moebius_mat2 \\<noteq> 0; hermitean circline_mat1;\n        circline_mat1 \\<noteq> (0, 0, 0, 0); hermitean circline_mat2;\n        circline_mat2 \\<noteq> (0, 0, 0, 0); k \\<noteq> 0;\n        moebius_mat2 = k *\\<^sub>s\\<^sub>m moebius_mat1; 0 < ka;\n        circline_mat2 = cor ka *\\<^sub>s\\<^sub>m circline_mat1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k>0.\n                            mat_adj (mat_inv moebius_mat2) *\\<^sub>m\\<^sub>m\n                            circline_mat2 *\\<^sub>m\\<^sub>m\n                            mat_inv moebius_mat2 =\n                            cor k *\\<^sub>s\\<^sub>m\n                            (mat_adj\n                              (mat_inv moebius_mat1) *\\<^sub>m\\<^sub>m\n                             circline_mat1 *\\<^sub>m\\<^sub>m\n                             mat_inv moebius_mat1)", "apply (simp add: mat_inv_mult_sm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>moebius_mat1 moebius_mat2 circline_mat1 circline_mat2 k ka.\n       \\<lbrakk>mat_det moebius_mat1 \\<noteq> 0; hermitean circline_mat1;\n        circline_mat1 \\<noteq> (0, 0, 0, 0);\n        hermitean (cor ka *\\<^sub>s\\<^sub>m circline_mat1);\n        cor ka *\\<^sub>s\\<^sub>m circline_mat1 \\<noteq> (0, 0, 0, 0);\n        k \\<noteq> 0; moebius_mat2 = k *\\<^sub>s\\<^sub>m moebius_mat1;\n        0 < ka;\n        circline_mat2 = cor ka *\\<^sub>s\\<^sub>m circline_mat1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>kb>0.\n                            (cor ka / (k * cnj k)) *\\<^sub>s\\<^sub>m\n                            (mat_adj\n                              (mat_inv moebius_mat1) *\\<^sub>m\\<^sub>m\n                             circline_mat1 *\\<^sub>m\\<^sub>m\n                             mat_inv moebius_mat1) =\n                            cor kb *\\<^sub>s\\<^sub>m\n                            (mat_adj\n                              (mat_inv moebius_mat1) *\\<^sub>m\\<^sub>m\n                             circline_mat1 *\\<^sub>m\\<^sub>m\n                             mat_inv moebius_mat1)", "apply (rule_tac x=\"ka / Re (k * cnj k)\" in exI, auto simp add: complex_mult_cnj_cmod power2_eq_square)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>M?bius action on (unoriented) circlines could have been defined using the action on oriented\ncirclines, but not the other way around.\\<close>"], ["", "lemma moebius_circline_ocircline:\n  shows \"moebius_circline M H = of_ocircline (moebius_ocircline M (of_circline H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline M H =\n    of_ocircline (moebius_ocircline M (of_circline H))", "apply (transfer, simp add: of_circline_clmat_def', safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M H.\n       \\<not> pos_oriented_clmat H \\<Longrightarrow>\n       circline_eq_clmat (moebius_circline_mmat_clmat M H)\n        (moebius_circline_mmat_clmat M (opposite_ocircline_clmat H))", "apply (transfer, simp, rule_tac x=\"-1\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma moebius_ocircline_circline:\n  shows \"moebius_ocircline M H = of_circline (moebius_circline M (of_ocircline H)) \\<or>\n         moebius_ocircline M H = opposite_ocircline (of_circline (moebius_circline M (of_ocircline H)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_ocircline M H =\n    of_circline (moebius_circline M (of_ocircline H)) \\<or>\n    moebius_ocircline M H =\n    opposite_ocircline (of_circline (moebius_circline M (of_ocircline H)))", "apply (transfer, simp add: of_circline_clmat_def', safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M H.\n       \\<lbrakk>pos_oriented_clmat (moebius_circline_mmat_clmat M H);\n        \\<not> ocircline_eq_clmat (moebius_circline_mmat_clmat M H)\n                (opposite_ocircline_clmat\n                  (moebius_circline_mmat_clmat M H))\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_clmat\n                          (moebius_circline_mmat_clmat M H)\n                          (moebius_circline_mmat_clmat M H)\n 2. \\<And>M H.\n       \\<lbrakk>\\<not> pos_oriented_clmat (moebius_circline_mmat_clmat M H);\n        \\<not> ocircline_eq_clmat (moebius_circline_mmat_clmat M H)\n                (opposite_ocircline_clmat\n                  (opposite_ocircline_clmat\n                    (moebius_circline_mmat_clmat M H)))\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_clmat\n                          (moebius_circline_mmat_clmat M H)\n                          (opposite_ocircline_clmat\n                            (moebius_circline_mmat_clmat M H))", "apply (transfer, simp, rule_tac x=\"1\" in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M H.\n       \\<lbrakk>\\<not> pos_oriented_clmat (moebius_circline_mmat_clmat M H);\n        \\<not> ocircline_eq_clmat (moebius_circline_mmat_clmat M H)\n                (opposite_ocircline_clmat\n                  (opposite_ocircline_clmat\n                    (moebius_circline_mmat_clmat M H)))\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_clmat\n                          (moebius_circline_mmat_clmat M H)\n                          (opposite_ocircline_clmat\n                            (moebius_circline_mmat_clmat M H))", "apply (transfer, simp, erule_tac x=\"1\" in allE, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>M?bius action on oriented circlines have many nice properties as it was the case with\nM?bius action on (unoriented) circlines. These transformations are injective and form group under\ncomposition.\\<close>"], ["", "lemma inj_moebius_ocircline [simp]:\n  shows \"inj (moebius_ocircline M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (moebius_ocircline M)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV.\n          moebius_ocircline M x = moebius_ocircline M y \\<longrightarrow>\n          x = y", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_ocircline M x = moebius_ocircline M y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix H H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_ocircline M x = moebius_ocircline M y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"moebius_ocircline M H = moebius_ocircline M H'\""], ["proof (state)\nthis:\n  moebius_ocircline M H = moebius_ocircline M H'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        moebius_ocircline M x = moebius_ocircline M y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"H = H'\""], ["proof (prove)\nusing this:\n  moebius_ocircline M H = moebius_ocircline M H'\n\ngoal (1 subgoal):\n 1. H = H'", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        ocircline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat H H'", "fix M H H' :: complex_mat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        ocircline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat H H'", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        ocircline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat H H'", "let ?iM = \"mat_inv M\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        ocircline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat H H'", "assume \"ocircline_eq_cmat (moebius_circline_cmat_cmat M H) (moebius_circline_cmat_cmat M H')\""], ["proof (state)\nthis:\n  ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M H')\n\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        ocircline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat H H'", "then"], ["proof (chain)\npicking this:\n  ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M H')", "obtain k where \"congruence ?iM H' = congruence ?iM (cor k *\\<^sub>s\\<^sub>m H)\" \"k > 0\""], ["proof (prove)\nusing this:\n  ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n   (moebius_circline_cmat_cmat M H')\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>congruence (mat_inv M) H' =\n                 congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H);\n         0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp del: congruence_def)"], ["proof (state)\nthis:\n  congruence (mat_inv M) H' =\n  congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<And>M H H' Ma Ha H'a.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero;\n        hermitean H' \\<and> H' \\<noteq> mat_zero;\n        ocircline_eq_cmat (moebius_circline_cmat_cmat M H)\n         (moebius_circline_cmat_cmat M H');\n        ocircline_eq_clmat (moebius_circline_mmat_clmat Ma Ha)\n         (moebius_circline_mmat_clmat Ma H'a)\\<rbrakk>\n       \\<Longrightarrow> ocircline_eq_cmat H H'", "thus \"ocircline_eq_cmat H H'\""], ["proof (prove)\nusing this:\n  congruence (mat_inv M) H' =\n  congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\n  0 < k\n\ngoal (1 subgoal):\n 1. ocircline_eq_cmat H H'", "using \\<open>mat_det M \\<noteq> 0\\<close> inj_congruence[of ?iM H' \"cor k *\\<^sub>s\\<^sub>m H\"] mat_det_inv[of M]"], ["proof (prove)\nusing this:\n  congruence (mat_inv M) H' =\n  congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\n  0 < k\n  mat_det M \\<noteq> 0\n  \\<lbrakk>mat_det (mat_inv M) \\<noteq> 0;\n   congruence (mat_inv M) H' =\n   congruence (mat_inv M) (cor k *\\<^sub>s\\<^sub>m H)\\<rbrakk>\n  \\<Longrightarrow> H' = cor k *\\<^sub>s\\<^sub>m H\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. ocircline_eq_cmat H H'", "by auto"], ["proof (state)\nthis:\n  ocircline_eq_cmat H H'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H = H'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_ocircline_id_moebius [simp]:\n  shows \"moebius_ocircline id_moebius H = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_ocircline id_moebius H = H", "by (transfer, transfer) (force simp add: mat_adj_def mat_cnj_def)"], ["", "lemma moebius_ocircline_comp [simp]:\n  shows \"moebius_ocircline (moebius_comp M1 M2) H = moebius_ocircline M1 (moebius_ocircline M2 H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_ocircline (moebius_comp M1 M2) H =\n    moebius_ocircline M1 (moebius_ocircline M2 H)", "by (transfer, transfer, simp, rule_tac x=1 in exI, simp add: mat_inv_mult_mm mult_mm_assoc)"], ["", "lemma moebius_ocircline_comp_inv_left [simp]:\n  shows \"moebius_ocircline (moebius_inv M) (moebius_ocircline M H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_ocircline (moebius_inv M) (moebius_ocircline M H) = H", "by (subst moebius_ocircline_comp[symmetric]) simp"], ["", "lemma moebius_ocircline_comp_inv_right [simp]:\n  shows \"moebius_ocircline M (moebius_ocircline (moebius_inv M) H) = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_ocircline M (moebius_ocircline (moebius_inv M) H) = H", "by (subst moebius_ocircline_comp[symmetric]) simp"], ["", "lemma moebius_ocircline_opposite_ocircline [simp]:\n  shows \"moebius_ocircline M (opposite_ocircline H) = opposite_ocircline (moebius_ocircline M H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_ocircline M (opposite_ocircline H) =\n    opposite_ocircline (moebius_ocircline M H)", "by (transfer, transfer, simp, rule_tac x=1 in exI, simp)"], ["", "text \\<open>M?bius action on oriented circlines preserve the set of points of the circline.\\<close>"], ["", "lemma ocircline_set_moebius_ocircline [simp]:\n  shows \"ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H", "have \"?rhs = circline_set (moebius_circline M (of_ocircline H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt M ` ocircline_set H =\n    circline_set (moebius_circline M (of_ocircline H))", "by simp"], ["proof (state)\nthis:\n  moebius_pt M ` ocircline_set H =\n  circline_set (moebius_circline M (of_ocircline H))\n\ngoal (1 subgoal):\n 1. ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H", "thus ?thesis"], ["proof (prove)\nusing this:\n  moebius_pt M ` ocircline_set H =\n  circline_set (moebius_circline M (of_ocircline H))\n\ngoal (1 subgoal):\n 1. ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H", "using moebius_ocircline_circline[of M H]"], ["proof (prove)\nusing this:\n  moebius_pt M ` ocircline_set H =\n  circline_set (moebius_circline M (of_ocircline H))\n  moebius_ocircline M H =\n  of_circline (moebius_circline M (of_ocircline H)) \\<or>\n  moebius_ocircline M H =\n  opposite_ocircline (of_circline (moebius_circline M (of_ocircline H)))\n\ngoal (1 subgoal):\n 1. ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H", "by auto"], ["proof (state)\nthis:\n  ocircline_set (moebius_ocircline M H) = moebius_pt M ` ocircline_set H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ocircline_set_fix_iff_ocircline_fix:\n  assumes \"ocircline_set H' \\<noteq> {}\"\n  shows \"ocircline_set (moebius_ocircline M H) = ocircline_set H' \\<longleftrightarrow>\n         moebius_ocircline M H = H' \\<or> moebius_ocircline M H = opposite_ocircline H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ocircline_set (moebius_ocircline M H) = ocircline_set H') =\n    (moebius_ocircline M H = H' \\<or>\n     moebius_ocircline M H = opposite_ocircline H')", "using assms"], ["proof (prove)\nusing this:\n  ocircline_set H' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (ocircline_set (moebius_ocircline M H) = ocircline_set H') =\n    (moebius_ocircline M H = H' \\<or>\n     moebius_ocircline M H = opposite_ocircline H')", "using inj_ocircline_set[of \"moebius_ocircline M H\" H']"], ["proof (prove)\nusing this:\n  ocircline_set H' \\<noteq> {}\n  \\<lbrakk>ocircline_set (moebius_ocircline M H) = ocircline_set H';\n   ocircline_set (moebius_ocircline M H) \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> moebius_ocircline M H = H' \\<or>\n                    moebius_ocircline M H = opposite_ocircline H'\n\ngoal (1 subgoal):\n 1. (ocircline_set (moebius_ocircline M H) = ocircline_set H') =\n    (moebius_ocircline M H = H' \\<or>\n     moebius_ocircline M H = opposite_ocircline H')", "by (auto simp del: ocircline_set_moebius_ocircline)"], ["", "lemma disc_moebius_ocircline [simp]:\n  shows \"disc (moebius_ocircline M H) = moebius_pt M ` (disc H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc (moebius_ocircline M H) = moebius_pt M ` disc H", "proof (safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H\n 2. \\<And>x xa.\n       xa \\<in> disc H \\<Longrightarrow>\n       moebius_pt M xa \\<in> disc (moebius_ocircline M H)", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H\n 2. \\<And>x xa.\n       xa \\<in> disc H \\<Longrightarrow>\n       moebius_pt M xa \\<in> disc (moebius_ocircline M H)", "assume \"z \\<in> disc H\""], ["proof (state)\nthis:\n  z \\<in> disc H\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H\n 2. \\<And>x xa.\n       xa \\<in> disc H \\<Longrightarrow>\n       moebius_pt M xa \\<in> disc (moebius_ocircline M H)", "thus \"moebius_pt M z \\<in> disc (moebius_ocircline M H)\""], ["proof (prove)\nusing this:\n  z \\<in> disc H\n\ngoal (1 subgoal):\n 1. moebius_pt M z \\<in> disc (moebius_ocircline M H)", "unfolding disc_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect (in_ocircline H)\n\ngoal (1 subgoal):\n 1. moebius_pt M z \\<in> Collect (in_ocircline (moebius_ocircline M H))", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. in_ocircline H z \\<Longrightarrow>\n    in_ocircline (moebius_ocircline M H) (moebius_pt M z)", "assume \"in_ocircline H z\""], ["proof (state)\nthis:\n  in_ocircline H z\n\ngoal (1 subgoal):\n 1. in_ocircline H z \\<Longrightarrow>\n    in_ocircline (moebius_ocircline M H) (moebius_pt M z)", "thus \"in_ocircline (moebius_ocircline M H) (moebius_pt M z)\""], ["proof (prove)\nusing this:\n  in_ocircline H z\n\ngoal (1 subgoal):\n 1. in_ocircline (moebius_ocircline M H) (moebius_pt M z)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; in_ocircline_cmat_cvec H z;\n        in_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "fix H M :: complex_mat and z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; in_ocircline_cmat_cvec H z;\n        in_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; in_ocircline_cmat_cvec H z;\n        in_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "assume \"in_ocircline_cmat_cvec H z\""], ["proof (state)\nthis:\n  in_ocircline_cmat_cvec H z\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; in_ocircline_cmat_cvec H z;\n        in_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "thus \"in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) (moebius_pt_cmat_cvec M z)\""], ["proof (prove)\nusing this:\n  in_ocircline_cmat_cvec H z\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H)\n     (moebius_pt_cmat_cvec M z)", "using \\<open>mat_det M \\<noteq> 0\\<close> quad_form_congruence[of M z]"], ["proof (prove)\nusing this:\n  in_ocircline_cmat_cvec H z\n  mat_det M \\<noteq> 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow>\n  quad_form (M *\\<^sub>m\\<^sub>v z) (congruence (mat_inv M) ?H) =\n  quad_form z ?H\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H)\n     (moebius_pt_cmat_cvec M z)", "by simp"], ["proof (state)\nthis:\n  in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H)\n   (moebius_pt_cmat_cvec M z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  in_ocircline (moebius_ocircline M H) (moebius_pt M z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt M z \\<in> disc (moebius_ocircline M H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H", "assume \"z \\<in> disc (moebius_ocircline M H)\""], ["proof (state)\nthis:\n  z \\<in> disc (moebius_ocircline M H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc H", "thus \"z \\<in> moebius_pt M ` disc H\""], ["proof (prove)\nusing this:\n  z \\<in> disc (moebius_ocircline M H)\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` disc H", "unfolding disc_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect (in_ocircline (moebius_ocircline M H))\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` Collect (in_ocircline H)", "proof(safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. in_ocircline (moebius_ocircline M H) z \\<Longrightarrow>\n    z \\<in> moebius_pt M ` Collect (in_ocircline H)", "assume \"in_ocircline (moebius_ocircline M H) z\""], ["proof (state)\nthis:\n  in_ocircline (moebius_ocircline M H) z\n\ngoal (1 subgoal):\n 1. in_ocircline (moebius_ocircline M H) z \\<Longrightarrow>\n    z \\<in> moebius_pt M ` Collect (in_ocircline H)", "show \"z \\<in> moebius_pt M ` Collect (in_ocircline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` Collect (in_ocircline H)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z = moebius_pt M ?x\n 2. ?x \\<in> Collect (in_ocircline H)", "show \"z = moebius_pt M (moebius_pt (moebius_inv M) z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = moebius_pt M (moebius_pt (moebius_inv M) z)", "by simp"], ["proof (state)\nthis:\n  z = moebius_pt M (moebius_pt (moebius_inv M) z)\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (in_ocircline H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (in_ocircline H)", "show \"moebius_pt (moebius_inv M) z \\<in> Collect (in_ocircline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (in_ocircline H)", "using \\<open>in_ocircline (moebius_ocircline M H) z\\<close>"], ["proof (prove)\nusing this:\n  in_ocircline (moebius_ocircline M H) z\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (in_ocircline H)", "proof (safe, transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "fix M H :: complex_mat and z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "hence \"congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\""], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H", "by (simp del: congruence_def)"], ["proof (state)\nthis:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "hence \"quad_form z (congruence (mat_inv M) H) = quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\""], ["proof (prove)\nusing this:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n\ngoal (1 subgoal):\n 1. quad_form z (congruence (mat_inv M) H) =\n    quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H", "using quad_form_congruence[of \"mat_inv M\" \"z\" \"congruence (mat_inv M) H\"]"], ["proof (prove)\nusing this:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n  mat_det (mat_inv M) \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z)\n   (congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H)) =\n  quad_form z (congruence (mat_inv M) H)\n\ngoal (1 subgoal):\n 1. quad_form z (congruence (mat_inv M) H) =\n    quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H", "using \\<open>mat_det M \\<noteq> 0\\<close> mat_det_inv[of \"M\"]"], ["proof (prove)\nusing this:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n  mat_det (mat_inv M) \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z)\n   (congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H)) =\n  quad_form z (congruence (mat_inv M) H)\n  mat_det M \\<noteq> 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. quad_form z (congruence (mat_inv M) H) =\n    quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H", "by simp"], ["proof (state)\nthis:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "moreover"], ["proof (state)\nthis:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "assume \"in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z\""], ["proof (state)\nthis:\n  in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        in_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "ultimately"], ["proof (chain)\npicking this:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n  in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z", "show \"in_ocircline_cmat_cvec H (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)\""], ["proof (prove)\nusing this:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n  in_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec H (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "by simp"], ["proof (state)\nthis:\n  in_ocircline_cmat_cvec H (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) z \\<in> Collect (in_ocircline H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> moebius_pt M ` Collect (in_ocircline H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> moebius_pt M ` disc H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma disc_compl_moebius_ocircline [simp]:\n  shows \"disc_compl (moebius_ocircline M H) = moebius_pt M ` (disc_compl H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_compl (moebius_ocircline M H) = moebius_pt M ` disc_compl H", "proof (safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H\n 2. \\<And>x xa.\n       xa \\<in> disc_compl H \\<Longrightarrow>\n       moebius_pt M xa \\<in> disc_compl (moebius_ocircline M H)", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H\n 2. \\<And>x xa.\n       xa \\<in> disc_compl H \\<Longrightarrow>\n       moebius_pt M xa \\<in> disc_compl (moebius_ocircline M H)", "assume \"z \\<in> disc_compl H\""], ["proof (state)\nthis:\n  z \\<in> disc_compl H\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H\n 2. \\<And>x xa.\n       xa \\<in> disc_compl H \\<Longrightarrow>\n       moebius_pt M xa \\<in> disc_compl (moebius_ocircline M H)", "thus \"moebius_pt M z \\<in> disc_compl (moebius_ocircline M H)\""], ["proof (prove)\nusing this:\n  z \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. moebius_pt M z \\<in> disc_compl (moebius_ocircline M H)", "unfolding disc_compl_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect (out_ocircline H)\n\ngoal (1 subgoal):\n 1. moebius_pt M z \\<in> Collect (out_ocircline (moebius_ocircline M H))", "proof (safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. out_ocircline H z \\<Longrightarrow>\n    out_ocircline (moebius_ocircline M H) (moebius_pt M z)", "assume \"out_ocircline H z\""], ["proof (state)\nthis:\n  out_ocircline H z\n\ngoal (1 subgoal):\n 1. out_ocircline H z \\<Longrightarrow>\n    out_ocircline (moebius_ocircline M H) (moebius_pt M z)", "thus \"out_ocircline (moebius_ocircline M H) (moebius_pt M z)\""], ["proof (prove)\nusing this:\n  out_ocircline H z\n\ngoal (1 subgoal):\n 1. out_ocircline (moebius_ocircline M H) (moebius_pt M z)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; out_ocircline_cmat_cvec H z;\n        out_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "fix H M :: complex_mat and z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; out_ocircline_cmat_cvec H z;\n        out_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; out_ocircline_cmat_cvec H z;\n        out_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "assume \"out_ocircline_cmat_cvec H z\""], ["proof (state)\nthis:\n  out_ocircline_cmat_cvec H z\n\ngoal (1 subgoal):\n 1. \\<And>H z M Ha za.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        mat_det M \\<noteq> 0; out_ocircline_cmat_cvec H z;\n        out_ocircline_clmat_hcoords Ha za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec\n                          (moebius_circline_cmat_cmat M H)\n                          (moebius_pt_cmat_cvec M z)", "thus \"out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) (moebius_pt_cmat_cvec M z)\""], ["proof (prove)\nusing this:\n  out_ocircline_cmat_cvec H z\n\ngoal (1 subgoal):\n 1. out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H)\n     (moebius_pt_cmat_cvec M z)", "using \\<open>mat_det M \\<noteq> 0\\<close> quad_form_congruence[of M z]"], ["proof (prove)\nusing this:\n  out_ocircline_cmat_cvec H z\n  mat_det M \\<noteq> 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow>\n  quad_form (M *\\<^sub>m\\<^sub>v z) (congruence (mat_inv M) ?H) =\n  quad_form z ?H\n\ngoal (1 subgoal):\n 1. out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H)\n     (moebius_pt_cmat_cvec M z)", "by simp"], ["proof (state)\nthis:\n  out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H)\n   (moebius_pt_cmat_cvec M z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  out_ocircline (moebius_ocircline M H) (moebius_pt M z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt M z \\<in> disc_compl (moebius_ocircline M H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H", "assume \"z \\<in> disc_compl (moebius_ocircline M H)\""], ["proof (state)\nthis:\n  z \\<in> disc_compl (moebius_ocircline M H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> disc_compl (moebius_ocircline M H) \\<Longrightarrow>\n       x \\<in> moebius_pt M ` disc_compl H", "thus \"z \\<in> moebius_pt M ` disc_compl H\""], ["proof (prove)\nusing this:\n  z \\<in> disc_compl (moebius_ocircline M H)\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` disc_compl H", "unfolding disc_compl_def"], ["proof (prove)\nusing this:\n  z \\<in> Collect (out_ocircline (moebius_ocircline M H))\n\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` Collect (out_ocircline H)", "proof(safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. out_ocircline (moebius_ocircline M H) z \\<Longrightarrow>\n    z \\<in> moebius_pt M ` Collect (out_ocircline H)", "assume \"out_ocircline (moebius_ocircline M H) z\""], ["proof (state)\nthis:\n  out_ocircline (moebius_ocircline M H) z\n\ngoal (1 subgoal):\n 1. out_ocircline (moebius_ocircline M H) z \\<Longrightarrow>\n    z \\<in> moebius_pt M ` Collect (out_ocircline H)", "show \"z \\<in> moebius_pt M ` Collect (out_ocircline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> moebius_pt M ` Collect (out_ocircline H)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z = moebius_pt M ?x\n 2. ?x \\<in> Collect (out_ocircline H)", "show \"z = moebius_pt M (moebius_pt (moebius_inv M) z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = moebius_pt M (moebius_pt (moebius_inv M) z)", "by simp"], ["proof (state)\nthis:\n  z = moebius_pt M (moebius_pt (moebius_inv M) z)\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (out_ocircline H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (out_ocircline H)", "show \"moebius_pt (moebius_inv M) z \\<in> Collect (out_ocircline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (out_ocircline H)", "using \\<open>out_ocircline (moebius_ocircline M H) z\\<close>"], ["proof (prove)\nusing this:\n  out_ocircline (moebius_ocircline M H) z\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) z \\<in> Collect (out_ocircline H)", "proof (safe, transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "fix M H :: complex_mat and z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "assume \"mat_det M \\<noteq> 0\""], ["proof (state)\nthis:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "hence \"congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\""], ["proof (prove)\nusing this:\n  mat_det M \\<noteq> 0\n\ngoal (1 subgoal):\n 1. congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H", "by (simp del: congruence_def)"], ["proof (state)\nthis:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "hence \"quad_form z (congruence (mat_inv M) H) = quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\""], ["proof (prove)\nusing this:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n\ngoal (1 subgoal):\n 1. quad_form z (congruence (mat_inv M) H) =\n    quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H", "using quad_form_congruence[of \"mat_inv M\" \"z\" \"congruence (mat_inv M) H\"]"], ["proof (prove)\nusing this:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n  mat_det (mat_inv M) \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z)\n   (congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H)) =\n  quad_form z (congruence (mat_inv M) H)\n\ngoal (1 subgoal):\n 1. quad_form z (congruence (mat_inv M) H) =\n    quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H", "using \\<open>mat_det M \\<noteq> 0\\<close> mat_det_inv[of \"M\"]"], ["proof (prove)\nusing this:\n  congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H) = H\n  mat_det (mat_inv M) \\<noteq> 0 \\<Longrightarrow>\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z)\n   (congruence (mat_inv (mat_inv M)) (congruence (mat_inv M) H)) =\n  quad_form z (congruence (mat_inv M) H)\n  mat_det M \\<noteq> 0\n  mat_det M \\<noteq> 0 \\<Longrightarrow> mat_det (mat_inv M) = 1 / mat_det M\n\ngoal (1 subgoal):\n 1. quad_form z (congruence (mat_inv M) H) =\n    quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H", "by simp"], ["proof (state)\nthis:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "moreover"], ["proof (state)\nthis:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "assume \"out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z\""], ["proof (state)\nthis:\n  out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n\ngoal (1 subgoal):\n 1. \\<And>M H z Ma Ha za.\n       \\<lbrakk>mat_det M \\<noteq> 0;\n        hermitean H \\<and> H \\<noteq> mat_zero; z \\<noteq> vec_zero;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z;\n        out_ocircline_clmat_hcoords (moebius_circline_mmat_clmat Ma Ha)\n         za\\<rbrakk>\n       \\<Longrightarrow> out_ocircline_cmat_cvec H\n                          (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "ultimately"], ["proof (chain)\npicking this:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n  out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z", "show \"out_ocircline_cmat_cvec H (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)\""], ["proof (prove)\nusing this:\n  quad_form z (congruence (mat_inv M) H) =\n  quad_form (mat_inv M *\\<^sub>m\\<^sub>v z) H\n  out_ocircline_cmat_cvec (moebius_circline_cmat_cmat M H) z\n\ngoal (1 subgoal):\n 1. out_ocircline_cmat_cvec H (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)", "by simp"], ["proof (state)\nthis:\n  out_ocircline_cmat_cvec H (moebius_pt_cmat_cvec (moebius_inv_cmat M) z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) z \\<in> Collect (out_ocircline H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> moebius_pt M ` Collect (out_ocircline H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> moebius_pt M ` disc_compl H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Orientation after M?bius transformations\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "text \\<open>All Euclidean similarities preserve circline orientation.\\<close>"], ["", "lemma moebius_similarity_oriented_lines_to_oriented_lines:\n  assumes \"a \\<noteq> 0\"\n  shows \"\\<infinity>\\<^sub>h \\<in> ocircline_set H \\<longleftrightarrow> \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline (moebius_similarity a b) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h \\<in> ocircline_set H) =\n    (\\<infinity>\\<^sub>h\n     \\<in> ocircline_set (moebius_ocircline (moebius_similarity a b) H))", "using moebius_similarity_lines_to_lines[OF \\<open>a \\<noteq> 0\\<close>, of b \"of_ocircline H\"]"], ["proof (prove)\nusing this:\n  (\\<infinity>\\<^sub>h\n   \\<in> circline_set\n          (moebius_circline (moebius_similarity a b) (of_ocircline H))) =\n  (\\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H))\n\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h \\<in> ocircline_set H) =\n    (\\<infinity>\\<^sub>h\n     \\<in> ocircline_set (moebius_ocircline (moebius_similarity a b) H))", "by simp"], ["", "lemma moebius_similarity_preserve_orientation':\n  assumes \"a \\<noteq> 0\" and \"\\<infinity>\\<^sub>h \\<notin> ocircline_set H\" and \"pos_oriented H\"\n  shows \"pos_oriented (moebius_ocircline (moebius_similarity a b) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "let ?M = \"moebius_similarity a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "let ?H = \"moebius_ocircline ?M H\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "have \"\\<infinity>\\<^sub>h \\<notin> ocircline_set ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)", "using \\<open>\\<infinity>\\<^sub>h \\<notin> ocircline_set H\\<close> moebius_similarity_oriented_lines_to_oriented_lines[OF \\<open>a \\<noteq> 0\\<close>]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<notin> ocircline_set H\n  (\\<infinity>\\<^sub>h \\<in> ocircline_set ?H) =\n  (\\<infinity>\\<^sub>h\n   \\<in> ocircline_set (moebius_ocircline (moebius_similarity a ?b) ?H))\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)", "by simp"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "have \"\\<infinity>\\<^sub>h \\<in> disc_compl H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<in> disc_compl H", "using \\<open>\\<infinity>\\<^sub>h \\<notin> ocircline_set H\\<close> \\<open>pos_oriented H\\<close> pos_oriented_circle_inf[of H] in_on_out"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<notin> ocircline_set H\n  pos_oriented H\n  \\<infinity>\\<^sub>h \\<notin> ocircline_set H \\<Longrightarrow>\n  pos_oriented H = (\\<infinity>\\<^sub>h \\<notin> disc H)\n  in_ocircline ?H ?z \\<or> on_ocircline ?H ?z \\<or> out_ocircline ?H ?z\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<in> disc_compl H", "unfolding disc_def disc_compl_def ocircline_set_def"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<notin> Collect (on_ocircline H)\n  pos_oriented H\n  \\<infinity>\\<^sub>h \\<notin> Collect (on_ocircline H) \\<Longrightarrow>\n  pos_oriented H = (\\<infinity>\\<^sub>h \\<notin> Collect (in_ocircline H))\n  in_ocircline ?H ?z \\<or> on_ocircline ?H ?z \\<or> out_ocircline ?H ?z\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<in> Collect (out_ocircline H)", "by auto"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "hence \"\\<infinity>\\<^sub>h \\<in> disc_compl ?H\""], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<in> disc_compl (moebius_ocircline (moebius_similarity a b) H)", "using moebius_similarity_inf[OF \\<open>a \\<noteq> 0\\<close>, of b]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<in> disc_compl H\n  moebius_pt (moebius_similarity a b) \\<infinity>\\<^sub>h =\n  \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<in> disc_compl (moebius_ocircline (moebius_similarity a b) H)", "by force"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "thus \"pos_oriented ?H\""], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "using pos_oriented_circle_inf[of ?H] disc_inter_disc_compl[of ?H] \\<open>\\<infinity>\\<^sub>h \\<notin> ocircline_set ?H\\<close>"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline (moebius_similarity a b) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline (moebius_similarity a b) H) \\<Longrightarrow>\n  pos_oriented (moebius_ocircline (moebius_similarity a b) H) =\n  (\\<infinity>\\<^sub>h\n   \\<notin> disc (moebius_ocircline (moebius_similarity a b) H))\n  disc (moebius_ocircline (moebius_similarity a b) H) \\<inter>\n  disc_compl (moebius_ocircline (moebius_similarity a b) H) =\n  {}\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "by auto"], ["proof (state)\nthis:\n  pos_oriented (moebius_ocircline (moebius_similarity a b) H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_similarity_preserve_orientation:\n  assumes \"a \\<noteq> 0\" and \"\\<infinity>\\<^sub>h \\<notin> ocircline_set H\"\n  shows \"pos_oriented H \\<longleftrightarrow> pos_oriented(moebius_ocircline (moebius_similarity a b) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "let ?M = \"moebius_similarity a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "let ?H = \"moebius_ocircline ?M H\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "have \"\\<infinity>\\<^sub>h \\<notin> ocircline_set ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)", "using \\<open>\\<infinity>\\<^sub>h \\<notin> ocircline_set H\\<close> moebius_similarity_oriented_lines_to_oriented_lines[OF \\<open>a \\<noteq> 0\\<close>]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<notin> ocircline_set H\n  (\\<infinity>\\<^sub>h \\<in> ocircline_set ?H) =\n  (\\<infinity>\\<^sub>h\n   \\<in> ocircline_set (moebius_ocircline (moebius_similarity a ?b) ?H))\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)", "by simp"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "have *: \"H = moebius_ocircline (- moebius_similarity a b) ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H =\n    moebius_ocircline (- moebius_similarity a b)\n     (moebius_ocircline (moebius_similarity a b) H)", "by simp"], ["proof (state)\nthis:\n  H =\n  moebius_ocircline (- moebius_similarity a b)\n   (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "using \\<open>a \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "using moebius_similarity_preserve_orientation' [OF \\<open>a \\<noteq> 0\\<close> \\<open>\\<infinity>\\<^sub>h \\<notin> ocircline_set H\\<close>]"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  pos_oriented H \\<Longrightarrow>\n  pos_oriented (moebius_ocircline (moebius_similarity a ?b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "using moebius_similarity_preserve_orientation'[OF _   \\<open>\\<infinity>\\<^sub>h \\<notin> ocircline_set ?H\\<close>, of \"1/a\" \"-b/a\"]"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  pos_oriented H \\<Longrightarrow>\n  pos_oriented (moebius_ocircline (moebius_similarity a ?b) H)\n  \\<lbrakk>1 / a \\<noteq> 0;\n   pos_oriented (moebius_ocircline (moebius_similarity a b) H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_similarity (1 / a) (- b / a))\n                       (moebius_ocircline (moebius_similarity a b) H))\n\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "using moebius_similarity_inv[of a b, OF \\<open>a \\<noteq> 0\\<close>]  *"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  pos_oriented H \\<Longrightarrow>\n  pos_oriented (moebius_ocircline (moebius_similarity a ?b) H)\n  \\<lbrakk>1 / a \\<noteq> 0;\n   pos_oriented (moebius_ocircline (moebius_similarity a b) H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_similarity (1 / a) (- b / a))\n                       (moebius_ocircline (moebius_similarity a b) H))\n  moebius_inv (moebius_similarity a b) =\n  moebius_similarity (1 / a) (- b / a)\n  H =\n  moebius_ocircline (- moebius_similarity a b)\n   (moebius_ocircline (moebius_similarity a b) H)\n\ngoal (1 subgoal):\n 1. pos_oriented H =\n    pos_oriented (moebius_ocircline (moebius_similarity a b) H)", "by auto"], ["proof (state)\nthis:\n  pos_oriented H =\n  pos_oriented (moebius_ocircline (moebius_similarity a b) H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reciprocal_preserve_orientation:\n  assumes \"0\\<^sub>h \\<in> disc_compl H\"\n  shows \"pos_oriented (moebius_ocircline moebius_reciprocal H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "have \"\\<infinity>\\<^sub>h \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)", "using assms"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)", "by force"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "thus \"pos_oriented (moebius_ocircline moebius_reciprocal H)\""], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "using pos_oriented_circle_inf[of \"moebius_ocircline moebius_reciprocal H\"]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline moebius_reciprocal H) \\<Longrightarrow>\n  pos_oriented (moebius_ocircline moebius_reciprocal H) =\n  (\\<infinity>\\<^sub>h\n   \\<notin> disc (moebius_ocircline moebius_reciprocal H))\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "using disc_inter_disc_compl[of \"moebius_ocircline moebius_reciprocal H\"]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline moebius_reciprocal H) \\<Longrightarrow>\n  pos_oriented (moebius_ocircline moebius_reciprocal H) =\n  (\\<infinity>\\<^sub>h\n   \\<notin> disc (moebius_ocircline moebius_reciprocal H))\n  disc (moebius_ocircline moebius_reciprocal H) \\<inter>\n  disc_compl (moebius_ocircline moebius_reciprocal H) =\n  {}\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "using disc_compl_inter_ocircline_set[of \"moebius_ocircline moebius_reciprocal H\"]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<in> disc_compl (moebius_ocircline moebius_reciprocal H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline moebius_reciprocal H) \\<Longrightarrow>\n  pos_oriented (moebius_ocircline moebius_reciprocal H) =\n  (\\<infinity>\\<^sub>h\n   \\<notin> disc (moebius_ocircline moebius_reciprocal H))\n  disc (moebius_ocircline moebius_reciprocal H) \\<inter>\n  disc_compl (moebius_ocircline moebius_reciprocal H) =\n  {}\n  disc_compl (moebius_ocircline moebius_reciprocal H) \\<inter>\n  ocircline_set (moebius_ocircline moebius_reciprocal H) =\n  {}\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline moebius_reciprocal H)", "by auto"], ["proof (state)\nthis:\n  pos_oriented (moebius_ocircline moebius_reciprocal H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reciprocal_not_preserve_orientation:\n  assumes \"0\\<^sub>h \\<in> disc H\"\n  shows \"\\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)", "let ?H = \"moebius_ocircline moebius_reciprocal H\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)", "have \"\\<infinity>\\<^sub>h \\<in> disc ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<in> disc (moebius_ocircline moebius_reciprocal H)", "using assms"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> disc H\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<in> disc (moebius_ocircline moebius_reciprocal H)", "by force"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h \\<in> disc (moebius_ocircline moebius_reciprocal H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)", "thus \"\\<not> pos_oriented ?H\""], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<in> disc (moebius_ocircline moebius_reciprocal H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)", "using pos_oriented_circle_inf[of ?H] disc_inter_ocircline_set[of ?H]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h \\<in> disc (moebius_ocircline moebius_reciprocal H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline moebius_reciprocal H) \\<Longrightarrow>\n  pos_oriented (moebius_ocircline moebius_reciprocal H) =\n  (\\<infinity>\\<^sub>h\n   \\<notin> disc (moebius_ocircline moebius_reciprocal H))\n  disc (moebius_ocircline moebius_reciprocal H) \\<inter>\n  ocircline_set (moebius_ocircline moebius_reciprocal H) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)", "by auto"], ["proof (state)\nthis:\n  \\<not> pos_oriented (moebius_ocircline moebius_reciprocal H)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Orientation of the image of a given oriented circline $H$ under a given M?bius transformation\n$M$ depends on whether the pole of $M$ (the point that $M$ maps to $\\infty_{hc}$) lies in the disc\nor in the disc complement of $H$ (if it is on the set of $H$, then it maps onto a line and we do not\ndiscuss the orientation).\\<close>"], ["", "lemma pole_in_disc:\n  assumes \"M = mk_moebius a b c d\" and \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  assumes \"is_pole M z\" \"z \\<in> disc H\"\n  shows \"\\<not> pos_oriented (moebius_ocircline M H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "let ?t1 = \"moebius_translation (a / c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "let ?rd = \"moebius_rotation_dilatation ((b * c - a * d) / (c * c))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "let ?r =  \"moebius_reciprocal\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "let ?t2 = \"moebius_translation (d / c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "have \"0\\<^sub>h = moebius_pt (moebius_translation (d/c)) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z", "using pole_mk_moebius[of a b c d z] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_pole (mk_moebius a b c d) z; c \\<noteq> 0;\n   a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> z = of_complex (- d / c)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc H\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z", "by simp"], ["proof (state)\nthis:\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "have \"z \\<notin> ocircline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<notin> ocircline_set H", "using \\<open>z \\<in> disc H\\<close> disc_inter_ocircline_set[of H]"], ["proof (prove)\nusing this:\n  z \\<in> disc H\n  disc H \\<inter> ocircline_set H = {}\n\ngoal (1 subgoal):\n 1. z \\<notin> ocircline_set H", "by blast"], ["proof (state)\nthis:\n  z \\<notin> ocircline_set H\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "hence \"0\\<^sub>h \\<notin> ocircline_set (moebius_ocircline ?t2 H)\""], ["proof (prove)\nusing this:\n  z \\<notin> ocircline_set H\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline (moebius_translation (d / c)) H)", "using \\<open>0\\<^sub>h = moebius_pt ?t2 z\\<close>"], ["proof (prove)\nusing this:\n  z \\<notin> ocircline_set H\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline (moebius_translation (d / c)) H)", "using moebius_pt_neq_I[of z _ ?t2]"], ["proof (prove)\nusing this:\n  z \\<notin> ocircline_set H\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n  z \\<noteq> ?z2.0 \\<Longrightarrow>\n  moebius_pt (moebius_translation (d / c)) z \\<noteq>\n  moebius_pt (moebius_translation (d / c)) ?z2.0\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline (moebius_translation (d / c)) H)", "by force"], ["proof (state)\nthis:\n  0\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "hence *: \"\\<infinity>\\<^sub>h \\<notin> ocircline_set (moebius_ocircline (?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  0\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_reciprocal + moebius_translation (d / c)) H)", "using \\<open>0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\\<close>"], ["proof (prove)\nusing this:\n  0\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_translation (d / c)) H)\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_reciprocal + moebius_translation (d / c)) H)", "by (metis circline_set_moebius_circline circline_set_moebius_circline_iff circline_set_of_ocircline moebius_pt_comp moebius_reciprocal ocircline_set_moebius_ocircline plus_moebius_def reciprocal_zero)"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "hence **: \"\\<infinity>\\<^sub>h \\<notin> ocircline_set (moebius_ocircline (?rd + ?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "using \\<open>a*d - b*c \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "unfolding moebius_rotation_dilatation_def"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_similarity ((b * c - a * d) / (c * c)) 0 +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "using moebius_similarity_oriented_lines_to_oriented_lines[of _ \"moebius_ocircline (?r + ?t2) H\"]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  (\\<infinity>\\<^sub>h\n   \\<in> ocircline_set\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)) =\n  (\\<infinity>\\<^sub>h\n   \\<in> ocircline_set\n          (moebius_ocircline (moebius_similarity ?a ?b)\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)))\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_similarity ((b * c - a * d) / (c * c)) 0 +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "by (metis divide_eq_0_iff divisors_zero moebius_ocircline_comp plus_moebius_def right_minus_eq)"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "have \"\\<not> pos_oriented (moebius_ocircline (?r + ?t2) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)", "using pole_mk_moebius[of a b c d z] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_pole (mk_moebius a b c d) z; c \\<noteq> 0;\n   a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> z = of_complex (- d / c)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc H\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)", "using reciprocal_not_preserve_orientation"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_pole (mk_moebius a b c d) z; c \\<noteq> 0;\n   a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> z = of_complex (- d / c)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc H\n  0\\<^sub>h \\<in> disc ?H \\<Longrightarrow>\n  \\<not> pos_oriented (moebius_ocircline moebius_reciprocal ?H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)", "by force"], ["proof (state)\nthis:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "hence \"\\<not> pos_oriented (moebius_ocircline (?rd + ?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "using *"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "using \\<open>a*d - b*c \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "using moebius_similarity_preserve_orientation[of _ \"moebius_ocircline (?r + ?t2) H\"]"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_reciprocal + moebius_translation (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_reciprocal + moebius_translation (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_reciprocal + moebius_translation (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "unfolding moebius_rotation_dilatation_def"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_reciprocal + moebius_translation (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_reciprocal + moebius_translation (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_reciprocal + moebius_translation (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_similarity ((b * c - a * d) / (c * c)) 0 +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "by simp"], ["proof (state)\nthis:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "hence \"\\<not> pos_oriented (moebius_ocircline (?t1 + ?rd + ?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_translation (a / c) +\n               moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "using **"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_translation (a / c) +\n               moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "using moebius_similarity_preserve_orientation[of _ \"moebius_ocircline (?rd + ?r + ?t2) H\"]"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                moebius_reciprocal +\n                moebius_translation (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_rotation_dilatation\n                         ((b * c - a * d) / (c * c)) +\n                        moebius_reciprocal +\n                        moebius_translation (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_rotation_dilatation\n                           ((b * c - a * d) / (c * c)) +\n                          moebius_reciprocal +\n                          moebius_translation (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_translation (a / c) +\n               moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)", "unfolding moebius_translation_def"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_similarity 1 (d / c))\n            H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_similarity 1 (d / c))\n              H)\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                moebius_reciprocal +\n                moebius_similarity 1 (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_rotation_dilatation\n                         ((b * c - a * d) / (c * c)) +\n                        moebius_reciprocal +\n                        moebius_similarity 1 (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_rotation_dilatation\n                           ((b * c - a * d) / (c * c)) +\n                          moebius_reciprocal +\n                          moebius_similarity 1 (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline\n              (moebius_similarity 1 (a / c) +\n               moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_similarity 1 (d / c))\n              H)", "by simp"], ["proof (state)\nthis:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_translation (a / c) +\n             moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_translation (a / c) +\n             moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "using assms"], ["proof (prove)\nusing this:\n  \\<not> pos_oriented\n          (moebius_ocircline\n            (moebius_translation (a / c) +\n             moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n             moebius_reciprocal +\n             moebius_translation (d / c))\n            H)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc H\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented (moebius_ocircline M H)", "by simp (subst moebius_decomposition, simp_all)"], ["proof (state)\nthis:\n  \\<not> pos_oriented (moebius_ocircline M H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pole_in_disc_compl:\n  assumes \"M = mk_moebius a b c d\" and \"c \\<noteq> 0\" and \"a*d - b*c \\<noteq> 0\"\n  assumes \"is_pole M z\" and \"z \\<in> disc_compl H\"\n  shows \"pos_oriented (moebius_ocircline M H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "let ?t1 = \"moebius_translation (a / c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "let ?rd = \"moebius_rotation_dilatation ((b * c - a * d) / (c * c))\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "let ?r = \"moebius_reciprocal\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "let ?t2 = \"moebius_translation (d / c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "have \"0\\<^sub>h = moebius_pt (moebius_translation (d/c)) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z", "using pole_mk_moebius[of a b c d z] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_pole (mk_moebius a b c d) z; c \\<noteq> 0;\n   a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> z = of_complex (- d / c)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z", "by simp"], ["proof (state)\nthis:\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "have \"z \\<notin> ocircline_set H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<notin> ocircline_set H", "using \\<open>z \\<in> disc_compl H\\<close> disc_compl_inter_ocircline_set[of H]"], ["proof (prove)\nusing this:\n  z \\<in> disc_compl H\n  disc_compl H \\<inter> ocircline_set H = {}\n\ngoal (1 subgoal):\n 1. z \\<notin> ocircline_set H", "by blast"], ["proof (state)\nthis:\n  z \\<notin> ocircline_set H\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "hence \"0\\<^sub>h \\<notin> ocircline_set (moebius_ocircline ?t2 H)\""], ["proof (prove)\nusing this:\n  z \\<notin> ocircline_set H\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline (moebius_translation (d / c)) H)", "using \\<open>0\\<^sub>h = moebius_pt ?t2 z\\<close>"], ["proof (prove)\nusing this:\n  z \\<notin> ocircline_set H\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline (moebius_translation (d / c)) H)", "using moebius_pt_neq_I[of z _ ?t2]"], ["proof (prove)\nusing this:\n  z \\<notin> ocircline_set H\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n  z \\<noteq> ?z2.0 \\<Longrightarrow>\n  moebius_pt (moebius_translation (d / c)) z \\<noteq>\n  moebius_pt (moebius_translation (d / c)) ?z2.0\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline (moebius_translation (d / c)) H)", "by force"], ["proof (state)\nthis:\n  0\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "hence *: \"\\<infinity>\\<^sub>h \\<notin> ocircline_set (moebius_ocircline (?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  0\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_reciprocal + moebius_translation (d / c)) H)", "using \\<open>0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\\<close>"], ["proof (prove)\nusing this:\n  0\\<^sub>h\n  \\<notin> ocircline_set (moebius_ocircline (moebius_translation (d / c)) H)\n  0\\<^sub>h = moebius_pt (moebius_translation (d / c)) z\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_reciprocal + moebius_translation (d / c)) H)", "by (metis circline_set_moebius_circline circline_set_moebius_circline_iff circline_set_of_ocircline moebius_pt_comp moebius_reciprocal ocircline_set_moebius_ocircline plus_moebius_def reciprocal_zero)"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "hence **: \"\\<infinity>\\<^sub>h \\<notin> ocircline_set (moebius_ocircline (?rd + ?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "using \\<open>a*d - b*c \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "unfolding moebius_rotation_dilatation_def"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_similarity ((b * c - a * d) / (c * c)) 0 +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "using moebius_similarity_oriented_lines_to_oriented_lines[of _ \"moebius_ocircline (?r + ?t2) H\"]"], ["proof (prove)\nusing this:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  (\\<infinity>\\<^sub>h\n   \\<in> ocircline_set\n          (moebius_ocircline\n            (moebius_reciprocal + moebius_translation (d / c)) H)) =\n  (\\<infinity>\\<^sub>h\n   \\<in> ocircline_set\n          (moebius_ocircline (moebius_similarity ?a ?b)\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)))\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h\n    \\<notin> ocircline_set\n              (moebius_ocircline\n                (moebius_similarity ((b * c - a * d) / (c * c)) 0 +\n                 moebius_reciprocal +\n                 moebius_translation (d / c))\n                H)", "by (metis divide_eq_0_iff divisors_zero moebius_ocircline_comp plus_moebius_def right_minus_eq)"], ["proof (state)\nthis:\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "have \"pos_oriented (moebius_ocircline (?r + ?t2) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c))\n       H)", "using pole_mk_moebius[of a b c d z] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_pole (mk_moebius a b c d) z; c \\<noteq> 0;\n   a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> z = of_complex (- d / c)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c))\n       H)", "using reciprocal_preserve_orientation"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_pole (mk_moebius a b c d) z; c \\<noteq> 0;\n   a * d - b * c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> z = of_complex (- d / c)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc_compl H\n  0\\<^sub>h \\<in> disc_compl ?H \\<Longrightarrow>\n  pos_oriented (moebius_ocircline moebius_reciprocal ?H)\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c))\n       H)", "by force"], ["proof (state)\nthis:\n  pos_oriented\n   (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "hence \"pos_oriented (moebius_ocircline (?rd + ?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "using *"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "using \\<open>a*d - b*c \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "using moebius_similarity_preserve_orientation[of _ \"moebius_ocircline (?r + ?t2) H\"]"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_reciprocal + moebius_translation (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_reciprocal + moebius_translation (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_reciprocal + moebius_translation (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "unfolding moebius_rotation_dilatation_def"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline (moebius_reciprocal + moebius_translation (d / c)) H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_reciprocal + moebius_translation (d / c)) H)\n  a * d - b * c \\<noteq> 0\n  c \\<noteq> 0\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_reciprocal + moebius_translation (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_reciprocal + moebius_translation (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_reciprocal + moebius_translation (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_similarity ((b * c - a * d) / (c * c)) 0 +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "by simp"], ["proof (state)\nthis:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "hence \"pos_oriented (moebius_ocircline (?t1 + ?rd + ?r + ?t2) H)\""], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_translation (a / c) +\n        moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "using **"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_translation (a / c) +\n        moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "using moebius_similarity_preserve_orientation[of _ \"moebius_ocircline (?rd + ?r + ?t2) H\"]"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_translation (d / c))\n              H)\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                moebius_reciprocal +\n                moebius_translation (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_rotation_dilatation\n                         ((b * c - a * d) / (c * c)) +\n                        moebius_reciprocal +\n                        moebius_translation (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_rotation_dilatation\n                           ((b * c - a * d) / (c * c)) +\n                          moebius_reciprocal +\n                          moebius_translation (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_translation (a / c) +\n        moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_translation (d / c))\n       H)", "unfolding moebius_translation_def"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_similarity 1 (d / c))\n     H)\n  \\<infinity>\\<^sub>h\n  \\<notin> ocircline_set\n            (moebius_ocircline\n              (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n               moebius_reciprocal +\n               moebius_similarity 1 (d / c))\n              H)\n  \\<lbrakk>?a \\<noteq> 0;\n   \\<infinity>\\<^sub>h\n   \\<notin> ocircline_set\n             (moebius_ocircline\n               (moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n                moebius_reciprocal +\n                moebius_similarity 1 (d / c))\n               H)\\<rbrakk>\n  \\<Longrightarrow> pos_oriented\n                     (moebius_ocircline\n                       (moebius_rotation_dilatation\n                         ((b * c - a * d) / (c * c)) +\n                        moebius_reciprocal +\n                        moebius_similarity 1 (d / c))\n                       H) =\n                    pos_oriented\n                     (moebius_ocircline (moebius_similarity ?a ?b)\n                       (moebius_ocircline\n                         (moebius_rotation_dilatation\n                           ((b * c - a * d) / (c * c)) +\n                          moebius_reciprocal +\n                          moebius_similarity 1 (d / c))\n                         H))\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (moebius_ocircline\n       (moebius_similarity 1 (a / c) +\n        moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n        moebius_reciprocal +\n        moebius_similarity 1 (d / c))\n       H)", "by simp"], ["proof (state)\nthis:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_translation (a / c) +\n      moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_translation (a / c) +\n      moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "using assms"], ["proof (prove)\nusing this:\n  pos_oriented\n   (moebius_ocircline\n     (moebius_translation (a / c) +\n      moebius_rotation_dilatation ((b * c - a * d) / (c * c)) +\n      moebius_reciprocal +\n      moebius_translation (d / c))\n     H)\n  M = mk_moebius a b c d\n  c \\<noteq> 0\n  a * d - b * c \\<noteq> 0\n  is_pole M z\n  z \\<in> disc_compl H\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline M H)", "by simp (subst moebius_decomposition, simp_all)"], ["proof (state)\nthis:\n  pos_oriented (moebius_ocircline M H)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ----------------------------------------------------------------- *)"], ["", "subsection \\<open>Oriented circlines uniqueness\\<close>"], ["", "(* ----------------------------------------------------------------- *)"], ["", "lemma ocircline_01inf:\n  assumes \"0\\<^sub>h \\<in> ocircline_set H \\<and> 1\\<^sub>h \\<in> ocircline_set H \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set H\"\n  shows \"H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "have \"0\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and> 1\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and> \\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n    1\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n    \\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H)", "using assms"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> ocircline_set H \\<and>\n  1\\<^sub>h \\<in> ocircline_set H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set H\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n    1\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n    \\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H)", "by simp"], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n  1\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n  \\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H)\n\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "hence \"of_ocircline H = x_axis\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n  1\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n  \\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H)\n\ngoal (1 subgoal):\n 1. of_ocircline H = x_axis", "using unique_circline_01inf'"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n  1\\<^sub>h \\<in> circline_set (of_ocircline H) \\<and>\n  \\<infinity>\\<^sub>h \\<in> circline_set (of_ocircline H)\n  0\\<^sub>h \\<in> circline_set x_axis \\<and>\n  1\\<^sub>h \\<in> circline_set x_axis \\<and>\n  \\<infinity>\\<^sub>h \\<in> circline_set x_axis \\<and>\n  (\\<forall>H.\n      0\\<^sub>h \\<in> circline_set H \\<and>\n      1\\<^sub>h \\<in> circline_set H \\<and>\n      \\<infinity>\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n      H = x_axis)\n\ngoal (1 subgoal):\n 1. of_ocircline H = x_axis", "by auto"], ["proof (state)\nthis:\n  of_ocircline H = x_axis\n\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "thus \"H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\""], ["proof (prove)\nusing this:\n  of_ocircline H = x_axis\n\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "by (metis inj_of_ocircline of_ocircline_o_x_axis)"], ["proof (state)\nthis:\n  H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_ocircline_01inf:\n  shows \"\\<exists>! H. 0\\<^sub>h \\<in> ocircline_set H \\<and> 1\\<^sub>h \\<in> ocircline_set H \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and> ii\\<^sub>h \\<notin> disc H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 0\\<^sub>h \\<in> ocircline_set ?a \\<and>\n    1\\<^sub>h \\<in> ocircline_set ?a \\<and>\n    \\<infinity>\\<^sub>h \\<in> ocircline_set ?a \\<and>\n    ii\\<^sub>h \\<notin> disc ?a\n 2. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = ?a", "show \"0\\<^sub>h \\<in> ocircline_set o_x_axis \\<and> 1\\<^sub>h \\<in> ocircline_set o_x_axis \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set o_x_axis \\<and> ii\\<^sub>h \\<notin> disc o_x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> ocircline_set o_x_axis \\<and>\n    1\\<^sub>h \\<in> ocircline_set o_x_axis \\<and>\n    \\<infinity>\\<^sub>h \\<in> ocircline_set o_x_axis \\<and>\n    ii\\<^sub>h \\<notin> disc o_x_axis", "by simp"], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> ocircline_set o_x_axis \\<and>\n  1\\<^sub>h \\<in> ocircline_set o_x_axis \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set o_x_axis \\<and>\n  ii\\<^sub>h \\<notin> disc o_x_axis\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = o_x_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = o_x_axis", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = o_x_axis", "assume \"0\\<^sub>h \\<in> ocircline_set H \\<and> 1\\<^sub>h \\<in> ocircline_set H \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and> ii\\<^sub>h \\<notin> disc H\""], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> ocircline_set H \\<and>\n  1\\<^sub>h \\<in> ocircline_set H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n  ii\\<^sub>h \\<notin> disc H\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = o_x_axis", "hence \"0\\<^sub>h \\<in> ocircline_set H \\<and> 1\\<^sub>h \\<in> ocircline_set H \\<and> \\<infinity>\\<^sub>h \\<in> ocircline_set H\" \"ii\\<^sub>h \\<notin> disc H\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> ocircline_set H \\<and>\n  1\\<^sub>h \\<in> ocircline_set H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n  ii\\<^sub>h \\<notin> disc H\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> ocircline_set H \\<and>\n    1\\<^sub>h \\<in> ocircline_set H \\<and>\n    \\<infinity>\\<^sub>h \\<in> ocircline_set H &&&\n    ii\\<^sub>h \\<notin> disc H", "by auto"], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> ocircline_set H \\<and>\n  1\\<^sub>h \\<in> ocircline_set H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set H\n  ii\\<^sub>h \\<notin> disc H\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = o_x_axis", "hence \"H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> ocircline_set H \\<and>\n  1\\<^sub>h \\<in> ocircline_set H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set H\n  ii\\<^sub>h \\<notin> disc H\n\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "using ocircline_01inf"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> ocircline_set H \\<and>\n  1\\<^sub>h \\<in> ocircline_set H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set H\n  ii\\<^sub>h \\<notin> disc H\n  0\\<^sub>h \\<in> ocircline_set ?H \\<and>\n  1\\<^sub>h \\<in> ocircline_set ?H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set ?H \\<Longrightarrow>\n  ?H = o_x_axis \\<or> ?H = opposite_ocircline o_x_axis\n\ngoal (1 subgoal):\n 1. H = o_x_axis \\<or> H = opposite_ocircline o_x_axis", "by simp"], ["proof (state)\nthis:\n  H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       0\\<^sub>h \\<in> ocircline_set H \\<and>\n       1\\<^sub>h \\<in> ocircline_set H \\<and>\n       \\<infinity>\\<^sub>h \\<in> ocircline_set H \\<and>\n       ii\\<^sub>h \\<notin> disc H \\<Longrightarrow>\n       H = o_x_axis", "thus \"H = o_x_axis\""], ["proof (prove)\nusing this:\n  H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\n\ngoal (1 subgoal):\n 1. H = o_x_axis", "using \\<open>ii\\<^sub>h \\<notin> disc H\\<close>"], ["proof (prove)\nusing this:\n  H = o_x_axis \\<or> H = opposite_ocircline o_x_axis\n  ii\\<^sub>h \\<notin> disc H\n\ngoal (1 subgoal):\n 1. H = o_x_axis", "by auto"], ["proof (state)\nthis:\n  H = o_x_axis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_ocircline_set:\n  assumes \"A \\<noteq> B\" and \"A \\<noteq> C\" and \"B \\<noteq> C\"\n  shows \"\\<exists>! H. pos_oriented H \\<and> (A \\<in> ocircline_set H \\<and> B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "obtain M where *: \"moebius_pt M A = 0\\<^sub>h\"  \"moebius_pt M B = 1\\<^sub>h\" \"moebius_pt M C = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M A = 0\\<^sub>h; moebius_pt M B = 1\\<^sub>h;\n         moebius_pt M C = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_moebius_01inf[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>M.\n     moebius_pt M A = 0\\<^sub>h \\<and>\n     moebius_pt M B = 1\\<^sub>h \\<and> moebius_pt M C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>moebius_pt M A = 0\\<^sub>h; moebius_pt M B = 1\\<^sub>h;\n         moebius_pt M C = \\<infinity>\\<^sub>h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  moebius_pt M A = 0\\<^sub>h\n  moebius_pt M B = 1\\<^sub>h\n  moebius_pt M C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "let ?iM = \"moebius_pt (moebius_inv M)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "have **: \"?iM 0\\<^sub>h = A\"  \"?iM 1\\<^sub>h = B\"  \"?iM \\<infinity>\\<^sub>h = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) 0\\<^sub>h = A &&&\n    moebius_pt (moebius_inv M) 1\\<^sub>h = B &&&\n    moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = C", "using *"], ["proof (prove)\nusing this:\n  moebius_pt M A = 0\\<^sub>h\n  moebius_pt M B = 1\\<^sub>h\n  moebius_pt M C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_inv M) 0\\<^sub>h = A &&&\n    moebius_pt (moebius_inv M) 1\\<^sub>h = B &&&\n    moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = C", "by (auto simp add: moebius_pt_invert)"], ["proof (state)\nthis:\n  moebius_pt (moebius_inv M) 0\\<^sub>h = A\n  moebius_pt (moebius_inv M) 1\\<^sub>h = B\n  moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = C\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "let ?H = \"moebius_ocircline (moebius_inv M) o_x_axis\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "have 1: \"A \\<in> ocircline_set ?H\" \"B \\<in> ocircline_set ?H\" \"C \\<in> ocircline_set ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis) &&&\n    B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis) &&&\n    C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)", "using **"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_inv M) 0\\<^sub>h = A\n  moebius_pt (moebius_inv M) 1\\<^sub>h = B\n  moebius_pt (moebius_inv M) \\<infinity>\\<^sub>h = C\n\ngoal (1 subgoal):\n 1. A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis) &&&\n    B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis) &&&\n    C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)", "by auto"], ["proof (state)\nthis:\n  A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "have 2: \"\\<And> H'. A \\<in> ocircline_set H' \\<and> B \\<in> ocircline_set H' \\<and> C \\<in> ocircline_set H' \\<Longrightarrow> H' = ?H \\<or> H' = opposite_ocircline ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "fix H'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "let ?H' = \"ocircline_set H'\" and ?H'' = \"ocircline_set (moebius_ocircline M H')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "assume \"A \\<in> ocircline_set H' \\<and> B \\<in> ocircline_set H' \\<and> C \\<in> ocircline_set H'\""], ["proof (state)\nthis:\n  A \\<in> ocircline_set H' \\<and>\n  B \\<in> ocircline_set H' \\<and> C \\<in> ocircline_set H'\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "hence \"moebius_pt M A \\<in> ?H''\" \"moebius_pt M B \\<in> ?H''\" \"moebius_pt M C \\<in> ?H''\""], ["proof (prove)\nusing this:\n  A \\<in> ocircline_set H' \\<and>\n  B \\<in> ocircline_set H' \\<and> C \\<in> ocircline_set H'\n\ngoal (1 subgoal):\n 1. moebius_pt M A \\<in> ocircline_set (moebius_ocircline M H') &&&\n    moebius_pt M B \\<in> ocircline_set (moebius_ocircline M H') &&&\n    moebius_pt M C \\<in> ocircline_set (moebius_ocircline M H')", "by auto"], ["proof (state)\nthis:\n  moebius_pt M A \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M B \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M C \\<in> ocircline_set (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "hence \"0\\<^sub>h \\<in> ?H''\" \"1\\<^sub>h \\<in> ?H''\"  \"\\<infinity>\\<^sub>h \\<in> ?H''\""], ["proof (prove)\nusing this:\n  moebius_pt M A \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M B \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M C \\<in> ocircline_set (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H') &&&\n    1\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H') &&&\n    \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')", "using *"], ["proof (prove)\nusing this:\n  moebius_pt M A \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M B \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M C \\<in> ocircline_set (moebius_ocircline M H')\n  moebius_pt M A = 0\\<^sub>h\n  moebius_pt M B = 1\\<^sub>h\n  moebius_pt M C = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H') &&&\n    1\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H') &&&\n    \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')", "by auto"], ["proof (state)\nthis:\n  0\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  1\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "hence \"moebius_ocircline M H' = o_x_axis \\<or> moebius_ocircline M H' = opposite_ocircline o_x_axis\""], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  1\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. moebius_ocircline M H' = o_x_axis \\<or>\n    moebius_ocircline M H' = opposite_ocircline o_x_axis", "using ocircline_01inf"], ["proof (prove)\nusing this:\n  0\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  1\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  \\<infinity>\\<^sub>h \\<in> ocircline_set (moebius_ocircline M H')\n  0\\<^sub>h \\<in> ocircline_set ?H \\<and>\n  1\\<^sub>h \\<in> ocircline_set ?H \\<and>\n  \\<infinity>\\<^sub>h \\<in> ocircline_set ?H \\<Longrightarrow>\n  ?H = o_x_axis \\<or> ?H = opposite_ocircline o_x_axis\n\ngoal (1 subgoal):\n 1. moebius_ocircline M H' = o_x_axis \\<or>\n    moebius_ocircline M H' = opposite_ocircline o_x_axis", "by auto"], ["proof (state)\nthis:\n  moebius_ocircline M H' = o_x_axis \\<or>\n  moebius_ocircline M H' = opposite_ocircline o_x_axis\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "hence \"o_x_axis = moebius_ocircline M H' \\<or>  o_x_axis = opposite_ocircline (moebius_ocircline M H')\""], ["proof (prove)\nusing this:\n  moebius_ocircline M H' = o_x_axis \\<or>\n  moebius_ocircline M H' = opposite_ocircline o_x_axis\n\ngoal (1 subgoal):\n 1. o_x_axis = moebius_ocircline M H' \\<or>\n    o_x_axis = opposite_ocircline (moebius_ocircline M H')", "by auto"], ["proof (state)\nthis:\n  o_x_axis = moebius_ocircline M H' \\<or>\n  o_x_axis = opposite_ocircline (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. \\<And>H'.\n       A \\<in> ocircline_set H' \\<and>\n       B \\<in> ocircline_set H' \\<and>\n       C \\<in> ocircline_set H' \\<Longrightarrow>\n       H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n       H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "thus \"H' = ?H \\<or> H' = opposite_ocircline ?H\""], ["proof (prove)\nusing this:\n  o_x_axis = moebius_ocircline M H' \\<or>\n  o_x_axis = opposite_ocircline (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. o_x_axis = moebius_ocircline M H' \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n 2. o_x_axis = opposite_ocircline (moebius_ocircline M H') \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "assume *: \"o_x_axis = moebius_ocircline M H'\""], ["proof (state)\nthis:\n  o_x_axis = moebius_ocircline M H'\n\ngoal (2 subgoals):\n 1. o_x_axis = moebius_ocircline M H' \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n 2. o_x_axis = opposite_ocircline (moebius_ocircline M H') \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "show \"H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or> H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "by (rule disjI1) (subst *, simp)"], ["proof (state)\nthis:\n  H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n  H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. o_x_axis = opposite_ocircline (moebius_ocircline M H') \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. o_x_axis = opposite_ocircline (moebius_ocircline M H') \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "assume *: \"o_x_axis = opposite_ocircline (moebius_ocircline M H')\""], ["proof (state)\nthis:\n  o_x_axis = opposite_ocircline (moebius_ocircline M H')\n\ngoal (1 subgoal):\n 1. o_x_axis = opposite_ocircline (moebius_ocircline M H') \\<Longrightarrow>\n    H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "show \"H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or> H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n    H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "by (rule disjI2) (subst *, simp)"], ["proof (state)\nthis:\n  H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n  H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n  H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<in> ocircline_set ?H' \\<and>\n  B \\<in> ocircline_set ?H' \\<and>\n  C \\<in> ocircline_set ?H' \\<Longrightarrow>\n  ?H' = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n  ?H' = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "show ?thesis (is \"\\<exists>! x. ?P x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "proof (cases \"pos_oriented ?H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_oriented\n     (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n 2. \\<not> pos_oriented\n            (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "case True"], ["proof (state)\nthis:\n  pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (2 subgoals):\n 1. pos_oriented\n     (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n 2. \\<not> pos_oriented\n            (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_oriented ?a \\<and>\n    A \\<in> ocircline_set ?a \\<and>\n    B \\<in> ocircline_set ?a \\<and> C \\<in> ocircline_set ?a\n 2. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = ?a", "show \"?P ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n    A \\<in> ocircline_set\n             (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n    B \\<in> ocircline_set\n             (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n    C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)", "using 1 True"], ["proof (prove)\nusing this:\n  A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n    A \\<in> ocircline_set\n             (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n    B \\<in> ocircline_set\n             (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n    C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)", "by auto"], ["proof (state)\nthis:\n  pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n  A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n  B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis) \\<and>\n  C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = moebius_ocircline (moebius_inv M) o_x_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = moebius_ocircline (moebius_inv M) o_x_axis", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = moebius_ocircline (moebius_inv M) o_x_axis", "assume \"?P H\""], ["proof (state)\nthis:\n  pos_oriented H \\<and>\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = moebius_ocircline (moebius_inv M) o_x_axis", "thus \"H = ?H\""], ["proof (prove)\nusing this:\n  pos_oriented H \\<and>\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal (1 subgoal):\n 1. H = moebius_ocircline (moebius_inv M) o_x_axis", "using 1 2[of H] True"], ["proof (prove)\nusing this:\n  pos_oriented H \\<and>\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n  A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H \\<Longrightarrow>\n  H = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n  H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n  pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. H = moebius_ocircline (moebius_inv M) o_x_axis", "by auto"], ["proof (state)\nthis:\n  H = moebius_ocircline (moebius_inv M) o_x_axis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!H.\n     pos_oriented H \\<and>\n     A \\<in> ocircline_set H \\<and>\n     B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "case False"], ["proof (state)\nthis:\n  \\<not> pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "let ?OH = \"opposite_ocircline ?H\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pos_oriented\n            (moebius_ocircline (moebius_inv M) o_x_axis) \\<Longrightarrow>\n    \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_oriented ?a \\<and>\n    A \\<in> ocircline_set ?a \\<and>\n    B \\<in> ocircline_set ?a \\<and> C \\<in> ocircline_set ?a\n 2. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = ?a", "show \"?P ?OH\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_oriented\n     (opposite_ocircline\n       (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n    A \\<in> ocircline_set\n             (opposite_ocircline\n               (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n    B \\<in> ocircline_set\n             (opposite_ocircline\n               (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n    C \\<in> ocircline_set\n             (opposite_ocircline\n               (moebius_ocircline (moebius_inv M) o_x_axis))", "using 1 False"], ["proof (prove)\nusing this:\n  A \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  B \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  C \\<in> ocircline_set (moebius_ocircline (moebius_inv M) o_x_axis)\n  \\<not> pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. pos_oriented\n     (opposite_ocircline\n       (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n    A \\<in> ocircline_set\n             (opposite_ocircline\n               (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n    B \\<in> ocircline_set\n             (opposite_ocircline\n               (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n    C \\<in> ocircline_set\n             (opposite_ocircline\n               (moebius_ocircline (moebius_inv M) o_x_axis))", "by auto"], ["proof (state)\nthis:\n  pos_oriented\n   (opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n  A \\<in> ocircline_set\n           (opposite_ocircline\n             (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n  B \\<in> ocircline_set\n           (opposite_ocircline\n             (moebius_ocircline (moebius_inv M) o_x_axis)) \\<and>\n  C \\<in> ocircline_set\n           (opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis))\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "assume \"?P H\""], ["proof (state)\nthis:\n  pos_oriented H \\<and>\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal (1 subgoal):\n 1. \\<And>H.\n       pos_oriented H \\<and>\n       A \\<in> ocircline_set H \\<and>\n       B \\<in> ocircline_set H \\<and>\n       C \\<in> ocircline_set H \\<Longrightarrow>\n       H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "thus \"H = ?OH\""], ["proof (prove)\nusing this:\n  pos_oriented H \\<and>\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal (1 subgoal):\n 1. H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "using False 2[of H]"], ["proof (prove)\nusing this:\n  pos_oriented H \\<and>\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n  \\<not> pos_oriented (moebius_ocircline (moebius_inv M) o_x_axis)\n  A \\<in> ocircline_set H \\<and>\n  B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H \\<Longrightarrow>\n  H = moebius_ocircline (moebius_inv M) o_x_axis \\<or>\n  H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal (1 subgoal):\n 1. H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)", "by auto"], ["proof (state)\nthis:\n  H = opposite_ocircline (moebius_ocircline (moebius_inv M) o_x_axis)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!H.\n     pos_oriented H \\<and>\n     A \\<in> ocircline_set H \\<and>\n     B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!H.\n     pos_oriented H \\<and>\n     A \\<in> ocircline_set H \\<and>\n     B \\<in> ocircline_set H \\<and> C \\<in> ocircline_set H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ocircline_set_0h:\n  assumes \"ocircline_set H = {0\\<^sub>h}\"\n  shows \"H = o_circline_point_0 \\<or> H = opposite_ocircline (o_circline_point_0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = o_circline_point_0 \\<or> H = opposite_ocircline o_circline_point_0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. H = o_circline_point_0 \\<or> H = opposite_ocircline o_circline_point_0", "have \"of_ocircline H = circline_point_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_ocircline H = circline_point_0", "using assms"], ["proof (prove)\nusing this:\n  ocircline_set H = {0\\<^sub>h}\n\ngoal (1 subgoal):\n 1. of_ocircline H = circline_point_0", "using unique_circline_type_zero_0' card_eq1_circline_type_zero[of \"of_ocircline H\"]"], ["proof (prove)\nusing this:\n  ocircline_set H = {0\\<^sub>h}\n  (circline_type circline_point_0 = 0 \\<and>\n   0\\<^sub>h \\<in> circline_set circline_point_0) \\<and>\n  (\\<forall>H.\n      circline_type H = 0 \\<and>\n      0\\<^sub>h \\<in> circline_set H \\<longrightarrow>\n      H = circline_point_0)\n  \\<exists>z. circline_set (of_ocircline H) = {z} \\<Longrightarrow>\n  circline_type (of_ocircline H) = 0\n\ngoal (1 subgoal):\n 1. of_ocircline H = circline_point_0", "by auto"], ["proof (state)\nthis:\n  of_ocircline H = circline_point_0\n\ngoal (1 subgoal):\n 1. H = o_circline_point_0 \\<or> H = opposite_ocircline o_circline_point_0", "thus ?thesis"], ["proof (prove)\nusing this:\n  of_ocircline H = circline_point_0\n\ngoal (1 subgoal):\n 1. H = o_circline_point_0 \\<or> H = opposite_ocircline o_circline_point_0", "by (metis inj_of_ocircline of_ocircline_o_circline_point_0)"], ["proof (state)\nthis:\n  H = o_circline_point_0 \\<or> H = opposite_ocircline o_circline_point_0\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}