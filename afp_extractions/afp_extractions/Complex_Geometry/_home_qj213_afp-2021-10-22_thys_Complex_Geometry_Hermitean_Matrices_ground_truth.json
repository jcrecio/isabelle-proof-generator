{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Hermitean_Matrices.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma hermitean_transpose:\n  shows \"hermitean A \\<longleftrightarrow> mat_transpose A = mat_cnj A\"", "lemma hermitean_mk_circline [simp]: \n  shows \"hermitean (cor A, B, cnj B, cor D)\"", "lemma hermitean_mk_circline' [simp]:\n  assumes \"is_real A\" and \"is_real D\"\n  shows \"hermitean (A, B, cnj B, D)\"", "lemma hermitean_elems:\n  assumes \"hermitean (A, B, C, D)\"\n  shows \"is_real A\" and \"is_real D\" and \"B = cnj C\" and \"cnj B = C\"", "lemma hermitean_mat_cnj: \n  shows \"hermitean H \\<longleftrightarrow> hermitean (mat_cnj H)\"", "lemma hermitean_mult_real:\n  assumes \"hermitean H\"\n  shows \"hermitean ((cor k) *\\<^sub>s\\<^sub>m H)\"", "lemma hermitean_congruence:\n  assumes \"hermitean H\"\n  shows \"hermitean (congruence M H)\"", "lemma hermitean_eye [simp]:\n  shows \"hermitean eye\"", "lemma hermitean_eye' [simp]: \n  shows \"hermitean (1, 0, 0, 1)\"", "lemma hermitean_unit_circle [simp]:\n  shows \"hermitean (1, 0, 0, -1)\"", "lemma mat_det_hermitean_real:\n  assumes \"hermitean A\"\n  shows \"is_real (mat_det A)\"", "lemma hermitean_det_zero_trace_zero:\n  assumes \"mat_det A = 0\" and \"mat_trace A = (0::complex)\" and \"hermitean A\"\n  shows \"A = mat_zero\"", "lemma bilinear_form_hermitean_commute:\n  assumes \"hermitean H\"\n  shows \"bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)\"", "lemma quad_form_hermitean_real:\n  assumes \"hermitean H\"\n  shows \"is_real (quad_form z H)\"", "lemma quad_form_vec_cnj_mat_cnj:\n  assumes \"hermitean H\"\n  shows \"quad_form (vec_cnj z) (mat_cnj H) = quad_form z H\"", "lemma hermitean_eigenval_real:\n  assumes \"hermitean H\" and \"eigenval k H\"\n  shows \"is_real k\"", "lemma hermitean_distinct_eigenvals:\n  assumes \"hermitean H\"\n  shows \"(\\<exists> k\\<^sub>1 k\\<^sub>2. k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and> eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or> mat_diagonal H\"", "lemma hermitean_ortho_eigenvecs:\n  assumes \"hermitean H\"\n  assumes \"eigenpair k1 v1 H\" and \"eigenpair k2 v2 H\" and \"k1 \\<noteq> k2\"\n  shows \"vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\" and \"vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\"", "lemma hermitean_diagonizable:\n  assumes \"hermitean H\"\n  shows \"\\<exists> k1 k2 M. mat_det M \\<noteq> 0 \\<and> unitary M \\<and> congruence M H = (k1, 0, 0, k2) \\<and>\n                    is_real k1 \\<and> is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\""], "translations": [["", "lemma hermitean_transpose:\n  shows \"hermitean A \\<longleftrightarrow> mat_transpose A = mat_cnj A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean A = (mat_transpose A = mat_cnj A)", "unfolding hermitean_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat_adj A = A) = (mat_transpose A = mat_cnj A)", "by (cases A) (auto simp add: mat_adj_def mat_cnj_def)"], ["", "text \\<open>Characterization of 2x2 Hermitean matrices elements. \nAll 2x2 Hermitean matrices are of the form \n$$\n\\left(\n\\begin{array}{cc}\nA & B\\\\\n\\overline{B} & D\n\\end{array}\n\\right),\n$$\nfor real $A$ and $D$ and complex $B$.\n\\<close>"], ["", "lemma hermitean_mk_circline [simp]: \n  shows \"hermitean (cor A, B, cnj B, cor D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (cor A, B, cnj B, cor D)", "unfolding hermitean_def mat_adj_def mat_cnj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (cor A, B, cnj B, cor D)) =\n    (cor A, B, cnj B, cor D)", "by simp"], ["", "lemma hermitean_mk_circline' [simp]:\n  assumes \"is_real A\" and \"is_real D\"\n  shows \"hermitean (A, B, cnj B, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (A, B, cnj B, D)", "using assms eq_cnj_iff_real"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  (cnj ?z = ?z) = is_real ?z\n\ngoal (1 subgoal):\n 1. hermitean (A, B, cnj B, D)", "unfolding hermitean_def mat_adj_def mat_cnj_def"], ["proof (prove)\nusing this:\n  is_real A\n  is_real D\n  (cnj ?z = ?z) = is_real ?z\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A, B, cnj B, D)) = (A, B, cnj B, D)", "by force"], ["", "lemma hermitean_elems:\n  assumes \"hermitean (A, B, C, D)\"\n  shows \"is_real A\" and \"is_real D\" and \"B = cnj C\" and \"cnj B = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (is_real A &&& is_real D) &&& B = cnj C &&& cnj B = C", "using assms eq_cnj_iff_real[of A] eq_cnj_iff_real[of D]"], ["proof (prove)\nusing this:\n  hermitean (A, B, C, D)\n  (cnj A = A) = is_real A\n  (cnj D = D) = is_real D\n\ngoal (1 subgoal):\n 1. (is_real A &&& is_real D) &&& B = cnj C &&& cnj B = C", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["", "text \\<open>Operations that preserve the Hermitean property\\<close>"], ["", "lemma hermitean_mat_cnj: \n  shows \"hermitean H \\<longleftrightarrow> hermitean (mat_cnj H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean H = hermitean (mat_cnj H)", "by (cases H) (auto simp add:  hermitean_def mat_adj_def mat_cnj_def)"], ["", "lemma hermitean_mult_real:\n  assumes \"hermitean H\"\n  shows \"hermitean ((cor k) *\\<^sub>s\\<^sub>m H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (cor k *\\<^sub>s\\<^sub>m H)", "using assms"], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. hermitean (cor k *\\<^sub>s\\<^sub>m H)", "unfolding hermitean_def"], ["proof (prove)\nusing this:\n  mat_adj H = H\n\ngoal (1 subgoal):\n 1. mat_adj (cor k *\\<^sub>s\\<^sub>m H) = cor k *\\<^sub>s\\<^sub>m H", "by simp"], ["", "lemma hermitean_congruence:\n  assumes \"hermitean H\"\n  shows \"hermitean (congruence M H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (congruence M H)", "using assms"], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. hermitean (congruence M H)", "unfolding hermitean_def"], ["proof (prove)\nusing this:\n  mat_adj H = H\n\ngoal (1 subgoal):\n 1. mat_adj (congruence M H) = congruence M H", "by (auto simp add: mult_mm_assoc)"], ["", "text \\<open>Identity matrix is Hermitean\\<close>"], ["", "lemma hermitean_eye [simp]:\n  shows \"hermitean eye\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean eye", "by (auto simp add:  hermitean_def mat_adj_def mat_cnj_def)"], ["", "lemma hermitean_eye' [simp]: \n  shows \"hermitean (1, 0, 0, 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (1, 0, 0, 1)", "by (auto simp add:  hermitean_def mat_adj_def mat_cnj_def)"], ["", "text \\<open>Unit circle matrix is Hermitean\\<close>"], ["", "lemma hermitean_unit_circle [simp]:\n  shows \"hermitean (1, 0, 0, -1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (1, 0, 0, - 1)", "by (auto simp add:  hermitean_def mat_adj_def mat_cnj_def)"], ["", "text \\<open>Hermitean matrices have real determinant\\<close>"], ["", "lemma mat_det_hermitean_real:\n  assumes \"hermitean A\"\n  shows \"is_real (mat_det A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (mat_det A)", "using assms"], ["proof (prove)\nusing this:\n  hermitean A\n\ngoal (1 subgoal):\n 1. is_real (mat_det A)", "unfolding hermitean_def"], ["proof (prove)\nusing this:\n  mat_adj A = A\n\ngoal (1 subgoal):\n 1. is_real (mat_det A)", "by (metis eq_cnj_iff_real mat_det_adj)"], ["", "text \\<open>Zero matrix is the only Hermitean matrix with both determinant and trace equal\nto zero\\<close>"], ["", "lemma hermitean_det_zero_trace_zero:\n  assumes \"mat_det A = 0\" and \"mat_trace A = (0::complex)\" and \"hermitean A\"\n  shows \"A = mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = mat_zero", "using assms"], ["proof (prove)\nusing this:\n  mat_det A = 0\n  mat_trace A = 0\n  hermitean A\n\ngoal (1 subgoal):\n 1. A = mat_zero", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "fix a d c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "assume \"a * d = cnj c * c\" \"a + d = 0\" \"cnj a = a\""], ["proof (state)\nthis:\n  a * d = cnj c * c\n  a + d = 0\n  cnj a = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "from \\<open>a + d = 0\\<close>"], ["proof (chain)\npicking this:\n  a + d = 0", "have \"d = -a\""], ["proof (prove)\nusing this:\n  a + d = 0\n\ngoal (1 subgoal):\n 1. d = - a", "by (metis add_eq_0_iff)"], ["proof (state)\nthis:\n  d = - a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "hence \"- (cor (Re a))\\<^sup>2  = (cor (cmod c))\\<^sup>2\""], ["proof (prove)\nusing this:\n  d = - a\n\ngoal (1 subgoal):\n 1. - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2", "using \\<open>cnj a = a\\<close> eq_cnj_iff_real[of a]"], ["proof (prove)\nusing this:\n  d = - a\n  cnj a = a\n  (cnj a = a) = is_real a\n\ngoal (1 subgoal):\n 1. - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2", "using \\<open>a*d = cnj c * c\\<close>"], ["proof (prove)\nusing this:\n  d = - a\n  cnj a = a\n  (cnj a = a) = is_real a\n  a * d = cnj c * c\n\ngoal (1 subgoal):\n 1. - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2", "using complex_mult_cnj_cmod[of \"cnj c\"]"], ["proof (prove)\nusing this:\n  d = - a\n  cnj a = a\n  (cnj a = a) = is_real a\n  a * d = cnj c * c\n  cnj c * cnj (cnj c) = cor ((cmod (cnj c))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "hence \"- (Re a)\\<^sup>2 \\<ge> 0\""], ["proof (prove)\nusing this:\n  - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> - (Re a)\\<^sup>2", "using zero_le_power2[of \"cmod c\"]"], ["proof (prove)\nusing this:\n  - (cor (Re a))\\<^sup>2 = (cor (cmod c))\\<^sup>2\n  0 \\<le> (cmod c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> - (Re a)\\<^sup>2", "by (metis Re_complex_of_real cor_squared of_real_minus)"], ["proof (state)\nthis:\n  0 \\<le> - (Re a)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "hence \"a = 0\""], ["proof (prove)\nusing this:\n  0 \\<le> - (Re a)\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = 0", "using zero_le_power2[of \"Re a\"]"], ["proof (prove)\nusing this:\n  0 \\<le> - (Re a)\\<^sup>2\n  0 \\<le> (Re a)\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = 0", "using \\<open>cnj a = a\\<close>  eq_cnj_iff_real[of a]"], ["proof (prove)\nusing this:\n  0 \\<le> - (Re a)\\<^sup>2\n  0 \\<le> (Re a)\\<^sup>2\n  cnj a = a\n  (cnj a = a) = is_real a\n\ngoal (1 subgoal):\n 1. a = 0", "by (simp add: complex_eq_if_Re_eq)"], ["proof (state)\nthis:\n  a = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 * ?d2 = cnj ?c2 * ?c2; ?a2 + ?d2 = 0; cnj ?a2 = ?a2\\<rbrakk>\n  \\<Longrightarrow> ?a2 = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 * ?d2 = cnj ?c2 * ?c2; ?a2 + ?d2 = 0; cnj ?a2 = ?a2\\<rbrakk>\n  \\<Longrightarrow> ?a2 = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "obtain a b c d where \"A = (a, b, c, d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        A = (a, b, c, d) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases A) auto"], ["proof (state)\nthis:\n  A = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mat_det A = 0; mat_trace A = 0; hermitean A\\<rbrakk>\n    \\<Longrightarrow> A = mat_zero", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. A = mat_zero", "using *[of a d c]  *[of d a c]"], ["proof (prove)\nusing this:\n  A = (a, b, c, d)\n  \\<lbrakk>a * d = cnj c * c; a + d = 0; cnj a = a\\<rbrakk>\n  \\<Longrightarrow> a = 0\n  \\<lbrakk>d * a = cnj c * c; d + a = 0; cnj d = d\\<rbrakk>\n  \\<Longrightarrow> d = 0\n\ngoal (1 subgoal):\n 1. A = mat_zero", "using assms \\<open>A = (a, b, c, d)\\<close>"], ["proof (prove)\nusing this:\n  A = (a, b, c, d)\n  \\<lbrakk>a * d = cnj c * c; a + d = 0; cnj a = a\\<rbrakk>\n  \\<Longrightarrow> a = 0\n  \\<lbrakk>d * a = cnj c * c; d + a = 0; cnj d = d\\<rbrakk>\n  \\<Longrightarrow> d = 0\n  mat_det A = 0\n  mat_trace A = 0\n  hermitean A\n  A = (a, b, c, d)\n\ngoal (1 subgoal):\n 1. A = mat_zero", "by (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  A = mat_zero\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Bilinear and quadratic forms with Hermitean matrices\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>A Hermitean matrix $(A, B, \\overline{B}, D)$, for real $A$ and $D$, gives rise to bilinear form\n$A\\cdot \\overline{v_{11}} \\cdot v_{21}+\\overline{B} \\cdot \\overline{v_{12}} \\cdot v_{21} +\nB \\cdot \\overline{v_{11}} \\cdot v_{22}+D\\cdot \\overline{v_{12}}\\cdot v_{22}$ (acting on vectors $(v_{11}, v_{12})$ and\n$(v_{21}, v_{22})$) and to the quadratic form $A \\cdot \\overline{v_1} \\cdot v_1+\\overline{B}\\cdot \\overline{v_2}\\cdot v_1 +\nB\\cdot \\overline{v_1}\\cdot v_2 + D\\cdot \\overline{v_2} \\cdot v_2$ (acting on the vector $(v_1, v_2)$).\\<close>"], ["", "lemma bilinear_form_hermitean_commute:\n  assumes \"hermitean H\"\n  shows \"bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)", "have \"v2 *\\<^sub>v\\<^sub>m mat_cnj H *\\<^sub>v\\<^sub>v vec_cnj v1 = vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v2 *\\<^sub>v\\<^sub>m mat_cnj H *\\<^sub>v\\<^sub>v vec_cnj v1 =\n    vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2)", "by (subst mult_vv_commute, subst mult_mv_mult_vm, simp add: mat_adj_def mat_transpose_mat_cnj)"], ["proof (state)\nthis:\n  v2 *\\<^sub>v\\<^sub>m mat_cnj H *\\<^sub>v\\<^sub>v vec_cnj v1 =\n  vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)", "also"], ["proof (state)\nthis:\n  v2 *\\<^sub>v\\<^sub>m mat_cnj H *\\<^sub>v\\<^sub>v vec_cnj v1 =\n  vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)", "have \"\\<dots> = bilinear_form v1 v2 H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2) =\n    bilinear_form v1 v2 H", "using assms"], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2) =\n    bilinear_form v1 v2 H", "by (simp add: mult_vv_mv hermitean_def)"], ["proof (state)\nthis:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v (mat_adj H *\\<^sub>m\\<^sub>v v2) =\n  bilinear_form v1 v2 H\n\ngoal (1 subgoal):\n 1. bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)", "finally"], ["proof (chain)\npicking this:\n  v2 *\\<^sub>v\\<^sub>m mat_cnj H *\\<^sub>v\\<^sub>v vec_cnj v1 =\n  bilinear_form v1 v2 H", "show ?thesis"], ["proof (prove)\nusing this:\n  v2 *\\<^sub>v\\<^sub>m mat_cnj H *\\<^sub>v\\<^sub>v vec_cnj v1 =\n  bilinear_form v1 v2 H\n\ngoal (1 subgoal):\n 1. bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)", "by (simp add: cnj_mult_vv vec_cnj_mult_vm)"], ["proof (state)\nthis:\n  bilinear_form v1 v2 H = cnj (bilinear_form v2 v1 H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quad_form_hermitean_real:\n  assumes \"hermitean H\"\n  shows \"is_real (quad_form z H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (quad_form z H)", "using assms"], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. is_real (quad_form z H)", "by (subst eq_cnj_iff_real[symmetric])  (simp del: quad_form_def add: hermitean_def)"], ["", "lemma quad_form_vec_cnj_mat_cnj:\n  assumes \"hermitean H\"\n  shows \"quad_form (vec_cnj z) (mat_cnj H) = quad_form z H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quad_form (vec_cnj z) (mat_cnj H) = quad_form z H", "using assms"], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. quad_form (vec_cnj z) (mat_cnj H) = quad_form z H", "using cnj_mult_vv cnj_quad_form hermitean_def vec_cnj_mult_vm"], ["proof (prove)\nusing this:\n  hermitean H\n  cnj (?v1.0 *\\<^sub>v\\<^sub>v ?v2.0) =\n  vec_cnj ?v1.0 *\\<^sub>v\\<^sub>v vec_cnj ?v2.0\n  cnj (quad_form ?z ?H) = quad_form ?z (mat_adj ?H)\n  hermitean ?A = (mat_adj ?A = ?A)\n  vec_cnj (?v *\\<^sub>v\\<^sub>m ?A) =\n  vec_cnj ?v *\\<^sub>v\\<^sub>m mat_cnj ?A\n\ngoal (1 subgoal):\n 1. quad_form (vec_cnj z) (mat_cnj H) = quad_form z H", "by auto"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Eigenvalues, eigenvectors and diagonalization of Hermitean matrices\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Hermitean matrices have real eigenvalues\\<close>"], ["", "lemma hermitean_eigenval_real:\n  assumes \"hermitean H\" and \"eigenval k H\"\n  shows \"is_real k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_real k", "from assms"], ["proof (chain)\npicking this:\n  hermitean H\n  eigenval k H", "obtain v where \"v \\<noteq> vec_zero\" \"H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\""], ["proof (prove)\nusing this:\n  hermitean H\n  eigenval k H\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<noteq> vec_zero;\n         H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eigenval_def"], ["proof (prove)\nusing this:\n  hermitean H\n  \\<exists>v.\n     v \\<noteq> vec_zero \\<and>\n     H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<noteq> vec_zero;\n         H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v \\<noteq> vec_zero\n  H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\n\ngoal (1 subgoal):\n 1. is_real k", "have \"k * (v *\\<^sub>v\\<^sub>v vec_cnj v) = (k *\\<^sub>s\\<^sub>v v) *\\<^sub>v\\<^sub>v (vec_cnj v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * v *\\<^sub>v\\<^sub>v vec_cnj v =\n    k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v", "by (simp add: mult_vv_scale_sv1)"], ["proof (state)\nthis:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v =\n  k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v\n\ngoal (1 subgoal):\n 1. is_real k", "also"], ["proof (state)\nthis:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v =\n  k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v\n\ngoal (1 subgoal):\n 1. is_real k", "have \"... = (H *\\<^sub>m\\<^sub>v v) *\\<^sub>v\\<^sub>v (vec_cnj v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n    H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v", "using \\<open>H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\\<close>"], ["proof (prove)\nusing this:\n  H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\n\ngoal (1 subgoal):\n 1. k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n    H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v", "by simp"], ["proof (state)\nthis:\n  k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n  H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v\n\ngoal (1 subgoal):\n 1. is_real k", "also"], ["proof (state)\nthis:\n  k *\\<^sub>s\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n  H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v\n\ngoal (1 subgoal):\n 1. is_real k", "have \"... =  v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v (vec_cnj v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n    v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v vec_cnj v)", "by (simp add: mult_mv_vv)"], ["proof (state)\nthis:\n  H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n  v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v vec_cnj v)\n\ngoal (1 subgoal):\n 1. is_real k", "also"], ["proof (state)\nthis:\n  H *\\<^sub>m\\<^sub>v v *\\<^sub>v\\<^sub>v vec_cnj v =\n  v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v vec_cnj v)\n\ngoal (1 subgoal):\n 1. is_real k", "have \"... = v *\\<^sub>v\\<^sub>v (vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v vec_cnj v) =\n    v *\\<^sub>v\\<^sub>v\n    vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v)", "by (simp add: vec_cnj_mult_mv)"], ["proof (state)\nthis:\n  v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v vec_cnj v) =\n  v *\\<^sub>v\\<^sub>v\n  vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. is_real k", "also"], ["proof (state)\nthis:\n  v *\\<^sub>v\\<^sub>v (mat_transpose H *\\<^sub>m\\<^sub>v vec_cnj v) =\n  v *\\<^sub>v\\<^sub>v\n  vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. is_real k", "have \"... = v *\\<^sub>v\\<^sub>v (vec_cnj (H *\\<^sub>m\\<^sub>v v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v *\\<^sub>v\\<^sub>v\n    vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v) =\n    v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v)", "using \\<open>hermitean H\\<close>"], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. v *\\<^sub>v\\<^sub>v\n    vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v) =\n    v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v)", "by (simp add: hermitean_def mat_adj_def)"], ["proof (state)\nthis:\n  v *\\<^sub>v\\<^sub>v\n  vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v) =\n  v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. is_real k", "also"], ["proof (state)\nthis:\n  v *\\<^sub>v\\<^sub>v\n  vec_cnj (mat_cnj (mat_transpose H) *\\<^sub>m\\<^sub>v v) =\n  v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. is_real k", "have \"... = v *\\<^sub>v\\<^sub>v (vec_cnj (k *\\<^sub>s\\<^sub>v v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v) =\n    v *\\<^sub>v\\<^sub>v vec_cnj (k *\\<^sub>s\\<^sub>v v)", "using \\<open>H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\\<close>"], ["proof (prove)\nusing this:\n  H *\\<^sub>m\\<^sub>v v = k *\\<^sub>s\\<^sub>v v\n\ngoal (1 subgoal):\n 1. v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v) =\n    v *\\<^sub>v\\<^sub>v vec_cnj (k *\\<^sub>s\\<^sub>v v)", "by simp"], ["proof (state)\nthis:\n  v *\\<^sub>v\\<^sub>v vec_cnj (H *\\<^sub>m\\<^sub>v v) =\n  v *\\<^sub>v\\<^sub>v vec_cnj (k *\\<^sub>s\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. is_real k", "finally"], ["proof (chain)\npicking this:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v =\n  v *\\<^sub>v\\<^sub>v vec_cnj (k *\\<^sub>s\\<^sub>v v)", "have \"k * (v *\\<^sub>v\\<^sub>v vec_cnj v) = cnj k * (v *\\<^sub>v\\<^sub>v vec_cnj v)\""], ["proof (prove)\nusing this:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v =\n  v *\\<^sub>v\\<^sub>v vec_cnj (k *\\<^sub>s\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. k * v *\\<^sub>v\\<^sub>v vec_cnj v =\n    cnj k * v *\\<^sub>v\\<^sub>v vec_cnj v", "by (simp add: mult_vv_scale_sv2)"], ["proof (state)\nthis:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v = cnj k * v *\\<^sub>v\\<^sub>v vec_cnj v\n\ngoal (1 subgoal):\n 1. is_real k", "hence \"k = cnj k\""], ["proof (prove)\nusing this:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v = cnj k * v *\\<^sub>v\\<^sub>v vec_cnj v\n\ngoal (1 subgoal):\n 1. k = cnj k", "using \\<open>v \\<noteq> vec_zero\\<close>"], ["proof (prove)\nusing this:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v = cnj k * v *\\<^sub>v\\<^sub>v vec_cnj v\n  v \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. k = cnj k", "using scalsquare_vv_zero[of v]"], ["proof (prove)\nusing this:\n  k * v *\\<^sub>v\\<^sub>v vec_cnj v = cnj k * v *\\<^sub>v\\<^sub>v vec_cnj v\n  v \\<noteq> vec_zero\n  (vec_cnj v *\\<^sub>v\\<^sub>v v = 0) = (v = vec_zero)\n\ngoal (1 subgoal):\n 1. k = cnj k", "by (simp add: mult_vv_commute)"], ["proof (state)\nthis:\n  k = cnj k\n\ngoal (1 subgoal):\n 1. is_real k", "thus ?thesis"], ["proof (prove)\nusing this:\n  k = cnj k\n\ngoal (1 subgoal):\n 1. is_real k", "by (metis eq_cnj_iff_real)"], ["proof (state)\nthis:\n  is_real k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Non-diagonal Hermitean matrices have distinct eigenvalues\\<close>"], ["", "lemma hermitean_distinct_eigenvals:\n  assumes \"hermitean H\"\n  shows \"(\\<exists> k\\<^sub>1 k\\<^sub>2. k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and> eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or> mat_diagonal H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "obtain A B C D where HH: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "proof (cases \"B = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H\n 2. B \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "case True"], ["proof (state)\nthis:\n  B = 0\n\ngoal (2 subgoals):\n 1. B = 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H\n 2. B \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "thus ?thesis"], ["proof (prove)\nusing this:\n  B = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "using \\<open>hermitean H\\<close> hermitean_elems[of A B C D] HH"], ["proof (prove)\nusing this:\n  B = 0\n  hermitean H\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real A\n  hermitean (A, B, C, D) \\<Longrightarrow> is_real D\n  hermitean (A, B, C, D) \\<Longrightarrow> B = cnj C\n  hermitean (A, B, C, D) \\<Longrightarrow> cnj B = C\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "by auto"], ["proof (state)\nthis:\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n  mat_diagonal H\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "case False"], ["proof (state)\nthis:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "have \"(mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "have \"C = cnj B\" \"is_real A\" \"is_real D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C = cnj B &&& is_real A &&& is_real D", "using hermitean_elems HH \\<open>hermitean H\\<close>"], ["proof (prove)\nusing this:\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n  H = (A, B, C, D)\n  hermitean H\n\ngoal (1 subgoal):\n 1. C = cnj B &&& is_real A &&& is_real D", "by auto"], ["proof (state)\nthis:\n  C = cnj B\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\n\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "hence \"(A + D)\\<^sup>2 = 4*(A*D - B*C)\""], ["proof (prove)\nusing this:\n  \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\n\ngoal (1 subgoal):\n 1. (A + D)\\<^sup>2 = 4 * (A * D - B * C)", "using HH"], ["proof (prove)\nusing this:\n  \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. (A + D)\\<^sup>2 = 4 * (A * D - B * C)", "by auto"], ["proof (state)\nthis:\n  (A + D)\\<^sup>2 = 4 * (A * D - B * C)\n\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "hence \"(A - D)\\<^sup>2 = - 4*B*cnj B\""], ["proof (prove)\nusing this:\n  (A + D)\\<^sup>2 = 4 * (A * D - B * C)\n\ngoal (1 subgoal):\n 1. (A - D)\\<^sup>2 = - 4 * B * cnj B", "using \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  (A + D)\\<^sup>2 = 4 * (A * D - B * C)\n  C = cnj B\n\ngoal (1 subgoal):\n 1. (A - D)\\<^sup>2 = - 4 * B * cnj B", "by (auto simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  (A - D)\\<^sup>2 = - 4 * B * cnj B\n\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "hence \"(A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = -4\""], ["proof (prove)\nusing this:\n  (A - D)\\<^sup>2 = - 4 * B * cnj B\n\ngoal (1 subgoal):\n 1. (A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = - 4", "using \\<open>B \\<noteq> 0\\<close> complex_mult_cnj_cmod[of B]"], ["proof (prove)\nusing this:\n  (A - D)\\<^sup>2 = - 4 * B * cnj B\n  B \\<noteq> 0\n  B * cnj B = cor ((cmod B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = - 4", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  (A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = - 4\n\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "hence \"(Re A - Re D)\\<^sup>2 / (cmod B)\\<^sup>2 = -4\""], ["proof (prove)\nusing this:\n  (A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = - 4\n\ngoal (1 subgoal):\n 1. (Re A - Re D)\\<^sup>2 / (cmod B)\\<^sup>2 = - 4", "using \\<open>is_real A\\<close> \\<open>is_real D\\<close> \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = - 4\n  is_real A\n  is_real D\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (Re A - Re D)\\<^sup>2 / (cmod B)\\<^sup>2 = - 4", "using Re_divide_real[of \"cor ((cmod B)\\<^sup>2)\" \"(A - D)\\<^sup>2\"]"], ["proof (prove)\nusing this:\n  (A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2) = - 4\n  is_real A\n  is_real D\n  B \\<noteq> 0\n  \\<lbrakk>is_real (cor ((cmod B)\\<^sup>2));\n   cor ((cmod B)\\<^sup>2) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Re ((A - D)\\<^sup>2 / cor ((cmod B)\\<^sup>2)) =\n                    Re ((A - D)\\<^sup>2) / Re (cor ((cmod B)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (Re A - Re D)\\<^sup>2 / (cmod B)\\<^sup>2 = - 4", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (Re A - Re D)\\<^sup>2 / (cmod B)\\<^sup>2 = - 4\n\ngoal (1 subgoal):\n 1. \\<not> (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  (Re A - Re D)\\<^sup>2 / (cmod B)\\<^sup>2 = - 4\n\ngoal (1 subgoal):\n 1. False", "by (metis abs_neg_numeral abs_power2 neg_numeral_neq_numeral power_divide)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "apply (rule disjI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H", "apply (subst eigen_equation)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       k\\<^sub>1\\<^sup>2 - mat_trace H * k\\<^sub>1 + mat_det H = 0 \\<and>\n       k\\<^sub>2\\<^sup>2 - mat_trace H * k\\<^sub>2 + mat_det H = 0", "using complex_quadratic_equation_monic_distinct_roots[of \"-mat_trace H\" \"mat_det H\"] \\<open>(mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\\<close>"], ["proof (prove)\nusing this:\n  (- mat_trace H)\\<^sup>2 - 4 * mat_det H \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k\\<^sub>1 k\\<^sub>2.\n     k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n     k\\<^sub>1\\<^sup>2 + - mat_trace H * k\\<^sub>1 + mat_det H = 0 \\<and>\n     k\\<^sub>2\\<^sup>2 + - mat_trace H * k\\<^sub>2 + mat_det H = 0\n  (mat_trace H)\\<^sup>2 \\<noteq> 4 * mat_det H\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       k\\<^sub>1\\<^sup>2 - mat_trace H * k\\<^sub>1 + mat_det H = 0 \\<and>\n       k\\<^sub>2\\<^sup>2 - mat_trace H * k\\<^sub>2 + mat_det H = 0", "by auto"], ["proof (state)\nthis:\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n  mat_diagonal H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n  mat_diagonal H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Eigenvectors corresponding to different eigenvalues of Hermitean matrices are\northogonal\\<close>"], ["", "lemma hermitean_ortho_eigenvecs:\n  assumes \"hermitean H\"\n  assumes \"eigenpair k1 v1 H\" and \"eigenpair k2 v2 H\" and \"k1 \\<noteq> k2\"\n  shows \"vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\" and \"vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0 &&&\n    vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n 2. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "from assms"], ["proof (chain)\npicking this:\n  hermitean H\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  k1 \\<noteq> k2", "have \"v1 \\<noteq> vec_zero\" \"H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\"\n       \"v2 \\<noteq> vec_zero\" \"H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\""], ["proof (prove)\nusing this:\n  hermitean H\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  k1 \\<noteq> k2\n\ngoal (1 subgoal):\n 1. (v1 \\<noteq> vec_zero &&&\n     H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1) &&&\n    v2 \\<noteq> vec_zero &&&\n    H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2", "unfolding eigenpair_def"], ["proof (prove)\nusing this:\n  hermitean H\n  v1 \\<noteq> vec_zero \\<and>\n  H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\n  v2 \\<noteq> vec_zero \\<and>\n  H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\n  k1 \\<noteq> k2\n\ngoal (1 subgoal):\n 1. (v1 \\<noteq> vec_zero &&&\n     H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1) &&&\n    v2 \\<noteq> vec_zero &&&\n    H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2", "by auto"], ["proof (state)\nthis:\n  v1 \\<noteq> vec_zero\n  H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\n  v2 \\<noteq> vec_zero\n  H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\n\ngoal (2 subgoals):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n 2. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "have real_k: \"is_real k1\" \"is_real k2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "using assms"], ["proof (prove)\nusing this:\n  hermitean H\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  k1 \\<noteq> k2\n\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "using hermitean_eigenval_real[of H k1]"], ["proof (prove)\nusing this:\n  hermitean H\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  k1 \\<noteq> k2\n  \\<lbrakk>hermitean H; eigenval k1 H\\<rbrakk> \\<Longrightarrow> is_real k1\n\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "using hermitean_eigenval_real[of H k2]"], ["proof (prove)\nusing this:\n  hermitean H\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  k1 \\<noteq> k2\n  \\<lbrakk>hermitean H; eigenval k1 H\\<rbrakk> \\<Longrightarrow> is_real k1\n  \\<lbrakk>hermitean H; eigenval k2 H\\<rbrakk> \\<Longrightarrow> is_real k2\n\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "unfolding eigenpair_def eigenval_def"], ["proof (prove)\nusing this:\n  hermitean H\n  v1 \\<noteq> vec_zero \\<and>\n  H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\n  v2 \\<noteq> vec_zero \\<and>\n  H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\n  k1 \\<noteq> k2\n  \\<lbrakk>hermitean H;\n   \\<exists>v.\n      v \\<noteq> vec_zero \\<and>\n      H *\\<^sub>m\\<^sub>v v = k1 *\\<^sub>s\\<^sub>v v\\<rbrakk>\n  \\<Longrightarrow> is_real k1\n  \\<lbrakk>hermitean H;\n   \\<exists>v.\n      v \\<noteq> vec_zero \\<and>\n      H *\\<^sub>m\\<^sub>v v = k2 *\\<^sub>s\\<^sub>v v\\<rbrakk>\n  \\<Longrightarrow> is_real k2\n\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "by blast+"], ["proof (state)\nthis:\n  is_real k1\n  is_real k2\n\ngoal (2 subgoals):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n 2. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "have \"vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)", "using \\<open>H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\\<close>"], ["proof (prove)\nusing this:\n  H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\n\ngoal (1 subgoal):\n 1. vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)", "by auto"], ["proof (state)\nthis:\n  vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)\n\ngoal (2 subgoals):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n 2. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "hence \"vec_cnj v2 *\\<^sub>v\\<^sub>m H  = k2 *\\<^sub>s\\<^sub>v vec_cnj v2\""], ["proof (prove)\nusing this:\n  vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>m H = k2 *\\<^sub>s\\<^sub>v vec_cnj v2", "using \\<open>hermitean H\\<close> real_k eq_cnj_iff_real[of k1] eq_cnj_iff_real[of k2]"], ["proof (prove)\nusing this:\n  vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)\n  hermitean H\n  is_real k1\n  is_real k2\n  (cnj k1 = k1) = is_real k1\n  (cnj k2 = k2) = is_real k2\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>m H = k2 *\\<^sub>s\\<^sub>v vec_cnj v2", "unfolding hermitean_def"], ["proof (prove)\nusing this:\n  vec_cnj (H *\\<^sub>m\\<^sub>v v2) = vec_cnj (k2 *\\<^sub>s\\<^sub>v v2)\n  mat_adj H = H\n  is_real k1\n  is_real k2\n  (cnj k1 = k1) = is_real k1\n  (cnj k2 = k2) = is_real k2\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>m H = k2 *\\<^sub>s\\<^sub>v vec_cnj v2", "by (cases H, cases v2) (auto simp add: mat_adj_def mat_cnj_def vec_cnj_def)"], ["proof (state)\nthis:\n  vec_cnj v2 *\\<^sub>v\\<^sub>m H = k2 *\\<^sub>s\\<^sub>v vec_cnj v2\n\ngoal (2 subgoals):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n 2. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "have \"k2 * (vec_cnj v2 *\\<^sub>v\\<^sub>v v1) = k1 * (vec_cnj v2 *\\<^sub>v\\<^sub>v v1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k2 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1 =\n    k1 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1", "using \\<open>H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\\<close>"], ["proof (prove)\nusing this:\n  H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\n\ngoal (1 subgoal):\n 1. k2 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1 =\n    k1 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1", "using \\<open>vec_cnj v2 *\\<^sub>v\\<^sub>m H  = k2 *\\<^sub>s\\<^sub>v vec_cnj v2\\<close>"], ["proof (prove)\nusing this:\n  H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\n  vec_cnj v2 *\\<^sub>v\\<^sub>m H = k2 *\\<^sub>s\\<^sub>v vec_cnj v2\n\ngoal (1 subgoal):\n 1. k2 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1 =\n    k1 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1", "by (cases v1, cases v2, cases H)\n       (metis mult_vv_mv mult_vv_scale_sv1 mult_vv_scale_sv2)"], ["proof (state)\nthis:\n  k2 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1 =\n  k1 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1\n\ngoal (2 subgoals):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n 2. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "thus \"vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\""], ["proof (prove)\nusing this:\n  k2 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1 =\n  k1 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0", "using \\<open>k1 \\<noteq> k2\\<close>"], ["proof (prove)\nusing this:\n  k2 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1 =\n  k1 * vec_cnj v2 *\\<^sub>v\\<^sub>v v1\n  k1 \\<noteq> k2\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0", "by simp"], ["proof (state)\nthis:\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "hence \"cnj (vec_cnj v2 *\\<^sub>v\\<^sub>v v1) = 0\""], ["proof (prove)\nusing this:\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n\ngoal (1 subgoal):\n 1. cnj (vec_cnj v2 *\\<^sub>v\\<^sub>v v1) = 0", "by simp"], ["proof (state)\nthis:\n  cnj (vec_cnj v2 *\\<^sub>v\\<^sub>v v1) = 0\n\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "thus \"vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\""], ["proof (prove)\nusing this:\n  cnj (vec_cnj v2 *\\<^sub>v\\<^sub>v v1) = 0\n\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "by (simp add: cnj_mult_vv mult_vv_commute)"], ["proof (state)\nthis:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Hermitean matrices are diagonizable by unitary matrices. Diagonal entries are\nreal and the sign of the determinant is preserved.\\<close>"], ["", "lemma hermitean_diagonizable:\n  assumes \"hermitean H\"\n  shows \"\\<exists> k1 k2 M. mat_det M \\<noteq> 0 \\<and> unitary M \\<and> congruence M H = (k1, 0, 0, k2) \\<and>\n                    is_real k1 \\<and> is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "from assms"], ["proof (chain)\npicking this:\n  hermitean H", "have \"(\\<exists>k\\<^sub>1 k\\<^sub>2. k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and> eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or> mat_diagonal H\""], ["proof (prove)\nusing this:\n  hermitean H\n\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "using hermitean_distinct_eigenvals[of H]"], ["proof (prove)\nusing this:\n  hermitean H\n  hermitean H \\<Longrightarrow>\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n  mat_diagonal H\n\ngoal (1 subgoal):\n 1. (\\<exists>k\\<^sub>1 k\\<^sub>2.\n        k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n        eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n    mat_diagonal H", "by simp"], ["proof (state)\nthis:\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n  mat_diagonal H\n\ngoal (1 subgoal):\n 1. \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H) \\<or>\n  mat_diagonal H\n\ngoal (1 subgoal):\n 1. \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "assume \"\\<exists>k\\<^sub>1 k\\<^sub>2. k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and> eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H\""], ["proof (state)\nthis:\n  \\<exists>k\\<^sub>1 k\\<^sub>2.\n     k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n     eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "then"], ["proof (chain)\npicking this:\n  \\<exists>k\\<^sub>1 k\\<^sub>2.\n     k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n     eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H", "obtain k1 k2 where  \"k1 \\<noteq> k2\" \"eigenval k1 H\" \"eigenval k2 H\""], ["proof (prove)\nusing this:\n  \\<exists>k\\<^sub>1 k\\<^sub>2.\n     k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n     eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H\n\ngoal (1 subgoal):\n 1. (\\<And>k1 k2.\n        \\<lbrakk>k1 \\<noteq> k2; eigenval k1 H; eigenval k2 H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hermitean_distinct_eigenvals"], ["proof (prove)\nusing this:\n  \\<exists>k\\<^sub>1 k\\<^sub>2.\n     k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n     eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H\n  hermitean ?H \\<Longrightarrow>\n  (\\<exists>k\\<^sub>1 k\\<^sub>2.\n      k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n      eigenval k\\<^sub>1 ?H \\<and> eigenval k\\<^sub>2 ?H) \\<or>\n  mat_diagonal ?H\n\ngoal (1 subgoal):\n 1. (\\<And>k1 k2.\n        \\<lbrakk>k1 \\<noteq> k2; eigenval k1 H; eigenval k2 H\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k1 \\<noteq> k2\n  eigenval k1 H\n  eigenval k2 H\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "then"], ["proof (chain)\npicking this:\n  k1 \\<noteq> k2\n  eigenval k1 H\n  eigenval k2 H", "obtain v1 v2 where \"eigenpair k1 v1 H\" \"eigenpair k2 v2 H\"\n      \"v1 \\<noteq> vec_zero\" \"v2 \\<noteq> vec_zero\""], ["proof (prove)\nusing this:\n  k1 \\<noteq> k2\n  eigenval k1 H\n  eigenval k2 H\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        \\<lbrakk>eigenpair k1 v1 H; eigenpair k2 v2 H; v1 \\<noteq> vec_zero;\n         v2 \\<noteq> vec_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eigenval_def eigenpair_def"], ["proof (prove)\nusing this:\n  k1 \\<noteq> k2\n  \\<exists>v.\n     v \\<noteq> vec_zero \\<and>\n     H *\\<^sub>m\\<^sub>v v = k1 *\\<^sub>s\\<^sub>v v\n  \\<exists>v.\n     v \\<noteq> vec_zero \\<and>\n     H *\\<^sub>m\\<^sub>v v = k2 *\\<^sub>s\\<^sub>v v\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        \\<lbrakk>v1 \\<noteq> vec_zero \\<and>\n                 H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1;\n         v2 \\<noteq> vec_zero \\<and>\n         H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2;\n         v1 \\<noteq> vec_zero; v2 \\<noteq> vec_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  v1 \\<noteq> vec_zero\n  v2 \\<noteq> vec_zero\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "hence *: \"vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\" \"vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\""], ["proof (prove)\nusing this:\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  v1 \\<noteq> vec_zero\n  v2 \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0 &&&\n    vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "using \\<open>k1 \\<noteq> k2\\<close> hermitean_ortho_eigenvecs \\<open>hermitean H\\<close>"], ["proof (prove)\nusing this:\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  v1 \\<noteq> vec_zero\n  v2 \\<noteq> vec_zero\n  k1 \\<noteq> k2\n  \\<lbrakk>hermitean ?H; eigenpair ?k1.0 ?v1.0 ?H; eigenpair ?k2.0 ?v2.0 ?H;\n   ?k1.0 \\<noteq> ?k2.0\\<rbrakk>\n  \\<Longrightarrow> vec_cnj ?v2.0 *\\<^sub>v\\<^sub>v ?v1.0 = 0\n  \\<lbrakk>hermitean ?H; eigenpair ?k1.0 ?v1.0 ?H; eigenpair ?k2.0 ?v2.0 ?H;\n   ?k1.0 \\<noteq> ?k2.0\\<rbrakk>\n  \\<Longrightarrow> vec_cnj ?v1.0 *\\<^sub>v\\<^sub>v ?v2.0 = 0\n  hermitean H\n\ngoal (1 subgoal):\n 1. vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0 &&&\n    vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0", "by auto"], ["proof (state)\nthis:\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "obtain v11 v12 v21 v22 where vv: \"v1 = (v11, v12)\" \"v2 = (v21, v22)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v11 v12 v21 v22.\n        \\<lbrakk>v1 = (v11, v12); v2 = (v21, v22)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by  (cases v1, cases v2) auto"], ["proof (state)\nthis:\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "let ?nv1' = \"vec_cnj v1 *\\<^sub>v\\<^sub>v v1\" and ?nv2' = \"vec_cnj v2 *\\<^sub>v\\<^sub>v v2\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "let ?nv1 = \"cor (sqrt (Re ?nv1'))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "let ?nv2 = \"cor (sqrt (Re ?nv2'))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"?nv1' \\<noteq> 0\"  \"?nv2' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0 &&&\n    vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0", "using \\<open>v1 \\<noteq> vec_zero\\<close> \\<open>v2 \\<noteq> vec_zero\\<close> vv"], ["proof (prove)\nusing this:\n  v1 \\<noteq> vec_zero\n  v2 \\<noteq> vec_zero\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n\ngoal (1 subgoal):\n 1. vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0 &&&\n    vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0", "by (simp add: scalsquare_vv_zero)+"], ["proof (state)\nthis:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "moreover"], ["proof (state)\nthis:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"is_real ?nv1'\" \"is_real ?nv2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1) &&&\n    is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)", "using vv"], ["proof (prove)\nusing this:\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n\ngoal (1 subgoal):\n 1. is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1) &&&\n    is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)", "by (auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "ultimately"], ["proof (chain)\npicking this:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)", "have \"?nv1 \\<noteq> 0\"  \"?nv2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1))) \\<noteq> 0 &&&\n    cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2))) \\<noteq> 0", "using complex_eq_if_Re_eq"], ["proof (prove)\nusing this:\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n  \\<lbrakk>is_real ?z1.0; is_real ?z2.0\\<rbrakk>\n  \\<Longrightarrow> (?z1.0 = ?z2.0) = (Re ?z1.0 = Re ?z2.0)\n\ngoal (1 subgoal):\n 1. cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1))) \\<noteq> 0 &&&\n    cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2))) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1))) \\<noteq> 0\n  cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2))) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"Re (?nv1') \\<ge> 0\"  \"Re (?nv2') \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1) &&&\n    0 \\<le> Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)", "using vv"], ["proof (prove)\nusing this:\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1) &&&\n    0 \\<le> Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)", "by (auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  0 \\<le> Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  0 \\<le> Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "obtain nv1 nv2 where \"nv1 = ?nv1\" \"nv1 \\<noteq> 0\"  \"nv2 = ?nv2\" \"nv2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nv1 nv2.\n        \\<lbrakk>nv1 = cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)));\n         nv1 \\<noteq> 0;\n         nv2 = cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)));\n         nv2 \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>?nv1 \\<noteq> 0\\<close>  \\<open>?nv2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1))) \\<noteq> 0\n  cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2))) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>nv1 nv2.\n        \\<lbrakk>nv1 = cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)));\n         nv1 \\<noteq> 0;\n         nv2 = cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)));\n         nv2 \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nv1 = cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)))\n  nv1 \\<noteq> 0\n  nv2 = cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)))\n  nv2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "let ?M = \"(1/nv1 * v11, 1/nv2 * v21, 1/nv1 * v12, 1/nv2 * v22)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"is_real k1\" \"is_real k2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "using  \\<open>eigenval k1 H\\<close> \\<open>eigenval k2 H\\<close> \\<open>hermitean H\\<close>"], ["proof (prove)\nusing this:\n  eigenval k1 H\n  eigenval k2 H\n  hermitean H\n\ngoal (1 subgoal):\n 1. is_real k1 &&& is_real k2", "by (auto simp add: hermitean_eigenval_real)"], ["proof (state)\nthis:\n  is_real k1\n  is_real k2\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "moreover"], ["proof (state)\nthis:\n  is_real k1\n  is_real k2\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"mat_det ?M \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_det\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n    0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mat_det\n            (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n             1 / nv2 * v22) \\<noteq>\n           0 \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> mat_det\n          (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n           1 / nv2 * v22) \\<noteq>\n         0\n\ngoal (1 subgoal):\n 1. \\<not> mat_det\n            (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n             1 / nv2 * v22) \\<noteq>\n           0 \\<Longrightarrow>\n    False", "hence \"v11 * v22 = v12 * v21\""], ["proof (prove)\nusing this:\n  \\<not> mat_det\n          (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n           1 / nv2 * v22) \\<noteq>\n         0\n\ngoal (1 subgoal):\n 1. v11 * v22 = v12 * v21", "using \\<open>nv1 \\<noteq> 0\\<close> \\<open>nv2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> mat_det\n          (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n           1 / nv2 * v22) \\<noteq>\n         0\n  nv1 \\<noteq> 0\n  nv2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v11 * v22 = v12 * v21", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  v11 * v22 = v12 * v21\n\ngoal (1 subgoal):\n 1. \\<not> mat_det\n            (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n             1 / nv2 * v22) \\<noteq>\n           0 \\<Longrightarrow>\n    False", "hence \"\\<exists> k. k \\<noteq> 0 \\<and> v2 = k *\\<^sub>s\\<^sub>v v1\""], ["proof (prove)\nusing this:\n  v11 * v22 = v12 * v21\n\ngoal (1 subgoal):\n 1. \\<exists>k. k \\<noteq> 0 \\<and> v2 = k *\\<^sub>s\\<^sub>v v1", "using vv \\<open>v1 \\<noteq> vec_zero\\<close> \\<open>v2 \\<noteq> vec_zero\\<close>"], ["proof (prove)\nusing this:\n  v11 * v22 = v12 * v21\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  v1 \\<noteq> vec_zero\n  v2 \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<exists>k. k \\<noteq> 0 \\<and> v2 = k *\\<^sub>s\\<^sub>v v1", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v11 \\<noteq> 0; v21 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12\n 2. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v11 \\<noteq> 0; v22 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12\n 3. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v21 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12\n 4. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v22 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12", "apply (rule_tac x=\"v21/v11\" in exI, force simp add: field_simps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v11 \\<noteq> 0; v22 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12\n 2. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v21 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12\n 3. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v22 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12", "apply (rule_tac x=\"v21/v11\" in exI, force simp add: field_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v21 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12\n 2. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v22 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12", "apply (rule_tac x=\"v22/v12\" in exI, force simp add: field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v11 * v22 = v12 * v21; v1 = (v11, v12); v2 = (v21, v22);\n     v12 \\<noteq> 0; v22 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         v21 = k * v11 \\<and> v22 = k * v12", "apply (rule_tac x=\"v22/v12\" in exI, force simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>k. k \\<noteq> 0 \\<and> v2 = k *\\<^sub>s\\<^sub>v v1\n\ngoal (1 subgoal):\n 1. \\<not> mat_det\n            (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n             1 / nv2 * v22) \\<noteq>\n           0 \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>k. k \\<noteq> 0 \\<and> v2 = k *\\<^sub>s\\<^sub>v v1\n\ngoal (1 subgoal):\n 1. False", "using * \\<open>vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\\<close> \\<open>vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\\<close> vv \\<open>?nv1' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>k. k \\<noteq> 0 \\<and> v2 = k *\\<^sub>s\\<^sub>v v1\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by (metis mult_vv_scale_sv2 mult_zero_right)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "moreover"], ["proof (state)\nthis:\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"unitary ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "have **: \"cnj nv1 * nv1 = ?nv1'\"  \"cnj nv2 * nv2 = ?nv2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj nv1 * nv1 = vec_cnj v1 *\\<^sub>v\\<^sub>v v1 &&&\n    cnj nv2 * nv2 = vec_cnj v2 *\\<^sub>v\\<^sub>v v2", "using \\<open>nv1 = ?nv1\\<close> \\<open>nv1 \\<noteq> 0\\<close>  \\<open>nv2 = ?nv2\\<close> \\<open>nv2 \\<noteq> 0\\<close> \\<open>is_real ?nv1'\\<close> \\<open>is_real ?nv2'\\<close>"], ["proof (prove)\nusing this:\n  nv1 = cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)))\n  nv1 \\<noteq> 0\n  nv2 = cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)))\n  nv2 \\<noteq> 0\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. cnj nv1 * nv1 = vec_cnj v1 *\\<^sub>v\\<^sub>v v1 &&&\n    cnj nv2 * nv2 = vec_cnj v2 *\\<^sub>v\\<^sub>v v2", "using \\<open>Re (?nv1') \\<ge> 0\\<close>  \\<open>Re (?nv2') \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  nv1 = cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)))\n  nv1 \\<noteq> 0\n  nv2 = cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)))\n  nv2 \\<noteq> 0\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n  0 \\<le> Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  0 \\<le> Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. cnj nv1 * nv1 = vec_cnj v1 *\\<^sub>v\\<^sub>v v1 &&&\n    cnj nv2 * nv2 = vec_cnj v2 *\\<^sub>v\\<^sub>v v2", "by auto"], ["proof (state)\nthis:\n  cnj nv1 * nv1 = vec_cnj v1 *\\<^sub>v\\<^sub>v v1\n  cnj nv2 * nv2 = vec_cnj v2 *\\<^sub>v\\<^sub>v v2\n\ngoal (1 subgoal):\n 1. unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "have ***: \"cnj nv1 * nv2 \\<noteq> 0\"  \"cnj nv2 * nv1 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj nv1 * nv2 \\<noteq> 0 &&& cnj nv2 * nv1 \\<noteq> 0", "using vv \\<open>nv1 = ?nv1\\<close> \\<open>nv1 \\<noteq> 0\\<close>  \\<open>nv2 = ?nv2\\<close> \\<open>nv2 \\<noteq> 0\\<close> \\<open>is_real ?nv1'\\<close> \\<open>is_real ?nv2'\\<close>"], ["proof (prove)\nusing this:\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  nv1 = cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)))\n  nv1 \\<noteq> 0\n  nv2 = cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)))\n  nv2 \\<noteq> 0\n  is_real (vec_cnj v1 *\\<^sub>v\\<^sub>v v1)\n  is_real (vec_cnj v2 *\\<^sub>v\\<^sub>v v2)\n\ngoal (1 subgoal):\n 1. cnj nv1 * nv2 \\<noteq> 0 &&& cnj nv2 * nv1 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  cnj nv1 * nv2 \\<noteq> 0\n  cnj nv2 * nv1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "unfolding unitary_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_adj\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    eye", "using vv ** \\<open>?nv1' \\<noteq> 0\\<close> \\<open>?nv2' \\<noteq> 0\\<close> * ***"], ["proof (prove)\nusing this:\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  cnj nv1 * nv1 = vec_cnj v1 *\\<^sub>v\\<^sub>v v1\n  cnj nv2 * nv2 = vec_cnj v2 *\\<^sub>v\\<^sub>v v2\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n  vec_cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n  vec_cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\n  cnj nv1 * nv2 \\<noteq> 0\n  cnj nv2 * nv1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mat_adj\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    eye", "unfolding mat_adj_def mat_cnj_def vec_cnj_def"], ["proof (prove)\nusing this:\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  cnj nv1 * nv1 = vec_map cnj v1 *\\<^sub>v\\<^sub>v v1\n  cnj nv2 * nv2 = vec_map cnj v2 *\\<^sub>v\\<^sub>v v2\n  vec_map cnj v1 *\\<^sub>v\\<^sub>v v1 \\<noteq> 0\n  vec_map cnj v2 *\\<^sub>v\\<^sub>v v2 \\<noteq> 0\n  vec_map cnj v2 *\\<^sub>v\\<^sub>v v1 = 0\n  vec_map cnj v1 *\\<^sub>v\\<^sub>v v2 = 0\n  cnj nv1 * nv2 \\<noteq> 0\n  cnj nv2 * nv1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mat_map cnj\n     (mat_transpose\n       (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n        1 / nv2 * v22)) *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    eye", "by simp (metis (no_types, lifting) add_divide_distrib divide_eq_0_iff divide_eq_1_iff)"], ["proof (state)\nthis:\n  unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "moreover"], ["proof (state)\nthis:\n  unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"congruence ?M H = (k1, 0, 0, k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n     H =\n    (k1, 0, 0, k2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n     H =\n    (k1, 0, 0, k2)", "have \"mat_inv ?M *\\<^sub>m\\<^sub>m H *\\<^sub>m\\<^sub>m ?M = (k1, 0, 0, k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_inv\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (k1, 0, 0, k2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. mat_inv\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (k1, 0, 0, k2)", "have *: \"H *\\<^sub>m\\<^sub>m ?M = ?M *\\<^sub>m\\<^sub>m (k1, 0, 0, k2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n     1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    (k1, 0, 0, k2)", "using \\<open>eigenpair k1 v1 H\\<close> \\<open>eigenpair k2 v2 H\\<close> vv \\<open>?nv1 \\<noteq> 0\\<close> \\<open>?nv2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  eigenpair k1 v1 H\n  eigenpair k2 v2 H\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  cor (sqrt (Re (vec_cnj v1 *\\<^sub>v\\<^sub>v v1))) \\<noteq> 0\n  cor (sqrt (Re (vec_cnj v2 *\\<^sub>v\\<^sub>v v2))) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n     1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    (k1, 0, 0, k2)", "unfolding eigenpair_def vec_cnj_def"], ["proof (prove)\nusing this:\n  v1 \\<noteq> vec_zero \\<and>\n  H *\\<^sub>m\\<^sub>v v1 = k1 *\\<^sub>s\\<^sub>v v1\n  v2 \\<noteq> vec_zero \\<and>\n  H *\\<^sub>m\\<^sub>v v2 = k2 *\\<^sub>s\\<^sub>v v2\n  v1 = (v11, v12)\n  v2 = (v21, v22)\n  cor (sqrt (Re (vec_map cnj v1 *\\<^sub>v\\<^sub>v v1))) \\<noteq> 0\n  cor (sqrt (Re (vec_map cnj v2 *\\<^sub>v\\<^sub>v v2))) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n     1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    (k1, 0, 0, k2)", "by (cases H) (smt mult_mm.simps vec_map.simps add.right_neutral add_cancel_left_left distrib_left fst_mult_sv mult.commute mult.left_commute mult_mv.simps mult_zero_right prod.sel(1) prod.sel(2) snd_mult_sv)"], ["proof (state)\nthis:\n  H *\\<^sub>m\\<^sub>m\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n   1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  (k1, 0, 0, k2)\n\ngoal (1 subgoal):\n 1. mat_inv\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (k1, 0, 0, k2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_inv\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (k1, 0, 0, k2)", "using mult_mm_inv_l[of ?M \"(k1, 0, 0, k2)\" \"H *\\<^sub>m\\<^sub>m ?M\", OF \\<open>mat_det ?M \\<noteq> 0\\<close> *[symmetric], symmetric]"], ["proof (prove)\nusing this:\n  mat_inv\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n    1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  (H *\\<^sub>m\\<^sub>m\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)) =\n  (k1, 0, 0, k2)\n\ngoal (1 subgoal):\n 1. mat_inv\n     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n      1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n    H *\\<^sub>m\\<^sub>m\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    (k1, 0, 0, k2)", "by (simp add: mult_mm_assoc)"], ["proof (state)\nthis:\n  mat_inv\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n    1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  H *\\<^sub>m\\<^sub>m\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  (k1, 0, 0, k2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat_inv\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n    1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  H *\\<^sub>m\\<^sub>m\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  (k1, 0, 0, k2)\n\ngoal (1 subgoal):\n 1. congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n     H =\n    (k1, 0, 0, k2)", "moreover"], ["proof (state)\nthis:\n  mat_inv\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n    1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  H *\\<^sub>m\\<^sub>m\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  (k1, 0, 0, k2)\n\ngoal (1 subgoal):\n 1. congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n     H =\n    (k1, 0, 0, k2)", "have \"mat_inv ?M = mat_adj ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_inv (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    mat_adj (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "using \\<open>mat_det ?M \\<noteq> 0\\<close> \\<open>unitary ?M\\<close> mult_mm_inv_r[of ?M \"mat_adj ?M\" eye]"], ["proof (prove)\nusing this:\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0\n  unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n  \\<lbrakk>mat_det\n            (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n             1 / nv2 * v22) \\<noteq>\n           0;\n   mat_adj\n    (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n     1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n   eye\\<rbrakk>\n  \\<Longrightarrow> mat_adj\n                     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n                      1 / nv2 * v22) =\n                    eye *\\<^sub>m\\<^sub>m\n                    mat_inv\n                     (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n                      1 / nv2 * v22)\n\ngoal (1 subgoal):\n 1. mat_inv (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n    mat_adj (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "by (simp add: unitary_def)"], ["proof (state)\nthis:\n  mat_inv (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  mat_adj (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n\ngoal (1 subgoal):\n 1. congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n     H =\n    (k1, 0, 0, k2)", "ultimately"], ["proof (chain)\npicking this:\n  mat_inv\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n    1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  H *\\<^sub>m\\<^sub>m\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  (k1, 0, 0, k2)\n  mat_inv (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  mat_adj (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)", "show ?thesis"], ["proof (prove)\nusing this:\n  mat_inv\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12,\n    1 / nv2 * v22) *\\<^sub>m\\<^sub>m\n  H *\\<^sub>m\\<^sub>m\n  (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  (k1, 0, 0, k2)\n  mat_inv (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) =\n  mat_adj (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n\ngoal (1 subgoal):\n 1. congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n     H =\n    (k1, 0, 0, k2)", "by simp"], ["proof (state)\nthis:\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "moreover"], ["proof (state)\nthis:\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "have \"sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "using \\<open>congruence ?M H = (k1, 0, 0, k2)\\<close> \\<open>is_real k1\\<close> \\<open>is_real k2\\<close>"], ["proof (prove)\nusing this:\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n  is_real k1\n  is_real k2\n\ngoal (1 subgoal):\n 1. sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "using Re_det_sgn_congruence[of ?M H] \\<open>mat_det ?M \\<noteq> 0\\<close> \\<open>hermitean H\\<close>"], ["proof (prove)\nusing this:\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n  is_real k1\n  is_real k2\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0 \\<Longrightarrow>\n  sgn (Re (mat_det\n            (congruence\n              (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n              H))) =\n  sgn (Re (mat_det H))\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0\n  hermitean H\n\ngoal (1 subgoal):\n 1. sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "by simp"], ["proof (state)\nthis:\n  sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n\ngoal (2 subgoals):\n 1. \\<exists>k\\<^sub>1 k\\<^sub>2.\n       k\\<^sub>1 \\<noteq> k\\<^sub>2 \\<and>\n       eigenval k\\<^sub>1 H \\<and> eigenval k\\<^sub>2 H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n 2. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "ultimately"], ["proof (chain)\npicking this:\n  is_real k1\n  is_real k2\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0\n  unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n  sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "show ?thesis"], ["proof (prove)\nusing this:\n  is_real k1\n  is_real k2\n  mat_det\n   (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22) \\<noteq>\n  0\n  unitary (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n  congruence (1 / nv1 * v11, 1 / nv2 * v21, 1 / nv1 * v12, 1 / nv2 * v22)\n   H =\n  (k1, 0, 0, k2)\n  sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n\ngoal (1 subgoal):\n 1. \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "by (rule_tac x=\"k1\" in exI, rule_tac x=\"k2\" in exI, rule_tac x=\"?M\" in exI) simp"], ["proof (state)\nthis:\n  \\<exists>k1 k2 M.\n     mat_det M \\<noteq> 0 \\<and>\n     unitary M \\<and>\n     congruence M H = (k1, 0, 0, k2) \\<and>\n     is_real k1 \\<and>\n     is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n\ngoal (1 subgoal):\n 1. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "assume \"mat_diagonal H\""], ["proof (state)\nthis:\n  mat_diagonal H\n\ngoal (1 subgoal):\n 1. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "then"], ["proof (chain)\npicking this:\n  mat_diagonal H", "obtain A D where \"H = (A, 0, 0, D)\""], ["proof (prove)\nusing this:\n  mat_diagonal H\n\ngoal (1 subgoal):\n 1. (\\<And>A D. H = (A, 0, 0, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) auto"], ["proof (state)\nthis:\n  H = (A, 0, 0, D)\n\ngoal (1 subgoal):\n 1. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "moreover"], ["proof (state)\nthis:\n  H = (A, 0, 0, D)\n\ngoal (1 subgoal):\n 1. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "hence \"is_real A\" \"is_real D\""], ["proof (prove)\nusing this:\n  H = (A, 0, 0, D)\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D", "using \\<open>hermitean H\\<close> hermitean_elems[of A 0 0 D]"], ["proof (prove)\nusing this:\n  H = (A, 0, 0, D)\n  hermitean H\n  hermitean (A, 0, 0, D) \\<Longrightarrow> is_real A\n  hermitean (A, 0, 0, D) \\<Longrightarrow> is_real D\n  hermitean (A, 0, 0, D) \\<Longrightarrow> 0 = cnj 0\n  hermitean (A, 0, 0, D) \\<Longrightarrow> cnj 0 = 0\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. mat_diagonal H \\<Longrightarrow>\n    \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "ultimately"], ["proof (chain)\npicking this:\n  H = (A, 0, 0, D)\n  is_real A\n  is_real D", "show ?thesis"], ["proof (prove)\nusing this:\n  H = (A, 0, 0, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. \\<exists>k1 k2 M.\n       mat_det M \\<noteq> 0 \\<and>\n       unitary M \\<and>\n       congruence M H = (k1, 0, 0, k2) \\<and>\n       is_real k1 \\<and>\n       is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))", "by (rule_tac x=\"A\" in exI, rule_tac x=\"D\" in exI, rule_tac x=\"eye\" in exI) (simp add: unitary_def mat_adj_def mat_cnj_def)"], ["proof (state)\nthis:\n  \\<exists>k1 k2 M.\n     mat_det M \\<noteq> 0 \\<and>\n     unitary M \\<and>\n     congruence M H = (k1, 0, 0, k2) \\<and>\n     is_real k1 \\<and>\n     is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k1 k2 M.\n     mat_det M \\<noteq> 0 \\<and>\n     unitary M \\<and>\n     congruence M H = (k1, 0, 0, k2) \\<and>\n     is_real k1 \\<and>\n     is_real k2 \\<and> sgn (Re k1 * Re k2) = sgn (Re (mat_det H))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}