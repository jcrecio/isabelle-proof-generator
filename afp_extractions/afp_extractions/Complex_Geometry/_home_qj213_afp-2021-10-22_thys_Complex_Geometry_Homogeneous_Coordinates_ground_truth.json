{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry/Homogeneous_Coordinates.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Geometry", "problem_names": ["lemma complex_cvec_eq_mix:\n  assumes \"(z1, z2) \\<noteq> vec_zero\" and \"(w1, w2) \\<noteq> vec_zero\"\n  shows \"(z1, z2) \\<approx>\\<^sub>v (w1, w2) \\<longleftrightarrow> z1*w2 = z2*w1\"", "lemma complex_eq_cvec_reflp [simp]:\n  shows \"reflp (\\<approx>\\<^sub>v)\"", "lemma complex_eq_cvec_symp [simp]:\n  shows \"symp (\\<approx>\\<^sub>v)\"", "lemma complex_eq_cvec_transp [simp]:\n  shows \"transp (\\<approx>\\<^sub>v)\"", "lemma complex_eq_cvec_equivp [simp]:\n  shows \"equivp (\\<approx>\\<^sub>v)\"", "lemma complex_homo_coords_eq_reflp [simp]:\n  shows \"reflp (\\<approx>)\"", "lemma complex_homo_coords_eq_symp [simp]:\n  shows \"symp (\\<approx>)\"", "lemma complex_homo_coords_eq_transp [simp]: \n  shows \"transp (\\<approx>)\"", "lemma complex_homo_coords_eq_equivp:\n  shows \"equivp (\\<approx>)\"", "lemma complex_homo_coords_eq_refl [simp]:\n  shows \"z \\<approx> z\"", "lemma complex_homo_coords_eq_sym:\n  assumes \"z1 \\<approx> z2\"\n  shows \"z2 \\<approx> z1\"", "lemma complex_homo_coords_eq_trans:\n  assumes \"z1 \\<approx> z2\" and \"z2 \\<approx> z3\"\n  shows \"z1 \\<approx> z3\"", "lemma inf_cvec_z2_zero_iff:\n  assumes \"(z1, z2) \\<noteq> vec_zero\"\n  shows \"(z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<longleftrightarrow> z2 = 0\"", "lemma zero_cvec_z1_zero_iff:\n  assumes \"(z1, z2) \\<noteq> vec_zero\"\n  shows \"(z1, z2) \\<approx>\\<^sub>v 0\\<^sub>v \\<longleftrightarrow> z1 = 0\"", "lemma zero_one_infty_not_equal [simp]:\n  shows \"1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h\" and \"0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h\" and \"0\\<^sub>h \\<noteq> 1\\<^sub>h\" and \"1\\<^sub>h \\<noteq> 0\\<^sub>h\" and \"\\<infinity>\\<^sub>h \\<noteq> 0\\<^sub>h\" and \"\\<infinity>\\<^sub>h \\<noteq> 1\\<^sub>h\"", "lemma ex_3_different_points:\n  fixes z::complex_homo\n  shows \"\\<exists> z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\"", "lemma of_complex_inj:\n  assumes \"of_complex x = of_complex y\"\n  shows \"x = y\"", "lemma of_complex_image_inj:\n  assumes \"of_complex ` A = of_complex ` B\"\n  shows \"A = B\"", "lemma of_complex_not_inf [simp]:\n  shows \"of_complex x \\<noteq> \\<infinity>\\<^sub>h\"", "lemma inf_not_of_complex [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<noteq> of_complex x\"", "lemma inf_or_of_complex:\n  shows \"z = \\<infinity>\\<^sub>h \\<or> (\\<exists> x. z = of_complex x)\"", "lemma of_complex_zero [simp]:\n  shows \"of_complex 0 = 0\\<^sub>h\"", "lemma of_complex_one [simp]:\n  shows \"of_complex 1 = 1\\<^sub>h\"", "lemma of_complex_ii [simp]:\n  shows \"of_complex \\<i> = ii\\<^sub>h\"", "lemma of_complex_zero_iff [simp]:\n  shows \"of_complex x = 0\\<^sub>h \\<longleftrightarrow> x = 0\"", "lemma of_complex_one_iff [simp]:\n  shows \"of_complex x = 1\\<^sub>h \\<longleftrightarrow> x = 1\"", "lemma of_complex_ii_iff [simp]:\n  shows \"of_complex x = ii\\<^sub>h \\<longleftrightarrow> x = \\<i>\"", "lemma to_complex_of_complex [simp]:\n  shows \"to_complex (of_complex z) = z\"", "lemma of_complex_to_complex [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"(of_complex (to_complex z)) = z\"", "lemma to_complex_zero_zero [simp]:\n  shows \"to_complex 0\\<^sub>h = 0\"", "lemma to_complex_one_one [simp]:\n  shows \"to_complex 1\\<^sub>h = 1\"", "lemma to_complex_img_one [simp]:\n  shows \"to_complex ii\\<^sub>h = \\<i>\"", "lemma add_commute:\n  shows \"z +\\<^sub>h w = w +\\<^sub>h z\"", "lemma add_zero_right [simp]:\n  shows \"z +\\<^sub>h 0\\<^sub>h = z\"", "lemma add_zero_left [simp]:\n  shows \"0\\<^sub>h +\\<^sub>h z = z\"", "lemma of_complex_add_of_complex [simp]:\n  shows \"(of_complex x) +\\<^sub>h (of_complex y) = of_complex (x + y)\"", "lemma of_complex_add_inf [simp]:\n  shows \"(of_complex x) +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma inf_add_of_complex [simp]:\n  shows \"\\<infinity>\\<^sub>h +\\<^sub>h (of_complex x) = \\<infinity>\\<^sub>h\"", "lemma inf_add_right:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma inf_add_left:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h +\\<^sub>h z = \\<infinity>\\<^sub>h\"", "lemma inf_add_inf:\n  shows \"\\<infinity>\\<^sub>h +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma uminus_of_complex [simp]:\n  shows \"~\\<^sub>h (of_complex z) = of_complex (-z)\"", "lemma uminus_zero [simp]:\n  shows \"~\\<^sub>h 0\\<^sub>h = 0\\<^sub>h\"", "lemma uminus_inf [simp]:\n  shows \"~\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma uminus_inf_iff:\n  shows \"~\\<^sub>h z = \\<infinity>\\<^sub>h \\<longleftrightarrow> z = \\<infinity>\\<^sub>h\"", "lemma uminus_id_iff:\n  shows \"~\\<^sub>h z = z \\<longleftrightarrow> z = 0\\<^sub>h \\<or> z = \\<infinity>\\<^sub>h\"", "lemma of_complex_sub_of_complex [simp]:\n  shows \"(of_complex x) -\\<^sub>h (of_complex y) = of_complex (x - y)\"", "lemma zero_sub_right[simp]:\n  shows \"z -\\<^sub>h 0\\<^sub>h = z\"", "lemma zero_sub_left[simp]:\n  shows \"0\\<^sub>h -\\<^sub>h of_complex x = of_complex (-x)\"", "lemma zero_sub_one[simp]:\n  shows \"0\\<^sub>h -\\<^sub>h 1\\<^sub>h = of_complex (-1)\"", "lemma of_complex_sub_one [simp]:\n  shows \"of_complex x -\\<^sub>h 1\\<^sub>h = of_complex (x - 1)\"", "lemma sub_eq_zero [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h z = 0\\<^sub>h\"", "lemma sub_eq_zero_iff:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h \\<or> w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h w = 0\\<^sub>h \\<longleftrightarrow> z = w\"", "lemma inf_sub_left [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h -\\<^sub>h z = \\<infinity>\\<^sub>h\"", "lemma inf_sub_right [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma inf_sub_inf:\n  shows \"\\<infinity>\\<^sub>h -\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h\"", "lemma sub_noteq_inf:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\" and \"w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h\"", "lemma sub_eq_inf:\n  assumes \"z -\\<^sub>h w = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h\"", "lemma of_complex_mult_of_complex [simp]:\n  shows \"(of_complex z1) *\\<^sub>h (of_complex z2) = of_complex (z1 * z2)\"", "lemma mult_commute:\n  shows \"z1 *\\<^sub>h z2 = z2 *\\<^sub>h z1\"", "lemma mult_zero_left [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"0\\<^sub>h *\\<^sub>h z = 0\\<^sub>h\"", "lemma mult_zero_right [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z *\\<^sub>h 0\\<^sub>h = 0\\<^sub>h\"", "lemma mult_inf_right [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"z *\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma mult_inf_left [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h *\\<^sub>h z = \\<infinity>\\<^sub>h\"", "lemma mult_one_left [simp]:\n  shows \"1\\<^sub>h *\\<^sub>h z = z\"", "lemma mult_one_right [simp]:\n  shows \"z *\\<^sub>h 1\\<^sub>h = z\"", "lemma inf_mult_zero:\n  shows \"\\<infinity>\\<^sub>h *\\<^sub>h 0\\<^sub>h = 1\\<^sub>h\"", "lemma zero_mult_inf: \n  shows \"0\\<^sub>h *\\<^sub>h \\<infinity>\\<^sub>h = 1\\<^sub>h\"", "lemma mult_eq_inf:\n  assumes \"z *\\<^sub>h w = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h\"", "lemma mult_noteq_inf:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\" and \"w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z *\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h\"", "lemma reciprocal_involution [simp]: \"reciprocal (reciprocal z) = z\"", "lemma reciprocal_zero [simp]: \"reciprocal 0\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma reciprocal_inf [simp]: \"reciprocal \\<infinity>\\<^sub>h = 0\\<^sub>h\"", "lemma reciprocal_one [simp]: \"reciprocal 1\\<^sub>h = 1\\<^sub>h\"", "lemma reciprocal_inf_iff [iff]: \"reciprocal z = \\<infinity>\\<^sub>h \\<longleftrightarrow> z = 0\\<^sub>h\"", "lemma reciprocal_zero_iff [iff]: \"reciprocal z = 0\\<^sub>h \\<longleftrightarrow> z = \\<infinity>\\<^sub>h\"", "lemma reciprocal_of_complex [simp]:\n  assumes \"z \\<noteq> 0\"\n  shows \"reciprocal (of_complex z) = of_complex (1 / z)\"", "lemma reciprocal_real:\n  assumes \"is_real (to_complex z)\" and \"z \\<noteq> 0\\<^sub>h\" and \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)\"", "lemma reciprocal_id_iff: \n  shows \"reciprocal z = z \\<longleftrightarrow> z = of_complex 1 \\<or> z = of_complex (-1)\"", "lemma divide_zero_right [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"z :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma divide_zero_left [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"0\\<^sub>h :\\<^sub>h z = 0\\<^sub>h\"", "lemma divide_inf_right [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z :\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h\"", "lemma divide_inf_left [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h :\\<^sub>h z = \\<infinity>\\<^sub>h\"", "lemma divide_eq_inf:\n  assumes \"z :\\<^sub>h w = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h \\<or> w = 0\\<^sub>h\"", "lemma inf_divide_zero [simp]:\n  shows \"\\<infinity>\\<^sub>h :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma zero_divide_inf [simp]:\n  shows \"0\\<^sub>h :\\<^sub>h \\<infinity>\\<^sub>h =  0\\<^sub>h\"", "lemma divide_one_right [simp]:\n  shows \"z :\\<^sub>h 1\\<^sub>h = z\"", "lemma of_complex_divide_of_complex [simp]:\n  assumes \"z2 \\<noteq> 0\"\n  shows \"(of_complex z1) :\\<^sub>h (of_complex z2) = of_complex (z1 / z2)\"", "lemma one_div_of_complex [simp]:\n  assumes \"x \\<noteq> 0\"\n  shows \"1\\<^sub>h :\\<^sub>h of_complex x = of_complex (1 / x)\"", "lemma inf_divide_inf: \n  shows \"\\<infinity>\\<^sub>h :\\<^sub>h \\<infinity>\\<^sub>h = 1\\<^sub>h\"", "lemma zero_divide_zero:\n  shows \"0\\<^sub>h :\\<^sub>h 0\\<^sub>h = 1\\<^sub>h\"", "lemma conjugate_involution [simp]:\n  shows \"conjugate (conjugate z) = z\"", "lemma conjugate_conjugate_comp [simp]:\n  shows \"conjugate \\<circ> conjugate = id\"", "lemma inv_conjugate [simp]:\n  shows \"inv conjugate = conjugate\"", "lemma conjugate_of_complex [simp]:\n  shows \"conjugate (of_complex z) = of_complex (cnj z)\"", "lemma conjugate_inf [simp]:\n  shows \"conjugate \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma conjugate_zero [simp]:\n  shows \"conjugate 0\\<^sub>h = 0\\<^sub>h\"", "lemma conjugate_one [simp]:\n  shows \"conjugate 1\\<^sub>h = 1\\<^sub>h\"", "lemma conjugate_inj:\n  assumes \"conjugate x = conjugate y\"\n  shows \"x = y\"", "lemma bij_conjugate [simp]:\n  shows \"bij conjugate\"", "lemma conjugate_id_iff: \n  shows \"conjugate a = a \\<longleftrightarrow> is_real (to_complex a) \\<or> a = \\<infinity>\\<^sub>h\"", "lemma inversion_sym:\n  shows \"inversion = reciprocal \\<circ> conjugate\"", "lemma inversion_involution [simp]:\n  shows \"inversion (inversion z) = z\"", "lemma inversion_inversion_id [simp]:\n  shows \"inversion \\<circ> inversion = id\"", "lemma inversion_zero [simp]:\n  shows \"inversion 0\\<^sub>h = \\<infinity>\\<^sub>h\"", "lemma inversion_infty [simp]:\n  shows \"inversion \\<infinity>\\<^sub>h = 0\\<^sub>h\"", "lemma inversion_of_complex [simp]:\n  assumes \"z \\<noteq> 0\"\n  shows \"inversion (of_complex z) = of_complex (1 / cnj z)\"", "lemma is_real_inversion:\n  assumes \"is_real x\" and \"x \\<noteq> 0\"\n  shows \"is_real (to_complex (inversion (of_complex x)))\"", "lemma inversion_id_iff: \n  shows \"a = inversion a \\<longleftrightarrow> a \\<noteq> \\<infinity>\\<^sub>h \\<and> (to_complex a) * cnj (to_complex a) = 1\" (is \"?lhs = ?rhs\")", "lemma\n  assumes \"zb \\<noteq> \\<infinity>\\<^sub>h\" and \"zc \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio \\<infinity>\\<^sub>h zb zc = 1\\<^sub>h\"", "lemma\n  assumes \"za \\<noteq> \\<infinity>\\<^sub>h\" and \"zc \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio za \\<infinity>\\<^sub>h zc = \\<infinity>\\<^sub>h\"", "lemma\n  assumes \"za \\<noteq> \\<infinity>\\<^sub>h\" and \"zb \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio za zb \\<infinity>\\<^sub>h = 0\\<^sub>h\"", "lemma\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio z1 z2 z1 = \\<infinity>\\<^sub>h\"", "lemma cross_ratio_01inf_id [simp]:\n  shows \"cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h = z\"", "lemma cross_ratio_0:\n  assumes \"u \\<noteq> v\" and \"u \\<noteq> w\"\n  shows \"cross_ratio u u v w = 0\\<^sub>h\"", "lemma cross_ratio_1:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\"\n  shows \"cross_ratio v u v w = 1\\<^sub>h\"", "lemma cross_ratio_inf:\n  assumes \"u \\<noteq> w\" and \"v \\<noteq> w\"\n  shows \"cross_ratio w u v w = \\<infinity>\\<^sub>h\"", "lemma cross_ratio_0inf:\n  assumes \"y \\<noteq> 0\"\n  shows \"cross_ratio (of_complex x) 0\\<^sub>h (of_complex y) \\<infinity>\\<^sub>h = (of_complex (x / y))\"", "lemma cross_ratio_commute_13:\n  shows \"cross_ratio z u v w = reciprocal (cross_ratio v u z w)\"", "lemma cross_ratio_commute_24:\n  shows \"cross_ratio z u v w = reciprocal (cross_ratio z w v u)\"", "lemma cross_ratio_not_inf:\n  assumes \"z \\<noteq> w\" and \"u \\<noteq> v\"\n  shows \"cross_ratio z u v w \\<noteq> \\<infinity>\\<^sub>h\"", "lemma cross_ratio_not_zero:\n  assumes \"z \\<noteq> u\" and \"v \\<noteq> w\"\n  shows \"cross_ratio z u v w \\<noteq> 0\\<^sub>h\"", "lemma cross_ratio_real:\n  assumes \"is_real z\" and \"is_real u\" and \"is_real v\" and \"is_real w\" \n  assumes \"z \\<noteq> u \\<and> v \\<noteq> w \\<or> z \\<noteq> w \\<and> u \\<noteq> v\"\n  shows \"is_real (to_complex (cross_ratio (of_complex z) (of_complex u) (of_complex v) (of_complex w)))\"", "lemma cross_ratio:\n  assumes \"(z \\<noteq> u \\<and> v \\<noteq> w) \\<or> (z \\<noteq> w \\<and> u \\<noteq> v)\" and\n          \"z \\<noteq> \\<infinity>\\<^sub>h\" and  \"u \\<noteq> \\<infinity>\\<^sub>h\" and \"v \\<noteq> \\<infinity>\\<^sub>h\" and \"w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"cross_ratio z u v w = ((z -\\<^sub>h u) *\\<^sub>h (v -\\<^sub>h w)) :\\<^sub>h ((z -\\<^sub>h w) *\\<^sub>h (v -\\<^sub>h u))\""], "translations": [["", "lemma complex_cvec_eq_mix:\n  assumes \"(z1, z2) \\<noteq> vec_zero\" and \"(w1, w2) \\<noteq> vec_zero\"\n  shows \"(z1, z2) \\<approx>\\<^sub>v (w1, w2) \\<longleftrightarrow> z1*w2 = z2*w1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((z1, z2) \\<approx>\\<^sub>v (w1, w2)) = (z1 * w2 = z2 * w1)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. (z1, z2) \\<approx>\\<^sub>v (w1, w2) \\<Longrightarrow> z1 * w2 = z2 * w1\n 2. z1 * w2 = z2 * w1 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "assume \"(z1, z2) \\<approx>\\<^sub>v (w1, w2)\""], ["proof (state)\nthis:\n  (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n\ngoal (2 subgoals):\n 1. (z1, z2) \\<approx>\\<^sub>v (w1, w2) \\<Longrightarrow> z1 * w2 = z2 * w1\n 2. z1 * w2 = z2 * w1 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "thus \"z1 * w2 = z2 * w1\""], ["proof (prove)\nusing this:\n  (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n\ngoal (1 subgoal):\n 1. z1 * w2 = z2 * w1", "by auto"], ["proof (state)\nthis:\n  z1 * w2 = z2 * w1\n\ngoal (1 subgoal):\n 1. z1 * w2 = z2 * w1 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z1 * w2 = z2 * w1 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "assume *: \"z1 * w2 = z2 * w1\""], ["proof (state)\nthis:\n  z1 * w2 = z2 * w1\n\ngoal (1 subgoal):\n 1. z1 * w2 = z2 * w1 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "show \"(z1, z2) \\<approx>\\<^sub>v (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "proof (cases \"z2 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z2 = 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n 2. z2 \\<noteq> 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "case True"], ["proof (state)\nthis:\n  z2 = 0\n\ngoal (2 subgoals):\n 1. z2 = 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n 2. z2 \\<noteq> 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  z2 = 0\n\ngoal (1 subgoal):\n 1. (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "using * assms"], ["proof (prove)\nusing this:\n  z2 = 0\n  z1 * w2 = z2 * w1\n  (z1, z2) \\<noteq> vec_zero\n  (w1, w2) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "by auto"], ["proof (state)\nthis:\n  (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "case False"], ["proof (state)\nthis:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "hence \"w1 = (w2/z2)*z1 \\<and> w2 = (w2/z2)*z2\" \"w2/z2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. w1 = w2 / z2 * z1 \\<and> w2 = w2 / z2 * z2 &&& w2 / z2 \\<noteq> 0", "using * assms"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z1 * w2 = z2 * w1\n  (z1, z2) \\<noteq> vec_zero\n  (w1, w2) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. w1 = w2 / z2 * z1 \\<and> w2 = w2 / z2 * z2 &&& w2 / z2 \\<noteq> 0", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  w1 = w2 / z2 * z1 \\<and> w2 = w2 / z2 * z2\n  w2 / z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0 \\<Longrightarrow> (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "thus \"(z1, z2) \\<approx>\\<^sub>v (w1, w2)\""], ["proof (prove)\nusing this:\n  w1 = w2 / z2 * z1 \\<and> w2 = w2 / z2 * z2\n  w2 / z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (z1, z2) \\<approx>\\<^sub>v (w1, w2)", "by (metis complex_cvec_eq_def mult_sv.simps)"], ["proof (state)\nthis:\n  (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (z1, z2) \\<approx>\\<^sub>v (w1, w2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complex_eq_cvec_reflp [simp]:\n  shows \"reflp (\\<approx>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (\\<approx>\\<^sub>v)", "unfolding reflp_def complex_cvec_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. \\<exists>k. k \\<noteq> 0 \\<and> x = k *\\<^sub>s\\<^sub>v x", "by safe (rule_tac x=\"1\" in exI, simp)"], ["", "lemma complex_eq_cvec_symp [simp]:\n  shows \"symp (\\<approx>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<approx>\\<^sub>v)", "unfolding symp_def complex_cvec_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (\\<exists>k.\n           k \\<noteq> 0 \\<and> y = k *\\<^sub>s\\<^sub>v x) \\<longrightarrow>\n       (\\<exists>k. k \\<noteq> 0 \\<and> x = k *\\<^sub>s\\<^sub>v y)", "by safe (rule_tac x=\"1/k\" in exI, simp)"], ["", "lemma complex_eq_cvec_transp [simp]:\n  shows \"transp (\\<approx>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (\\<approx>\\<^sub>v)", "unfolding transp_def complex_cvec_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (\\<exists>k.\n           k \\<noteq> 0 \\<and> y = k *\\<^sub>s\\<^sub>v x) \\<longrightarrow>\n       (\\<exists>k.\n           k \\<noteq> 0 \\<and> z = k *\\<^sub>s\\<^sub>v y) \\<longrightarrow>\n       (\\<exists>k. k \\<noteq> 0 \\<and> z = k *\\<^sub>s\\<^sub>v x)", "by safe (rule_tac x=\"k*ka\" in exI, simp)"], ["", "lemma complex_eq_cvec_equivp [simp]:\n  shows \"equivp (\\<approx>\\<^sub>v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (\\<approx>\\<^sub>v)", "by (auto intro: equivpI)"], ["", "text \\<open>Non-zero pairs of complex numbers (also treated as non-zero complex vectors)\\<close>"], ["", "typedef complex_homo_coords = \"{v::complex_vec. v \\<noteq> vec_zero}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {v. v \\<noteq> vec_zero}", "by (rule_tac x=\"(1, 0)\" in exI, simp)"], ["", "setup_lifting type_definition_complex_homo_coords"], ["", "lift_definition complex_homo_coords_eq :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> bool\" (infix \"\\<approx>\" 50) is complex_cvec_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma complex_homo_coords_eq_reflp [simp]:\n  shows \"reflp (\\<approx>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (\\<approx>)", "using complex_eq_cvec_reflp"], ["proof (prove)\nusing this:\n  reflp (\\<approx>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. reflp (\\<approx>)", "unfolding reflp_def"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<approx>\\<^sub>v x\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<approx> x", "by transfer blast"], ["", "lemma complex_homo_coords_eq_symp [simp]:\n  shows \"symp (\\<approx>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<approx>)", "using complex_eq_cvec_symp"], ["proof (prove)\nusing this:\n  symp (\\<approx>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. symp (\\<approx>)", "unfolding symp_def"], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     x \\<approx>\\<^sub>v y \\<longrightarrow> y \\<approx>\\<^sub>v x\n\ngoal (1 subgoal):\n 1. \\<forall>x y. x \\<approx> y \\<longrightarrow> y \\<approx> x", "by transfer blast"], ["", "lemma complex_homo_coords_eq_transp [simp]: \n  shows \"transp (\\<approx>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (\\<approx>)", "using complex_eq_cvec_transp"], ["proof (prove)\nusing this:\n  transp (\\<approx>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. transp (\\<approx>)", "unfolding transp_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     x \\<approx>\\<^sub>v y \\<longrightarrow>\n     y \\<approx>\\<^sub>v z \\<longrightarrow> x \\<approx>\\<^sub>v z\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       x \\<approx> y \\<longrightarrow>\n       y \\<approx> z \\<longrightarrow> x \\<approx> z", "by transfer blast"], ["", "lemma complex_homo_coords_eq_equivp:\n  shows \"equivp (\\<approx>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (\\<approx>)", "by (auto intro: equivpI)"], ["", "lemma complex_homo_coords_eq_refl [simp]:\n  shows \"z \\<approx> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<approx> z", "using complex_homo_coords_eq_reflp"], ["proof (prove)\nusing this:\n  reflp (\\<approx>)\n\ngoal (1 subgoal):\n 1. z \\<approx> z", "unfolding reflp_def refl_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<approx> x\n\ngoal (1 subgoal):\n 1. z \\<approx> z", "by blast"], ["", "lemma complex_homo_coords_eq_sym:\n  assumes \"z1 \\<approx> z2\"\n  shows \"z2 \\<approx> z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2 \\<approx> z1", "using assms complex_homo_coords_eq_symp"], ["proof (prove)\nusing this:\n  z1 \\<approx> z2\n  symp (\\<approx>)\n\ngoal (1 subgoal):\n 1. z2 \\<approx> z1", "unfolding symp_def"], ["proof (prove)\nusing this:\n  z1 \\<approx> z2\n  \\<forall>x y. x \\<approx> y \\<longrightarrow> y \\<approx> x\n\ngoal (1 subgoal):\n 1. z2 \\<approx> z1", "by blast"], ["", "lemma complex_homo_coords_eq_trans:\n  assumes \"z1 \\<approx> z2\" and \"z2 \\<approx> z3\"\n  shows \"z1 \\<approx> z3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z1 \\<approx> z3", "using assms complex_homo_coords_eq_transp"], ["proof (prove)\nusing this:\n  z1 \\<approx> z2\n  z2 \\<approx> z3\n  transp (\\<approx>)\n\ngoal (1 subgoal):\n 1. z1 \\<approx> z3", "unfolding transp_def"], ["proof (prove)\nusing this:\n  z1 \\<approx> z2\n  z2 \\<approx> z3\n  \\<forall>x y z.\n     x \\<approx> y \\<longrightarrow>\n     y \\<approx> z \\<longrightarrow> x \\<approx> z\n\ngoal (1 subgoal):\n 1. z1 \\<approx> z3", "by blast"], ["", "text \\<open>Quotient type of homogeneous coordinates\\<close>"], ["", "quotient_type\n  complex_homo = complex_homo_coords / \"complex_homo_coords_eq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (\\<approx>)", "by (rule complex_homo_coords_eq_equivp)"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Some characteristic points in $\\mathbb{C}P^1$\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Infinite point\\<close>"], ["", "definition inf_cvec :: \"complex_vec\" (\"\\<infinity>\\<^sub>v\") where\n  [simp]: \"inf_cvec = (1, 0)\""], ["", "lift_definition inf_hcoords :: \"complex_homo_coords\"  (\"\\<infinity>\\<^sub>h\\<^sub>c\") is inf_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>v \\<noteq> vec_zero", "by simp"], ["", "lift_definition inf :: \"complex_homo\"  (\"\\<infinity>\\<^sub>h\")  is inf_hcoords"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inf_cvec_z2_zero_iff:\n  assumes \"(z1, z2) \\<noteq> vec_zero\"\n  shows \"(z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<longleftrightarrow> z2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (z2 = 0)", "using assms"], ["proof (prove)\nusing this:\n  (z1, z2) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. ((z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (z2 = 0)", "by auto"], ["", "text \\<open>Zero\\<close>"], ["", "definition zero_cvec :: \"complex_vec\" (\"0\\<^sub>v\") where\n  [simp]: \"zero_cvec = (0, 1)\""], ["", "lift_definition zero_hcoords :: \"complex_homo_coords\" (\"0\\<^sub>h\\<^sub>c\") is zero_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>v \\<noteq> vec_zero", "by simp"], ["", "lift_definition zero :: \"complex_homo\" (\"0\\<^sub>h\") is zero_hcoords"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zero_cvec_z1_zero_iff:\n  assumes \"(z1, z2) \\<noteq> vec_zero\"\n  shows \"(z1, z2) \\<approx>\\<^sub>v 0\\<^sub>v \\<longleftrightarrow> z1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((z1, z2) \\<approx>\\<^sub>v 0\\<^sub>v) = (z1 = 0)", "using assms"], ["proof (prove)\nusing this:\n  (z1, z2) \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. ((z1, z2) \\<approx>\\<^sub>v 0\\<^sub>v) = (z1 = 0)", "by auto"], ["", "text \\<open>One\\<close>"], ["", "definition one_cvec :: \"complex_vec\" (\"1\\<^sub>v\")where\n  [simp]: \"one_cvec = (1, 1)\""], ["", "lift_definition one_hcoords :: \"complex_homo_coords\" (\"1\\<^sub>h\\<^sub>c\") is one_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>v \\<noteq> vec_zero", "by simp"], ["", "lift_definition one :: \"complex_homo\" (\"1\\<^sub>h\") is one_hcoords"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma zero_one_infty_not_equal [simp]:\n  shows \"1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h\" and \"0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h\" and \"0\\<^sub>h \\<noteq> 1\\<^sub>h\" and \"1\\<^sub>h \\<noteq> 0\\<^sub>h\" and \"\\<infinity>\\<^sub>h \\<noteq> 0\\<^sub>h\" and \"\\<infinity>\\<^sub>h \\<noteq> 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h &&&\n     0\\<^sub>h \\<noteq> \\<infinity>\\<^sub>h &&&\n     0\\<^sub>h \\<noteq> 1\\<^sub>h) &&&\n    1\\<^sub>h \\<noteq> 0\\<^sub>h &&&\n    \\<infinity>\\<^sub>h \\<noteq> 0\\<^sub>h &&&\n    \\<infinity>\\<^sub>h \\<noteq> 1\\<^sub>h", "by (transfer, transfer, simp)+"], ["", "text \\<open>Imaginary unit\\<close>"], ["", "definition ii_cvec :: \"complex_vec\" (\"ii\\<^sub>v\") where\n  [simp]: \"ii_cvec = (\\<i>, 1)\""], ["", "lift_definition ii_hcoords :: \"complex_homo_coords\" (\"ii\\<^sub>h\\<^sub>c\") is ii_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. ii\\<^sub>v \\<noteq> vec_zero", "by simp"], ["", "lift_definition ii :: \"complex_homo\" (\"ii\\<^sub>h\") is ii_hcoords"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ex_3_different_points:\n  fixes z::complex_homo\n  shows \"\\<exists> z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "proof (cases \"z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n 2. \\<not> (z \\<noteq> 0\\<^sub>h \\<and>\n            z \\<noteq> 1\\<^sub>h) \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "case True"], ["proof (state)\nthis:\n  z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h\n\ngoal (2 subgoals):\n 1. z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n 2. \\<not> (z \\<noteq> 0\\<^sub>h \\<and>\n            z \\<noteq> 1\\<^sub>h) \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "by (rule_tac x=\"0\\<^sub>h\" in exI, rule_tac x=\"1\\<^sub>h\" in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n\ngoal (1 subgoal):\n 1. \\<not> (z \\<noteq> 0\\<^sub>h \\<and>\n            z \\<noteq> 1\\<^sub>h) \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (z \\<noteq> 0\\<^sub>h \\<and>\n            z \\<noteq> 1\\<^sub>h) \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "case False"], ["proof (state)\nthis:\n  \\<not> (z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h)\n\ngoal (1 subgoal):\n 1. \\<not> (z \\<noteq> 0\\<^sub>h \\<and>\n            z \\<noteq> 1\\<^sub>h) \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "hence \"z = 0\\<^sub>h \\<or> z = 1\\<^sub>h\""], ["proof (prove)\nusing this:\n  \\<not> (z \\<noteq> 0\\<^sub>h \\<and> z \\<noteq> 1\\<^sub>h)\n\ngoal (1 subgoal):\n 1. z = 0\\<^sub>h \\<or> z = 1\\<^sub>h", "by simp"], ["proof (state)\nthis:\n  z = 0\\<^sub>h \\<or> z = 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<not> (z \\<noteq> 0\\<^sub>h \\<and>\n            z \\<noteq> 1\\<^sub>h) \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = 0\\<^sub>h \\<or> z = 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z = 0\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n 2. z = 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "assume \"z = 0\\<^sub>h\""], ["proof (state)\nthis:\n  z = 0\\<^sub>h\n\ngoal (2 subgoals):\n 1. z = 0\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n 2. z = 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "by (rule_tac x=\"\\<infinity>\\<^sub>h\" in exI, rule_tac x=\"1\\<^sub>h\" in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n\ngoal (1 subgoal):\n 1. z = 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "assume \"z = 1\\<^sub>h\""], ["proof (state)\nthis:\n  z = 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = 1\\<^sub>h \\<Longrightarrow>\n    \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = 1\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2", "by (rule_tac x=\"\\<infinity>\\<^sub>h\" in exI, rule_tac x=\"0\\<^sub>h\" in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z1 z2. z \\<noteq> z1 \\<and> z1 \\<noteq> z2 \\<and> z \\<noteq> z2\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Connection to ordinary complex plane $\\mathbb{C}$\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Conversion from complex\\<close>"], ["", "definition of_complex_cvec :: \"complex \\<Rightarrow> complex_vec\" where\n  [simp]: \"of_complex_cvec z = (z, 1)\""], ["", "lift_definition of_complex_hcoords :: \"complex \\<Rightarrow> complex_homo_coords\" is of_complex_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex. of_complex_cvec complex \\<noteq> vec_zero", "by simp"], ["", "lift_definition of_complex :: \"complex \\<Rightarrow> complex_homo\" is of_complex_hcoords"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma of_complex_inj:\n  assumes \"of_complex x = of_complex y\"\n  shows \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms"], ["proof (prove)\nusing this:\n  of_complex x = of_complex y\n\ngoal (1 subgoal):\n 1. x = y", "by (transfer, transfer, simp)"], ["", "lemma of_complex_image_inj:\n  assumes \"of_complex ` A = of_complex ` B\"\n  shows \"A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B", "using assms"], ["proof (prove)\nusing this:\n  of_complex ` A = of_complex ` B\n\ngoal (1 subgoal):\n 1. A = B", "using of_complex_inj"], ["proof (prove)\nusing this:\n  of_complex ` A = of_complex ` B\n  of_complex ?x = of_complex ?y \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. A = B", "by auto"], ["", "lemma of_complex_not_inf [simp]:\n  shows \"of_complex x \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex x \\<noteq> \\<infinity>\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma inf_not_of_complex [simp]:\n  shows \"\\<infinity>\\<^sub>h \\<noteq> of_complex x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h \\<noteq> of_complex x", "by (transfer, transfer, simp)"], ["", "lemma inf_or_of_complex:\n  shows \"z = \\<infinity>\\<^sub>h \\<or> (\\<exists> x. z = of_complex x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n       (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)", "fix z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n       (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)", "obtain z1 z2 where *: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z) auto"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n       (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)", "assume \"z \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n       (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)", "thus \"z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or> (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n    (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)", "using *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n    (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)", "by (cases \"z2 = 0\", auto)"], ["proof (state)\nthis:\n  z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n  (\\<exists>x. z \\<approx>\\<^sub>v of_complex_cvec x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_complex_zero [simp]:\n  shows \"of_complex 0 = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex 0 = 0\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma of_complex_one [simp]:\n  shows \"of_complex 1 = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex 1 = 1\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma of_complex_ii [simp]:\n  shows \"of_complex \\<i> = ii\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex \\<i> = ii\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma of_complex_zero_iff [simp]:\n  shows \"of_complex x = 0\\<^sub>h \\<longleftrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex x = 0\\<^sub>h) = (x = 0)", "by (subst of_complex_zero[symmetric]) (auto simp add: of_complex_inj)"], ["", "lemma of_complex_one_iff [simp]:\n  shows \"of_complex x = 1\\<^sub>h \\<longleftrightarrow> x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex x = 1\\<^sub>h) = (x = 1)", "by (subst of_complex_one[symmetric]) (auto simp add: of_complex_inj)"], ["", "lemma of_complex_ii_iff [simp]:\n  shows \"of_complex x = ii\\<^sub>h \\<longleftrightarrow> x = \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex x = ii\\<^sub>h) = (x = \\<i>)", "by (subst of_complex_ii[symmetric]) (auto simp add: of_complex_inj)"], ["", "text \\<open>Conversion to complex\\<close>"], ["", "definition to_complex_cvec :: \"complex_vec \\<Rightarrow> complex\" where\n  [simp]: \"to_complex_cvec z = (let (z1, z2) = z in z1/z2)\""], ["", "lift_definition to_complex_homo_coords :: \"complex_homo_coords \\<Rightarrow> complex\" is to_complex_cvec"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition to_complex :: \"complex_homo \\<Rightarrow> complex\" is to_complex_homo_coords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       to_complex_homo_coords complex_homo_coords1 =\n       to_complex_homo_coords complex_homo_coords2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       to_complex_homo_coords complex_homo_coords1 =\n       to_complex_homo_coords complex_homo_coords2", "fix z w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       to_complex_homo_coords complex_homo_coords1 =\n       to_complex_homo_coords complex_homo_coords2", "assume \"z \\<approx> w\""], ["proof (state)\nthis:\n  z \\<approx> w\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       to_complex_homo_coords complex_homo_coords1 =\n       to_complex_homo_coords complex_homo_coords2", "thus \"to_complex_homo_coords z = to_complex_homo_coords w\""], ["proof (prove)\nusing this:\n  z \\<approx> w\n\ngoal (1 subgoal):\n 1. to_complex_homo_coords z = to_complex_homo_coords w", "by transfer auto"], ["proof (state)\nthis:\n  to_complex_homo_coords z = to_complex_homo_coords w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma to_complex_of_complex [simp]:\n  shows \"to_complex (of_complex z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_complex (of_complex z) = z", "by (transfer, transfer, simp)"], ["", "lemma of_complex_to_complex [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"(of_complex (to_complex z)) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex (to_complex z) = z", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. of_complex (to_complex z) = z", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> of_complex_cvec\n                          (to_complex_cvec z) \\<approx>\\<^sub>v\n                         z", "fix z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> of_complex_cvec\n                          (to_complex_cvec z) \\<approx>\\<^sub>v\n                         z", "obtain z1 z2 where *: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> of_complex_cvec\n                          (to_complex_cvec z) \\<approx>\\<^sub>v\n                         z", "assume \"z \\<noteq> vec_zero\" \"\\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> of_complex_cvec\n                          (to_complex_cvec z) \\<approx>\\<^sub>v\n                         z", "hence \"z2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "by (simp, erule_tac x=\"1/z1\" in allE, auto)"], ["proof (state)\nthis:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> of_complex_cvec\n                          (to_complex_cvec z) \\<approx>\\<^sub>v\n                         z", "thus \"(of_complex_cvec (to_complex_cvec z)) \\<approx>\\<^sub>v z\""], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. of_complex_cvec (to_complex_cvec z) \\<approx>\\<^sub>v z", "using *"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. of_complex_cvec (to_complex_cvec z) \\<approx>\\<^sub>v z", "by simp"], ["proof (state)\nthis:\n  of_complex_cvec (to_complex_cvec z) \\<approx>\\<^sub>v z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma to_complex_zero_zero [simp]:\n  shows \"to_complex 0\\<^sub>h = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_complex 0\\<^sub>h = 0", "by (metis of_complex_zero to_complex_of_complex)"], ["", "lemma to_complex_one_one [simp]:\n  shows \"to_complex 1\\<^sub>h = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_complex 1\\<^sub>h = 1", "by (metis of_complex_one to_complex_of_complex)"], ["", "lemma to_complex_img_one [simp]:\n  shows \"to_complex ii\\<^sub>h = \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_complex ii\\<^sub>h = \\<i>", "by (metis of_complex_ii to_complex_of_complex)"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Arithmetic operations\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Due to the requirement of HOL that all functions are total, we could not define the function\nonly for the well-defined cases, and in the lifting proofs we must also handle the ill-defined\ncases. For example, $\\infty_h +_h \\infty_h$ is ill-defined, but we must define it, so we define it\narbitrarily to be $\\infty_h$.\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Addition\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>$\\infty_h\\ +_h\\ \\infty_h$ is ill-defined. Since functions must be total, for formal reasons we\ndefine it arbitrarily to be $\\infty_h$.\\<close>"], ["", "definition add_cvec :: \"complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> complex_vec\" (infixl \"+\\<^sub>v\" 60) where\n  [simp]: \"add_cvec z w = (let (z1, z2) = z; (w1, w2) = w\n                                in if z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0 then\n                                      (z1*w2 + w1*z2, z2*w2)\n                                   else\n                                      (1, 0))\""], ["", "lift_definition add_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex_homo_coords\" (infixl \"+\\<^sub>h\\<^sub>c\" 60) is add_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>prod1 \\<noteq> vec_zero; prod2 \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> prod1 +\\<^sub>v prod2 \\<noteq> vec_zero", "by (auto split: if_split_asm)"], ["", "lift_definition add :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" (infixl \"+\\<^sub>h\" 60) is add_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<approx> complex_homo_coords2;\n        complex_homo_coords3 \\<approx> complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 +\\<^sub>h\\<^sub>c\n                         complex_homo_coords3 \\<approx>\n                         complex_homo_coords2 +\\<^sub>h\\<^sub>c\n                         complex_homo_coords4", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 +\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 +\\<^sub>v complex_homo_coords4", "fix z w z' w' :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 +\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 +\\<^sub>v complex_homo_coords4", "obtain z1 z2 w1 w2 z'1 z'2 w'1 w'2 where\n    *: \"z = (z1, z2)\" \"w = (w1, w2)\" \"z' = (z'1, z'2)\" \"w' = (w'1, w'2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 w1 w2 z'1 z'2 w'1 w'2.\n        \\<lbrakk>z = (z1, z2); w = (w1, w2); z' = (z'1, z'2);\n         w' = (w'1, w'2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto, cases w, auto, cases z', auto, cases w', auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 +\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 +\\<^sub>v complex_homo_coords4", "assume **:\n         \"z \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"z \\<approx>\\<^sub>v z'\"\n         \"z' \\<noteq> vec_zero\" \"w' \\<noteq> vec_zero\" \"w \\<approx>\\<^sub>v w'\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 +\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 +\\<^sub>v complex_homo_coords4", "show \"z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "proof (cases \"z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0 \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\n 2. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "case True"], ["proof (state)\nthis:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0 \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\n 2. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "hence \"z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0", "using * **"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0 \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\n 2. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "using \\<open>z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\\<close> \\<open>z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n  z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "using * **"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n  z'2 \\<noteq> 0 \\<or> w'2 \\<noteq> 0\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "by simp ((erule exE)+, rule_tac x=\"k*ka\" in exI, simp add: field_simps)"], ["proof (state)\nthis:\n  z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "case False"], ["proof (state)\nthis:\n  \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "hence \"z'2 = 0 \\<or> w'2 = 0\""], ["proof (prove)\nusing this:\n  \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. z'2 = 0 \\<or> w'2 = 0", "using * **"], ["proof (prove)\nusing this:\n  \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0)\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. z'2 = 0 \\<or> w'2 = 0", "by auto"], ["proof (state)\nthis:\n  z'2 = 0 \\<or> w'2 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0) \\<Longrightarrow>\n    z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "using \\<open>\\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0)\\<close> \\<open>z'2 = 0 \\<or> w'2 = 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0)\n  z'2 = 0 \\<or> w'2 = 0\n\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "using * **"], ["proof (prove)\nusing this:\n  \\<not> (z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0)\n  z'2 = 0 \\<or> w'2 = 0\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'", "by auto"], ["proof (state)\nthis:\n  z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z +\\<^sub>v w \\<approx>\\<^sub>v z' +\\<^sub>v w'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_commute:\n  shows \"z +\\<^sub>h w = w +\\<^sub>h z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z +\\<^sub>h w = w +\\<^sub>h z", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> z +\\<^sub>v w \\<approx>\\<^sub>v w +\\<^sub>v z", "unfolding complex_cvec_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<noteq> 0 \\<and>\n                            w +\\<^sub>v z =\n                            k *\\<^sub>s\\<^sub>v (z +\\<^sub>v w)", "by (rule_tac x=\"1\" in exI, auto split: if_split_asm)"], ["", "lemma add_zero_right [simp]:\n  shows \"z +\\<^sub>h 0\\<^sub>h = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z +\\<^sub>h 0\\<^sub>h = z", "by (transfer, transfer, force)"], ["", "lemma add_zero_left [simp]:\n  shows \"0\\<^sub>h +\\<^sub>h z = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h +\\<^sub>h z = z", "by (subst add_commute) simp"], ["", "lemma of_complex_add_of_complex [simp]:\n  shows \"(of_complex x) +\\<^sub>h (of_complex y) = of_complex (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex x +\\<^sub>h of_complex y = of_complex (x + y)", "by (transfer, transfer, simp)"], ["", "lemma of_complex_add_inf [simp]:\n  shows \"(of_complex x) +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex x +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma inf_add_of_complex [simp]:\n  shows \"\\<infinity>\\<^sub>h +\\<^sub>h (of_complex x) = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h +\\<^sub>h of_complex x = \\<infinity>\\<^sub>h", "by (subst add_commute) simp"], ["", "lemma inf_add_right:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. z +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "by auto"], ["", "lemma inf_add_left:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h +\\<^sub>h z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h +\\<^sub>h z = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h +\\<^sub>h z = \\<infinity>\\<^sub>h", "by (subst add_commute) (rule inf_add_right, simp)"], ["", "text \\<open>This is ill-defined, but holds by our definition\\<close>"], ["", "lemma inf_add_inf:\n  shows \"\\<infinity>\\<^sub>h +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h +\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "by (transfer, transfer, simp)"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Unary minus\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition uminus_cvec :: \"complex_vec \\<Rightarrow> complex_vec\" (\"~\\<^sub>v\") where\n  [simp]: \"~\\<^sub>v z = (let (z1, z2) = z in (-z1, z2))\""], ["", "lift_definition uminus_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords\" (\"~\\<^sub>h\\<^sub>c\") is uminus_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       prod \\<noteq> vec_zero \\<Longrightarrow>\n       ~\\<^sub>v prod \\<noteq> vec_zero", "by auto"], ["", "lift_definition uminus :: \"complex_homo \\<Rightarrow> complex_homo\" (\"~\\<^sub>h\") is uminus_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       ~\\<^sub>h\\<^sub>c complex_homo_coords1 \\<approx>\n       ~\\<^sub>h\\<^sub>c complex_homo_coords2", "by transfer auto"], ["", "lemma uminus_of_complex [simp]:\n  shows \"~\\<^sub>h (of_complex z) = of_complex (-z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ~\\<^sub>h (of_complex z) = of_complex (- z)", "by (transfer, transfer, simp)"], ["", "lemma uminus_zero [simp]:\n  shows \"~\\<^sub>h 0\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ~\\<^sub>h 0\\<^sub>h = 0\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma uminus_inf [simp]:\n  shows \"~\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ~\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ~\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "unfolding complex_cvec_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       \\<infinity>\\<^sub>v =\n       k *\\<^sub>s\\<^sub>v ~\\<^sub>v \\<infinity>\\<^sub>v", "by (rule_tac x=\"-1\" in exI, simp)"], ["", "lemma uminus_inf_iff:\n  shows \"~\\<^sub>h z = \\<infinity>\\<^sub>h \\<longleftrightarrow> z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (~\\<^sub>h z = \\<infinity>\\<^sub>h) = (z = \\<infinity>\\<^sub>h)", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       (~\\<^sub>v z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) =\n       (z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v)", "by auto (rule_tac x=\"-1/a\" in exI, auto)"], ["", "lemma uminus_id_iff:\n  shows \"~\\<^sub>h z = z \\<longleftrightarrow> z = 0\\<^sub>h \\<or> z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (~\\<^sub>h z = z) = (z = 0\\<^sub>h \\<or> z = \\<infinity>\\<^sub>h)", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       (~\\<^sub>v z \\<approx>\\<^sub>v z) =\n       (z \\<approx>\\<^sub>v 0\\<^sub>v \\<or>\n        z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a k.\n       \\<lbrakk>a \\<noteq> 0; k \\<noteq> 0;\n        \\<forall>k. k * a = 1 \\<longrightarrow> k = 0;\n        a = - (k * a)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a k.\n       \\<lbrakk>a \\<noteq> 0; k \\<noteq> 0; k * a = 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. k \\<noteq> 0 \\<and> a = - (k * a)", "apply (erule_tac x=\"1/a\" in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a k.\n       \\<lbrakk>a \\<noteq> 0; k \\<noteq> 0; k * a = 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. k \\<noteq> 0 \\<and> a = - (k * a)", "apply (rule_tac x=\"-1\" in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Subtraction\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Operation $\\infty_h\\ -_h\\ \\infty_h$ is ill-defined, but we define it arbitrarily to $0_h$. It breaks the connection between\n   subtraction with addition and unary minus, but seems more intuitive.\\<close>"], ["", "definition sub :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" (infixl \"-\\<^sub>h\" 60) where\n  \"z -\\<^sub>h w = (if z = \\<infinity>\\<^sub>h \\<and> w = \\<infinity>\\<^sub>h then 0\\<^sub>h else z +\\<^sub>h (~\\<^sub>h w))\""], ["", "lemma of_complex_sub_of_complex [simp]:\n  shows \"(of_complex x) -\\<^sub>h (of_complex y) = of_complex (x - y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex x -\\<^sub>h of_complex y = of_complex (x - y)", "unfolding sub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if of_complex x = \\<infinity>\\<^sub>h \\<and>\n        of_complex y = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else of_complex x +\\<^sub>h ~\\<^sub>h (of_complex y)) =\n    of_complex (x - y)", "by simp"], ["", "lemma zero_sub_right[simp]:\n  shows \"z -\\<^sub>h 0\\<^sub>h = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z -\\<^sub>h 0\\<^sub>h = z", "unfolding sub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if z = \\<infinity>\\<^sub>h \\<and> 0\\<^sub>h = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else z +\\<^sub>h ~\\<^sub>h 0\\<^sub>h) =\n    z", "by simp"], ["", "lemma zero_sub_left[simp]:\n  shows \"0\\<^sub>h -\\<^sub>h of_complex x = of_complex (-x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h -\\<^sub>h of_complex x = of_complex (- x)", "by (subst of_complex_zero[symmetric], simp del: of_complex_zero)"], ["", "lemma zero_sub_one[simp]:\n  shows \"0\\<^sub>h -\\<^sub>h 1\\<^sub>h = of_complex (-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h -\\<^sub>h 1\\<^sub>h = of_complex (- 1)", "by (metis of_complex_one zero_sub_left)"], ["", "lemma of_complex_sub_one [simp]:\n  shows \"of_complex x -\\<^sub>h 1\\<^sub>h = of_complex (x - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex x -\\<^sub>h 1\\<^sub>h = of_complex (x - 1)", "by (metis of_complex_one of_complex_sub_of_complex)"], ["", "lemma sub_eq_zero [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h z = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z -\\<^sub>h z = 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h z = 0\\<^sub>h", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h z = 0\\<^sub>h", "by auto"], ["", "lemma sub_eq_zero_iff:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h \\<or> w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h w = 0\\<^sub>h \\<longleftrightarrow> z = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z -\\<^sub>h w = 0\\<^sub>h) = (z = w)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z -\\<^sub>h w = 0\\<^sub>h \\<Longrightarrow> z = w\n 2. z = w \\<Longrightarrow> z -\\<^sub>h w = 0\\<^sub>h", "assume \"z -\\<^sub>h w = 0\\<^sub>h\""], ["proof (state)\nthis:\n  z -\\<^sub>h w = 0\\<^sub>h\n\ngoal (2 subgoals):\n 1. z -\\<^sub>h w = 0\\<^sub>h \\<Longrightarrow> z = w\n 2. z = w \\<Longrightarrow> z -\\<^sub>h w = 0\\<^sub>h", "thus \"z = w\""], ["proof (prove)\nusing this:\n  z -\\<^sub>h w = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = w", "using assms"], ["proof (prove)\nusing this:\n  z -\\<^sub>h w = 0\\<^sub>h\n  z \\<noteq> \\<infinity>\\<^sub>h \\<or> w \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = w", "unfolding sub_def"], ["proof (prove)\nusing this:\n  (if z = \\<infinity>\\<^sub>h \\<and> w = \\<infinity>\\<^sub>h then 0\\<^sub>h\n   else z +\\<^sub>h ~\\<^sub>h w) =\n  0\\<^sub>h\n  z \\<noteq> \\<infinity>\\<^sub>h \\<or> w \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = w", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z w za wa.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n            w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n         then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n        0\\<^sub>v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        (if za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n            wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n         then 0\\<^sub>h\\<^sub>c\n         else za +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c wa) \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<or>\n        \\<not> wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z \\<approx>\\<^sub>v w", "fix z w :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z w za wa.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n            w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n         then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n        0\\<^sub>v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        (if za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n            wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n         then 0\\<^sub>h\\<^sub>c\n         else za +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c wa) \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<or>\n        \\<not> wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z \\<approx>\\<^sub>v w", "obtain z1 z2 w1 w2 where *: \"z = (z1, z2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 w1 w2.\n        \\<lbrakk>z = (z1, z2); w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto, cases w, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>z w za wa.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n            w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n         then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n        0\\<^sub>v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        (if za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n            wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n         then 0\\<^sub>h\\<^sub>c\n         else za +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c wa) \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<or>\n        \\<not> wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z \\<approx>\\<^sub>v w", "assume \"z \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"\\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or> \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\" and\n           **: \"(if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v 0\\<^sub>v\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n      w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n   then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n  0\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>z w za wa.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n            w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n         then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n        0\\<^sub>v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        (if za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n            wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n         then 0\\<^sub>h\\<^sub>c\n         else za +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c wa) \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<or>\n        \\<not> wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z \\<approx>\\<^sub>v w", "have \"z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0", "using * \\<open>\\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or> \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<close> \\<open>z \\<noteq> vec_zero\\<close> \\<open>w \\<noteq> vec_zero\\<close>"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  w = (w1, w2)\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>z = (z1, 0); w = (w1, 0); z2 = 0; w2 = 0;\n     \\<forall>k. k * z1 = 1 \\<longrightarrow> k = 0; z1 \\<noteq> 0;\n     w1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>z = (z1, 0); w = (w1, 0); z2 = 0; w2 = 0;\n     \\<forall>k. k * w1 = 1 \\<longrightarrow> k = 0; z1 \\<noteq> 0;\n     w1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule_tac x=\"1/z1\" in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>z = (z1, 0); w = (w1, 0); z2 = 0; w2 = 0;\n     \\<forall>k. k * w1 = 1 \\<longrightarrow> k = 0; z1 \\<noteq> 0;\n     w1 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule_tac x=\"1/w1\" in allE, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z w za wa.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n            w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n         then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n        0\\<^sub>v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<or>\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        (if za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n            wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n         then 0\\<^sub>h\\<^sub>c\n         else za +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c wa) \\<approx>\n        0\\<^sub>h\\<^sub>c;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<or>\n        \\<not> wa \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z \\<approx>\\<^sub>v w", "thus \"z \\<approx>\\<^sub>v w\""], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v w", "using * **"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0 \\<or> w2 \\<noteq> 0\n  z = (z1, z2)\n  w = (w1, w2)\n  (if z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v \\<and>\n      w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n   then 0\\<^sub>v else z +\\<^sub>v ~\\<^sub>v w) \\<approx>\\<^sub>v\n  0\\<^sub>v\n\ngoal (1 subgoal):\n 1. z \\<approx>\\<^sub>v w", "by simp (rule_tac x=\"w2/z2\" in exI, auto simp add: field_simps)"], ["proof (state)\nthis:\n  z \\<approx>\\<^sub>v w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z = w\n\ngoal (1 subgoal):\n 1. z = w \\<Longrightarrow> z -\\<^sub>h w = 0\\<^sub>h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = w \\<Longrightarrow> z -\\<^sub>h w = 0\\<^sub>h", "assume \"z = w\""], ["proof (state)\nthis:\n  z = w\n\ngoal (1 subgoal):\n 1. z = w \\<Longrightarrow> z -\\<^sub>h w = 0\\<^sub>h", "thus \"z -\\<^sub>h w = 0\\<^sub>h\""], ["proof (prove)\nusing this:\n  z = w\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w = 0\\<^sub>h", "using sub_eq_zero[of z] assms"], ["proof (prove)\nusing this:\n  z = w\n  z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow> z -\\<^sub>h z = 0\\<^sub>h\n  z \\<noteq> \\<infinity>\\<^sub>h \\<or> w \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w = 0\\<^sub>h", "by auto"], ["proof (state)\nthis:\n  z -\\<^sub>h w = 0\\<^sub>h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inf_sub_left [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h -\\<^sub>h z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h -\\<^sub>h z = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h -\\<^sub>h z = \\<infinity>\\<^sub>h", "using uminus_inf_iff"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  (~\\<^sub>h ?z = \\<infinity>\\<^sub>h) = (?z = \\<infinity>\\<^sub>h)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h -\\<^sub>h z = \\<infinity>\\<^sub>h", "using inf_or_of_complex"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  (~\\<^sub>h ?z = \\<infinity>\\<^sub>h) = (?z = \\<infinity>\\<^sub>h)\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h -\\<^sub>h z = \\<infinity>\\<^sub>h", "unfolding sub_def"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  (~\\<^sub>h ?z = \\<infinity>\\<^sub>h) = (?z = \\<infinity>\\<^sub>h)\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. (if \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h \\<and>\n        z = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else \\<infinity>\\<^sub>h +\\<^sub>h ~\\<^sub>h z) =\n    \\<infinity>\\<^sub>h", "by force"], ["", "lemma inf_sub_right [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "using inf_or_of_complex"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "unfolding sub_def"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  ?z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. ?z = of_complex x)\n\ngoal (1 subgoal):\n 1. (if z = \\<infinity>\\<^sub>h \\<and>\n        \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else z +\\<^sub>h ~\\<^sub>h \\<infinity>\\<^sub>h) =\n    \\<infinity>\\<^sub>h", "by force"], ["", "text \\<open>This is ill-defined, but holds by our definition\\<close>"], ["", "lemma inf_sub_inf:\n  shows \"\\<infinity>\\<^sub>h -\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h -\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h", "unfolding sub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h \\<and>\n        \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h\n     else \\<infinity>\\<^sub>h +\\<^sub>h ~\\<^sub>h \\<infinity>\\<^sub>h) =\n    0\\<^sub>h", "by simp"], ["", "lemma sub_noteq_inf:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\" and \"w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "using inf_or_of_complex[of w]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  w = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. w = of_complex x)\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "using inf_or_of_complex[of \"z -\\<^sub>h w\"]"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  w = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. w = of_complex x)\n  z -\\<^sub>h w = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. z -\\<^sub>h w = of_complex x)\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "using of_complex_sub_of_complex"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  w = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. w = of_complex x)\n  z -\\<^sub>h w = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. z -\\<^sub>h w = of_complex x)\n  of_complex ?x -\\<^sub>h of_complex ?y = of_complex (?x - ?y)\n\ngoal (1 subgoal):\n 1. z -\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "by auto"], ["", "lemma sub_eq_inf:\n  assumes \"z -\\<^sub>h w = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "using assms sub_noteq_inf"], ["proof (prove)\nusing this:\n  z -\\<^sub>h w = \\<infinity>\\<^sub>h\n  \\<lbrakk>?z \\<noteq> \\<infinity>\\<^sub>h;\n   ?w \\<noteq> \\<infinity>\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> ?z -\\<^sub>h ?w \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "by blast"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Multiplication\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Operations $0_h \\cdot_h \\infty_h$ and $\\infty_h \\cdot_h 0_h$ are ill defined. Since all\nfunctions must be total, for formal reasons we define it arbitrarily to be $1_h$.\\<close>"], ["", "definition mult_cvec :: \"complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> complex_vec\" (infixl \"*\\<^sub>v\" 70) where\n [simp]: \"z *\\<^sub>v w = (let (z1, z2) = z; (w1, w2) = w\n                     in if (z1 = 0 \\<and> w2 = 0) \\<or> (w1 = 0 \\<and> z2 = 0) then\n                          (1, 1)\n                        else\n                          (z1*w1, z2*w2))\""], ["", "lift_definition mult_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex_homo_coords\" (infixl \"*\\<^sub>h\\<^sub>c\" 70) is mult_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       \\<lbrakk>prod1 \\<noteq> vec_zero; prod2 \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> prod1 *\\<^sub>v prod2 \\<noteq> vec_zero", "by (auto split: if_split_asm)"], ["", "lift_definition mult :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" (infixl \"*\\<^sub>h\" 70) is mult_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<approx> complex_homo_coords2;\n        complex_homo_coords3 \\<approx> complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 *\\<^sub>h\\<^sub>c\n                         complex_homo_coords3 \\<approx>\n                         complex_homo_coords2 *\\<^sub>h\\<^sub>c\n                         complex_homo_coords4", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 *\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 *\\<^sub>v complex_homo_coords4", "fix z w z' w' :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 *\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 *\\<^sub>v complex_homo_coords4", "obtain z1 z2 w1 w2 z'1 z'2 w'1 w'2 where\n    *: \"z = (z1, z2)\" \"w = (w1, w2)\" \"z' = (z'1, z'2)\" \"w' = (w'1, w'2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 w1 w2 z'1 z'2 w'1 w'2.\n        \\<lbrakk>z = (z1, z2); w = (w1, w2); z' = (z'1, z'2);\n         w' = (w'1, w'2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto, cases w, auto, cases z', auto, cases w', auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 *\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 *\\<^sub>v complex_homo_coords4", "assume **:\n         \"z \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"z \\<approx>\\<^sub>v z'\"\n         \"z' \\<noteq> vec_zero\" \"w' \\<noteq> vec_zero\" \"w \\<approx>\\<^sub>v w'\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4\\<rbrakk>\n       \\<Longrightarrow> complex_homo_coords1 *\\<^sub>v\n                         complex_homo_coords3 \\<approx>\\<^sub>v\n                         complex_homo_coords2 *\\<^sub>v complex_homo_coords4", "show \"z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "proof (cases \"(z1 = 0 \\<and> w2 = 0) \\<or> (w1 = 0 \\<and> z2 = 0)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0 \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\n 2. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "case True"], ["proof (state)\nthis:\n  z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0\n\ngoal (2 subgoals):\n 1. z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0 \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\n 2. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "hence \"(z'1 = 0 \\<and> w'2 = 0) \\<or> (w'1 = 0 \\<and> z'2 = 0)\""], ["proof (prove)\nusing this:\n  z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0\n\ngoal (1 subgoal):\n 1. z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0", "using * **"], ["proof (prove)\nusing this:\n  z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0", "by auto"], ["proof (state)\nthis:\n  z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0\n\ngoal (2 subgoals):\n 1. z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0 \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\n 2. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "using \\<open>(z1 = 0 \\<and> w2 = 0) \\<or> (w1 = 0 \\<and> z2 = 0)\\<close> \\<open>(z'1 = 0 \\<and> w'2 = 0) \\<or> (w'1 = 0 \\<and> z'2 = 0)\\<close>"], ["proof (prove)\nusing this:\n  z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0\n  z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "using * **"], ["proof (prove)\nusing this:\n  z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0\n  z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "by simp"], ["proof (state)\nthis:\n  z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "case False"], ["proof (state)\nthis:\n  \\<not> (z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "hence \"\\<not>((z'1 = 0 \\<and> w'2 = 0) \\<or> (w'1 = 0 \\<and> z'2 = 0))\""], ["proof (prove)\nusing this:\n  \\<not> (z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)", "using * **"], ["proof (prove)\nusing this:\n  \\<not> (z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0)\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)", "by auto"], ["proof (state)\nthis:\n  \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "hence ***: \"z *\\<^sub>v w = (z1*w1, z2*w2)\" \"z' *\\<^sub>v w' = (z'1*w'1, z'2*w'2)\""], ["proof (prove)\nusing this:\n  \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v w = (z1 * w1, z2 * w2) &&&\n    z' *\\<^sub>v w' = (z'1 * w'1, z'2 * w'2)", "using \\<open>\\<not>((z1 = 0 \\<and> w2 = 0) \\<or> (w1 = 0 \\<and> z2 = 0))\\<close> \\<open>\\<not>((z'1 = 0 \\<and> w'2 = 0) \\<or> (w'1 = 0 \\<and> z'2 = 0))\\<close>"], ["proof (prove)\nusing this:\n  \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)\n  \\<not> (z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0)\n  \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v w = (z1 * w1, z2 * w2) &&&\n    z' *\\<^sub>v w' = (z'1 * w'1, z'2 * w'2)", "using *"], ["proof (prove)\nusing this:\n  \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)\n  \\<not> (z1 = 0 \\<and> w2 = 0 \\<or> w1 = 0 \\<and> z2 = 0)\n  \\<not> (z'1 = 0 \\<and> w'2 = 0 \\<or> w'1 = 0 \\<and> z'2 = 0)\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v w = (z1 * w1, z2 * w2) &&&\n    z' *\\<^sub>v w' = (z'1 * w'1, z'2 * w'2)", "by auto"], ["proof (state)\nthis:\n  z *\\<^sub>v w = (z1 * w1, z2 * w2)\n  z' *\\<^sub>v w' = (z'1 * w'1, z'2 * w'2)\n\ngoal (1 subgoal):\n 1. \\<not> (z1 = 0 \\<and> w2 = 0 \\<or>\n            w1 = 0 \\<and> z2 = 0) \\<Longrightarrow>\n    z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'", "apply (subst ***)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (z1 * w1, z2 * w2) \\<approx>\\<^sub>v (z'1 * w'1, z'2 * w'2)", "using * **"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  z' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. (z1 * w1, z2 * w2) \\<approx>\\<^sub>v (z'1 * w'1, z'2 * w'2)", "by simp ((erule exE)+, rule_tac x=\"k*ka\" in exI, simp)"], ["proof (state)\nthis:\n  z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z *\\<^sub>v w \\<approx>\\<^sub>v z' *\\<^sub>v w'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_complex_mult_of_complex [simp]:\n  shows \"(of_complex z1) *\\<^sub>h (of_complex z2) = of_complex (z1 * z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z1 *\\<^sub>h of_complex z2 = of_complex (z1 * z2)", "by (transfer, transfer, simp)"], ["", "lemma mult_commute:\n  shows \"z1 *\\<^sub>h z2 = z2 *\\<^sub>h z1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z1 *\\<^sub>h z2 = z2 *\\<^sub>h z1", "apply (transfer, transfer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> z1 *\\<^sub>v z2 \\<approx>\\<^sub>v z2 *\\<^sub>v z1", "unfolding complex_cvec_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z1 z2.\n       \\<lbrakk>z1 \\<noteq> vec_zero; z2 \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<noteq> 0 \\<and>\n                            z2 *\\<^sub>v z1 =\n                            k *\\<^sub>s\\<^sub>v (z1 *\\<^sub>v z2)", "by (rule_tac x=\"1\" in exI, auto split: if_split_asm)"], ["", "lemma mult_zero_left [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"0\\<^sub>h *\\<^sub>h z = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h *\\<^sub>h z = 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h *\\<^sub>h z = 0\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "fix z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "obtain z1 z2 where *: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "assume \"z \\<noteq> vec_zero\" \"\\<not> (z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v)\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "hence \"z2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. z2 \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> za \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "thus \"0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v\""], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "using *"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. 0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v", "by simp"], ["proof (state)\nthis:\n  0\\<^sub>v *\\<^sub>v z \\<approx>\\<^sub>v 0\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_zero_right [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z *\\<^sub>h 0\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>h 0\\<^sub>h = 0\\<^sub>h", "using mult_zero_left[OF assms]"], ["proof (prove)\nusing this:\n  0\\<^sub>h *\\<^sub>h z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z *\\<^sub>h 0\\<^sub>h = 0\\<^sub>h", "by (simp add: mult_commute)"], ["", "lemma mult_inf_right [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"z *\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z *\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero; \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v;\n        \\<not> za \\<approx> 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "fix z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero; \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v;\n        \\<not> za \\<approx> 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "obtain z1 z2 where *: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero; \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v;\n        \\<not> za \\<approx> 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "assume \"z \\<noteq> vec_zero\" \"\\<not> (z \\<approx>\\<^sub>v 0\\<^sub>v)\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero; \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v;\n        \\<not> za \\<approx> 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "hence \"z1 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v\n\ngoal (1 subgoal):\n 1. z1 \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. z1 \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  z1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>z \\<noteq> vec_zero; \\<not> z \\<approx>\\<^sub>v 0\\<^sub>v;\n        \\<not> za \\<approx> 0\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "thus \"z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (prove)\nusing this:\n  z1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "using *"], ["proof (prove)\nusing this:\n  z1 \\<noteq> 0\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "by simp"], ["proof (state)\nthis:\n  z *\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_inf_left [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h *\\<^sub>h z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h *\\<^sub>h z = \\<infinity>\\<^sub>h", "using mult_inf_right[OF assms]"], ["proof (prove)\nusing this:\n  z *\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h *\\<^sub>h z = \\<infinity>\\<^sub>h", "by (simp add: mult_commute)"], ["", "lemma mult_one_left [simp]:\n  shows \"1\\<^sub>h *\\<^sub>h z = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>h *\\<^sub>h z = z", "by (transfer, transfer, force)"], ["", "lemma mult_one_right [simp]:\n  shows \"z *\\<^sub>h 1\\<^sub>h = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>h 1\\<^sub>h = z", "using mult_one_left[of z]"], ["proof (prove)\nusing this:\n  1\\<^sub>h *\\<^sub>h z = z\n\ngoal (1 subgoal):\n 1. z *\\<^sub>h 1\\<^sub>h = z", "by (simp add: mult_commute)"], ["", "text \\<open>This is ill-defined, but holds by our definition\\<close>"], ["", "lemma inf_mult_zero:\n  shows \"\\<infinity>\\<^sub>h *\\<^sub>h 0\\<^sub>h = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h *\\<^sub>h 0\\<^sub>h = 1\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma zero_mult_inf: \n  shows \"0\\<^sub>h *\\<^sub>h \\<infinity>\\<^sub>h = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h *\\<^sub>h \\<infinity>\\<^sub>h = 1\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma mult_eq_inf:\n  assumes \"z *\\<^sub>h w = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "using inf_or_of_complex[of w]"], ["proof (prove)\nusing this:\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  w = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. w = of_complex x)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "using inf_or_of_complex[of \"z *\\<^sub>h w\"]"], ["proof (prove)\nusing this:\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  w = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. w = of_complex x)\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. z *\\<^sub>h w = of_complex x)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "using of_complex_mult_of_complex"], ["proof (prove)\nusing this:\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n  w = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. w = of_complex x)\n  z *\\<^sub>h w = \\<infinity>\\<^sub>h \\<or>\n  (\\<exists>x. z *\\<^sub>h w = of_complex x)\n  of_complex ?z1.0 *\\<^sub>h of_complex ?z2.0 = of_complex (?z1.0 * ?z2.0)\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = \\<infinity>\\<^sub>h", "by auto"], ["", "lemma mult_noteq_inf:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\" and \"w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z *\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "using assms mult_eq_inf"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n  ?z *\\<^sub>h ?w = \\<infinity>\\<^sub>h \\<Longrightarrow>\n  ?z = \\<infinity>\\<^sub>h \\<or> ?w = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z *\\<^sub>h w \\<noteq> \\<infinity>\\<^sub>h", "by blast"], ["", "subsubsection \\<open>Reciprocal\\<close>"], ["", "definition reciprocal_cvec :: \"complex_vec \\<Rightarrow> complex_vec\" where\n  [simp]: \"reciprocal_cvec z = (let (z1, z2) = z in (z2, z1))\""], ["", "lift_definition reciprocal_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords\" is reciprocal_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       prod \\<noteq> vec_zero \\<Longrightarrow>\n       reciprocal_cvec prod \\<noteq> vec_zero", "by auto"], ["", "lift_definition reciprocal :: \"complex_homo \\<Rightarrow> complex_homo\" is reciprocal_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       reciprocal_hcoords complex_homo_coords1 \\<approx>\n       reciprocal_hcoords complex_homo_coords2", "by transfer auto"], ["", "lemma reciprocal_involution [simp]: \"reciprocal (reciprocal z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reciprocal (reciprocal z) = z", "by (transfer, transfer, auto)"], ["", "lemma reciprocal_zero [simp]: \"reciprocal 0\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reciprocal 0\\<^sub>h = \\<infinity>\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma reciprocal_inf [simp]: \"reciprocal \\<infinity>\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reciprocal \\<infinity>\\<^sub>h = 0\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma reciprocal_one [simp]: \"reciprocal 1\\<^sub>h = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reciprocal 1\\<^sub>h = 1\\<^sub>h", "by (transfer, transfer, simp)"], ["", "lemma reciprocal_inf_iff [iff]: \"reciprocal z = \\<infinity>\\<^sub>h \\<longleftrightarrow> z = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (reciprocal z = \\<infinity>\\<^sub>h) = (z = 0\\<^sub>h)", "by (transfer, transfer, auto)"], ["", "lemma reciprocal_zero_iff [iff]: \"reciprocal z = 0\\<^sub>h \\<longleftrightarrow> z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (reciprocal z = 0\\<^sub>h) = (z = \\<infinity>\\<^sub>h)", "by (transfer, transfer, auto)"], ["", "lemma reciprocal_of_complex [simp]:\n  assumes \"z \\<noteq> 0\"\n  shows \"reciprocal (of_complex z) = of_complex (1 / z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reciprocal (of_complex z) = of_complex (1 / z)", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. reciprocal (of_complex z) = of_complex (1 / z)", "by (transfer, transfer, simp)"], ["", "lemma reciprocal_real:\n  assumes \"is_real (to_complex z)\" and \"z \\<noteq> 0\\<^sub>h\" and \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)", "obtain c where \"z = of_complex c\" \"c \\<noteq> 0\" \"is_real c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>z = of_complex c; c \\<noteq> 0; is_real c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  is_real (to_complex z)\n  z \\<noteq> 0\\<^sub>h\n  z \\<noteq> \\<infinity>\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>z = of_complex c; c \\<noteq> 0; is_real c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = of_complex c\n  c \\<noteq> 0\n  is_real c\n\ngoal (1 subgoal):\n 1. Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = of_complex c\n  c \\<noteq> 0\n  is_real c\n\ngoal (1 subgoal):\n 1. Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)", "by (simp add: Re_divide_real)"], ["proof (state)\nthis:\n  Re (to_complex (reciprocal z)) = 1 / Re (to_complex z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reciprocal_id_iff: \n  shows \"reciprocal z = z \\<longleftrightarrow> z = of_complex 1 \\<or> z = of_complex (-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "proof (cases \"z = 0\\<^sub>h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))\n 2. z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "case True"], ["proof (state)\nthis:\n  z = 0\\<^sub>h\n\ngoal (2 subgoals):\n 1. z = 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))\n 2. z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "by (metis inf_not_of_complex of_complex_zero_iff reciprocal_inf_iff zero_neq_neg_one zero_neq_one)"], ["proof (state)\nthis:\n  (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "case False"], ["proof (state)\nthis:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n    (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "using inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))", "by (smt complex_sqrt_1 of_complex_zero_iff reciprocal_inf_iff reciprocal_of_complex to_complex_of_complex)"], ["proof (state)\nthis:\n  (reciprocal z = z) = (z = of_complex 1 \\<or> z = of_complex (- 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Division\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Operations $0_h :_h 0_h$ and $\\infty_h :_h \\infty_h$ are ill-defined. For formal reasons they\nare defined to be $1_h$ (by the definition of multiplication).\\<close>"], ["", "definition divide :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" (infixl \":\\<^sub>h\" 70) where\n  \"x :\\<^sub>h y = x *\\<^sub>h (reciprocal y)\""], ["", "lemma divide_zero_right [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"z :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h", "unfolding divide_def"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. z *\\<^sub>h reciprocal 0\\<^sub>h = \\<infinity>\\<^sub>h", "by simp"], ["", "lemma divide_zero_left [simp]:\n  assumes \"z \\<noteq> 0\\<^sub>h\"\n  shows \"0\\<^sub>h :\\<^sub>h z = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h :\\<^sub>h z = 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h :\\<^sub>h z = 0\\<^sub>h", "unfolding divide_def"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. 0\\<^sub>h *\\<^sub>h reciprocal z = 0\\<^sub>h", "by simp"], ["", "lemma divide_inf_right [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"z :\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z :\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z :\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h", "unfolding divide_def"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z *\\<^sub>h reciprocal \\<infinity>\\<^sub>h = 0\\<^sub>h", "by simp"], ["", "lemma divide_inf_left [simp]:\n  assumes \"z \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"\\<infinity>\\<^sub>h :\\<^sub>h z = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h :\\<^sub>h z = \\<infinity>\\<^sub>h", "using assms reciprocal_zero_iff[of z] mult_inf_left"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  (reciprocal z = 0\\<^sub>h) = (z = \\<infinity>\\<^sub>h)\n  ?z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n  \\<infinity>\\<^sub>h *\\<^sub>h ?z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h :\\<^sub>h z = \\<infinity>\\<^sub>h", "unfolding divide_def"], ["proof (prove)\nusing this:\n  z \\<noteq> \\<infinity>\\<^sub>h\n  (reciprocal z = 0\\<^sub>h) = (z = \\<infinity>\\<^sub>h)\n  ?z \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n  \\<infinity>\\<^sub>h *\\<^sub>h ?z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h *\\<^sub>h reciprocal z = \\<infinity>\\<^sub>h", "by simp"], ["", "lemma divide_eq_inf:\n  assumes \"z :\\<^sub>h w = \\<infinity>\\<^sub>h\"\n  shows \"z = \\<infinity>\\<^sub>h \\<or> w = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z :\\<^sub>h w = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = 0\\<^sub>h", "using reciprocal_inf_iff[of w] mult_eq_inf"], ["proof (prove)\nusing this:\n  z :\\<^sub>h w = \\<infinity>\\<^sub>h\n  (reciprocal w = \\<infinity>\\<^sub>h) = (w = 0\\<^sub>h)\n  ?z *\\<^sub>h ?w = \\<infinity>\\<^sub>h \\<Longrightarrow>\n  ?z = \\<infinity>\\<^sub>h \\<or> ?w = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = 0\\<^sub>h", "unfolding divide_def"], ["proof (prove)\nusing this:\n  z *\\<^sub>h reciprocal w = \\<infinity>\\<^sub>h\n  (reciprocal w = \\<infinity>\\<^sub>h) = (w = 0\\<^sub>h)\n  ?z *\\<^sub>h ?w = \\<infinity>\\<^sub>h \\<Longrightarrow>\n  ?z = \\<infinity>\\<^sub>h \\<or> ?w = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. z = \\<infinity>\\<^sub>h \\<or> w = 0\\<^sub>h", "by auto"], ["", "lemma inf_divide_zero [simp]:\n  shows \"\\<infinity>\\<^sub>h :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h", "unfolding divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h *\\<^sub>h reciprocal 0\\<^sub>h = \\<infinity>\\<^sub>h", "by (transfer, simp)"], ["", "lemma zero_divide_inf [simp]:\n  shows \"0\\<^sub>h :\\<^sub>h \\<infinity>\\<^sub>h =  0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h :\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h", "unfolding divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h *\\<^sub>h reciprocal \\<infinity>\\<^sub>h = 0\\<^sub>h", "by (transfer, simp)"], ["", "lemma divide_one_right [simp]:\n  shows \"z :\\<^sub>h 1\\<^sub>h = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z :\\<^sub>h 1\\<^sub>h = z", "unfolding divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. z *\\<^sub>h reciprocal 1\\<^sub>h = z", "by simp"], ["", "lemma of_complex_divide_of_complex [simp]:\n  assumes \"z2 \\<noteq> 0\"\n  shows \"(of_complex z1) :\\<^sub>h (of_complex z2) = of_complex (z1 / z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_complex z1 :\\<^sub>h of_complex z2 = of_complex (z1 / z2)", "using assms"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. of_complex z1 :\\<^sub>h of_complex z2 = of_complex (z1 / z2)", "unfolding divide_def"], ["proof (prove)\nusing this:\n  z2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. of_complex z1 *\\<^sub>h reciprocal (of_complex z2) =\n    of_complex (z1 / z2)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z2 z1.\n       z2 \\<noteq> 0 \\<Longrightarrow>\n       of_complex_hcoords z1 *\\<^sub>h\\<^sub>c\n       reciprocal_hcoords (of_complex_hcoords z2) \\<approx>\n       of_complex_hcoords (z1 / z2)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z2 z1.\n       z2 \\<noteq> 0 \\<Longrightarrow>\n       of_complex_cvec z1 *\\<^sub>v\n       reciprocal_cvec (of_complex_cvec z2) \\<approx>\\<^sub>v\n       of_complex_cvec (z1 / z2)", "by (simp, rule_tac x=\"1/z2\" in exI, simp)"], ["", "lemma one_div_of_complex [simp]:\n  assumes \"x \\<noteq> 0\"\n  shows \"1\\<^sub>h :\\<^sub>h of_complex x = of_complex (1 / x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>h :\\<^sub>h of_complex x = of_complex (1 / x)", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1\\<^sub>h :\\<^sub>h of_complex x = of_complex (1 / x)", "unfolding divide_def"], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1\\<^sub>h *\\<^sub>h reciprocal (of_complex x) = of_complex (1 / x)", "by simp"], ["", "text \\<open> This is ill-defined, but holds by our definition\\<close>"], ["", "lemma inf_divide_inf: \n  shows \"\\<infinity>\\<^sub>h :\\<^sub>h \\<infinity>\\<^sub>h = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h :\\<^sub>h \\<infinity>\\<^sub>h = 1\\<^sub>h", "unfolding divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity>\\<^sub>h *\\<^sub>h reciprocal \\<infinity>\\<^sub>h = 1\\<^sub>h", "by (simp add: inf_mult_zero)"], ["", "text \\<open> This is ill-defined, but holds by our definition\\<close>"], ["", "lemma zero_divide_zero:\n  shows \"0\\<^sub>h :\\<^sub>h 0\\<^sub>h = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h :\\<^sub>h 0\\<^sub>h = 1\\<^sub>h", "unfolding divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>h *\\<^sub>h reciprocal 0\\<^sub>h = 1\\<^sub>h", "by (simp add: zero_mult_inf)"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Conjugate\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "definition conjugate_cvec :: \"complex_vec \\<Rightarrow> complex_vec\" where\n  [simp]: \"conjugate_cvec z = vec_cnj z\""], ["", "lift_definition conjugate_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords\" is conjugate_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       prod \\<noteq> vec_zero \\<Longrightarrow>\n       conjugate_cvec prod \\<noteq> vec_zero", "by (auto simp add: vec_cnj_def)"], ["", "lift_definition conjugate :: \"complex_homo \\<Rightarrow> complex_homo\" is conjugate_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2.\n       complex_homo_coords1 \\<approx> complex_homo_coords2 \\<Longrightarrow>\n       conjugate_hcoords complex_homo_coords1 \\<approx>\n       conjugate_hcoords complex_homo_coords2", "by transfer (auto simp add: vec_cnj_def)"], ["", "lemma conjugate_involution [simp]:\n  shows \"conjugate (conjugate z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (conjugate z) = z", "by (transfer, transfer, auto)"], ["", "lemma conjugate_conjugate_comp [simp]:\n  shows \"conjugate \\<circ> conjugate = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate \\<circ> conjugate = id", "by (rule ext, simp)"], ["", "lemma inv_conjugate [simp]:\n  shows \"inv conjugate = conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv conjugate = conjugate", "using inv_unique_comp[of conjugate conjugate]"], ["proof (prove)\nusing this:\n  \\<lbrakk>conjugate \\<circ> conjugate = id;\n   conjugate \\<circ> conjugate = id\\<rbrakk>\n  \\<Longrightarrow> inv conjugate = conjugate\n\ngoal (1 subgoal):\n 1. inv conjugate = conjugate", "by simp"], ["", "lemma conjugate_of_complex [simp]:\n  shows \"conjugate (of_complex z) = of_complex (cnj z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (of_complex z) = of_complex (cnj z)", "by (transfer, transfer, simp add: vec_cnj_def)"], ["", "lemma conjugate_inf [simp]:\n  shows \"conjugate \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h", "by (transfer, transfer, simp add: vec_cnj_def)"], ["", "lemma conjugate_zero [simp]:\n  shows \"conjugate 0\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate 0\\<^sub>h = 0\\<^sub>h", "by (transfer, transfer, simp add: vec_cnj_def)"], ["", "lemma conjugate_one [simp]:\n  shows \"conjugate 1\\<^sub>h = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate 1\\<^sub>h = 1\\<^sub>h", "by (transfer, transfer, simp add: vec_cnj_def)"], ["", "lemma conjugate_inj:\n  assumes \"conjugate x = conjugate y\"\n  shows \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms"], ["proof (prove)\nusing this:\n  conjugate x = conjugate y\n\ngoal (1 subgoal):\n 1. x = y", "using conjugate_involution[of x] conjugate_involution[of y]"], ["proof (prove)\nusing this:\n  conjugate x = conjugate y\n  conjugate (conjugate x) = x\n  conjugate (conjugate y) = y\n\ngoal (1 subgoal):\n 1. x = y", "by metis"], ["", "lemma bij_conjugate [simp]:\n  shows \"bij conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij conjugate", "unfolding bij_def inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>UNIV.\n        \\<forall>y\\<in>UNIV.\n           conjugate x = conjugate y \\<longrightarrow> x = y) \\<and>\n    surj conjugate", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. conjugate x = conjugate y \\<Longrightarrow> x = y\n 2. \\<And>x. x \\<in> range conjugate", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. conjugate x = conjugate y \\<Longrightarrow> x = y\n 2. \\<And>x. x \\<in> range conjugate", "assume \"conjugate x = conjugate y\""], ["proof (state)\nthis:\n  conjugate x = conjugate y\n\ngoal (2 subgoals):\n 1. \\<And>x y. conjugate x = conjugate y \\<Longrightarrow> x = y\n 2. \\<And>x. x \\<in> range conjugate", "thus \"x = y\""], ["proof (prove)\nusing this:\n  conjugate x = conjugate y\n\ngoal (1 subgoal):\n 1. x = y", "by (simp add: conjugate_inj)"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> range conjugate", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> range conjugate", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> range conjugate", "show \"x \\<in> range conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> range conjugate", "by (metis conjugate_involution range_eqI)"], ["proof (state)\nthis:\n  x \\<in> range conjugate\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugate_id_iff: \n  shows \"conjugate a = a \\<longleftrightarrow> is_real (to_complex a) \\<or> a = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate a = a) =\n    (is_real (to_complex a) \\<or> a = \\<infinity>\\<^sub>h)", "using inf_or_of_complex[of a]"], ["proof (prove)\nusing this:\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n\ngoal (1 subgoal):\n 1. (conjugate a = a) =\n    (is_real (to_complex a) \\<or> a = \\<infinity>\\<^sub>h)", "by (metis conjugate_inf conjugate_of_complex eq_cnj_iff_real to_complex_of_complex)"], ["", "subsubsection \\<open>Inversion\\<close>"], ["", "text \\<open>Geometric inversion wrt. the unit circle\\<close>"], ["", "definition inversion where\n  \"inversion = conjugate \\<circ> reciprocal\""], ["", "lemma inversion_sym:\n  shows \"inversion = reciprocal \\<circ> conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion = reciprocal \\<circ> conjugate", "unfolding inversion_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate \\<circ> reciprocal = reciprocal \\<circ> conjugate", "apply (rule ext, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. conjugate (reciprocal x) = reciprocal (conjugate x)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       conjugate_hcoords (reciprocal_hcoords x) \\<approx>\n       reciprocal_hcoords (conjugate_hcoords x)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<noteq> vec_zero \\<Longrightarrow>\n       conjugate_cvec (reciprocal_cvec x) \\<approx>\\<^sub>v\n       reciprocal_cvec (conjugate_cvec x)", "apply (auto simp add: vec_cnj_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<forall>k.\n          k = 0 \\<or>\n          b \\<noteq> 0 \\<and> k \\<noteq> 1 \\<or>\n          a \\<noteq> 0 \\<and> k \\<noteq> 1 \\<Longrightarrow>\n       a = 0\n 2. \\<And>a b.\n       \\<forall>k.\n          k = 0 \\<or>\n          b \\<noteq> 0 \\<and> k \\<noteq> 1 \\<or>\n          a \\<noteq> 0 \\<and> k \\<noteq> 1 \\<Longrightarrow>\n       b = 0", "using one_neq_zero"], ["proof (prove)\nusing this:\n  (1::?'a) \\<noteq> (0::?'a)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<forall>k.\n          k = 0 \\<or>\n          b \\<noteq> 0 \\<and> k \\<noteq> 1 \\<or>\n          a \\<noteq> 0 \\<and> k \\<noteq> 1 \\<Longrightarrow>\n       a = 0\n 2. \\<And>a b.\n       \\<forall>k.\n          k = 0 \\<or>\n          b \\<noteq> 0 \\<and> k \\<noteq> 1 \\<or>\n          a \\<noteq> 0 \\<and> k \\<noteq> 1 \\<Longrightarrow>\n       b = 0", "by blast+"], ["", "lemma inversion_involution [simp]:\n  shows \"inversion (inversion z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion (inversion z) = z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. inversion (inversion z) = z", "have *: \"conjugate \\<circ> reciprocal = reciprocal \\<circ> conjugate\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate \\<circ> reciprocal = reciprocal \\<circ> conjugate", "using inversion_sym"], ["proof (prove)\nusing this:\n  inversion = reciprocal \\<circ> conjugate\n\ngoal (1 subgoal):\n 1. conjugate \\<circ> reciprocal = reciprocal \\<circ> conjugate", "by (simp add: inversion_def)"], ["proof (state)\nthis:\n  conjugate \\<circ> reciprocal = reciprocal \\<circ> conjugate\n\ngoal (1 subgoal):\n 1. inversion (inversion z) = z", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion (inversion z) = z", "unfolding inversion_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate \\<circ> reciprocal) ((conjugate \\<circ> reciprocal) z) = z", "by (subst *) simp"], ["proof (state)\nthis:\n  inversion (inversion z) = z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inversion_inversion_id [simp]:\n  shows \"inversion \\<circ> inversion = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion \\<circ> inversion = id", "by (rule ext, simp)"], ["", "lemma inversion_zero [simp]:\n  shows \"inversion 0\\<^sub>h = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion 0\\<^sub>h = \\<infinity>\\<^sub>h", "by (simp add: inversion_def)"], ["", "lemma inversion_infty [simp]:\n  shows \"inversion \\<infinity>\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion \\<infinity>\\<^sub>h = 0\\<^sub>h", "by (simp add: inversion_def)"], ["", "lemma inversion_of_complex [simp]:\n  assumes \"z \\<noteq> 0\"\n  shows \"inversion (of_complex z) = of_complex (1 / cnj z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inversion (of_complex z) = of_complex (1 / cnj z)", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. inversion (of_complex z) = of_complex (1 / cnj z)", "by (simp add: inversion_def)"], ["", "lemma is_real_inversion:\n  assumes \"is_real x\" and \"x \\<noteq> 0\"\n  shows \"is_real (to_complex (inversion (of_complex x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (to_complex (inversion (of_complex x)))", "using assms eq_cnj_iff_real[of x]"], ["proof (prove)\nusing this:\n  is_real x\n  x \\<noteq> 0\n  (cnj x = x) = is_real x\n\ngoal (1 subgoal):\n 1. is_real (to_complex (inversion (of_complex x)))", "by simp"], ["", "lemma inversion_id_iff: \n  shows \"a = inversion a \\<longleftrightarrow> a \\<noteq> \\<infinity>\\<^sub>h \\<and> (to_complex a) * cnj (to_complex a) = 1\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a = inversion a) =\n    (a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n     to_complex a * cnj (to_complex a) = 1)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. a = inversion a \\<Longrightarrow>\n    a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1 \\<Longrightarrow>\n    a = inversion a", "assume \"a = inversion a\""], ["proof (state)\nthis:\n  a = inversion a\n\ngoal (2 subgoals):\n 1. a = inversion a \\<Longrightarrow>\n    a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1\n 2. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1 \\<Longrightarrow>\n    a = inversion a", "thus ?rhs"], ["proof (prove)\nusing this:\n  a = inversion a\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1", "unfolding inversion_def"], ["proof (prove)\nusing this:\n  a = (conjugate \\<circ> reciprocal) a\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1", "using inf_or_of_complex[of a]"], ["proof (prove)\nusing this:\n  a = (conjugate \\<circ> reciprocal) a\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1", "by (metis (full_types) comp_apply complex_cnj_cancel_iff complex_cnj_zero inversion_def inversion_infty inversion_of_complex inversion_sym nonzero_eq_divide_eq of_complex_zero reciprocal_zero to_complex_of_complex zero_one_infty_not_equal(5))"], ["proof (state)\nthis:\n  a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n  to_complex a * cnj (to_complex a) = 1\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1 \\<Longrightarrow>\n    a = inversion a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1 \\<Longrightarrow>\n    a = inversion a", "assume ?rhs"], ["proof (state)\nthis:\n  a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n  to_complex a * cnj (to_complex a) = 1\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n    to_complex a * cnj (to_complex a) = 1 \\<Longrightarrow>\n    a = inversion a", "thus ?lhs"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n  to_complex a * cnj (to_complex a) = 1\n\ngoal (1 subgoal):\n 1. a = inversion a", "using inf_or_of_complex[of a]"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<infinity>\\<^sub>h \\<and>\n  to_complex a * cnj (to_complex a) = 1\n  a = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. a = of_complex x)\n\ngoal (1 subgoal):\n 1. a = inversion a", "by (metis inversion_of_complex mult_not_zero nonzero_mult_div_cancel_right one_neq_zero to_complex_of_complex)"], ["proof (state)\nthis:\n  a = inversion a\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsection \\<open>Ratio and cross-ratio\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)\n\n(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Ratio\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>Ratio of points $z$, $v$ and $w$ is usually defined as\n$\\frac{z-v}{z-w}$. Our definition introduces it in homogeneous\ncoordinates. It is well-defined if $z_1 \\neq z_2 \\vee z_1 \\neq z_3$ and $z_1 \\neq \\infty_h$ and \n$z_2 \\neq \\infty_h \\vee z_3 \\neq \\infty_h$\\<close>"], ["", "definition ratio :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" where\n  \"ratio za zb zc = (za -\\<^sub>h zb) :\\<^sub>h (za -\\<^sub>h zc)\""], ["", "text \\<open>This is ill-defined, but holds by our definition\\<close>"], ["", "lemma\n  assumes \"zb \\<noteq> \\<infinity>\\<^sub>h\" and \"zc \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio \\<infinity>\\<^sub>h zb zc = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ratio \\<infinity>\\<^sub>h zb zc = 1\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  zb \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. ratio \\<infinity>\\<^sub>h zb zc = 1\\<^sub>h", "using inf_sub_left[OF assms(1)]"], ["proof (prove)\nusing this:\n  zb \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n  \\<infinity>\\<^sub>h -\\<^sub>h zb = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. ratio \\<infinity>\\<^sub>h zb zc = 1\\<^sub>h", "using inf_sub_left[OF assms(2)]"], ["proof (prove)\nusing this:\n  zb \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n  \\<infinity>\\<^sub>h -\\<^sub>h zb = \\<infinity>\\<^sub>h\n  \\<infinity>\\<^sub>h -\\<^sub>h zc = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. ratio \\<infinity>\\<^sub>h zb zc = 1\\<^sub>h", "unfolding ratio_def"], ["proof (prove)\nusing this:\n  zb \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n  \\<infinity>\\<^sub>h -\\<^sub>h zb = \\<infinity>\\<^sub>h\n  \\<infinity>\\<^sub>h -\\<^sub>h zc = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (\\<infinity>\\<^sub>h -\\<^sub>h zb) :\\<^sub>h\n    (\\<infinity>\\<^sub>h -\\<^sub>h zc) =\n    1\\<^sub>h", "by (simp add: inf_divide_inf)"], ["", "lemma\n  assumes \"za \\<noteq> \\<infinity>\\<^sub>h\" and \"zc \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio za \\<infinity>\\<^sub>h zc = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ratio za \\<infinity>\\<^sub>h zc = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  za \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. ratio za \\<infinity>\\<^sub>h zc = \\<infinity>\\<^sub>h", "unfolding ratio_def"], ["proof (prove)\nusing this:\n  za \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h \\<infinity>\\<^sub>h) :\\<^sub>h (za -\\<^sub>h zc) =\n    \\<infinity>\\<^sub>h", "using inf_sub_right[OF assms(1)]"], ["proof (prove)\nusing this:\n  za \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n  za -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h \\<infinity>\\<^sub>h) :\\<^sub>h (za -\\<^sub>h zc) =\n    \\<infinity>\\<^sub>h", "using sub_noteq_inf[OF assms]"], ["proof (prove)\nusing this:\n  za \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n  za -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n  za -\\<^sub>h zc \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h \\<infinity>\\<^sub>h) :\\<^sub>h (za -\\<^sub>h zc) =\n    \\<infinity>\\<^sub>h", "using divide_inf_left"], ["proof (prove)\nusing this:\n  za \\<noteq> \\<infinity>\\<^sub>h\n  zc \\<noteq> \\<infinity>\\<^sub>h\n  za -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n  za -\\<^sub>h zc \\<noteq> \\<infinity>\\<^sub>h\n  ?z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n  \\<infinity>\\<^sub>h :\\<^sub>h ?z = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h \\<infinity>\\<^sub>h) :\\<^sub>h (za -\\<^sub>h zc) =\n    \\<infinity>\\<^sub>h", "by simp"], ["", "lemma\n  assumes \"za \\<noteq> \\<infinity>\\<^sub>h\" and \"zb \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio za zb \\<infinity>\\<^sub>h = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ratio za zb \\<infinity>\\<^sub>h = 0\\<^sub>h", "unfolding ratio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (za -\\<^sub>h zb) :\\<^sub>h (za -\\<^sub>h \\<infinity>\\<^sub>h) =\n    0\\<^sub>h", "using sub_noteq_inf[OF assms]"], ["proof (prove)\nusing this:\n  za -\\<^sub>h zb \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h zb) :\\<^sub>h (za -\\<^sub>h \\<infinity>\\<^sub>h) =\n    0\\<^sub>h", "using inf_sub_right[OF assms(1)]"], ["proof (prove)\nusing this:\n  za -\\<^sub>h zb \\<noteq> \\<infinity>\\<^sub>h\n  za -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h zb) :\\<^sub>h (za -\\<^sub>h \\<infinity>\\<^sub>h) =\n    0\\<^sub>h", "using divide_inf_right"], ["proof (prove)\nusing this:\n  za -\\<^sub>h zb \\<noteq> \\<infinity>\\<^sub>h\n  za -\\<^sub>h \\<infinity>\\<^sub>h = \\<infinity>\\<^sub>h\n  ?z \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n  ?z :\\<^sub>h \\<infinity>\\<^sub>h = 0\\<^sub>h\n\ngoal (1 subgoal):\n 1. (za -\\<^sub>h zb) :\\<^sub>h (za -\\<^sub>h \\<infinity>\\<^sub>h) =\n    0\\<^sub>h", "by simp"], ["", "lemma\n  assumes \"z1 \\<noteq> z2\" and \"z1 \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"ratio z1 z2 z1 = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ratio z1 z2 z1 = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. ratio z1 z2 z1 = \\<infinity>\\<^sub>h", "unfolding ratio_def"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (z1 -\\<^sub>h z2) :\\<^sub>h (z1 -\\<^sub>h z1) = \\<infinity>\\<^sub>h", "using divide_zero_right[of \"z1 -\\<^sub>h z2\"]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> \\<infinity>\\<^sub>h\n  z1 -\\<^sub>h z2 \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n  (z1 -\\<^sub>h z2) :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. (z1 -\\<^sub>h z2) :\\<^sub>h (z1 -\\<^sub>h z1) = \\<infinity>\\<^sub>h", "using sub_eq_zero_iff[of z1 z2]"], ["proof (prove)\nusing this:\n  z1 \\<noteq> z2\n  z1 \\<noteq> \\<infinity>\\<^sub>h\n  z1 -\\<^sub>h z2 \\<noteq> 0\\<^sub>h \\<Longrightarrow>\n  (z1 -\\<^sub>h z2) :\\<^sub>h 0\\<^sub>h = \\<infinity>\\<^sub>h\n  z1 \\<noteq> \\<infinity>\\<^sub>h \\<or>\n  z2 \\<noteq> \\<infinity>\\<^sub>h \\<Longrightarrow>\n  (z1 -\\<^sub>h z2 = 0\\<^sub>h) = (z1 = z2)\n\ngoal (1 subgoal):\n 1. (z1 -\\<^sub>h z2) :\\<^sub>h (z1 -\\<^sub>h z1) = \\<infinity>\\<^sub>h", "by simp"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "subsubsection \\<open>Cross-ratio\\<close>"], ["", "(* ---------------------------------------------------------------------------- *)"], ["", "text \\<open>The cross-ratio is defined over 4 points $(z, u, v, w)$, usually as\n$\\frac{(z-u)(v-w)}{(z-w)(v-u)}$. We define it using homogeneous coordinates. Cross ratio is\nill-defined when $z = u \\vee v = w$ and $z = w$ and $v = u$ i.e. when 3 points are equal. Since\nfunction must be total, in that case we define it arbitrarily to 1.\\<close>"], ["", "definition cross_ratio_cvec :: \"complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> complex_vec \\<Rightarrow> complex_vec\" where\n  [simp]: \"cross_ratio_cvec z u v w =\n     (let (z', z'') = z;\n          (u', u'') = u;\n          (v', v'') = v;\n          (w', w'') = w;\n          n1 = z'*u'' - u'*z'';\n          n2 = v'*w'' - w'*v'';\n          d1 = z'*w'' - w'*z'';\n          d2 = v'*u'' - u'*v''\n       in\n         if n1 * n2 \\<noteq> 0 \\<or> d1 * d2 \\<noteq> 0 then\n              (n1 * n2, d1 * d2)\n         else\n              (1, 1))\""], ["", "lift_definition cross_ratio_hcoords :: \"complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex_homo_coords \\<Rightarrow> complex_homo_coords\" is cross_ratio_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2 prod3 prod4.\n       \\<lbrakk>prod1 \\<noteq> vec_zero; prod2 \\<noteq> vec_zero;\n        prod3 \\<noteq> vec_zero; prod4 \\<noteq> vec_zero\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec prod1 prod2 prod3 prod4 \\<noteq>\n                         vec_zero", "by (auto split: if_split_asm)"], ["", "lift_definition cross_ratio :: \"complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo \\<Rightarrow> complex_homo\" is cross_ratio_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<approx> complex_homo_coords2;\n        complex_homo_coords3 \\<approx> complex_homo_coords4;\n        complex_homo_coords5 \\<approx> complex_homo_coords6;\n        complex_homo_coords7 \\<approx> complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_hcoords complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\n                         cross_ratio_hcoords complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "fix z u v w z' u' v' w' :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "obtain z1 z2 u1 u2 v1 v2 w1 w2 z'1 z'2 u'1 u'2 v'1 v'2 w'1 w'2\n    where *: \"z = (z1, z2)\" \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\"\n             \"z' = (z'1, z'2)\" \"u' = (u'1, u'2)\" \"v' = (v'1, v'2)\" \"w' = (w'1, w'2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 u1 u2 v1 v2 w1 w2 z'1 z'2 u'1 u'2 v'1 v'2 w'1 w'2.\n        \\<lbrakk>z = (z1, z2); u = (u1, u2); v = (v1, v2); w = (w1, w2);\n         z' = (z'1, z'2); u' = (u'1, u'2); v' = (v'1, v'2);\n         w' = (w'1, w'2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto, cases u, auto, cases v, auto, cases w, auto,\n        cases z', auto, cases u', auto, cases v', auto, cases w', auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  u' = (u'1, u'2)\n  v' = (v'1, v'2)\n  w' = (w'1, w'2)\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?n1 = \"z1*u2 - u1*z2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?n2 = \"v1*w2 - w1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?d1 = \"z1*w2 - w1*z2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?d2 = \"v1*u2 - u1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?n1' = \"z'1*u'2 - u'1*z'2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?n2' = \"v'1*w'2 - w'1*v'2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?d1' = \"z'1*w'2 - w'1*z'2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "let ?d2' = \"v'1*u'2 - u'1*v'2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "assume **:\n         \"z \\<noteq> vec_zero\" \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\"\n         \"z' \\<noteq> vec_zero\" \"u' \\<noteq> vec_zero\" \"v' \\<noteq> vec_zero\" \"w' \\<noteq> vec_zero\"\n         \"z \\<approx>\\<^sub>v z'\" \"v \\<approx>\\<^sub>v v'\" \"u \\<approx>\\<^sub>v u'\" \"w \\<approx>\\<^sub>v w'\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n  u' \\<noteq> vec_zero\n  v' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  v \\<approx>\\<^sub>v v'\n  u \\<approx>\\<^sub>v u'\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<And>complex_homo_coords1 complex_homo_coords2 complex_homo_coords3\n       complex_homo_coords4 complex_homo_coords5 complex_homo_coords6\n       complex_homo_coords7 complex_homo_coords8.\n       \\<lbrakk>complex_homo_coords1 \\<noteq> vec_zero;\n        complex_homo_coords2 \\<noteq> vec_zero;\n        complex_homo_coords3 \\<noteq> vec_zero;\n        complex_homo_coords4 \\<noteq> vec_zero;\n        complex_homo_coords5 \\<noteq> vec_zero;\n        complex_homo_coords6 \\<noteq> vec_zero;\n        complex_homo_coords7 \\<noteq> vec_zero;\n        complex_homo_coords8 \\<noteq> vec_zero;\n        complex_homo_coords1 \\<approx>\\<^sub>v complex_homo_coords2;\n        complex_homo_coords3 \\<approx>\\<^sub>v complex_homo_coords4;\n        complex_homo_coords5 \\<approx>\\<^sub>v complex_homo_coords6;\n        complex_homo_coords7 \\<approx>\\<^sub>v complex_homo_coords8\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec complex_homo_coords1\n                          complex_homo_coords3 complex_homo_coords5\n                          complex_homo_coords7 \\<approx>\\<^sub>v\n                         cross_ratio_cvec complex_homo_coords2\n                          complex_homo_coords4 complex_homo_coords6\n                          complex_homo_coords8", "show \"cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "proof (cases \"?n1*?n2 \\<noteq> 0 \\<or> ?d1*?d2 \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0 \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\n 2. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "case True"], ["proof (state)\nthis:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0 \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\n 2. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "hence \"?n1'*?n2' \\<noteq> 0 \\<or> ?d1'*?d2' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n    (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0", "using * **"], ["proof (prove)\nusing this:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  u' = (u'1, u'2)\n  v' = (v'1, v'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n  u' \\<noteq> vec_zero\n  v' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  v \\<approx>\\<^sub>v v'\n  u \\<approx>\\<^sub>v u'\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. (z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n    (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0", "by simp ((erule exE)+, simp)"], ["proof (state)\nthis:\n  (z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n  (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0 \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\n 2. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "using \\<open>?n1*?n2 \\<noteq> 0 \\<or> ?d1*?d2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "using \\<open>?n1'*?n2' \\<noteq> 0 \\<or> ?d1'*?d2' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n  (z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n  (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "using * **"], ["proof (prove)\nusing this:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n  (z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n  (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  u' = (u'1, u'2)\n  v' = (v'1, v'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n  u' \\<noteq> vec_zero\n  v' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  v \\<approx>\\<^sub>v v'\n  u \\<approx>\\<^sub>v u'\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "by simp ((erule exE)+, rule_tac x=\"k*ka*kb*kc\" in exI, simp add: field_simps)"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\n\ngoal (1 subgoal):\n 1. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "case False"], ["proof (state)\nthis:\n  \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n          (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "hence \"\\<not> (?n1'*?n2' \\<noteq> 0 \\<or> ?d1'*?d2' \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n          (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> ((z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq>\n            0 \\<or>\n            (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0)", "using * **"], ["proof (prove)\nusing this:\n  \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n          (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0)\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  u' = (u'1, u'2)\n  v' = (v'1, v'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n  u' \\<noteq> vec_zero\n  v' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  v \\<approx>\\<^sub>v v'\n  u \\<approx>\\<^sub>v u'\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. \\<not> ((z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq>\n            0 \\<or>\n            (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0)", "by simp ((erule exE)+, simp)"], ["proof (state)\nthis:\n  \\<not> ((z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n          (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n            (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq>\n            0) \\<Longrightarrow>\n    cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "using \\<open>\\<not> (?n1*?n2 \\<noteq> 0 \\<or> ?d1*?d2 \\<noteq> 0)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n          (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "using \\<open>\\<not> (?n1'*?n2' \\<noteq> 0 \\<or> ?d1'*?d2' \\<noteq> 0)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n          (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0)\n  \\<not> ((z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n          (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "using * **"], ["proof (prove)\nusing this:\n  \\<not> ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n          (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0)\n  \\<not> ((z'1 * u'2 - u'1 * z'2) * (v'1 * w'2 - w'1 * v'2) \\<noteq> 0 \\<or>\n          (z'1 * w'2 - w'1 * z'2) * (v'1 * u'2 - u'1 * v'2) \\<noteq> 0)\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z' = (z'1, z'2)\n  u' = (u'1, u'2)\n  v' = (v'1, v'2)\n  w' = (w'1, w'2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  z' \\<noteq> vec_zero\n  u' \\<noteq> vec_zero\n  v' \\<noteq> vec_zero\n  w' \\<noteq> vec_zero\n  z \\<approx>\\<^sub>v z'\n  v \\<approx>\\<^sub>v v'\n  u \\<approx>\\<^sub>v u'\n  w \\<approx>\\<^sub>v w'\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'", "by simp blast"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w \\<approx>\\<^sub>v cross_ratio_cvec z' u' v' w'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_01inf_id [simp]:\n  shows \"cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z 0\\<^sub>h 1\\<^sub>h \\<infinity>\\<^sub>h = z", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n        \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n       z", "fix z :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n        \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n       z", "obtain z1 z2 where *: \"z = (z1, z2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2. z = (z1, z2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n        \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n       z", "assume \"z \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<noteq> vec_zero \\<Longrightarrow>\n       cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n        \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n       z", "thus \"cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v \\<infinity>\\<^sub>v \\<approx>\\<^sub>v z\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n     \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n    z", "using *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  z = (z1, z2)\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n     \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n    z", "by simp (rule_tac x=\"-1\" in exI, simp)"], ["proof (state)\nthis:\n  cross_ratio_cvec z 0\\<^sub>v 1\\<^sub>v\n   \\<infinity>\\<^sub>v \\<approx>\\<^sub>v\n  z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_0:\n  assumes \"u \\<noteq> v\" and \"u \\<noteq> w\"\n  shows \"cross_ratio u u v w = 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio u u v w = 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  u \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio u u v w = 0\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> u \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> ua \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec u u v w \\<approx>\\<^sub>v\n                         0\\<^sub>v", "fix u v w  :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> u \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> ua \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec u u v w \\<approx>\\<^sub>v\n                         0\\<^sub>v", "obtain u1 u2 v1 v2 w1 w2\n    where *: \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u1 u2 v1 v2 w1 w2.\n        \\<lbrakk>u = (u1, u2); v = (v1, v2); w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases u, auto, cases v, auto, cases w, auto)"], ["proof (state)\nthis:\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> u \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> ua \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec u u v w \\<approx>\\<^sub>v\n                         0\\<^sub>v", "assume \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"\\<not> u \\<approx>\\<^sub>v v\" \"\\<not> u \\<approx>\\<^sub>v w\""], ["proof (state)\nthis:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v v\n  \\<not> u \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> u \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> ua \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec u u v w \\<approx>\\<^sub>v\n                         0\\<^sub>v", "thus \"cross_ratio_cvec u u v w \\<approx>\\<^sub>v 0\\<^sub>v\""], ["proof (prove)\nusing this:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v v\n  \\<not> u \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec u u v w \\<approx>\\<^sub>v 0\\<^sub>v", "using * complex_cvec_eq_mix[of u1 u2 v1 v2] complex_cvec_eq_mix[of u1 u2 w1 w2]"], ["proof (prove)\nusing this:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v v\n  \\<not> u \\<approx>\\<^sub>v w\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  \\<lbrakk>(u1, u2) \\<noteq> vec_zero; (v1, v2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((u1, u2) \\<approx>\\<^sub>v (v1, v2)) =\n                    (u1 * v2 = u2 * v1)\n  \\<lbrakk>(u1, u2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((u1, u2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (u1 * w2 = u2 * w1)\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec u u v w \\<approx>\\<^sub>v 0\\<^sub>v", "by (force simp add: mult.commute)"], ["proof (state)\nthis:\n  cross_ratio_cvec u u v w \\<approx>\\<^sub>v 0\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_1:\n  assumes \"u \\<noteq> v\" and \"v \\<noteq> w\"\n  shows \"cross_ratio v u v w = 1\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio v u v w = 1\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  v \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio v u v w = 1\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "fix u v w  :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "obtain u1 u2 v1 v2 w1 w2\n    where *: \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u1 u2 v1 v2 w1 w2.\n        \\<lbrakk>u = (u1, u2); v = (v1, v2); w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases u, auto, cases v, auto, cases w, auto)"], ["proof (state)\nthis:\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "let ?n1 = \"v1*u2 - u1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "let ?n2 = \"v1*w2 - w1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "assume \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"\\<not> u \\<approx>\\<^sub>v v\" \"\\<not> v \\<approx>\\<^sub>v w\""], ["proof (state)\nthis:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v v\n  \\<not> v \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "hence \"?n1 \\<noteq> 0 \\<and> ?n2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v v\n  \\<not> v \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. v1 * u2 - u1 * v2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0", "using * complex_cvec_eq_mix[of u1 u2 v1 v2] complex_cvec_eq_mix[of v1 v2 w1 w2]"], ["proof (prove)\nusing this:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v v\n  \\<not> v \\<approx>\\<^sub>v w\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  \\<lbrakk>(u1, u2) \\<noteq> vec_zero; (v1, v2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((u1, u2) \\<approx>\\<^sub>v (v1, v2)) =\n                    (u1 * v2 = u2 * v1)\n  \\<lbrakk>(v1, v2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((v1, v2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (v1 * w2 = v2 * w1)\n\ngoal (1 subgoal):\n 1. v1 * u2 - u1 * v2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  v1 * u2 - u1 * v2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>u v w ua va wa.\n       \\<lbrakk>u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        w \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> va;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec v u v w \\<approx>\\<^sub>v\n                         1\\<^sub>v", "thus \"cross_ratio_cvec v u v w \\<approx>\\<^sub>v 1\\<^sub>v\""], ["proof (prove)\nusing this:\n  v1 * u2 - u1 * v2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec v u v w \\<approx>\\<^sub>v 1\\<^sub>v", "using *"], ["proof (prove)\nusing this:\n  v1 * u2 - u1 * v2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec v u v w \\<approx>\\<^sub>v 1\\<^sub>v", "by simp (rule_tac x=\"1 / (?n1 * ?n2)\" in exI, simp)"], ["proof (state)\nthis:\n  cross_ratio_cvec v u v w \\<approx>\\<^sub>v 1\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_inf:\n  assumes \"u \\<noteq> w\" and \"v \\<noteq> w\"\n  shows \"cross_ratio w u v w = \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio w u v w = \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  u \\<noteq> w\n  v \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio w u v w = \\<infinity>\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "fix u v w  :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "obtain u1 u2 v1 v2 w1 w2\n    where *: \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u1 u2 v1 v2 w1 w2.\n        \\<lbrakk>u = (u1, u2); v = (v1, v2); w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases u, auto, cases v, auto, cases w, auto)"], ["proof (state)\nthis:\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "let ?n1 = \"w1*u2 - u1*w2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "let ?n2 = \"v1*w2 - w1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "assume \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\" \"\\<not> u \\<approx>\\<^sub>v w\" \"\\<not> v \\<approx>\\<^sub>v w\""], ["proof (state)\nthis:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v w\n  \\<not> v \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "hence \"?n1 \\<noteq> 0 \\<and> ?n2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v w\n  \\<not> v \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. w1 * u2 - u1 * w2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0", "using * complex_cvec_eq_mix[of u1 u2 w1 w2] complex_cvec_eq_mix[of v1 v2 w1 w2]"], ["proof (prove)\nusing this:\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> u \\<approx>\\<^sub>v w\n  \\<not> v \\<approx>\\<^sub>v w\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  \\<lbrakk>(u1, u2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((u1, u2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (u1 * w2 = u2 * w1)\n  \\<lbrakk>(v1, v2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((v1, v2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (v1 * w2 = v2 * w1)\n\ngoal (1 subgoal):\n 1. w1 * u2 - u1 * w2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  w1 * u2 - u1 * w2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>u w v ua wa va.\n       \\<lbrakk>u \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; \\<not> u \\<approx>\\<^sub>v w;\n        \\<not> v \\<approx>\\<^sub>v w; \\<not> ua \\<approx> wa;\n        \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec w u v w \\<approx>\\<^sub>v\n                         \\<infinity>\\<^sub>v", "thus \"cross_ratio_cvec w u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (prove)\nusing this:\n  w1 * u2 - u1 * w2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec w u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "using *"], ["proof (prove)\nusing this:\n  w1 * u2 - u1 * w2 \\<noteq> 0 \\<and> v1 * w2 - w1 * v2 \\<noteq> 0\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec w u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "by simp"], ["proof (state)\nthis:\n  cross_ratio_cvec w u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_0inf:\n  assumes \"y \\<noteq> 0\"\n  shows \"cross_ratio (of_complex x) 0\\<^sub>h (of_complex y) \\<infinity>\\<^sub>h = (of_complex (x / y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (of_complex x) 0\\<^sub>h (of_complex y)\n     \\<infinity>\\<^sub>h =\n    of_complex (x / y)", "using assms"], ["proof (prove)\nusing this:\n  y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio (of_complex x) 0\\<^sub>h (of_complex y)\n     \\<infinity>\\<^sub>h =\n    of_complex (x / y)", "by (transfer, transfer) (simp, rule_tac x=\"-1/y\" in exI, simp)"], ["", "lemma cross_ratio_commute_13:\n  shows \"cross_ratio z u v w = reciprocal (cross_ratio v u z w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z u v w = reciprocal (cross_ratio v u z w)", "by (transfer, transfer, case_tac z, case_tac u, case_tac v, case_tac w, simp)"], ["", "lemma cross_ratio_commute_24:\n  shows \"cross_ratio z u v w = reciprocal (cross_ratio z w v u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z u v w = reciprocal (cross_ratio z w v u)", "by (transfer, transfer, case_tac z, case_tac u, case_tac v, case_tac w, simp)"], ["", "lemma cross_ratio_not_inf:\n  assumes \"z \\<noteq> w\" and \"u \\<noteq> v\"\n  shows \"cross_ratio z u v w \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z u v w \\<noteq> \\<infinity>\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> w\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. cross_ratio z u v w \\<noteq> \\<infinity>\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "fix z u v w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "assume nz: \"z \\<noteq> vec_zero\" \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "obtain z1 z2 u1 u2 v1 v2 w1 w2 where *: \"z = (z1, z2)\" \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 u1 u2 v1 v2 w1 w2.\n        \\<lbrakk>z = (z1, z2); u = (u1, u2); v = (v1, v2);\n         w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, cases u, cases v, cases w, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "obtain x1 x2 where **: \"cross_ratio_cvec z u v w = (x1, x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        cross_ratio_cvec z u v w = (x1, x2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"cross_ratio_cvec z u v w\", auto)"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w = (x1, x2)\n\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "assume \"\\<not> z \\<approx>\\<^sub>v w\" \"\\<not> u \\<approx>\\<^sub>v v\""], ["proof (state)\nthis:\n  \\<not> z \\<approx>\\<^sub>v w\n  \\<not> u \\<approx>\\<^sub>v v\n\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "hence \"z1*w2 \\<noteq> z2*w1\" \"u1*v2 \\<noteq> u2*v1\""], ["proof (prove)\nusing this:\n  \\<not> z \\<approx>\\<^sub>v w\n  \\<not> u \\<approx>\\<^sub>v v\n\ngoal (1 subgoal):\n 1. z1 * w2 \\<noteq> z2 * w1 &&& u1 * v2 \\<noteq> u2 * v1", "using * nz complex_cvec_eq_mix"], ["proof (prove)\nusing this:\n  \\<not> z \\<approx>\\<^sub>v w\n  \\<not> u \\<approx>\\<^sub>v v\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<lbrakk>(?z1.0, ?z2.0) \\<noteq> vec_zero;\n   (?w1.0, ?w2.0) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((?z1.0, ?z2.0) \\<approx>\\<^sub>v (?w1.0, ?w2.0)) =\n                    (?z1.0 * ?w2.0 = ?z2.0 * ?w1.0)\n\ngoal (1 subgoal):\n 1. z1 * w2 \\<noteq> z2 * w1 &&& u1 * v2 \\<noteq> u2 * v1", "by blast+"], ["proof (state)\nthis:\n  z1 * w2 \\<noteq> z2 * w1\n  u1 * v2 \\<noteq> u2 * v1\n\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "hence \"x2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z1 * w2 \\<noteq> z2 * w1\n  u1 * v2 \\<noteq> u2 * v1\n\ngoal (1 subgoal):\n 1. x2 \\<noteq> 0", "using * **"], ["proof (prove)\nusing this:\n  z1 * w2 \\<noteq> z2 * w1\n  u1 * v2 \\<noteq> u2 * v1\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  cross_ratio_cvec z u v w = (x1, x2)\n\ngoal (1 subgoal):\n 1. x2 \\<noteq> 0", "by (auto split: if_split_asm) (simp add: field_simps)"], ["proof (state)\nthis:\n  x2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z w u v za wa ua va.\n       \\<lbrakk>z \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        u \\<noteq> vec_zero; v \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v w; \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> za \\<approx> wa; \\<not> ua \\<approx> va\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                \\<infinity>\\<^sub>v", "thus \"\\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (prove)\nusing this:\n  x2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "using inf_cvec_z2_zero_iff * **"], ["proof (prove)\nusing this:\n  x2 \\<noteq> 0\n  (?z1.0, ?z2.0) \\<noteq> vec_zero \\<Longrightarrow>\n  ((?z1.0, ?z2.0) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (?z2.0 = 0)\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  cross_ratio_cvec z u v w = (x1, x2)\n\ngoal (1 subgoal):\n 1. \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v", "by simp"], ["proof (state)\nthis:\n  \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_not_zero:\n  assumes \"z \\<noteq> u\" and \"v \\<noteq> w\"\n  shows \"cross_ratio z u v w \\<noteq> 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z u v w \\<noteq> 0\\<^sub>h", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> u\n  v \\<noteq> w\n\ngoal (1 subgoal):\n 1. cross_ratio z u v w \\<noteq> 0\\<^sub>h", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "fix z u v w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "assume nz: \"z \\<noteq> vec_zero\" \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "obtain z1 z2 u1 u2 v1 v2 w1 w2 where *: \"z = (z1, z2)\" \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 u1 u2 v1 v2 w1 w2.\n        \\<lbrakk>z = (z1, z2); u = (u1, u2); v = (v1, v2);\n         w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, cases u, cases v, cases w, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "obtain x1 x2 where **: \"cross_ratio_cvec z u v w = (x1, x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        cross_ratio_cvec z u v w = (x1, x2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"cross_ratio_cvec z u v w\", auto)"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w = (x1, x2)\n\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "assume \"\\<not> z \\<approx>\\<^sub>v u\" \"\\<not> v \\<approx>\\<^sub>v w\""], ["proof (state)\nthis:\n  \\<not> z \\<approx>\\<^sub>v u\n  \\<not> v \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "hence \"z1*u2 \\<noteq> z2*u1\" \"v1*w2 \\<noteq> v2*w1\""], ["proof (prove)\nusing this:\n  \\<not> z \\<approx>\\<^sub>v u\n  \\<not> v \\<approx>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. z1 * u2 \\<noteq> z2 * u1 &&& v1 * w2 \\<noteq> v2 * w1", "using * nz complex_cvec_eq_mix"], ["proof (prove)\nusing this:\n  \\<not> z \\<approx>\\<^sub>v u\n  \\<not> v \\<approx>\\<^sub>v w\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<lbrakk>(?z1.0, ?z2.0) \\<noteq> vec_zero;\n   (?w1.0, ?w2.0) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((?z1.0, ?z2.0) \\<approx>\\<^sub>v (?w1.0, ?w2.0)) =\n                    (?z1.0 * ?w2.0 = ?z2.0 * ?w1.0)\n\ngoal (1 subgoal):\n 1. z1 * u2 \\<noteq> z2 * u1 &&& v1 * w2 \\<noteq> v2 * w1", "by blast+"], ["proof (state)\nthis:\n  z1 * u2 \\<noteq> z2 * u1\n  v1 * w2 \\<noteq> v2 * w1\n\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "hence \"x1 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z1 * u2 \\<noteq> z2 * u1\n  v1 * w2 \\<noteq> v2 * w1\n\ngoal (1 subgoal):\n 1. x1 \\<noteq> 0", "using * **"], ["proof (prove)\nusing this:\n  z1 * u2 \\<noteq> z2 * u1\n  v1 * w2 \\<noteq> v2 * w1\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  cross_ratio_cvec z u v w = (x1, x2)\n\ngoal (1 subgoal):\n 1. x1 \\<noteq> 0", "by (auto split: if_split_asm)"], ["proof (state)\nthis:\n  x1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z u v w za ua va wa.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u; \\<not> v \\<approx>\\<^sub>v w;\n        \\<not> za \\<approx> ua; \\<not> va \\<approx> wa\\<rbrakk>\n       \\<Longrightarrow> \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                                0\\<^sub>v", "thus \"\\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v 0\\<^sub>v\""], ["proof (prove)\nusing this:\n  x1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v 0\\<^sub>v", "using zero_cvec_z1_zero_iff * **"], ["proof (prove)\nusing this:\n  x1 \\<noteq> 0\n  (?z1.0, ?z2.0) \\<noteq> vec_zero \\<Longrightarrow>\n  ((?z1.0, ?z2.0) \\<approx>\\<^sub>v 0\\<^sub>v) = (?z1.0 = 0)\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  cross_ratio_cvec z u v w = (x1, x2)\n\ngoal (1 subgoal):\n 1. \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v 0\\<^sub>v", "by simp"], ["proof (state)\nthis:\n  \\<not> cross_ratio_cvec z u v w \\<approx>\\<^sub>v 0\\<^sub>v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_real:\n  assumes \"is_real z\" and \"is_real u\" and \"is_real v\" and \"is_real w\" \n  assumes \"z \\<noteq> u \\<and> v \\<noteq> w \\<or> z \\<noteq> w \\<and> u \\<noteq> v\"\n  shows \"is_real (to_complex (cross_ratio (of_complex z) (of_complex u) (of_complex v) (of_complex w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real\n     (to_complex\n       (cross_ratio (of_complex z) (of_complex u) (of_complex v)\n         (of_complex w)))", "using assms"], ["proof (prove)\nusing this:\n  is_real z\n  is_real u\n  is_real v\n  is_real w\n  z \\<noteq> u \\<and> v \\<noteq> w \\<or> z \\<noteq> w \\<and> u \\<noteq> v\n\ngoal (1 subgoal):\n 1. is_real\n     (to_complex\n       (cross_ratio (of_complex z) (of_complex u) (of_complex v)\n         (of_complex w)))", "by (transfer, transfer, auto)"], ["", "lemma cross_ratio:\n  assumes \"(z \\<noteq> u \\<and> v \\<noteq> w) \\<or> (z \\<noteq> w \\<and> u \\<noteq> v)\" and\n          \"z \\<noteq> \\<infinity>\\<^sub>h\" and  \"u \\<noteq> \\<infinity>\\<^sub>h\" and \"v \\<noteq> \\<infinity>\\<^sub>h\" and \"w \\<noteq> \\<infinity>\\<^sub>h\"\n  shows \"cross_ratio z u v w = ((z -\\<^sub>h u) *\\<^sub>h (v -\\<^sub>h w)) :\\<^sub>h ((z -\\<^sub>h w) *\\<^sub>h (v -\\<^sub>h u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z u v w =\n    (z -\\<^sub>h u) *\\<^sub>h (v -\\<^sub>h w) :\\<^sub>h\n    ((z -\\<^sub>h w) *\\<^sub>h (v -\\<^sub>h u))", "unfolding sub_def divide_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio z u v w =\n    (if z = \\<infinity>\\<^sub>h \\<and> u = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else z +\\<^sub>h ~\\<^sub>h u) *\\<^sub>h\n    (if v = \\<infinity>\\<^sub>h \\<and> w = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else v +\\<^sub>h ~\\<^sub>h w) *\\<^sub>h\n    reciprocal\n     ((if z = \\<infinity>\\<^sub>h \\<and> w = \\<infinity>\\<^sub>h\n       then 0\\<^sub>h else z +\\<^sub>h ~\\<^sub>h w) *\\<^sub>h\n      (if v = \\<infinity>\\<^sub>h \\<and> u = \\<infinity>\\<^sub>h\n       then 0\\<^sub>h else v +\\<^sub>h ~\\<^sub>h u))", "using assms"], ["proof (prove)\nusing this:\n  z \\<noteq> u \\<and> v \\<noteq> w \\<or> z \\<noteq> w \\<and> u \\<noteq> v\n  z \\<noteq> \\<infinity>\\<^sub>h\n  u \\<noteq> \\<infinity>\\<^sub>h\n  v \\<noteq> \\<infinity>\\<^sub>h\n  w \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. cross_ratio z u v w =\n    (if z = \\<infinity>\\<^sub>h \\<and> u = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else z +\\<^sub>h ~\\<^sub>h u) *\\<^sub>h\n    (if v = \\<infinity>\\<^sub>h \\<and> w = \\<infinity>\\<^sub>h\n     then 0\\<^sub>h else v +\\<^sub>h ~\\<^sub>h w) *\\<^sub>h\n    reciprocal\n     ((if z = \\<infinity>\\<^sub>h \\<and> w = \\<infinity>\\<^sub>h\n       then 0\\<^sub>h else z +\\<^sub>h ~\\<^sub>h w) *\\<^sub>h\n      (if v = \\<infinity>\\<^sub>h \\<and> u = \\<infinity>\\<^sub>h\n       then 0\\<^sub>h else v +\\<^sub>h ~\\<^sub>h u))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>\\<not> z \\<approx> u \\<and> \\<not> v \\<approx> w \\<or>\n                \\<not> z \\<approx> w \\<and> \\<not> u \\<approx> v;\n        \\<not> z \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        \\<not> u \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        \\<not> v \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        \\<not> w \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_hcoords z u v w \\<approx>\n                         (if z \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                             u \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n                          then 0\\<^sub>h\\<^sub>c\n                          else z +\\<^sub>h\\<^sub>c\n                               ~\\<^sub>h\\<^sub>c u) *\\<^sub>h\\<^sub>c\n                         (if v \\<approx> \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                             w \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n                          then 0\\<^sub>h\\<^sub>c\n                          else v +\\<^sub>h\\<^sub>c\n                               ~\\<^sub>h\\<^sub>c w) *\\<^sub>h\\<^sub>c\n                         reciprocal_hcoords\n                          ((if z \\<approx>\n                               \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                               w \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n                            then 0\\<^sub>h\\<^sub>c\n                            else z +\\<^sub>h\\<^sub>c\n                                 ~\\<^sub>h\\<^sub>c w) *\\<^sub>h\\<^sub>c\n                           (if v \\<approx>\n                               \\<infinity>\\<^sub>h\\<^sub>c \\<and>\n                               u \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\n                            then 0\\<^sub>h\\<^sub>c\n                            else v +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c u))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>\\<not> z \\<approx> u \\<and> \\<not> v \\<approx> w \\<or>\n                \\<not> z \\<approx> w \\<and> \\<not> u \\<approx> v;\n        \\<not> z \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        \\<not> u \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        \\<not> v \\<approx> \\<infinity>\\<^sub>h\\<^sub>c;\n        \\<not> w \\<approx> \\<infinity>\\<^sub>h\\<^sub>c\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_hcoords z u v w \\<approx>\n                         (z +\\<^sub>h\\<^sub>c\n                          ~\\<^sub>h\\<^sub>c u) *\\<^sub>h\\<^sub>c\n                         (v +\\<^sub>h\\<^sub>c\n                          ~\\<^sub>h\\<^sub>c w) *\\<^sub>h\\<^sub>c\n                         reciprocal_hcoords\n                          ((z +\\<^sub>h\\<^sub>c\n                            ~\\<^sub>h\\<^sub>c w) *\\<^sub>h\\<^sub>c\n                           (v +\\<^sub>h\\<^sub>c ~\\<^sub>h\\<^sub>c u))", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "fix z u v w :: complex_vec"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "obtain z1 z2 u1 u2 v1 v2 w1 w2\n    where *: \"z = (z1, z2)\" \"u = (u1, u2)\" \"v = (v1, v2)\" \"w = (w1, w2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z1 z2 u1 u2 v1 v2 w1 w2.\n        \\<lbrakk>z = (z1, z2); u = (u1, u2); v = (v1, v2);\n         w = (w1, w2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases z, auto, cases u, auto, cases v, auto, cases w, auto)"], ["proof (state)\nthis:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "let ?n1 = \"z1*u2 - u1*z2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "let ?n2 = \"v1*w2 - w1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "let ?d1 = \"z1*w2 - w1*z2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "let ?d2 = \"v1*u2 - u1*v2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "assume **: \"z \\<noteq> vec_zero\" \"u \\<noteq> vec_zero\" \"v \\<noteq> vec_zero\" \"w \\<noteq> vec_zero\"\n         \"\\<not> z \\<approx>\\<^sub>v u \\<and> \\<not> v \\<approx>\\<^sub>v w \\<or> \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v\"\n         \"\\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\" \"\\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\" \"\\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\" \"\\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\""], ["proof (state)\nthis:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v u \\<and> \\<not> v \\<approx>\\<^sub>v w \\<or>\n  \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "hence ***: \"?n1 * ?n2 \\<noteq> 0 \\<or> ?d1 * ?d2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v u \\<and> \\<not> v \\<approx>\\<^sub>v w \\<or>\n  \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v u \\<and> \\<not> v \\<approx>\\<^sub>v w \\<or>\n  \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n\ngoal (1 subgoal):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0", "using complex_cvec_eq_mix[of z1 z2 u1 u2] complex_cvec_eq_mix[of v1 v2 w1 w2]"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v u \\<and> \\<not> v \\<approx>\\<^sub>v w \\<or>\n  \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  \\<lbrakk>(z1, z2) \\<noteq> vec_zero; (u1, u2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1, z2) \\<approx>\\<^sub>v (u1, u2)) =\n                    (z1 * u2 = z2 * u1)\n  \\<lbrakk>(v1, v2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((v1, v2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (v1 * w2 = v2 * w1)\n\ngoal (1 subgoal):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0", "using complex_cvec_eq_mix[of z1 z2 w1 w2] complex_cvec_eq_mix[of u1 u2 v1 v2]"], ["proof (prove)\nusing this:\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v u \\<and> \\<not> v \\<approx>\\<^sub>v w \\<or>\n  \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  \\<lbrakk>(z1, z2) \\<noteq> vec_zero; (u1, u2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1, z2) \\<approx>\\<^sub>v (u1, u2)) =\n                    (z1 * u2 = z2 * u1)\n  \\<lbrakk>(v1, v2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((v1, v2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (v1 * w2 = v2 * w1)\n  \\<lbrakk>(z1, z2) \\<noteq> vec_zero; (w1, w2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((z1, z2) \\<approx>\\<^sub>v (w1, w2)) =\n                    (z1 * w2 = z2 * w1)\n  \\<lbrakk>(u1, u2) \\<noteq> vec_zero; (v1, v2) \\<noteq> vec_zero\\<rbrakk>\n  \\<Longrightarrow> ((u1, u2) \\<approx>\\<^sub>v (v1, v2)) =\n                    (u1 * v2 = u2 * v1)\n\ngoal (1 subgoal):\n 1. (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n    (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0", "by (metis eq_iff_diff_eq_0 mult.commute mult_eq_0_iff)"], ["proof (state)\nthis:\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "have ****: \"z2 \\<noteq> 0\" \"w2 \\<noteq> 0\" \"u2 \\<noteq> 0\" \"v2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z2 \\<noteq> 0 &&& w2 \\<noteq> 0) &&& u2 \\<noteq> 0 &&& v2 \\<noteq> 0", "using * **(1-4) **(6-9)"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n\ngoal (1 subgoal):\n 1. (z2 \\<noteq> 0 &&& w2 \\<noteq> 0) &&& u2 \\<noteq> 0 &&& v2 \\<noteq> 0", "using inf_cvec_z2_zero_iff[of z1 z2]"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (z1, z2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (z2 = 0)\n\ngoal (1 subgoal):\n 1. (z2 \\<noteq> 0 &&& w2 \\<noteq> 0) &&& u2 \\<noteq> 0 &&& v2 \\<noteq> 0", "using inf_cvec_z2_zero_iff[of u1 u2]"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (z1, z2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (z2 = 0)\n  (u1, u2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((u1, u2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (u2 = 0)\n\ngoal (1 subgoal):\n 1. (z2 \\<noteq> 0 &&& w2 \\<noteq> 0) &&& u2 \\<noteq> 0 &&& v2 \\<noteq> 0", "using inf_cvec_z2_zero_iff[of v1 v2]"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (z1, z2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (z2 = 0)\n  (u1, u2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((u1, u2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (u2 = 0)\n  (v1, v2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((v1, v2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (v2 = 0)\n\ngoal (1 subgoal):\n 1. (z2 \\<noteq> 0 &&& w2 \\<noteq> 0) &&& u2 \\<noteq> 0 &&& v2 \\<noteq> 0", "using inf_cvec_z2_zero_iff[of w1 w2]"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  z \\<noteq> vec_zero\n  u \\<noteq> vec_zero\n  v \\<noteq> vec_zero\n  w \\<noteq> vec_zero\n  \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\n  (z1, z2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((z1, z2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (z2 = 0)\n  (u1, u2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((u1, u2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (u2 = 0)\n  (v1, v2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((v1, v2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (v2 = 0)\n  (w1, w2) \\<noteq> vec_zero \\<Longrightarrow>\n  ((w1, w2) \\<approx>\\<^sub>v \\<infinity>\\<^sub>v) = (w2 = 0)\n\ngoal (1 subgoal):\n 1. (z2 \\<noteq> 0 &&& w2 \\<noteq> 0) &&& u2 \\<noteq> 0 &&& v2 \\<noteq> 0", "by blast+"], ["proof (state)\nthis:\n  z2 \\<noteq> 0\n  w2 \\<noteq> 0\n  u2 \\<noteq> 0\n  v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "have \"cross_ratio_cvec z u v w = (?n1*?n2, ?d1*?d2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w =\n    ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n     (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))", "using * ***"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w =\n    ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n     (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))", "by simp"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w =\n  ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "moreover"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w =\n  ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "let ?k = \"z2*u2*v2*w2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "have \"(z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v reciprocal_cvec ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) = (?k * ?n1 * ?n2, ?k * ?d1 * ?d2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n    reciprocal_cvec\n     ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n    (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n     z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))", "using * *** ****"], ["proof (prove)\nusing this:\n  z = (z1, z2)\n  u = (u1, u2)\n  v = (v1, v2)\n  w = (w1, w2)\n  (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2) \\<noteq> 0 \\<or>\n  (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2) \\<noteq> 0\n  z2 \\<noteq> 0\n  w2 \\<noteq> 0\n  u2 \\<noteq> 0\n  v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n    reciprocal_cvec\n     ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n    (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n     z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))", "by auto"], ["proof (state)\nthis:\n  (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n  reciprocal_cvec\n   ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n  (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n\ngoal (1 subgoal):\n 1. \\<And>z u v w.\n       \\<lbrakk>z \\<noteq> vec_zero; u \\<noteq> vec_zero;\n        v \\<noteq> vec_zero; w \\<noteq> vec_zero;\n        \\<not> z \\<approx>\\<^sub>v u \\<and>\n        \\<not> v \\<approx>\\<^sub>v w \\<or>\n        \\<not> z \\<approx>\\<^sub>v w \\<and> \\<not> u \\<approx>\\<^sub>v v;\n        \\<not> z \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> u \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> v \\<approx>\\<^sub>v \\<infinity>\\<^sub>v;\n        \\<not> w \\<approx>\\<^sub>v \\<infinity>\\<^sub>v\\<rbrakk>\n       \\<Longrightarrow> cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n                         (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n                         (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                         reciprocal_cvec\n                          ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n                           (v +\\<^sub>v ~\\<^sub>v u))", "ultimately"], ["proof (chain)\npicking this:\n  cross_ratio_cvec z u v w =\n  ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n  (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n  reciprocal_cvec\n   ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n  (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))", "show \"cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n           (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v reciprocal_cvec ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u))\""], ["proof (prove)\nusing this:\n  cross_ratio_cvec z u v w =\n  ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n  (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n  reciprocal_cvec\n   ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n  (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n    (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n    reciprocal_cvec\n     ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u))", "using ****"], ["proof (prove)\nusing this:\n  cross_ratio_cvec z u v w =\n  ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n  (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n  reciprocal_cvec\n   ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n  (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n  z2 \\<noteq> 0\n  w2 \\<noteq> 0\n  u2 \\<noteq> 0\n  v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n    (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n    reciprocal_cvec\n     ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u))", "unfolding complex_cvec_eq_def"], ["proof (prove)\nusing this:\n  cross_ratio_cvec z u v w =\n  ((z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n  (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n  reciprocal_cvec\n   ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n  (z2 * u2 * v2 * w2 * (z1 * u2 - u1 * z2) * (v1 * w2 - w1 * v2),\n   z2 * u2 * v2 * w2 * (z1 * w2 - w1 * z2) * (v1 * u2 - u1 * v2))\n  z2 \\<noteq> 0\n  w2 \\<noteq> 0\n  u2 \\<noteq> 0\n  v2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v\n       (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n       reciprocal_cvec\n        ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u)) =\n       k *\\<^sub>s\\<^sub>v cross_ratio_cvec z u v w", "by (rule_tac x=\"?k\" in exI) simp"], ["proof (state)\nthis:\n  cross_ratio_cvec z u v w \\<approx>\\<^sub>v\n  (z +\\<^sub>v ~\\<^sub>v u) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v\n  reciprocal_cvec\n   ((z +\\<^sub>v ~\\<^sub>v w) *\\<^sub>v (v +\\<^sub>v ~\\<^sub>v u))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*\n(* Although it seems useful, we did not use this. *)\n\ntext \\<open>Transfer extended complex plane to complex plane\\<close>\n\ndefinition HC :: \"complex_homo \\<Rightarrow> complex \\<Rightarrow> bool\"\n  where \"HC = (\\<lambda> h c. h = of_complex c)\"\n\nlemma Domainp_HC [transfer_domain_rule]: \"Domainp HC = (\\<lambda> x. x \\<noteq> \\<infinity>\\<^sub>h)\"\n  unfolding HC_def Domainp_iff[abs_def]\n  apply (rule ext)\n  using inf_or_of_complex\n  by auto\n\nlemma bi_unique_HC [transfer_rule]: \"bi_unique HC\"\n  using of_complex_inj\n  unfolding HC_def bi_unique_def\n  by auto\n\nlemma right_total_HC [transfer_rule]: \"right_total HC\"\n  unfolding HC_def right_total_def\n  by auto\n\nlemma HC_0 [transfer_rule]: \"HC 0\\<^sub>h 0\"\n  unfolding HC_def\n  by simp\n\nlemma HC_1 [transfer_rule]: \"HC 1\\<^sub>h 1\"\n  unfolding HC_def\n  by simp\n\ncontext includes lifting_syntax\nbegin\nlemma HC_add [transfer_rule]: \"(HC ===> HC ===> HC) (op +\\<^sub>h) (op +)\"\n  unfolding rel_fun_def HC_def\n  by auto\n\nlemma HC_mult [transfer_rule]: \"(HC ===> HC ===> HC) (op *\\<^sub>h) ( op * )\"\n  unfolding rel_fun_def HC_def\n  by auto\n\nlemma HC_All [transfer_rule]:\n  \"((HC ===> op =) ===> op =) (Ball {z. z \\<noteq> \\<infinity>\\<^sub>h}) All\"\n  using inf_or_of_complex\n  unfolding rel_fun_def HC_def\n  by auto\n\nlemma HC_transfer_forall [transfer_rule]:\n  \"((HC ===> op =) ===> op =) (transfer_bforall (\\<lambda>x. x \\<noteq> \\<infinity>\\<^sub>h)) transfer_forall\"\n  using inf_or_of_complex\n  unfolding transfer_forall_def transfer_bforall_def\n  unfolding rel_fun_def HC_def\n  by auto\nend\n*)"]]}