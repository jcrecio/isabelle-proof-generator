{"file_name": "/home/qj213/afp-2021-10-22/thys/Schutz_Spacetime/Util.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Schutz_Spacetime", "problem_names": ["lemma is_free_nat:\n  assumes \"(m::nat) < n\"\n      and \"n < c\"\n      and \"c \\<ge> 3\"\n  shows \"\\<exists>k::nat. k < m \\<or> (m < k \\<and> k < n) \\<or> (n < k \\<and> k < c)\"", "lemma set_le_two [simp]: \"card {a, b} \\<le> 2\"", "lemma set_le_three [simp]: \"card {a, b, c} \\<le> 3\"", "lemma card_subset: \"\\<lbrakk>card Y = n; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> card X \\<ge> n \\<or> infinite X\"", "lemma card_subset_finite: \"\\<lbrakk>finite X; card Y = n; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> card X \\<ge> n\"", "lemma three_subset: \"\\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z; {x,y,z} \\<subseteq> X\\<rbrakk> \\<Longrightarrow> card X \\<ge> 3 \\<or> infinite X\"", "lemma card_Collect_nat:\n  assumes \"(j::nat)>i\"\n  shows \"card {i..j} = j-i+1\"", "lemma less_3_cases: \"n < 3 \\<Longrightarrow> n = 0 \\<or> n = Suc 0 \\<or> n = Suc (Suc 0)\""], "translations": [["", "lemma is_free_nat:\n  assumes \"(m::nat) < n\"\n      and \"n < c\"\n      and \"c \\<ge> 3\"\n  shows \"\\<exists>k::nat. k < m \\<or> (m < k \\<and> k < n) \\<or> (n < k \\<and> k < c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. k < m \\<or> m < k \\<and> k < n \\<or> n < k \\<and> k < c", "using assms"], ["proof (prove)\nusing this:\n  m < n\n  n < c\n  3 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<exists>k. k < m \\<or> m < k \\<and> k < n \\<or> n < k \\<and> k < c", "by presburger"], ["", "text \\<open>Helpful proofs on sets.\\<close>"], ["", "lemma set_le_two [simp]: \"card {a, b} \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a, b} \\<le> 2", "by (simp add: card_insert_if)"], ["", "lemma set_le_three [simp]: \"card {a, b, c} \\<le> 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a, b, c} \\<le> 3", "by (simp add: card_insert_if)"], ["", "lemma card_subset: \"\\<lbrakk>card Y = n; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> card X \\<ge> n \\<or> infinite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>card Y = n; Y \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> n \\<le> card X \\<or> infinite X", "using card_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>card Y = n; Y \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> n \\<le> card X \\<or> infinite X", "by blast"], ["", "lemma card_subset_finite: \"\\<lbrakk>finite X; card Y = n; Y \\<subseteq> X\\<rbrakk> \\<Longrightarrow> card X \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite X; card Y = n; Y \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> n \\<le> card X", "using card_subset"], ["proof (prove)\nusing this:\n  \\<lbrakk>card ?Y = ?n; ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> ?n \\<le> card ?X \\<or> infinite ?X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite X; card Y = n; Y \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> n \\<le> card X", "by auto"], ["", "lemma three_subset: \"\\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z; {x,y,z} \\<subseteq> X\\<rbrakk> \\<Longrightarrow> card X \\<ge> 3 \\<or> infinite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z;\n     {x, y, z} \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> 3 \\<le> card X \\<or> infinite X", "apply (case_tac \"finite X\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z;\n     {x, y, z} \\<subseteq> X; finite X\\<rbrakk>\n    \\<Longrightarrow> 3 \\<le> card X \\<or> infinite X\n 2. \\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z;\n     {x, y, z} \\<subseteq> X; infinite X\\<rbrakk>\n    \\<Longrightarrow> 3 \\<le> card X \\<or> infinite X", "apply (auto simp : card_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z; finite X; x \\<in> X;\n     y \\<in> X; z \\<in> X\\<rbrakk>\n    \\<Longrightarrow> 3 \\<le> card X", "apply (erule_tac Y = \"{x,y,z}\" in card_subset_finite)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z; x \\<in> X; y \\<in> X;\n     z \\<in> X\\<rbrakk>\n    \\<Longrightarrow> card {x, y, z} = 3\n 2. \\<lbrakk>x \\<noteq> y; x \\<noteq> z; y \\<noteq> z; x \\<in> X; y \\<in> X;\n     z \\<in> X\\<rbrakk>\n    \\<Longrightarrow> {x, y, z} \\<subseteq> X", "by auto"], ["", "lemma card_Collect_nat:\n  assumes \"(j::nat)>i\"\n  shows \"card {i..j} = j-i+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i..j} = j - i + 1", "using card_atLeastAtMost"], ["proof (prove)\nusing this:\n  card {?l..?u} = Suc ?u - ?l\n\ngoal (1 subgoal):\n 1. card {i..j} = j - i + 1", "using Suc_diff_le assms le_eq_less_or_eq"], ["proof (prove)\nusing this:\n  card {?l..?u} = Suc ?u - ?l\n  ?n \\<le> ?m \\<Longrightarrow> Suc ?m - ?n = Suc (?m - ?n)\n  i < j\n  (?m \\<le> ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. card {i..j} = j - i + 1", "by presburger"], ["", "text \\<open>These lemmas make life easier with some of the ordering proofs.\\<close>"], ["", "lemma less_3_cases: \"n < 3 \\<Longrightarrow> n = 0 \\<or> n = Suc 0 \\<or> n = Suc (Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < 3 \\<Longrightarrow> n = 0 \\<or> n = Suc 0 \\<or> n = Suc (Suc 0)", "by auto"], ["", "end"]]}