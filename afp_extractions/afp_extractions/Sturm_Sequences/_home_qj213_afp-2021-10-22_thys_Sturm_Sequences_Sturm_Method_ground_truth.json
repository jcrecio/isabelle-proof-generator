{"file_name": "/home/qj213/afp-2021-10-22/thys/Sturm_Sequences/Sturm_Method.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sturm_Sequences", "problem_names": ["lemma poly_card_roots_less_leq:\n  \"card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} = count_roots_between p a b\"", "lemma poly_card_roots_leq_leq:\n  \"card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = \n       ( count_roots_between p a b + \n      (if (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0) \\<or> (a = b \\<and> p = 0) then 1 else 0))\"", "lemma poly_card_roots_less_less:\n  \"card {x. a < x \\<and> x < b \\<and> poly p x = 0} = \n      ( count_roots_between p a b -\n              (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0))\"", "lemma poly_card_roots_leq_less:\n  \"card {x::real. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n      ( count_roots_between p a b +\n      (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n      (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0))\"", "lemma poly_card_roots:\n  \"card {x::real. poly p x = 0} = count_roots p\"", "lemma poly_no_roots:\n  \"(\\<forall>x. poly p x \\<noteq> 0) \\<longleftrightarrow> ( p \\<noteq> 0 \\<and> count_roots p = 0)\"", "lemma poly_pos:\n  \"(\\<forall>x. poly p x > 0) \\<longleftrightarrow> ( \n        p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots p = 0)\"", "lemma poly_card_roots_greater:\n  \"card {x::real. x > a \\<and> poly p x = 0} = count_roots_above p a\"", "lemma poly_card_roots_leq:\n  \"card {x::real. x \\<le> a \\<and> poly p x = 0} = count_roots_below p a\"", "lemma poly_card_roots_geq:\n  \"card {x::real. x \\<ge> a \\<and> poly p x = 0} = (\n      count_roots_above p a + (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0))\"", "lemma poly_card_roots_less:\n  \"card {x::real. x < a \\<and> poly p x = 0} =\n       (count_roots_below p a - (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0))\"", "lemma poly_no_roots_less_leq:\n  \"(\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> count_roots_between p a b = 0)))\"", "lemma poly_pos_between_less_leq:\n  \"(\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> poly p b > 0 \\<and> count_roots_between p a b = 0)))\"", "lemma poly_no_roots_leq_leq:\n  \"(\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n   ((a > b \\<or> (p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_between p a b = 0)))\"", "lemma poly_pos_between_leq_leq:\n  \"(\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> \n   ((a > b \\<or> (p \\<noteq> 0 \\<and> poly p a > 0 \\<and> \n                count_roots_between p a b = 0)))\"", "lemma poly_no_roots_less_less:\n  \"(\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow> \n   ((a \\<ge> b \\<or> p \\<noteq> 0 \\<and> count_roots_between p a b = \n       (if poly p b = 0 then 1 else 0)))\"", "lemma poly_pos_between_less_less:\n  \"(\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> poly p ((a+b)/2) > 0 \\<and> \n       count_roots_between p a b = (if poly p b = 0 then 1 else 0))))\"", "lemma poly_no_roots_leq_less:\n  \"(\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_between p a b = \n       (if a < b \\<and> poly p b = 0 then 1 else 0)))\"", "lemma poly_pos_between_leq_less:\n  \"(\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> \n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> poly p a > 0 \\<and> count_roots_between p a b = \n        (if a < b \\<and> poly p b = 0 then 1 else 0))))\"", "lemma poly_no_roots_greater:\n  \"(\\<forall>x. x > a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n       ((p \\<noteq> 0 \\<and> count_roots_above p a = 0))\"", "lemma poly_pos_greater:\n  \"(\\<forall>x. x > a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> (\n       p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots_above p a = 0)\"", "lemma poly_no_roots_leq:\n  \"(\\<forall>x. x \\<le> a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow> \n       ( (p \\<noteq> 0 \\<and> count_roots_below p a = 0))\"", "lemma poly_pos_leq:\n  \"(\\<forall>x. x \\<le> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> \n   ( p \\<noteq> 0 \\<and> poly_neg_inf p = 1 \\<and> count_roots_below p a = 0)\"", "lemma poly_no_roots_geq:\n  \"(\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n       ( (p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0))\"", "lemma poly_pos_geq:\n  \"(\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   (p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0)\"", "lemma poly_no_roots_less:\n  \"(\\<forall>x. x < a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n       ((p \\<noteq> 0 \\<and> count_roots_below p a = (if poly p a = 0 then 1 else 0)))\"", "lemma poly_pos_less:\n  \"(\\<forall>x. x < a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   (p \\<noteq> 0 \\<and> poly_neg_inf p = 1 \\<and> count_roots_below p a = \n       (if poly p a = 0 then 1 else 0))\"", "lemmas sturm_card_substs = poly_card_roots poly_card_roots_less_leq \n    poly_card_roots_leq_less poly_card_roots_less_less poly_card_roots_leq_leq\n    poly_card_roots_less poly_card_roots_leq poly_card_roots_greater\n    poly_card_roots_geq", "lemmas sturm_prop_substs = poly_no_roots poly_no_roots_less_leq \n    poly_no_roots_leq_leq poly_no_roots_less_less poly_no_roots_leq_less\n    poly_no_roots_leq poly_no_roots_less poly_no_roots_geq \n    poly_no_roots_greater\n    poly_pos poly_pos_greater poly_pos_geq poly_pos_less poly_pos_leq\n    poly_pos_between_leq_less poly_pos_between_less_leq\n    poly_pos_between_leq_leq poly_pos_between_less_less", "lemma sturm_id_PR_prio0:\n  \"{x::real. P x} = {x::real. (PR_TAG P) x}\"\n  \"(\\<forall>x::real. f x < g x) = (\\<forall>x::real. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. P x) = (\\<forall>x::real. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"", "lemma sturm_id_PR_prio1:\n  \"{x::real. x < a \\<and> P x} = {x::real. x < a \\<and> (PR_TAG P) x}\"\n  \"{x::real. x \\<le> a \\<and> P x} = {x::real. x \\<le> a \\<and> (PR_TAG P) x}\"\n  \"{x::real. x \\<ge> b \\<and> P x} = {x::real. x \\<ge> b \\<and> (PR_TAG P) x}\"\n  \"{x::real. x > b \\<and> P x} = {x::real. x > b \\<and> (PR_TAG P) x}\"\n  \"(\\<forall>x::real < a. f x < g x) = (\\<forall>x::real < a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real \\<le> a. f x < g x) = (\\<forall>x::real \\<le> a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real > a. f x < g x) = (\\<forall>x::real > a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real \\<ge> a. f x < g x) = (\\<forall>x::real \\<ge> a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real < a. P x) = (\\<forall>x::real < a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real > a. P x) = (\\<forall>x::real > a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real \\<le> a. P x) = (\\<forall>x::real \\<le> a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real \\<ge> a. P x) = (\\<forall>x::real \\<ge> a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"", "lemma sturm_id_PR_prio2:\n  \"{x::real. x > a \\<and> x \\<le> b \\<and> P x} = \n       {x::real. x > a \\<and> x \\<le> b \\<and> PR_TAG P x}\"\n  \"{x::real. x \\<ge> a \\<and> x \\<le> b \\<and> P x} = \n       {x::real. x \\<ge> a \\<and> x \\<le> b \\<and> PR_TAG P x}\"\n  \"{x::real. x \\<ge> a \\<and> x < b \\<and> P x} = \n       {x::real. x \\<ge> a \\<and> x < b \\<and> PR_TAG P x}\"\n  \"{x::real. x > a \\<and> x < b \\<and> P x} = \n       {x::real. x > a \\<and> x < b \\<and> PR_TAG P x}\"\n  \"(\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"", "lemma PR_TAG_intro_prio0:\n  fixes P :: \"real \\<Rightarrow> bool\" and f :: \"real \\<Rightarrow> real\"\n  shows\n  \"PR_TAG P = P' \\<Longrightarrow> PR_TAG (\\<lambda>x. \\<not>(\\<not>P x)) = P'\"\n  \"\\<lbrakk>PR_TAG P = (\\<lambda>x. poly p x = 0); PR_TAG Q = (\\<lambda>x. poly q x = 0)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. P x \\<and> Q x) = (\\<lambda>x. poly (gcd p q) x = 0)\" and\n \" \\<lbrakk>PR_TAG P = (\\<lambda>x. poly p x = 0); PR_TAG Q = (\\<lambda>x. poly q x = 0)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. P x \\<or> Q x) = (\\<lambda>x. poly (p*q) x = 0)\" and\n\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x = g x) = (\\<lambda>x. poly (p-q) x = 0)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<noteq> g x) = (\\<lambda>x. poly (p-q) x \\<noteq> 0)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x < g x) = (\\<lambda>x. poly (q-p) x > 0)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<le> g x) = (\\<lambda>x. poly (q-p) x \\<ge> 0)\"\n\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. -f x) = (\\<lambda>x. poly (-p) x)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x + g x) = (\\<lambda>x. poly (p+q) x)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x - g x) = (\\<lambda>x. poly (p-q) x)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * g x) = (\\<lambda>x. poly (p*q) x)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. (f x)^n) = (\\<lambda>x. poly (p^n) x)\"\n  \"PR_TAG (\\<lambda>x. poly p x :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. x::real) = (\\<lambda>x. poly [:0,1:] x)\"\n  \"PR_TAG (\\<lambda>x. a::real) = (\\<lambda>x. poly [:a:] x)\"", "lemma PR_TAG_intro_prio1:\n  fixes f :: \"real \\<Rightarrow> real\"\n  shows\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x = 0) = (\\<lambda>x. poly p x = 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<noteq> 0) = (\\<lambda>x. poly p x \\<noteq> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. 0 = f x) = (\\<lambda>x. poly p x = 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. 0 \\<noteq> f x) = (\\<lambda>x. poly p x \\<noteq> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<ge> 0) = (\\<lambda>x. poly p x \\<ge> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x > 0) = (\\<lambda>x. poly p x > 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<le> 0) = (\\<lambda>x. poly (-p) x \\<ge> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x < 0) = (\\<lambda>x. poly (-p) x > 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> \n       PR_TAG (\\<lambda>x. 0 \\<le> f x) = (\\<lambda>x. poly (-p) x \\<le> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> \n       PR_TAG (\\<lambda>x. 0 < f x) = (\\<lambda>x. poly (-p) x < 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \n       \\<Longrightarrow> PR_TAG (\\<lambda>x. a * f x) = (\\<lambda>x. poly (smult a p) x)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * a) = (\\<lambda>x. poly (smult a p) x)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x / a) = (\\<lambda>x. poly (smult (inverse a) p) x)\"\n  \"PR_TAG (\\<lambda>x. x^n :: real) = (\\<lambda>x. poly (monom 1 n) x)\"", "lemma PR_TAG_intro_prio2:\n  \"PR_TAG (\\<lambda>x. 1 / b) = (\\<lambda>x. inverse b)\"\n  \"PR_TAG (\\<lambda>x. a / b) = (\\<lambda>x. a / b)\"\n  \"PR_TAG (\\<lambda>x. a / b * x^n :: real) = (\\<lambda>x. poly (monom (a/b) n) x)\"\n  \"PR_TAG (\\<lambda>x. x^n * a / b :: real) = (\\<lambda>x. poly (monom (a/b) n) x)\"\n  \"PR_TAG (\\<lambda>x. a * x^n :: real) = (\\<lambda>x. poly (monom a n) x)\"\n  \"PR_TAG (\\<lambda>x. x^n * a :: real) = (\\<lambda>x. poly (monom a n) x)\"\n  \"PR_TAG (\\<lambda>x. x^n / a :: real) = (\\<lambda>x. poly (monom (inverse a) n) x)\"\n(* TODO: can this be done more efficiently? I should think so. *)\n  \"PR_TAG (\\<lambda>x. f x^(Suc (Suc 0)) :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * f x :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. (f x)^Suc n :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. (f x)^n * f x :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. (f x)^Suc n :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * (f x)^n :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. (f x)^(m+n) :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. (f x)^m * (f x)^n :: real) = (\\<lambda>x. poly p x)\"", "lemma sturm_meta_spec: \"(\\<And>x::real. P x) \\<Longrightarrow> P x\"", "lemma sturm_imp_conv: \n  \"(a < x \\<longrightarrow> x < b \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x < b \\<longrightarrow> c)\"\n  \"(a \\<le> x \\<longrightarrow> x < b \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x < b \\<longrightarrow> c)\"\n  \"(a < x \\<longrightarrow> x \\<le> b \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x \\<le> b \\<longrightarrow> c)\"\n  \"(a \\<le> x \\<longrightarrow> x \\<le> b \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x \\<le> b \\<longrightarrow> c)\"\n  \"(x < b \\<longrightarrow> a < x \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x < b \\<longrightarrow> c)\"\n  \"(x < b \\<longrightarrow> a \\<le> x \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x < b \\<longrightarrow> c)\"\n  \"(x \\<le> b \\<longrightarrow> a < x \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x \\<le> b \\<longrightarrow> c)\"\n  \"(x \\<le> b \\<longrightarrow> a \\<le> x \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x \\<le> b \\<longrightarrow> c)\""], "translations": [["", "lemma poly_card_roots_less_leq:\n  \"card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} = count_roots_between p a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b", "by (simp add: count_roots_between_correct)"], ["", "lemma poly_card_roots_leq_leq:\n  \"card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = \n       ( count_roots_between p a b + \n      (if (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0) \\<or> (a = b \\<and> p = 0) then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "proof (cases \"(a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0) \\<or> (a = b \\<and> p = 0)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)\n 2. \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n            a = b \\<and> p = 0) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n\ngoal (2 subgoals):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)\n 2. \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n            a = b \\<and> p = 0) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "note False' = this"], ["proof (state)\nthis:\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n\ngoal (2 subgoals):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)\n 2. \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n            a = b \\<and> p = 0) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)\n 2. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)\n 2. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "with False'"], ["proof (chain)\npicking this:\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  p \\<noteq> 0", "have \"poly p a \\<noteq> 0 \\<or> a > b\""], ["proof (prove)\nusing this:\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p a \\<noteq> 0 \\<or> b < a", "by auto"], ["proof (state)\nthis:\n  poly p a \\<noteq> 0 \\<or> b < a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)\n 2. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "hence \"{x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = \n               {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  poly p a \\<noteq> 0 \\<or> b < a\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)\n 2. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "using poly_card_roots_less_leq False'"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0} =\n  count_roots_between ?p ?a ?b\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "by (auto split: if_split_asm)"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n      a = b \\<and> p = 0\n   then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "have \"{x. a \\<le> x \\<and> x \\<le> b} = {a..b}\"\n             \"{x. a < x \\<and> x \\<le> b} = {a<..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x \\<le> b} = {a..b} &&&\n    {x. a < x \\<and> x \\<le> b} = {a<..b}", "by auto"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> x \\<le> b} = {a..b}\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "with True False"], ["proof (chain)\npicking this:\n  p = 0\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  {x. a \\<le> x \\<and> x \\<le> b} = {a..b}\n  {x. a < x \\<and> x \\<le> b} = {a<..b}", "have \"card {x. a < x \\<and> x \\<le> b} = 0\" \"card {x. a \\<le> x \\<and> x \\<le> b} = 0\""], ["proof (prove)\nusing this:\n  p = 0\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  {x. a \\<le> x \\<and> x \\<le> b} = {a..b}\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x \\<le> b} = 0 &&&\n    card {x. a \\<le> x \\<and> x \\<le> b} = 0", "by (auto simp add: card_eq_0_iff infinite_Ioc infinite_Icc)"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x \\<le> b} = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                     a = b \\<and> p = 0);\n     p = 0\\<rbrakk>\n    \\<Longrightarrow> card\n                       {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                      count_roots_between p a b +\n                      (if a \\<le> b \\<and>\n                          poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n                          a = b \\<and> p = 0\n                       then 1 else 0)", "with True False"], ["proof (chain)\npicking this:\n  p = 0\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x \\<le> b} = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  p = 0\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x \\<le> b} = 0\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "using count_roots_between_correct"], ["proof (prove)\nusing this:\n  p = 0\n  \\<not> (a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n          a = b \\<and> p = 0)\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x \\<le> b} = 0\n  count_roots_between ?p ?a ?b =\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "by (simp add: )"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n      a = b \\<and> p = 0\n   then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n      a = b \\<and> p = 0\n   then 1 else 0)\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "case True"], ["proof (state)\nthis:\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "note True' = this"], ["proof (state)\nthis:\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "have fin: \"finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "with True'"], ["proof (chain)\npicking this:\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n  p = 0", "have \"a = b\""], ["proof (prove)\nusing this:\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n  p = 0\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "hence \"{x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = {b}\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = {b}", "using True"], ["proof (prove)\nusing this:\n  a = b\n  p = 0\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = {b}", "by auto"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = {b}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} = {b}\n\ngoal (1 subgoal):\n 1. finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "by simp"], ["proof (state)\nthis:\n  finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "from poly_roots_finite[OF this]"], ["proof (chain)\npicking this:\n  finite {x. poly p x = 0}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {x. poly p x = 0}\n\ngoal (1 subgoal):\n 1. finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "by fast"], ["proof (state)\nthis:\n  finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "with True"], ["proof (chain)\npicking this:\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n  finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}", "have \"{x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n        insert a {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n  finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    insert a {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "hence \"card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n           Suc (card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0})\""], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    Suc (card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0})", "using fin"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n  finite {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    Suc (card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0})", "by force"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  Suc (card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0})\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n    a = b \\<and> p = 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  Suc (card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0})\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "using True count_roots_between_correct"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  Suc (card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0})\n  a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or> a = b \\<and> p = 0\n  count_roots_between ?p ?a ?b =\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n        a = b \\<and> p = 0\n     then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if a \\<le> b \\<and> poly p a = 0 \\<and> p \\<noteq> 0 \\<or>\n      a = b \\<and> p = 0\n   then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_card_roots_less_less:\n  \"card {x. a < x \\<and> x < b \\<and> poly p x = 0} = \n      ( count_roots_between p a b -\n              (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "proof (cases \"poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "note False' = this"], ["proof (state)\nthis:\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "have [simp]: \"{x. a < x \\<and> x < b} = {a<..<b}\"\n                     \"{x. a < x \\<and> x \\<le> b} = {a<..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x < b} = {a<..<b} &&&\n    {x. a < x \\<and> x \\<le> b} = {a<..b}", "by auto"], ["proof (state)\nthis:\n  {x. a < x \\<and> x < b} = {a<..<b}\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "with True False"], ["proof (chain)\npicking this:\n  p = 0\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n  {x. a < x \\<and> x < b} = {a<..<b}\n  {x. a < x \\<and> x \\<le> b} = {a<..b}", "have \"card {x. a < x \\<and> x \\<le> b} = 0\" \"card {x. a < x \\<and> x < b} = 0\""], ["proof (prove)\nusing this:\n  p = 0\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n  {x. a < x \\<and> x < b} = {a<..<b}\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x \\<le> b} = 0 &&&\n    card {x. a < x \\<and> x < b} = 0", "by (auto simp add: card_eq_0_iff infinite_Ioo infinite_Ioc)"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a < x \\<and> x < b} = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "with True False'"], ["proof (chain)\npicking this:\n  p = 0\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a < x \\<and> x < b} = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  p = 0\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a < x \\<and> x < b} = 0\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "by (auto simp: count_roots_between_correct)"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b -\n  (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "with False'"], ["proof (chain)\npicking this:\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n  p \\<noteq> 0", "have \"{x. a < x \\<and> x < b \\<and> poly p x = 0} = \n                          {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  \\<not> (poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0)\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "using poly_card_roots_less_leq False"], ["proof (prove)\nusing this:\n  {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0} =\n  count_roots_between ?p ?a ?b\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b -\n  (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b -\n  (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "with poly_roots_finite"], ["proof (chain)\npicking this:\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}\n  poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0", "have fin: \"finite {x. a < x \\<and> x < b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}\n  poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite {x. a < x \\<and> x < b \\<and> poly p x = 0}", "by fast"], ["proof (state)\nthis:\n  finite {x. a < x \\<and> x < b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "from True"], ["proof (chain)\npicking this:\n  poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0", "have \"{x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n        insert b {x. a < x \\<and> x < b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    insert b {x. a < x \\<and> x < b \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  insert b {x. a < x \\<and> x < b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "hence \"Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n           card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  insert b {x. a < x \\<and> x < b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n    card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}", "using fin"], ["proof (prove)\nusing this:\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  insert b {x. a < x \\<and> x < b \\<and> poly p x = 0}\n  finite {x. a < x \\<and> x < b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n    card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}", "by force"], ["proof (state)\nthis:\n  Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n  card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "also"], ["proof (state)\nthis:\n  Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n  card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "note count_roots_between_correct[symmetric]"], ["proof (state)\nthis:\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0} =\n  count_roots_between ?p ?a ?b\n\ngoal (1 subgoal):\n 1. poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "finally"], ["proof (chain)\npicking this:\n  Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n  count_roots_between p a b", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n  count_roots_between p a b\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "using True"], ["proof (prove)\nusing this:\n  Suc (card {x. a < x \\<and> x < b \\<and> poly p x = 0}) =\n  count_roots_between p a b\n  poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b -\n    (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b -\n  (if poly p b = 0 \\<and> a < b \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_card_roots_leq_less:\n  \"card {x::real. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n      ( count_roots_between p a b +\n      (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n      (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "proof (cases \"p = 0 \\<or> a \\<ge> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<or> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  p = 0 \\<or> b \\<le> a\n\ngoal (2 subgoals):\n 1. p = 0 \\<or> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "note True' = this"], ["proof (state)\nthis:\n  p = 0 \\<or> b \\<le> a\n\ngoal (2 subgoals):\n 1. p = 0 \\<or> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "proof (cases \"a \\<ge> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> b \\<le> a\n\ngoal (2 subgoals):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "hence \"{x. a < x \\<and> x \\<le> b} = {a<..b}\"\n              \"{x. a \\<le> x \\<and> x < b} = {a..<b}\""], ["proof (prove)\nusing this:\n  \\<not> b \\<le> a\n\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x \\<le> b} = {a<..b} &&&\n    {x. a \\<le> x \\<and> x < b} = {a..<b}", "by auto"], ["proof (state)\nthis:\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n  {x. a \\<le> x \\<and> x < b} = {a..<b}\n\ngoal (2 subgoals):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "with True False"], ["proof (chain)\npicking this:\n  p = 0 \\<or> b \\<le> a\n  \\<not> b \\<le> a\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n  {x. a \\<le> x \\<and> x < b} = {a..<b}", "have \"card {x. a < x \\<and> x \\<le> b} = 0\" \"card {x. a \\<le> x \\<and> x < b} = 0\""], ["proof (prove)\nusing this:\n  p = 0 \\<or> b \\<le> a\n  \\<not> b \\<le> a\n  {x. a < x \\<and> x \\<le> b} = {a<..b}\n  {x. a \\<le> x \\<and> x < b} = {a..<b}\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x \\<le> b} = 0 &&&\n    card {x. a \\<le> x \\<and> x < b} = 0", "by (auto simp add: card_eq_0_iff infinite_Ico infinite_Ioc)"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x < b} = 0\n\ngoal (2 subgoals):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n 2. \\<not> b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "with False True'"], ["proof (chain)\npicking this:\n  \\<not> b \\<le> a\n  p = 0 \\<or> b \\<le> a\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x < b} = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b \\<le> a\n  p = 0 \\<or> b \\<le> a\n  card {x. a < x \\<and> x \\<le> b} = 0\n  card {x. a \\<le> x \\<and> x < b} = 0\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "by (simp add: count_roots_between_correct)"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "with True'"], ["proof (chain)\npicking this:\n  p = 0 \\<or> b \\<le> a\n  b \\<le> a", "have \"{x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} = \n                          {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  p = 0 \\<or> b \\<le> a\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "using poly_card_roots_less_leq True"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0} =\n  count_roots_between ?p ?a ?b\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> (p = 0 \\<or> b \\<le> a)\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "let ?A = \"{x. a \\<le> x \\<and> x < b \\<and> poly p x = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "let ?B = \"{x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "let ?C = \"{x. x = b \\<and> poly p x = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "let ?D = \"{x. x = a \\<and> poly p a = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "have CD_if: \"?C = (if poly p b = 0 then {b} else {})\"\n                \"?D = (if poly p a = 0 then {a} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x = b \\<and> poly p x = 0} = (if poly p b = 0 then {b} else {}) &&&\n    {x. x = a \\<and> poly p a = 0} = (if poly p a = 0 then {a} else {})", "by auto"], ["proof (state)\nthis:\n  {x. x = b \\<and> poly p x = 0} = (if poly p b = 0 then {b} else {})\n  {x. x = a \\<and> poly p a = 0} = (if poly p a = 0 then {a} else {})\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "from False poly_roots_finite"], ["proof (chain)\npicking this:\n  \\<not> (p = 0 \\<or> b \\<le> a)\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}", "have [simp]: \"finite ?A\" \"finite ?B\" \"finite ?C\" \"finite ?D\""], ["proof (prove)\nusing this:\n  \\<not> (p = 0 \\<or> b \\<le> a)\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}\n\ngoal (1 subgoal):\n 1. (finite {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} &&&\n     finite {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}) &&&\n    finite {x. x = b \\<and> poly p x = 0} &&&\n    finite {x. x = a \\<and> poly p a = 0}", "by (fast, fast, simp_all)"], ["proof (state)\nthis:\n  finite {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0}\n  finite {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0}\n  finite {x. x = b \\<and> poly p x = 0}\n  finite {x. x = a \\<and> poly p a = 0}\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "from False"], ["proof (chain)\npicking this:\n  \\<not> (p = 0 \\<or> b \\<le> a)", "have \"?A = (?B \\<union> ?D) - ?C\""], ["proof (prove)\nusing this:\n  \\<not> (p = 0 \\<or> b \\<le> a)\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} \\<union>\n    {x. x = a \\<and> poly p a = 0} -\n    {x. x = b \\<and> poly p x = 0}", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} \\<union>\n  {x. x = a \\<and> poly p a = 0} -\n  {x. x = b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "with False"], ["proof (chain)\npicking this:\n  \\<not> (p = 0 \\<or> b \\<le> a)\n  {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} \\<union>\n  {x. x = a \\<and> poly p a = 0} -\n  {x. x = b \\<and> poly p x = 0}", "have \"card ?A = card ?B + (if poly p a = 0 then 1 else 0) -\n                       (if poly p b = 0 then 1 else 0)\""], ["proof (prove)\nusing this:\n  \\<not> (p = 0 \\<or> b \\<le> a)\n  {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} \\<union>\n  {x. x = a \\<and> poly p a = 0} -\n  {x. x = b \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} +\n    (if poly p a = 0 then 1 else 0) -\n    (if poly p b = 0 then 1 else 0)", "by (auto simp: CD_if)"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} +\n  (if poly p a = 0 then 1 else 0) -\n  (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "also"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  card {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} +\n  (if poly p a = 0 then 1 else 0) -\n  (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "note count_roots_between_correct[symmetric]"], ["proof (state)\nthis:\n  card {x. ?a < x \\<and> x \\<le> ?b \\<and> poly ?p x = 0} =\n  count_roots_between ?p ?a ?b\n\ngoal (1 subgoal):\n 1. \\<not> (p = 0 \\<or> b \\<le> a) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "finally"], ["proof (chain)\npicking this:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b + (if poly p a = 0 then 1 else 0) -\n  (if poly p b = 0 then 1 else 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b + (if poly p a = 0 then 1 else 0) -\n  (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "using False"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b + (if poly p a = 0 then 1 else 0) -\n  (if poly p b = 0 then 1 else 0)\n  \\<not> (p = 0 \\<or> b \\<le> a)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n    count_roots_between p a b +\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n    (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> x < b \\<and> poly p x = 0} =\n  count_roots_between p a b +\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p a = 0 then 1 else 0) -\n  (if p \\<noteq> 0 \\<and> a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_card_roots:\n  \"card {x::real. poly p x = 0} = count_roots p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. poly p x = 0} = count_roots p", "using count_roots_correct"], ["proof (prove)\nusing this:\n  count_roots ?p = card {x. poly ?p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. poly p x = 0} = count_roots p", "by simp"], ["", "lemma poly_no_roots:\n  \"(\\<forall>x. poly p x \\<noteq> 0) \\<longleftrightarrow> ( p \\<noteq> 0 \\<and> count_roots p = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and> count_roots p = 0)", "by (auto simp: count_roots_correct dest: poly_roots_finite)"], ["", "lemma poly_pos:\n  \"(\\<forall>x. poly p x > 0) \\<longleftrightarrow> ( \n        p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots p = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. 0 < poly p x) =\n    (p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots p = 0)", "by (simp only: Let_def poly_pos poly_no_roots, blast)"], ["", "lemma poly_card_roots_greater:\n  \"card {x::real. x > a \\<and> poly p x = 0} = count_roots_above p a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> poly p x = 0} = count_roots_above p a", "using count_roots_above_correct"], ["proof (prove)\nusing this:\n  count_roots_above ?p ?a = card {x. ?a < x \\<and> poly ?p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> poly p x = 0} = count_roots_above p a", "by simp"], ["", "lemma poly_card_roots_leq:\n  \"card {x::real. x \\<le> a \\<and> poly p x = 0} = count_roots_below p a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. x \\<le> a \\<and> poly p x = 0} = count_roots_below p a", "using count_roots_below_correct"], ["proof (prove)\nusing this:\n  count_roots_below ?p ?a = card {x. x \\<le> ?a \\<and> poly ?p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. x \\<le> a \\<and> poly p x = 0} = count_roots_below p a", "by simp"], ["", "lemma poly_card_roots_geq:\n  \"card {x::real. x \\<ge> a \\<and> poly p x = 0} = (\n      count_roots_above p a + (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "proof (cases \"poly p a = 0 \\<and> p \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> (poly p a = 0 \\<and> p \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "hence \"card {x. x \\<ge> a \\<and> poly p x = 0} = card {x. x > a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  \\<not> (poly p a = 0 \\<and> p \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    card {x. a < x \\<and> poly p x = 0}", "proof (cases rule: disjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "assume \"p = 0\""], ["proof (state)\nthis:\n  p = 0\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "have \"\\<not>finite {a<..<a+1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {a<..<a + 1}", "by (metis infinite_Ioo less_add_one)"], ["proof (state)\nthis:\n  infinite {a<..<a + 1}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "moreover"], ["proof (state)\nthis:\n  infinite {a<..<a + 1}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "have \"{a<..<a+1} \\<subseteq> {x. x \\<ge> a \\<and> poly p x = 0}\"\n                    \"{a<..<a+1} \\<subseteq> {x. x > a \\<and> poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a<..<a + 1} \\<subseteq> {x. a \\<le> x \\<and> poly p x = 0} &&&\n    {a<..<a + 1} \\<subseteq> {x. a < x \\<and> poly p x = 0}", "using \\<open>p = 0\\<close>"], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. {a<..<a + 1} \\<subseteq> {x. a \\<le> x \\<and> poly p x = 0} &&&\n    {a<..<a + 1} \\<subseteq> {x. a < x \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {a<..<a + 1} \\<subseteq> {x. a \\<le> x \\<and> poly p x = 0}\n  {a<..<a + 1} \\<subseteq> {x. a < x \\<and> poly p x = 0}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "ultimately"], ["proof (chain)\npicking this:\n  infinite {a<..<a + 1}\n  {a<..<a + 1} \\<subseteq> {x. a \\<le> x \\<and> poly p x = 0}\n  {a<..<a + 1} \\<subseteq> {x. a < x \\<and> poly p x = 0}", "have \"\\<not>finite {x. x \\<ge> a \\<and> poly p x = 0}\" \n                      \"\\<not>finite {x. x > a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  infinite {a<..<a + 1}\n  {a<..<a + 1} \\<subseteq> {x. a \\<le> x \\<and> poly p x = 0}\n  {a<..<a + 1} \\<subseteq> {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. infinite {x. a \\<le> x \\<and> poly p x = 0} &&&\n    infinite {x. a < x \\<and> poly p x = 0}", "by (auto dest!: finite_subset[of \"{a<..<a+1}\"] simp: infinite_Ioo)"], ["proof (state)\nthis:\n  infinite {x. a \\<le> x \\<and> poly p x = 0}\n  infinite {x. a < x \\<and> poly p x = 0}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite {x. a \\<le> x \\<and> poly p x = 0}\n  infinite {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    card {x. a < x \\<and> poly p x = 0}", "by simp"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  card {x. a < x \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "assume \"poly p a \\<noteq> 0\""], ["proof (state)\nthis:\n  poly p a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "hence \"{x. x \\<ge> a \\<and> poly p x = 0} = {x. x > a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  poly p a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> poly p x = 0} = {x. a < x \\<and> poly p x = 0}", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> poly p x = 0} = {x. a < x \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. a \\<le> x \\<and> poly p x = 0} =\n                      card {x. a < x \\<and> poly p x = 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. a \\<le> x \\<and> poly p x = 0} = {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    card {x. a < x \\<and> poly p x = 0}", "by simp"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  card {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> poly p a \\<noteq> 0", "qed auto"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  card {x. a < x \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  card {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "using False"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  card {x. a < x \\<and> poly p x = 0}\n  \\<not> (poly p a = 0 \\<and> p \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "by (auto intro: poly_card_roots_greater)"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  count_roots_above p a +\n  (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "hence \"finite {x. x > a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite {x. a < x \\<and> poly p x = 0}", "using poly_roots_finite"], ["proof (prove)\nusing this:\n  poly p a = 0 \\<and> p \\<noteq> 0\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}\n\ngoal (1 subgoal):\n 1. finite {x. a < x \\<and> poly p x = 0}", "by force"], ["proof (state)\nthis:\n  finite {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "moreover"], ["proof (state)\nthis:\n  finite {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "have \"{x. x \\<ge> a \\<and> poly p x = 0} = \n                       insert a {x. x > a \\<and> poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> poly p x = 0} =\n    insert a {x. a < x \\<and> poly p x = 0}", "using True"], ["proof (prove)\nusing this:\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. a \\<le> x \\<and> poly p x = 0} =\n    insert a {x. a < x \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {x. a \\<le> x \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "ultimately"], ["proof (chain)\npicking this:\n  finite {x. a < x \\<and> poly p x = 0}\n  {x. a \\<le> x \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> poly p x = 0}", "have \"card {x. x \\<ge> a \\<and> poly p x = 0} = \n                         Suc (card {x. x > a \\<and> poly p x = 0})\""], ["proof (prove)\nusing this:\n  finite {x. a < x \\<and> poly p x = 0}\n  {x. a \\<le> x \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    Suc (card {x. a < x \\<and> poly p x = 0})", "using card_insert_disjoint"], ["proof (prove)\nusing this:\n  finite {x. a < x \\<and> poly p x = 0}\n  {x. a \\<le> x \\<and> poly p x = 0} =\n  insert a {x. a < x \\<and> poly p x = 0}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> card (insert ?x ?A) = Suc (card ?A)\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    Suc (card {x. a < x \\<and> poly p x = 0})", "by auto"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  Suc (card {x. a < x \\<and> poly p x = 0})\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  Suc (card {x. a < x \\<and> poly p x = 0})\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "using True"], ["proof (prove)\nusing this:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  Suc (card {x. a < x \\<and> poly p x = 0})\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card {x. a \\<le> x \\<and> poly p x = 0} =\n    count_roots_above p a +\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "by (auto intro: poly_card_roots_greater)"], ["proof (state)\nthis:\n  card {x. a \\<le> x \\<and> poly p x = 0} =\n  count_roots_above p a +\n  (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_card_roots_less:\n  \"card {x::real. x < a \\<and> poly p x = 0} =\n       (count_roots_below p a - (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "proof (cases \"poly p a = 0 \\<and> p \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> (poly p a = 0 \\<and> p \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "hence \"card {x. x < a \\<and> poly p x = 0} = card {x. x \\<le> a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  \\<not> (poly p a = 0 \\<and> p \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    card {x. x \\<le> a \\<and> poly p x = 0}", "proof (cases rule: disjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "assume \"p = 0\""], ["proof (state)\nthis:\n  p = 0\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "have \"\\<not>finite {a - 1<..<a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {a - 1<..<a}", "by (metis infinite_Ioo diff_add_cancel less_add_one)"], ["proof (state)\nthis:\n  infinite {a - 1<..<a}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "moreover"], ["proof (state)\nthis:\n  infinite {a - 1<..<a}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "have \"{a - 1<..<a} \\<subseteq> {x. x \\<le> a \\<and> poly p x = 0}\"\n                    \"{a - 1<..<a} \\<subseteq> {x. x < a \\<and> poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a - 1<..<a} \\<subseteq> {x. x \\<le> a \\<and> poly p x = 0} &&&\n    {a - 1<..<a} \\<subseteq> {x. x < a \\<and> poly p x = 0}", "using \\<open>p = 0\\<close>"], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. {a - 1<..<a} \\<subseteq> {x. x \\<le> a \\<and> poly p x = 0} &&&\n    {a - 1<..<a} \\<subseteq> {x. x < a \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {a - 1<..<a} \\<subseteq> {x. x \\<le> a \\<and> poly p x = 0}\n  {a - 1<..<a} \\<subseteq> {x. x < a \\<and> poly p x = 0}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "ultimately"], ["proof (chain)\npicking this:\n  infinite {a - 1<..<a}\n  {a - 1<..<a} \\<subseteq> {x. x \\<le> a \\<and> poly p x = 0}\n  {a - 1<..<a} \\<subseteq> {x. x < a \\<and> poly p x = 0}", "have \"\\<not>finite {x. x \\<le> a \\<and> poly p x = 0}\" \n                     \"\\<not>finite {x. x < a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  infinite {a - 1<..<a}\n  {a - 1<..<a} \\<subseteq> {x. x \\<le> a \\<and> poly p x = 0}\n  {a - 1<..<a} \\<subseteq> {x. x < a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. infinite {x. x \\<le> a \\<and> poly p x = 0} &&&\n    infinite {x. x < a \\<and> poly p x = 0}", "by (auto dest: finite_subset[of \"{a - 1<..<a}\"] simp: infinite_Ioo)"], ["proof (state)\nthis:\n  infinite {x. x \\<le> a \\<and> poly p x = 0}\n  infinite {x. x < a \\<and> poly p x = 0}\n\ngoal (3 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    ?P1 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?P1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}\n 3. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite {x. x \\<le> a \\<and> poly p x = 0}\n  infinite {x. x < a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    card {x. x \\<le> a \\<and> poly p x = 0}", "by simp"], ["proof (state)\nthis:\n  card {x. x < a \\<and> poly p x = 0} =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "assume \"poly p a \\<noteq> 0\""], ["proof (state)\nthis:\n  poly p a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "hence \"{x. x < a \\<and> poly p x = 0} = {x. x \\<le> a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  poly p a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. x < a \\<and> poly p x = 0} = {x. x \\<le> a \\<and> poly p x = 0}", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. x < a \\<and> poly p x = 0} = {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> ?Q1\n 2. \\<lbrakk>\\<not> (poly p a = 0 \\<and> p \\<noteq> 0); ?Q1\\<rbrakk>\n    \\<Longrightarrow> card {x. x < a \\<and> poly p x = 0} =\n                      card {x. x \\<le> a \\<and> poly p x = 0}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. x < a \\<and> poly p x = 0} = {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    card {x. x \\<le> a \\<and> poly p x = 0}", "by simp"], ["proof (state)\nthis:\n  card {x. x < a \\<and> poly p x = 0} =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    p = 0 \\<or> poly p a \\<noteq> 0", "qed auto"], ["proof (state)\nthis:\n  card {x. x < a \\<and> poly p x = 0} =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (2 subgoals):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n 2. \\<not> (poly p a = 0 \\<and> p \\<noteq> 0) \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {x. x < a \\<and> poly p x = 0} =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "using False"], ["proof (prove)\nusing this:\n  card {x. x < a \\<and> poly p x = 0} =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n  \\<not> (poly p a = 0 \\<and> p \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "by (auto intro: poly_card_roots_leq)"], ["proof (state)\nthis:\n  card {x. x < a \\<and> poly p x = 0} =\n  count_roots_below p a -\n  (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "hence \"finite {x. x < a \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite {x. x < a \\<and> poly p x = 0}", "using poly_roots_finite"], ["proof (prove)\nusing this:\n  poly p a = 0 \\<and> p \\<noteq> 0\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}\n\ngoal (1 subgoal):\n 1. finite {x. x < a \\<and> poly p x = 0}", "by force"], ["proof (state)\nthis:\n  finite {x. x < a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "moreover"], ["proof (state)\nthis:\n  finite {x. x < a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "have \"{x. x \\<le> a \\<and> poly p x = 0} = \n                       insert a {x. x < a \\<and> poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x \\<le> a \\<and> poly p x = 0} =\n    insert a {x. x < a \\<and> poly p x = 0}", "using True"], ["proof (prove)\nusing this:\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. x \\<le> a \\<and> poly p x = 0} =\n    insert a {x. x < a \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {x. x \\<le> a \\<and> poly p x = 0} =\n  insert a {x. x < a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "ultimately"], ["proof (chain)\npicking this:\n  finite {x. x < a \\<and> poly p x = 0}\n  {x. x \\<le> a \\<and> poly p x = 0} =\n  insert a {x. x < a \\<and> poly p x = 0}", "have \"Suc (card {x. x < a \\<and> poly p x = 0}) =\n                     (card {x. x \\<le> a \\<and> poly p x = 0})\""], ["proof (prove)\nusing this:\n  finite {x. x < a \\<and> poly p x = 0}\n  {x. x \\<le> a \\<and> poly p x = 0} =\n  insert a {x. x < a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. Suc (card {x. x < a \\<and> poly p x = 0}) =\n    card {x. x \\<le> a \\<and> poly p x = 0}", "using card_insert_disjoint"], ["proof (prove)\nusing this:\n  finite {x. x < a \\<and> poly p x = 0}\n  {x. x \\<le> a \\<and> poly p x = 0} =\n  insert a {x. x < a \\<and> poly p x = 0}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> card (insert ?x ?A) = Suc (card ?A)\n\ngoal (1 subgoal):\n 1. Suc (card {x. x < a \\<and> poly p x = 0}) =\n    card {x. x \\<le> a \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  Suc (card {x. x < a \\<and> poly p x = 0}) =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "also"], ["proof (state)\nthis:\n  Suc (card {x. x < a \\<and> poly p x = 0}) =\n  card {x. x \\<le> a \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "note count_roots_below_correct[symmetric]"], ["proof (state)\nthis:\n  card {x. x \\<le> ?a \\<and> poly ?p x = 0} = count_roots_below ?p ?a\n\ngoal (1 subgoal):\n 1. poly p a = 0 \\<and> p \\<noteq> 0 \\<Longrightarrow>\n    card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "finally"], ["proof (chain)\npicking this:\n  Suc (card {x. x < a \\<and> poly p x = 0}) = count_roots_below p a", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc (card {x. x < a \\<and> poly p x = 0}) = count_roots_below p a\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "using True"], ["proof (prove)\nusing this:\n  Suc (card {x. x < a \\<and> poly p x = 0}) = count_roots_below p a\n  poly p a = 0 \\<and> p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} =\n    count_roots_below p a -\n    (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  card {x. x < a \\<and> poly p x = 0} =\n  count_roots_below p a -\n  (if poly p a = 0 \\<and> p \\<noteq> 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_no_roots_less_leq:\n  \"(\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> count_roots_between p a b = 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0) =\n    (b \\<le> a \\<or> p \\<noteq> 0 \\<and> count_roots_between p a b = 0)", "by (auto simp: count_roots_between_correct card_eq_0_iff not_le \n           dest: poly_roots_finite)"], ["", "lemma poly_pos_between_less_leq:\n  \"(\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> poly p b > 0 \\<and> count_roots_between p a b = 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x) =\n    (b \\<le> a \\<or>\n     p \\<noteq> 0 \\<and> 0 < poly p b \\<and> count_roots_between p a b = 0)", "by (simp only: poly_pos_between_less_leq Let_def \n                 poly_no_roots_less_leq, blast)"], ["", "lemma poly_no_roots_leq_leq:\n  \"(\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n   ((a > b \\<or> (p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_between p a b = 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0) =\n    (b < a \\<or>\n     p \\<noteq> 0 \\<and>\n     poly p a \\<noteq> 0 \\<and> count_roots_between p a b = 0)", "apply (intro iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       poly p x \\<noteq> 0 \\<Longrightarrow>\n    b < a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_between p a b = 0\n 2. b < a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = 0 \\<Longrightarrow>\n    \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0", "apply (force simp add: count_roots_between_correct card_eq_0_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. b < a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = 0 \\<Longrightarrow>\n    \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0", "apply (elim conjE disjE, simp, intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>p \\<noteq> 0; poly p a \\<noteq> 0;\n        count_roots_between p a b = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n                         poly p x \\<noteq> 0", "apply (rename_tac x, case_tac \"x = a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>p \\<noteq> 0; poly p a \\<noteq> 0;\n        count_roots_between p a b = 0; x = a\\<rbrakk>\n       \\<Longrightarrow> a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n                         poly p x \\<noteq> 0\n 2. \\<And>x.\n       \\<lbrakk>p \\<noteq> 0; poly p a \\<noteq> 0;\n        count_roots_between p a b = 0; x \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n                         poly p x \\<noteq> 0", "apply (auto simp add: count_roots_between_correct card_eq_0_iff\n            dest: poly_roots_finite)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma poly_pos_between_leq_leq:\n  \"(\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> \n   ((a > b \\<or> (p \\<noteq> 0 \\<and> poly p a > 0 \\<and> \n                count_roots_between p a b = 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x) =\n    (b < a \\<or>\n     p \\<noteq> 0 \\<and> 0 < poly p a \\<and> count_roots_between p a b = 0)", "by (simp only: poly_pos_between_leq_leq Let_def poly_no_roots_leq_leq, force)"], ["", "lemma poly_no_roots_less_less:\n  \"(\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow> \n   ((a \\<ge> b \\<or> p \\<noteq> 0 \\<and> count_roots_between p a b = \n       (if poly p b = 0 then 1 else 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0) =\n    (b \\<le> a \\<or>\n     p \\<noteq> 0 \\<and>\n     count_roots_between p a b = (if poly p b = 0 then 1 else 0))", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow>\n       poly p x \\<noteq> 0 \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n 2. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "case A: 1"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow>\n       poly p x \\<noteq> 0 \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n 2. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "proof (cases \"a \\<ge> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n 2. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "case True"], ["proof (state)\nthis:\n  b \\<le> a\n\ngoal (2 subgoals):\n 1. b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n 2. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  b \\<le> a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "by simp"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "case False"], ["proof (state)\nthis:\n  \\<not> b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  \\<not> b \\<le> a", "have [simp]: \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  \\<not> b \\<le> a\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "using dense[of a b]"], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  \\<not> b \\<le> a\n  a < b \\<Longrightarrow> \\<exists>z>a. z < b\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "have B: \"{x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n                {x. a < x \\<and> x < b \\<and> poly p x = 0} \\<union>\n                (if poly p b = 0 then {b} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    {x. a < x \\<and> x < b \\<and> poly p x = 0} \\<union>\n    (if poly p b = 0 then {b} else {})", "using A False"], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  \\<not> b \\<le> a\n\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n    {x. a < x \\<and> x < b \\<and> poly p x = 0} \\<union>\n    (if poly p b = 0 then {b} else {})", "by auto"], ["proof (state)\nthis:\n  {x. a < x \\<and> x \\<le> b \\<and> poly p x = 0} =\n  {x. a < x \\<and> x < b \\<and> poly p x = 0} \\<union>\n  (if poly p b = 0 then {b} else {})\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "have \"count_roots_between p a b =\n                 card {x. a < x \\<and> x < b \\<and> poly p x = 0} +\n                (if poly p b = 0 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count_roots_between p a b =\n    card {x. a < x \\<and> x < b \\<and> poly p x = 0} +\n    (if poly p b = 0 then 1 else 0)", "by (subst count_roots_between_correct, subst B, subst card_Un_disjoint, \n             rule finite_subset[OF _ poly_roots_finite], blast, simp_all)"], ["proof (state)\nthis:\n  count_roots_between p a b =\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} +\n  (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "also"], ["proof (state)\nthis:\n  count_roots_between p a b =\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} +\n  (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "have \"{x. a < x \\<and> x < b \\<and> poly p x = 0} = {}\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. a < x \\<and> x < b \\<and> poly p x = 0} = {}", "by simp"], ["proof (state)\nthis:\n  {x. a < x \\<and> x < b \\<and> poly p x = 0} = {}\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> a \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "finally"], ["proof (chain)\npicking this:\n  count_roots_between p a b = card {} + (if poly p b = 0 then 1 else 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  count_roots_between p a b = card {} + (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "case prems: 2"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "hence \"card {x. a < x \\<and> x < b \\<and> poly p x = 0} = 0\""], ["proof (prove)\nusing this:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. card {x. a < x \\<and> x < b \\<and> poly p x = 0} = 0", "by (subst poly_card_roots_less_less, auto simp: count_roots_between_def)"], ["proof (state)\nthis:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} = 0\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "thus ?case"], ["proof (prove)\nusing this:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "using prems"], ["proof (prove)\nusing this:\n  card {x. a < x \\<and> x < b \\<and> poly p x = 0} = 0\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by (cases \"p = 0\", simp, subst (asm) card_eq_0_iff, \n            auto dest: poly_roots_finite)"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_between_less_less:\n  \"(\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> poly p ((a+b)/2) > 0 \\<and> \n       count_roots_between p a b = (if poly p b = 0 then 1 else 0))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x) =\n    (b \\<le> a \\<or>\n     p \\<noteq> 0 \\<and>\n     0 < poly p ((a + b) / 2) \\<and>\n     count_roots_between p a b = (if poly p b = 0 then 1 else 0))", "by (simp only: poly_pos_between_less_less Let_def \n                 poly_no_roots_less_less, blast)"], ["", "lemma poly_no_roots_leq_less:\n  \"(\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n   ((a \\<ge> b \\<or> p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_between p a b = \n       (if a < b \\<and> poly p b = 0 then 1 else 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0) =\n    (b \\<le> a \\<or>\n     p \\<noteq> 0 \\<and>\n     poly p a \\<noteq> 0 \\<and>\n     count_roots_between p a b =\n     (if a < b \\<and> poly p b = 0 then 1 else 0))", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       poly p x \\<noteq> 0 \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n 2. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "case prems: 1"], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       poly p x \\<noteq> 0 \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n 2. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "hence \"\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       poly p x \\<noteq> 0 \\<Longrightarrow>\n    b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n 2. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)", "using prems"], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)", "by (subst (asm) poly_no_roots_less_less, auto)"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  poly p a \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "case prems: 2"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  poly p a \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "hence \"(b \\<le> a \\<or> p \\<noteq> 0 \\<and> count_roots_between p a b = \n               (if poly p b = 0 then 1 else 0))\""], ["proof (prove)\nusing this:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  poly p a \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    count_roots_between p a b = (if poly p b = 0 then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or>\n    p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and>\n    count_roots_between p a b =\n    (if a < b \\<and> poly p b = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "thus ?case"], ["proof (prove)\nusing this:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "using prems"], ["proof (prove)\nusing this:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  poly p a \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "unfolding Let_def"], ["proof (prove)\nusing this:\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if poly p b = 0 then 1 else 0)\n  b \\<le> a \\<or>\n  p \\<noteq> 0 \\<and>\n  poly p a \\<noteq> 0 \\<and>\n  count_roots_between p a b = (if a < b \\<and> poly p b = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by (subst (asm) poly_no_roots_less_less[symmetric, unfolded Let_def], \n        auto split: if_split_asm simp: less_eq_real_def)"], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_between_leq_less:\n  \"(\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> \n   ((a \\<ge> b \\<or> (p \\<noteq> 0 \\<and> poly p a > 0 \\<and> count_roots_between p a b = \n        (if a < b \\<and> poly p b = 0 then 1 else 0))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x) =\n    (b \\<le> a \\<or>\n     p \\<noteq> 0 \\<and>\n     0 < poly p a \\<and>\n     count_roots_between p a b =\n     (if a < b \\<and> poly p b = 0 then 1 else 0))", "by (simp only: poly_pos_between_leq_less Let_def \n                poly_no_roots_leq_less, force)"], ["", "lemma poly_no_roots_greater:\n  \"(\\<forall>x. x > a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n       ((p \\<noteq> 0 \\<and> count_roots_above p a = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x>a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and> count_roots_above p a = 0)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>x>a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and> count_roots_above p a = 0)", "have \"\\<forall>x. \\<not> a < x \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> a < x \\<Longrightarrow> False", "by (metis gt_ex)"], ["proof (state)\nthis:\n  \\<forall>x. \\<not> a < x \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (\\<forall>x>a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and> count_roots_above p a = 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x. \\<not> a < x \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (\\<forall>x>a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and> count_roots_above p a = 0)", "by (auto simp: count_roots_above_correct card_eq_0_iff\n                        intro: poly_roots_finite )"], ["proof (state)\nthis:\n  (\\<forall>x>a. poly p x \\<noteq> 0) =\n  (p \\<noteq> 0 \\<and> count_roots_above p a = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_greater:\n  \"(\\<forall>x. x > a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> (\n       p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots_above p a = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x>a. 0 < poly p x) =\n    (p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots_above p a = 0)", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x>a. 0 < poly p x) =\n    (p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> count_roots_above p a = 0)", "by (subst poly_pos_greater, subst poly_no_roots_greater, force)"], ["", "lemma poly_no_roots_leq:\n  \"(\\<forall>x. x \\<le> a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow> \n       ( (p \\<noteq> 0 \\<and> count_roots_below p a = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<le>a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and> count_roots_below p a = 0)", "by (auto simp: Let_def count_roots_below_correct card_eq_0_iff\n             intro: poly_roots_finite)"], ["", "lemma poly_pos_leq:\n  \"(\\<forall>x. x \\<le> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow> \n   ( p \\<noteq> 0 \\<and> poly_neg_inf p = 1 \\<and> count_roots_below p a = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<le>a. 0 < poly p x) =\n    (p \\<noteq> 0 \\<and>\n     poly_neg_inf p = 1 \\<and> count_roots_below p a = 0)", "by (simp only: poly_pos_leq Let_def poly_no_roots_leq, blast)"], ["", "lemma poly_no_roots_geq:\n  \"(\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n       ( (p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and>\n     poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x\\<ge>a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n 2. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "case prems: 1"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<ge>a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n 2. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "hence \"\\<forall>x>a. poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x>a. poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<ge>a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n 2. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0", "using prems"], ["proof (prove)\nusing this:\n  \\<forall>x>a. poly p x \\<noteq> 0\n  \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0", "by (subst (asm) poly_no_roots_greater, auto)"], ["proof (state)\nthis:\n  p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "case prems: 2"], ["proof (state)\nthis:\n  p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "hence \"(p \\<noteq> 0 \\<and> count_roots_above p a = 0)\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and> count_roots_above p a = 0", "by simp"], ["proof (state)\nthis:\n  p \\<noteq> 0 \\<and> count_roots_above p a = 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0 \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "thus ?case"], ["proof (prove)\nusing this:\n  p \\<noteq> 0 \\<and> count_roots_above p a = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "using prems"], ["proof (prove)\nusing this:\n  p \\<noteq> 0 \\<and> count_roots_above p a = 0\n  p \\<noteq> 0 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "by (subst (asm) poly_no_roots_greater[symmetric, unfolded Let_def], \n          auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_geq:\n  \"(\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   (p \\<noteq> 0 \\<and> poly_inf p = 1 \\<and> poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<ge>a. 0 < poly p x) =\n    (p \\<noteq> 0 \\<and>\n     poly_inf p = 1 \\<and>\n     poly p a \\<noteq> 0 \\<and> count_roots_above p a = 0)", "by (simp only: poly_pos_geq Let_def poly_no_roots_geq, blast)"], ["", "lemma poly_no_roots_less:\n  \"(\\<forall>x. x < a \\<longrightarrow> poly p x \\<noteq> 0) \\<longleftrightarrow>\n       ((p \\<noteq> 0 \\<and> count_roots_below p a = (if poly p a = 0 then 1 else 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x<a. poly p x \\<noteq> 0) =\n    (p \\<noteq> 0 \\<and>\n     count_roots_below p a = (if poly p a = 0 then 1 else 0))", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x<a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "case prems: 1"], ["proof (state)\nthis:\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "hence \"{x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})\""], ["proof (prove)\nusing this:\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  {x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "have \"\\<forall>x. \\<not> x < a \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. \\<not> x < a \\<Longrightarrow> False", "by (metis lt_ex)"], ["proof (state)\nthis:\n  \\<forall>x. \\<not> x < a \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. poly p x \\<noteq> 0 \\<Longrightarrow>\n    p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)\n 2. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "ultimately"], ["proof (chain)\npicking this:\n  {x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})\n  \\<forall>x. \\<not> x < a \\<Longrightarrow> False", "show ?case"], ["proof (prove)\nusing this:\n  {x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})\n  \\<forall>x. \\<not> x < a \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)", "using prems"], ["proof (prove)\nusing this:\n  {x. x \\<le> a \\<and> poly p x = 0} = (if poly p a = 0 then {a} else {})\n  \\<forall>x. \\<not> x < a \\<Longrightarrow> False\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a = (if poly p a = 0 then 1 else 0)", "by (auto simp: count_roots_below_correct)"], ["proof (state)\nthis:\n  p \\<noteq> 0 \\<and>\n  count_roots_below p a = (if poly p a = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "case prems: 2"], ["proof (state)\nthis:\n  p \\<noteq> 0 \\<and>\n  count_roots_below p a = (if poly p a = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "have A: \"{x. x \\<le> a \\<and> poly p x = 0} = {x. x < a \\<and> poly p x = 0} \\<union> \n            (if poly p a = 0 then {a} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x \\<le> a \\<and> poly p x = 0} =\n    {x. x < a \\<and> poly p x = 0} \\<union>\n    (if poly p a = 0 then {a} else {})", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  {x. x \\<le> a \\<and> poly p x = 0} =\n  {x. x < a \\<and> poly p x = 0} \\<union> (if poly p a = 0 then {a} else {})\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "have \"count_roots_below p a = card {x. x < a \\<and> poly p x = 0} +\n            (if poly p a = 0 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count_roots_below p a =\n    card {x. x < a \\<and> poly p x = 0} + (if poly p a = 0 then 1 else 0)", "using prems"], ["proof (prove)\nusing this:\n  p \\<noteq> 0 \\<and>\n  count_roots_below p a = (if poly p a = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. count_roots_below p a =\n    card {x. x < a \\<and> poly p x = 0} + (if poly p a = 0 then 1 else 0)", "by (subst count_roots_below_correct, subst A, subst card_Un_disjoint,\n          auto intro: poly_roots_finite)"], ["proof (state)\nthis:\n  count_roots_below p a =\n  card {x. x < a \\<and> poly p x = 0} + (if poly p a = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "with prems"], ["proof (chain)\npicking this:\n  p \\<noteq> 0 \\<and>\n  count_roots_below p a = (if poly p a = 0 then 1 else 0)\n  count_roots_below p a =\n  card {x. x < a \\<and> poly p x = 0} + (if poly p a = 0 then 1 else 0)", "have \"card {x. x < a \\<and> poly p x = 0} = 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0 \\<and>\n  count_roots_below p a = (if poly p a = 0 then 1 else 0)\n  count_roots_below p a =\n  card {x. x < a \\<and> poly p x = 0} + (if poly p a = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. card {x. x < a \\<and> poly p x = 0} = 0", "by simp"], ["proof (state)\nthis:\n  card {x. x < a \\<and> poly p x = 0} = 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<and>\n    count_roots_below p a =\n    (if poly p a = 0 then 1 else 0) \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0", "thus ?case"], ["proof (prove)\nusing this:\n  card {x. x < a \\<and> poly p x = 0} = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x<a. poly p x \\<noteq> 0", "using prems"], ["proof (prove)\nusing this:\n  card {x. x < a \\<and> poly p x = 0} = 0\n  p \\<noteq> 0 \\<and>\n  count_roots_below p a = (if poly p a = 0 then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x<a. poly p x \\<noteq> 0", "by (subst (asm) card_eq_0_iff, auto intro: poly_roots_finite)"], ["proof (state)\nthis:\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_less:\n  \"(\\<forall>x. x < a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n   (p \\<noteq> 0 \\<and> poly_neg_inf p = 1 \\<and> count_roots_below p a = \n       (if poly p a = 0 then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x<a. 0 < poly p x) =\n    (p \\<noteq> 0 \\<and>\n     poly_neg_inf p = 1 \\<and>\n     count_roots_below p a = (if poly p a = 0 then 1 else 0))", "by (simp only: poly_pos_less Let_def poly_no_roots_less, blast)"], ["", "lemmas sturm_card_substs = poly_card_roots poly_card_roots_less_leq \n    poly_card_roots_leq_less poly_card_roots_less_less poly_card_roots_leq_leq\n    poly_card_roots_less poly_card_roots_leq poly_card_roots_greater\n    poly_card_roots_geq"], ["", "lemmas sturm_prop_substs = poly_no_roots poly_no_roots_less_leq \n    poly_no_roots_leq_leq poly_no_roots_less_less poly_no_roots_leq_less\n    poly_no_roots_leq poly_no_roots_less poly_no_roots_geq \n    poly_no_roots_greater\n    poly_pos poly_pos_greater poly_pos_geq poly_pos_less poly_pos_leq\n    poly_pos_between_leq_less poly_pos_between_less_leq\n    poly_pos_between_leq_leq poly_pos_between_less_less"], ["", "subsection \\<open>Reification\\<close>"], ["", "text \\<open>\n  This subsection defines a number of equations to automatically convert \n  statements about roots of polynomials into a canonical form so that they \n  can be proven using the above substitutions.\n\\<close>"], ["", "definition \"PR_TAG x \\<equiv> x\""], ["", "lemma sturm_id_PR_prio0:\n  \"{x::real. P x} = {x::real. (PR_TAG P) x}\"\n  \"(\\<forall>x::real. f x < g x) = (\\<forall>x::real. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. P x) = (\\<forall>x::real. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. P x} = {x. PR_TAG P x} &&&\n    (\\<forall>x. f x < g x) =\n    (\\<forall>x. PR_TAG (\\<lambda>x. f x < g x) x) &&&\n    (\\<forall>x. P x) =\n    (\\<forall>x. \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x)", "by (simp_all add: PR_TAG_def)"], ["", "lemma sturm_id_PR_prio1:\n  \"{x::real. x < a \\<and> P x} = {x::real. x < a \\<and> (PR_TAG P) x}\"\n  \"{x::real. x \\<le> a \\<and> P x} = {x::real. x \\<le> a \\<and> (PR_TAG P) x}\"\n  \"{x::real. x \\<ge> b \\<and> P x} = {x::real. x \\<ge> b \\<and> (PR_TAG P) x}\"\n  \"{x::real. x > b \\<and> P x} = {x::real. x > b \\<and> (PR_TAG P) x}\"\n  \"(\\<forall>x::real < a. f x < g x) = (\\<forall>x::real < a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real \\<le> a. f x < g x) = (\\<forall>x::real \\<le> a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real > a. f x < g x) = (\\<forall>x::real > a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real \\<ge> a. f x < g x) = (\\<forall>x::real \\<ge> a. PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real < a. P x) = (\\<forall>x::real < a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real > a. P x) = (\\<forall>x::real > a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real \\<le> a. P x) = (\\<forall>x::real \\<le> a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real \\<ge> a. P x) = (\\<forall>x::real \\<ge> a. \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (({x. x < a \\<and> P x} = {x. x < a \\<and> PR_TAG P x} &&&\n      {x. x \\<le> a \\<and> P x} = {x. x \\<le> a \\<and> PR_TAG P x} &&&\n      {x. b \\<le> x \\<and> P x} = {x. b \\<le> x \\<and> PR_TAG P x}) &&&\n     {x. b < x \\<and> P x} = {x. b < x \\<and> PR_TAG P x} &&&\n     (\\<forall>x<a. f x < g x) =\n     (\\<forall>x<a. PR_TAG (\\<lambda>x. f x < g x) x) &&&\n     (\\<forall>x\\<le>a. f x < g x) =\n     (\\<forall>x\\<le>a. PR_TAG (\\<lambda>x. f x < g x) x)) &&&\n    ((\\<forall>x>a. f x < g x) =\n     (\\<forall>x>a. PR_TAG (\\<lambda>x. f x < g x) x) &&&\n     (\\<forall>x\\<ge>a. f x < g x) =\n     (\\<forall>x\\<ge>a. PR_TAG (\\<lambda>x. f x < g x) x) &&&\n     (\\<forall>x<a. P x) =\n     (\\<forall>x<a. \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x)) &&&\n    (\\<forall>x>a. P x) =\n    (\\<forall>x>a. \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x) &&&\n    (\\<forall>x\\<le>a. P x) =\n    (\\<forall>x\\<le>a. \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x) &&&\n    (\\<forall>x\\<ge>a. P x) =\n    (\\<forall>x\\<ge>a. \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x)", "by (simp_all add: PR_TAG_def)"], ["", "lemma sturm_id_PR_prio2:\n  \"{x::real. x > a \\<and> x \\<le> b \\<and> P x} = \n       {x::real. x > a \\<and> x \\<le> b \\<and> PR_TAG P x}\"\n  \"{x::real. x \\<ge> a \\<and> x \\<le> b \\<and> P x} = \n       {x::real. x \\<ge> a \\<and> x \\<le> b \\<and> PR_TAG P x}\"\n  \"{x::real. x \\<ge> a \\<and> x < b \\<and> P x} = \n       {x::real. x \\<ge> a \\<and> x < b \\<and> PR_TAG P x}\"\n  \"{x::real. x > a \\<and> x < b \\<and> P x} = \n       {x::real. x > a \\<and> x < b \\<and> PR_TAG P x}\"\n  \"(\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> f x < g x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> PR_TAG (\\<lambda>x. f x < g x) x)\"\n  \"(\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\"\n  \"(\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> P x) = \n       (\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> \\<not>(PR_TAG (\\<lambda>x. \\<not>P x)) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (({x. a < x \\<and> x \\<le> b \\<and> P x} =\n      {x. a < x \\<and> x \\<le> b \\<and> PR_TAG P x} &&&\n      {x. a \\<le> x \\<and> x \\<le> b \\<and> P x} =\n      {x. a \\<le> x \\<and> x \\<le> b \\<and> PR_TAG P x} &&&\n      {x. a \\<le> x \\<and> x < b \\<and> P x} =\n      {x. a \\<le> x \\<and> x < b \\<and> PR_TAG P x}) &&&\n     {x. a < x \\<and> x < b \\<and> P x} =\n     {x. a < x \\<and> x < b \\<and> PR_TAG P x} &&&\n     (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> f x < g x) =\n     (\\<forall>x.\n         a < x \\<and> x \\<le> b \\<longrightarrow>\n         PR_TAG (\\<lambda>x. f x < g x) x) &&&\n     (\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> f x < g x) =\n     (\\<forall>x.\n         a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n         PR_TAG (\\<lambda>x. f x < g x) x)) &&&\n    ((\\<forall>x. a < x \\<and> x < b \\<longrightarrow> f x < g x) =\n     (\\<forall>x.\n         a < x \\<and> x < b \\<longrightarrow>\n         PR_TAG (\\<lambda>x. f x < g x) x) &&&\n     (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> f x < g x) =\n     (\\<forall>x.\n         a \\<le> x \\<and> x < b \\<longrightarrow>\n         PR_TAG (\\<lambda>x. f x < g x) x) &&&\n     (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> P x) =\n     (\\<forall>x.\n         a < x \\<and> x \\<le> b \\<longrightarrow>\n         \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x)) &&&\n    (\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> P x) =\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x) &&&\n    (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> P x) =\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x) &&&\n    (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> P x) =\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        \\<not> PR_TAG (\\<lambda>x. \\<not> P x) x)", "by (simp_all add: PR_TAG_def)"], ["", "lemma PR_TAG_intro_prio0:\n  fixes P :: \"real \\<Rightarrow> bool\" and f :: \"real \\<Rightarrow> real\"\n  shows\n  \"PR_TAG P = P' \\<Longrightarrow> PR_TAG (\\<lambda>x. \\<not>(\\<not>P x)) = P'\"\n  \"\\<lbrakk>PR_TAG P = (\\<lambda>x. poly p x = 0); PR_TAG Q = (\\<lambda>x. poly q x = 0)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. P x \\<and> Q x) = (\\<lambda>x. poly (gcd p q) x = 0)\" and\n \" \\<lbrakk>PR_TAG P = (\\<lambda>x. poly p x = 0); PR_TAG Q = (\\<lambda>x. poly q x = 0)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. P x \\<or> Q x) = (\\<lambda>x. poly (p*q) x = 0)\" and\n\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x = g x) = (\\<lambda>x. poly (p-q) x = 0)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<noteq> g x) = (\\<lambda>x. poly (p-q) x \\<noteq> 0)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x < g x) = (\\<lambda>x. poly (q-p) x > 0)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<le> g x) = (\\<lambda>x. poly (q-p) x \\<ge> 0)\"\n\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. -f x) = (\\<lambda>x. poly (-p) x)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x + g x) = (\\<lambda>x. poly (p+q) x)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x - g x) = (\\<lambda>x. poly (p-q) x)\"\n  \"\\<lbrakk>PR_TAG f = (\\<lambda>x. poly p x); PR_TAG g = (\\<lambda>x. poly q x)\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * g x) = (\\<lambda>x. poly (p*q) x)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. (f x)^n) = (\\<lambda>x. poly (p^n) x)\"\n  \"PR_TAG (\\<lambda>x. poly p x :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. x::real) = (\\<lambda>x. poly [:0,1:] x)\"\n  \"PR_TAG (\\<lambda>x. a::real) = (\\<lambda>x. poly [:a:] x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((PR_TAG P = P' \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. \\<not> \\<not> P x) = P') &&&\n     (\\<lbrakk>PR_TAG P = (\\<lambda>x. poly p x = 0);\n       PR_TAG Q = (\\<lambda>x. poly q x = 0)\\<rbrakk>\n      \\<Longrightarrow> PR_TAG (\\<lambda>x. P x \\<and> Q x) =\n                        (\\<lambda>x. poly (gcd p q) x = 0))) &&&\n    (\\<lbrakk>PR_TAG P = (\\<lambda>x. poly p x = 0);\n      PR_TAG Q = (\\<lambda>x. poly q x = 0)\\<rbrakk>\n     \\<Longrightarrow> PR_TAG (\\<lambda>x. P x \\<or> Q x) =\n                       (\\<lambda>x. poly (p * q) x = 0)) &&&\n    (((\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x = g x) =\n                         (\\<lambda>x. poly (p - q) x = 0)) &&&\n      (\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<noteq> g x) =\n                         (\\<lambda>x. poly (p - q) x \\<noteq> 0)) &&&\n      (\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x < g x) =\n                         (\\<lambda>x. 0 < poly (q - p) x))) &&&\n     (\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n      \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<le> g x) =\n                        (\\<lambda>x. 0 \\<le> poly (q - p) x)) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. - f x) = poly (- p)) &&&\n     (\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n      \\<Longrightarrow> PR_TAG (\\<lambda>x. f x + g x) = poly (p + q))) &&&\n    ((\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n      \\<Longrightarrow> PR_TAG (\\<lambda>x. f x - g x) = poly (p - q)) &&&\n     (\\<lbrakk>PR_TAG f = poly p; PR_TAG g = poly q\\<rbrakk>\n      \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * g x) = poly (p * q)) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. f x ^ n) = poly (p ^ n))) &&&\n    PR_TAG (poly p) = poly p &&&\n    PR_TAG (\\<lambda>x. x) = poly [:0, 1:] &&&\n    PR_TAG (\\<lambda>x. a) = poly [:a:]", "by (simp_all add: PR_TAG_def poly_eq_0_iff_dvd field_simps)"], ["", "lemma PR_TAG_intro_prio1:\n  fixes f :: \"real \\<Rightarrow> real\"\n  shows\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x = 0) = (\\<lambda>x. poly p x = 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<noteq> 0) = (\\<lambda>x. poly p x \\<noteq> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. 0 = f x) = (\\<lambda>x. poly p x = 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. 0 \\<noteq> f x) = (\\<lambda>x. poly p x \\<noteq> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<ge> 0) = (\\<lambda>x. poly p x \\<ge> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x > 0) = (\\<lambda>x. poly p x > 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x \\<le> 0) = (\\<lambda>x. poly (-p) x \\<ge> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> PR_TAG (\\<lambda>x. f x < 0) = (\\<lambda>x. poly (-p) x > 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> \n       PR_TAG (\\<lambda>x. 0 \\<le> f x) = (\\<lambda>x. poly (-p) x \\<le> 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \\<Longrightarrow> \n       PR_TAG (\\<lambda>x. 0 < f x) = (\\<lambda>x. poly (-p) x < 0)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \n       \\<Longrightarrow> PR_TAG (\\<lambda>x. a * f x) = (\\<lambda>x. poly (smult a p) x)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * a) = (\\<lambda>x. poly (smult a p) x)\"\n  \"PR_TAG f = (\\<lambda>x. poly p x) \n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x / a) = (\\<lambda>x. poly (smult (inverse a) p) x)\"\n  \"PR_TAG (\\<lambda>x. x^n :: real) = (\\<lambda>x. poly (monom 1 n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((PR_TAG f = poly p \\<Longrightarrow>\n       PR_TAG (\\<lambda>x. f x = 0) = (\\<lambda>x. poly p x = 0)) &&&\n      (PR_TAG f = poly p \\<Longrightarrow>\n       PR_TAG (\\<lambda>x. f x \\<noteq> 0) =\n       (\\<lambda>x. poly p x \\<noteq> 0)) &&&\n      (PR_TAG f = poly p \\<Longrightarrow>\n       PR_TAG (\\<lambda>x. 0 = f x) = (\\<lambda>x. poly p x = 0))) &&&\n     ((PR_TAG f = poly p \\<Longrightarrow>\n       PR_TAG (\\<lambda>x. 0 \\<noteq> f x) =\n       (\\<lambda>x. poly p x \\<noteq> 0)) &&&\n      (PR_TAG f = poly p \\<Longrightarrow>\n       PR_TAG (\\<lambda>x. 0 \\<le> f x) =\n       (\\<lambda>x. 0 \\<le> poly p x))) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. 0 < f x) = (\\<lambda>x. 0 < poly p x)) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. f x \\<le> 0) =\n      (\\<lambda>x. 0 \\<le> poly (- p) x))) &&&\n    ((PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. f x < 0) = (\\<lambda>x. 0 < poly (- p) x)) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. 0 \\<le> f x) =\n      (\\<lambda>x. poly (- p) x \\<le> 0)) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. 0 < f x) = (\\<lambda>x. poly (- p) x < 0))) &&&\n    ((PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. a * f x) = poly (smult a p)) &&&\n     (PR_TAG f = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. f x * a) = poly (smult a p))) &&&\n    (PR_TAG f = poly p \\<Longrightarrow>\n     PR_TAG (\\<lambda>x. f x / a) = poly (smult (inverse a) p)) &&&\n    PR_TAG (\\<lambda>x. x ^ n) = poly (monom 1 n)", "by (simp_all add: PR_TAG_def field_simps poly_monom)"], ["", "lemma PR_TAG_intro_prio2:\n  \"PR_TAG (\\<lambda>x. 1 / b) = (\\<lambda>x. inverse b)\"\n  \"PR_TAG (\\<lambda>x. a / b) = (\\<lambda>x. a / b)\"\n  \"PR_TAG (\\<lambda>x. a / b * x^n :: real) = (\\<lambda>x. poly (monom (a/b) n) x)\"\n  \"PR_TAG (\\<lambda>x. x^n * a / b :: real) = (\\<lambda>x. poly (monom (a/b) n) x)\"\n  \"PR_TAG (\\<lambda>x. a * x^n :: real) = (\\<lambda>x. poly (monom a n) x)\"\n  \"PR_TAG (\\<lambda>x. x^n * a :: real) = (\\<lambda>x. poly (monom a n) x)\"\n  \"PR_TAG (\\<lambda>x. x^n / a :: real) = (\\<lambda>x. poly (monom (inverse a) n) x)\"\n(* TODO: can this be done more efficiently? I should think so. *)\n  \"PR_TAG (\\<lambda>x. f x^(Suc (Suc 0)) :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * f x :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. (f x)^Suc n :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. (f x)^n * f x :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. (f x)^Suc n :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. f x * (f x)^n :: real) = (\\<lambda>x. poly p x)\"\n  \"PR_TAG (\\<lambda>x. (f x)^(m+n) :: real) = (\\<lambda>x. poly p x)\n       \\<Longrightarrow> PR_TAG (\\<lambda>x. (f x)^m * (f x)^n :: real) = (\\<lambda>x. poly p x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((PR_TAG (\\<lambda>x. 1 / b) = (\\<lambda>x. inverse b) &&&\n      PR_TAG (\\<lambda>x. a / b) = (\\<lambda>x. a / b)) &&&\n     PR_TAG (\\<lambda>x. a / b * x ^ n) = poly (monom (a / b) n) &&&\n     PR_TAG (\\<lambda>x. x ^ n * a / b) = poly (monom (a / b) n) &&&\n     PR_TAG (\\<lambda>x. a * x ^ n) = poly (monom a n)) &&&\n    (PR_TAG (\\<lambda>x. x ^ n * a) = poly (monom a n) &&&\n     PR_TAG (\\<lambda>x. x ^ n / a) = poly (monom (inverse a) n) &&&\n     (PR_TAG (\\<lambda>x. f x ^ Suc (Suc 0)) = poly p \\<Longrightarrow>\n      PR_TAG (\\<lambda>x. f x * f x) = poly p)) &&&\n    (PR_TAG (\\<lambda>x. f x ^ Suc n) = poly p \\<Longrightarrow>\n     PR_TAG (\\<lambda>x. f x ^ n * f x) = poly p) &&&\n    (PR_TAG (\\<lambda>x. f x ^ Suc n) = poly p \\<Longrightarrow>\n     PR_TAG (\\<lambda>x. f x * f x ^ n) = poly p) &&&\n    (PR_TAG (\\<lambda>x. f x ^ (m + n)) = poly p \\<Longrightarrow>\n     PR_TAG (\\<lambda>x. f x ^ m * f x ^ n) = poly p)", "by (simp_all add: PR_TAG_def field_simps poly_monom power_add)"], ["", "lemma sturm_meta_spec: \"(\\<And>x::real. P x) \\<Longrightarrow> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. P x) \\<Longrightarrow> P x", "by simp"], ["", "lemma sturm_imp_conv: \n  \"(a < x \\<longrightarrow> x < b \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x < b \\<longrightarrow> c)\"\n  \"(a \\<le> x \\<longrightarrow> x < b \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x < b \\<longrightarrow> c)\"\n  \"(a < x \\<longrightarrow> x \\<le> b \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x \\<le> b \\<longrightarrow> c)\"\n  \"(a \\<le> x \\<longrightarrow> x \\<le> b \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x \\<le> b \\<longrightarrow> c)\"\n  \"(x < b \\<longrightarrow> a < x \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x < b \\<longrightarrow> c)\"\n  \"(x < b \\<longrightarrow> a \\<le> x \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x < b \\<longrightarrow> c)\"\n  \"(x \\<le> b \\<longrightarrow> a < x \\<longrightarrow> c) \\<longleftrightarrow> (a < x \\<and> x \\<le> b \\<longrightarrow> c)\"\n  \"(x \\<le> b \\<longrightarrow> a \\<le> x \\<longrightarrow> c) \\<longleftrightarrow> (a \\<le> x \\<and> x \\<le> b \\<longrightarrow> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((a < x \\<longrightarrow> x < b \\<longrightarrow> c) =\n      (a < x \\<and> x < b \\<longrightarrow> c) &&&\n      (a \\<le> x \\<longrightarrow> x < b \\<longrightarrow> c) =\n      (a \\<le> x \\<and> x < b \\<longrightarrow> c)) &&&\n     (a < x \\<longrightarrow> x \\<le> b \\<longrightarrow> c) =\n     (a < x \\<and> x \\<le> b \\<longrightarrow> c) &&&\n     (a \\<le> x \\<longrightarrow> x \\<le> b \\<longrightarrow> c) =\n     (a \\<le> x \\<and> x \\<le> b \\<longrightarrow> c)) &&&\n    ((x < b \\<longrightarrow> a < x \\<longrightarrow> c) =\n     (a < x \\<and> x < b \\<longrightarrow> c) &&&\n     (x < b \\<longrightarrow> a \\<le> x \\<longrightarrow> c) =\n     (a \\<le> x \\<and> x < b \\<longrightarrow> c)) &&&\n    (x \\<le> b \\<longrightarrow> a < x \\<longrightarrow> c) =\n    (a < x \\<and> x \\<le> b \\<longrightarrow> c) &&&\n    (x \\<le> b \\<longrightarrow> a \\<le> x \\<longrightarrow> c) =\n    (a \\<le> x \\<and> x \\<le> b \\<longrightarrow> c)", "by auto"], ["", "subsection \\<open>Setup for the ``sturm'' method\\<close>"], ["", "ML_file \\<open>sturm.ML\\<close>"], ["", "method_setup sturm = \\<open>\n  Scan.succeed (fn ctxt => SIMPLE_METHOD' (Sturm.sturm_tac ctxt true))\n\\<close>"], ["", "end"]]}