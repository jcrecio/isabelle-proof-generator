{"file_name": "/home/qj213/afp-2021-10-22/thys/Sturm_Sequences/Lib/Misc_Polynomial.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sturm_Sequences", "problem_names": ["lemma fun_eq_in_ivl:\n  assumes \"a \\<le> b\" \"\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> eventually (\\<lambda>\\<xi>. f \\<xi> = f x) (at x)\"\n  shows \"f a = f b\"", "lemma pderiv_div:\n  assumes [simp]: \"q dvd p\" \"q \\<noteq> 0\"\n  shows \"pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\"\n        \"q*q dvd (q * pderiv p - p * pderiv q)\"", "lemma coprime_imp_no_common_roots:\n  \"\\<not> (poly p x = 0 \\<and> poly q x = 0)\" if \"coprime p q\"\n     for x :: \"'a :: field\"", "lemma poly_div:\n  assumes \"poly q x \\<noteq> 0\" and \"(q::'a :: field poly) dvd p\"\n  shows \"poly (p div q) x = poly p x / poly q x\"", "lemma poly_div_gcd_squarefree_aux:\n  assumes \"pderiv (p::('a::{field_char_0,field_gcd}) poly) \\<noteq> 0\"\n  defines \"d \\<equiv> gcd p (pderiv p)\"\n  shows \"coprime (p div d) (pderiv (p div d))\" and\n        \"\\<And>x. poly (p div d) x = 0 \\<longleftrightarrow> poly p x = 0\"", "lemma normalize_field:\n  \"normalize (x :: 'a :: {field,normalization_semidom}) = (if x = 0 then 0 else 1)\"", "lemma normalize_field_eq_1 [simp]:\n  \"x \\<noteq> 0 \\<Longrightarrow> normalize (x :: 'a :: {field,normalization_semidom}) = 1\"", "lemma unit_factor_field [simp]:\n  \"unit_factor (x :: 'a :: {field,normalization_semidom}) = x\"", "lemma poly_div_gcd_squarefree:\n  assumes \"(p :: ('a::{field_char_0,field_gcd}) poly) \\<noteq> 0\"\n  defines \"d \\<equiv> gcd p (pderiv p)\"\n  shows \"coprime (p div d) (pderiv (p div d))\" (is ?A) and\n        \"\\<And>x. poly (p div d) x = 0 \\<longleftrightarrow> poly p x = 0\" (is \"\\<And>x. ?B x\")", "lemma poly_different_sign_imp_root:\n  assumes \"a < b\" and \"sgn (poly p a) \\<noteq> sgn (poly p (b::real))\"\n  shows \"\\<exists>x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0\"", "lemma poly_different_sign_imp_root':\n  assumes \"sgn (poly p a) \\<noteq> sgn (poly p (b::real))\"\n  shows \"\\<exists>x. poly p x = 0\"", "lemma no_roots_inbetween_imp_same_sign:\n  assumes \"a < b\" \"\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> (0::real)\"\n  shows \"sgn (poly p a) = sgn (poly p b)\"", "lemma poly_neighbourhood_without_roots:\n  assumes \"(p :: real poly) \\<noteq> 0\"\n  shows \"eventually (\\<lambda>x. poly p x \\<noteq> 0) (at x\\<^sub>0)\"", "lemma poly_neighbourhood_same_sign:\n  assumes \"poly p (x\\<^sub>0 :: real) \\<noteq> 0\"\n  shows \"eventually (\\<lambda>x. sgn (poly p x) = sgn (poly p x\\<^sub>0)) (at x\\<^sub>0)\"", "lemma poly_lhopital:\n  assumes \"poly p (x::real) = 0\" \"poly q x = 0\" \"q \\<noteq> 0\"\n  assumes \"(\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\\<rightarrow> y\"\n  shows \"(\\<lambda>x. poly p x / poly q x) \\<midarrow>x\\<rightarrow> y\"", "lemma poly_roots_bounds:\n  assumes \"p \\<noteq> 0\"\n  obtains l u\n  where \"l \\<le> (u :: real)\"\n    and \"poly p l \\<noteq> 0\"\n    and \"poly p u \\<noteq> 0\"\n    and \"{x. x > l \\<and> x \\<le> u \\<and> poly p x = 0 } = {x. poly p x = 0}\"\n    and \"\\<And>x. x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l)\"\n    and \"\\<And>x. x \\<ge> u \\<Longrightarrow> sgn (poly p x) = sgn (poly p u)\"", "lemma poly_inf_0_iff[simp]:\n    \"poly_inf p = 0 \\<longleftrightarrow> p = 0\" \"poly_neg_inf p = 0 \\<longleftrightarrow> p = 0\"", "lemma poly_inf_mult[simp]:\n  fixes p :: \"('a::real_normed_field) poly\"\n  shows \"poly_inf (p*q) = poly_inf p * poly_inf q\"\n        \"poly_neg_inf (p*q) = poly_neg_inf p * poly_neg_inf q\"", "lemma poly_neq_0_at_infinity:\n  assumes \"(p :: real poly) \\<noteq> 0\"\n  shows \"eventually (\\<lambda>x. poly p x \\<noteq> 0) at_infinity\"", "lemma poly_limit_aux:\n  fixes p :: \"real poly\"\n  defines \"n \\<equiv> degree p\"\n  shows \"((\\<lambda>x. poly p x / x ^ n) \\<longlongrightarrow> coeff p n) at_infinity\"", "lemma poly_at_top_at_top:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) > 0\"\n  shows \"LIM x at_top. poly p x :> at_top\"", "lemma poly_at_bot_at_top:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) < 0\"\n  shows \"LIM x at_top. poly p x :> at_bot\"", "lemma poly_lim_inf:\n  \"eventually (\\<lambda>x::real. sgn (poly p x) = poly_inf p) at_top\"", "lemma poly_at_top_or_bot_at_bot:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) > 0\"\n  shows \"LIM x at_bot. poly p x :> (if even (degree p) then at_top else at_bot)\"", "lemma poly_at_bot_or_top_at_bot:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) < 0\"\n  shows \"LIM x at_bot. poly p x :> (if even (degree p) then at_bot else at_top)\"", "lemma poly_lim_neg_inf:\n  \"eventually (\\<lambda>x::real. sgn (poly p x) = poly_neg_inf p) at_bot\"", "lemma polys_inf_sign_thresholds:\n  assumes \"finite (ps :: real poly set)\"\n  obtains l u\n  where \"l \\<le> u\"\n    and \"\\<And>p. \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk> \\<Longrightarrow>\n              {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\"\n    and \"\\<And>p x. \\<lbrakk>p \\<in> ps; x \\<ge> u\\<rbrakk> \\<Longrightarrow> sgn (poly p x) = poly_inf p\"\n    and \"\\<And>p x. \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk> \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\"", "lemma poly_pos:\n  \"(\\<forall>x::real. poly p x > 0) \\<longleftrightarrow> poly_inf p = 1 \\<and> (\\<forall>x. poly p x \\<noteq> 0)\"", "lemma poly_pos_greater:\n  \"(\\<forall>x::real. x > a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_inf p = 1 \\<and> (\\<forall>x. x > a \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_geq:\n  \"(\\<forall>x::real. x \\<ge> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_inf p = 1 \\<and> (\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_less:\n  \"(\\<forall>x::real. x < a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_neg_inf p = 1 \\<and> (\\<forall>x. x < a \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_leq:\n  \"(\\<forall>x::real. x \\<le> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_neg_inf p = 1 \\<and> (\\<forall>x. x \\<le> a \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_between_less_less:\n  \"(\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a \\<ge> b \\<or> poly p ((a+b)/2) > 0) \\<and> (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_between_less_leq:\n  \"(\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a \\<ge> b \\<or> poly p b > 0) \\<and> (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_between_leq_less:\n  \"(\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a \\<ge> b \\<or> poly p a > 0) \\<and> (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\"", "lemma poly_pos_between_leq_leq:\n  \"(\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a > b \\<or> poly p a > 0) \\<and> (\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\""], "translations": [["", "lemma fun_eq_in_ivl:\n  assumes \"a \\<le> b\" \"\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> eventually (\\<lambda>\\<xi>. f \\<xi> = f x) (at x)\"\n  shows \"f a = f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a = f b", "proof (rule connected_local_const)"], ["proof (state)\ngoal (4 subgoals):\n 1. connected ?A\n 2. a \\<in> ?A\n 3. b \\<in> ?A\n 4. \\<forall>a\\<in>?A. \\<forall>\\<^sub>F b in at a within ?A. f a = f b", "show \"connected {a..b}\" \"a \\<in> {a..b}\" \"b \\<in> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected {a..b} &&& a \\<in> {a..b} &&& b \\<in> {a..b}", "using \\<open>a \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. connected {a..b} &&& a \\<in> {a..b} &&& b \\<in> {a..b}", "by (auto intro: connected_Icc)"], ["proof (state)\nthis:\n  connected {a..b}\n  a \\<in> {a..b}\n  b \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>{a..b}.\n       \\<forall>\\<^sub>F b in at aa within {a..b}. f aa = f b", "show \"\\<forall>aa\\<in>{a..b}. eventually (\\<lambda>b. f aa = f b) (at aa within {a..b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>{a..b}.\n       \\<forall>\\<^sub>F b in at aa within {a..b}. f aa = f b", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> {a..b} \\<Longrightarrow>\n       \\<forall>\\<^sub>F b in at aa within {a..b}. f aa = f b", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> {a..b} \\<Longrightarrow>\n       \\<forall>\\<^sub>F b in at aa within {a..b}. f aa = f b", "assume \"x \\<in> {a..b}\""], ["proof (state)\nthis:\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> {a..b} \\<Longrightarrow>\n       \\<forall>\\<^sub>F b in at aa within {a..b}. f aa = f b", "with assms(2)[rule_format, of x]"], ["proof (chain)\npicking this:\n  a \\<le> x \\<and> x \\<le> b \\<Longrightarrow>\n  \\<forall>\\<^sub>F \\<xi> in at x. f \\<xi> = f x\n  x \\<in> {a..b}", "show \"eventually (\\<lambda>b. f x = f b) (at x within {a..b})\""], ["proof (prove)\nusing this:\n  a \\<le> x \\<and> x \\<le> b \\<Longrightarrow>\n  \\<forall>\\<^sub>F \\<xi> in at x. f \\<xi> = f x\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b in at x within {a..b}. f x = f b", "by (auto simp: eventually_at_filter elim: eventually_mono)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b in at x within {a..b}. f x = f b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>aa\\<in>{a..b}.\n     \\<forall>\\<^sub>F b in at aa within {a..b}. f aa = f b\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Polynomials\\<close>"], ["", "subsubsection \\<open>General simplification lemmas\\<close>"], ["", "lemma pderiv_div:\n  assumes [simp]: \"q dvd p\" \"q \\<noteq> 0\"\n  shows \"pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\"\n        \"q*q dvd (q * pderiv p - p * pderiv q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q) &&&\n    q * q dvd q * pderiv p - p * pderiv q", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\n 2. q * q dvd q * pderiv p - p * pderiv q", "from assms"], ["proof (chain)\npicking this:\n  q dvd p\n  q \\<noteq> 0", "obtain r where \"p = q * r\""], ["proof (prove)\nusing this:\n  q dvd p\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = q * r \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. p = q * k\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>r. p = q * r \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  p = q * r\n\ngoal (2 subgoals):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\n 2. q * q dvd q * pderiv p - p * pderiv q", "hence \"q * pderiv p - p * pderiv q = (q * q) * pderiv r\""], ["proof (prove)\nusing this:\n  p = q * r\n\ngoal (1 subgoal):\n 1. q * pderiv p - p * pderiv q = q * q * pderiv r", "by (simp add: algebra_simps pderiv_mult)"], ["proof (state)\nthis:\n  q * pderiv p - p * pderiv q = q * q * pderiv r\n\ngoal (2 subgoals):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\n 2. q * q dvd q * pderiv p - p * pderiv q", "thus \"q*q dvd (q * pderiv p - p * pderiv q)\""], ["proof (prove)\nusing this:\n  q * pderiv p - p * pderiv q = q * q * pderiv r\n\ngoal (1 subgoal):\n 1. q * q dvd q * pderiv p - p * pderiv q", "by simp"], ["proof (state)\nthis:\n  q * q dvd q * pderiv p - p * pderiv q\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "note 0 = pderiv_mult[of q \"p div q\"]"], ["proof (state)\nthis:\n  pderiv (q * (p div q)) = q * pderiv (p div q) + p div q * pderiv q\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "have 1: \"q * (p div q) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * (p div q) = p", "by (metis assms(1) assms(2) dvd_def nonzero_mult_div_cancel_left)"], ["proof (state)\nthis:\n  q * (p div q) = p\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "have f1: \"pderiv (p div q) * (q * q) div (q * q) = pderiv (p div q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv (p div q) * (q * q) div (q * q) = pderiv (p div q)", "by simp"], ["proof (state)\nthis:\n  pderiv (p div q) * (q * q) div (q * q) = pderiv (p div q)\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "have f2: \"pderiv p = q * pderiv (p div q) + p div q * pderiv q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv p = q * pderiv (p div q) + p div q * pderiv q", "by (metis 0 1)"], ["proof (state)\nthis:\n  pderiv p = q * pderiv (p div q) + p div q * pderiv q\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "have \"p * pderiv q = pderiv q * (q * (p div q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * pderiv q = pderiv q * (q * (p div q))", "by (metis 1 mult.commute)"], ["proof (state)\nthis:\n  p * pderiv q = pderiv q * (q * (p div q))\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "then"], ["proof (chain)\npicking this:\n  p * pderiv q = pderiv q * (q * (p div q))", "have \"p * pderiv q = q * (p div q * pderiv q)\""], ["proof (prove)\nusing this:\n  p * pderiv q = pderiv q * (q * (p div q))\n\ngoal (1 subgoal):\n 1. p * pderiv q = q * (p div q * pderiv q)", "by fastforce"], ["proof (state)\nthis:\n  p * pderiv q = q * (p div q * pderiv q)\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "then"], ["proof (chain)\npicking this:\n  p * pderiv q = q * (p div q * pderiv q)", "have \"q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))\""], ["proof (prove)\nusing this:\n  p * pderiv q = q * (p div q * pderiv q)\n\ngoal (1 subgoal):\n 1. q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))", "using f2"], ["proof (prove)\nusing this:\n  p * pderiv q = q * (p div q * pderiv q)\n  pderiv p = q * pderiv (p div q) + p div q * pderiv q\n\ngoal (1 subgoal):\n 1. q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))", "by (metis add_diff_cancel_right' distrib_left)"], ["proof (state)\nthis:\n  q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "then"], ["proof (chain)\npicking this:\n  q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))", "show \"pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\""], ["proof (prove)\nusing this:\n  q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "using f1"], ["proof (prove)\nusing this:\n  q * pderiv p - p * pderiv q = q * (q * pderiv (p div q))\n  pderiv (p div q) * (q * q) div (q * q) = pderiv (p div q)\n\ngoal (1 subgoal):\n 1. pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)", "by (metis mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  pderiv (p div q) = (q * pderiv p - p * pderiv q) div (q * q)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Divisibility of polynomials\\<close>"], ["", "text \\<open>\n  Two polynomials that are coprime have no common roots.\n\\<close>"], ["", "lemma coprime_imp_no_common_roots:\n  \"\\<not> (poly p x = 0 \\<and> poly q x = 0)\" if \"coprime p q\"\n     for x :: \"'a :: field\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (poly p x = (0::'a) \\<and> poly q x = (0::'a))", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>poly p x = (0::'a); poly q x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"poly p x = 0\" \"poly q x = 0\""], ["proof (state)\nthis:\n  poly p x = (0::'a)\n  poly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>poly p x = (0::'a); poly q x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  poly p x = (0::'a)\n  poly q x = (0::'a)", "have \"[:-x, 1:] dvd p\" \"[:-x, 1:] dvd q\""], ["proof (prove)\nusing this:\n  poly p x = (0::'a)\n  poly q x = (0::'a)\n\ngoal (1 subgoal):\n 1. [:- x, 1::'a:] dvd p &&& [:- x, 1::'a:] dvd q", "by (simp_all add: poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>poly p x = (0::'a); poly q x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "with that"], ["proof (chain)\npicking this:\n  coprime p q\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q", "have \"is_unit [:-x, 1:]\""], ["proof (prove)\nusing this:\n  coprime p q\n  [:- x, 1::'a:] dvd p\n  [:- x, 1::'a:] dvd q\n\ngoal (1 subgoal):\n 1. is_unit [:- x, 1::'a:]", "by (rule coprime_common_divisor)"], ["proof (state)\nthis:\n  is_unit [:- x, 1::'a:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>poly p x = (0::'a); poly q x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  is_unit [:- x, 1::'a:]", "show False"], ["proof (prove)\nusing this:\n  is_unit [:- x, 1::'a:]\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: is_unit_pCons_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_div:\n  assumes \"poly q x \\<noteq> 0\" and \"(q::'a :: field poly) dvd p\"\n  shows \"poly (p div q) x = poly p x / poly q x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "from assms"], ["proof (chain)\npicking this:\n  poly q x \\<noteq> (0::'a)\n  q dvd p", "have [simp]: \"q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly q x \\<noteq> (0::'a)\n  q dvd p\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "have \"poly q x * poly (p div q) x = poly (q * (p div q)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly q x * poly (p div q) x = poly (q * (p div q)) x", "by simp"], ["proof (state)\nthis:\n  poly q x * poly (p div q) x = poly (q * (p div q)) x\n\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "also"], ["proof (state)\nthis:\n  poly q x * poly (p div q) x = poly (q * (p div q)) x\n\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "have \"q * (p div q) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * (p div q) = p", "using assms"], ["proof (prove)\nusing this:\n  poly q x \\<noteq> (0::'a)\n  q dvd p\n\ngoal (1 subgoal):\n 1. q * (p div q) = p", "by (simp add: div_mult_swap)"], ["proof (state)\nthis:\n  q * (p div q) = p\n\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "finally"], ["proof (chain)\npicking this:\n  poly q x * poly (p div q) x = poly p x", "show \"poly (p div q) x = poly p x / poly q x\""], ["proof (prove)\nusing this:\n  poly q x * poly (p div q) x = poly p x\n\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "using assms"], ["proof (prove)\nusing this:\n  poly q x * poly (p div q) x = poly p x\n  poly q x \\<noteq> (0::'a)\n  q dvd p\n\ngoal (1 subgoal):\n 1. poly (p div q) x = poly p x / poly q x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  poly (p div q) x = poly p x / poly q x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: make this less ugly *)"], ["", "lemma poly_div_gcd_squarefree_aux:\n  assumes \"pderiv (p::('a::{field_char_0,field_gcd}) poly) \\<noteq> 0\"\n  defines \"d \\<equiv> gcd p (pderiv p)\"\n  shows \"coprime (p div d) (pderiv (p div d))\" and\n        \"\\<And>x. poly (p div d) x = 0 \\<longleftrightarrow> poly p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d)) &&&\n    (\\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "obtain r s where \"bezout_coefficients p (pderiv p) = (r, s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        bezout_coefficients p (pderiv p) = (r, s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: prod_eq_iff)"], ["proof (state)\nthis:\n  bezout_coefficients p (pderiv p) = (r, s)\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "then"], ["proof (chain)\npicking this:\n  bezout_coefficients p (pderiv p) = (r, s)", "have \"r * p + s * pderiv p = gcd p (pderiv p)\""], ["proof (prove)\nusing this:\n  bezout_coefficients p (pderiv p) = (r, s)\n\ngoal (1 subgoal):\n 1. r * p + s * pderiv p = gcd p (pderiv p)", "by (rule bezout_coefficients)"], ["proof (state)\nthis:\n  r * p + s * pderiv p = gcd p (pderiv p)\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "then"], ["proof (chain)\npicking this:\n  r * p + s * pderiv p = gcd p (pderiv p)", "have rs: \"d = r * p + s * pderiv p\""], ["proof (prove)\nusing this:\n  r * p + s * pderiv p = gcd p (pderiv p)\n\ngoal (1 subgoal):\n 1. d = r * p + s * pderiv p", "by (simp add: d_def)"], ["proof (state)\nthis:\n  d = r * p + s * pderiv p\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "define t where \"t = p div d\""], ["proof (state)\nthis:\n  t = p div d\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "define p' where [simp]: \"p' = pderiv p\""], ["proof (state)\nthis:\n  p' = pderiv p\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "define d' where [simp]: \"d' = pderiv d\""], ["proof (state)\nthis:\n  d' = pderiv d\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "define u where \"u = p' div d\""], ["proof (state)\nthis:\n  u = p' div d\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "have A: \"p = t * d\" and B: \"p' = u * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = t * d &&& p' = u * d", "by (simp_all add: t_def u_def d_def algebra_simps)"], ["proof (state)\nthis:\n  p = t * d\n  p' = u * d\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "from poly_squarefree_decomp[OF assms(1) A B[unfolded p'_def] rs]"], ["proof (chain)\npicking this:\n  rsquarefree t \\<and>\n  (\\<forall>a. (poly t a = (0::'a)) = (poly p a = (0::'a)))", "show \"\\<And>x. poly (p div d) x = 0 \\<longleftrightarrow> poly p x = 0\""], ["proof (prove)\nusing this:\n  rsquarefree t \\<and>\n  (\\<forall>a. (poly t a = (0::'a)) = (poly p a = (0::'a)))\n\ngoal (1 subgoal):\n 1. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "by (auto simp: t_def)"], ["proof (state)\nthis:\n  (poly (p div d) ?x = (0::'a)) = (poly p ?x = (0::'a))\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d))", "from rs"], ["proof (chain)\npicking this:\n  d = r * p + s * pderiv p", "have C: \"s*t*d' = d * (1 - r*t - s*pderiv t)\""], ["proof (prove)\nusing this:\n  d = r * p + s * pderiv p\n\ngoal (1 subgoal):\n 1. s * t * d' = d * (1 - r * t - s * pderiv t)", "by (simp add: A B algebra_simps pderiv_mult)"], ["proof (state)\nthis:\n  s * t * d' = d * (1 - r * t - s * pderiv t)\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d))", "from assms"], ["proof (chain)\npicking this:\n  pderiv p \\<noteq> 0\n  d \\<equiv> gcd p (pderiv p)", "have [simp]: \"p \\<noteq> 0\" \"d \\<noteq> 0\" \"t \\<noteq> 0\""], ["proof (prove)\nusing this:\n  pderiv p \\<noteq> 0\n  d \\<equiv> gcd p (pderiv p)\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 &&& d \\<noteq> 0 &&& t \\<noteq> 0", "by (force, force, subst (asm) A, force)"], ["proof (state)\nthis:\n  p \\<noteq> 0\n  d \\<noteq> 0\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d))", "have \"\\<And>x. \\<lbrakk>x dvd t; x dvd (pderiv t)\\<rbrakk> \\<Longrightarrow> x dvd 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "assume \"x dvd t\" \"x dvd (pderiv t)\""], ["proof (state)\nthis:\n  x dvd t\n  x dvd pderiv t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "then"], ["proof (chain)\npicking this:\n  x dvd t\n  x dvd pderiv t", "obtain v w where vw:\n        \"t = x*v\" \"pderiv t = x*w\""], ["proof (prove)\nusing this:\n  x dvd t\n  x dvd pderiv t\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        \\<lbrakk>t = x * v; pderiv t = x * w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. t = x * k\n  \\<exists>k. pderiv t = x * k\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        \\<lbrakk>t = x * v; pderiv t = x * w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = x * v\n  pderiv t = x * w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "define x' v' where [simp]: \"x' = pderiv x\" and [simp]: \"v' = pderiv v\""], ["proof (state)\nthis:\n  x' = pderiv x\n  v' = pderiv v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "from vw"], ["proof (chain)\npicking this:\n  t = x * v\n  pderiv t = x * w", "have \"x*v' + v*x' = x*w\""], ["proof (prove)\nusing this:\n  t = x * v\n  pderiv t = x * w\n\ngoal (1 subgoal):\n 1. x * v' + v * x' = x * w", "by (simp add: pderiv_mult)"], ["proof (state)\nthis:\n  x * v' + v * x' = x * w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "hence \"v*x' = x*(w - v')\""], ["proof (prove)\nusing this:\n  x * v' + v * x' = x * w\n\ngoal (1 subgoal):\n 1. v * x' = x * (w - v')", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  v * x' = x * (w - v')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "hence \"x dvd v*pderiv x\""], ["proof (prove)\nusing this:\n  v * x' = x * (w - v')\n\ngoal (1 subgoal):\n 1. x dvd v * pderiv x", "by simp"], ["proof (state)\nthis:\n  x dvd v * pderiv x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "then"], ["proof (chain)\npicking this:\n  x dvd v * pderiv x", "obtain y where y: \"v*x' = x*y\""], ["proof (prove)\nusing this:\n  x dvd v * pderiv x\n\ngoal (1 subgoal):\n 1. (\\<And>y. v * x' = x * y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. v * pderiv x = x * k\n\ngoal (1 subgoal):\n 1. (\\<And>y. v * x' = x * y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v * x' = x * y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "from \\<open>t \\<noteq> 0\\<close> and vw"], ["proof (chain)\npicking this:\n  t \\<noteq> 0\n  t = x * v\n  pderiv t = x * w", "have \"x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n  t = x * v\n  pderiv t = x * w\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "have x_pow_n_dvd_d: \"\\<And>n. x^n dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. x ^ n dvd d", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. x ^ n dvd d", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. x ^ n dvd d", "show \"x ^ n dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ^ n dvd d", "proof (induction n, simp, rename_tac n, case_tac n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>x ^ n dvd d; n = 0\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d\n 2. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>x ^ n dvd d; n = 0\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d\n 2. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "assume \"n = (0::nat)\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>x ^ n dvd d; n = 0\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d\n 2. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "from vw and C"], ["proof (chain)\npicking this:\n  t = x * v\n  pderiv t = x * w\n  s * t * d' = d * (1 - r * t - s * pderiv t)", "have \"d = x*(d*r*v + d*s*w + s*v*d')\""], ["proof (prove)\nusing this:\n  t = x * v\n  pderiv t = x * w\n  s * t * d' = d * (1 - r * t - s * pderiv t)\n\ngoal (1 subgoal):\n 1. d = x * (d * r * v + d * s * w + s * v * d')", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  d = x * (d * r * v + d * s * w + s * v * d')\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>x ^ n dvd d; n = 0\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d\n 2. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "with \\<open>n = 0\\<close>"], ["proof (chain)\npicking this:\n  n = 0\n  d = x * (d * r * v + d * s * w + s * v * d')", "show \"x^Suc n dvd d\""], ["proof (prove)\nusing this:\n  n = 0\n  d = x * (d * r * v + d * s * w + s * v * d')\n\ngoal (1 subgoal):\n 1. x ^ Suc n dvd d", "by (force intro: dvdI)"], ["proof (state)\nthis:\n  x ^ Suc n dvd d\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "fix n n'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "assume IH: \"x^n dvd d\" and \"n = Suc n'\""], ["proof (state)\nthis:\n  x ^ n dvd d\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "hence [simp]: \"Suc n' = n\" \"x * x^n' = x^n\""], ["proof (prove)\nusing this:\n  x ^ n dvd d\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. Suc n' = n &&& x * x ^ n' = x ^ n", "by simp_all"], ["proof (state)\nthis:\n  Suc n' = n\n  x * x ^ n' = x ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "define c :: \"'a poly\" where \"c = [:of_nat n:]\""], ["proof (state)\nthis:\n  c = [:of_nat n:]\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "from pderiv_power_Suc[of x n']"], ["proof (chain)\npicking this:\n  pderiv (x ^ Suc n') = smult (of_nat (Suc n')) (x ^ n') * pderiv x", "have [simp]: \"pderiv (x^n) = c*x^n' * x'\""], ["proof (prove)\nusing this:\n  pderiv (x ^ Suc n') = smult (of_nat (Suc n')) (x ^ n') * pderiv x\n\ngoal (1 subgoal):\n 1. pderiv (x ^ n) = c * x ^ n' * x'", "unfolding c_def"], ["proof (prove)\nusing this:\n  pderiv (x ^ Suc n') = smult (of_nat (Suc n')) (x ^ n') * pderiv x\n\ngoal (1 subgoal):\n 1. pderiv (x ^ n) = [:of_nat n:] * x ^ n' * x'", "by simp"], ["proof (state)\nthis:\n  pderiv (x ^ n) = c * x ^ n' * x'\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "from IH"], ["proof (chain)\npicking this:\n  x ^ n dvd d", "obtain z where d: \"d = x^n * z\""], ["proof (prove)\nusing this:\n  x ^ n dvd d\n\ngoal (1 subgoal):\n 1. (\\<And>z. d = x ^ n * z \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. d = x ^ n * k\n\ngoal (1 subgoal):\n 1. (\\<And>z. d = x ^ n * z \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  d = x ^ n * z\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "define z' where [simp]: \"z' = pderiv z\""], ["proof (state)\nthis:\n  z' = pderiv z\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "from d \\<open>d \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  d = x ^ n * z\n  d \\<noteq> 0", "have \"x^n \\<noteq> 0\" \"z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  d = x ^ n * z\n  d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x ^ n \\<noteq> 0 &&& z \\<noteq> 0", "by force+"], ["proof (state)\nthis:\n  x ^ n \\<noteq> 0\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "from C d"], ["proof (chain)\npicking this:\n  s * t * d' = d * (1 - r * t - s * pderiv t)\n  d = x ^ n * z", "have \"x^n*z = z*r*v*x^Suc n + z*s*c*x^n*(v*x') +\n                          s*v*z'*x^Suc n + s*z*(v*x')*x^n + s*z*v'*x^Suc n\""], ["proof (prove)\nusing this:\n  s * t * d' = d * (1 - r * t - s * pderiv t)\n  d = x ^ n * z\n\ngoal (1 subgoal):\n 1. x ^ n * z =\n    z * r * v * x ^ Suc n + z * s * c * x ^ n * (v * x') +\n    s * v * z' * x ^ Suc n +\n    s * z * (v * x') * x ^ n +\n    s * z * v' * x ^ Suc n", "by (simp add: algebra_simps vw pderiv_mult)"], ["proof (state)\nthis:\n  x ^ n * z =\n  z * r * v * x ^ Suc n + z * s * c * x ^ n * (v * x') +\n  s * v * z' * x ^ Suc n +\n  s * z * (v * x') * x ^ n +\n  s * z * v' * x ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "also"], ["proof (state)\nthis:\n  x ^ n * z =\n  z * r * v * x ^ Suc n + z * s * c * x ^ n * (v * x') +\n  s * v * z' * x ^ Suc n +\n  s * z * (v * x') * x ^ n +\n  s * z * v' * x ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "have \"... = x^n*x * (z*r*v + z*s*c*y + s*v*z' + s*z*y + s*z*v')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * r * v * x ^ Suc n + z * s * c * x ^ n * (v * x') +\n    s * v * z' * x ^ Suc n +\n    s * z * (v * x') * x ^ n +\n    s * z * v' * x ^ Suc n =\n    x ^ n * x *\n    (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')", "by (simp only: y, simp add: algebra_simps)"], ["proof (state)\nthis:\n  z * r * v * x ^ Suc n + z * s * c * x ^ n * (v * x') +\n  s * v * z' * x ^ Suc n +\n  s * z * (v * x') * x ^ n +\n  s * z * v' * x ^ Suc n =\n  x ^ n * x *\n  (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "finally"], ["proof (chain)\npicking this:\n  x ^ n * z =\n  x ^ n * x *\n  (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')", "have \"z = x*(z*r*v+z*s*c*y+s*v*z'+s*z*y+s*z*v')\""], ["proof (prove)\nusing this:\n  x ^ n * z =\n  x ^ n * x *\n  (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')\n\ngoal (1 subgoal):\n 1. z =\n    x * (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')", "using \\<open>x^n \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  x ^ n * z =\n  x ^ n * x *\n  (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')\n  x ^ n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z =\n    x * (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')", "by force"], ["proof (state)\nthis:\n  z = x * (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "hence \"x dvd z\""], ["proof (prove)\nusing this:\n  z = x * (z * r * v + z * s * c * y + s * v * z' + s * z * y + s * z * v')\n\ngoal (1 subgoal):\n 1. x dvd z", "by (metis dvd_triv_left)"], ["proof (state)\nthis:\n  x dvd z\n\ngoal (1 subgoal):\n 1. \\<And>n nat.\n       \\<lbrakk>x ^ n dvd d; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x ^ Suc n dvd d", "with d"], ["proof (chain)\npicking this:\n  d = x ^ n * z\n  x dvd z", "show \"x^Suc n dvd d\""], ["proof (prove)\nusing this:\n  d = x ^ n * z\n  x dvd z\n\ngoal (1 subgoal):\n 1. x ^ Suc n dvd d", "by simp"], ["proof (state)\nthis:\n  x ^ Suc n dvd d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ^ n dvd d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ^ ?n dvd d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "have \"degree x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree x = 0", "proof (cases \"degree x\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. degree x = Suc nat \\<Longrightarrow> degree x = 0", "case (Suc n)"], ["proof (state)\nthis:\n  degree x = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>nat. degree x = Suc nat \\<Longrightarrow> degree x = 0", "hence \"x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree x = Suc n\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>nat. degree x = Suc nat \\<Longrightarrow> degree x = 0", "with Suc"], ["proof (chain)\npicking this:\n  degree x = Suc n\n  x \\<noteq> 0", "have \"degree (x ^ (Suc (degree d))) > degree d\""], ["proof (prove)\nusing this:\n  degree x = Suc n\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree d < degree (x ^ Suc (degree d))", "by (subst degree_power_eq, simp_all)"], ["proof (state)\nthis:\n  degree d < degree (x ^ Suc (degree d))\n\ngoal (1 subgoal):\n 1. \\<And>nat. degree x = Suc nat \\<Longrightarrow> degree x = 0", "moreover"], ["proof (state)\nthis:\n  degree d < degree (x ^ Suc (degree d))\n\ngoal (1 subgoal):\n 1. \\<And>nat. degree x = Suc nat \\<Longrightarrow> degree x = 0", "from x_pow_n_dvd_d[of \"Suc (degree d)\"] and \\<open>d \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  x ^ Suc (degree d) dvd d\n  d \\<noteq> 0", "have \"degree (x^Suc (degree d)) \\<le> degree d\""], ["proof (prove)\nusing this:\n  x ^ Suc (degree d) dvd d\n  d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (x ^ Suc (degree d)) \\<le> degree d", "by (simp add: dvd_imp_degree_le)"], ["proof (state)\nthis:\n  degree (x ^ Suc (degree d)) \\<le> degree d\n\ngoal (1 subgoal):\n 1. \\<And>nat. degree x = Suc nat \\<Longrightarrow> degree x = 0", "ultimately"], ["proof (chain)\npicking this:\n  degree d < degree (x ^ Suc (degree d))\n  degree (x ^ Suc (degree d)) \\<le> degree d", "show ?thesis"], ["proof (prove)\nusing this:\n  degree d < degree (x ^ Suc (degree d))\n  degree (x ^ Suc (degree d)) \\<le> degree d\n\ngoal (1 subgoal):\n 1. degree x = 0", "by simp"], ["proof (state)\nthis:\n  degree x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree x = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "then"], ["proof (chain)\npicking this:\n  degree x = 0", "obtain c where [simp]: \"x = [:c:]\""], ["proof (prove)\nusing this:\n  degree x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c. x = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases x, simp split: if_split_asm)"], ["proof (state)\nthis:\n  x = [:c:]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "moreover"], ["proof (state)\nthis:\n  x = [:c:]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "from \\<open>x \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> 0", "have \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> (0::'a)", "by simp"], ["proof (state)\nthis:\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd t; x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit x", "ultimately"], ["proof (chain)\npicking this:\n  x = [:c:]\n  c \\<noteq> (0::'a)", "show \"x dvd 1\""], ["proof (prove)\nusing this:\n  x = [:c:]\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. is_unit x", "using dvdI[of 1 x \"[:inverse c:]\"]"], ["proof (prove)\nusing this:\n  x = [:c:]\n  c \\<noteq> (0::'a)\n  1 = x * [:inverse c:] \\<Longrightarrow> is_unit x\n\ngoal (1 subgoal):\n 1. is_unit x", "by simp"], ["proof (state)\nthis:\n  is_unit x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x dvd t; ?x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit ?x\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x dvd t; ?x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit ?x", "show \"coprime t (pderiv t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x dvd t; ?x dvd pderiv t\\<rbrakk> \\<Longrightarrow> is_unit ?x\n\ngoal (1 subgoal):\n 1. coprime t (pderiv t)", "by (rule coprimeI)"], ["proof (state)\nthis:\n  coprime t (pderiv t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma normalize_field:\n  \"normalize (x :: 'a :: {field,normalization_semidom}) = (if x = 0 then 0 else 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normalize x = (if x = (0::'a) then 0::'a else (1::'a))", "by (auto simp: is_unit_normalize dvd_field_iff)"], ["", "lemma normalize_field_eq_1 [simp]:\n  \"x \\<noteq> 0 \\<Longrightarrow> normalize (x :: 'a :: {field,normalization_semidom}) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> (0::'a) \\<Longrightarrow> normalize x = (1::'a)", "by (simp add: normalize_field)"], ["", "lemma unit_factor_field [simp]:\n  \"unit_factor (x :: 'a :: {field,normalization_semidom}) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unit_factor x = x", "by (cases \"x = 0\") (auto simp: is_unit_unit_factor dvd_field_iff)"], ["", "text \\<open>\n  Dividing a polynomial by its gcd with its derivative yields\n  a squarefree polynomial with the same roots.\n\\<close>"], ["", "lemma poly_div_gcd_squarefree:\n  assumes \"(p :: ('a::{field_char_0,field_gcd}) poly) \\<noteq> 0\"\n  defines \"d \\<equiv> gcd p (pderiv p)\"\n  shows \"coprime (p div d) (pderiv (p div d))\" (is ?A) and\n        \"\\<And>x. poly (p div d) x = 0 \\<longleftrightarrow> poly p x = 0\" (is \"\\<And>x. ?B x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d)) &&&\n    (\\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "have \"?A \\<and> (\\<forall>x. ?B x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "proof (cases \"pderiv p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))\n 2. pderiv p \\<noteq> 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "case False"], ["proof (state)\nthis:\n  pderiv p \\<noteq> 0\n\ngoal (2 subgoals):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))\n 2. pderiv p \\<noteq> 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "from poly_div_gcd_squarefree_aux[OF this]"], ["proof (chain)\npicking this:\n  coprime (p div gcd p (pderiv p)) (pderiv (p div gcd p (pderiv p)))\n  (poly (p div gcd p (pderiv p)) ?x = (0::'a)) = (poly p ?x = (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  coprime (p div gcd p (pderiv p)) (pderiv (p div gcd p (pderiv p)))\n  (poly (p div gcd p (pderiv p)) ?x = (0::'a)) = (poly p ?x = (0::'a))\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "unfolding d_def"], ["proof (prove)\nusing this:\n  coprime (p div gcd p (pderiv p)) (pderiv (p div gcd p (pderiv p)))\n  (poly (p div gcd p (pderiv p)) ?x = (0::'a)) = (poly p ?x = (0::'a))\n\ngoal (1 subgoal):\n 1. coprime (p div gcd p (pderiv p))\n     (pderiv (p div gcd p (pderiv p))) \\<and>\n    (\\<forall>x.\n        (poly (p div gcd p (pderiv p)) x = (0::'a)) = (poly p x = (0::'a)))", "by auto"], ["proof (state)\nthis:\n  coprime (p div d) (pderiv (p div d)) \\<and>\n  (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))\n\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "case True"], ["proof (state)\nthis:\n  pderiv p = 0\n\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "then"], ["proof (chain)\npicking this:\n  pderiv p = 0", "obtain c where [simp]: \"p = [:c:]\""], ["proof (prove)\nusing this:\n  pderiv p = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c. p = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using pderiv_iszero"], ["proof (prove)\nusing this:\n  pderiv p = 0\n  pderiv ?p = 0 \\<Longrightarrow> \\<exists>h. ?p = [:h:]\n\ngoal (1 subgoal):\n 1. (\\<And>c. p = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  p = [:c:]\n\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "from assms(1)"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> (0::'a)", "by simp"], ["proof (state)\nthis:\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "from True"], ["proof (chain)\npicking this:\n  pderiv p = 0", "have \"d = smult (inverse c) p\""], ["proof (prove)\nusing this:\n  pderiv p = 0\n\ngoal (1 subgoal):\n 1. d = smult (inverse c) p", "by (simp add: d_def normalize_poly_def map_poly_pCons field_simps)"], ["proof (state)\nthis:\n  d = smult (inverse c) p\n\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "with \\<open>p \\<noteq> 0\\<close> \\<open>c \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  c \\<noteq> (0::'a)\n  d = smult (inverse c) p", "have \"p div d = [:c:]\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  c \\<noteq> (0::'a)\n  d = smult (inverse c) p\n\ngoal (1 subgoal):\n 1. p div d = [:c:]", "by (simp add: pCons_one)"], ["proof (state)\nthis:\n  p div d = [:c:]\n\ngoal (1 subgoal):\n 1. pderiv p = 0 \\<Longrightarrow>\n    coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "with \\<open>c \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  c \\<noteq> (0::'a)\n  p div d = [:c:]", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<noteq> (0::'a)\n  p div d = [:c:]\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d)) \\<and>\n    (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "by (simp add: normalize_const_poly is_unit_triv)"], ["proof (state)\nthis:\n  coprime (p div d) (pderiv (p div d)) \\<and>\n  (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime (p div d) (pderiv (p div d)) \\<and>\n  (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))\n\ngoal (2 subgoals):\n 1. coprime (p div d) (pderiv (p div d))\n 2. \\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a))", "thus ?A and \"\\<And>x. ?B x\""], ["proof (prove)\nusing this:\n  coprime (p div d) (pderiv (p div d)) \\<and>\n  (\\<forall>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))\n\ngoal (1 subgoal):\n 1. coprime (p div d) (pderiv (p div d)) &&&\n    (\\<And>x. (poly (p div d) x = (0::'a)) = (poly p x = (0::'a)))", "by simp_all"], ["proof (state)\nthis:\n  coprime (p div d) (pderiv (p div d))\n  (poly (p div d) ?x = (0::'a)) = (poly p ?x = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Sign changes of a polynomial\\<close>"], ["", "text \\<open>\n  If a polynomial has different signs at two points, it has a root inbetween.\n\\<close>"], ["", "lemma poly_different_sign_imp_root:\n  assumes \"a < b\" and \"sgn (poly p a) \\<noteq> sgn (poly p (b::real))\"\n  shows \"\\<exists>x. a \\<le> x \\<and> x \\<le> b \\<and> poly p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "proof (cases \"poly p a = 0 \\<or> poly p b = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. poly p a = 0 \\<or> poly p b = 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> (poly p a = 0 \\<or> poly p b = 0) \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "case True"], ["proof (state)\nthis:\n  poly p a = 0 \\<or> poly p b = 0\n\ngoal (2 subgoals):\n 1. poly p a = 0 \\<or> poly p b = 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> (poly p a = 0 \\<or> poly p b = 0) \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  poly p a = 0 \\<or> poly p b = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "using assms(1)"], ["proof (prove)\nusing this:\n  poly p a = 0 \\<or> poly p b = 0\n  a < b\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "by (elim disjE, rule_tac exI[of _ a], simp,\n                        rule_tac exI[of _ b], simp)"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (poly p a = 0 \\<or> poly p b = 0) \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (poly p a = 0 \\<or> poly p b = 0) \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "case False"], ["proof (state)\nthis:\n  \\<not> (poly p a = 0 \\<or> poly p b = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (poly p a = 0 \\<or> poly p b = 0) \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "hence [simp]: \"poly p a \\<noteq> 0\" \"poly p b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> (poly p a = 0 \\<or> poly p b = 0)\n\ngoal (1 subgoal):\n 1. poly p a \\<noteq> 0 &&& poly p b \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly p a \\<noteq> 0\n  poly p b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (poly p a = 0 \\<or> poly p b = 0) \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "proof (cases \"poly p a < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "case True"], ["proof (state)\nthis:\n  poly p a < 0\n\ngoal (2 subgoals):\n 1. poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "hence \"sgn (poly p a) = -1\""], ["proof (prove)\nusing this:\n  poly p a < 0\n\ngoal (1 subgoal):\n 1. sgn (poly p a) = - 1", "by simp"], ["proof (state)\nthis:\n  sgn (poly p a) = - 1\n\ngoal (2 subgoals):\n 1. poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "with assms True"], ["proof (chain)\npicking this:\n  a < b\n  sgn (poly p a) \\<noteq> sgn (poly p b)\n  poly p a < 0\n  sgn (poly p a) = - 1", "have \"poly p b > 0\""], ["proof (prove)\nusing this:\n  a < b\n  sgn (poly p a) \\<noteq> sgn (poly p b)\n  poly p a < 0\n  sgn (poly p a) = - 1\n\ngoal (1 subgoal):\n 1. 0 < poly p b", "by (auto simp: sgn_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  0 < poly p b\n\ngoal (2 subgoals):\n 1. poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "from poly_IVT_pos[OF \\<open>a < b\\<close> True this]"], ["proof (chain)\npicking this:\n  \\<exists>x>a. x < b \\<and> poly p x = 0", "guess x"], ["proof (prove)\nusing this:\n  \\<exists>x>a. x < b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  a < x \\<and> x < b \\<and> poly p x = 0\n\ngoal (2 subgoals):\n 1. poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n 2. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  a < x \\<and> x < b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "by (intro exI[of _ x], simp)"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "case False"], ["proof (state)\nthis:\n  \\<not> poly p a < 0\n\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "hence \"poly p a > 0\""], ["proof (prove)\nusing this:\n  \\<not> poly p a < 0\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by (simp add: not_less less_eq_real_def)"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "hence \"sgn (poly p a) = 1\""], ["proof (prove)\nusing this:\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. sgn (poly p a) = 1", "by simp"], ["proof (state)\nthis:\n  sgn (poly p a) = 1\n\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "with assms False"], ["proof (chain)\npicking this:\n  a < b\n  sgn (poly p a) \\<noteq> sgn (poly p b)\n  \\<not> poly p a < 0\n  sgn (poly p a) = 1", "have \"poly p b < 0\""], ["proof (prove)\nusing this:\n  a < b\n  sgn (poly p a) \\<noteq> sgn (poly p b)\n  \\<not> poly p a < 0\n  sgn (poly p a) = 1\n\ngoal (1 subgoal):\n 1. poly p b < 0", "by (auto simp: sgn_real_def not_less\n                           less_eq_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  poly p b < 0\n\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "from poly_IVT_neg[OF \\<open>a < b\\<close> \\<open>poly p a > 0\\<close> this]"], ["proof (chain)\npicking this:\n  \\<exists>x>a. x < b \\<and> poly p x = 0", "guess x"], ["proof (prove)\nusing this:\n  \\<exists>x>a. x < b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  a < x \\<and> x < b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<not> poly p a < 0 \\<Longrightarrow>\n    \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  a < x \\<and> x < b \\<and> poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0", "by (intro exI[of _ x], simp)"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>a. x \\<le> b \\<and> poly p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_different_sign_imp_root':\n  assumes \"sgn (poly p a) \\<noteq> sgn (poly p (b::real))\"\n  shows \"\\<exists>x. poly p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "using assms"], ["proof (prove)\nusing this:\n  sgn (poly p a) \\<noteq> sgn (poly p b)\n\ngoal (1 subgoal):\n 1. \\<exists>x. poly p x = 0", "by (cases \"a < b\", auto dest!: poly_different_sign_imp_root\n                                    simp: less_eq_real_def not_less)"], ["", "lemma no_roots_inbetween_imp_same_sign:\n  assumes \"a < b\" \"\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> (0::real)\"\n  shows \"sgn (poly p a) = sgn (poly p b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (poly p a) = sgn (poly p b)", "using poly_different_sign_imp_root assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a < ?b; sgn (poly ?p ?a) \\<noteq> sgn (poly ?p ?b)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<ge>?a. x \\<le> ?b \\<and> poly ?p x = 0\n  a < b\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn (poly p a) = sgn (poly p b)", "by auto"], ["", "subsubsection \\<open>Limits of polynomials\\<close>"], ["", "lemma poly_neighbourhood_without_roots:\n  assumes \"(p :: real poly) \\<noteq> 0\"\n  shows \"eventually (\\<lambda>x. poly p x \\<noteq> 0) (at x\\<^sub>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "fix \\<epsilon> :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "assume \"\\<epsilon> > 0\""], ["proof (state)\nthis:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "have fin: \"finite {x. \\<bar>x-x\\<^sub>0\\<bar> < \\<epsilon> \\<and> x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}", "using poly_roots_finite[OF assms]"], ["proof (prove)\nusing this:\n  finite {x. poly p x = 0}\n\ngoal (1 subgoal):\n 1. finite\n     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}", "by simp"], ["proof (state)\nthis:\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "with \\<open>\\<epsilon> > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}", "have \"\\<exists>\\<delta>>0. \\<delta>\\<le>\\<epsilon> \\<and> (\\<forall>x. \\<bar>x-x\\<^sub>0\\<bar> < \\<delta> \\<and> x \\<noteq> x\\<^sub>0 \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)", "proof (induction \"card {x. \\<bar>x-x\\<^sub>0\\<bar> < \\<epsilon> \\<and> x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\"\n           arbitrary: \\<epsilon> rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<epsilon>.\n       \\<lbrakk>\\<And>\\<epsilon>'.\n                   \\<lbrakk>card\n                             {x. \\<bar>x - x\\<^sub>0\\<bar>\n                                 < \\<epsilon>' \\<and>\n                                 x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n                            < card\n                               {x. \\<bar>x - x\\<^sub>0\\<bar>\n                                   < \\<epsilon> \\<and>\n                                   x \\<noteq> x\\<^sub>0 \\<and>\n                                   poly p x = 0};\n                    0 < \\<epsilon>';\n                    finite\n                     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n                         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<delta>>0.\n  \\<delta> \\<le> \\<epsilon>' \\<and>\n  (\\<forall>x.\n      \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n      poly p x \\<noteq> 0);\n        0 < \\<epsilon>;\n        finite\n         {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n             x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0.\n                            \\<delta> \\<le> \\<epsilon> \\<and>\n                            (\\<forall>x.\n                                \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n                                x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n                                poly p x \\<noteq> 0)", "case (less \\<epsilon>)"], ["proof (state)\nthis:\n  \\<lbrakk>card\n            {x. \\<bar>x - x\\<^sub>0\\<bar> < ?\\<epsilon> \\<and>\n                x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n           < card\n              {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n                  x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0};\n   0 < ?\\<epsilon>;\n   finite\n    {x. \\<bar>x - x\\<^sub>0\\<bar> < ?\\<epsilon> \\<and>\n        x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<delta>>0.\n                       \\<delta> \\<le> ?\\<epsilon> \\<and>\n                       (\\<forall>x.\n                           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n                           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n                           poly p x \\<noteq> 0)\n  0 < \\<epsilon>\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>\\<epsilon>.\n       \\<lbrakk>\\<And>\\<epsilon>'.\n                   \\<lbrakk>card\n                             {x. \\<bar>x - x\\<^sub>0\\<bar>\n                                 < \\<epsilon>' \\<and>\n                                 x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n                            < card\n                               {x. \\<bar>x - x\\<^sub>0\\<bar>\n                                   < \\<epsilon> \\<and>\n                                   x \\<noteq> x\\<^sub>0 \\<and>\n                                   poly p x = 0};\n                    0 < \\<epsilon>';\n                    finite\n                     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n                         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<delta>>0.\n  \\<delta> \\<le> \\<epsilon>' \\<and>\n  (\\<forall>x.\n      \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n      poly p x \\<noteq> 0);\n        0 < \\<epsilon>;\n        finite\n         {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n             x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0.\n                            \\<delta> \\<le> \\<epsilon> \\<and>\n                            (\\<forall>x.\n                                \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n                                x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n                                poly p x \\<noteq> 0)", "let ?A = \"{x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and> x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<epsilon>.\n       \\<lbrakk>\\<And>\\<epsilon>'.\n                   \\<lbrakk>card\n                             {x. \\<bar>x - x\\<^sub>0\\<bar>\n                                 < \\<epsilon>' \\<and>\n                                 x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n                            < card\n                               {x. \\<bar>x - x\\<^sub>0\\<bar>\n                                   < \\<epsilon> \\<and>\n                                   x \\<noteq> x\\<^sub>0 \\<and>\n                                   poly p x = 0};\n                    0 < \\<epsilon>';\n                    finite\n                     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n                         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<delta>>0.\n  \\<delta> \\<le> \\<epsilon>' \\<and>\n  (\\<forall>x.\n      \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n      poly p x \\<noteq> 0);\n        0 < \\<epsilon>;\n        finite\n         {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n             x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0.\n                            \\<delta> \\<le> \\<epsilon> \\<and>\n                            (\\<forall>x.\n                                \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n                                x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n                                poly p x \\<noteq> 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)", "proof (cases \"card ?A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. card\n     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n    0 \\<Longrightarrow>\n    \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)\n 2. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "case 0"], ["proof (state)\nthis:\n  card\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  0\n\ngoal (2 subgoals):\n 1. card\n     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n    0 \\<Longrightarrow>\n    \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)\n 2. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "hence \"?A = {}\""], ["proof (prove)\nusing this:\n  card\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  0\n\ngoal (1 subgoal):\n 1. {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n        x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n    {}", "using less"], ["proof (prove)\nusing this:\n  card\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  0\n  \\<lbrakk>card\n            {x. \\<bar>x - x\\<^sub>0\\<bar> < ?\\<epsilon> \\<and>\n                x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n           < card\n              {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n                  x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0};\n   0 < ?\\<epsilon>;\n   finite\n    {x. \\<bar>x - x\\<^sub>0\\<bar> < ?\\<epsilon> \\<and>\n        x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<delta>>0.\n                       \\<delta> \\<le> ?\\<epsilon> \\<and>\n                       (\\<forall>x.\n                           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n                           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n                           poly p x \\<noteq> 0)\n  0 < \\<epsilon>\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n        x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  {}\n\ngoal (2 subgoals):\n 1. card\n     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n    0 \\<Longrightarrow>\n    \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)\n 2. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)", "using less(2)"], ["proof (prove)\nusing this:\n  {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  {}\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)", "by (rule_tac exI[of _ \\<epsilon>], auto)"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon> \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "case (Suc _)"], ["proof (state)\nthis:\n  card\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "with less(3)"], ["proof (chain)\npicking this:\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n  card\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  Suc nat_", "have \"{x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and> x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n  card\n   {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n       x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n  Suc nat_\n\ngoal (1 subgoal):\n 1. {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n        x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} \\<noteq>\n    {}", "by force"], ["proof (state)\nthis:\n  {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "then"], ["proof (chain)\npicking this:\n  {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} \\<noteq>\n  {}", "obtain x where x_props: \"\\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\" \"x \\<noteq> x\\<^sub>0\" \"poly p x = 0\""], ["proof (prove)\nusing this:\n  {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n      x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>\\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>;\n         x \\<noteq> x\\<^sub>0; poly p x = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\n  x \\<noteq> x\\<^sub>0\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "define \\<epsilon>' where \"\\<epsilon>' = \\<bar>x - x\\<^sub>0\\<bar> / 2\""], ["proof (state)\nthis:\n  \\<epsilon>' = \\<bar>x - x\\<^sub>0\\<bar> / 2\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "have \"\\<epsilon>' > 0\" \"\\<epsilon>' < \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>' &&& \\<epsilon>' < \\<epsilon>", "unfolding \\<epsilon>'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<bar>x - x\\<^sub>0\\<bar> / 2 &&&\n    \\<bar>x - x\\<^sub>0\\<bar> / 2 < \\<epsilon>", "using x_props"], ["proof (prove)\nusing this:\n  \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\n  x \\<noteq> x\\<^sub>0\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. 0 < \\<bar>x - x\\<^sub>0\\<bar> / 2 &&&\n    \\<bar>x - x\\<^sub>0\\<bar> / 2 < \\<epsilon>", "by simp_all"], ["proof (state)\nthis:\n  0 < \\<epsilon>'\n  \\<epsilon>' < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "from x_props(1,2) and \\<open>\\<epsilon> > 0\\<close>"], ["proof (chain)\npicking this:\n  \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\n  x \\<noteq> x\\<^sub>0\n  0 < \\<epsilon>", "have \"x \\<notin> {x'. \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and> x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\" (is \"_ \\<notin> ?B\")"], ["proof (prove)\nusing this:\n  \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\n  x \\<noteq> x\\<^sub>0\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. x \\<notin> {x'.\n                \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n                x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}", "by (auto simp: \\<epsilon>'_def)"], ["proof (state)\nthis:\n  x \\<notin> {x'.\n              \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n              x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "moreover"], ["proof (state)\nthis:\n  x \\<notin> {x'.\n              \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n              x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "from x_props"], ["proof (chain)\npicking this:\n  \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\n  x \\<noteq> x\\<^sub>0\n  poly p x = 0", "have \"x \\<in> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and> x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\""], ["proof (prove)\nusing this:\n  \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon>\n  x \\<noteq> x\\<^sub>0\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n                x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}", "by blast"], ["proof (state)\nthis:\n  x \\<in> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<notin> {x'.\n              \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n              x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n  x \\<in> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}", "have \"?B \\<subset> ?A\""], ["proof (prove)\nusing this:\n  x \\<notin> {x'.\n              \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n              x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n  x \\<in> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. {x'.\n     \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n     x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n    \\<subset> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n                  x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {x'.\n   \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n   x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n  \\<subset> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n                x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "hence \"card ?B < card ?A\" \"finite ?B\""], ["proof (prove)\nusing this:\n  {x'.\n   \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n   x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n  \\<subset> {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n                x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n\ngoal (1 subgoal):\n 1. card\n     {x'.\n      \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n      x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n    < card\n       {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} &&&\n    finite\n     {x'.\n      \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n      x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}", "by (rule psubset_card_mono[OF less(3)],\n                blast intro: finite_subset[OF _ less(3)])"], ["proof (state)\nthis:\n  card\n   {x'.\n    \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n    x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n  < card\n     {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0}\n  finite\n   {x'.\n    \\<bar>x' - x\\<^sub>0\\<bar> < \\<epsilon>' \\<and>\n    x' \\<noteq> x\\<^sub>0 \\<and> poly p x' = 0}\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       card\n        {x. \\<bar>x - x\\<^sub>0\\<bar> < \\<epsilon> \\<and>\n            x \\<noteq> x\\<^sub>0 \\<and> poly p x = 0} =\n       Suc nat \\<Longrightarrow>\n       \\<exists>\\<delta>>0.\n          \\<delta> \\<le> \\<epsilon> \\<and>\n          (\\<forall>x.\n              \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n              x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n              poly p x \\<noteq> 0)", "from less(1)[OF this(1) \\<open>\\<epsilon>' > 0\\<close> this(2)]"], ["proof (chain)\npicking this:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon>' \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon>' \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)", "using \\<open>\\<epsilon>' < \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon>' \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n  \\<epsilon>' < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       \\<delta> \\<le> \\<epsilon> \\<and>\n       (\\<forall>x.\n           \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n           x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n           poly p x \\<noteq> 0)", "by force"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon> \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon> \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> \\<epsilon> \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "}"], ["proof (state)\nthis:\n  0 < ?\\<epsilon>2 \\<Longrightarrow>\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> ?\\<epsilon>2 \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "from this[of \"1\"]"], ["proof (chain)\npicking this:\n  0 < 1 \\<Longrightarrow>\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> 1 \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < 1 \\<Longrightarrow>\n  \\<exists>\\<delta>>0.\n     \\<delta> \\<le> 1 \\<and>\n     (\\<forall>x.\n         \\<bar>x - x\\<^sub>0\\<bar> < \\<delta> \\<and>\n         x \\<noteq> x\\<^sub>0 \\<longrightarrow>\n         poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0", "by (auto simp: eventually_at dist_real_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x\\<^sub>0. poly p x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_neighbourhood_same_sign:\n  assumes \"poly p (x\\<^sub>0 :: real) \\<noteq> 0\"\n  shows \"eventually (\\<lambda>x. sgn (poly p x) = sgn (poly p x\\<^sub>0)) (at x\\<^sub>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0.\n       sgn (poly p x) = sgn (poly p x\\<^sub>0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0.\n       sgn (poly p x) = sgn (poly p x\\<^sub>0)", "have cont: \"isCont (\\<lambda>x. sgn (poly p x)) x\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>x. sgn (poly p x)) x\\<^sub>0", "by (rule isCont_sgn, rule poly_isCont, rule assms)"], ["proof (state)\nthis:\n  isCont (\\<lambda>x. sgn (poly p x)) x\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0.\n       sgn (poly p x) = sgn (poly p x\\<^sub>0)", "then"], ["proof (chain)\npicking this:\n  isCont (\\<lambda>x. sgn (poly p x)) x\\<^sub>0", "have \"eventually (\\<lambda>x. \\<bar>sgn (poly p x) - sgn (poly p x\\<^sub>0)\\<bar> < 1) (at x\\<^sub>0)\""], ["proof (prove)\nusing this:\n  isCont (\\<lambda>x. sgn (poly p x)) x\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0.\n       \\<bar>sgn (poly p x) - sgn (poly p x\\<^sub>0)\\<bar> < 1", "by (auto simp: isCont_def tendsto_iff dist_real_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x\\<^sub>0.\n     \\<bar>sgn (poly p x) - sgn (poly p x\\<^sub>0)\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0.\n       sgn (poly p x) = sgn (poly p x\\<^sub>0)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x\\<^sub>0.\n     \\<bar>sgn (poly p x) - sgn (poly p x\\<^sub>0)\\<bar> < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x\\<^sub>0.\n     \\<bar>sgn (poly p x) - sgn (poly p x\\<^sub>0)\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x\\<^sub>0.\n       sgn (poly p x) = sgn (poly p x\\<^sub>0)", "by (rule eventually_mono) (simp add: sgn_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x\\<^sub>0.\n     sgn (poly p x) = sgn (poly p x\\<^sub>0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_lhopital:\n  assumes \"poly p (x::real) = 0\" \"poly q x = 0\" \"q \\<noteq> 0\"\n  assumes \"(\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\\<rightarrow> y\"\n  shows \"(\\<lambda>x. poly p x / poly q x) \\<midarrow>x\\<rightarrow> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. poly p x / poly q x) \\<midarrow>x\\<rightarrow> y", "using assms"], ["proof (prove)\nusing this:\n  poly p x = 0\n  poly q x = 0\n  q \\<noteq> 0\n  (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n  \\<rightarrow> y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. poly p x / poly q x) \\<midarrow>x\\<rightarrow> y", "proof (rule_tac lhopital)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> poly p \\<midarrow>x\\<rightarrow> 0\n 2. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> poly q \\<midarrow>x\\<rightarrow> 0\n 3. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. poly q x \\<noteq> 0\n 4. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. ?g'4 x \\<noteq> 0\n 5. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly p has_real_derivative ?f'4 x) (at x)\n 6. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly q has_real_derivative ?g'4 x) (at x)\n 7. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. ?f'4 x / ?g'4 x) \\<midarrow>x\n                      \\<rightarrow> y", "have \"isCont (poly p) x\" \"isCont (poly q) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (poly p) x &&& isCont (poly q) x", "by simp_all"], ["proof (state)\nthis:\n  isCont (poly p) x\n  isCont (poly q) x\n\ngoal (7 subgoals):\n 1. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> poly p \\<midarrow>x\\<rightarrow> 0\n 2. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> poly q \\<midarrow>x\\<rightarrow> 0\n 3. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. poly q x \\<noteq> 0\n 4. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. ?g'4 x \\<noteq> 0\n 5. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly p has_real_derivative ?f'4 x) (at x)\n 6. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly q has_real_derivative ?g'4 x) (at x)\n 7. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. ?f'4 x / ?g'4 x) \\<midarrow>x\n                      \\<rightarrow> y", "with assms(1,2)"], ["proof (chain)\npicking this:\n  poly p x = 0\n  poly q x = 0\n  isCont (poly p) x\n  isCont (poly q) x", "show \"poly p \\<midarrow>x\\<rightarrow> 0\" \"poly q \\<midarrow>x\\<rightarrow> 0\""], ["proof (prove)\nusing this:\n  poly p x = 0\n  poly q x = 0\n  isCont (poly p) x\n  isCont (poly q) x\n\ngoal (1 subgoal):\n 1. poly p \\<midarrow>x\\<rightarrow> 0 &&&\n    poly q \\<midarrow>x\\<rightarrow> 0", "by (simp_all add: isCont_def)"], ["proof (state)\nthis:\n  poly p \\<midarrow>x\\<rightarrow> 0\n  poly q \\<midarrow>x\\<rightarrow> 0\n\ngoal (5 subgoals):\n 1. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. poly q x \\<noteq> 0\n 2. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. ?g'4 x \\<noteq> 0\n 3. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly p has_real_derivative ?f'4 x) (at x)\n 4. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly q has_real_derivative ?g'4 x) (at x)\n 5. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. ?f'4 x / ?g'4 x) \\<midarrow>x\n                      \\<rightarrow> y", "from \\<open>q \\<noteq> 0\\<close> and \\<open>poly q x = 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  poly q x = 0", "have \"pderiv q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  poly q x = 0\n\ngoal (1 subgoal):\n 1. pderiv q \\<noteq> 0", "by (auto dest: pderiv_iszero)"], ["proof (state)\nthis:\n  pderiv q \\<noteq> 0\n\ngoal (5 subgoals):\n 1. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. poly q x \\<noteq> 0\n 2. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. ?g'4 x \\<noteq> 0\n 3. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly p has_real_derivative ?f'4 x) (at x)\n 4. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly q has_real_derivative ?g'4 x) (at x)\n 5. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. ?f'4 x / ?g'4 x) \\<midarrow>x\n                      \\<rightarrow> y", "from poly_neighbourhood_without_roots[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at ?x\\<^sub>0. poly (pderiv q) x \\<noteq> 0", "show \"eventually (\\<lambda>x. poly (pderiv q) x \\<noteq> 0) (at x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at ?x\\<^sub>0. poly (pderiv q) x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. poly (pderiv q) x \\<noteq> 0", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. poly (pderiv q) x \\<noteq> 0\n\ngoal (4 subgoals):\n 1. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x. poly q x \\<noteq> 0\n 2. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly p has_real_derivative ?f'4 x) (at x)\n 3. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at x.\n                         (poly q has_real_derivative poly (pderiv q) x)\n                          (at x)\n 4. \\<lbrakk>poly p x = 0; poly q x = 0; q \\<noteq> 0;\n     (\\<lambda>x. poly (pderiv p) x / poly (pderiv q) x) \\<midarrow>x\n     \\<rightarrow> y\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. ?f'4 x / poly (pderiv q) x) \\<midarrow>x\n                      \\<rightarrow> y", "qed (auto intro: poly_DERIV poly_neighbourhood_without_roots)"], ["", "lemma poly_roots_bounds:\n  assumes \"p \\<noteq> 0\"\n  obtains l u\n  where \"l \\<le> (u :: real)\"\n    and \"poly p l \\<noteq> 0\"\n    and \"poly p u \\<noteq> 0\"\n    and \"{x. x > l \\<and> x \\<le> u \\<and> poly p x = 0 } = {x. poly p x = 0}\"\n    and \"\\<And>x. x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l)\"\n    and \"\\<And>x. x \\<ge> u \\<Longrightarrow> sgn (poly p x) = sgn (poly p u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?l2 \\<le> ?u2\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?l2 \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?u2 \\<noteq> 0\n 4. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. ?l2 < x \\<and> x \\<le> ?u2 \\<and> poly p x = 0} = {x. poly p x = 0}\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> ?l2\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?l2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?u2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?u2)", "from assms"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"finite {x. poly p x = 0}\" (is \"finite ?roots\")"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite {x. poly p x = 0}", "using poly_roots_finite"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  ?p \\<noteq> 0 \\<Longrightarrow> finite {x. poly ?p x = (0::?'a)}\n\ngoal (1 subgoal):\n 1. finite {x. poly p x = 0}", "by fast"], ["proof (state)\nthis:\n  finite {x. poly p x = 0}\n\ngoal (6 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?l2 \\<le> ?u2\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?l2 \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?u2 \\<noteq> 0\n 4. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. ?l2 < x \\<and> x \\<le> ?u2 \\<and> poly p x = 0} = {x. poly p x = 0}\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> ?l2\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?l2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?u2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?u2)", "let ?roots' = \"insert 0 ?roots\""], ["proof (state)\ngoal (6 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?l2 \\<le> ?u2\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?l2 \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?u2 \\<noteq> 0\n 4. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. ?l2 < x \\<and> x \\<le> ?u2 \\<and> poly p x = 0} = {x. poly p x = 0}\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> ?l2\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?l2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?u2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?u2)", "define l where \"l = Min ?roots' - 1\""], ["proof (state)\nthis:\n  l = Min (insert 0 {x. poly p x = 0}) - 1\n\ngoal (6 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?l2 \\<le> ?u2\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?l2 \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?u2 \\<noteq> 0\n 4. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. ?l2 < x \\<and> x \\<le> ?u2 \\<and> poly p x = 0} = {x. poly p x = 0}\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> ?l2\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?l2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?u2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?u2)", "define u where \"u = Max ?roots' + 1\""], ["proof (state)\nthis:\n  u = Max (insert 0 {x. poly p x = 0}) + 1\n\ngoal (6 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?l2 \\<le> ?u2\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?l2 \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?u2 \\<noteq> 0\n 4. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. ?l2 < x \\<and> x \\<le> ?u2 \\<and> poly p x = 0} = {x. poly p x = 0}\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> ?l2\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?l2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?u2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?u2)", "from \\<open>finite ?roots\\<close>"], ["proof (chain)\npicking this:\n  finite {x. poly p x = 0}", "have A: \"finite ?roots'\""], ["proof (prove)\nusing this:\n  finite {x. poly p x = 0}\n\ngoal (1 subgoal):\n 1. finite (insert 0 {x. poly p x = 0})", "by auto"], ["proof (state)\nthis:\n  finite (insert 0 {x. poly p x = 0})\n\ngoal (6 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?l2 \\<le> ?u2\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?l2 \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p ?u2 \\<noteq> 0\n 4. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. ?l2 < x \\<and> x \\<le> ?u2 \\<and> poly p x = 0} = {x. poly p x = 0}\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> ?l2\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?l2)\n 6. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?u2 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) = sgn (poly p ?u2)", "from Min_le[OF this, of 0] and Max_ge[OF this, of 0]"], ["proof (chain)\npicking this:\n  0 \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  Min (insert 0 {x. poly p x = 0}) \\<le> 0\n  0 \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  0 \\<le> Max (insert 0 {x. poly p x = 0})", "show \"l \\<le>  u\""], ["proof (prove)\nusing this:\n  0 \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  Min (insert 0 {x. poly p x = 0}) \\<le> 0\n  0 \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  0 \\<le> Max (insert 0 {x. poly p x = 0})\n\ngoal (1 subgoal):\n 1. l \\<le> u", "by (simp add: l_def u_def)"], ["proof (state)\nthis:\n  l \\<le> u\n\ngoal (5 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p (Min (insert 0 {x. poly p x = 0}) - 1) \\<noteq> 0\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p (Max (insert 0 {x. poly p x = 0}) + 1) \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 4. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "from Min_le[OF A]"], ["proof (chain)\npicking this:\n  ?x \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  Min (insert 0 {x. poly p x = 0}) \\<le> ?x", "have l_props: \"\\<And>x. x\\<le>l \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ?x \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  Min (insert 0 {x. poly p x = 0}) \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> l \\<Longrightarrow> poly p x \\<noteq> 0", "by (fastforce simp: l_def)"], ["proof (state)\nthis:\n  ?x \\<le> l \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (5 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p (Min (insert 0 {x. poly p x = 0}) - 1) \\<noteq> 0\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p (Max (insert 0 {x. poly p x = 0}) + 1) \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 4. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "from Max_ge[OF A]"], ["proof (chain)\npicking this:\n  ?x \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  ?x \\<le> Max (insert 0 {x. poly p x = 0})", "have u_props: \"\\<And>x. x\\<ge>u \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ?x \\<in> insert 0 {x. poly p x = 0} \\<Longrightarrow>\n  ?x \\<le> Max (insert 0 {x. poly p x = 0})\n\ngoal (1 subgoal):\n 1. \\<And>x. u \\<le> x \\<Longrightarrow> poly p x \\<noteq> 0", "by (fastforce simp: u_def)"], ["proof (state)\nthis:\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (5 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p (Min (insert 0 {x. poly p x = 0}) - 1) \\<noteq> 0\n 2. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    poly p (Max (insert 0 {x. poly p x = 0}) + 1) \\<noteq> 0\n 3. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 4. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 5. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "from l_props u_props"], ["proof (chain)\npicking this:\n  ?x \\<le> l \\<Longrightarrow> poly p ?x \\<noteq> 0\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show [simp]: \"poly p l \\<noteq> 0\" \"poly p u \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ?x \\<le> l \\<Longrightarrow> poly p ?x \\<noteq> 0\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly p l \\<noteq> 0 &&& poly p u \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  poly p l \\<noteq> 0\n  poly p u \\<noteq> 0\n\ngoal (3 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 3. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "from l_props"], ["proof (chain)\npicking this:\n  ?x \\<le> l \\<Longrightarrow> poly p ?x \\<noteq> 0", "have \"\\<And>x. poly p x = 0 \\<Longrightarrow> x > l\""], ["proof (prove)\nusing this:\n  ?x \\<le> l \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. poly p x = 0 \\<Longrightarrow> l < x", "by (metis not_le)"], ["proof (state)\nthis:\n  poly p ?x = 0 \\<Longrightarrow> l < ?x\n\ngoal (3 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 3. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "moreover"], ["proof (state)\nthis:\n  poly p ?x = 0 \\<Longrightarrow> l < ?x\n\ngoal (3 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 3. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "from u_props"], ["proof (chain)\npicking this:\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "have \"\\<And>x. poly p x = 0 \\<Longrightarrow> x \\<le> u\""], ["proof (prove)\nusing this:\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. poly p x = 0 \\<Longrightarrow> x \\<le> u", "by (metis linear)"], ["proof (state)\nthis:\n  poly p ?x = 0 \\<Longrightarrow> ?x \\<le> u\n\ngoal (3 subgoals):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n         {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n         {x. poly p x = 0};\n         \\<And>x.\n            x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n         \\<And>x.\n            u \\<le> x \\<Longrightarrow>\n            sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    {x. Min (insert 0 {x. poly p x = 0}) - 1 < x \\<and>\n        x \\<le> Max (insert 0 {x. poly p x = 0}) + 1 \\<and> poly p x = 0} =\n    {x. poly p x = 0}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 3. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "ultimately"], ["proof (chain)\npicking this:\n  poly p ?x = 0 \\<Longrightarrow> l < ?x\n  poly p ?x = 0 \\<Longrightarrow> ?x \\<le> u", "show \"{x. x > l \\<and> x \\<le> u \\<and> poly p x = 0} = ?roots\""], ["proof (prove)\nusing this:\n  poly p ?x = 0 \\<Longrightarrow> l < ?x\n  poly p ?x = 0 \\<Longrightarrow> ?x \\<le> u\n\ngoal (1 subgoal):\n 1. {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}", "by auto"], ["proof (state)\nthis:\n  {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "{"], ["proof (state)\nthis:\n  {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "assume A: \"x < l\" \"sgn (poly p x) \\<noteq> sgn (poly p l)\""], ["proof (state)\nthis:\n  x < l\n  sgn (poly p x) \\<noteq> sgn (poly p l)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "with poly_IVT_pos[OF A(1), of p] poly_IVT_neg[OF A(1), of p] A(2)"], ["proof (chain)\npicking this:\n  \\<lbrakk>poly p x < 0; 0 < poly p l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>x. xa < l \\<and> poly p xa = 0\n  \\<lbrakk>0 < poly p x; poly p l < 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>x. xa < l \\<and> poly p xa = 0\n  sgn (poly p x) \\<noteq> sgn (poly p l)\n  x < l\n  sgn (poly p x) \\<noteq> sgn (poly p l)", "have False"], ["proof (prove)\nusing this:\n  \\<lbrakk>poly p x < 0; 0 < poly p l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>x. xa < l \\<and> poly p xa = 0\n  \\<lbrakk>0 < poly p x; poly p l < 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>x. xa < l \\<and> poly p xa = 0\n  sgn (poly p x) \\<noteq> sgn (poly p l)\n  x < l\n  sgn (poly p x) \\<noteq> sgn (poly p l)\n\ngoal (1 subgoal):\n 1. False", "by (auto split: if_split_asm\n                         simp: sgn_real_def l_props not_less less_eq_real_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x2 < l; sgn (poly p ?x2) \\<noteq> sgn (poly p l)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        x \\<le> Min (insert 0 {x. poly p x = 0}) - 1\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Min (insert 0 {x. poly p x = 0}) - 1))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "thus \"\\<And>x. x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2 < l; sgn (poly p ?x2) \\<noteq> sgn (poly p l)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l)", "by (case_tac \"x = l\", auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  ?x \\<le> l \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p l)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "{"], ["proof (state)\nthis:\n  ?x \\<le> l \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p l)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "assume A: \"x > u\" \"sgn (poly p x) \\<noteq> sgn (poly p u)\""], ["proof (state)\nthis:\n  u < x\n  sgn (poly p x) \\<noteq> sgn (poly p u)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "with u_props poly_IVT_neg[OF A(1), of p] poly_IVT_pos[OF A(1), of p] A(2)"], ["proof (chain)\npicking this:\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n  \\<lbrakk>0 < poly p u; poly p x < 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>u. xa < x \\<and> poly p xa = 0\n  \\<lbrakk>poly p u < 0; 0 < poly p x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>u. xa < x \\<and> poly p xa = 0\n  sgn (poly p x) \\<noteq> sgn (poly p u)\n  u < x\n  sgn (poly p x) \\<noteq> sgn (poly p u)", "have False"], ["proof (prove)\nusing this:\n  u \\<le> ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n  \\<lbrakk>0 < poly p u; poly p x < 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>u. xa < x \\<and> poly p xa = 0\n  \\<lbrakk>poly p u < 0; 0 < poly p x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xa>u. xa < x \\<and> poly p xa = 0\n  sgn (poly p x) \\<noteq> sgn (poly p u)\n  u < x\n  sgn (poly p x) \\<noteq> sgn (poly p u)\n\ngoal (1 subgoal):\n 1. False", "by (auto split: if_split_asm\n                         simp: sgn_real_def l_props not_less less_eq_real_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>u < ?x2; sgn (poly p ?x2) \\<noteq> sgn (poly p u)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>l u.\n                   \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0;\n                    poly p u \\<noteq> 0;\n                    {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                    {x. poly p x = 0};\n                    \\<And>x.\n                       x \\<le> l \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p l);\n                    \\<And>x.\n                       u \\<le> x \\<Longrightarrow>\n                       sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        Max (insert 0 {x. poly p x = 0}) + 1 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> sgn (poly p x) =\n                         sgn (poly p (Max (insert 0 {x. poly p x = 0}) + 1))", "thus \"\\<And>x. x \\<ge> u \\<Longrightarrow> sgn (poly p x) = sgn (poly p u)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u < ?x2; sgn (poly p ?x2) \\<noteq> sgn (poly p u)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x. u \\<le> x \\<Longrightarrow> sgn (poly p x) = sgn (poly p u)", "by (case_tac \"x = u\", auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  u \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p u)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition poly_inf :: \"('a::real_normed_vector) poly \\<Rightarrow> 'a\" where\n  \"poly_inf p \\<equiv> sgn (coeff p (degree p))\""], ["", "definition poly_neg_inf :: \"('a::real_normed_vector) poly \\<Rightarrow> 'a\" where\n  \"poly_neg_inf p \\<equiv> if even (degree p) then sgn (coeff p (degree p))\n                                       else -sgn (coeff p (degree p))\""], ["", "lemma poly_inf_0_iff[simp]:\n    \"poly_inf p = 0 \\<longleftrightarrow> p = 0\" \"poly_neg_inf p = 0 \\<longleftrightarrow> p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly_inf p = (0::'a)) = (p = 0) &&&\n    (poly_neg_inf p = (0::'a)) = (p = 0)", "by (auto simp: poly_inf_def poly_neg_inf_def sgn_zero_iff)"], ["", "lemma poly_inf_mult[simp]:\n  fixes p :: \"('a::real_normed_field) poly\"\n  shows \"poly_inf (p*q) = poly_inf p * poly_inf q\"\n        \"poly_neg_inf (p*q) = poly_neg_inf p * poly_neg_inf q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_inf (p * q) = poly_inf p * poly_inf q &&&\n    poly_neg_inf (p * q) = poly_neg_inf p * poly_neg_inf q", "unfolding poly_inf_def poly_neg_inf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (lead_coeff (p * q)) = sgn (lead_coeff p) * sgn (lead_coeff q) &&&\n    (if even (degree (p * q)) then sgn (lead_coeff (p * q))\n     else - sgn (lead_coeff (p * q))) =\n    (if even (degree p) then sgn (lead_coeff p) else - sgn (lead_coeff p)) *\n    (if even (degree q) then sgn (lead_coeff q) else - sgn (lead_coeff q))", "by ((cases \"p = 0 \\<or> q = 0\",auto simp: sgn_zero_iff\n         degree_mult_eq[of p q] coeff_mult_degree_sum Real_Vector_Spaces.sgn_mult)[])+"], ["", "lemma poly_neq_0_at_infinity:\n  assumes \"(p :: real poly) \\<noteq> 0\"\n  shows \"eventually (\\<lambda>x. poly p x \\<noteq> 0) at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0", "from poly_roots_bounds[OF assms]"], ["proof (chain)\npicking this:\n  (\\<And>l u.\n      \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n       {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0};\n       \\<And>x. x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n       \\<And>x.\n          u \\<le> x \\<Longrightarrow>\n          sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess l u"], ["proof (prove)\nusing this:\n  (\\<And>l u.\n      \\<lbrakk>l \\<le> u; poly p l \\<noteq> 0; poly p u \\<noteq> 0;\n       {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0};\n       \\<And>x. x \\<le> l \\<Longrightarrow> sgn (poly p x) = sgn (poly p l);\n       \\<And>x.\n          u \\<le> x \\<Longrightarrow>\n          sgn (poly p x) = sgn (poly p u)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  l \\<le> u\n  poly p l \\<noteq> 0\n  poly p u \\<noteq> 0\n  {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\n  ?x \\<le> l \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p l)\n  u \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p u)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0", "note lu_props = this"], ["proof (state)\nthis:\n  l \\<le> u\n  poly p l \\<noteq> 0\n  poly p u \\<noteq> 0\n  {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\n  ?x \\<le> l \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p l)\n  u \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p u)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0", "define b where \"b = max (-l) u\""], ["proof (state)\nthis:\n  b = max (- l) u\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0", "proof (subst eventually_at_infinity, rule exI[of _ b], clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>b \\<le> \\<bar>x\\<bar>; poly p x = 0\\<rbrakk>\n       \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>b \\<le> \\<bar>x\\<bar>; poly p x = 0\\<rbrakk>\n       \\<Longrightarrow> False", "assume A: \"\\<bar>x\\<bar> \\<ge> b\" and B: \"poly p x = 0\""], ["proof (state)\nthis:\n  b \\<le> \\<bar>x\\<bar>\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>b \\<le> \\<bar>x\\<bar>; poly p x = 0\\<rbrakk>\n       \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"x \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> False\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> False\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> False", "with A"], ["proof (chain)\npicking this:\n  b \\<le> \\<bar>x\\<bar>\n  0 \\<le> x", "have \"x \\<ge> u\""], ["proof (prove)\nusing this:\n  b \\<le> \\<bar>x\\<bar>\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. u \\<le> x", "unfolding b_def"], ["proof (prove)\nusing this:\n  max (- l) u \\<le> \\<bar>x\\<bar>\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. u \\<le> x", "by simp"], ["proof (state)\nthis:\n  u \\<le> x\n\ngoal (2 subgoals):\n 1. 0 \\<le> x \\<Longrightarrow> False\n 2. \\<not> 0 \\<le> x \\<Longrightarrow> False", "with lu_props(3, 6)"], ["proof (chain)\npicking this:\n  poly p u \\<noteq> 0\n  u \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p u)\n  u \\<le> x", "show False"], ["proof (prove)\nusing this:\n  poly p u \\<noteq> 0\n  u \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p u)\n  u \\<le> x\n\ngoal (1 subgoal):\n 1. False", "by (metis sgn_zero_iff B)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> x \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> x \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> x \\<Longrightarrow> False", "with A"], ["proof (chain)\npicking this:\n  b \\<le> \\<bar>x\\<bar>\n  \\<not> 0 \\<le> x", "have \"x \\<le> l\""], ["proof (prove)\nusing this:\n  b \\<le> \\<bar>x\\<bar>\n  \\<not> 0 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> l", "unfolding b_def"], ["proof (prove)\nusing this:\n  max (- l) u \\<le> \\<bar>x\\<bar>\n  \\<not> 0 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> l", "by simp"], ["proof (state)\nthis:\n  x \\<le> l\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> x \\<Longrightarrow> False", "with lu_props(2, 5)"], ["proof (chain)\npicking this:\n  poly p l \\<noteq> 0\n  ?x \\<le> l \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p l)\n  x \\<le> l", "show False"], ["proof (prove)\nusing this:\n  poly p l \\<noteq> 0\n  ?x \\<le> l \\<Longrightarrow> sgn (poly p ?x) = sgn (poly p l)\n  x \\<le> l\n\ngoal (1 subgoal):\n 1. False", "by (metis sgn_zero_iff B)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_infinity. poly p x \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_limit_aux:\n  fixes p :: \"real poly\"\n  defines \"n \\<equiv> degree p\"\n  shows \"((\\<lambda>x. poly p x / x ^ n) \\<longlongrightarrow> coeff p n) at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. poly p x / x ^ n) \\<longlongrightarrow> coeff p n)\n     at_infinity", "proof (subst filterlim_cong, rule refl, rule refl)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_infinity. poly p x / x ^ n = ?g x\n 2. (?g \\<longlongrightarrow> coeff p n) at_infinity", "show \"eventually (\\<lambda>x. poly p x / x^n = (\\<Sum>i\\<le>n. coeff p i / x^(n-i)))\n            at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity.\n       poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))", "proof (rule eventually_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. eventually ?P at_infinity\n 2. \\<And>x.\n       ?P x \\<Longrightarrow>\n       poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))", "show \"eventually (\\<lambda>x::real. x \\<noteq> 0) at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity. x \\<noteq> 0", "by (simp add: eventually_at_infinity, rule exI[of _ 1], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_infinity. x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<noteq> 0 \\<Longrightarrow>\n       poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<noteq> 0 \\<Longrightarrow>\n       poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))", "assume [simp]: \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<noteq> 0 \\<Longrightarrow>\n       poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))", "show \"poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))", "by (simp add: n_def sum_divide_distrib power_diff poly_altdef)"], ["proof (state)\nthis:\n  poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_infinity.\n     poly p x / x ^ n = (\\<Sum>i\\<le>n. coeff p i / x ^ (n - i))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "let ?a = \"\\<lambda>i. if i = n then coeff p n else 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "have \"\\<forall>i\\<in>{..n}. ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> ?a i) at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{..n}.\n       ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n        (if i = n then coeff p n else 0))\n        at_infinity", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..n} \\<Longrightarrow>\n       ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n        (if i = n then coeff p n else 0))\n        at_infinity", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..n} \\<Longrightarrow>\n       ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n        (if i = n then coeff p n else 0))\n        at_infinity", "assume \"i \\<in> {..n}\""], ["proof (state)\nthis:\n  i \\<in> {..n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..n} \\<Longrightarrow>\n       ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n        (if i = n then coeff p n else 0))\n        at_infinity", "hence \"i \\<le> n\""], ["proof (prove)\nusing this:\n  i \\<in> {..n}\n\ngoal (1 subgoal):\n 1. i \\<le> n", "by simp"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {..n} \\<Longrightarrow>\n       ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n        (if i = n then coeff p n else 0))\n        at_infinity", "show \"((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> ?a i) at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "proof (cases \"i = n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity\n 2. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "case True"], ["proof (state)\nthis:\n  i = n\n\ngoal (2 subgoals):\n 1. i = n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity\n 2. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "by (intro tendstoI, subst eventually_at_infinity,\n                         intro exI[of _ 1], simp add: dist_real_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   (if i = n then coeff p n else 0))\n   at_infinity\n\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "case False"], ["proof (state)\nthis:\n  i \\<noteq> n\n\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "hence \"n - i > 0\""], ["proof (prove)\nusing this:\n  i \\<noteq> n\n\ngoal (1 subgoal):\n 1. 0 < n - i", "using \\<open>i \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  i \\<noteq> n\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < n - i", "by simp"], ["proof (state)\nthis:\n  0 < n - i\n\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "from tendsto_inverse_0 and divide_real_def[of 1]"], ["proof (chain)\npicking this:\n  (inverse \\<longlongrightarrow> (0::?'a)) at_infinity\n  1 / ?y = 1 * inverse ?y", "have \"((\\<lambda>x. 1 / x :: real) \\<longlongrightarrow> 0) at_infinity\""], ["proof (prove)\nusing this:\n  (inverse \\<longlongrightarrow> (0::?'a)) at_infinity\n  1 / ?y = 1 * inverse ?y\n\ngoal (1 subgoal):\n 1. ((/) 1 \\<longlongrightarrow> 0) at_infinity", "by simp"], ["proof (state)\nthis:\n  ((/) 1 \\<longlongrightarrow> 0) at_infinity\n\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "from tendsto_power[OF this, of \"n - i\"]"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. (1 / x) ^ (n - i)) \\<longlongrightarrow> 0 ^ (n - i))\n   at_infinity", "have \"((\\<lambda>x::real. 1 / x ^ (n - i)) \\<longlongrightarrow> 0) at_infinity\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. (1 / x) ^ (n - i)) \\<longlongrightarrow> 0 ^ (n - i))\n   at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 1 / x ^ (n - i)) \\<longlongrightarrow> 0) at_infinity", "using \\<open>n - i > 0\\<close>"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. (1 / x) ^ (n - i)) \\<longlongrightarrow> 0 ^ (n - i))\n   at_infinity\n  0 < n - i\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 1 / x ^ (n - i)) \\<longlongrightarrow> 0) at_infinity", "by (simp add: power_0_left power_one_over)"], ["proof (state)\nthis:\n  ((\\<lambda>x. 1 / x ^ (n - i)) \\<longlongrightarrow> 0) at_infinity\n\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "from tendsto_mult_right_zero[OF this, of \"coeff p i\"]"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. coeff p i * (1 / x ^ (n - i))) \\<longlongrightarrow> 0)\n   at_infinity", "have \"((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> 0) at_infinity\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. coeff p i * (1 / x ^ (n - i))) \\<longlongrightarrow> 0)\n   at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> 0)\n     at_infinity", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> 0)\n   at_infinity\n\ngoal (1 subgoal):\n 1. i \\<noteq> n \\<Longrightarrow>\n    ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> 0)\n   at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "using False"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow> 0)\n   at_infinity\n  i \\<noteq> n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (if i = n then coeff p n else 0))\n     at_infinity", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   (if i = n then coeff p n else 0))\n   at_infinity\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   (if i = n then coeff p n else 0))\n   at_infinity\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{..n}.\n     ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n      (if i = n then coeff p n else 0))\n      at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "hence \"((\\<lambda>x. \\<Sum>i\\<le>n. coeff p i / x^(n-i)) \\<longlongrightarrow> (\\<Sum>i\\<le>n. ?a i)) at_infinity\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{..n}.\n     ((\\<lambda>x. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n      (if i = n then coeff p n else 0))\n      at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     (\\<Sum>i\\<le>n. if i = n then coeff p n else 0))\n     at_infinity", "by (force intro!: tendsto_sum)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   (\\<Sum>i\\<le>n. if i = n then coeff p n else 0))\n   at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   (\\<Sum>i\\<le>n. if i = n then coeff p n else 0))\n   at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "have \"(\\<Sum>i\\<le>n. ?a i) = coeff p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>n. if i = n then coeff p n else 0) = coeff p n", "by (subst sum.delta, simp_all)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>n. if i = n then coeff p n else 0) = coeff p n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   coeff p n)\n   at_infinity", "show \"((\\<lambda>x. \\<Sum>i\\<le>n. coeff p i / x^(n-i)) \\<longlongrightarrow> coeff p n) at_infinity\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   coeff p n)\n   at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n     coeff p n)\n     at_infinity", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       \\<Sum>i\\<le>n. coeff p i / x ^ (n - i)) \\<longlongrightarrow>\n   coeff p n)\n   at_infinity\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_at_top_at_top:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) > 0\"\n  shows \"LIM x at_top. poly p x :> at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "let ?n = \"degree p\""], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "define f g where \"f x = poly p x / x^?n\" and \"g x = x ^ ?n\" for x :: real"], ["proof (state)\nthis:\n  f ?x = poly p ?x / ?x ^ degree p\n  g ?x = ?x ^ degree p\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "from poly_limit_aux"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity", "have \"(f \\<longlongrightarrow> coeff p (degree p)) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> lead_coeff p) at_top", "using tendsto_mono at_top_le_at_infinity"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity\n  \\<lbrakk>?F \\<le> ?F'; (?f \\<longlongrightarrow> ?l) ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n  at_top \\<le> at_infinity\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> lead_coeff p) at_top", "unfolding f_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity\n  \\<lbrakk>?F \\<le> ?F'; (?f \\<longlongrightarrow> ?l) ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n  at_top \\<le> at_infinity\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. poly p x / x ^ degree p) \\<longlongrightarrow>\n     lead_coeff p)\n     at_top", "by blast"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> lead_coeff p) at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "moreover"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> lead_coeff p) at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "from assms"], ["proof (chain)\npicking this:\n  1 \\<le> degree p\n  0 < lead_coeff p", "have \"LIM x at_top. g x :> at_top\""], ["proof (prove)\nusing this:\n  1 \\<le> degree p\n  0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. filterlim g at_top at_top", "by (auto simp add: g_def intro!: filterlim_pow_at_top filterlim_ident)"], ["proof (state)\nthis:\n  filterlim g at_top at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "ultimately"], ["proof (chain)\npicking this:\n  (f \\<longlongrightarrow> lead_coeff p) at_top\n  filterlim g at_top at_top", "have \"LIM x at_top. f x * g x :> at_top\""], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> lead_coeff p) at_top\n  filterlim g at_top at_top\n\ngoal (1 subgoal):\n 1. LIM x at_top. f x * g x :> at_top", "using filterlim_tendsto_pos_mult_at_top assms"], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> lead_coeff p) at_top\n  filterlim g at_top at_top\n  \\<lbrakk>(?f \\<longlongrightarrow> ?c) ?F; 0 < ?c;\n   filterlim ?g at_top ?F\\<rbrakk>\n  \\<Longrightarrow> LIM x ?F. ?f x * ?g x :> at_top\n  1 \\<le> degree p\n  0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. LIM x at_top. f x * g x :> at_top", "by simp"], ["proof (state)\nthis:\n  LIM x at_top. f x * g x :> at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "also"], ["proof (state)\nthis:\n  LIM x at_top. f x * g x :> at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "have \"eventually (\\<lambda>x. f x * g x = poly p x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. f x * g x = poly p x", "unfolding f_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       poly p x / x ^ degree p * x ^ degree p = poly p x", "by (subst eventually_at_top_linorder, rule exI[of _ 1],\n          simp add: poly_altdef field_simps sum_distrib_left power_diff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. f x * g x = poly p x\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "note filterlim_cong[OF refl refl this]"], ["proof (state)\nthis:\n  (LIM x at_top. f x * g x :> ?F1.0) = filterlim (poly p) ?F1.0 at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "finally"], ["proof (chain)\npicking this:\n  filterlim (poly p) at_top at_top", "show ?thesis"], ["proof (prove)\nusing this:\n  filterlim (poly p) at_top at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_top at_top", "."], ["proof (state)\nthis:\n  filterlim (poly p) at_top at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_at_bot_at_top:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) < 0\"\n  shows \"LIM x at_top. poly p x :> at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (poly p) at_bot at_top", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim (poly p) at_bot at_top", "from poly_at_top_at_top[of \"-p\"] and assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 \\<le> degree (- p); 0 < lead_coeff (- p)\\<rbrakk>\n  \\<Longrightarrow> filterlim (poly (- p)) at_top at_top\n  1 \\<le> degree p\n  lead_coeff p < 0", "have \"LIM x at_top. -poly p x :> at_top\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> degree (- p); 0 < lead_coeff (- p)\\<rbrakk>\n  \\<Longrightarrow> filterlim (poly (- p)) at_top at_top\n  1 \\<le> degree p\n  lead_coeff p < 0\n\ngoal (1 subgoal):\n 1. LIM x at_top. - poly p x :> at_top", "by simp"], ["proof (state)\nthis:\n  LIM x at_top. - poly p x :> at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_bot at_top", "thus ?thesis"], ["proof (prove)\nusing this:\n  LIM x at_top. - poly p x :> at_top\n\ngoal (1 subgoal):\n 1. filterlim (poly p) at_bot at_top", "by (simp add: filterlim_uminus_at_bot)"], ["proof (state)\nthis:\n  filterlim (poly p) at_bot at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_lim_inf:\n  \"eventually (\\<lambda>x::real. sgn (poly p x) = poly_inf p) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "proof (cases \"degree p \\<ge> 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "case False"], ["proof (state)\nthis:\n  \\<not> 1 \\<le> degree p\n\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "hence \"degree p = 0\""], ["proof (prove)\nusing this:\n  \\<not> 1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. degree p = 0", "by simp"], ["proof (state)\nthis:\n  degree p = 0\n\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "then"], ["proof (chain)\npicking this:\n  degree p = 0", "obtain c where \"p = [:c:]\""], ["proof (prove)\nusing this:\n  degree p = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c. p = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases p, auto split: if_split_asm)"], ["proof (state)\nthis:\n  p = [:c:]\n\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  p = [:c:]\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "by (simp add: eventually_at_top_linorder poly_inf_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "case True"], ["proof (state)\nthis:\n  1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "note deg = this"], ["proof (state)\nthis:\n  1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "let ?lc = \"coeff p (degree p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "from True"], ["proof (chain)\npicking this:\n  1 \\<le> degree p", "have \"?lc \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. lead_coeff p \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  lead_coeff p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "proof (cases \"?lc > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "case True"], ["proof (state)\nthis:\n  0 < lead_coeff p\n\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "from poly_at_top_at_top[OF deg this]"], ["proof (chain)\npicking this:\n  filterlim (poly p) at_top at_top", "obtain x\\<^sub>0 where \"\\<And>x. x \\<ge> x\\<^sub>0 \\<Longrightarrow> poly p x \\<ge> 1\""], ["proof (prove)\nusing this:\n  filterlim (poly p) at_top at_top\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        (\\<And>x.\n            x\\<^sub>0 \\<le> x \\<Longrightarrow>\n            1 \\<le> poly p x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: filterlim_at_top\n                      eventually_at_top_linorder less_eq_real_def)"], ["proof (state)\nthis:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> 1 \\<le> poly p ?x\n\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "hence \"\\<And>x. x \\<ge> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = 1\""], ["proof (prove)\nusing this:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> 1 \\<le> poly p ?x\n\ngoal (1 subgoal):\n 1. \\<And>x. x\\<^sub>0 \\<le> x \\<Longrightarrow> sgn (poly p x) = 1", "by force"], ["proof (state)\nthis:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = 1\n\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "by (simp only: eventually_at_top_linorder poly_inf_def,\n                             intro exI[of _ x\\<^sub>0], simp add: True)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "hence \"?lc < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. lead_coeff p < 0", "using \\<open>?lc \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 < lead_coeff p\n  lead_coeff p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lead_coeff p < 0", "by linarith"], ["proof (state)\nthis:\n  lead_coeff p < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "from poly_at_bot_at_top[OF deg this]"], ["proof (chain)\npicking this:\n  filterlim (poly p) at_bot at_top", "obtain x\\<^sub>0 where \"\\<And>x. x \\<ge> x\\<^sub>0 \\<Longrightarrow> poly p x \\<le> -1\""], ["proof (prove)\nusing this:\n  filterlim (poly p) at_bot at_top\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        (\\<And>x.\n            x\\<^sub>0 \\<le> x \\<Longrightarrow>\n            poly p x \\<le> - 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: filterlim_at_bot\n                      eventually_at_top_linorder less_eq_real_def)"], ["proof (state)\nthis:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> poly p ?x \\<le> - 1\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "hence \"\\<And>x. x \\<ge> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = -1\""], ["proof (prove)\nusing this:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> poly p ?x \\<le> - 1\n\ngoal (1 subgoal):\n 1. \\<And>x. x\\<^sub>0 \\<le> x \\<Longrightarrow> sgn (poly p x) = - 1", "by force"], ["proof (state)\nthis:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = - 1\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sub>0 \\<le> ?x \\<Longrightarrow> sgn (poly p ?x) = - 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p", "by (simp only: eventually_at_top_linorder poly_inf_def,\n                             intro exI[of _ x\\<^sub>0], simp add: \\<open>?lc < 0\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly p x) = poly_inf p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_at_top_or_bot_at_bot:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) > 0\"\n  shows \"LIM x at_bot. poly p x :> (if even (degree p) then at_top else at_bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "let ?n = \"degree p\""], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "define f g where \"f x = poly p x / x ^ ?n\" and \"g x = x ^ ?n\" for x :: real"], ["proof (state)\nthis:\n  f ?x = poly p ?x / ?x ^ degree p\n  g ?x = ?x ^ degree p\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "from poly_limit_aux"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity", "have \"(f \\<longlongrightarrow> coeff p (degree p)) at_bot\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> lead_coeff p) at_bot", "using tendsto_mono at_bot_le_at_infinity"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. poly ?p x / x ^ degree ?p) \\<longlongrightarrow>\n   lead_coeff ?p)\n   at_infinity\n  \\<lbrakk>?F \\<le> ?F'; (?f \\<longlongrightarrow> ?l) ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n  at_bot \\<le> at_infinity\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> lead_coeff p) at_bot", "by (force simp: f_def [abs_def])"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> lead_coeff p) at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "moreover"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> lead_coeff p) at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "from assms"], ["proof (chain)\npicking this:\n  1 \\<le> degree p\n  0 < lead_coeff p", "have \"LIM x at_bot. g x :> (if even (degree p) then at_top else at_bot)\""], ["proof (prove)\nusing this:\n  1 \\<le> degree p\n  0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. filterlim g (if even (degree p) then at_top else at_bot) at_bot", "by (auto simp add: g_def split: if_split_asm intro: filterlim_pow_at_bot_even filterlim_pow_at_bot_odd filterlim_ident)"], ["proof (state)\nthis:\n  filterlim g (if even (degree p) then at_top else at_bot) at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "ultimately"], ["proof (chain)\npicking this:\n  (f \\<longlongrightarrow> lead_coeff p) at_bot\n  filterlim g (if even (degree p) then at_top else at_bot) at_bot", "have \"LIM x at_bot. f x * g x :>\n                      (if even ?n then at_top else at_bot)\""], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> lead_coeff p) at_bot\n  filterlim g (if even (degree p) then at_top else at_bot) at_bot\n\ngoal (1 subgoal):\n 1. LIM x at_bot. f x * g x :> if even (degree p) then at_top else at_bot", "by (auto simp: assms intro: filterlim_tendsto_pos_mult_at_top\n                                  filterlim_tendsto_pos_mult_at_bot)"], ["proof (state)\nthis:\n  LIM x at_bot. f x * g x :> if even (degree p) then at_top else at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "also"], ["proof (state)\nthis:\n  LIM x at_bot. f x * g x :> if even (degree p) then at_top else at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "have \"eventually (\\<lambda>x. f x * g x = poly p x) at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. f x * g x = poly p x", "unfolding f_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot.\n       poly p x / x ^ degree p * x ^ degree p = poly p x", "by (subst eventually_at_bot_linorder, rule exI[of _ \"-1\"],\n          simp add: poly_altdef field_simps sum_distrib_left power_diff)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. f x * g x = poly p x\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "note filterlim_cong[OF refl refl this]"], ["proof (state)\nthis:\n  (LIM x at_bot. f x * g x :> ?F1.0) = filterlim (poly p) ?F1.0 at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "finally"], ["proof (chain)\npicking this:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "show ?thesis"], ["proof (prove)\nusing this:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot", "."], ["proof (state)\nthis:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_at_bot_or_top_at_bot:\n  fixes p :: \"real poly\"\n  assumes \"degree p \\<ge> 1\" \"coeff p (degree p) < 0\"\n  shows \"LIM x at_bot. poly p x :> (if even (degree p) then at_bot else at_top)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot", "from poly_at_top_or_bot_at_bot[of \"-p\"] and assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 \\<le> degree (- p); 0 < lead_coeff (- p)\\<rbrakk>\n  \\<Longrightarrow> filterlim (poly (- p))\n                     (if even (degree (- p)) then at_top else at_bot) at_bot\n  1 \\<le> degree p\n  lead_coeff p < 0", "have \"LIM x at_bot. -poly p x :>\n                (if even (degree p) then at_top else at_bot)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> degree (- p); 0 < lead_coeff (- p)\\<rbrakk>\n  \\<Longrightarrow> filterlim (poly (- p))\n                     (if even (degree (- p)) then at_top else at_bot) at_bot\n  1 \\<le> degree p\n  lead_coeff p < 0\n\ngoal (1 subgoal):\n 1. LIM x at_bot. - poly p x :> if even (degree p) then at_top else at_bot", "by simp"], ["proof (state)\nthis:\n  LIM x at_bot. - poly p x :> if even (degree p) then at_top else at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot", "thus ?thesis"], ["proof (prove)\nusing this:\n  LIM x at_bot. - poly p x :> if even (degree p) then at_top else at_bot\n\ngoal (1 subgoal):\n 1. filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot", "by (auto simp: filterlim_uminus_at_bot)"], ["proof (state)\nthis:\n  filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_lim_neg_inf:\n  \"eventually (\\<lambda>x::real. sgn (poly p x) = poly_neg_inf p) at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "proof (cases \"degree p \\<ge> 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case False"], ["proof (state)\nthis:\n  \\<not> 1 \\<le> degree p\n\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "hence \"degree p = 0\""], ["proof (prove)\nusing this:\n  \\<not> 1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. degree p = 0", "by simp"], ["proof (state)\nthis:\n  degree p = 0\n\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "then"], ["proof (chain)\npicking this:\n  degree p = 0", "obtain c where \"p = [:c:]\""], ["proof (prove)\nusing this:\n  degree p = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c. p = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases p, auto split: if_split_asm)"], ["proof (state)\nthis:\n  p = [:c:]\n\ngoal (2 subgoals):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  p = [:c:]\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "by (simp add: eventually_at_bot_linorder poly_neg_inf_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case True"], ["proof (state)\nthis:\n  1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "note deg = this"], ["proof (state)\nthis:\n  1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "let ?lc = \"coeff p (degree p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "from True"], ["proof (chain)\npicking this:\n  1 \\<le> degree p", "have \"?lc \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> degree p\n\ngoal (1 subgoal):\n 1. lead_coeff p \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  lead_coeff p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> degree p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "proof (cases \"?lc > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case True"], ["proof (state)\nthis:\n  0 < lead_coeff p\n\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "note lc_pos = this"], ["proof (state)\nthis:\n  0 < lead_coeff p\n\ngoal (2 subgoals):\n 1. 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "proof (cases \"even (degree p)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case True"], ["proof (state)\nthis:\n  even (degree p)\n\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "from poly_at_top_or_bot_at_bot[OF deg lc_pos] and True"], ["proof (chain)\npicking this:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot\n  even (degree p)", "obtain x\\<^sub>0 where \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p x \\<ge> 1\""], ["proof (prove)\nusing this:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot\n  even (degree p)\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        (\\<And>x.\n            x \\<le> x\\<^sub>0 \\<Longrightarrow>\n            1 \\<le> poly p x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp add: filterlim_at_top filterlim_at_bot\n                        eventually_at_bot_linorder less_eq_real_def)"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> 1 \\<le> poly p ?x\n\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "hence \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = 1\""], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> 1 \\<le> poly p ?x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = 1", "by force"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = 1\n\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "by (simp add: True eventually_at_bot_linorder poly_neg_inf_def,\n                    intro exI[of _ x\\<^sub>0], simp add: lc_pos)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case False"], ["proof (state)\nthis:\n  odd (degree p)\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "from poly_at_top_or_bot_at_bot[OF deg lc_pos] and False"], ["proof (chain)\npicking this:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot\n  odd (degree p)", "obtain x\\<^sub>0 where \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p x \\<le> -1\""], ["proof (prove)\nusing this:\n  filterlim (poly p) (if even (degree p) then at_top else at_bot) at_bot\n  odd (degree p)\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        (\\<And>x.\n            x \\<le> x\\<^sub>0 \\<Longrightarrow>\n            poly p x \\<le> - 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp add: filterlim_at_bot\n                        eventually_at_bot_linorder less_eq_real_def)"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p ?x \\<le> - 1\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "hence \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = -1\""], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p ?x \\<le> - 1\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = - 1", "by force"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = - 1\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = - 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "by (simp add: False eventually_at_bot_linorder poly_neg_inf_def,\n                              intro exI[of _ x\\<^sub>0], simp add: lc_pos)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "hence lc_neg: \"?lc < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < lead_coeff p\n\ngoal (1 subgoal):\n 1. lead_coeff p < 0", "using \\<open>?lc \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 < lead_coeff p\n  lead_coeff p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lead_coeff p < 0", "by linarith"], ["proof (state)\nthis:\n  lead_coeff p < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < lead_coeff p \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "proof (cases \"even (degree p)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case True"], ["proof (state)\nthis:\n  even (degree p)\n\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "with poly_at_bot_or_top_at_bot[OF deg lc_neg]"], ["proof (chain)\npicking this:\n  filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot\n  even (degree p)", "obtain x\\<^sub>0 where \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p x \\<le> -1\""], ["proof (prove)\nusing this:\n  filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot\n  even (degree p)\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        (\\<And>x.\n            x \\<le> x\\<^sub>0 \\<Longrightarrow>\n            poly p x \\<le> - 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: filterlim_at_bot\n                          eventually_at_bot_linorder less_eq_real_def)"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p ?x \\<le> - 1\n\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "hence \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = -1\""], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p ?x \\<le> - 1\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = - 1", "by force"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = - 1\n\ngoal (2 subgoals):\n 1. even (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n 2. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = - 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "by (simp only: True eventually_at_bot_linorder poly_neg_inf_def,\n                               intro exI[of _ x\\<^sub>0], simp add: lc_neg)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "case False"], ["proof (state)\nthis:\n  odd (degree p)\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "with poly_at_bot_or_top_at_bot[OF deg lc_neg]"], ["proof (chain)\npicking this:\n  filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot\n  odd (degree p)", "obtain x\\<^sub>0 where \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> poly p x \\<ge> 1\""], ["proof (prove)\nusing this:\n  filterlim (poly p) (if even (degree p) then at_bot else at_top) at_bot\n  odd (degree p)\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        (\\<And>x.\n            x \\<le> x\\<^sub>0 \\<Longrightarrow>\n            1 \\<le> poly p x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: filterlim_at_top\n                          eventually_at_bot_linorder less_eq_real_def)"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> 1 \\<le> poly p ?x\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "hence \"\\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = 1\""], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> 1 \\<le> poly p ?x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p x) = 1", "by force"], ["proof (state)\nthis:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = 1\n\ngoal (1 subgoal):\n 1. odd (degree p) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<le> x\\<^sub>0 \\<Longrightarrow> sgn (poly p ?x) = 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p", "by (simp only: False eventually_at_bot_linorder poly_neg_inf_def,\n                               intro exI[of _ x\\<^sub>0], simp add: lc_neg)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly p x) = poly_neg_inf p\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Signs of polynomials for sufficiently large values\\<close>"], ["", "lemma polys_inf_sign_thresholds:\n  assumes \"finite (ps :: real poly set)\"\n  obtains l u\n  where \"l \\<le> u\"\n    and \"\\<And>p. \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk> \\<Longrightarrow>\n              {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\"\n    and \"\\<And>p x. \\<lbrakk>p \\<in> ps; x \\<ge> u\\<rbrakk> \\<Longrightarrow> sgn (poly p x) = poly_inf p\"\n    and \"\\<And>p x. \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk> \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "case prems: 1"], ["proof (state)\nthis:\n  \\<lbrakk>?l \\<le> ?u;\n   \\<And>p.\n      \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> {x. ?l < x \\<and> x \\<le> ?u \\<and> poly p x = 0} =\n                        {x. poly p x = 0};\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; ?u \\<le> x\\<rbrakk>\n      \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; x \\<le> ?l\\<rbrakk>\n      \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>l u. l \\<le> u \\<and> (\\<forall>p x. p \\<in> ps \\<and> x \\<ge> u \\<longrightarrow> sgn (poly p x) = poly_inf p) \\<and>\n              (\\<forall>p x. p \\<in> ps \\<and> x \\<le> l \\<longrightarrow> sgn (poly p x) = poly_neg_inf p)\"\n      (is \"\\<exists>l u. ?P ps l u\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)", "proof (induction rule: finite_subset_induct[OF assms(1), where A = UNIV])"], ["proof (state)\ngoal (3 subgoals):\n 1. ps \\<subseteq> UNIV\n 2. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)\n 3. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. ps \\<subseteq> UNIV\n 2. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)\n 3. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ps \\<subseteq> UNIV", "by simp"], ["proof (state)\nthis:\n  ps \\<subseteq> UNIV\n\ngoal (2 subgoals):\n 1. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)\n 2. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)\n 2. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)\n 2. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly p x) = poly_inf p) \\<and>\n       (\\<forall>p x.\n           p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly p x) = poly_neg_inf p)", "by (intro exI[of _ 42], simp)"], ["proof (state)\nthis:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> {} \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> {} \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "case prems: (3 p ps)"], ["proof (state)\nthis:\n  finite ps\n  p \\<in> UNIV\n  p \\<notin> ps\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "from prems(4)"], ["proof (chain)\npicking this:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)", "obtain l u where lu_props: \"?P ps l u\""], ["proof (prove)\nusing this:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        l \\<le> u \\<and>\n        (\\<forall>p x.\n            p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n            sgn (poly p x) = poly_inf p) \\<and>\n        (\\<forall>p x.\n            p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n            sgn (poly p x) = poly_neg_inf p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  l \\<le> u \\<and>\n  (\\<forall>p x.\n      p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n      sgn (poly p x) = poly_inf p) \\<and>\n  (\\<forall>p x.\n      p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n      sgn (poly p x) = poly_neg_inf p)\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "from poly_lim_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p", "obtain u'\n          where u'_props: \"\\<forall>x\\<ge>u'. sgn (poly p x) = poly_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        \\<forall>x\\<ge>u'. sgn (poly p x) = poly_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp add: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>u'. sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "from poly_lim_neg_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p", "obtain l'\n          where l'_props: \"\\<forall>x\\<le>l'. sgn (poly p x) = poly_neg_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<forall>x\\<le>l'. sgn (poly p x) = poly_neg_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp add: eventually_at_bot_linorder)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>l'. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>finite F; a \\<in> UNIV; a \\<notin> F;\n        \\<exists>l u.\n           l \\<le> u \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> u \\<le> x \\<longrightarrow>\n               sgn (poly p x) = poly_inf p) \\<and>\n           (\\<forall>p x.\n               p \\<in> F \\<and> x \\<le> l \\<longrightarrow>\n               sgn (poly p x) = poly_neg_inf p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l u.\n                            l \\<le> u \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                u \\<le> x \\<longrightarrow>\n                                sgn (poly p x) = poly_inf p) \\<and>\n                            (\\<forall>p x.\n                                p \\<in> insert a F \\<and>\n                                x \\<le> l \\<longrightarrow>\n                                sgn (poly p x) = poly_neg_inf p)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l u.\n       l \\<le> u \\<and>\n       (\\<forall>pa x.\n           pa \\<in> insert p ps \\<and> u \\<le> x \\<longrightarrow>\n           sgn (poly pa x) = poly_inf pa) \\<and>\n       (\\<forall>pa x.\n           pa \\<in> insert p ps \\<and> x \\<le> l \\<longrightarrow>\n           sgn (poly pa x) = poly_neg_inf pa)", "by (rule exI[of _ \"min l l'\"], rule exI[of _ \"max u u'\"],\n              insert lu_props l'_props u'_props, auto)"], ["proof (state)\nthis:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>pa x.\n         pa \\<in> insert p ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly pa x) = poly_inf pa) \\<and>\n     (\\<forall>pa x.\n         pa \\<in> insert p ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly pa x) = poly_neg_inf pa)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)", "obtain l u where lu_props: \"l \\<le> u\"\n        \"\\<And>p x. p \\<in> ps \\<Longrightarrow> u \\<le> x \\<Longrightarrow> sgn (poly p x) = poly_inf p\"\n        \"\\<And>p x. p \\<in> ps \\<Longrightarrow> x \\<le> l \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\""], ["proof (prove)\nusing this:\n  \\<exists>l u.\n     l \\<le> u \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> u \\<le> x \\<longrightarrow>\n         sgn (poly p x) = poly_inf p) \\<and>\n     (\\<forall>p x.\n         p \\<in> ps \\<and> x \\<le> l \\<longrightarrow>\n         sgn (poly p x) = poly_neg_inf p)\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  l \\<le> u\n  \\<lbrakk>?p \\<in> ps; u \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> sgn (poly ?p ?x) = poly_inf ?p\n  \\<lbrakk>?p \\<in> ps; ?x \\<le> l\\<rbrakk>\n  \\<Longrightarrow> sgn (poly ?p ?x) = poly_neg_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  l \\<le> u\n  \\<lbrakk>?p \\<in> ps; u \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> sgn (poly ?p ?x) = poly_inf ?p\n  \\<lbrakk>?p \\<in> ps; ?x \\<le> l\\<rbrakk>\n  \\<Longrightarrow> sgn (poly ?p ?x) = poly_neg_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  l \\<le> u\n  \\<lbrakk>?p \\<in> ps; u \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> sgn (poly ?p ?x) = poly_inf ?p\n  \\<lbrakk>?p \\<in> ps; ?x \\<le> l\\<rbrakk>\n  \\<Longrightarrow> sgn (poly ?p ?x) = poly_neg_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix p x"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume A: \"p \\<in> ps\" \"p \\<noteq> 0\" \"poly p x = 0\""], ["proof (state)\nthis:\n  p \\<in> ps\n  p \\<noteq> 0\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from A"], ["proof (chain)\npicking this:\n  p \\<in> ps\n  p \\<noteq> 0\n  poly p x = 0", "have \"l < x\" \"x < u\""], ["proof (prove)\nusing this:\n  p \\<in> ps\n  p \\<noteq> 0\n  poly p x = 0\n\ngoal (1 subgoal):\n 1. l < x &&& x < u", "by (auto simp: not_le[symmetric] dest: lu_props(2,3))"], ["proof (state)\nthis:\n  l < x\n  x < u\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 \\<in> ps; ?p2 \\<noteq> 0; poly ?p2 ?x2 = 0\\<rbrakk>\n  \\<Longrightarrow> l < ?x2\n  \\<lbrakk>?p2 \\<in> ps; ?p2 \\<noteq> 0; poly ?p2 ?x2 = 0\\<rbrakk>\n  \\<Longrightarrow> ?x2 < u\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note A = this"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 \\<in> ps; ?p2 \\<noteq> 0; poly ?p2 ?x2 = 0\\<rbrakk>\n  \\<Longrightarrow> l < ?x2\n  \\<lbrakk>?p2 \\<in> ps; ?p2 \\<noteq> 0; poly ?p2 ?x2 = 0\\<rbrakk>\n  \\<Longrightarrow> ?x2 < u\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>p. p \\<in> ps \\<Longrightarrow> p \\<noteq> 0 \\<Longrightarrow>\n                 {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} = {x. poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> {x. l < x \\<and> x \\<le> u \\<and> poly p x = 0} =\n                         {x. poly p x = 0}", "by (auto dest: A)"], ["proof (state)\nthis:\n  \\<lbrakk>?p \\<in> ps; ?p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> {x. l < x \\<and> x \\<le> u \\<and> poly ?p x = 0} =\n                    {x. poly ?p x = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<le> u;\n         \\<And>p.\n            \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n            \\<Longrightarrow> {x. l < x \\<and>\n                                  x \\<le> u \\<and> poly p x = 0} =\n                              {x. poly p x = 0};\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_inf p;\n         \\<And>p x.\n            \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n            \\<Longrightarrow> sgn (poly p x) = poly_neg_inf p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from prems[OF lu_props(1) this lu_props(2,3)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>p.\n              \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n              \\<Longrightarrow> p \\<in> ps;\n   \\<And>p.\n      \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> p \\<noteq> 0;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk> \\<Longrightarrow> p \\<in> ps;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk> \\<Longrightarrow> u \\<le> x;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk> \\<Longrightarrow> p \\<in> ps;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n      \\<Longrightarrow> x \\<le> l\\<rbrakk>\n  \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>p.\n              \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n              \\<Longrightarrow> p \\<in> ps;\n   \\<And>p.\n      \\<lbrakk>p \\<in> ps; p \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> p \\<noteq> 0;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk> \\<Longrightarrow> p \\<in> ps;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; u \\<le> x\\<rbrakk> \\<Longrightarrow> u \\<le> x;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk> \\<Longrightarrow> p \\<in> ps;\n   \\<And>p x.\n      \\<lbrakk>p \\<in> ps; x \\<le> l\\<rbrakk>\n      \\<Longrightarrow> x \\<le> l\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Positivity of polynomials\\<close>"], ["", "lemma poly_pos:\n  \"(\\<forall>x::real. poly p x > 0) \\<longleftrightarrow> poly_inf p = 1 \\<and> (\\<forall>x. poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. 0 < poly p x) =\n    (poly_inf p = 1 \\<and> (\\<forall>x. poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "assume A: \"\\<forall>x::real. poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>x. poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "from poly_lim_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p", "obtain x where \"sgn (poly p x) = poly_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        sgn (poly p x) = poly_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  sgn (poly p x) = poly_inf p\n\ngoal (2 subgoals):\n 1. \\<forall>x. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. 0 < poly p x\n  sgn (poly p x) = poly_inf p", "show \"poly_inf p = 1\""], ["proof (prove)\nusing this:\n  \\<forall>x. 0 < poly p x\n  sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. poly_inf p = 1", "by (simp add: sgn_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  poly_inf p = 1\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "assume \"poly_inf p = 1 \\<and> (\\<forall>x. poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  poly_inf p = 1 \\<and> (\\<forall>x. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "hence A: \"poly_inf p = 1\" and B: \"(\\<forall>x. poly p x \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  poly_inf p = 1 \\<and> (\\<forall>x. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 &&& \\<forall>x. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_inf p = 1\n  \\<forall>x. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "from poly_lim_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p", "obtain x where C: \"sgn (poly p x) = poly_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        sgn (poly p x) = poly_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. 0 < poly p x", "show \"\\<forall>x. poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. 0 < poly p x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x. 0 < poly p x) \\<Longrightarrow> False", "assume \"\\<not>(\\<forall>x. poly p x > 0)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x. 0 < poly p x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x. 0 < poly p x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>x. 0 < poly p x)", "obtain x' where \"poly p x' \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x. 0 < poly p x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'. poly p x' \\<le> 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: not_less)"], ["proof (state)\nthis:\n  poly p x' \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x. 0 < poly p x) \\<Longrightarrow> False", "with A and C"], ["proof (chain)\npicking this:\n  poly_inf p = 1\n  sgn (poly p x) = poly_inf p\n  poly p x' \\<le> 0", "have \"sgn (poly p x') \\<noteq> sgn (poly p x)\""], ["proof (prove)\nusing this:\n  poly_inf p = 1\n  sgn (poly p x) = poly_inf p\n  poly p x' \\<le> 0\n\ngoal (1 subgoal):\n 1. sgn (poly p x') \\<noteq> sgn (poly p x)", "by (auto simp: sgn_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  sgn (poly p x') \\<noteq> sgn (poly p x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x. 0 < poly p x) \\<Longrightarrow> False", "from poly_different_sign_imp_root'[OF this] and B"], ["proof (chain)\npicking this:\n  \\<exists>x. poly p x = 0\n  \\<forall>x. poly p x \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  \\<exists>x. poly p x = 0\n  \\<forall>x. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_greater:\n  \"(\\<forall>x::real. x > a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_inf p = 1 \\<and> (\\<forall>x. x > a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x>a. 0 < poly p x) =\n    (poly_inf p = 1 \\<and> (\\<forall>x>a. poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "assume A: \"\\<forall>x::real. x > a \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x>a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x>a. 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. x > a \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x>a. 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x>a. poly p x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "from poly_lim_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p", "obtain x\\<^sub>0 where\n      \"\\<forall>x\\<ge>x\\<^sub>0. sgn (poly p x) = poly_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        \\<forall>x\\<ge>x\\<^sub>0.\n           sgn (poly p x) = poly_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>x\\<^sub>0. sgn (poly p x) = poly_inf p\n\ngoal (2 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "hence \"poly_inf p = sgn (poly p (max x\\<^sub>0 (a + 1)))\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>x\\<^sub>0. sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. poly_inf p = sgn (poly p (max x\\<^sub>0 (a + 1)))", "by simp"], ["proof (state)\nthis:\n  poly_inf p = sgn (poly p (max x\\<^sub>0 (a + 1)))\n\ngoal (2 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "also"], ["proof (state)\nthis:\n  poly_inf p = sgn (poly p (max x\\<^sub>0 (a + 1)))\n\ngoal (2 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x>a. 0 < poly p x", "have \"... = 1\""], ["proof (prove)\nusing this:\n  \\<forall>x>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. sgn (poly p (max x\\<^sub>0 (a + 1))) = 1", "by force"], ["proof (state)\nthis:\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = 1\n\ngoal (2 subgoals):\n 1. \\<forall>x>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "finally"], ["proof (chain)\npicking this:\n  poly_inf p = 1", "show \"poly_inf p = 1\""], ["proof (prove)\nusing this:\n  poly_inf p = 1\n\ngoal (1 subgoal):\n 1. poly_inf p = 1", "."], ["proof (state)\nthis:\n  poly_inf p = 1\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "assume \"poly_inf p = 1 \\<and> (\\<forall>x. x > a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  poly_inf p = 1 \\<and> (\\<forall>x>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "hence A: \"poly_inf p = 1\" and\n        B: \"(\\<forall>x. x > a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  poly_inf p = 1 \\<and> (\\<forall>x>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 &&& \\<forall>x>a. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "from poly_lim_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p", "obtain x\\<^sub>0 where\n      C: \"\\<forall>x\\<ge>x\\<^sub>0. sgn (poly p x) = poly_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        \\<forall>x\\<ge>x\\<^sub>0.\n           sgn (poly p x) = poly_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>x\\<^sub>0. sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "hence \"sgn (poly p (max x\\<^sub>0 (a+1))) = poly_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>x\\<^sub>0. sgn (poly p x) = poly_inf p\n\ngoal (1 subgoal):\n 1. sgn (poly p (max x\\<^sub>0 (a + 1))) = poly_inf p", "by simp"], ["proof (state)\nthis:\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = poly_inf p\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  poly_inf p = 1\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = poly_inf p", "have D: \"sgn (poly p (max x\\<^sub>0 (a+1))) = 1\""], ["proof (prove)\nusing this:\n  poly_inf p = 1\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = poly_inf p\n\ngoal (1 subgoal):\n 1. sgn (poly p (max x\\<^sub>0 (a + 1))) = 1", "by simp"], ["proof (state)\nthis:\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = 1\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x>a. 0 < poly p x", "show \"\\<forall>x. x > a \\<longrightarrow> poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x>a. 0 < poly p x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x>a. 0 < poly p x) \\<Longrightarrow> False", "assume \"\\<not>(\\<forall>x. x > a \\<longrightarrow> poly p x > 0)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x>a. 0 < poly p x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x>a. 0 < poly p x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>x>a. 0 < poly p x)", "obtain x' where \"x' > a\" \"poly p x' \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x>a. 0 < poly p x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>a < x'; poly p x' \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: not_less)"], ["proof (state)\nthis:\n  a < x'\n  poly p x' \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x>a. 0 < poly p x) \\<Longrightarrow> False", "with A and D"], ["proof (chain)\npicking this:\n  poly_inf p = 1\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = 1\n  a < x'\n  poly p x' \\<le> 0", "have E: \"sgn (poly p x') \\<noteq> sgn (poly p (max x\\<^sub>0(a+1)))\""], ["proof (prove)\nusing this:\n  poly_inf p = 1\n  sgn (poly p (max x\\<^sub>0 (a + 1))) = 1\n  a < x'\n  poly p x' \\<le> 0\n\ngoal (1 subgoal):\n 1. sgn (poly p x') \\<noteq> sgn (poly p (max x\\<^sub>0 (a + 1)))", "by (auto simp: sgn_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  sgn (poly p x') \\<noteq> sgn (poly p (max x\\<^sub>0 (a + 1)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x>a. 0 < poly p x) \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "apply (cases x' \"max x\\<^sub>0 (a+1)\" rule: linorder_cases)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x' < max x\\<^sub>0 (a + 1) \\<Longrightarrow> False\n 2. x' = max x\\<^sub>0 (a + 1) \\<Longrightarrow> False\n 3. max x\\<^sub>0 (a + 1) < x' \\<Longrightarrow> False", "using B E \\<open>x' > a\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x>a. poly p x \\<noteq> 0\n  sgn (poly p x') \\<noteq> sgn (poly p (max x\\<^sub>0 (a + 1)))\n  a < x'\n\ngoal (3 subgoals):\n 1. x' < max x\\<^sub>0 (a + 1) \\<Longrightarrow> False\n 2. x' = max x\\<^sub>0 (a + 1) \\<Longrightarrow> False\n 3. max x\\<^sub>0 (a + 1) < x' \\<Longrightarrow> False", "apply (force dest!: poly_different_sign_imp_root[of _ _ p])+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x>a. 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_geq:\n  \"(\\<forall>x::real. x \\<ge> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_inf p = 1 \\<and> (\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<ge>a. 0 < poly p x) =\n    (poly_inf p = 1 \\<and> (\\<forall>x\\<ge>a. poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "assume A: \"\\<forall>x::real. x \\<ge> a \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x\\<ge>a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "hence \"\\<forall>x::real. x > a \\<longrightarrow> poly p x > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. \\<forall>x>a. 0 < poly p x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x>a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "also"], ["proof (state)\nthis:\n  \\<forall>x>a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "note poly_pos_greater"], ["proof (state)\nthis:\n  (\\<forall>x>?a. 0 < poly ?p x) =\n  (poly_inf ?p = 1 \\<and> (\\<forall>x>?a. poly ?p x \\<noteq> 0))\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "finally"], ["proof (chain)\npicking this:\n  poly_inf p = 1 \\<and> (\\<forall>x>a. poly p x \\<noteq> 0)", "have \"poly_inf p = 1\" \"(\\<forall>x>a. poly p x \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  poly_inf p = 1 \\<and> (\\<forall>x>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 &&& \\<forall>x>a. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "moreover"], ["proof (state)\nthis:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x\\<ge>a. 0 < poly p x", "have \"poly p a > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by simp"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow> poly_inf p = 1\n 2. \\<forall>x\\<ge>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n 3. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "ultimately"], ["proof (chain)\npicking this:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n  0 < poly p a", "show \"poly_inf p = 1\" \"\\<forall>x\\<ge>a. poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 &&& \\<forall>x\\<ge>a. poly p x \\<noteq> 0", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  poly_inf p = 1\n  \\<forall>x\\<ge>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "assume \"poly_inf p = 1 \\<and> (\\<forall>x. x \\<ge> a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  poly_inf p = 1 \\<and> (\\<forall>x\\<ge>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "hence A: \"poly_inf p = 1\" and\n        B: \"poly p a \\<noteq> 0\" and C: \"\\<forall>x>a. poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_inf p = 1 \\<and> (\\<forall>x\\<ge>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 &&&\n    poly p a \\<noteq> 0 &&& \\<forall>x>a. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_inf p = 1\n  poly p a \\<noteq> 0\n  \\<forall>x>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "from A and C and poly_pos_greater"], ["proof (chain)\npicking this:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n  (\\<forall>x>?a. 0 < poly ?p x) =\n  (poly_inf ?p = 1 \\<and> (\\<forall>x>?a. poly ?p x \\<noteq> 0))", "have \"\\<forall>x>a. poly p x > 0\""], ["proof (prove)\nusing this:\n  poly_inf p = 1\n  \\<forall>x>a. poly p x \\<noteq> 0\n  (\\<forall>x>?a. 0 < poly ?p x) =\n  (poly_inf ?p = 1 \\<and> (\\<forall>x>?a. poly ?p x \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. \\<forall>x>a. 0 < poly p x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "moreover"], ["proof (state)\nthis:\n  \\<forall>x>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "with B C poly_IVT_pos[of a \"a+1\" p]"], ["proof (chain)\npicking this:\n  poly p a \\<noteq> 0\n  \\<forall>x>a. poly p x \\<noteq> 0\n  \\<lbrakk>a < a + 1; poly p a < 0; 0 < poly p (a + 1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x>a. x < a + 1 \\<and> poly p x = 0\n  \\<forall>x>a. 0 < poly p x", "have \"poly p a > 0\""], ["proof (prove)\nusing this:\n  poly p a \\<noteq> 0\n  \\<forall>x>a. poly p x \\<noteq> 0\n  \\<lbrakk>a < a + 1; poly p a < 0; 0 < poly p (a + 1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x>a. x < a + 1 \\<and> poly p x = 0\n  \\<forall>x>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by force"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. poly_inf p = 1 \\<and>\n    (\\<forall>x\\<ge>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<ge>a. 0 < poly p x", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x>a. 0 < poly p x\n  0 < poly p a", "show \"\\<forall>x\\<ge>a. poly p x > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x>a. 0 < poly p x\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<ge>a. 0 < poly p x", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>a. 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_less:\n  \"(\\<forall>x::real. x < a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_neg_inf p = 1 \\<and> (\\<forall>x. x < a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x<a. 0 < poly p x) =\n    (poly_neg_inf p = 1 \\<and> (\\<forall>x<a. poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x<a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "assume A: \"\\<forall>x::real. x < a \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x<a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x<a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x<a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x<a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x<a. 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. x < a \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x<a. 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x<a. poly p x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "from poly_lim_neg_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p", "obtain x\\<^sub>0 where\n      \"\\<forall>x\\<le>x\\<^sub>0. sgn (poly p x) = poly_neg_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        \\<forall>x\\<le>x\\<^sub>0.\n           sgn (poly p x) = poly_neg_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_bot_linorder)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>x\\<^sub>0. sgn (poly p x) = poly_neg_inf p\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "hence \"poly_neg_inf p = sgn (poly p (min x\\<^sub>0 (a - 1)))\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>x\\<^sub>0. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = sgn (poly p (min x\\<^sub>0 (a - 1)))", "by simp"], ["proof (state)\nthis:\n  poly_neg_inf p = sgn (poly p (min x\\<^sub>0 (a - 1)))\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "also"], ["proof (state)\nthis:\n  poly_neg_inf p = sgn (poly p (min x\\<^sub>0 (a - 1)))\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x<a. 0 < poly p x", "have \"... = 1\""], ["proof (prove)\nusing this:\n  \\<forall>x<a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. sgn (poly p (min x\\<^sub>0 (a - 1))) = 1", "by force"], ["proof (state)\nthis:\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = 1\n\ngoal (2 subgoals):\n 1. \\<forall>x<a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "finally"], ["proof (chain)\npicking this:\n  poly_neg_inf p = 1", "show \"poly_neg_inf p = 1\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1", "."], ["proof (state)\nthis:\n  poly_neg_inf p = 1\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "assume \"poly_neg_inf p = 1 \\<and> (\\<forall>x. x < a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  poly_neg_inf p = 1 \\<and> (\\<forall>x<a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "hence A: \"poly_neg_inf p = 1\" and\n        B: \"(\\<forall>x. x < a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1 \\<and> (\\<forall>x<a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 &&& \\<forall>x<a. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "from poly_lim_neg_inf"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p", "obtain x\\<^sub>0 where\n      C: \"\\<forall>x\\<le>x\\<^sub>0. sgn (poly p x) = poly_neg_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p\n\ngoal (1 subgoal):\n 1. (\\<And>x\\<^sub>0.\n        \\<forall>x\\<le>x\\<^sub>0.\n           sgn (poly p x) = poly_neg_inf p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_bot_linorder)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>x\\<^sub>0. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "hence \"sgn (poly p (min x\\<^sub>0 (a - 1))) = poly_neg_inf p\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>x\\<^sub>0. sgn (poly p x) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. sgn (poly p (min x\\<^sub>0 (a - 1))) = poly_neg_inf p", "by simp"], ["proof (state)\nthis:\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  poly_neg_inf p = 1\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = poly_neg_inf p", "have D: \"sgn (poly p (min x\\<^sub>0 (a - 1))) = 1\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = poly_neg_inf p\n\ngoal (1 subgoal):\n 1. sgn (poly p (min x\\<^sub>0 (a - 1))) = 1", "by simp"], ["proof (state)\nthis:\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = 1\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x<a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x<a. 0 < poly p x", "show \"\\<forall>x. x < a \\<longrightarrow> poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x<a. 0 < poly p x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x<a. 0 < poly p x) \\<Longrightarrow> False", "assume \"\\<not>(\\<forall>x. x < a \\<longrightarrow> poly p x > 0)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x<a. 0 < poly p x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x<a. 0 < poly p x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>x<a. 0 < poly p x)", "obtain x' where \"x' < a\" \"poly p x' \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x<a. 0 < poly p x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' < a; poly p x' \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: not_less)"], ["proof (state)\nthis:\n  x' < a\n  poly p x' \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x<a. 0 < poly p x) \\<Longrightarrow> False", "with A and D"], ["proof (chain)\npicking this:\n  poly_neg_inf p = 1\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = 1\n  x' < a\n  poly p x' \\<le> 0", "have E: \"sgn (poly p x') \\<noteq> sgn (poly p (min x\\<^sub>0 (a - 1)))\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1\n  sgn (poly p (min x\\<^sub>0 (a - 1))) = 1\n  x' < a\n  poly p x' \\<le> 0\n\ngoal (1 subgoal):\n 1. sgn (poly p x') \\<noteq> sgn (poly p (min x\\<^sub>0 (a - 1)))", "by (auto simp: sgn_real_def split: if_split_asm)"], ["proof (state)\nthis:\n  sgn (poly p x') \\<noteq> sgn (poly p (min x\\<^sub>0 (a - 1)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x<a. 0 < poly p x) \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "apply (cases x' \"min x\\<^sub>0 (a - 1)\" rule: linorder_cases)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x' < min x\\<^sub>0 (a - 1) \\<Longrightarrow> False\n 2. x' = min x\\<^sub>0 (a - 1) \\<Longrightarrow> False\n 3. min x\\<^sub>0 (a - 1) < x' \\<Longrightarrow> False", "using B E \\<open>x' < a\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x<a. poly p x \\<noteq> 0\n  sgn (poly p x') \\<noteq> sgn (poly p (min x\\<^sub>0 (a - 1)))\n  x' < a\n\ngoal (3 subgoals):\n 1. x' < min x\\<^sub>0 (a - 1) \\<Longrightarrow> False\n 2. x' = min x\\<^sub>0 (a - 1) \\<Longrightarrow> False\n 3. min x\\<^sub>0 (a - 1) < x' \\<Longrightarrow> False", "apply (auto dest!: poly_different_sign_imp_root[of _ _ p])+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x<a. 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_leq:\n  \"(\\<forall>x::real. x \\<le> a \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    poly_neg_inf p = 1 \\<and> (\\<forall>x. x \\<le> a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<le>a. 0 < poly p x) =\n    (poly_neg_inf p = 1 \\<and> (\\<forall>x\\<le>a. poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "assume A: \"\\<forall>x::real. x \\<le> a \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x\\<le>a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "hence \"\\<forall>x::real. x < a \\<longrightarrow> poly p x > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. \\<forall>x<a. 0 < poly p x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x<a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "also"], ["proof (state)\nthis:\n  \\<forall>x<a. 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "note poly_pos_less"], ["proof (state)\nthis:\n  (\\<forall>x<?a. 0 < poly ?p x) =\n  (poly_neg_inf ?p = 1 \\<and> (\\<forall>x<?a. poly ?p x \\<noteq> 0))\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "finally"], ["proof (chain)\npicking this:\n  poly_neg_inf p = 1 \\<and> (\\<forall>x<a. poly p x \\<noteq> 0)", "have \"poly_neg_inf p = 1\" \"(\\<forall>x<a. poly p x \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1 \\<and> (\\<forall>x<a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 &&& \\<forall>x<a. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "moreover"], ["proof (state)\nthis:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x\\<le>a. 0 < poly p x", "have \"poly p a > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by simp"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (3 subgoals):\n 1. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow> poly_neg_inf p = 1\n 2. \\<forall>x\\<le>a. 0 < poly p x \\<Longrightarrow>\n    \\<forall>x\\<le>a. poly p x \\<noteq> 0\n 3. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "ultimately"], ["proof (chain)\npicking this:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n  0 < poly p a", "show \"poly_neg_inf p = 1\" \"\\<forall>x\\<le>a. poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 &&& \\<forall>x\\<le>a. poly p x \\<noteq> 0", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  poly_neg_inf p = 1\n  \\<forall>x\\<le>a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "assume \"poly_neg_inf p = 1 \\<and> (\\<forall>x. x \\<le> a \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  poly_neg_inf p = 1 \\<and> (\\<forall>x\\<le>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "hence A: \"poly_neg_inf p = 1\" and\n        B: \"poly p a \\<noteq> 0\" and C: \"\\<forall>x<a. poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1 \\<and> (\\<forall>x\\<le>a. poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 &&&\n    poly p a \\<noteq> 0 &&& \\<forall>x<a. poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  poly_neg_inf p = 1\n  poly p a \\<noteq> 0\n  \\<forall>x<a. poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "from A and C and poly_pos_less"], ["proof (chain)\npicking this:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n  (\\<forall>x<?a. 0 < poly ?p x) =\n  (poly_neg_inf ?p = 1 \\<and> (\\<forall>x<?a. poly ?p x \\<noteq> 0))", "have \"\\<forall>x<a. poly p x > 0\""], ["proof (prove)\nusing this:\n  poly_neg_inf p = 1\n  \\<forall>x<a. poly p x \\<noteq> 0\n  (\\<forall>x<?a. 0 < poly ?p x) =\n  (poly_neg_inf ?p = 1 \\<and> (\\<forall>x<?a. poly ?p x \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. \\<forall>x<a. 0 < poly p x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x<a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "moreover"], ["proof (state)\nthis:\n  \\<forall>x<a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "with B C poly_IVT_neg[of \"a - 1\" a p]"], ["proof (chain)\npicking this:\n  poly p a \\<noteq> 0\n  \\<forall>x<a. poly p x \\<noteq> 0\n  \\<lbrakk>a - 1 < a; 0 < poly p (a - 1); poly p a < 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x>a - 1. x < a \\<and> poly p x = 0\n  \\<forall>x<a. 0 < poly p x", "have \"poly p a > 0\""], ["proof (prove)\nusing this:\n  poly p a \\<noteq> 0\n  \\<forall>x<a. poly p x \\<noteq> 0\n  \\<lbrakk>a - 1 < a; 0 < poly p (a - 1); poly p a < 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x>a - 1. x < a \\<and> poly p x = 0\n  \\<forall>x<a. 0 < poly p x\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by force"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. poly_neg_inf p = 1 \\<and>\n    (\\<forall>x\\<le>a. poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x\\<le>a. 0 < poly p x", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x<a. 0 < poly p x\n  0 < poly p a", "show \"\\<forall>x\\<le>a. poly p x > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x<a. 0 < poly p x\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<le>a. 0 < poly p x", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>a. 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_between_less_less:\n  \"(\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a \\<ge> b \\<or> poly p ((a+b)/2) > 0) \\<and> (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x) =\n    ((b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n     (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n 2. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "assume A: \"\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n 2. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n 2. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x < b \\<longrightarrow> 0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n 2. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "show \"a \\<ge> b \\<or> poly p ((a+b)/2) > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or> 0 < poly p ((a + b) / 2)", "by (cases \"a < b\", auto)"], ["proof (state)\nthis:\n  b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "assume \"(b \\<le> a \\<or> 0 < poly p ((a+b)/2)) \\<and> (\\<forall>x. a<x \\<and> x<b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n  (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "hence A: \"b \\<le> a \\<or> 0 < poly p ((a+b)/2)\" and\n        B: \"\\<forall>x. a<x \\<and> x<b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n  (\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or> 0 < poly p ((a + b) / 2) &&&\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p ((a + b) / 2)) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "show \"\\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x", "proof (cases \"a \\<ge> b\", simp, clarify, rule_tac ccontr,\n         simp only: not_le not_less)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"a < b\" \"a < x\" \"x < b\" \"poly p x \\<le> 0\""], ["proof (state)\nthis:\n  a < b\n  a < x\n  x < b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "with B"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  a < b\n  a < x\n  x < b\n  poly p x \\<le> 0", "have \"poly p x < 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  a < b\n  a < x\n  x < b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. poly p x < 0", "by (simp add: less_eq_real_def)"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from A and \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n  a < b", "have \"poly p ((a+b)/2) > 0\""], ["proof (prove)\nusing this:\n  b \\<le> a \\<or> 0 < poly p ((a + b) / 2)\n  a < b\n\ngoal (1 subgoal):\n 1. 0 < poly p ((a + b) / 2)", "by simp"], ["proof (state)\nthis:\n  0 < poly p ((a + b) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p ((a + b) / 2)", "have \"sgn (poly p x) \\<noteq> sgn (poly p ((a+b)/2))\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p ((a + b) / 2)\n\ngoal (1 subgoal):\n 1. sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2))", "by simp"], ["proof (state)\nthis:\n  sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2))\n\ngoal (1 subgoal):\n 1. False", "using B"], ["proof (prove)\nusing this:\n  sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2))\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "apply (cases x \"(a+b)/2\" rule: linorder_cases)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2));\n     \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0;\n     x < (a + b) / 2\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2));\n     \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0;\n     x = (a + b) / 2\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2));\n     \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0;\n     (a + b) / 2 < x\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule poly_different_sign_imp_root[of _ _ p], assumption,\n              insert \\<open>a < b\\<close> \\<open>a < x\\<close> \\<open>x < b\\<close> , force) []"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2));\n     \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0;\n     x = (a + b) / 2\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2));\n     \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0;\n     (a + b) / 2 < x\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sgn (poly p x) \\<noteq> sgn (poly p ((a + b) / 2));\n     \\<forall>x. a < x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0;\n     (a + b) / 2 < x\\<rbrakk>\n    \\<Longrightarrow> False", "apply (drule poly_different_sign_imp_root[of _ _ p], simp,\n              insert \\<open>a < b\\<close> \\<open>a < x\\<close> \\<open>x < b\\<close> , force)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x < b \\<longrightarrow> 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_between_less_leq:\n  \"(\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a \\<ge> b \\<or> poly p b > 0) \\<and> (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x) =\n    ((b \\<le> a \\<or> 0 < poly p b) \\<and>\n     (\\<forall>x.\n         a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p b\n 2. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "assume A: \"\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p b\n 2. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p b\n 2. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a < x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p b\n 2. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "show \"a \\<ge> b \\<or> poly p b > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or> 0 < poly p b", "by (cases \"a < b\", auto)"], ["proof (state)\nthis:\n  b \\<le> a \\<or> 0 < poly p b\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "assume \"(b \\<le> a \\<or> 0 < poly p b) \\<and> (\\<forall>x. a<x \\<and> x\\<le>b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  (b \\<le> a \\<or> 0 < poly p b) \\<and>\n  (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "hence A: \"b \\<le> a \\<or> 0 < poly p b\" and B: \"\\<forall>x. a<x \\<and> x\\<le>b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (b \\<le> a \\<or> 0 < poly p b) \\<and>\n  (\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or> 0 < poly p b &&&\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  b \\<le> a \\<or> 0 < poly p b\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p b) \\<and>\n    (\\<forall>x.\n        a < x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "show \"\\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "proof (cases \"a \\<ge> b\", simp, clarify, rule_tac ccontr,\n         simp only: not_le not_less)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"a < b\" \"a < x\" \"x \\<le> b\" \"poly p x \\<le> 0\""], ["proof (state)\nthis:\n  a < b\n  a < x\n  x \\<le> b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "with B"], ["proof (chain)\npicking this:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  a < b\n  a < x\n  x \\<le> b\n  poly p x \\<le> 0", "have \"poly p x < 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  a < b\n  a < x\n  x \\<le> b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. poly p x < 0", "by (simp add: less_eq_real_def)"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from A and \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  b \\<le> a \\<or> 0 < poly p b\n  a < b", "have \"poly p b > 0\""], ["proof (prove)\nusing this:\n  b \\<le> a \\<or> 0 < poly p b\n  a < b\n\ngoal (1 subgoal):\n 1. 0 < poly p b", "by simp"], ["proof (state)\nthis:\n  0 < poly p b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p b", "have \"x < b\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p b\n\ngoal (1 subgoal):\n 1. x < b", "using \\<open>x \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p b\n  x \\<le> b\n\ngoal (1 subgoal):\n 1. x < b", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  x < b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>poly p x < 0\\<close> and \\<open>poly p b > 0\\<close>"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p b", "have \"sgn (poly p x) \\<noteq> sgn (poly p b)\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p b\n\ngoal (1 subgoal):\n 1. sgn (poly p x) \\<noteq> sgn (poly p b)", "by simp"], ["proof (state)\nthis:\n  sgn (poly p x) \\<noteq> sgn (poly p b)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a < x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from poly_different_sign_imp_root[OF \\<open>x < b\\<close> this] and B and \\<open>x > a\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>xa\\<ge>x. xa \\<le> b \\<and> poly p xa = 0\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  a < x", "show False"], ["proof (prove)\nusing this:\n  \\<exists>xa\\<ge>x. xa \\<le> b \\<and> poly p xa = 0\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  a < x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. a < x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_between_leq_less:\n  \"(\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a \\<ge> b \\<or> poly p a > 0) \\<and> (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x) =\n    ((b \\<le> a \\<or> 0 < poly p a) \\<and>\n     (\\<forall>x.\n         a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p a\n 2. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "assume A: \"\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p a\n 2. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p a\n 2. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x < b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b \\<le> a \\<or> 0 < poly p a\n 2. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "show \"a \\<ge> b \\<or> poly p a > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or> 0 < poly p a", "by (cases \"a < b\", auto)"], ["proof (state)\nthis:\n  b \\<le> a \\<or> 0 < poly p a\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "assume \"(b \\<le> a \\<or> 0 < poly p a) \\<and> (\\<forall>x. a\\<le>x \\<and> x<b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  (b \\<le> a \\<or> 0 < poly p a) \\<and>\n  (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "hence A: \"b \\<le> a \\<or> 0 < poly p a\" and B: \"\\<forall>x. a\\<le>x \\<and> x<b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (b \\<le> a \\<or> 0 < poly p a) \\<and>\n  (\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b \\<le> a \\<or> 0 < poly p a &&&\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  b \\<le> a \\<or> 0 < poly p a\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (b \\<le> a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x < b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "show \"\\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x", "proof (cases \"a \\<ge> b\", simp, clarify, rule_tac ccontr,\n         simp only: not_le not_less)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"a < b\" \"a \\<le> x\" \"x < b\" \"poly p x \\<le> 0\""], ["proof (state)\nthis:\n  a < b\n  a \\<le> x\n  x < b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "with B"], ["proof (chain)\npicking this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  a < b\n  a \\<le> x\n  x < b\n  poly p x \\<le> 0", "have \"poly p x < 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  a < b\n  a \\<le> x\n  x < b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. poly p x < 0", "by (simp add: less_eq_real_def)"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from A and \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  b \\<le> a \\<or> 0 < poly p a\n  a < b", "have \"poly p a > 0\""], ["proof (prove)\nusing this:\n  b \\<le> a \\<or> 0 < poly p a\n  a < b\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by simp"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p a", "have \"x > a\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. a < x", "using \\<open>x \\<ge> a\\<close>"], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p a\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. a < x", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  a < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>poly p x < 0\\<close> and \\<open>poly p a > 0\\<close>"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p a", "have \"sgn (poly p a) \\<noteq> sgn (poly p x)\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. sgn (poly p a) \\<noteq> sgn (poly p x)", "by simp"], ["proof (state)\nthis:\n  sgn (poly p a) \\<noteq> sgn (poly p x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a < b; a \\<le> x; x < b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from poly_different_sign_imp_root[OF \\<open>x > a\\<close> this] and B and \\<open>x < b\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>xa\\<ge>a. xa \\<le> x \\<and> poly p xa = 0\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  x < b", "show False"], ["proof (prove)\nusing this:\n  \\<exists>xa\\<ge>a. xa \\<le> x \\<and> poly p xa = 0\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> poly p x \\<noteq> 0\n  x < b\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x < b \\<longrightarrow> 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poly_pos_between_leq_leq:\n  \"(\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0) \\<longleftrightarrow>\n    (a > b \\<or> poly p a > 0) \\<and> (\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x) =\n    ((b < a \\<or> 0 < poly p a) \\<and>\n     (\\<forall>x.\n         a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0))", "proof (intro iffI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b < a \\<or> 0 < poly p a\n 2. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "assume A: \"\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0\""], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b < a \\<or> 0 < poly p a\n 2. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "have \"\\<And>x. poly p (x::real) > 0 \\<Longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 < poly p x \\<Longrightarrow> poly p x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b < a \\<or> 0 < poly p a\n 2. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n 3. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "with A"], ["proof (chain)\npicking this:\n  \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0", "show \"\\<forall>x::real. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n  0 < poly p ?x \\<Longrightarrow> poly p ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n       0 < poly p x \\<Longrightarrow>\n    b < a \\<or> 0 < poly p a\n 2. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "show \"a > b \\<or> poly p a > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n\ngoal (1 subgoal):\n 1. b < a \\<or> 0 < poly p a", "by (cases \"a \\<le> b\", auto)"], ["proof (state)\nthis:\n  b < a \\<or> 0 < poly p a\n\ngoal (1 subgoal):\n 1. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "assume \"(b < a \\<or> 0 < poly p a) \\<and> (\\<forall>x. a\\<le>x \\<and> x\\<le>b \\<longrightarrow> poly p x \\<noteq> 0)\""], ["proof (state)\nthis:\n  (b < a \\<or> 0 < poly p a) \\<and>\n  (\\<forall>x.\n      a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "hence A: \"b < a \\<or> 0 < poly p a\" and B: \"\\<forall>x. a\\<le>x \\<and> x\\<le>b \\<longrightarrow> poly p x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (b < a \\<or> 0 < poly p a) \\<and>\n  (\\<forall>x.\n      a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b < a \\<or> 0 < poly p a &&&\n    \\<forall>x.\n       a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  b < a \\<or> 0 < poly p a\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (b < a \\<or> 0 < poly p a) \\<and>\n    (\\<forall>x.\n        a \\<le> x \\<and> x \\<le> b \\<longrightarrow>\n        poly p x \\<noteq> 0) \\<Longrightarrow>\n    \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "show \"\\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x", "proof (cases \"a > b\", simp, clarify, rule_tac ccontr,\n         simp only: not_le not_less)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"a \\<le> b\" \"a \\<le> x\" \"x \\<le> b\" \"poly p x \\<le> 0\""], ["proof (state)\nthis:\n  a \\<le> b\n  a \\<le> x\n  x \\<le> b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "with B"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  a \\<le> b\n  a \\<le> x\n  x \\<le> b\n  poly p x \\<le> 0", "have \"poly p x < 0\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  a \\<le> b\n  a \\<le> x\n  x \\<le> b\n  poly p x \\<le> 0\n\ngoal (1 subgoal):\n 1. poly p x < 0", "by (simp add: less_eq_real_def)"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  poly p x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from A and \\<open>a \\<le> b\\<close>"], ["proof (chain)\npicking this:\n  b < a \\<or> 0 < poly p a\n  a \\<le> b", "have \"poly p a > 0\""], ["proof (prove)\nusing this:\n  b < a \\<or> 0 < poly p a\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. 0 < poly p a", "by simp"], ["proof (state)\nthis:\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p a", "have \"x > a\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. a < x", "using \\<open>x \\<ge> a\\<close>"], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p a\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. a < x", "by (auto simp: less_eq_real_def)"], ["proof (state)\nthis:\n  a < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>poly p x < 0\\<close> and \\<open>poly p a > 0\\<close>"], ["proof (chain)\npicking this:\n  poly p x < 0\n  0 < poly p a", "have \"sgn (poly p a) \\<noteq> sgn (poly p x)\""], ["proof (prove)\nusing this:\n  poly p x < 0\n  0 < poly p a\n\ngoal (1 subgoal):\n 1. sgn (poly p a) \\<noteq> sgn (poly p x)", "by simp"], ["proof (state)\nthis:\n  sgn (poly p a) \\<noteq> sgn (poly p x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>a \\<le> b; a \\<le> x; x \\<le> b; poly p x \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> False", "from poly_different_sign_imp_root[OF \\<open>x > a\\<close> this] and B and \\<open>x \\<le> b\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>xa\\<ge>a. xa \\<le> x \\<and> poly p xa = 0\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  x \\<le> b", "show False"], ["proof (prove)\nusing this:\n  \\<exists>xa\\<ge>a. xa \\<le> x \\<and> poly p xa = 0\n  \\<forall>x.\n     a \\<le> x \\<and> x \\<le> b \\<longrightarrow> poly p x \\<noteq> 0\n  x \\<le> b\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. a \\<le> x \\<and> x \\<le> b \\<longrightarrow> 0 < poly p x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}