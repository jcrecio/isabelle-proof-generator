{"file_name": "/home/qj213/afp-2021-10-22/thys/Subresultants/Coeff_Int.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Subresultants", "problem_names": ["lemma coeff_int_eq_0: \"i < 0 \\<or> i > int (degree p) \\<Longrightarrow> coeff_int p i = 0\"", "lemma coeff_int_smult[simp]: \"coeff_int (smult c p) i = c * coeff_int p i\"", "lemma coeff_int_signof_mult: \"coeff_int (signof x * f) i = signof x * (coeff_int f i)\"", "lemma coeff_int_sum: \"coeff_int (sum p A) i = (\\<Sum>x\\<in>A. coeff_int (p x) i)\"", "lemma coeff_int_0[simp]: \"coeff_int f 0 = coeff f 0\"", "lemma coeff_int_monom_mult: \"coeff_int (monom a d * f) i = (a * coeff_int f (i - d))\"", "lemma coeff_prod_const: assumes \"finite xs\" and \"y \\<notin> xs\"\n  and \"\\<And> x. x \\<in> xs \\<Longrightarrow> degree (f x) = 0\"\nshows \"coeff (prod f (insert y xs)) i = prod (\\<lambda> x. coeff (f x) 0) xs * coeff (f y) i\"", "lemma coeff_int_prod_const: assumes \"finite xs\" and \"y \\<notin> xs\"\n  and \"\\<And> x. x \\<in> xs \\<Longrightarrow> degree (f x) = 0\"\nshows \"coeff_int (prod f (insert y xs)) i = prod (\\<lambda> x. coeff_int (f x) 0) xs * coeff_int (f y) i\"", "lemma coeff_int[simp]: \"coeff_int p n = coeff p n\"", "lemma coeff_int_minus[simp]:\n  \"coeff_int (a - b) i = coeff_int a i - coeff_int b i\"", "lemma coeff_int_pCons_0[simp]: \"coeff_int (pCons 0 b) i = coeff_int b (i - 1)\""], "translations": [["", "lemma coeff_int_eq_0: \"i < 0 \\<or> i > int (degree p) \\<Longrightarrow> coeff_int p i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < 0 \\<or> int (degree p) < i \\<Longrightarrow> coeff_int p i = (0::'a)", "unfolding coeff_int_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < 0 \\<or> int (degree p) < i \\<Longrightarrow>\n    (if i < 0 then 0::'a else coeff p (nat i)) = (0::'a)", "by (cases \"i < 0\", auto intro: coeff_eq_0)"], ["", "lemma coeff_int_smult[simp]: \"coeff_int (smult c p) i = c * coeff_int p i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (smult c p) i = c * coeff_int p i", "unfolding coeff_int_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < 0 then 0::'a else coeff (smult c p) (nat i)) =\n    c * (if i < 0 then 0::'a else coeff p (nat i))", "by simp"], ["", "lemma coeff_int_signof_mult: \"coeff_int (signof x * f) i = signof x * (coeff_int f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (signof x * f) i = signof x * coeff_int f i", "unfolding signof_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int ((if sign x = 1 then 1 else - 1) * f) i =\n    (if sign x = 1 then 1::'a else - (1::'a)) * coeff_int f i", "by (auto simp: coeff_int_def)"], ["", "lemma coeff_int_sum: \"coeff_int (sum p A) i = (\\<Sum>x\\<in>A. coeff_int (p x) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (sum p A) i = (\\<Sum>x\\<in>A. coeff_int (p x) i)", "using coeff_sum[of p A \"nat i\"]"], ["proof (prove)\nusing this:\n  coeff (sum p A) (nat i) = (\\<Sum>x\\<in>A. coeff (p x) (nat i))\n\ngoal (1 subgoal):\n 1. coeff_int (sum p A) i = (\\<Sum>x\\<in>A. coeff_int (p x) i)", "unfolding coeff_int_def"], ["proof (prove)\nusing this:\n  coeff (sum p A) (nat i) = (\\<Sum>x\\<in>A. coeff (p x) (nat i))\n\ngoal (1 subgoal):\n 1. (if i < 0 then 0::'a else coeff (sum p A) (nat i)) =\n    (\\<Sum>x\\<in>A. if i < 0 then 0::'a else coeff (p x) (nat i))", "by (cases \"i < 0\", auto)"], ["", "lemma coeff_int_0[simp]: \"coeff_int f 0 = coeff f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int f 0 = coeff f 0", "unfolding coeff_int_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if 0 < 0 then 0::'a else coeff f (nat 0)) = coeff f 0", "by simp"], ["", "lemma coeff_int_monom_mult: \"coeff_int (monom a d * f) i = (a * coeff_int f (i - d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "proof (cases \"i < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n 2. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "case True"], ["proof (state)\nthis:\n  i < 0\n\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n 2. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i < 0\n\ngoal (1 subgoal):\n 1. coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "unfolding coeff_int_def"], ["proof (prove)\nusing this:\n  i < 0\n\ngoal (1 subgoal):\n 1. (if i < 0 then 0::'a else coeff (monom a d * f) (nat i)) =\n    a * (if i - int d < 0 then 0::'a else coeff f (nat (i - int d)))", "by simp"], ["proof (state)\nthis:\n  coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n\ngoal (1 subgoal):\n 1. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "case False"], ["proof (state)\nthis:\n  \\<not> i < 0\n\ngoal (1 subgoal):\n 1. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "hence \"i \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<not> i < 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> i", "by auto"], ["proof (state)\nthis:\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> i", "obtain j where i: \"i = int j\""], ["proof (prove)\nusing this:\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. (\\<And>j. i = int j \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (rule nonneg_eq_int)"], ["proof (state)\nthis:\n  i = int j\n\ngoal (1 subgoal):\n 1. \\<not> i < 0 \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "proof (cases \"i \\<ge> d\")"], ["proof (state)\ngoal (2 subgoals):\n 1. int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n 2. \\<not> int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "case True"], ["proof (state)\nthis:\n  int d \\<le> i\n\ngoal (2 subgoals):\n 1. int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n 2. \\<not> int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "with i"], ["proof (chain)\npicking this:\n  i = int j\n  int d \\<le> i", "have \"nat (int j - int d) = j - d\""], ["proof (prove)\nusing this:\n  i = int j\n  int d \\<le> i\n\ngoal (1 subgoal):\n 1. nat (int j - int d) = j - d", "by auto"], ["proof (state)\nthis:\n  nat (int j - int d) = j - d\n\ngoal (2 subgoals):\n 1. int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n 2. \\<not> int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "with coeff_monom_mult[of a]"], ["proof (chain)\npicking this:\n  coeff (monom a ?d * ?p) ?i =\n  (if ?d \\<le> ?i then a * coeff ?p (?i - ?d) else (0::'a))\n  nat (int j - int d) = j - d", "show ?thesis"], ["proof (prove)\nusing this:\n  coeff (monom a ?d * ?p) ?i =\n  (if ?d \\<le> ?i then a * coeff ?p (?i - ?d) else (0::'a))\n  nat (int j - int d) = j - d\n\ngoal (1 subgoal):\n 1. coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "unfolding coeff_int_def i"], ["proof (prove)\nusing this:\n  coeff (monom a ?d * ?p) ?i =\n  (if ?d \\<le> ?i then a * coeff ?p (?i - ?d) else (0::'a))\n  nat (int j - int d) = j - d\n\ngoal (1 subgoal):\n 1. (if int j < 0 then 0::'a else coeff (monom a d * f) (nat (int j))) =\n    a * (if int j - int d < 0 then 0::'a else coeff f (nat (int j - int d)))", "by simp"], ["proof (state)\nthis:\n  coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n\ngoal (1 subgoal):\n 1. \\<not> int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "case False"], ["proof (state)\nthis:\n  \\<not> int d \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> int d \\<le> i \\<Longrightarrow>\n    coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> int d \\<le> i\n\ngoal (1 subgoal):\n 1. coeff_int (monom a d * f) i = a * coeff_int f (i - int d)", "unfolding i"], ["proof (prove)\nusing this:\n  \\<not> int d \\<le> int j\n\ngoal (1 subgoal):\n 1. coeff_int (monom a d * f) (int j) = a * coeff_int f (int j - int d)", "by (simp add: coeff_int_def coeff_monom_mult)"], ["proof (state)\nthis:\n  coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coeff_int (monom a d * f) i = a * coeff_int f (i - int d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coeff_prod_const: assumes \"finite xs\" and \"y \\<notin> xs\"\n  and \"\\<And> x. x \\<in> xs \\<Longrightarrow> degree (f x) = 0\"\nshows \"coeff (prod f (insert y xs)) i = prod (\\<lambda> x. coeff (f x) 0) xs * coeff (f y) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (prod f (insert y xs)) i =\n    (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i", "using assms"], ["proof (prove)\nusing this:\n  finite xs\n  y \\<notin> xs\n  ?x \\<in> xs \\<Longrightarrow> degree (f ?x) = 0\n\ngoal (1 subgoal):\n 1. coeff (prod f (insert y xs)) i =\n    (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i", "proof (induct xs rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "case (insert x xs)"], ["proof (state)\nthis:\n  finite xs\n  x \\<notin> xs\n  \\<lbrakk>y \\<notin> xs;\n   \\<And>x. x \\<in> xs \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n  \\<Longrightarrow> coeff (prod f (insert y xs)) i =\n                    (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i\n  y \\<notin> insert x xs\n  ?x \\<in> insert x xs \\<Longrightarrow> degree (f ?x) = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "from insert(2,4)"], ["proof (chain)\npicking this:\n  x \\<notin> xs\n  y \\<notin> insert x xs", "have id: \"insert y (insert x xs) - {x} = insert y xs\""], ["proof (prove)\nusing this:\n  x \\<notin> xs\n  y \\<notin> insert x xs\n\ngoal (1 subgoal):\n 1. insert y (insert x xs) - {x} = insert y xs", "by auto"], ["proof (state)\nthis:\n  insert y (insert x xs) - {x} = insert y xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "have \"prod f (insert y (insert x xs)) = f x * prod f (insert y xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod f (insert y (insert x xs)) = f x * prod f (insert y xs)", "by (subst prod.remove[of _ x], insert insert(1,2) id, auto)"], ["proof (state)\nthis:\n  prod f (insert y (insert x xs)) = f x * prod f (insert y xs)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "hence \"coeff (prod f (insert y (insert x xs))) i = coeff (f x * prod f (insert y xs)) i\""], ["proof (prove)\nusing this:\n  prod f (insert y (insert x xs)) = f x * prod f (insert y xs)\n\ngoal (1 subgoal):\n 1. coeff (prod f (insert y (insert x xs))) i =\n    coeff (f x * prod f (insert y xs)) i", "by simp"], ["proof (state)\nthis:\n  coeff (prod f (insert y (insert x xs))) i =\n  coeff (f x * prod f (insert y xs)) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "also"], ["proof (state)\nthis:\n  coeff (prod f (insert y (insert x xs))) i =\n  coeff (f x * prod f (insert y xs)) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "have \"\\<dots> = coeff (f x) 0 * (coeff (prod f (insert y xs)) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (f x * prod f (insert y xs)) i =\n    coeff (f x) 0 * coeff (prod f (insert y xs)) i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coeff (f x * prod f (insert y xs)) i =\n    coeff (f x) 0 * coeff (prod f (insert y xs)) i", "from insert(5)[of x] degree0_coeffs[of \"f x\"]"], ["proof (chain)\npicking this:\n  x \\<in> insert x xs \\<Longrightarrow> degree (f x) = 0\n  degree (f x) = 0 \\<Longrightarrow> \\<exists>a. f x = [:a:]", "obtain c where fx: \"f x = [: c :]\""], ["proof (prove)\nusing this:\n  x \\<in> insert x xs \\<Longrightarrow> degree (f x) = 0\n  degree (f x) = 0 \\<Longrightarrow> \\<exists>a. f x = [:a:]\n\ngoal (1 subgoal):\n 1. (\\<And>c. f x = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  f x = [:c:]\n\ngoal (1 subgoal):\n 1. coeff (f x * prod f (insert y xs)) i =\n    coeff (f x) 0 * coeff (prod f (insert y xs)) i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (f x * prod f (insert y xs)) i =\n    coeff (f x) 0 * coeff (prod f (insert y xs)) i", "unfolding fx"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff ([:c:] * prod f (insert y xs)) i =\n    coeff [:c:] 0 * coeff (prod f (insert y xs)) i", "by auto"], ["proof (state)\nthis:\n  coeff (f x * prod f (insert y xs)) i =\n  coeff (f x) 0 * coeff (prod f (insert y xs)) i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coeff (f x * prod f (insert y xs)) i =\n  coeff (f x) 0 * coeff (prod f (insert y xs)) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "also"], ["proof (state)\nthis:\n  coeff (f x * prod f (insert y xs)) i =\n  coeff (f x) 0 * coeff (prod f (insert y xs)) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "have \"(coeff (prod f (insert y xs)) i) = (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (prod f (insert y xs)) i =\n    (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i", "using insert"], ["proof (prove)\nusing this:\n  finite xs\n  x \\<notin> xs\n  \\<lbrakk>y \\<notin> xs;\n   \\<And>x. x \\<in> xs \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n  \\<Longrightarrow> coeff (prod f (insert y xs)) i =\n                    (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i\n  y \\<notin> insert x xs\n  ?x \\<in> insert x xs \\<Longrightarrow> degree (f ?x) = 0\n\ngoal (1 subgoal):\n 1. coeff (prod f (insert y xs)) i =\n    (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i", "by auto"], ["proof (state)\nthis:\n  coeff (prod f (insert y xs)) i =\n  (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "also"], ["proof (state)\nthis:\n  coeff (prod f (insert y xs)) i =\n  (\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "have \"coeff (f x) 0 * \\<dots> = prod (\\<lambda> x. coeff (f x) 0) (insert x xs) * coeff (f y) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (f x) 0 * ((\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i) =\n    (\\<Prod>x\\<in>insert x xs. coeff (f x) 0) * coeff (f y) i", "by (subst prod.insert_remove, insert insert(1,2,4), auto simp: ac_simps)"], ["proof (state)\nthis:\n  coeff (f x) 0 * ((\\<Prod>x\\<in>xs. coeff (f x) 0) * coeff (f y) i) =\n  (\\<Prod>x\\<in>insert x xs. coeff (f x) 0) * coeff (f y) i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>y \\<notin> F;\n         \\<And>x. x \\<in> F \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n        \\<Longrightarrow> coeff (prod f (insert y F)) i =\n                          (\\<Prod>x\\<in>F. coeff (f x) 0) * coeff (f y) i;\n        y \\<notin> insert x F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow> degree (f xa) = 0\\<rbrakk>\n       \\<Longrightarrow> coeff (prod f (insert y (insert x F))) i =\n                         (\\<Prod>x\\<in>insert x F. coeff (f x) 0) *\n                         coeff (f y) i", "finally"], ["proof (chain)\npicking this:\n  coeff (prod f (insert y (insert x xs))) i =\n  (\\<Prod>x\\<in>insert x xs. coeff (f x) 0) * coeff (f y) i", "show ?case"], ["proof (prove)\nusing this:\n  coeff (prod f (insert y (insert x xs))) i =\n  (\\<Prod>x\\<in>insert x xs. coeff (f x) 0) * coeff (f y) i\n\ngoal (1 subgoal):\n 1. coeff (prod f (insert y (insert x xs))) i =\n    (\\<Prod>x\\<in>insert x xs. coeff (f x) 0) * coeff (f y) i", "."], ["proof (state)\nthis:\n  coeff (prod f (insert y (insert x xs))) i =\n  (\\<Prod>x\\<in>insert x xs. coeff (f x) 0) * coeff (f y) i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<notin> {};\n     \\<And>x. x \\<in> {} \\<Longrightarrow> degree (f x) = 0\\<rbrakk>\n    \\<Longrightarrow> coeff (prod f {y}) i =\n                      (\\<Prod>x\\<in>{}. coeff (f x) 0) * coeff (f y) i", "qed simp"], ["", "lemma coeff_int_prod_const: assumes \"finite xs\" and \"y \\<notin> xs\"\n  and \"\\<And> x. x \\<in> xs \\<Longrightarrow> degree (f x) = 0\"\nshows \"coeff_int (prod f (insert y xs)) i = prod (\\<lambda> x. coeff_int (f x) 0) xs * coeff_int (f y) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (prod f (insert y xs)) i =\n    (\\<Prod>x\\<in>xs. coeff_int (f x) 0) * coeff_int (f y) i", "using coeff_prod_const[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<in> xs \\<Longrightarrow> ?x1 x \\<in> xs) \\<Longrightarrow>\n  coeff (\\<Prod>x\\<in>insert y xs. f (?x1 x)) ?i =\n  (\\<Prod>x\\<in>xs. coeff (f (?x1 x)) 0) * coeff (f (?x1 y)) ?i\n\ngoal (1 subgoal):\n 1. coeff_int (prod f (insert y xs)) i =\n    (\\<Prod>x\\<in>xs. coeff_int (f x) 0) * coeff_int (f y) i", "unfolding coeff_int_def"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<in> xs \\<Longrightarrow> ?x1 x \\<in> xs) \\<Longrightarrow>\n  coeff (\\<Prod>x\\<in>insert y xs. f (?x1 x)) ?i =\n  (\\<Prod>x\\<in>xs. coeff (f (?x1 x)) 0) * coeff (f (?x1 y)) ?i\n\ngoal (1 subgoal):\n 1. (if i < 0 then 0::'b else coeff (prod f (insert y xs)) (nat i)) =\n    (\\<Prod>x\\<in>xs. if 0 < 0 then 0::'b else coeff (f x) (nat 0)) *\n    (if i < 0 then 0::'b else coeff (f y) (nat i))", "by (cases \"i < 0\", auto)"], ["", "lemma coeff_int[simp]: \"coeff_int p n = coeff p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int p (int n) = coeff p n", "unfolding coeff_int_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if int n < 0 then 0::'a else coeff p (nat (int n))) = coeff p n", "by auto"], ["", "lemma coeff_int_minus[simp]:\n  \"coeff_int (a - b) i = coeff_int a i - coeff_int b i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (a - b) i = coeff_int a i - coeff_int b i", "by (auto simp: coeff_int_def)"], ["", "lemma coeff_int_pCons_0[simp]: \"coeff_int (pCons 0 b) i = coeff_int b (i - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff_int (pCons (0::'a) b) i = coeff_int b (i - 1)", "by (auto simp: Nitpick.case_nat_unfold coeff_int_def coeff_pCons nat_diff_distrib')"], ["", "end"]]}