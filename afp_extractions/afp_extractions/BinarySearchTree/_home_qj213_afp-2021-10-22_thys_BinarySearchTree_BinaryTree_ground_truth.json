{"file_name": "/home/qj213/afp-2021-10-22/thys/BinarySearchTree/BinaryTree.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BinarySearchTree", "problem_names": ["lemma sortLemmaL: \n  \"sortedTree h (T t1 x t2) ==> sortedTree h t1\"", "lemma sortLemmaR: \n  \"sortedTree h (T t1 x t2) ==> sortedTree h t2\"", "lemma tlookup_none: \n     \"sortedTree h t & (tlookup h k t = None) --> (\\<forall>x\\<in>setOf t. h x ~= k)\"", "lemma tlookup_some:\n     \"sortedTree h t & (tlookup h k t = Some x) --> x:setOf t & h x = k\"", "lemma cases3: \"[| C1 ==> G; C2 ==> G; C3 ==> G;\n                  C1 | C2 | C3 |] ==> G\"", "lemma sorted_distinct: \"sorted_distinct_pred h a b t\" (is \"?P t\")", "lemma tlookup_finds: \\<comment> \\<open>if a node is in the tree, lookup finds it\\<close>\n\"sortedTree h t & y:setOf t --> \n tlookup h (h y) t = Some y\"", "lemma assumes s: \"sortedTree h t\" \n      shows memb_spec: \"memb h x t = (x : setOf t)\"", "lemma disjCond: \"[| !! x. [| x:A; x:B |] ==> False |] ==> A Int B = {}\"", "lemma binsert_set: \"sortedTree h t -->\n                    setOf (binsert h e t) = (setOf t) - (eqs h e) Un {e}\" \n      (is \"?P t\")", "lemma binsert_sorted: \"sortedTree h t --> sortedTree h (binsert h x t)\"", "theorem wrmrm_decomp: \"t ~= Tip --> wrmrm h t = (wrm h t, rm h t)\"", "lemma rm_set: \"t ~= Tip & sortedTree h t --> rm h t : setOf t\"", "lemma wrm_set: \"t ~= Tip & sortedTree h t --> \n                setOf (wrm h t) = setOf t - {rm h t}\" (is \"?P t\")", "lemma wrm_set1: \"t ~= Tip & sortedTree h t --> setOf (wrm h t) <= setOf t\"", "lemma wrm_sort: \"t ~= Tip & sortedTree h t --> sortedTree h (wrm h t)\" (is \"?P t\")", "lemma wrm_less_rm: \n  \"t ~= Tip & sortedTree h t --> \n   (\\<forall>l \\<in> setOf (wrm h t). h l < h (rm h t))\" (is \"?P t\")", "lemma remove_set: \"sortedTree h t --> \n  setOf (remove h e t) = setOf t - eqs h e\" (is \"?P t\")", "lemma remove_sort: \"sortedTree h t --> \n                    sortedTree h (remove h e t)\" (is \"?P t\")"], "translations": [["", "lemma sortLemmaL: \n  \"sortedTree h (T t1 x t2) ==> sortedTree h t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow> sortedTree h t1", "by simp"], ["", "lemma sortLemmaR: \n  \"sortedTree h (T t1 x t2) ==> sortedTree h t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow> sortedTree h t2", "by simp"], ["", "(*============================================================*)"], ["", "section \\<open>Tree Lookup\\<close>"], ["", "(*============================================================*)"], ["", "primrec\n  tlookup :: \"'a hash => index => 'a Tree => 'a option\"\nwhere\n  \"tlookup h k Tip = None\"\n| \"tlookup h k (T t1 x t2) = \n   (if k < h x then tlookup h k t1\n    else if h x < k then tlookup h k t2\n    else Some x)\""], ["", "lemma tlookup_none: \n     \"sortedTree h t & (tlookup h k t = None) --> (\\<forall>x\\<in>setOf t. h x ~= k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<and> tlookup h k t = None \\<longrightarrow>\n    (\\<forall>x\\<in>setOf t. h x \\<noteq> k)", "by (induct t, auto)"], ["", "lemma tlookup_some:\n     \"sortedTree h t & (tlookup h k t = Some x) --> x:setOf t & h x = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<and> tlookup h k t = Some x \\<longrightarrow>\n    x \\<in> setOf t \\<and> h x = k", "apply (induct t)\n  \\<comment> \\<open>Just auto will do it, but very slowly\\<close>"], ["proof (prove)\ngoal (2 subgoals):\n 1. sortedTree h Tip \\<and> tlookup h k Tip = Some x \\<longrightarrow>\n    x \\<in> setOf Tip \\<and> h x = k\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<and>\n                tlookup h k t1 = Some x \\<longrightarrow>\n                x \\<in> setOf t1 \\<and> h x = k;\n        sortedTree h t2 \\<and> tlookup h k t2 = Some x \\<longrightarrow>\n        x \\<in> setOf t2 \\<and> h x = k\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<and>\n                         tlookup h k (T t1 x2 t2) = Some x \\<longrightarrow>\n                         x \\<in> setOf (T t1 x2 t2) \\<and> h x = k", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<and>\n                tlookup h k t1 = Some x \\<longrightarrow>\n                x \\<in> setOf t1 \\<and> h x = k;\n        sortedTree h t2 \\<and> tlookup h k t2 = Some x \\<longrightarrow>\n        x \\<in> setOf t2 \\<and> h x = k\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<and>\n                         tlookup h k (T t1 x2 t2) = Some x \\<longrightarrow>\n                         x \\<in> setOf (T t1 x2 t2) \\<and> h x = k", "apply (clarify, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>(if k < h x2 then tlookup h k t1\n                 else if h x2 < k then tlookup h k t2 else Some x2) =\n                Some x;\n        sortedTree h t1; \\<forall>l\\<in>setOf t1. h l < h x2;\n        \\<forall>r\\<in>setOf t2. h x2 < h r; sortedTree h t2;\n        tlookup h k t1 \\<noteq> Some x; tlookup h k t2 \\<noteq> Some x;\n        x \\<noteq> x2; x \\<notin> setOf t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> setOf t1\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>(if k < h x2 then tlookup h k t1\n                 else if h x2 < k then tlookup h k t2 else Some x2) =\n                Some x;\n        sortedTree h t1; \\<forall>l\\<in>setOf t1. h l < h x2;\n        \\<forall>r\\<in>setOf t2. h x2 < h r; sortedTree h t2;\n        tlookup h k t1 \\<noteq> Some x;\n        tlookup h k t2 \\<noteq> Some x\\<rbrakk>\n       \\<Longrightarrow> h x = k", "apply (simp_all split: if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition sorted_distinct_pred :: \"'a hash => 'a => 'a => 'a Tree => bool\" where\n  \\<comment> \\<open>No two elements have the same hash code\\<close>\n  \"sorted_distinct_pred h a b t == sortedTree h t & \n      a:setOf t & b:setOf t & h a = h b --> \n      a = b\""], ["", "declare sorted_distinct_pred_def [simp]\n\n\\<comment> \\<open>for case analysis on three cases\\<close>"], ["", "lemma cases3: \"[| C1 ==> G; C2 ==> G; C3 ==> G;\n                  C1 | C2 | C3 |] ==> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C1 \\<Longrightarrow> G; C2 \\<Longrightarrow> G;\n     C3 \\<Longrightarrow> G; C1 \\<or> C2 \\<or> C3\\<rbrakk>\n    \\<Longrightarrow> G", "by auto"], ["", "text \\<open>@{term sorted_distinct_pred} holds for out trees:\\<close>"], ["", "lemma sorted_distinct: \"sorted_distinct_pred h a b t\" (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_distinct_pred h a b t", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. sorted_distinct_pred h a b Tip\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_distinct_pred h a b Tip", "by simp"], ["proof (state)\nthis:\n  sorted_distinct_pred h a b Tip\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  sorted_distinct_pred h a b t1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  sorted_distinct_pred h a b t2\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sorted_distinct_pred h a b t1;\n        sorted_distinct_pred h a b t2\\<rbrakk>\n       \\<Longrightarrow> sorted_distinct_pred h a b (T t1 x2 t2)", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_distinct_pred h a b (T t1 x t2)", "proof (unfold sorted_distinct_pred_def, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "assume adef: \"a : setOf (T t1 x t2)\""], ["proof (state)\nthis:\n  a \\<in> setOf (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "assume bdef: \"b : setOf (T t1 x t2)\""], ["proof (state)\nthis:\n  b \\<in> setOf (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "assume hahb: \"h a = h b\""], ["proof (state)\nthis:\n  h a = h b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by auto"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by auto"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h (T t1 x t2); a \\<in> setOf (T t1 x t2);\n     b \\<in> setOf (T t1 x t2); h a = h b\\<rbrakk>\n    \\<Longrightarrow> a = b", "show \"a = b\"\n    \\<comment> \\<open>We consider 9 cases for the position of a and b are in the tree\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof -\n    \\<comment> \\<open>three cases for a\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b", "from adef"], ["proof (chain)\npicking this:\n  a \\<in> setOf (T t1 x t2)", "have \"a : setOf t1 | a = x | a : setOf t2\""], ["proof (prove)\nusing this:\n  a \\<in> setOf (T t1 x t2)\n\ngoal (1 subgoal):\n 1. a \\<in> setOf t1 \\<or> a = x \\<or> a \\<in> setOf t2", "by auto"], ["proof (state)\nthis:\n  a \\<in> setOf t1 \\<or> a = x \\<or> a \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  a \\<in> setOf t1 \\<or> a = x \\<or> a \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  a \\<in> setOf t1 \\<or> a = x \\<or> a \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "assume adef1: \"a : setOf t1\""], ["proof (state)\nthis:\n  a \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. a = b", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof - \n      \\<comment> \\<open>three cases for b\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b", "from bdef"], ["proof (chain)\npicking this:\n  b \\<in> setOf (T t1 x t2)", "have \"b : setOf t1 | b = x | b : setOf t2\""], ["proof (prove)\nusing this:\n  b \\<in> setOf (T t1 x t2)\n\ngoal (1 subgoal):\n 1. b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2", "by auto"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b : setOf t1\""], ["proof (state)\nthis:\n  b \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. a = b", "from s1 adef1 bdef1 hahb h1"], ["proof (chain)\npicking this:\n  sortedTree h t1\n  a \\<in> setOf t1\n  b \\<in> setOf t1\n  h a = h b\n  sorted_distinct_pred h a b t1", "have ?thesis"], ["proof (prove)\nusing this:\n  sortedTree h t1\n  a \\<in> setOf t1\n  b \\<in> setOf t1\n  h a = h b\n  sorted_distinct_pred h a b t1\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b = x\""], ["proof (state)\nthis:\n  b = x\n\ngoal (1 subgoal):\n 1. a = b", "from adef1 bdef1 s"], ["proof (chain)\npicking this:\n  a \\<in> setOf t1\n  b = x\n  sortedTree h (T t1 x t2)", "have \"h a < h b\""], ["proof (prove)\nusing this:\n  a \\<in> setOf t1\n  b = x\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h a < h b", "by auto"], ["proof (state)\nthis:\n  h a < h b\n\ngoal (1 subgoal):\n 1. a = b", "from this hahb"], ["proof (chain)\npicking this:\n  h a < h b\n  h a = h b", "have ?thesis"], ["proof (prove)\nusing this:\n  h a < h b\n  h a = h b\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b : setOf t2\""], ["proof (state)\nthis:\n  b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "from adef1 s"], ["proof (chain)\npicking this:\n  a \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have o1: \"h a < h x\""], ["proof (prove)\nusing this:\n  a \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h a < h x", "by auto"], ["proof (state)\nthis:\n  h a < h x\n\ngoal (1 subgoal):\n 1. a = b", "from bdef1 s"], ["proof (chain)\npicking this:\n  b \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have o2: \"h x < h b\""], ["proof (prove)\nusing this:\n  b \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h b", "by auto"], ["proof (state)\nthis:\n  h x < h b\n\ngoal (1 subgoal):\n 1. a = b", "from o1 o2"], ["proof (chain)\npicking this:\n  h a < h x\n  h x < h b", "have \"h a < h b\""], ["proof (prove)\nusing this:\n  h a < h x\n  h x < h b\n\ngoal (1 subgoal):\n 1. h a < h b", "by simp"], ["proof (state)\nthis:\n  h a < h b\n\ngoal (1 subgoal):\n 1. a = b", "from this hahb"], ["proof (chain)\npicking this:\n  h a < h b\n  h a = h b", "have ?thesis"], ["proof (prove)\nusing this:\n  h a < h b\n  h a = h b\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "} \\<comment> \\<open>case impossible\\<close>"], ["proof (state)\nthis:\n  b \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "ultimately"], ["proof (chain)\npicking this:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n  b = x \\<Longrightarrow> a = b\n  b \\<in> setOf t2 \\<Longrightarrow> a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n  b = x \\<Longrightarrow> a = b\n  b \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "by blast"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  a \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  a \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  a \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume adef1: \"a = x\""], ["proof (state)\nthis:\n  a = x\n\ngoal (1 subgoal):\n 1. a = b", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof -\n      \\<comment> \\<open>three cases for b\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b", "from bdef"], ["proof (chain)\npicking this:\n  b \\<in> setOf (T t1 x t2)", "have \"b : setOf t1 | b = x | b : setOf t2\""], ["proof (prove)\nusing this:\n  b \\<in> setOf (T t1 x t2)\n\ngoal (1 subgoal):\n 1. b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2", "by auto"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b : setOf t1\""], ["proof (state)\nthis:\n  b \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. a = b", "from this s"], ["proof (chain)\npicking this:\n  b \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have \"h b < h x\""], ["proof (prove)\nusing this:\n  b \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h b < h x", "by auto"], ["proof (state)\nthis:\n  h b < h x\n\ngoal (1 subgoal):\n 1. a = b", "from this adef1"], ["proof (chain)\npicking this:\n  h b < h x\n  a = x", "have \"h b < h a\""], ["proof (prove)\nusing this:\n  h b < h x\n  a = x\n\ngoal (1 subgoal):\n 1. h b < h a", "by auto"], ["proof (state)\nthis:\n  h b < h a\n\ngoal (1 subgoal):\n 1. a = b", "from hahb this"], ["proof (chain)\npicking this:\n  h a = h b\n  h b < h a", "have ?thesis"], ["proof (prove)\nusing this:\n  h a = h b\n  h b < h a\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "} \\<comment> \\<open>case impossible\\<close>"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b = x\""], ["proof (state)\nthis:\n  b = x\n\ngoal (1 subgoal):\n 1. a = b", "from adef1 bdef1"], ["proof (chain)\npicking this:\n  a = x\n  b = x", "have ?thesis"], ["proof (prove)\nusing this:\n  a = x\n  b = x\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b : setOf t2\""], ["proof (state)\nthis:\n  b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "from this s"], ["proof (chain)\npicking this:\n  b \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have \"h x < h b\""], ["proof (prove)\nusing this:\n  b \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h b", "by auto"], ["proof (state)\nthis:\n  h x < h b\n\ngoal (1 subgoal):\n 1. a = b", "from this adef1"], ["proof (chain)\npicking this:\n  h x < h b\n  a = x", "have \"h a < h b\""], ["proof (prove)\nusing this:\n  h x < h b\n  a = x\n\ngoal (1 subgoal):\n 1. h a < h b", "by simp"], ["proof (state)\nthis:\n  h a < h b\n\ngoal (1 subgoal):\n 1. a = b", "from hahb this"], ["proof (chain)\npicking this:\n  h a = h b\n  h a < h b", "have ?thesis"], ["proof (prove)\nusing this:\n  h a = h b\n  h a < h b\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "} \\<comment> \\<open>case impossible\\<close>"], ["proof (state)\nthis:\n  b \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "ultimately"], ["proof (chain)\npicking this:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n  b = x \\<Longrightarrow> a = b\n  b \\<in> setOf t2 \\<Longrightarrow> a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n  b = x \\<Longrightarrow> a = b\n  b \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "by blast"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  a = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  a = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  a = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume adef1: \"a : setOf t2\""], ["proof (state)\nthis:\n  a \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof -\n      \\<comment> \\<open>three cases for b\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b", "from bdef"], ["proof (chain)\npicking this:\n  b \\<in> setOf (T t1 x t2)", "have \"b : setOf t1 | b = x | b : setOf t2\""], ["proof (prove)\nusing this:\n  b \\<in> setOf (T t1 x t2)\n\ngoal (1 subgoal):\n 1. b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2", "by auto"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b : setOf t1\""], ["proof (state)\nthis:\n  b \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. a = b", "from bdef1 s"], ["proof (chain)\npicking this:\n  b \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have o1: \"h b < h x\""], ["proof (prove)\nusing this:\n  b \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h b < h x", "by auto"], ["proof (state)\nthis:\n  h b < h x\n\ngoal (1 subgoal):\n 1. a = b", "from adef1 s"], ["proof (chain)\npicking this:\n  a \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have o2: \"h x < h a\""], ["proof (prove)\nusing this:\n  a \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h a", "by auto"], ["proof (state)\nthis:\n  h x < h a\n\ngoal (1 subgoal):\n 1. a = b", "from o1 o2"], ["proof (chain)\npicking this:\n  h b < h x\n  h x < h a", "have \"h b < h a\""], ["proof (prove)\nusing this:\n  h b < h x\n  h x < h a\n\ngoal (1 subgoal):\n 1. h b < h a", "by simp"], ["proof (state)\nthis:\n  h b < h a\n\ngoal (1 subgoal):\n 1. a = b", "from this hahb"], ["proof (chain)\npicking this:\n  h b < h a\n  h a = h b", "have ?thesis"], ["proof (prove)\nusing this:\n  h b < h a\n  h a = h b\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "} \\<comment> \\<open>case impossible\\<close>"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b = x\""], ["proof (state)\nthis:\n  b = x\n\ngoal (1 subgoal):\n 1. a = b", "from adef1 bdef1 s"], ["proof (chain)\npicking this:\n  a \\<in> setOf t2\n  b = x\n  sortedTree h (T t1 x t2)", "have \"h b < h a\""], ["proof (prove)\nusing this:\n  a \\<in> setOf t2\n  b = x\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h b < h a", "by auto"], ["proof (state)\nthis:\n  h b < h a\n\ngoal (1 subgoal):\n 1. a = b", "from this hahb"], ["proof (chain)\npicking this:\n  h b < h a\n  h a = h b", "have ?thesis"], ["proof (prove)\nusing this:\n  h b < h a\n  h a = h b\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "} \\<comment> \\<open>case impossible\\<close>"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "moreover"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "{"], ["proof (state)\nthis:\n  b = x \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "assume bdef1: \"b : setOf t2\""], ["proof (state)\nthis:\n  b \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. a = b", "from s2 adef1 bdef1 hahb h2"], ["proof (chain)\npicking this:\n  sortedTree h t2\n  a \\<in> setOf t2\n  b \\<in> setOf t2\n  h a = h b\n  sorted_distinct_pred h a b t2", "have ?thesis"], ["proof (prove)\nusing this:\n  sortedTree h t2\n  a \\<in> setOf t2\n  b \\<in> setOf t2\n  h a = h b\n  sorted_distinct_pred h a b t2\n\ngoal (1 subgoal):\n 1. a = b", "by simp"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  b \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "ultimately"], ["proof (chain)\npicking this:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n  b = x \\<Longrightarrow> a = b\n  b \\<in> setOf t2 \\<Longrightarrow> a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> setOf t1 \\<or> b = x \\<or> b \\<in> setOf t2\n  b \\<in> setOf t1 \\<Longrightarrow> a = b\n  b = x \\<Longrightarrow> a = b\n  b \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "by blast"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a = b", "}"], ["proof (state)\nthis:\n  a \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> setOf t1 \\<or> a = x \\<or> a \\<in> setOf t2\n  a \\<in> setOf t1 \\<Longrightarrow> a = b\n  a = x \\<Longrightarrow> a = b\n  a \\<in> setOf t2 \\<Longrightarrow> a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> setOf t1 \\<or> a = x \\<or> a \\<in> setOf t2\n  a \\<in> setOf t1 \\<Longrightarrow> a = b\n  a = x \\<Longrightarrow> a = b\n  a \\<in> setOf t2 \\<Longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. a = b", "by blast"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sorted_distinct_pred h a b (T t1 x t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tlookup_finds: \\<comment> \\<open>if a node is in the tree, lookup finds it\\<close>\n\"sortedTree h t & y:setOf t --> \n tlookup h (h y) t = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<and> y \\<in> setOf t \\<longrightarrow>\n    tlookup h (h y) t = Some y", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h t; y \\<in> setOf t\\<rbrakk>\n    \\<Longrightarrow> tlookup h (h y) t = Some y", "assume s: \"sortedTree h t\""], ["proof (state)\nthis:\n  sortedTree h t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h t; y \\<in> setOf t\\<rbrakk>\n    \\<Longrightarrow> tlookup h (h y) t = Some y", "assume yint: \"y : setOf t\""], ["proof (state)\nthis:\n  y \\<in> setOf t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sortedTree h t; y \\<in> setOf t\\<rbrakk>\n    \\<Longrightarrow> tlookup h (h y) t = Some y", "show \"tlookup h (h y) t = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tlookup h (h y) t = Some y", "proof (cases \"tlookup h (h y) t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "case None"], ["proof (state)\nthis:\n  tlookup h (h y) t = None\n\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "note res = this"], ["proof (state)\nthis:\n  tlookup h (h y) t = None\n\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from s res"], ["proof (chain)\npicking this:\n  sortedTree h t\n  tlookup h (h y) t = None", "have \"sortedTree h t & (tlookup h (h y) t = None)\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  tlookup h (h y) t = None\n\ngoal (1 subgoal):\n 1. sortedTree h t \\<and> tlookup h (h y) t = None", "by simp"], ["proof (state)\nthis:\n  sortedTree h t \\<and> tlookup h (h y) t = None\n\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from this"], ["proof (chain)\npicking this:\n  sortedTree h t \\<and> tlookup h (h y) t = None", "have o1: \"\\<forall>x\\<in>setOf t. h x ~= h y\""], ["proof (prove)\nusing this:\n  sortedTree h t \\<and> tlookup h (h y) t = None\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>setOf t. h x \\<noteq> h y", "by (simp add: tlookup_none)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>setOf t. h x \\<noteq> h y\n\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from o1 yint"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>setOf t. h x \\<noteq> h y\n  y \\<in> setOf t", "have \"h y ~= h y\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>setOf t. h x \\<noteq> h y\n  y \\<in> setOf t\n\ngoal (1 subgoal):\n 1. h y \\<noteq> h y", "by fastforce"], ["proof (state)\nthis:\n  h y \\<noteq> h y\n\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "(* auto does not work *)"], ["proof (state)\nthis:\n  h y \\<noteq> h y\n\ngoal (2 subgoals):\n 1. tlookup h (h y) t = None \\<Longrightarrow> tlookup h (h y) t = Some y\n 2. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from this"], ["proof (chain)\npicking this:\n  h y \\<noteq> h y", "show ?thesis"], ["proof (prove)\nusing this:\n  h y \\<noteq> h y\n\ngoal (1 subgoal):\n 1. tlookup h (h y) t = Some y", "by simp"], ["proof (state)\nthis:\n  tlookup h (h y) t = Some y\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "case (Some z)"], ["proof (state)\nthis:\n  tlookup h (h y) t = Some z\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "note res = this"], ["proof (state)\nthis:\n  tlookup h (h y) t = Some z\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "have ls: \"sortedTree h t & (tlookup h (h y) t = Some z) -->\n              z:setOf t & h z = h y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<and> tlookup h (h y) t = Some z \\<longrightarrow>\n    z \\<in> setOf t \\<and> h z = h y", "by (simp add: tlookup_some)"], ["proof (state)\nthis:\n  sortedTree h t \\<and> tlookup h (h y) t = Some z \\<longrightarrow>\n  z \\<in> setOf t \\<and> h z = h y\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "have sd: \"sorted_distinct_pred h y z t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_distinct_pred h y z t", "by (insert sorted_distinct [of h y z t], simp)"], ["proof (state)\nthis:\n  sorted_distinct_pred h y z t\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "(* for some reason simplifier would never guess this substitution *)"], ["proof (state)\nthis:\n  sorted_distinct_pred h y z t\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from s res ls"], ["proof (chain)\npicking this:\n  sortedTree h t\n  tlookup h (h y) t = Some z\n  sortedTree h t \\<and> tlookup h (h y) t = Some z \\<longrightarrow>\n  z \\<in> setOf t \\<and> h z = h y", "have o1: \"z:setOf t & h z = h y\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  tlookup h (h y) t = Some z\n  sortedTree h t \\<and> tlookup h (h y) t = Some z \\<longrightarrow>\n  z \\<in> setOf t \\<and> h z = h y\n\ngoal (1 subgoal):\n 1. z \\<in> setOf t \\<and> h z = h y", "by simp"], ["proof (state)\nthis:\n  z \\<in> setOf t \\<and> h z = h y\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from s yint o1 sd"], ["proof (chain)\npicking this:\n  sortedTree h t\n  y \\<in> setOf t\n  z \\<in> setOf t \\<and> h z = h y\n  sorted_distinct_pred h y z t", "have \"y = z\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  y \\<in> setOf t\n  z \\<in> setOf t \\<and> h z = h y\n  sorted_distinct_pred h y z t\n\ngoal (1 subgoal):\n 1. y = z", "by auto"], ["proof (state)\nthis:\n  y = z\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h y) t = Some a \\<Longrightarrow>\n       tlookup h (h y) t = Some y", "from this res"], ["proof (chain)\npicking this:\n  y = z\n  tlookup h (h y) t = Some z", "show \"tlookup h (h y) t = Some y\""], ["proof (prove)\nusing this:\n  y = z\n  tlookup h (h y) t = Some z\n\ngoal (1 subgoal):\n 1. tlookup h (h y) t = Some y", "by simp"], ["proof (state)\nthis:\n  tlookup h (h y) t = Some y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tlookup h (h y) t = Some y\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Tree membership as a special case of lookup\\<close>"], ["", "definition memb :: \"'a hash => 'a => 'a Tree => bool\" where\n  \"memb h x t == \n   (case (tlookup h (h x) t) of\n      None => False\n    | Some z => (x=z))\""], ["", "lemma assumes s: \"sortedTree h t\" \n      shows memb_spec: \"memb h x t = (x : setOf t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. memb h x t = (x \\<in> setOf t)", "proof (cases \"tlookup h (h x) t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tlookup h (h x) t = None \\<Longrightarrow>\n    memb h x t = (x \\<in> setOf t)\n 2. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "case None"], ["proof (state)\nthis:\n  tlookup h (h x) t = None\n\ngoal (2 subgoals):\n 1. tlookup h (h x) t = None \\<Longrightarrow>\n    memb h x t = (x \\<in> setOf t)\n 2. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "note tNone = this"], ["proof (state)\nthis:\n  tlookup h (h x) t = None\n\ngoal (2 subgoals):\n 1. tlookup h (h x) t = None \\<Longrightarrow>\n    memb h x t = (x \\<in> setOf t)\n 2. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "from tNone"], ["proof (chain)\npicking this:\n  tlookup h (h x) t = None", "have res: \"memb h x t = False\""], ["proof (prove)\nusing this:\n  tlookup h (h x) t = None\n\ngoal (1 subgoal):\n 1. memb h x t = False", "by (simp add: memb_def)"], ["proof (state)\nthis:\n  memb h x t = False\n\ngoal (2 subgoals):\n 1. tlookup h (h x) t = None \\<Longrightarrow>\n    memb h x t = (x \\<in> setOf t)\n 2. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "from s tNone tlookup_none"], ["proof (chain)\npicking this:\n  sortedTree h t\n  tlookup h (h x) t = None\n  sortedTree ?h ?t \\<and> tlookup ?h ?k ?t = None \\<longrightarrow>\n  (\\<forall>x\\<in>setOf ?t. ?h x \\<noteq> ?k)", "have o1: \"\\<forall>y\\<in>setOf t. h y ~= h x\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  tlookup h (h x) t = None\n  sortedTree ?h ?t \\<and> tlookup ?h ?k ?t = None \\<longrightarrow>\n  (\\<forall>x\\<in>setOf ?t. ?h x \\<noteq> ?k)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>setOf t. h y \\<noteq> h x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>y\\<in>setOf t. h y \\<noteq> h x\n\ngoal (2 subgoals):\n 1. tlookup h (h x) t = None \\<Longrightarrow>\n    memb h x t = (x \\<in> setOf t)\n 2. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "have notIn: \"x ~: setOf t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> setOf t", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "assume h: \"x : setOf t\""], ["proof (state)\nthis:\n  x \\<in> setOf t\n\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "from h o1"], ["proof (chain)\npicking this:\n  x \\<in> setOf t\n  \\<forall>y\\<in>setOf t. h y \\<noteq> h x", "have \"h x ~= h x\""], ["proof (prove)\nusing this:\n  x \\<in> setOf t\n  \\<forall>y\\<in>setOf t. h y \\<noteq> h x\n\ngoal (1 subgoal):\n 1. h x \\<noteq> h x", "by fastforce"], ["proof (state)\nthis:\n  h x \\<noteq> h x\n\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  h x \\<noteq> h x", "show False"], ["proof (prove)\nusing this:\n  h x \\<noteq> h x\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> setOf t\n\ngoal (2 subgoals):\n 1. tlookup h (h x) t = None \\<Longrightarrow>\n    memb h x t = (x \\<in> setOf t)\n 2. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "from res notIn"], ["proof (chain)\npicking this:\n  memb h x t = False\n  x \\<notin> setOf t", "show ?thesis"], ["proof (prove)\nusing this:\n  memb h x t = False\n  x \\<notin> setOf t\n\ngoal (1 subgoal):\n 1. memb h x t = (x \\<in> setOf t)", "by simp"], ["proof (state)\nthis:\n  memb h x t = (x \\<in> setOf t)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "case (Some z)"], ["proof (state)\nthis:\n  tlookup h (h x) t = Some z\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "note tSome = this"], ["proof (state)\nthis:\n  tlookup h (h x) t = Some z\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "from s tSome tlookup_some"], ["proof (chain)\npicking this:\n  sortedTree h t\n  tlookup h (h x) t = Some z\n  sortedTree ?h ?t \\<and> tlookup ?h ?k ?t = Some ?x \\<longrightarrow>\n  ?x \\<in> setOf ?t \\<and> ?h ?x = ?k", "have zin: \"z : setOf t\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  tlookup h (h x) t = Some z\n  sortedTree ?h ?t \\<and> tlookup ?h ?k ?t = Some ?x \\<longrightarrow>\n  ?x \\<in> setOf ?t \\<and> ?h ?x = ?k\n\ngoal (1 subgoal):\n 1. z \\<in> setOf t", "by fastforce"], ["proof (state)\nthis:\n  z \\<in> setOf t\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       tlookup h (h x) t = Some a \\<Longrightarrow>\n       memb h x t = (x \\<in> setOf t)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. memb h x t = (x \\<in> setOf t)", "proof (cases \"x=z\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)\n 2. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "case True"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)\n 2. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "note xez = this"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)\n 2. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "from tSome xez"], ["proof (chain)\npicking this:\n  tlookup h (h x) t = Some z\n  x = z", "have res: \"memb h x t\""], ["proof (prove)\nusing this:\n  tlookup h (h x) t = Some z\n  x = z\n\ngoal (1 subgoal):\n 1. memb h x t", "by (simp add: memb_def)"], ["proof (state)\nthis:\n  memb h x t\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)\n 2. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "from res zin xez"], ["proof (chain)\npicking this:\n  memb h x t\n  z \\<in> setOf t\n  x = z", "show ?thesis"], ["proof (prove)\nusing this:\n  memb h x t\n  z \\<in> setOf t\n  x = z\n\ngoal (1 subgoal):\n 1. memb h x t = (x \\<in> setOf t)", "by simp"], ["proof (state)\nthis:\n  memb h x t = (x \\<in> setOf t)\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "note xnez = this"], ["proof (state)\nthis:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "from tSome xnez"], ["proof (chain)\npicking this:\n  tlookup h (h x) t = Some z\n  x \\<noteq> z", "have res: \"~ memb h x t\""], ["proof (prove)\nusing this:\n  tlookup h (h x) t = Some z\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. \\<not> memb h x t", "by (simp add: memb_def)"], ["proof (state)\nthis:\n  \\<not> memb h x t\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "have \"x ~: setOf t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> setOf t", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "assume xin: \"x : setOf t\""], ["proof (state)\nthis:\n  x \\<in> setOf t\n\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "from s tSome tlookup_some"], ["proof (chain)\npicking this:\n  sortedTree h t\n  tlookup h (h x) t = Some z\n  sortedTree ?h ?t \\<and> tlookup ?h ?k ?t = Some ?x \\<longrightarrow>\n  ?x \\<in> setOf ?t \\<and> ?h ?x = ?k", "have hzhx: \"h x = h z\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  tlookup h (h x) t = Some z\n  sortedTree ?h ?t \\<and> tlookup ?h ?k ?t = Some ?x \\<longrightarrow>\n  ?x \\<in> setOf ?t \\<and> ?h ?x = ?k\n\ngoal (1 subgoal):\n 1. h x = h z", "by fastforce"], ["proof (state)\nthis:\n  h x = h z\n\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "have o1: \"sorted_distinct_pred h x z t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_distinct_pred h x z t", "by (insert sorted_distinct [of h x z t], simp)"], ["proof (state)\nthis:\n  sorted_distinct_pred h x z t\n\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "from s xin zin hzhx o1"], ["proof (chain)\npicking this:\n  sortedTree h t\n  x \\<in> setOf t\n  z \\<in> setOf t\n  h x = h z\n  sorted_distinct_pred h x z t", "have \"x = z\""], ["proof (prove)\nusing this:\n  sortedTree h t\n  x \\<in> setOf t\n  z \\<in> setOf t\n  h x = h z\n  sorted_distinct_pred h x z t\n\ngoal (1 subgoal):\n 1. x = z", "by fastforce"], ["proof (state)\nthis:\n  x = z\n\ngoal (1 subgoal):\n 1. x \\<in> setOf t \\<Longrightarrow> False", "from this xnez"], ["proof (chain)\npicking this:\n  x = z\n  x \\<noteq> z", "show False"], ["proof (prove)\nusing this:\n  x = z\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> setOf t\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow> memb h x t = (x \\<in> setOf t)", "from this res"], ["proof (chain)\npicking this:\n  x \\<notin> setOf t\n  \\<not> memb h x t", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> setOf t\n  \\<not> memb h x t\n\ngoal (1 subgoal):\n 1. memb h x t = (x \\<in> setOf t)", "by simp"], ["proof (state)\nthis:\n  memb h x t = (x \\<in> setOf t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  memb h x t = (x \\<in> setOf t)\n\ngoal:\nNo subgoals!", "qed"], ["", "declare sorted_distinct_pred_def [simp del]"], ["", "(*============================================================*)"], ["", "section \\<open>Insertion into a Tree\\<close>"], ["", "(*============================================================*)"], ["", "primrec\n  binsert :: \"'a hash => 'a => 'a Tree => 'a Tree\"\nwhere\n  \"binsert h e Tip = (T Tip e Tip)\"\n| \"binsert h e (T t1 x t2) = (if h e < h x then\n                             (T (binsert h e t1) x t2)\n                            else\n                             (if h x < h e then\n                               (T t1 x (binsert h e t2))\n                              else (T t1 e t2)))\""], ["", "text \\<open>A technique for proving disjointness of sets.\\<close>"], ["", "lemma disjCond: \"[| !! x. [| x:A; x:B |] ==> False |] ==> A Int B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> A; x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> False) \\<Longrightarrow>\n    A \\<inter> B = {}", "by fastforce"], ["", "text \\<open>The following is a proof that insertion correctly implements\n        the set interface.\n        Compared to \\<open>BinaryTree_TacticStyle\\<close>, the claim is more\n        difficult, and this time we need to assume as a hypothesis\n        that the tree is sorted.\\<close>"], ["", "lemma binsert_set: \"sortedTree h t -->\n                    setOf (binsert h e t) = (setOf t) - (eqs h e) Un {e}\" \n      (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<longrightarrow>\n    setOf (binsert h e t) = setOf t - eqs h e \\<union> {e}", "proof (induct t)\n  \\<comment> \\<open>base case\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. sortedTree h Tip \\<longrightarrow>\n    setOf (binsert h e Tip) = setOf Tip - eqs h e \\<union> {e}\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h Tip \\<longrightarrow>\n    setOf (binsert h e Tip) = setOf Tip - eqs h e \\<union> {e}", "by (simp add: eqs_def)\n  \\<comment> \\<open>inductition step\\<close>"], ["proof (state)\nthis:\n  sortedTree h Tip \\<longrightarrow>\n  setOf (binsert h e Tip) = setOf Tip - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  sortedTree h t1 \\<longrightarrow>\n  setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  sortedTree h t2 \\<longrightarrow>\n  setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e};\n        sortedTree h t2 \\<longrightarrow>\n        setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (binsert h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e \\<union> {e}", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by (rule sortLemmaL)"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from s1 and h1"], ["proof (chain)\npicking this:\n  sortedTree h t1\n  sortedTree h t1 \\<longrightarrow>\n  setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e}", "have c1: \"setOf (binsert h e t1) = setOf t1 - eqs h e Un {e}\""], ["proof (prove)\nusing this:\n  sortedTree h t1\n  sortedTree h t1 \\<longrightarrow>\n  setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e}", "by simp"], ["proof (state)\nthis:\n  setOf (binsert h e t1) = setOf t1 - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by (rule sortLemmaR)"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from s2 and h2"], ["proof (chain)\npicking this:\n  sortedTree h t2\n  sortedTree h t2 \\<longrightarrow>\n  setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}", "have c2: \"setOf (binsert h e t2) = setOf t2 - eqs h e Un {e}\""], ["proof (prove)\nusing this:\n  sortedTree h t2\n  sortedTree h t2 \\<longrightarrow>\n  setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}", "by simp"], ["proof (state)\nthis:\n  setOf (binsert h e t2) = setOf t2 - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "show \"setOf (binsert h e (T t1 x t2)) = \n          setOf (T t1 x t2) - eqs h e Un {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "proof (cases \"h e < h x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "case True"], ["proof (state)\nthis:\n  h e < h x\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "note eLess = this"], ["proof (state)\nthis:\n  h e < h x\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from eLess"], ["proof (chain)\npicking this:\n  h e < h x", "have res: \"binsert h e (T t1 x t2) = (T (binsert h e t1) x t2)\""], ["proof (prove)\nusing this:\n  h e < h x\n\ngoal (1 subgoal):\n 1. binsert h e (T t1 x t2) = T (binsert h e t1) x t2", "by simp"], ["proof (state)\nthis:\n  binsert h e (T t1 x t2) = T (binsert h e t1) x t2\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "show \"setOf (binsert h e (T t1 x t2)) = \n              setOf (T t1 x t2) - eqs h e Un {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "proof (simp add: res eLess c1)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "show \"insert x (insert e (setOf t1 - eqs h e Un setOf t2)) = \n                insert e (insert x (setOf t1 Un setOf t2) - eqs h e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "have eqsLessX: \"\\<forall>el \\<in> eqs h e. h el < h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. h el < h x", "by (simp add: eqs_def eLess)"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. h el < h x\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from this"], ["proof (chain)\npicking this:\n  \\<forall>el\\<in>eqs h e. h el < h x", "have eqsDisjX: \"\\<forall>el \\<in> eqs h e. h el ~= h x\""], ["proof (prove)\nusing this:\n  \\<forall>el\\<in>eqs h e. h el < h x\n\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. h el \\<noteq> h x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. h el \\<noteq> h x\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have xLessT2: \"\\<forall>r \\<in> setOf t2. h x < h r\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf t2. h x < h r", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>setOf t2. h x < h r\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "have eqsLessT2: \"\\<forall>el \\<in> eqs h e. \\<forall>r \\<in> setOf t2. h el < h r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el < h r", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "fix el"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "assume hel: \"el : eqs h e\""], ["proof (state)\nthis:\n  el \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "from hel eqs_def"], ["proof (chain)\npicking this:\n  el \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}", "have o1: \"h el = h e\""], ["proof (prove)\nusing this:\n  el \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}\n\ngoal (1 subgoal):\n 1. h el = h e", "by fastforce"], ["proof (state)\nthis:\n  h el = h e\n\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "(* auto fails here! *)"], ["proof (state)\nthis:\n  h el = h e\n\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "assume hr: \"r : setOf t2\""], ["proof (state)\nthis:\n  r \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. \\<And>el r.\n       \\<lbrakk>el \\<in> eqs h e; r \\<in> setOf t2\\<rbrakk>\n       \\<Longrightarrow> h el < h r", "from xLessT2 hr o1 eLess"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>setOf t2. h x < h r\n  r \\<in> setOf t2\n  h el = h e\n  h e < h x", "show \"h el < h r\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>setOf t2. h x < h r\n  r \\<in> setOf t2\n  h el = h e\n  h e < h x\n\ngoal (1 subgoal):\n 1. h el < h r", "by auto"], ["proof (state)\nthis:\n  h el < h r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el < h r\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from eqsLessT2"], ["proof (chain)\npicking this:\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el < h r", "have eqsDisjT2: \"\\<forall>el \\<in> eqs h e. \\<forall>r \\<in> setOf t2. h el ~= h r\""], ["proof (prove)\nusing this:\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el < h r\n\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el \\<noteq> h r", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el \\<noteq> h r\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "(* auto fails here *)"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el \\<noteq> h r\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from eqsDisjX eqsDisjT2"], ["proof (chain)\npicking this:\n  \\<forall>el\\<in>eqs h e. h el \\<noteq> h x\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el \\<noteq> h r", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>el\\<in>eqs h e. h el \\<noteq> h x\n  \\<forall>el\\<in>eqs h e. \\<forall>r\\<in>setOf t2. h el \\<noteq> h r\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "by fastforce"], ["proof (state)\nthis:\n  insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n  insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (insert e (setOf t1 - eqs h e \\<union> setOf t2)) =\n  insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "case False"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "note eNotLess = this"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "show \"setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e Un {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "proof (cases \"h x < h e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "case True"], ["proof (state)\nthis:\n  h x < h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "note xLess = this"], ["proof (state)\nthis:\n  h x < h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from xLess"], ["proof (chain)\npicking this:\n  h x < h e", "have res: \"binsert h e (T t1 x t2) = (T t1 x (binsert h e t2))\""], ["proof (prove)\nusing this:\n  h x < h e\n\ngoal (1 subgoal):\n 1. binsert h e (T t1 x t2) = T t1 x (binsert h e t2)", "by simp"], ["proof (state)\nthis:\n  binsert h e (T t1 x t2) = T t1 x (binsert h e t2)\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "show \"setOf (binsert h e (T t1 x t2)) = \n              setOf (T t1 x t2) - eqs h e Un {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "proof (simp add: res xLess eNotLess c2)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "show \"insert x (insert e (setOf t1 Un (setOf t2 - eqs h e))) = \n                insert e (insert x (setOf t1 Un setOf t2) - eqs h e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "have XLessEqs: \"\\<forall>el \\<in> eqs h e. h x < h el\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. h x < h el", "by (simp add: eqs_def xLess)"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. h x < h el\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from this"], ["proof (chain)\npicking this:\n  \\<forall>el\\<in>eqs h e. h x < h el", "have eqsDisjX: \"\\<forall>el \\<in> eqs h e. h el ~= h x\""], ["proof (prove)\nusing this:\n  \\<forall>el\\<in>eqs h e. h x < h el\n\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. h el \\<noteq> h x", "by auto"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. h el \\<noteq> h x\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have t1LessX: \"\\<forall>l \\<in> setOf t1. h l < h x\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf t1. h l < h x", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>setOf t1. h l < h x\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "have T1lessEqs: \"\\<forall>el \\<in> eqs h e. \\<forall>l \\<in> setOf t1. h l < h el\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h l < h el", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "fix el"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "assume hel: \"el : eqs h e\""], ["proof (state)\nthis:\n  el \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "assume hl: \"l : setOf t1\""], ["proof (state)\nthis:\n  l \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "from hel eqs_def"], ["proof (chain)\npicking this:\n  el \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}", "have o1: \"h el = h e\""], ["proof (prove)\nusing this:\n  el \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}\n\ngoal (1 subgoal):\n 1. h el = h e", "by fastforce"], ["proof (state)\nthis:\n  h el = h e\n\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "(* auto fails here! *)"], ["proof (state)\nthis:\n  h el = h e\n\ngoal (1 subgoal):\n 1. \\<And>el l.\n       \\<lbrakk>el \\<in> eqs h e; l \\<in> setOf t1\\<rbrakk>\n       \\<Longrightarrow> h l < h el", "from t1LessX hl o1 xLess"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>setOf t1. h l < h x\n  l \\<in> setOf t1\n  h el = h e\n  h x < h e", "show \"h l < h el\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>setOf t1. h l < h x\n  l \\<in> setOf t1\n  h el = h e\n  h x < h e\n\ngoal (1 subgoal):\n 1. h l < h el", "by auto"], ["proof (state)\nthis:\n  h l < h el\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h l < h el\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from T1lessEqs"], ["proof (chain)\npicking this:\n  \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h l < h el", "have T1disjEqs: \"\\<forall>el \\<in> eqs h e. \\<forall>l \\<in> setOf t1. h el ~= h l\""], ["proof (prove)\nusing this:\n  \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h l < h el\n\ngoal (1 subgoal):\n 1. \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h el \\<noteq> h l", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h el \\<noteq> h l\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from eqsDisjX T1lessEqs"], ["proof (chain)\npicking this:\n  \\<forall>el\\<in>eqs h e. h el \\<noteq> h x\n  \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h l < h el", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>el\\<in>eqs h e. h el \\<noteq> h x\n  \\<forall>el\\<in>eqs h e. \\<forall>l\\<in>setOf t1. h l < h el\n\ngoal (1 subgoal):\n 1. insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "by auto"], ["proof (state)\nthis:\n  insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n  insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (insert e (setOf t1 \\<union> (setOf t2 - eqs h e))) =\n  insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e \\<union> {e}\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "case False"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "note xNotLess = this"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from xNotLess eNotLess"], ["proof (chain)\npicking this:\n  \\<not> h x < h e\n  \\<not> h e < h x", "have xeqe: \"h x = h e\""], ["proof (prove)\nusing this:\n  \\<not> h x < h e\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. h x = h e", "by simp"], ["proof (state)\nthis:\n  h x = h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "from xeqe"], ["proof (chain)\npicking this:\n  h x = h e", "have res: \"binsert h e (T t1 x t2) = (T t1 e t2)\""], ["proof (prove)\nusing this:\n  h x = h e\n\ngoal (1 subgoal):\n 1. binsert h e (T t1 x t2) = T t1 e t2", "by simp"], ["proof (state)\nthis:\n  binsert h e (T t1 x t2) = T t1 e t2\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "show \"setOf (binsert h e (T t1 x t2)) = \n              setOf (T t1 x t2) - eqs h e Un {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (binsert h e (T t1 x t2)) =\n    setOf (T t1 x t2) - eqs h e \\<union> {e}", "proof (simp add: res eNotLess xeqe)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert e (setOf t1 \\<union> setOf t2) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "show \"insert e (setOf t1 Un setOf t2) = \n                insert e (insert x (setOf t1 Un setOf t2) - eqs h e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert e (setOf t1 \\<union> setOf t2) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert e (setOf t1 \\<union> setOf t2) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "have \"insert x (setOf t1 Un setOf t2) - eqs h e = \n                  setOf t1 Un setOf t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "have (* o1: *) \"x : eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> eqs h e", "by (simp add: eqs_def xeqe)"], ["proof (state)\nthis:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "moreover"], ["proof (state)\nthis:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "have (* o2: *) \"(setOf t1) Int (eqs h e) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t1 \\<inter> eqs h e = {}", "proof (rule disjCond)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume whSet: \"w : setOf t1\""], ["proof (state)\nthis:\n  w \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume whEq: \"w : eqs h e\""], ["proof (state)\nthis:\n  w \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from whSet s"], ["proof (chain)\npicking this:\n  w \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have o1: \"h w < h x\""], ["proof (prove)\nusing this:\n  w \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h w < h x", "by simp"], ["proof (state)\nthis:\n  h w < h x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from whEq eqs_def"], ["proof (chain)\npicking this:\n  w \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}", "have o2: \"h w = h e\""], ["proof (prove)\nusing this:\n  w \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}\n\ngoal (1 subgoal):\n 1. h w = h e", "by fastforce"], ["proof (state)\nthis:\n  h w = h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from o2 xeqe"], ["proof (chain)\npicking this:\n  h w = h e\n  h x = h e", "have o3: \"~ h w < h x\""], ["proof (prove)\nusing this:\n  h w = h e\n  h x = h e\n\ngoal (1 subgoal):\n 1. \\<not> h w < h x", "by simp"], ["proof (state)\nthis:\n  \\<not> h w < h x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from o1 o3"], ["proof (chain)\npicking this:\n  h w < h x\n  \\<not> h w < h x", "show False"], ["proof (prove)\nusing this:\n  h w < h x\n  \\<not> h w < h x\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t1 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "moreover"], ["proof (state)\nthis:\n  setOf t1 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "have (* o3: *) \"(setOf t2) Int (eqs h e) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t2 \\<inter> eqs h e = {}", "proof (rule disjCond)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume whSet: \"w : setOf t2\""], ["proof (state)\nthis:\n  w \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume whEq: \"w : eqs h e\""], ["proof (state)\nthis:\n  w \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from whSet s"], ["proof (chain)\npicking this:\n  w \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have o1: \"h x < h w\""], ["proof (prove)\nusing this:\n  w \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h w", "by simp"], ["proof (state)\nthis:\n  h x < h w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from whEq eqs_def"], ["proof (chain)\npicking this:\n  w \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}", "have o2: \"h w = h e\""], ["proof (prove)\nusing this:\n  w \\<in> eqs h e\n  eqs ?h ?x \\<equiv> {y. ?h y = ?h ?x}\n\ngoal (1 subgoal):\n 1. h w = h e", "by fastforce"], ["proof (state)\nthis:\n  h w = h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from o2 xeqe"], ["proof (chain)\npicking this:\n  h w = h e\n  h x = h e", "have o3: \"~ h x < h w\""], ["proof (prove)\nusing this:\n  h w = h e\n  h x = h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h w", "by simp"], ["proof (state)\nthis:\n  \\<not> h x < h w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from o1 o3"], ["proof (chain)\npicking this:\n  h x < h w\n  \\<not> h x < h w", "show False"], ["proof (prove)\nusing this:\n  h x < h w\n  \\<not> h x < h w\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> eqs h e\n  setOf t1 \\<inter> eqs h e = {}\n  setOf t2 \\<inter> eqs h e = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> eqs h e\n  setOf t1 \\<inter> eqs h e = {}\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "by auto"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2\n\ngoal (1 subgoal):\n 1. insert e (setOf t1 \\<union> setOf t2) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "from this"], ["proof (chain)\npicking this:\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2", "show ?thesis"], ["proof (prove)\nusing this:\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2\n\ngoal (1 subgoal):\n 1. insert e (setOf t1 \\<union> setOf t2) =\n    insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)", "by simp"], ["proof (state)\nthis:\n  insert e (setOf t1 \\<union> setOf t2) =\n  insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert e (setOf t1 \\<union> setOf t2) =\n  insert e (insert x (setOf t1 \\<union> setOf t2) - eqs h e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e \\<union> {e}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e \\<union> {e}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e \\<union> {e}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2) \\<longrightarrow>\n  setOf (binsert h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e \\<union> {e}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Using the correctness of set implementation,\n        preserving sortedness is still simple.\\<close>"], ["", "lemma binsert_sorted: \"sortedTree h t --> sortedTree h (binsert h x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<longrightarrow> sortedTree h (binsert h x t)", "by (induct t) (auto simp add: binsert_set)"], ["", "text \\<open>We summarize the specification of binsert as follows.\\<close>"], ["", "corollary binsert_spec: \"sortedTree h t -->\n                     sortedTree h (binsert h x t) &\n                     setOf (binsert h e t) = (setOf t) - (eqs h e) Un {e}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<longrightarrow>\n    sortedTree h (binsert h x t) \\<and>\n    setOf (binsert h e t) = setOf t - eqs h e \\<union> {e}", "by (simp add: binsert_set binsert_sorted)"], ["", "(*============================================================*)"], ["", "section \\<open>Removing an element from a tree\\<close>"], ["", "(*============================================================*)"], ["", "text \\<open>These proofs are influenced by those in \\<open>BinaryTree_Tactic\\<close>\\<close>"], ["", "primrec\n  rm :: \"'a hash => 'a Tree => 'a\"\n  \\<comment> \\<open>rightmost element of a tree\\<close>\nwhere\n\"rm h (T t1 x t2) =\n  (if t2=Tip then x else rm h t2)\""], ["", "primrec\n  wrm :: \"'a hash => 'a Tree => 'a Tree\"\n  \\<comment> \\<open>tree without the rightmost element\\<close>\nwhere\n\"wrm h (T t1 x t2) =\n  (if t2=Tip then t1 else (T t1 x (wrm h t2)))\""], ["", "primrec\n  wrmrm :: \"'a hash => 'a Tree => 'a Tree * 'a\"\n  \\<comment> \\<open>computing rightmost and removal in one pass\\<close>\nwhere\n\"wrmrm h (T t1 x t2) =\n  (if t2=Tip then (t1,x)\n   else (T t1 x (fst (wrmrm h t2)),\n         snd (wrmrm h t2)))\""], ["", "primrec\n  remove :: \"'a hash => 'a => 'a Tree => 'a Tree\"\n   \\<comment> \\<open>removal of an element from the tree\\<close>\nwhere\n  \"remove h e Tip = Tip\"\n| \"remove h e (T t1 x t2) = \n    (if h e < h x then (T (remove h e t1) x t2)\n     else if h x < h e then (T t1 x (remove h e t2))\n     else (if t1=Tip then t2\n           else let (t1p,r) = wrmrm h t1\n                in (T t1p r t2)))\""], ["", "theorem wrmrm_decomp: \"t ~= Tip --> wrmrm h t = (wrm h t, rm h t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> Tip \\<longrightarrow> wrmrm h t = (wrm h t, rm h t)", "apply (induct_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Tip \\<noteq> Tip \\<longrightarrow> wrmrm h Tip = (wrm h Tip, rm h Tip)\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>x1 \\<noteq> Tip \\<longrightarrow>\n                wrmrm h x1 = (wrm h x1, rm h x1);\n        x3 \\<noteq> Tip \\<longrightarrow>\n        wrmrm h x3 = (wrm h x3, rm h x3)\\<rbrakk>\n       \\<Longrightarrow> T x1 x2 x3 \\<noteq> Tip \\<longrightarrow>\n                         wrmrm h (T x1 x2 x3) =\n                         (wrm h (T x1 x2 x3), rm h (T x1 x2 x3))", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rm_set: \"t ~= Tip & sortedTree h t --> rm h t : setOf t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> Tip \\<and> sortedTree h t \\<longrightarrow>\n    rm h t \\<in> setOf t", "apply (induct_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    rm h Tip \\<in> setOf Tip\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>x1 \\<noteq> Tip \\<and> sortedTree h x1 \\<longrightarrow>\n                rm h x1 \\<in> setOf x1;\n        x3 \\<noteq> Tip \\<and> sortedTree h x3 \\<longrightarrow>\n        rm h x3 \\<in> setOf x3\\<rbrakk>\n       \\<Longrightarrow> T x1 x2 x3 \\<noteq> Tip \\<and>\n                         sortedTree h (T x1 x2 x3) \\<longrightarrow>\n                         rm h (T x1 x2 x3) \\<in> setOf (T x1 x2 x3)", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wrm_set: \"t ~= Tip & sortedTree h t --> \n                setOf (wrm h t) = setOf t - {rm h t}\" (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> Tip \\<and> sortedTree h t \\<longrightarrow>\n    setOf (wrm h t) = setOf t - {rm h t}", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    setOf (wrm h Tip) = setOf Tip - {rm h Tip}\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    setOf (wrm h Tip) = setOf Tip - {rm h Tip}", "by simp"], ["proof (state)\nthis:\n  Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n  setOf (wrm h Tip) = setOf Tip - {rm h Tip}\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n  setOf (wrm h t1) = setOf t1 - {rm h t1}\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  setOf (wrm h t2) = setOf t2 - {rm h t2}\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                setOf (wrm h t1) = setOf t1 - {rm h t1};\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        setOf (wrm h t2) = setOf t2 - {rm h t2}\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (wrm h (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - {rm h (T t1 x2 t2)}", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T t1 x t2 \\<noteq> Tip \\<and> sortedTree h (T t1 x t2) \\<longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "proof (rule impI, erule conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>T t1 x t2 \\<noteq> Tip; sortedTree h (T t1 x t2)\\<rbrakk>\n    \\<Longrightarrow> setOf (wrm h (T t1 x t2)) =\n                      setOf (T t1 x t2) - {rm h (T t1 x t2)}", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>T t1 x t2 \\<noteq> Tip; sortedTree h (T t1 x t2)\\<rbrakk>\n    \\<Longrightarrow> setOf (wrm h (T t1 x t2)) =\n                      setOf (T t1 x t2) - {rm h (T t1 x t2)}", "show \"setOf (wrm h (T t1 x t2)) = \n          setOf (T t1 x t2) - {rm h (T t1 x t2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "proof (cases \"t2 = Tip\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n 2. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "case True"], ["proof (state)\nthis:\n  t2 = Tip\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n 2. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "note t2tip = this"], ["proof (state)\nthis:\n  t2 = Tip\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n 2. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from t2tip"], ["proof (chain)\npicking this:\n  t2 = Tip", "have rm_res: \"rm h (T t1 x t2) = x\""], ["proof (prove)\nusing this:\n  t2 = Tip\n\ngoal (1 subgoal):\n 1. rm h (T t1 x t2) = x", "by simp"], ["proof (state)\nthis:\n  rm h (T t1 x t2) = x\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n 2. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from t2tip"], ["proof (chain)\npicking this:\n  t2 = Tip", "have wrm_res: \"wrm h (T t1 x t2) = t1\""], ["proof (prove)\nusing this:\n  t2 = Tip\n\ngoal (1 subgoal):\n 1. wrm h (T t1 x t2) = t1", "by simp"], ["proof (state)\nthis:\n  wrm h (T t1 x t2) = t1\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n 2. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have \"x ~: setOf t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. x \\<notin> setOf t1", "by auto"], ["proof (state)\nthis:\n  x \\<notin> setOf t1\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n 2. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from this rm_res wrm_res t2tip"], ["proof (chain)\npicking this:\n  x \\<notin> setOf t1\n  rm h (T t1 x t2) = x\n  wrm h (T t1 x t2) = t1\n  t2 = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> setOf t1\n  rm h (T t1 x t2) = x\n  wrm h (T t1 x t2) = t1\n  t2 = Tip\n\ngoal (1 subgoal):\n 1. setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "by simp"], ["proof (state)\nthis:\n  setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "case False"], ["proof (state)\nthis:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "note t2nTip = this"], ["proof (state)\nthis:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from t2nTip"], ["proof (chain)\npicking this:\n  t2 \\<noteq> Tip", "have rm_res: \"rm h (T t1 x t2) = rm h t2\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. rm h (T t1 x t2) = rm h t2", "by simp"], ["proof (state)\nthis:\n  rm h (T t1 x t2) = rm h t2\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from t2nTip"], ["proof (chain)\npicking this:\n  t2 \\<noteq> Tip", "have wrm_res: \"wrm h (T t1 x t2) = T t1 x (wrm h t2)\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. wrm h (T t1 x t2) = T t1 x (wrm h t2)", "by simp"], ["proof (state)\nthis:\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by simp"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "from h2 t2nTip s2"], ["proof (chain)\npicking this:\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  setOf (wrm h t2) = setOf t2 - {rm h t2}\n  t2 \\<noteq> Tip\n  sortedTree h t2", "have o1: \"setOf (wrm h t2) = setOf t2 - {rm h t2}\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  setOf (wrm h t2) = setOf t2 - {rm h t2}\n  t2 \\<noteq> Tip\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. setOf (wrm h t2) = setOf t2 - {rm h t2}", "by simp"], ["proof (state)\nthis:\n  setOf (wrm h t2) = setOf t2 - {rm h t2}\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow>\n    setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}", "proof (simp add: rm_res wrm_res t2nTip h2 o1)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n    insert x (setOf t1 \\<union> setOf t2) - {rm h t2}", "show \"insert x (setOf t1 Un (setOf t2 - {rm h t2})) = \n              insert x (setOf t1 Un setOf t2) - {rm h t2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n    insert x (setOf t1 \\<union> setOf t2) - {rm h t2}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n    insert x (setOf t1 \\<union> setOf t2) - {rm h t2}", "from s rm_set t2nTip"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  t2 \\<noteq> Tip", "have xOk: \"h x < h (rm h t2)\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. h x < h (rm h t2)", "by auto"], ["proof (state)\nthis:\n  h x < h (rm h t2)\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n    insert x (setOf t1 \\<union> setOf t2) - {rm h t2}", "have t1Ok: \"\\<forall>l \\<in> setOf t1. h l < h (rm h t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf t1. h l < h (rm h t2)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "fix l :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "assume ldef: \"l : setOf t1\""], ["proof (state)\nthis:\n  l \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from ldef s"], ["proof (chain)\npicking this:\n  l \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have lx: \"h l < h x\""], ["proof (prove)\nusing this:\n  l \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h l < h x", "by auto"], ["proof (state)\nthis:\n  h l < h x\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from lx xOk"], ["proof (chain)\npicking this:\n  h l < h x\n  h x < h (rm h t2)", "show \"h l < h (rm h t2)\""], ["proof (prove)\nusing this:\n  h l < h x\n  h x < h (rm h t2)\n\ngoal (1 subgoal):\n 1. h l < h (rm h t2)", "by auto"], ["proof (state)\nthis:\n  h l < h (rm h t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>setOf t1. h l < h (rm h t2)\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n    insert x (setOf t1 \\<union> setOf t2) - {rm h t2}", "from xOk t1Ok"], ["proof (chain)\npicking this:\n  h x < h (rm h t2)\n  \\<forall>l\\<in>setOf t1. h l < h (rm h t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  h x < h (rm h t2)\n  \\<forall>l\\<in>setOf t1. h l < h (rm h t2)\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n    insert x (setOf t1 \\<union> setOf t2) - {rm h t2}", "by auto"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n  insert x (setOf t1 \\<union> setOf t2) - {rm h t2}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> (setOf t2 - {rm h t2})) =\n  insert x (setOf t1 \\<union> setOf t2) - {rm h t2}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T t1 x t2 \\<noteq> Tip \\<and> sortedTree h (T t1 x t2) \\<longrightarrow>\n  setOf (wrm h (T t1 x t2)) = setOf (T t1 x t2) - {rm h (T t1 x t2)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wrm_set1: \"t ~= Tip & sortedTree h t --> setOf (wrm h t) <= setOf t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> Tip \\<and> sortedTree h t \\<longrightarrow>\n    setOf (wrm h t) \\<subseteq> setOf t", "by (auto simp add: wrm_set)"], ["", "lemma wrm_sort: \"t ~= Tip & sortedTree h t --> sortedTree h (wrm h t)\" (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> Tip \\<and> sortedTree h t \\<longrightarrow>\n    sortedTree h (wrm h t)", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    sortedTree h (wrm h Tip)\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    sortedTree h (wrm h Tip)", "by simp"], ["proof (state)\nthis:\n  Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n  sortedTree h (wrm h Tip)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n  sortedTree h (wrm h t1)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  sortedTree h (wrm h t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                sortedTree h (wrm h t1);\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        sortedTree h (wrm h t2)\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (wrm h (T t1 x2 t2))", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T t1 x t2 \\<noteq> Tip \\<and> sortedTree h (T t1 x t2) \\<longrightarrow>\n    sortedTree h (wrm h (T t1 x t2))", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>T t1 x t2 \\<noteq> Tip; sortedTree h (T t1 x t2)\\<rbrakk>\n    \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>T t1 x t2 \\<noteq> Tip; sortedTree h (T t1 x t2)\\<rbrakk>\n    \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "show \"sortedTree h (wrm h (T t1 x t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (wrm h (T t1 x t2))", "proof (cases \"t2 = Tip\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "case True"], ["proof (state)\nthis:\n  t2 = Tip\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "note t2tip = this"], ["proof (state)\nthis:\n  t2 = Tip\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from t2tip"], ["proof (chain)\npicking this:\n  t2 = Tip", "have res: \"wrm h (T t1 x t2) = t1\""], ["proof (prove)\nusing this:\n  t2 = Tip\n\ngoal (1 subgoal):\n 1. wrm h (T t1 x t2) = t1", "by simp"], ["proof (state)\nthis:\n  wrm h (T t1 x t2) = t1\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from res s"], ["proof (chain)\npicking this:\n  wrm h (T t1 x t2) = t1\n  sortedTree h (T t1 x t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  wrm h (T t1 x t2) = t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h (wrm h (T t1 x t2))", "by simp"], ["proof (state)\nthis:\n  sortedTree h (wrm h (T t1 x t2))\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "case False"], ["proof (state)\nthis:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "note t2nTip = this"], ["proof (state)\nthis:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from t2nTip"], ["proof (chain)\npicking this:\n  t2 \\<noteq> Tip", "have res: \"wrm h (T t1 x t2) = T t1 x (wrm h t2)\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. wrm h (T t1 x t2) = T t1 x (wrm h t2)", "by simp"], ["proof (state)\nthis:\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by simp"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by simp"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from s2 h2 t2nTip"], ["proof (chain)\npicking this:\n  sortedTree h t2\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  sortedTree h (wrm h t2)\n  t2 \\<noteq> Tip", "have o1: \"sortedTree h (wrm h t2)\""], ["proof (prove)\nusing this:\n  sortedTree h t2\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  sortedTree h (wrm h t2)\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. sortedTree h (wrm h t2)", "by simp"], ["proof (state)\nthis:\n  sortedTree h (wrm h t2)\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from s2 t2nTip wrm_set1"], ["proof (chain)\npicking this:\n  sortedTree h t2\n  t2 \\<noteq> Tip\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  setOf (wrm ?h ?t) \\<subseteq> setOf ?t", "have o2: \"setOf (wrm h t2) <= setOf t2\""], ["proof (prove)\nusing this:\n  sortedTree h t2\n  t2 \\<noteq> Tip\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  setOf (wrm ?h ?t) \\<subseteq> setOf ?t\n\ngoal (1 subgoal):\n 1. setOf (wrm h t2) \\<subseteq> setOf t2", "by auto"], ["proof (state)\nthis:\n  setOf (wrm h t2) \\<subseteq> setOf t2\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from s o2"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  setOf (wrm h t2) \\<subseteq> setOf t2", "have o3: \"\\<forall>r \\<in> setOf (wrm h t2). h x < h r\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  setOf (wrm h t2) \\<subseteq> setOf t2\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf (wrm h t2). h x < h r", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>setOf (wrm h t2). h x < h r\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> sortedTree h (wrm h (T t1 x t2))", "from s1 o1 o3 res s"], ["proof (chain)\npicking this:\n  sortedTree h t1\n  sortedTree h (wrm h t2)\n  \\<forall>r\\<in>setOf (wrm h t2). h x < h r\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)\n  sortedTree h (T t1 x t2)", "show \"sortedTree h (wrm h (T t1 x t2))\""], ["proof (prove)\nusing this:\n  sortedTree h t1\n  sortedTree h (wrm h t2)\n  \\<forall>r\\<in>setOf (wrm h t2). h x < h r\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h (wrm h (T t1 x t2))", "by simp"], ["proof (state)\nthis:\n  sortedTree h (wrm h (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (wrm h (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T t1 x t2 \\<noteq> Tip \\<and> sortedTree h (T t1 x t2) \\<longrightarrow>\n  sortedTree h (wrm h (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wrm_less_rm: \n  \"t ~= Tip & sortedTree h t --> \n   (\\<forall>l \\<in> setOf (wrm h t). h l < h (rm h t))\" (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> Tip \\<and> sortedTree h t \\<longrightarrow>\n    (\\<forall>l\\<in>setOf (wrm h t). h l < h (rm h t))", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    (\\<forall>l\\<in>setOf (wrm h Tip). h l < h (rm h Tip))\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n    (\\<forall>l\\<in>setOf (wrm h Tip). h l < h (rm h Tip))", "by simp"], ["proof (state)\nthis:\n  Tip \\<noteq> Tip \\<and> sortedTree h Tip \\<longrightarrow>\n  (\\<forall>l\\<in>setOf (wrm h Tip). h l < h (rm h Tip))\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n  (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1))\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>t1 \\<noteq> Tip \\<and> sortedTree h t1 \\<longrightarrow>\n                (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1));\n        t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n        (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\\<rbrakk>\n       \\<Longrightarrow> T t1 x2 t2 \\<noteq> Tip \\<and>\n                         sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         (\\<forall>l\\<in>setOf (wrm h (T t1 x2 t2)).\n                             h l < h (rm h (T t1 x2 t2)))", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T t1 x t2 \\<noteq> Tip \\<and> sortedTree h (T t1 x t2) \\<longrightarrow>\n    (\\<forall>l\\<in>setOf (wrm h (T t1 x t2)). h l < h (rm h (T t1 x t2)))", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>l \\<in> setOf (wrm h (T t1 x t2)); T t1 x t2 \\<noteq> Tip;\n        sortedTree h (T t1 x t2)\\<rbrakk>\n       \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "fix l :: \"'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>l \\<in> setOf (wrm h (T t1 x t2)); T t1 x t2 \\<noteq> Tip;\n        sortedTree h (T t1 x t2)\\<rbrakk>\n       \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "assume ldef: \"l : setOf (wrm h (T t1 x t2))\""], ["proof (state)\nthis:\n  l \\<in> setOf (wrm h (T t1 x t2))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>l \\<in> setOf (wrm h (T t1 x t2)); T t1 x t2 \\<noteq> Tip;\n        sortedTree h (T t1 x t2)\\<rbrakk>\n       \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>l \\<in> setOf (wrm h (T t1 x t2)); T t1 x t2 \\<noteq> Tip;\n        sortedTree h (T t1 x t2)\\<rbrakk>\n       \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by simp"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>l \\<in> setOf (wrm h (T t1 x t2)); T t1 x t2 \\<noteq> Tip;\n        sortedTree h (T t1 x t2)\\<rbrakk>\n       \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by simp"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>l \\<in> setOf (wrm h (T t1 x t2)); T t1 x t2 \\<noteq> Tip;\n        sortedTree h (T t1 x t2)\\<rbrakk>\n       \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "show \"h l < h (rm h (T t1 x t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h l < h (rm h (T t1 x t2))", "proof (cases \"t2 = Tip\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "case True"], ["proof (state)\nthis:\n  t2 = Tip\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "note t2tip = this"], ["proof (state)\nthis:\n  t2 = Tip\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from t2tip"], ["proof (chain)\npicking this:\n  t2 = Tip", "have rm_res: \"rm h (T t1 x t2) = x\""], ["proof (prove)\nusing this:\n  t2 = Tip\n\ngoal (1 subgoal):\n 1. rm h (T t1 x t2) = x", "by simp"], ["proof (state)\nthis:\n  rm h (T t1 x t2) = x\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from t2tip"], ["proof (chain)\npicking this:\n  t2 = Tip", "have wrm_res: \"wrm h (T t1 x t2) = t1\""], ["proof (prove)\nusing this:\n  t2 = Tip\n\ngoal (1 subgoal):\n 1. wrm h (T t1 x t2) = t1", "by simp"], ["proof (state)\nthis:\n  wrm h (T t1 x t2) = t1\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from ldef wrm_res"], ["proof (chain)\npicking this:\n  l \\<in> setOf (wrm h (T t1 x t2))\n  wrm h (T t1 x t2) = t1", "have o1: \"l : setOf t1\""], ["proof (prove)\nusing this:\n  l \\<in> setOf (wrm h (T t1 x t2))\n  wrm h (T t1 x t2) = t1\n\ngoal (1 subgoal):\n 1. l \\<in> setOf t1", "by simp"], ["proof (state)\nthis:\n  l \\<in> setOf t1\n\ngoal (2 subgoals):\n 1. t2 = Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))\n 2. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from rm_res o1 s"], ["proof (chain)\npicking this:\n  rm h (T t1 x t2) = x\n  l \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  rm h (T t1 x t2) = x\n  l \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h l < h (rm h (T t1 x t2))", "by simp"], ["proof (state)\nthis:\n  h l < h (rm h (T t1 x t2))\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "case False"], ["proof (state)\nthis:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "note t2nTip = this"], ["proof (state)\nthis:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from t2nTip"], ["proof (chain)\npicking this:\n  t2 \\<noteq> Tip", "have rm_res: \"rm h (T t1 x t2) = rm h t2\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. rm h (T t1 x t2) = rm h t2", "by simp"], ["proof (state)\nthis:\n  rm h (T t1 x t2) = rm h t2\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from t2nTip"], ["proof (chain)\npicking this:\n  t2 \\<noteq> Tip", "have wrm_res: \"wrm h (T t1 x t2) = T t1 x (wrm h t2)\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. wrm h (T t1 x t2) = T t1 x (wrm h t2)", "by simp"], ["proof (state)\nthis:\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from ldef wrm_res"], ["proof (chain)\npicking this:\n  l \\<in> setOf (wrm h (T t1 x t2))\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)", "have l_scope: \"l : {x} Un setOf t1 Un setOf (wrm h t2)\""], ["proof (prove)\nusing this:\n  l \\<in> setOf (wrm h (T t1 x t2))\n  wrm h (T t1 x t2) = T t1 x (wrm h t2)\n\ngoal (1 subgoal):\n 1. l \\<in> {x} \\<union> setOf t1 \\<union> setOf (wrm h t2)", "by simp"], ["proof (state)\nthis:\n  l \\<in> {x} \\<union> setOf t1 \\<union> setOf (wrm h t2)\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "have hLess: \"h l < h (rm h t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h l < h (rm h t2)", "proof (cases \"l = x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l = x \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "case True"], ["proof (state)\nthis:\n  l = x\n\ngoal (2 subgoals):\n 1. l = x \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "note lx = this"], ["proof (state)\nthis:\n  l = x\n\ngoal (2 subgoals):\n 1. l = x \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "from s t2nTip rm_set s2"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  t2 \\<noteq> Tip\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  sortedTree h t2", "have o1: \"h x < h (rm h t2)\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  t2 \\<noteq> Tip\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. h x < h (rm h t2)", "by auto"], ["proof (state)\nthis:\n  h x < h (rm h t2)\n\ngoal (2 subgoals):\n 1. l = x \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "from lx o1"], ["proof (chain)\npicking this:\n  l = x\n  h x < h (rm h t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  l = x\n  h x < h (rm h t2)\n\ngoal (1 subgoal):\n 1. h l < h (rm h t2)", "by simp"], ["proof (state)\nthis:\n  h l < h (rm h t2)\n\ngoal (1 subgoal):\n 1. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "case False"], ["proof (state)\nthis:\n  l \\<noteq> x\n\ngoal (1 subgoal):\n 1. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "note lnx = this"], ["proof (state)\nthis:\n  l \\<noteq> x\n\ngoal (1 subgoal):\n 1. l \\<noteq> x \\<Longrightarrow> h l < h (rm h t2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. h l < h (rm h t2)", "proof (cases \"l : setOf t1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "case True"], ["proof (state)\nthis:\n  l \\<in> setOf t1\n\ngoal (2 subgoals):\n 1. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "note l_in_t1 = this"], ["proof (state)\nthis:\n  l \\<in> setOf t1\n\ngoal (2 subgoals):\n 1. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from s t2nTip rm_set s2"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  t2 \\<noteq> Tip\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  sortedTree h t2", "have o1: \"h x < h (rm h t2)\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  t2 \\<noteq> Tip\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. h x < h (rm h t2)", "by auto"], ["proof (state)\nthis:\n  h x < h (rm h t2)\n\ngoal (2 subgoals):\n 1. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from l_in_t1 s"], ["proof (chain)\npicking this:\n  l \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have o2: \"h l < h x\""], ["proof (prove)\nusing this:\n  l \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h l < h x", "by auto"], ["proof (state)\nthis:\n  h l < h x\n\ngoal (2 subgoals):\n 1. l \\<in> setOf t1 \\<Longrightarrow> h l < h (rm h t2)\n 2. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from o1 o2"], ["proof (chain)\npicking this:\n  h x < h (rm h t2)\n  h l < h x", "show ?thesis"], ["proof (prove)\nusing this:\n  h x < h (rm h t2)\n  h l < h x\n\ngoal (1 subgoal):\n 1. h l < h (rm h t2)", "by simp"], ["proof (state)\nthis:\n  h l < h (rm h t2)\n\ngoal (1 subgoal):\n 1. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "case False"], ["proof (state)\nthis:\n  l \\<notin> setOf t1\n\ngoal (1 subgoal):\n 1. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "note l_notin_t1 = this"], ["proof (state)\nthis:\n  l \\<notin> setOf t1\n\ngoal (1 subgoal):\n 1. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from l_scope lnx l_notin_t1"], ["proof (chain)\npicking this:\n  l \\<in> {x} \\<union> setOf t1 \\<union> setOf (wrm h t2)\n  l \\<noteq> x\n  l \\<notin> setOf t1", "have l_in_res: \"l : setOf (wrm h t2)\""], ["proof (prove)\nusing this:\n  l \\<in> {x} \\<union> setOf t1 \\<union> setOf (wrm h t2)\n  l \\<noteq> x\n  l \\<notin> setOf t1\n\ngoal (1 subgoal):\n 1. l \\<in> setOf (wrm h t2)", "by auto"], ["proof (state)\nthis:\n  l \\<in> setOf (wrm h t2)\n\ngoal (1 subgoal):\n 1. l \\<notin> setOf t1 \\<Longrightarrow> h l < h (rm h t2)", "from l_in_res h2 t2nTip s2"], ["proof (chain)\npicking this:\n  l \\<in> setOf (wrm h t2)\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\n  t2 \\<noteq> Tip\n  sortedTree h t2", "show ?thesis"], ["proof (prove)\nusing this:\n  l \\<in> setOf (wrm h t2)\n  t2 \\<noteq> Tip \\<and> sortedTree h t2 \\<longrightarrow>\n  (\\<forall>l\\<in>setOf (wrm h t2). h l < h (rm h t2))\n  t2 \\<noteq> Tip\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. h l < h (rm h t2)", "by auto"], ["proof (state)\nthis:\n  h l < h (rm h t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h l < h (rm h t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h l < h (rm h t2)\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> Tip \\<Longrightarrow> h l < h (rm h (T t1 x t2))", "from rm_res hLess"], ["proof (chain)\npicking this:\n  rm h (T t1 x t2) = rm h t2\n  h l < h (rm h t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  rm h (T t1 x t2) = rm h t2\n  h l < h (rm h t2)\n\ngoal (1 subgoal):\n 1. h l < h (rm h (T t1 x t2))", "by simp"], ["proof (state)\nthis:\n  h l < h (rm h (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h l < h (rm h (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T t1 x t2 \\<noteq> Tip \\<and> sortedTree h (T t1 x t2) \\<longrightarrow>\n  (\\<forall>l\\<in>setOf (wrm h (T t1 x t2)). h l < h (rm h (T t1 x t2)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_set: \"sortedTree h t --> \n  setOf (remove h e t) = setOf t - eqs h e\" (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<longrightarrow>\n    setOf (remove h e t) = setOf t - eqs h e", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. sortedTree h Tip \\<longrightarrow>\n    setOf (remove h e Tip) = setOf Tip - eqs h e\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h Tip \\<longrightarrow>\n    setOf (remove h e Tip) = setOf Tip - eqs h e", "by auto"], ["proof (state)\nthis:\n  sortedTree h Tip \\<longrightarrow>\n  setOf (remove h e Tip) = setOf Tip - eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  sortedTree h t1 \\<longrightarrow>\n  setOf (remove h e t1) = setOf t1 - eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  sortedTree h t2 \\<longrightarrow>\n  setOf (remove h e t2) = setOf t2 - eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                setOf (remove h e t1) = setOf t1 - eqs h e;\n        sortedTree h t2 \\<longrightarrow>\n        setOf (remove h e t2) = setOf t2 - eqs h e\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         setOf (remove h e (T t1 x2 t2)) =\n                         setOf (T t1 x2 t2) - eqs h e", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "show \"setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof (cases \"h e < h x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "case True"], ["proof (state)\nthis:\n  h e < h x\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "note elx = this"], ["proof (state)\nthis:\n  h e < h x\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from elx"], ["proof (chain)\npicking this:\n  h e < h x", "have res: \"remove h e (T t1 x t2) = T (remove h e t1) x t2\""], ["proof (prove)\nusing this:\n  h e < h x\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = T (remove h e t1) x t2", "by simp"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = T (remove h e t1) x t2\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by simp"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from s1 h1"], ["proof (chain)\npicking this:\n  sortedTree h t1\n  sortedTree h t1 \\<longrightarrow>\n  setOf (remove h e t1) = setOf t1 - eqs h e", "have o1: \"setOf (remove h e t1) = setOf t1 - eqs h e\""], ["proof (prove)\nusing this:\n  sortedTree h t1\n  sortedTree h t1 \\<longrightarrow>\n  setOf (remove h e t1) = setOf t1 - eqs h e\n\ngoal (1 subgoal):\n 1. setOf (remove h e t1) = setOf t1 - eqs h e", "by simp"], ["proof (state)\nthis:\n  setOf (remove h e t1) = setOf t1 - eqs h e\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof (simp add: o1 elx)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "show \"insert x (setOf t1 - eqs h e Un setOf t2) = \n              insert x (setOf t1 Un setOf t2) - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "have xOk: \"x ~: eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> eqs h e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> eqs h e \\<Longrightarrow> False", "assume h: \"x : eqs h e\""], ["proof (state)\nthis:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. x \\<in> eqs h e \\<Longrightarrow> False", "from h"], ["proof (chain)\npicking this:\n  x \\<in> eqs h e", "have o1: \"~ (h e < h x)\""], ["proof (prove)\nusing this:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. x \\<in> eqs h e \\<Longrightarrow> False", "from elx o1"], ["proof (chain)\npicking this:\n  h e < h x\n  \\<not> h e < h x", "show \"False\""], ["proof (prove)\nusing this:\n  h e < h x\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> eqs h e\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "have t2Ok: \"(setOf t2) Int (eqs h e) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t2 \\<inter> eqs h e = {}", "proof (rule disjCond)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "fix y :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_t2: \"y : setOf t2\""], ["proof (state)\nthis:\n  y \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_eq: \"y : eqs h e\""], ["proof (state)\nthis:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_t2 s"], ["proof (chain)\npicking this:\n  y \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have xly: \"h x < h y\""], ["proof (prove)\nusing this:\n  y \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h y", "by auto"], ["proof (state)\nthis:\n  h x < h y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_eq"], ["proof (chain)\npicking this:\n  y \\<in> eqs h e", "have eey: \"h y = h e\""], ["proof (prove)\nusing this:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. h y = h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "(* must \"add:\" not \"from\" *)"], ["proof (state)\nthis:\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from xly eey"], ["proof (chain)\npicking this:\n  h x < h y\n  h y = h e", "have nelx: \"~ (h e < h x)\""], ["proof (prove)\nusing this:\n  h x < h y\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x", "by simp"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from nelx elx"], ["proof (chain)\npicking this:\n  \\<not> h e < h x\n  h e < h x", "show False"], ["proof (prove)\nusing this:\n  \\<not> h e < h x\n  h e < h x\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "from xOk t2Ok"], ["proof (chain)\npicking this:\n  x \\<notin> eqs h e\n  setOf t2 \\<inter> eqs h e = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> eqs h e\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "by auto"], ["proof (state)\nthis:\n  insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (setOf t1 - eqs h e \\<union> setOf t2) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "case False"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "note nelx = this"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof (cases \"h x < h e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "case True"], ["proof (state)\nthis:\n  h x < h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "note xle = this"], ["proof (state)\nthis:\n  h x < h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from xle"], ["proof (chain)\npicking this:\n  h x < h e", "have res: \"remove h e (T t1 x t2) = T t1 x (remove h e t2)\""], ["proof (prove)\nusing this:\n  h x < h e\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = T t1 x (remove h e t2)", "by simp"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = T t1 x (remove h e t2)\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by simp"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from s2 h2"], ["proof (chain)\npicking this:\n  sortedTree h t2\n  sortedTree h t2 \\<longrightarrow>\n  setOf (remove h e t2) = setOf t2 - eqs h e", "have o1: \"setOf (remove h e t2) = setOf t2 - eqs h e\""], ["proof (prove)\nusing this:\n  sortedTree h t2\n  sortedTree h t2 \\<longrightarrow>\n  setOf (remove h e t2) = setOf t2 - eqs h e\n\ngoal (1 subgoal):\n 1. setOf (remove h e t2) = setOf t2 - eqs h e", "by simp"], ["proof (state)\nthis:\n  setOf (remove h e t2) = setOf t2 - eqs h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof (simp add: o1 xle nelx)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "show \"insert x (setOf t1 Un (setOf t2 - eqs h e)) = \n                insert x (setOf t1 Un setOf t2) - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "have xOk: \"x ~: eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> eqs h e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> eqs h e \\<Longrightarrow> False", "assume h: \"x : eqs h e\""], ["proof (state)\nthis:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. x \\<in> eqs h e \\<Longrightarrow> False", "from h"], ["proof (chain)\npicking this:\n  x \\<in> eqs h e", "have o1: \"~ (h x < h e)\""], ["proof (prove)\nusing this:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. x \\<in> eqs h e \\<Longrightarrow> False", "from xle o1"], ["proof (chain)\npicking this:\n  h x < h e\n  \\<not> h x < h e", "show \"False\""], ["proof (prove)\nusing this:\n  h x < h e\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> eqs h e\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "have t1Ok: \"(setOf t1) Int (eqs h e) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t1 \\<inter> eqs h e = {}", "proof (rule disjCond)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "fix y :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_t1: \"y : setOf t1\""], ["proof (state)\nthis:\n  y \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_eq: \"y : eqs h e\""], ["proof (state)\nthis:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_t1 s"], ["proof (chain)\npicking this:\n  y \\<in> setOf t1\n  sortedTree h (T t1 x t2)", "have ylx: \"h y < h x\""], ["proof (prove)\nusing this:\n  y \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h y < h x", "by auto"], ["proof (state)\nthis:\n  h y < h x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_eq"], ["proof (chain)\npicking this:\n  y \\<in> eqs h e", "have eey: \"h y = h e\""], ["proof (prove)\nusing this:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. h y = h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from ylx eey"], ["proof (chain)\npicking this:\n  h y < h x\n  h y = h e", "have nxle: \"~ (h x < h e)\""], ["proof (prove)\nusing this:\n  h y < h x\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e", "by simp"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from nxle xle"], ["proof (chain)\npicking this:\n  \\<not> h x < h e\n  h x < h e", "show False"], ["proof (prove)\nusing this:\n  \\<not> h x < h e\n  h x < h e\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t1 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "from xOk t1Ok"], ["proof (chain)\npicking this:\n  x \\<notin> eqs h e\n  setOf t1 \\<inter> eqs h e = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> eqs h e\n  setOf t1 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "by auto"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> (setOf t2 - eqs h e)) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "case False"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "note nxle = this"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from nelx nxle"], ["proof (chain)\npicking this:\n  \\<not> h e < h x\n  \\<not> h x < h e", "have ex: \"h e = h x\""], ["proof (prove)\nusing this:\n  \\<not> h e < h x\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. h e = h x", "by simp"], ["proof (state)\nthis:\n  h e = h x\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "have t2Ok: \"(setOf t2) Int (eqs h e) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t2 \\<inter> eqs h e = {}", "proof (rule disjCond)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "fix y :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_t2: \"y : setOf t2\""], ["proof (state)\nthis:\n  y \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_eq: \"y : eqs h e\""], ["proof (state)\nthis:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_t2 s"], ["proof (chain)\npicking this:\n  y \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have xly: \"h x < h y\""], ["proof (prove)\nusing this:\n  y \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h y", "by auto"], ["proof (state)\nthis:\n  h x < h y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_eq"], ["proof (chain)\npicking this:\n  y \\<in> eqs h e", "have eey: \"h y = h e\""], ["proof (prove)\nusing this:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. h y = h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_eq ex eey"], ["proof (chain)\npicking this:\n  y \\<in> eqs h e\n  h e = h x\n  h y = h e", "have nxly: \"~ (h x < h y)\""], ["proof (prove)\nusing this:\n  y \\<in> eqs h e\n  h e = h x\n  h y = h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h y", "by simp"], ["proof (state)\nthis:\n  \\<not> h x < h y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t2; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from nxly xly"], ["proof (chain)\npicking this:\n  \\<not> h x < h y\n  h x < h y", "show False"], ["proof (prove)\nusing this:\n  \\<not> h x < h y\n  h x < h y\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof (cases \"t1 = Tip\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "case True"], ["proof (state)\nthis:\n  t1 = Tip\n\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "note t1tip = this"], ["proof (state)\nthis:\n  t1 = Tip\n\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from ex t1tip"], ["proof (chain)\npicking this:\n  h e = h x\n  t1 = Tip", "have res: \"remove h e (T t1 x t2) = t2\""], ["proof (prove)\nusing this:\n  h e = h x\n  t1 = Tip\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = t2", "by simp"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = t2\n\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n 2. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof (simp add: res t1tip ex)"], ["proof (state)\ngoal (1 subgoal):\n 1. setOf t2 = insert x (setOf t2) - eqs h e", "show \"setOf t2 = insert x (setOf t2) - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t2 = insert x (setOf t2) - eqs h e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. setOf t2 = insert x (setOf t2) - eqs h e", "from ex"], ["proof (chain)\npicking this:\n  h e = h x", "have x_in_eqs: \"x : eqs h e\""], ["proof (prove)\nusing this:\n  h e = h x\n\ngoal (1 subgoal):\n 1. x \\<in> eqs h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. setOf t2 = insert x (setOf t2) - eqs h e", "from x_in_eqs t2Ok"], ["proof (chain)\npicking this:\n  x \\<in> eqs h e\n  setOf t2 \\<inter> eqs h e = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> eqs h e\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. setOf t2 = insert x (setOf t2) - eqs h e", "by auto"], ["proof (state)\nthis:\n  setOf t2 = insert x (setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t2 = insert x (setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "case False"], ["proof (state)\nthis:\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "note t1nTip = this"], ["proof (state)\nthis:\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from nelx nxle ex t1nTip"], ["proof (chain)\npicking this:\n  \\<not> h e < h x\n  \\<not> h x < h e\n  h e = h x\n  t1 \\<noteq> Tip", "have res: \"remove h e (T t1 x t2) =\n                     T (wrm h t1) (rm h t1) t2\""], ["proof (prove)\nusing this:\n  \\<not> h e < h x\n  \\<not> h x < h e\n  h e = h x\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2", "by (simp add: Let_def wrmrm_decomp)"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow>\n    setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "from res"], ["proof (chain)\npicking this:\n  remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2", "show ?thesis"], ["proof (prove)\nusing this:\n  remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2\n\ngoal (1 subgoal):\n 1. setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e", "proof simp"], ["proof (state)\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    insert (rm h t1) (setOf (wrm h t1) \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by simp"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    insert (rm h t1) (setOf (wrm h t1) \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "show \"insert (rm h t1) (setOf (wrm h t1) Un setOf t2) = \n                  insert x (setOf t1 Un setOf t2) - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf (wrm h t1) \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "proof (simp add: t1nTip s1 rm_set wrm_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "show \"insert (rm h t1) (setOf t1 - {rm h t1} Un setOf t2) = \n                    insert x (setOf t1 Un setOf t2) - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "from t1nTip s1 rm_set"], ["proof (chain)\npicking this:\n  t1 \\<noteq> Tip\n  sortedTree h t1\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t", "have o1: \"insert (rm h t1) (setOf t1 - {rm h t1} Un setOf t2) =\n                          setOf t1 Un setOf t2\""], ["proof (prove)\nusing this:\n  t1 \\<noteq> Tip\n  sortedTree h t1\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    setOf t1 \\<union> setOf t2", "by auto"], ["proof (state)\nthis:\n  insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n  setOf t1 \\<union> setOf t2\n\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "have o2: \"insert x (setOf t1 Un setOf t2) - eqs h e =\n                          setOf t1 Un setOf t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "from ex"], ["proof (chain)\npicking this:\n  h e = h x", "have xOk: \"x : eqs h e\""], ["proof (prove)\nusing this:\n  h e = h x\n\ngoal (1 subgoal):\n 1. x \\<in> eqs h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  x \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "have t1Ok: \"(setOf t1) Int (eqs h e) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setOf t1 \\<inter> eqs h e = {}", "proof (rule disjCond)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "fix y :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_t1: \"y : setOf t1\""], ["proof (state)\nthis:\n  y \\<in> setOf t1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "assume y_in_eq: \"y : eqs h e\""], ["proof (state)\nthis:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_t1 s ex"], ["proof (chain)\npicking this:\n  y \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n  h e = h x", "have o1: \"h y < h e\""], ["proof (prove)\nusing this:\n  y \\<in> setOf t1\n  sortedTree h (T t1 x t2)\n  h e = h x\n\ngoal (1 subgoal):\n 1. h y < h e", "by auto"], ["proof (state)\nthis:\n  h y < h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from y_in_eq"], ["proof (chain)\npicking this:\n  y \\<in> eqs h e", "have o2: \"~ (h y < h e)\""], ["proof (prove)\nusing this:\n  y \\<in> eqs h e\n\ngoal (1 subgoal):\n 1. \\<not> h y < h e", "by (simp add: eqs_def)"], ["proof (state)\nthis:\n  \\<not> h y < h e\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> setOf t1; x \\<in> eqs h e\\<rbrakk>\n       \\<Longrightarrow> False", "from o1 o2"], ["proof (chain)\npicking this:\n  h y < h e\n  \\<not> h y < h e", "show False"], ["proof (prove)\nusing this:\n  h y < h e\n  \\<not> h y < h e\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf t1 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "from xOk t1Ok t2Ok"], ["proof (chain)\npicking this:\n  x \\<in> eqs h e\n  setOf t1 \\<inter> eqs h e = {}\n  setOf t2 \\<inter> eqs h e = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> eqs h e\n  setOf t1 \\<inter> eqs h e = {}\n  setOf t2 \\<inter> eqs h e = {}\n\ngoal (1 subgoal):\n 1. insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n    setOf t1 \\<union> setOf t2", "by auto"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2\n\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "from o1 o2"], ["proof (chain)\npicking this:\n  insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n  setOf t1 \\<union> setOf t2\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2", "show ?thesis"], ["proof (prove)\nusing this:\n  insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n  setOf t1 \\<union> setOf t2\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e =\n  setOf t1 \\<union> setOf t2\n\ngoal (1 subgoal):\n 1. insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n    insert x (setOf t1 \\<union> setOf t2) - eqs h e", "by simp"], ["proof (state)\nthis:\n  insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert (rm h t1) (setOf t1 - {rm h t1} \\<union> setOf t2) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert (rm h t1) (setOf (wrm h t1) \\<union> setOf t2) =\n  insert x (setOf t1 \\<union> setOf t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2) \\<longrightarrow>\n  setOf (remove h e (T t1 x t2)) = setOf (T t1 x t2) - eqs h e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_sort: \"sortedTree h t --> \n                    sortedTree h (remove h e t)\" (is \"?P t\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<longrightarrow> sortedTree h (remove h e t)", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. sortedTree h Tip \\<longrightarrow> sortedTree h (remove h e Tip)\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "show \"?P Tip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h Tip \\<longrightarrow> sortedTree h (remove h e Tip)", "by auto"], ["proof (state)\nthis:\n  sortedTree h Tip \\<longrightarrow> sortedTree h (remove h e Tip)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "fix t1 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "assume h1: \"?P t1\""], ["proof (state)\nthis:\n  sortedTree h t1 \\<longrightarrow> sortedTree h (remove h e t1)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "fix t2 :: \"'a Tree\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "assume h2: \"?P t2\""], ["proof (state)\nthis:\n  sortedTree h t2 \\<longrightarrow> sortedTree h (remove h e t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>sortedTree h t1 \\<longrightarrow>\n                sortedTree h (remove h e t1);\n        sortedTree h t2 \\<longrightarrow>\n        sortedTree h (remove h e t2)\\<rbrakk>\n       \\<Longrightarrow> sortedTree h (T t1 x2 t2) \\<longrightarrow>\n                         sortedTree h (remove h e (T t1 x2 t2))", "show \"?P (T t1 x t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "assume s: \"sortedTree h (T t1 x t2)\""], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s1: \"sortedTree h t1\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t1", "by simp"], ["proof (state)\nthis:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "from s"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)", "have s2: \"sortedTree h t2\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. sortedTree h t2", "by simp"], ["proof (state)\nthis:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "from h1 s1"], ["proof (chain)\npicking this:\n  sortedTree h t1 \\<longrightarrow> sortedTree h (remove h e t1)\n  sortedTree h t1", "have sr1: \"sortedTree h (remove h e t1)\""], ["proof (prove)\nusing this:\n  sortedTree h t1 \\<longrightarrow> sortedTree h (remove h e t1)\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. sortedTree h (remove h e t1)", "by simp"], ["proof (state)\nthis:\n  sortedTree h (remove h e t1)\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "from h2 s2"], ["proof (chain)\npicking this:\n  sortedTree h t2 \\<longrightarrow> sortedTree h (remove h e t2)\n  sortedTree h t2", "have sr2: \"sortedTree h (remove h e t2)\""], ["proof (prove)\nusing this:\n  sortedTree h t2 \\<longrightarrow> sortedTree h (remove h e t2)\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. sortedTree h (remove h e t2)", "by simp"], ["proof (state)\nthis:\n  sortedTree h (remove h e t2)\n\ngoal (1 subgoal):\n 1. sortedTree h (T t1 x t2) \\<Longrightarrow>\n    sortedTree h (remove h e (T t1 x t2))", "show \"sortedTree h (remove h e (T t1 x t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "proof (cases \"h e < h x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "case True"], ["proof (state)\nthis:\n  h e < h x\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "note elx = this"], ["proof (state)\nthis:\n  h e < h x\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "from elx"], ["proof (chain)\npicking this:\n  h e < h x", "have res: \"remove h e (T t1 x t2) = T (remove h e t1) x t2\""], ["proof (prove)\nusing this:\n  h e < h x\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = T (remove h e t1) x t2", "by simp"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = T (remove h e t1) x t2\n\ngoal (2 subgoals):\n 1. h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "proof (simp add: s sr1 s2 elx res)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf (remove h e t1). h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf t2. h x < h r)", "let ?C1 = \"\\<forall>l \\<in> setOf (remove h e t1). h l < h x\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf (remove h e t1). h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf t2. h x < h r)", "let ?C2 = \"\\<forall>r \\<in> setOf t2. h x < h r\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf (remove h e t1). h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf t2. h x < h r)", "have o1: \"?C1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf (remove h e t1). h l < h x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf (remove h e t1). h l < h x", "from s1"], ["proof (chain)\npicking this:\n  sortedTree h t1", "have \"setOf (remove h e t1) = setOf t1 - eqs h e\""], ["proof (prove)\nusing this:\n  sortedTree h t1\n\ngoal (1 subgoal):\n 1. setOf (remove h e t1) = setOf t1 - eqs h e", "by (simp add: remove_set)"], ["proof (state)\nthis:\n  setOf (remove h e t1) = setOf t1 - eqs h e\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf (remove h e t1). h l < h x", "from s this"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  setOf (remove h e t1) = setOf t1 - eqs h e", "show ?thesis"], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  setOf (remove h e t1) = setOf t1 - eqs h e\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf (remove h e t1). h l < h x", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>setOf (remove h e t1). h l < h x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>setOf (remove h e t1). h l < h x\n\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf (remove h e t1). h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf t2. h x < h r)", "from o1 s"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>setOf (remove h e t1). h l < h x\n  sortedTree h (T t1 x t2)", "show \"?C1 & ?C2\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>setOf (remove h e t1). h l < h x\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf (remove h e t1). h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf t2. h x < h r)", "by auto"], ["proof (state)\nthis:\n  (\\<forall>l\\<in>setOf (remove h e t1). h l < h x) \\<and>\n  (\\<forall>r\\<in>setOf t2. h x < h r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "case False"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "note nelx = this"], ["proof (state)\nthis:\n  \\<not> h e < h x\n\ngoal (1 subgoal):\n 1. \\<not> h e < h x \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "proof (cases \"h x < h e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "case True"], ["proof (state)\nthis:\n  h x < h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "note xle = this"], ["proof (state)\nthis:\n  h x < h e\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "from xle"], ["proof (chain)\npicking this:\n  h x < h e", "have res: \"remove h e (T t1 x t2) = T t1 x (remove h e t2)\""], ["proof (prove)\nusing this:\n  h x < h e\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = T t1 x (remove h e t2)", "by simp"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = T t1 x (remove h e t2)\n\ngoal (2 subgoals):\n 1. h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "proof (simp add: s s1 sr2 xle nelx res)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf t1. h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf (remove h e t2). h x < h r)", "let ?C1 = \"\\<forall>l \\<in> setOf t1. h l < h x\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf t1. h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf (remove h e t2). h x < h r)", "let ?C2 = \"\\<forall>r \\<in> setOf (remove h e t2). h x < h r\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf t1. h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf (remove h e t2). h x < h r)", "have o2: \"?C2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf (remove h e t2). h x < h r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf (remove h e t2). h x < h r", "from s2"], ["proof (chain)\npicking this:\n  sortedTree h t2", "have \"setOf (remove h e t2) = setOf t2 - eqs h e\""], ["proof (prove)\nusing this:\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. setOf (remove h e t2) = setOf t2 - eqs h e", "by (simp add: remove_set)"], ["proof (state)\nthis:\n  setOf (remove h e t2) = setOf t2 - eqs h e\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf (remove h e t2). h x < h r", "from s this"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  setOf (remove h e t2) = setOf t2 - eqs h e", "show ?thesis"], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  setOf (remove h e t2) = setOf t2 - eqs h e\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf (remove h e t2). h x < h r", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>setOf (remove h e t2). h x < h r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>setOf (remove h e t2). h x < h r\n\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf t1. h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf (remove h e t2). h x < h r)", "from o2 s"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>setOf (remove h e t2). h x < h r\n  sortedTree h (T t1 x t2)", "show \"?C1 & ?C2\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>setOf (remove h e t2). h x < h r\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>setOf t1. h l < h x) \\<and>\n    (\\<forall>r\\<in>setOf (remove h e t2). h x < h r)", "by auto"], ["proof (state)\nthis:\n  (\\<forall>l\\<in>setOf t1. h l < h x) \\<and>\n  (\\<forall>r\\<in>setOf (remove h e t2). h x < h r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "case False"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "note nxle = this"], ["proof (state)\nthis:\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "from nelx nxle"], ["proof (chain)\npicking this:\n  \\<not> h e < h x\n  \\<not> h x < h e", "have ex: \"h e = h x\""], ["proof (prove)\nusing this:\n  \\<not> h e < h x\n  \\<not> h x < h e\n\ngoal (1 subgoal):\n 1. h e = h x", "by simp"], ["proof (state)\nthis:\n  h e = h x\n\ngoal (1 subgoal):\n 1. \\<not> h x < h e \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "proof (cases \"t1 = Tip\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "case True"], ["proof (state)\nthis:\n  t1 = Tip\n\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "note t1tip = this"], ["proof (state)\nthis:\n  t1 = Tip\n\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "from ex t1tip"], ["proof (chain)\npicking this:\n  h e = h x\n  t1 = Tip", "have res: \"remove h e (T t1 x t2) = t2\""], ["proof (prove)\nusing this:\n  h e = h x\n  t1 = Tip\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = t2", "by simp"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = t2\n\ngoal (2 subgoals):\n 1. t1 = Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))\n 2. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "by (simp add: res t1tip ex s2)"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "case False"], ["proof (state)\nthis:\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "note t1nTip = this"], ["proof (state)\nthis:\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "from nelx nxle ex t1nTip"], ["proof (chain)\npicking this:\n  \\<not> h e < h x\n  \\<not> h x < h e\n  h e = h x\n  t1 \\<noteq> Tip", "have res: \"remove h e (T t1 x t2) =\n                     T (wrm h t1) (rm h t1) t2\""], ["proof (prove)\nusing this:\n  \\<not> h e < h x\n  \\<not> h x < h e\n  h e = h x\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2", "by (simp add: Let_def wrmrm_decomp)"], ["proof (state)\nthis:\n  remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2\n\ngoal (1 subgoal):\n 1. t1 \\<noteq> Tip \\<Longrightarrow> sortedTree h (remove h e (T t1 x t2))", "from res"], ["proof (chain)\npicking this:\n  remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2", "show ?thesis"], ["proof (prove)\nusing this:\n  remove h e (T t1 x t2) = T (wrm h t1) (rm h t1) t2\n\ngoal (1 subgoal):\n 1. sortedTree h (remove h e (T t1 x t2))", "proof simp"], ["proof (state)\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "let ?C1 = \"sortedTree h (wrm h t1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "let ?C2 = \"\\<forall>l \\<in> setOf (wrm h t1). h l < h (rm h t1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "let ?C3 = \"\\<forall>r \\<in> setOf t2. h (rm h t1) < h r\""], ["proof (state)\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "let ?C4 = \"sortedTree h t2\""], ["proof (state)\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "from s1 t1nTip"], ["proof (chain)\npicking this:\n  sortedTree h t1\n  t1 \\<noteq> Tip", "have o1: ?C1"], ["proof (prove)\nusing this:\n  sortedTree h t1\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. sortedTree h (wrm h t1)", "by (simp add: wrm_sort)"], ["proof (state)\nthis:\n  sortedTree h (wrm h t1)\n\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "from s1 t1nTip"], ["proof (chain)\npicking this:\n  sortedTree h t1\n  t1 \\<noteq> Tip", "have o2: ?C2"], ["proof (prove)\nusing this:\n  sortedTree h t1\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)", "by (simp add: wrm_less_rm)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)\n\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "have o3: ?C3"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>setOf t2. h (rm h t1) < h r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> setOf t2 \\<Longrightarrow> h (rm h t1) < h r", "fix r :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> setOf t2 \\<Longrightarrow> h (rm h t1) < h r", "assume rt2: \"r : setOf t2\""], ["proof (state)\nthis:\n  r \\<in> setOf t2\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> setOf t2 \\<Longrightarrow> h (rm h t1) < h r", "from s rm_set s1 t1nTip"], ["proof (chain)\npicking this:\n  sortedTree h (T t1 x t2)\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  sortedTree h t1\n  t1 \\<noteq> Tip", "have o1: \"h (rm h t1) < h x\""], ["proof (prove)\nusing this:\n  sortedTree h (T t1 x t2)\n  ?t \\<noteq> Tip \\<and> sortedTree ?h ?t \\<longrightarrow>\n  rm ?h ?t \\<in> setOf ?t\n  sortedTree h t1\n  t1 \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. h (rm h t1) < h x", "by auto"], ["proof (state)\nthis:\n  h (rm h t1) < h x\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> setOf t2 \\<Longrightarrow> h (rm h t1) < h r", "from rt2 s"], ["proof (chain)\npicking this:\n  r \\<in> setOf t2\n  sortedTree h (T t1 x t2)", "have o2: \"h x < h r\""], ["proof (prove)\nusing this:\n  r \\<in> setOf t2\n  sortedTree h (T t1 x t2)\n\ngoal (1 subgoal):\n 1. h x < h r", "by auto"], ["proof (state)\nthis:\n  h x < h r\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> setOf t2 \\<Longrightarrow> h (rm h t1) < h r", "from o1 o2"], ["proof (chain)\npicking this:\n  h (rm h t1) < h x\n  h x < h r", "show \"h (rm h t1) < h r\""], ["proof (prove)\nusing this:\n  h (rm h t1) < h x\n  h x < h r\n\ngoal (1 subgoal):\n 1. h (rm h t1) < h r", "by simp"], ["proof (state)\nthis:\n  h (rm h t1) < h r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>setOf t2. h (rm h t1) < h r\n\ngoal (1 subgoal):\n 1. (if h e < h x then T (remove h e t1) x t2\n     else if h x < h e then T t1 x (remove h e t2)\n          else if t1 = Tip then t2\n               else let (t1p, r) = wrmrm h t1 in T t1p r t2) =\n    T (wrm h t1) (rm h t1) t2 \\<Longrightarrow>\n    sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "from o1 o2 o3 s2"], ["proof (chain)\npicking this:\n  sortedTree h (wrm h t1)\n  \\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)\n  \\<forall>r\\<in>setOf t2. h (rm h t1) < h r\n  sortedTree h t2", "show \"?C1 & ?C2 & ?C3 & ?C4\""], ["proof (prove)\nusing this:\n  sortedTree h (wrm h t1)\n  \\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)\n  \\<forall>r\\<in>setOf t2. h (rm h t1) < h r\n  sortedTree h t2\n\ngoal (1 subgoal):\n 1. sortedTree h (wrm h t1) \\<and>\n    (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n    (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2", "by simp"], ["proof (state)\nthis:\n  sortedTree h (wrm h t1) \\<and>\n  (\\<forall>l\\<in>setOf (wrm h t1). h l < h (rm h t1)) \\<and>\n  (\\<forall>r\\<in>setOf t2. h (rm h t1) < h r) \\<and> sortedTree h t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sortedTree h (T t1 x t2) \\<longrightarrow>\n  sortedTree h (remove h e (T t1 x t2))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We summarize the specification of remove as follows.\\<close>"], ["", "corollary remove_spec: \"sortedTree h t --> \n     sortedTree h (remove h e t) &\n     setOf (remove h e t) = setOf t - eqs h e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sortedTree h t \\<longrightarrow>\n    sortedTree h (remove h e t) \\<and>\n    setOf (remove h e t) = setOf t - eqs h e", "by (simp add: remove_sort remove_set)"], ["", "definition \"test = tlookup id 4 (remove id 3 (binsert id 4 (binsert id 3 Tip)))\""], ["", "export_code test\n  in SML module_name BinaryTree_Code file \\<open>BinaryTree_Code.ML\\<close>"], ["", "end"]]}