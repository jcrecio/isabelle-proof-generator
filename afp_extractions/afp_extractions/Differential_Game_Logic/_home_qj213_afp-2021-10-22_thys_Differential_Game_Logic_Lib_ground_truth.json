{"file_name": "/home/qj213/afp-2021-10-22/thys/Differential_Game_Logic/Lib.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Differential_Game_Logic", "problem_names": ["lemma finite_subset [simp]: \"finite M \\<Longrightarrow> finite {x\\<in>M. P x}\"", "lemma finite_powerset [simp]: \"finite M \\<Longrightarrow> finite {S. S\\<subseteq>M}\"", "lemma fst_proj_mem [simp]: \"(A \\<in> fst_proj M) = (\\<exists>B. (A,B)\\<in>M)\"", "lemma snd_proj_mem [simp]: \"(B \\<in> snd_proj M) = (\\<exists>A. (A,B)\\<in>M)\"", "lemma fst_proj_prop: \"\\<forall>x\\<in>fst_proj {(A,B)| A B. P A \\<and> R A B}. P(x)\"", "lemma snd_proj_prop: \"\\<forall>x\\<in>snd_proj {(A,B) | A B. P B \\<and> R A B}. P(x)\"", "lemma map_cons: \"map f (Cons x xs) = Cons (f x) (map f xs)\"", "lemma map_append: \"map f (append xs ys) = append (map f xs) (map f ys)\"", "lemma lfp_lockstep_induct [case_names monof monog step union]:\n  fixes f :: \"'a::complete_lattice \\<Rightarrow> 'a\"\n    and g :: \"'b::complete_lattice \\<Rightarrow> 'b\"\n  assumes monof: \"mono f\" \n    and monog: \"mono g\"\n    and R_step: \"\\<And>A B. A \\<le> lfp(f) \\<Longrightarrow> B \\<le> lfp(g) \\<Longrightarrow> R A B \\<Longrightarrow> R (f(A)) (g(B))\"\n    and R_Union: \"\\<And>M::('a*'b) set. (\\<forall>(A,B)\\<in>M. R A B) \\<Longrightarrow> R (Sup (fst_proj M)) (Sup (snd_proj M))\"\n  shows \"R (lfp f) (lfp g)\"", "lemma sup_eq_all: \"(\\<And>A. (A\\<in>M \\<Longrightarrow> f(A)=g(A)))\n  \\<Longrightarrow> Sup {f(A) | A. A\\<in>M} = Sup {g(A) | A. A\\<in>M}\"", "lemma sup_corr_eq_chain: \"\\<And>M::('a::complete_lattice*'a) set. (\\<forall>(A,B)\\<in>M. f(A)=g(B)) \\<Longrightarrow> (Sup {f(A) | A. A\\<in>fst_proj M} = Sup {g(B) | B. B\\<in>snd_proj M})\""], "translations": [["", "lemma finite_subset [simp]: \"finite M \\<Longrightarrow> finite {x\\<in>M. P x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite M \\<Longrightarrow> finite {x \\<in> M. P x}", "by simp"], ["", "lemma finite_powerset [simp]: \"finite M \\<Longrightarrow> finite {S. S\\<subseteq>M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite M \\<Longrightarrow> finite {S. S \\<subseteq> M}", "by simp"], ["", "definition fst_proj:: \"('a*'b) set \\<Rightarrow> 'a set\"\n  where \"fst_proj M \\<equiv> {A. \\<exists>B. (A,B)\\<in>M}\""], ["", "definition snd_proj:: \"('a*'b) set \\<Rightarrow> 'b set\"\n  where \"snd_proj M \\<equiv> {B. \\<exists>A. (A,B)\\<in>M}\""], ["", "lemma fst_proj_mem [simp]: \"(A \\<in> fst_proj M) = (\\<exists>B. (A,B)\\<in>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<in> fst_proj M) = (\\<exists>B. (A, B) \\<in> M)", "unfolding fst_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<in> {A. \\<exists>B. (A, B) \\<in> M}) = (\\<exists>B. (A, B) \\<in> M)", "by auto"], ["", "lemma snd_proj_mem [simp]: \"(B \\<in> snd_proj M) = (\\<exists>A. (A,B)\\<in>M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B \\<in> snd_proj M) = (\\<exists>A. (A, B) \\<in> M)", "unfolding snd_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (B \\<in> {B. \\<exists>A. (A, B) \\<in> M}) = (\\<exists>A. (A, B) \\<in> M)", "by auto"], ["", "lemma fst_proj_prop: \"\\<forall>x\\<in>fst_proj {(A,B)| A B. P A \\<and> R A B}. P(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>fst_proj {(A, B) |A B. P A \\<and> R A B}. P x", "unfolding fst_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{A. \\<exists>B.\n                          (A, B) \\<in> {(A, B) |A B. P A \\<and> R A B}}.\n       P x", "by auto"], ["", "lemma snd_proj_prop: \"\\<forall>x\\<in>snd_proj {(A,B) | A B. P B \\<and> R A B}. P(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>snd_proj {(A, B) |A B. P B \\<and> R A B}. P x", "unfolding snd_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{B. \\<exists>A.\n                          (A, B) \\<in> {(A, B) |A B. P B \\<and> R A B}}.\n       P x", "by auto"], ["", "lemma map_cons: \"map f (Cons x xs) = Cons (f x) (map f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map f (x # xs) = f x # map f xs", "by (rule List.list.map)"], ["", "lemma map_append: \"map f (append xs ys) = append (map f xs) (map f ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map f (xs @ ys) = map f xs @ map f ys", "by simp"], ["", "text\\<open>Lockstep induction schema for two simultaneous least fixpoints.\n  If the successor step and supremum step of two least fixpoint inflations\n  preserve a relation, then that relation holds of the two respective least fixpoints.\\<close>"], ["", "lemma lfp_lockstep_induct [case_names monof monog step union]:\n  fixes f :: \"'a::complete_lattice \\<Rightarrow> 'a\"\n    and g :: \"'b::complete_lattice \\<Rightarrow> 'b\"\n  assumes monof: \"mono f\" \n    and monog: \"mono g\"\n    and R_step: \"\\<And>A B. A \\<le> lfp(f) \\<Longrightarrow> B \\<le> lfp(g) \\<Longrightarrow> R A B \\<Longrightarrow> R (f(A)) (g(B))\"\n    and R_Union: \"\\<And>M::('a*'b) set. (\\<forall>(A,B)\\<in>M. R A B) \\<Longrightarrow> R (Sup (fst_proj M)) (Sup (snd_proj M))\"\n  shows \"R (lfp f) (lfp g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "(*using idea of proof of \"Inductive.thy:lfp_ordinal_induct\"*)"], ["proof (state)\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "let ?M = \"{(A,B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}\""], ["proof (state)\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "from R_Union"], ["proof (chain)\npicking this:\n  \\<forall>(A, B)\\<in>?M. R A B \\<Longrightarrow>\n  R (Sup (fst_proj ?M)) (Sup (snd_proj ?M))", "have supdoes: \"R (Sup (fst_proj ?M)) (Sup (snd_proj ?M))\""], ["proof (prove)\nusing this:\n  \\<forall>(A, B)\\<in>?M. R A B \\<Longrightarrow>\n  R (Sup (fst_proj ?M)) (Sup (snd_proj ?M))\n\ngoal (1 subgoal):\n 1. R (Sup (fst_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n     (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))", "by simp"], ["proof (state)\nthis:\n  R (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n   (Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "also"], ["proof (state)\nthis:\n  R (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n   (Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "have \"Sup (fst_proj ?M) = lfp f\" and \"Sup (snd_proj ?M) = lfp g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (fst_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp f &&&\n    Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "proof (rule antisym)"], ["proof (state)\ngoal (3 subgoals):\n 1. Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp f\n 2. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 3. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "show fle: \"Sup (fst_proj ?M) \\<le> lfp f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp f", "using fst_proj_prop Sup_le_iff"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>fst_proj {(A, B) |A B. ?P A \\<and> ?R A B}. ?P x\n  (Sup ?A \\<le> ?b) = (\\<forall>a\\<in>?A. a \\<le> ?b)\n\ngoal (1 subgoal):\n 1. Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp f", "by fastforce"], ["proof (state)\nthis:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp f\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "then"], ["proof (chain)\npicking this:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp f", "have \"f (Sup (fst_proj ?M)) \\<le> f (lfp f)\""], ["proof (prove)\nusing this:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp f\n\ngoal (1 subgoal):\n 1. f (Sup (fst_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> f (lfp f)", "by (rule monof [THEN monoD])"], ["proof (state)\nthis:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> f (lfp f)\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "then"], ["proof (chain)\npicking this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> f (lfp f)", "have fsup: \"f (Sup (fst_proj ?M)) \\<le> lfp f\""], ["proof (prove)\nusing this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> f (lfp f)\n\ngoal (1 subgoal):\n 1. f (Sup (fst_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> lfp f", "using monof [THEN lfp_unfold]"], ["proof (prove)\nusing this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> f (lfp f)\n  lfp f = f (lfp f)\n\ngoal (1 subgoal):\n 1. f (Sup (fst_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> lfp f", "by simp"], ["proof (state)\nthis:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp f\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "have gle: \"Sup (snd_proj ?M) \\<le> lfp g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp g", "using snd_proj_prop Sup_le_iff"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>snd_proj {(A, B) |A B. ?P B \\<and> ?R A B}. ?P x\n  (Sup ?A \\<le> ?b) = (\\<forall>a\\<in>?A. a \\<le> ?b)\n\ngoal (1 subgoal):\n 1. Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp g", "by fastforce"], ["proof (state)\nthis:\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp g\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "then"], ["proof (chain)\npicking this:\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp g", "have \"g (Sup (snd_proj ?M)) \\<le> g (lfp g)\""], ["proof (prove)\nusing this:\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp g\n\ngoal (1 subgoal):\n 1. g (Sup (snd_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> g (lfp g)", "by (rule monog [THEN monoD])"], ["proof (state)\nthis:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> g (lfp g)\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "then"], ["proof (chain)\npicking this:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> g (lfp g)", "have gsup: \"g (Sup (snd_proj ?M)) \\<le> lfp g\""], ["proof (prove)\nusing this:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> g (lfp g)\n\ngoal (1 subgoal):\n 1. g (Sup (snd_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> lfp g", "using monog [THEN lfp_unfold]"], ["proof (prove)\nusing this:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> g (lfp g)\n  lfp g = g (lfp g)\n\ngoal (1 subgoal):\n 1. g (Sup (snd_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> lfp g", "by simp"], ["proof (state)\nthis:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp g\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "from fsup and gsup"], ["proof (chain)\npicking this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp f\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp g", "have fgsup: \"(f(Sup(fst_proj ?M)), g(Sup(snd_proj ?M))) \\<in> ?M\""], ["proof (prove)\nusing this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp f\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp g\n\ngoal (1 subgoal):\n 1. (f (Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n     g (Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n    \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}", "using R_Union R_step Sup_le_iff"], ["proof (prove)\nusing this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp f\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp g\n  \\<forall>(A, B)\\<in>?M. R A B \\<Longrightarrow>\n  R (Sup (fst_proj ?M)) (Sup (snd_proj ?M))\n  \\<lbrakk>?A \\<le> lfp f; ?B \\<le> lfp g; R ?A ?B\\<rbrakk>\n  \\<Longrightarrow> R (f ?A) (g ?B)\n  (Sup ?A \\<le> ?b) = (\\<forall>a\\<in>?A. a \\<le> ?b)\n\ngoal (1 subgoal):\n 1. (f (Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n     g (Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n    \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}", "using calculation fle gle"], ["proof (prove)\nusing this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp f\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> lfp g\n  \\<forall>(A, B)\\<in>?M. R A B \\<Longrightarrow>\n  R (Sup (fst_proj ?M)) (Sup (snd_proj ?M))\n  \\<lbrakk>?A \\<le> lfp f; ?B \\<le> lfp g; R ?A ?B\\<rbrakk>\n  \\<Longrightarrow> R (f ?A) (g ?B)\n  (Sup ?A \\<le> ?b) = (\\<forall>a\\<in>?A. a \\<le> ?b)\n  R (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n   (Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp f\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp g\n\ngoal (1 subgoal):\n 1. (f (Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n     g (Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n    \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}", "by blast"], ["proof (state)\nthis:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "from fgsup"], ["proof (chain)\npicking this:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}", "have \"f (Sup (fst_proj ?M)) \\<le> Sup (fst_proj ?M)\""], ["proof (prove)\nusing this:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}\n\ngoal (1 subgoal):\n 1. f (Sup (fst_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "using Sup_upper"], ["proof (prove)\nusing this:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}\n  ?x \\<in> ?A \\<Longrightarrow> ?x \\<le> Sup ?A\n\ngoal (1 subgoal):\n 1. f (Sup (fst_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "by (metis (mono_tags, lifting) fst_proj_def mem_Collect_eq)"], ["proof (state)\nthis:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n\ngoal (2 subgoals):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n 2. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "then"], ["proof (chain)\npicking this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "show fge: \"lfp f \\<le> Sup (fst_proj ?M)\""], ["proof (prove)\nusing this:\n  f (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n\ngoal (1 subgoal):\n 1. lfp f\n    \\<le> Sup (fst_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "by (rule lfp_lowerbound)"], ["proof (state)\nthis:\n  lfp f\n  \\<le> Sup (fst_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n\ngoal (1 subgoal):\n 1. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "show \"Sup (snd_proj ?M) = lfp g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n    lfp g", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp g\n 2. lfp g\n    \\<le> Sup (snd_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "show \"Sup (snd_proj ?M) \\<le> lfp g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n    \\<le> lfp g", "by (rule gle)"], ["proof (state)\nthis:\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n  \\<le> lfp g\n\ngoal (1 subgoal):\n 1. lfp g\n    \\<le> Sup (snd_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "from fgsup"], ["proof (chain)\npicking this:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}", "have \"g (Sup (snd_proj ?M)) \\<le> Sup (snd_proj ?M)\""], ["proof (prove)\nusing this:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}\n\ngoal (1 subgoal):\n 1. g (Sup (snd_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> Sup (snd_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "using Sup_upper"], ["proof (prove)\nusing this:\n  (f (Sup (fst_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})),\n   g (Sup (snd_proj\n            {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})))\n  \\<in> {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}\n  ?x \\<in> ?A \\<Longrightarrow> ?x \\<le> Sup ?A\n\ngoal (1 subgoal):\n 1. g (Sup (snd_proj\n             {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n    \\<le> Sup (snd_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "by (metis (mono_tags, lifting) snd_proj_def mem_Collect_eq)"], ["proof (state)\nthis:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n\ngoal (1 subgoal):\n 1. lfp g\n    \\<le> Sup (snd_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "then"], ["proof (chain)\npicking this:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "show gge: \"lfp g \\<le> Sup (snd_proj ?M)\""], ["proof (prove)\nusing this:\n  g (Sup (snd_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n  \\<le> Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n\ngoal (1 subgoal):\n 1. lfp g\n    \\<le> Sup (snd_proj\n                {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})", "by (rule lfp_lowerbound)"], ["proof (state)\nthis:\n  lfp g\n  \\<le> Sup (snd_proj\n              {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp f\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp g\n\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "then"], ["proof (chain)\npicking this:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp f\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp g", "show ?thesis"], ["proof (prove)\nusing this:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp f\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp g\n\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "using supdoes"], ["proof (prove)\nusing this:\n  Sup (fst_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp f\n  Sup (snd_proj {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}) =\n  lfp g\n  R (Sup (fst_proj\n           {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n   (Sup (snd_proj\n          {(A, B). A \\<le> lfp f \\<and> B \\<le> lfp g \\<and> R A B}))\n\ngoal (1 subgoal):\n 1. R (lfp f) (lfp g)", "by simp"], ["proof (state)\nthis:\n  R (lfp f) (lfp g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sup_eq_all: \"(\\<And>A. (A\\<in>M \\<Longrightarrow> f(A)=g(A)))\n  \\<Longrightarrow> Sup {f(A) | A. A\\<in>M} = Sup {g(A) | A. A\\<in>M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A. A \\<in> M \\<Longrightarrow> f A = g A) \\<Longrightarrow>\n    Sup {f A |A. A \\<in> M} = Sup {g A |A. A \\<in> M}", "by metis"], ["", "lemma sup_corr_eq_chain: \"\\<And>M::('a::complete_lattice*'a) set. (\\<forall>(A,B)\\<in>M. f(A)=g(B)) \\<Longrightarrow> (Sup {f(A) | A. A\\<in>fst_proj M} = Sup {g(B) | B. B\\<in>snd_proj M})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>(A, B)\\<in>M. f A = g B \\<Longrightarrow>\n       Sup {f A |A. A \\<in> fst_proj M} = Sup {g B |B. B \\<in> snd_proj M}", "by (metis (mono_tags, lifting) case_prod_conv fst_proj_mem snd_proj_mem)"], ["", "end"]]}